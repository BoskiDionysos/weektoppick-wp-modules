[{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/assets\/js\/importExport.js","ext":"js","size":17784,"mtime":1757324689,"type":"text","content":"\"use strict\";(self.webpackChunkrank_math=self.webpackChunkrank_math||[]).push([[147],{829:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(311),a=n.n(r);function o(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"\",l=arguments.length>5&&void 0!==arguments[5]&&arguments[5];t=t||\"error\",r=r||!1;var i=a()('<div class=\"notice notice-'+t+\" \"+o+' is-dismissible\"><p>'+e+\"<\/p><\/div>\").hide();l||n.siblings(\".notice\").remove(),n.after(i),i.slideDown(),a()(document).trigger(\"wp-updates-notice-added\"),a()(\"html,body\").animate({scrollTop:i.offset().top-50},\"slow\"),r&&setTimeout((function(){i.fadeOut((function(){i.remove()}))}),r)}},698:function(e,t,n){n.r(t),n.d(t,{default:function(){return P}});var r=n(882),a=n(3),o=n(537);function l(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"\",r=rankMath.links[e]||\"\";if(!r)return\"#\";if(!t)return r;var a={utm_source:\"Plugin\",utm_medium:encodeURIComponent(t),utm_campaign:\"WP\"};return r+\"?\"+Object.keys(a).map((function(e){return\"\".concat(e,\"=\").concat(a[e])})).join(\"&\")+n}var i=n(311),s=n.n(i),c=n(179),m=n.n(c),u=n(610),p=n(142),f=n(829);function h(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,l,i=[],s=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(c)throw a}}return i}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return d(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var g=n(85);function w(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,l,i=[],s=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(c)throw a}}return i}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return k(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return k(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function k(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var y={general:(0,a.__)(\"General Settings\",\"rank-math\"),titles:(0,a.__)(\"Titles & Metas\",\"rank-math\"),sitemap:(0,a.__)(\"Sitemap Settings\",\"rank-math\"),\"role-manager\":(0,a.__)(\"Role Manager Settings\",\"rank-math\"),redirections:(0,a.__)(\"Redirections\",\"rank-math\")},b=[{name:\"rank-math-import-form\",title:wp.element.createElement(React.Fragment,null,wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-import\"}),wp.element.createElement(\"span\",{className:\"rank-math-tab-text\"},(0,a.__)(\"Import Settings\",\"rank-math\"))),view:function(){var e=h((0,u.useState)(!1),2),t=e[0],n=e[1],r=new FormData;return r.append(\"import-me\",t),wp.element.createElement(\"div\",{id:\"rank-math-import-form\",className:\"rank-math-export-form field-form\"},wp.element.createElement(\"div\",null,wp.element.createElement(\"label\",{htmlFor:\"import-me\"},wp.element.createElement(\"strong\",null,(0,a.__)(\"Settings File\",\"rank-math\")))),wp.element.createElement(\"div\",null,wp.element.createElement(o.FormFileUpload,{__next40pxDefaultSize:!0,accept:\".json\",onChange:function(e){return n(e.currentTarget.files[0])}},wp.element.createElement(\"span\",{className:\"import-file-button\"},(0,a.__)(\"Choose File\",\"rank-math\")),t&&wp.element.createElement(\"span\",null,t.name)),wp.element.createElement(\"br\",null),wp.element.createElement(\"span\",{className:\"validation-message\"},(0,a.__)(\"Please select a file to import.\",\"rank-math\"))),wp.element.createElement(\"div\",{className:\"description\"},(0,a.__)('Import settings by locating settings file and clicking \"Import settings\".',\"rank-math\")),wp.element.createElement(\"footer\",null,wp.element.createElement(p.Button,{variant:\"primary\",disabled:!1===t,onClick:function(){confirm((0,a.__)(\"Are you sure you want to import settings into Rank Math? Don't worry, your current configuration will be saved as a backup.\",\"rank-math\"))&&m()({method:\"POST\",headers:{},path:\"\/rankmath\/v1\/status\/importSettings\",body:r}).catch((function(e){alert(e.message)})).then((function(e){var t=s()(\".rank-math-breadcrumbs-wrap\");e.error?(0,f.Z)(e.error,\"error\",t):(0,f.Z)(e.success,\"success\",t),n(!1)}))}},(0,a.__)(\"Import\",\"rank-math\"))))}},{name:\"rank-math-export-form\",title:wp.element.createElement(React.Fragment,null,wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-export\"}),wp.element.createElement(\"span\",{className:\"rank-math-tab-text\"},(0,a.__)(\"Export Settings\",\"rank-math\"))),view:function(){var e=w((0,u.useState)(Object.keys(y)),2),t=e[0],n=e[1],r=(0,g.map)((0,g.entries)(y),(function(e){var t=w(e,2);return{id:t[0],label:t[1]}}));return wp.element.createElement(\"div\",{id:\"rank-math-export-form\",className:\"rank-math-export-form field-form\"},wp.element.createElement(p.CheckboxList,{variant:\"default\",value:t,onChange:n,options:r}),wp.element.createElement(\"p\",{className:\"description\"},(0,a.__)(\"Choose the panels to export.\",\"rank-math\")),wp.element.createElement(\"footer\",null,wp.element.createElement(p.Button,{variant:\"primary\",disabled:(0,g.isEmpty)(t),onClick:function(){m()({method:\"POST\",headers:{},path:\"\/rankmath\/v1\/status\/exportSettings\",data:{panels:t}}).catch((function(e){alert(e.message)})).then((function(e){var t=new Blob([e],{type:\"application\/json\"}),n=URL.createObjectURL(t),r=document.createElement(\"a\");r.href=n,r.download=\"rank-math-settings-\".concat((new Date).toISOString().replace(\/[:.]\/g,\"-\"),\".json\"),document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(n)}))}},(0,a.__)(\"Export\",\"rank-math\"))))}}],v=function(){return wp.element.createElement(\"div\",{className:\"import-export-settings\"},wp.element.createElement(\"h2\",null,(0,a.__)(\"Plugin Settings\",\"rank-math\")),wp.element.createElement(\"p\",{className:\"description\"},(0,a.__)(\"Import or export your Rank Math settings. This option is useful for replicating Rank Math settings across multiple websites. \",\"rank-math\"),wp.element.createElement(\"a\",{href:l(\"import-export-settings\",\"Options Panel Import Export Page\"),target:\"_blank\",rel:\"noreferrer\"},(0,a.__)(\"Learn more about the Import\/Export options.\",\"rank-math\"))),wp.element.createElement(\"div\",{className:\"rank-math-box no-padding\"},wp.element.createElement(o.TabPanel,{tabs:b},(function(e){var t=e.view;return wp.element.createElement(\"div\",{className:\"rank-math-box-content\"},wp.element.createElement(t,null))}))))};function _(e,t,n){return s().ajax({url:rankMath.ajaxurl,type:n||\"POST\",dataType:\"json\",data:s().extend(!0,{action:\"rank_math_\"+e,security:rankMath.security},t)})}var E=n(69),S=n(180),x=function e(t,n,r,o,l,i){if(0===n.length){var s=(0,a.__)(\"Import finished.\",\"rank-math\");return(0,S.Z)(s,r,o),void i()}var c=n.shift(),m=\"deactivate\"===c?\"Deactivating plugin\":\"Importing \"+c;l=l||1,\"recalculate\"===c&&(m=(0,a.__)(\"Starting SEO score recalculation\",\"rank-math\")),(0,S.Z)(m,r,o),_(\"import_plugin\",{perform:c,pluginSlug:t,paged:l}).done((function(s){if(l=1,s&&s.page&&s.page<s.total_pages&&(l=s.page+1,n.unshift(c)),\"recalculate\"===c&&s.total_items>0){var m=s.start,u=s.end,p=s.total_items;(0,E.Z)(s.data,r,o,(function(){e(t,n,r,o,l,i)}),m,u,p)}else\"recalculate\"===c&&0===s.total_items&&(s.message=(0,a.__)(\"No posts found with SEO score.\",\"rank-math\")),(0,S.Z)(s.success?s.message:s.error,r,o),e(t,n,r,o,l,i)})).fail((function(a){(0,S.Z)(a.statusText,r,o),e(t,n,r,o,null,i)}))};function O(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,l,i=[],s=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=n.return&&(l=n.return(),Object(l)!==l))return}finally{if(c)throw a}}return i}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return N(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return N(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function N(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var j=function(e){var t=e.slug,n=e.choices,r=e.pluginName,o=e.importablePlugins,l=e.updateViewData;\"redirections\"!==t&&(n.recalculate=(0,a.__)(\"Calculate SEO Scores\",\"rank-math\"));var i=O((0,u.useState)((0,g.keys)(n)),2),c=i[0],m=i[1],h=O((0,u.useState)(!1),2),d=h[0],w=h[1],k=O((0,u.useState)([]),2),y=k[0],b=k[1],v=s()(\".wp-header-end\");return wp.element.createElement(\"div\",{className:\"rank-math-box-content\"},wp.element.createElement(p.CheckboxList,{variant:\"default\",value:c,onChange:m,options:(0,g.map)(n,(function(e,t){return{id:t,label:e}}))}),0!==y.length&&wp.element.createElement(p.TextareaControl,{disable:\"true\",value:y.join(\"\\n\"),className:\"import-progress-area large-text\",rows:\"8\",style:{marginRight:\"20px\",background:\"#eee\"}}),wp.element.createElement(\"footer\",null,wp.element.createElement(p.Button,{variant:\"primary\",onClick:function(){if(confirm((0,a.sprintf)((0,a.__)(\"Are you sure you want to import data from %s?\",\"rank-math\"),r)))if(c.length<1)(0,f.Z)((0,a.__)(\"Select data to import.\",\"rank-math\"),\"error\",v,5e3);else{w(!0);var e=c;e.push(\"deactivate\"),(0,S.Z)(\"Import started...\",y,b),x(t,e,y,b,null,(function(){w(!0),setTimeout((function(){b([])}),1e4)}))}},disabled:d},(0,a.__)(\"Import\",\"rank-math\")),wp.element.createElement(p.Button,{isDestructive:!0,onClick:function(){confirm((0,a.sprintf)((0,a.__)(\"Are you sure you want erase all traces of %s?\",\"rank-math\"),r))&&_(\"clean_plugin\",{pluginSlug:t}).done((function(e){if(e.success){var n=o;delete n[t],l({importablePlugins:n})}(0,f.Z)(e.success?e.message:e.error,e.success?\"success\":\"error\",v,5e3)}))}},(0,a.__)(\"Clean\",\"rank-math\"))))};function A(){return A=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},A.apply(this,arguments)}var C=function(e){var t=e.data,n=e.updateViewData,r=t.importablePlugins,i=(0,g.map)(r,(function(e,t){return{slug:t,name:\"import-plugin-\".concat(t),choices:e.choices,pluginName:e.name,title:wp.element.createElement(React.Fragment,null,wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-import\"}),wp.element.createElement(\"span\",null,e.name))}}));return wp.element.createElement(\"div\",{className:\"import-plugins\"},wp.element.createElement(\"h2\",null,(0,a.__)(\"Other Plugins\",\"rank-math\")),wp.element.createElement(\"p\",{className:\"description\"},(0,a.__)(\"If you were using another plugin to add important SEO information to your website before switching to Rank Math SEO, you can import the settings and data here. \",\"rank-math\"),wp.element.createElement(\"a\",{href:l(\"import-export-settings\",\"Options Panel Import Export Page Other Plugins\"),target:\"_blank\",rel:\"noreferrer\"},(0,a.__)(\"Learn more about the Import\/Export options.\",\"rank-math\"))),wp.element.createElement(\"div\",{className:\"rank-math-box no-padding rank-math-export-form field-form\"},wp.element.createElement(\"div\",{className:\"with-action at-top\"},(0,g.isEmpty)(r)?wp.element.createElement(\"p\",{className:\"empty-notice\"},(0,a.__)(\"No plugin detected with importable data.\",\"rank-math\")):wp.element.createElement(o.TabPanel,{tabs:i},(function(e){return wp.element.createElement(j,A({key:e.slug},e,{importablePlugins:r,updateViewData:n}))})))))},I=function(e){var t=e.data,n=e.updateViewData,r=t.backups,o=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;m()({method:\"POST\",path:\"\/rankmath\/v1\/status\/runBackup\",data:{action:e,key:t}}).catch((function(e){alert(e.message)})).then((function(e){var t=s()(\".wp-header-end\");(0,f.Z)(e.message,e.type,t),!1!==e.backups&&n({backups:e.backups})}))};return wp.element.createElement(\"div\",{className:\"settings-backup\"},wp.element.createElement(p.Button,{variant:\"primary\",className:\"alignright\",onClick:function(){return o(\"create\")}},(0,a.__)(\"Create Backup\",\"rank-math\")),wp.element.createElement(\"h3\",null,(0,a.__)(\"Settings Backup\",\"rank-math\")),wp.element.createElement(\"p\",{className:\"description\"},(0,a.__)(\"Take a backup of your plugin settings in case you wish to restore them in future. Use it as backup before making substantial changes to Rank Math settings. For taking a backup of the SEO data of your content, use the XML Export option.\",\"rank-math\")),wp.element.createElement(\"div\",{className:\"rank-math-settings-backup-form field-form\"},wp.element.createElement(\"div\",{className:\"list-table with-action\"},wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,!(0,g.isEmpty)(r)&&(0,g.map)(r,(function(e,t){return wp.element.createElement(\"tr\",{key:t},wp.element.createElement(\"th\",null,(0,a.sprintf)((0,a.__)(\"Backup: %s\",\"rank-math\"),e)),wp.element.createElement(\"td\",null,wp.element.createElement(p.Button,{size:\"small\",variant:\"secondary\",onClick:function(){confirm((0,a.__)(\"Are you sure you want to restore this backup? Your current configuration will be overwritten.\",\"rank-math\"))&&o(\"restore\",t)}},(0,a.__)(\"Restore\",\"rank-math\")),wp.element.createElement(p.Button,{size:\"small\",isDestructive:!0,onClick:function(){confirm((0,a.__)(\"Are you sure you want to delete this backup?\",\"rank-math\"))&&o(\"delete\",t)}},(0,a.__)(\"Delete\",\"rank-math\"))))}))))),(0,g.isEmpty)(r)&&wp.element.createElement(\"p\",{id:\"rank-math-no-backup-message\"},(0,a.__)(\"There is no backup.\",\"rank-math\"))))},P=function(e){return wp.element.createElement(\"div\",{className:\"rank-math-import-export\"},wp.element.createElement(v,null),(0,r.applyFilters)(\"rank_math_status_import_export_tabs\",\"\",e),wp.element.createElement(C,e),wp.element.createElement(I,e))}},180:function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return r(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}t.Z=function(e,t,r){var a=new Date,o=\"[\"+(10>a.getHours()?\"0\":\"\")+a.getHours()+\":\"+(10>a.getMinutes()?\"0\":\"\")+a.getMinutes()+\":\"+(10>a.getSeconds()?\"0\":\"\")+a.getSeconds()+\"] \"+e;t.push(o),r(n(t))}},69:function(e,t,n){var r=n(311),a=n.n(r),o=n(85),l=n(3),i=n(813),s=n(180),c=n(882),m=[];t.Z=function(e,t,n,r,u,p,f){var h={};if(\"complete\"!==e)return new Promise((function(t){(0,o.forEach)(e,(function(e,t){if(-1===m.indexOf(t)){m.push(t);var n=new i.ResultManager,r=wp.i18n,a=new i.Paper;a.setTitle(e.title),a.setDescription(e.description),a.setText(e.content),a.setKeyword(e.keyword),a.setKeywords(e.keywords),a.setPermalink(e.url),a.setUrl(e.url),a.setSchema(e.schemas),e.thumbnail&&a.setThumbnail(e.thumbnail),a.setContentAI(e.hasContentAi);var l=function(e){var t=rankMath.assessor.researchesTests;return t=(0,o.difference)(t,[\"keywordNotUsed\"]),e.isProduct?(t=(0,o.difference)(t,[\"keywordInSubheadings\",\"linksHasExternals\",\"linksNotAllExternals\",\"linksHasInternal\",\"titleSentiment\",\"titleHasNumber\",\"contentHasTOC\"]),(0,c.applyFilters)(\"rank_math_update_score_researches_tests\",t,e)):t}(e);new i.Analyzer({i18n:r,analysis:l}).analyzeSome(l,a).then((function(r){n.update(a.getKeyword(),r,!0);var o=n.getScore(a.getKeyword());e.isProduct&&(o=e.isReviewEnabled?o+1:o,o=e.hasProductSchema?o+1:o),h[t]=o}))}})),t()})).then((function(){a().ajax({url:rankMath.api.root+\"rankmath\/v1\/updateSeoScore\",method:\"POST\",beforeSend:function(e){e.setRequestHeader(\"X-WP-Nonce\",rankMath.restNonce)},data:{action:\"rank_math_update_seo_score\",postScores:h},success:function(){(0,s.Z)((0,l.sprintf)((0,l.__)(\"Calculating SEO score for posts %1$s - %2$s out of %3$s\",\"rank-math\"),u,p,f),t,n),r()},error:function(e){(0,s.Z)(e.statusText,t,n)}})}));r()}}}]);"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/assets\/js\/databaseTools.js","ext":"js","size":7225,"mtime":1757324689,"type":"text","content":"\"use strict\";(self.webpackChunkrank_math=self.webpackChunkrank_math||[]).push([[43],{829:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(311),a=n.n(r);function o(e,t,n,r){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:\"\",s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];t=t||\"error\",r=r||!1;var i=a()('<div class=\"notice notice-'+t+\" \"+o+' is-dismissible\"><p>'+e+\"<\/p><\/div>\").hide();s||n.siblings(\".notice\").remove(),n.after(i),i.slideDown(),a()(document).trigger(\"wp-updates-notice-added\"),a()(\"html,body\").animate({scrollTop:i.offset().top-50},\"slow\"),r&&setTimeout((function(){i.fadeOut((function(){i.remove()}))}),r)}},766:function(e,t,n){n.r(t),n.d(t,{default:function(){return w}});var r=n(85),a=n(3),o=n(610),s=n(142),i=n(311),l=n.n(i),c=n(829),u=n(180),f=n(69);function m(e){return m=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},m(e)}var d=rankMath.batchSize,p=0,h=function(e,t,n,o){0===p&&(0,u.Z)((0,a.__)(\"Starting SEO score recalculation\",\"rank-math\"),t,n);var s=(0,r.isUndefined)(o.offset)?0:o.offset,i=p+1,l=(0,r.keys)(e).length+s,c=!(0,r.isUndefined)(o.update_all_scores)&&o.update_all_scores?rankMath.totalPosts:rankMath.totalPostsWithoutScore;(0,f.Z)(e,t,n,(function(){(p+=d)>=c?(0,u.Z)((0,a.__)(\"The SEO Scores have been recalculated successfully!\",\"rank-math\"),t,n):(o.offset=p,y(\"update_seo_score\",t,n,o))}),i,l,c)},y=function(e,t,n,r){var o=l()(\".wp-header-end\");l().ajax({url:rankMath.api.root+\"rankmath\/v1\/toolsAction\",method:\"POST\",beforeSend:function(e){e.setRequestHeader(\"X-WP-Nonce\",rankMath.restNonce)},data:{action:e,args:r}}).fail((function(e){e&&(e.responseJSON&&e.responseJSON.message?(0,c.Z)(e.responseJSON.message,\"error\",o):(0,c.Z)(e.statusText,\"error\",o))})).done((function(s){if(s){if(\"update_seo_score\"===e)return void h(s,t,n,r);if(\"string\"==typeof s)return void(0,c.Z)(s,\"success\",o,!1);if(\"object\"===m(s)&&s.status&&s.message)return void(0,c.Z)(s.message,s.status,o,!1)}(0,c.Z)((0,a.__)(\"Something went wrong. Please try again later.\",\"rank-math\"),\"error\",o)}))};function b(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,s,i=[],l=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=o.call(n)).done)&&(i.push(r.value),i.length!==t);l=!0);}catch(e){c=!0,a=e}finally{try{if(!l&&null!=n.return&&(s=n.return(),Object(s)!==s))return}finally{if(c)throw a}}return i}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return g(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return g(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function g(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var w=function(e){var t=e.data.tools,n=b((0,o.useState)([]),2),i=n[0],l=n[1],c=b((0,o.useState)(!0),2),u=c[0],f=c[1];return wp.element.createElement(\"table\",{className:\"rank-math-status-table striped rank-math-tools-table widefat rank-math-box\"},wp.element.createElement(\"tbody\",{className:\"tools\"},(0,r.map)(t,(function(e,t){var n=e.title,r=e.description,o=e.button_text,c=e.confirm_text;return wp.element.createElement(\"tr\",{key:t,className:t},wp.element.createElement(\"th\",null,wp.element.createElement(\"h4\",{className:\"name\"},n),wp.element.createElement(\"p\",{className:\"description\",dangerouslySetInnerHTML:{__html:r}})),wp.element.createElement(\"td\",{className:\"run-tool\"},wp.element.createElement(s.Button,{isDestructive:!0,size:\"large\",className:\"tools-action\",onClick:function(){if(c&&!confirm(c))return!1;y(t,i,l,u?{update_all_scores:!0}:{})}},o),\"update_seo_score\"===t&&rankMath.totalPostsWithoutScore>0&&wp.element.createElement(\"div\",{className:\"update_all_scores\"},wp.element.createElement(s.CheckboxControl,{__nextHasNoMarginBottom:!0,label:(0,a.__)(\"Include posts\/pages where the score is already set\",\"rank-math\"),checked:u,onChange:f}))))})),0!==i.length&&wp.element.createElement(\"tr\",{key:\"update-score-logger\"},wp.element.createElement(\"td\",{colSpan:2},wp.element.createElement(s.TextareaControl,{disable:\"true\",value:i.join(\"\\n\"),className:\"import-progress-area large-text\",rows:\"8\",style:{marginRight:\"20px\",background:\"#eee\"}})))))}},180:function(e,t){function n(e){return function(e){if(Array.isArray(e))return r(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return r(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}t.Z=function(e,t,r){var a=new Date,o=\"[\"+(10>a.getHours()?\"0\":\"\")+a.getHours()+\":\"+(10>a.getMinutes()?\"0\":\"\")+a.getMinutes()+\":\"+(10>a.getSeconds()?\"0\":\"\")+a.getSeconds()+\"] \"+e;t.push(o),r(n(t))}},69:function(e,t,n){var r=n(311),a=n.n(r),o=n(85),s=n(3),i=n(813),l=n(180),c=n(882),u=[];t.Z=function(e,t,n,r,f,m,d){var p={};if(\"complete\"!==e)return new Promise((function(t){(0,o.forEach)(e,(function(e,t){if(-1===u.indexOf(t)){u.push(t);var n=new i.ResultManager,r=wp.i18n,a=new i.Paper;a.setTitle(e.title),a.setDescription(e.description),a.setText(e.content),a.setKeyword(e.keyword),a.setKeywords(e.keywords),a.setPermalink(e.url),a.setUrl(e.url),a.setSchema(e.schemas),e.thumbnail&&a.setThumbnail(e.thumbnail),a.setContentAI(e.hasContentAi);var s=function(e){var t=rankMath.assessor.researchesTests;return t=(0,o.difference)(t,[\"keywordNotUsed\"]),e.isProduct?(t=(0,o.difference)(t,[\"keywordInSubheadings\",\"linksHasExternals\",\"linksNotAllExternals\",\"linksHasInternal\",\"titleSentiment\",\"titleHasNumber\",\"contentHasTOC\"]),(0,c.applyFilters)(\"rank_math_update_score_researches_tests\",t,e)):t}(e);new i.Analyzer({i18n:r,analysis:s}).analyzeSome(s,a).then((function(r){n.update(a.getKeyword(),r,!0);var o=n.getScore(a.getKeyword());e.isProduct&&(o=e.isReviewEnabled?o+1:o,o=e.hasProductSchema?o+1:o),p[t]=o}))}})),t()})).then((function(){a().ajax({url:rankMath.api.root+\"rankmath\/v1\/updateSeoScore\",method:\"POST\",beforeSend:function(e){e.setRequestHeader(\"X-WP-Nonce\",rankMath.restNonce)},data:{action:\"rank_math_update_seo_score\",postScores:p},success:function(){(0,l.Z)((0,s.sprintf)((0,s.__)(\"Calculating SEO score for posts %1$s - %2$s out of %3$s\",\"rank-math\"),f,m,d),t,n),r()},error:function(e){(0,l.Z)(e.statusText,t,n)}})}));r()}}}]);"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/assets\/js\/versionControl.js","ext":"js","size":27979,"mtime":1757324689,"type":"text","content":"<<<<<<< Updated upstream\n\"use strict\";(self.webpackChunkrank_math=self.webpackChunkrank_math||[]).push([[\"versionControl\"],{\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/AutoUpdatePanel.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\"),r=n(\"@rank-math\/components\"),l=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Footer.js\"),o=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\");function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}t.default=function(e){var t=e.data,n=e.updateViewData,i=t.autoUpdate,c=t.updateNotificationEmail,u=t.isPluginUpdateDisabled,m=t.rollbackVersion;return wp.element.createElement(\"div\",{className:\"rank-math-auto-update-form field-form rank-math-box\"},wp.element.createElement(o.default,{title:(0,a.__)(\"Auto Update\",\"rank-math\"),description:u?(0,a.__)(\"You cannot turn on auto-updates to automatically update to stable versions of Rank Math as soon as they are released, because site wide plugins auto-update option is disabled on your site.\",\"rank-math\"):(0,a.__)(\"Turn on auto-updates to automatically update to stable versions of Rank Math as soon as they are released. The beta versions of Rank Math as soon as they are released. The beta versions will never install automatically.\",\"rank-math\")}),!u&&wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"enable_auto_update\"},(0,a.__)(\"Auto Update Plugin\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(r.ToggleControl,{id:\"enable_auto_update\",checked:i,onChange:function(e){t.autoUpdate=e,n(t)}}))))),wp.element.createElement(\"div\",{id:\"control_update_notification_email\"},wp.element.createElement(\"p\",null,(0,a.__)(\"When auto-updates are turned off, you can enable update notifications, to send an email to the site administrator when an update is available for Rank Math.\",\"rank-math\")),wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"enable_update_notification_email\"},(0,a.__)(\"Update Notification Email\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(r.ToggleControl,{id:\"enable_update_notification_email\",checked:c,onChange:function(e){t.updateNotificationEmail=e,n(t)}})))))),!u&&m&&wp.element.createElement(r.Notice,{variant:\"alt\",status:\"warning\"},wp.element.createElement(\"p\",null,(0,a.__)(\"Rank Math will not auto-update because you have rolled back to a previous version. Update to the latest version manually to make this option work again.\",\"rank-math\"))),wp.element.createElement(l.default,s({panel:\"auto_update\"},t)))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/BetaOptInPanel.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\"),r=n(\"@rank-math\/components\"),l=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Footer.js\"),o=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\");function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(this,arguments)}t.default=function(e){var t=e.data,n=e.updateViewData,i=t.betaOptin,c=t.isPluginUpdateDisabled;return wp.element.createElement(\"div\",{className:\"rank-math-beta-optin-form field-form rank-math-box\"},wp.element.createElement(o.default,{title:(0,a.__)(\"Beta Opt-in\",\"rank-math\"),description:c?(0,a.__)(\"You cannot turn on the Beta Tester feature because site wide plugins auto-update option is disabled on your site.\",\"rank-math\"):(0,a.__)(\"You can take part in shaping Rank Math by test-driving the newest features and letting us know what you think. Turn on the Beta Tester feature to get notified about new beta releases. The beta version will not install automatically and you always have the option to ignore it.\",\"rank-math\"),warning:c?\"\":(0,a.__)(\"It is not recommended to use the beta version on live production sites.\",\"rank-math\")}),!c&&wp.element.createElement(React.Fragment,null,wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"beta_tester\"},(0,a.__)(\"Beta Tester\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(r.ToggleControl,{id:\"beta_tester\",checked:i,onChange:function(e){t.betaOptin=e,n(t)}}))))),wp.element.createElement(l.default,s({panel:\"beta_optin\"},t))))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Footer.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\"),r=n(\"@wordpress\/element\"),l=n(\"@wordpress\/api-fetch\"),o=n.n(l),s=n(\"@rank-math\/components\");function i(e){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i(e)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||\"default\");if(\"object\"!==i(a))return a;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===i(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var a,r,l,o,s=[],i=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(a=l.call(n)).done)&&(s.push(a.value),s.length!==t);i=!0);}catch(e){c=!0,r=e}finally{try{if(!i&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(c)throw r}}return s}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return d(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}t.default=function(e){var t=p((0,r.useState)((0,a.__)(\"Save Changes\",\"rank-math\")),2),n=t[0],l=t[1],i=p((0,r.useState)(!1),2),c=i[0],m=i[1];return wp.element.createElement(\"footer\",null,wp.element.createElement(s.Button,{type:\"submit\",variant:\"primary\",size:\"xlarge\",disabled:c,onClick:function(){l((0,a.__)(\"Saving\u2026\",\"rank-math\")),m(!0),o()({method:\"POST\",path:\"\/rankmath\/v1\/status\/updateViewData\",data:u({},e)}).catch((function(e){console.error(e.message),l((0,a.__)(\"Failed! Try again\",\"rank-math\"))})).then((function(e){l(e?(0,a.__)(\"Saved\",\"rank-math\"):(0,a.__)(\"Failed! Try again\",\"rank-math\"))})).finally((function(){setTimeout((function(){m(!1),l((0,a.__)(\"Save Changes\",\"rank-math\"))}),1e3)}))}},n))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\");t.default=function(e){var t=e.title,n=e.description,r=e.warning,l=void 0===r?\"\":r;return wp.element.createElement(React.Fragment,null,wp.element.createElement(\"header\",null,wp.element.createElement(\"h3\",null,t)),wp.element.createElement(\"p\",null,n),l&&wp.element.createElement(\"p\",{className:\"description warning\"},wp.element.createElement(\"strong\",null,wp.element.createElement(\"span\",{className:\"warning\"},(0,a.__)(\"Warning: \",\"rank-math\")),l)))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/VersionControlPanel.js\":function(e,t,n){n.r(t);var a=n(\"lodash\"),r=n(\"@wordpress\/i18n\"),l=n(\"@wordpress\/element\"),o=n(\"@rank-math\/components\"),s=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\");function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var a,r,l,o,s=[],i=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(a=l.call(n)).done)&&(s.push(a.value),s.length!==t);i=!0);}catch(e){c=!0,r=e}finally{try{if(!i&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(c)throw r}}return s}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return c(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}t.default=function(e){var t=e.data,n=t.latestVersion,c=t.isRollbackVersion,u=t.isPluginUpdateDisabled,m=t.availableVersions,p=t.updateCoreUrl,d=t.rollbackNonce,f=rankMath.version,h=i((0,l.useState)(m[1]),2),b=h[0],w=h[1],v=i((0,l.useState)(!1),2),y=v[0],_=v[1],k=(0,a.reduce)(m,(function(e,t){return e[t]=t,e}),{});return wp.element.createElement(\"form\",{className:\"rank-math-rollback-form field-form rank-math-box\",method:\"post\",action:\"\"},wp.element.createElement(s.default,{title:(0,r.__)(\"Rollback to Previous Version\",\"rank-math\"),description:(0,r.__)(\"If you are facing issues after an update, you can reinstall a previous version with this tool.\",\"rank-math\"),warning:(0,r.__)(\"Previous versions may not be secure or stable. Proceed with caution and always create a backup.\",\"rank-math\")}),wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"your-verions\"},(0,r.__)(\"Your Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(\"strong\",null,f),c&&wp.element.createElement(React.Fragment,null,wp.element.createElement(\"br\",null),wp.element.createElement(\"span\",{className:\"rollback-version-label\"},(0,r.__)(\"Rolled Back Version: \",\"rank-math\")),(0,r.__)(\"Auto updates will not work, please update the plugin manually.\",\"rank-math\")),f===n?wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"You are using the latest version of the plugin.\",\"rank-math\")):wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"This is the version you are using on this site.\",\"rank-math\")))),f!==n&&wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"latest-stable\"},(0,r.__)(\"Latest Stable Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(\"strong\",null,n),u&&f<n&&wp.element.createElement(\"a\",{href:p,className:\"update-link\"},(0,r.__)(\"Update Now\",\"rank-math\")),wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"This is the latest version of the plugin.\",\"rank-math\")))),wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"rollback_version\"},(0,r.__)(\"Rollback Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(o.SelectControl,{variant:\"default\",id:\"rm_rollback_version\",name:\"rm_rollback_version\",value:b,options:k,disabledOptions:[f],onChange:function(e){return w(e)}}),wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"Roll back to this version.\",\"rank-math\")))))),wp.element.createElement(\"footer\",null,wp.element.createElement(o.TextControl,{type:\"hidden\",name:\"_wpnonce\",value:d}),wp.element.createElement(o.Button,{type:\"submit\",variant:\"primary\",size:\"xlarge\",id:\"rm-rollback-button\",onClick:function(){return _(!0)}},(0,r.__)(\"Install Version \",\"rank-math\"),b),y&&wp.element.createElement(\"div\",{className:\"alignright rollback-loading-indicator\"},wp.element.createElement(\"span\",{className:\"loading-indicator-text\"},(0,r.__)(\"Reinstalling, please wait\u2026\",\"rank-math\")),wp.element.createElement(\"span\",{className:\"spinner is-active\"}))))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/index.js\":function(e,t,n){n.r(t);var a=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/AutoUpdatePanel.js\"),r=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/BetaOptInPanel.js\"),l=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/VersionControlPanel.js\");t.default=function(e){return wp.element.createElement(React.Fragment,null,wp.element.createElement(l.default,e),wp.element.createElement(r.default,e),wp.element.createElement(a.default,e))}}}]);\n=======\n\"use strict\";(self.webpackChunkrank_math=self.webpackChunkrank_math||[]).push([[\"versionControl\"],{\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/AutoUpdatePanel.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\"),r=n(\"@rank-math\/components\"),l=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Footer.js\"),o=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\");function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)({}).hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(null,arguments)}t.default=function(e){var t=e.data,n=e.updateViewData,i=t.autoUpdate,c=t.updateNotificationEmail,u=t.isPluginUpdateDisabled,m=t.rollbackVersion;return wp.element.createElement(\"div\",{className:\"rank-math-auto-update-form field-form rank-math-box\"},wp.element.createElement(o.default,{title:(0,a.__)(\"Auto Update\",\"rank-math\"),description:u?(0,a.__)(\"You cannot turn on auto-updates to automatically update to stable versions of Rank Math as soon as they are released, because site wide plugins auto-update option is disabled on your site.\",\"rank-math\"):(0,a.__)(\"Turn on auto-updates to automatically update to stable versions of Rank Math as soon as they are released. The beta versions of Rank Math as soon as they are released. The beta versions will never install automatically.\",\"rank-math\")}),!u&&wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"enable_auto_update\"},(0,a.__)(\"Auto Update Plugin\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(r.ToggleControl,{id:\"enable_auto_update\",checked:i,onChange:function(e){t.autoUpdate=e,n(t)}}))))),wp.element.createElement(\"div\",{id:\"control_update_notification_email\"},wp.element.createElement(\"p\",null,(0,a.__)(\"When auto-updates are turned off, you can enable update notifications, to send an email to the site administrator when an update is available for Rank Math.\",\"rank-math\")),wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"enable_update_notification_email\"},(0,a.__)(\"Update Notification Email\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(r.ToggleControl,{id:\"enable_update_notification_email\",checked:c,onChange:function(e){t.updateNotificationEmail=e,n(t)}})))))),!u&&m&&wp.element.createElement(r.Notice,{variant:\"alt\",status:\"warning\"},wp.element.createElement(\"p\",null,(0,a.__)(\"Rank Math will not auto-update because you have rolled back to a previous version. Update to the latest version manually to make this option work again.\",\"rank-math\"))),wp.element.createElement(l.default,s({panel:\"auto_update\"},t)))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/BetaOptInPanel.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\"),r=n(\"@rank-math\/components\"),l=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Footer.js\"),o=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\");function s(){return s=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)({}).hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},s.apply(null,arguments)}t.default=function(e){var t=e.data,n=e.updateViewData,i=t.betaOptin,c=t.isPluginUpdateDisabled;return wp.element.createElement(\"div\",{className:\"rank-math-beta-optin-form field-form rank-math-box\"},wp.element.createElement(o.default,{title:(0,a.__)(\"Beta Opt-in\",\"rank-math\"),description:c?(0,a.__)(\"You cannot turn on the Beta Tester feature because site wide plugins auto-update option is disabled on your site.\",\"rank-math\"):(0,a.__)(\"You can take part in shaping Rank Math by test-driving the newest features and letting us know what you think. Turn on the Beta Tester feature to get notified about new beta releases. The beta version will not install automatically and you always have the option to ignore it.\",\"rank-math\"),warning:c?\"\":(0,a.__)(\"It is not recommended to use the beta version on live production sites.\",\"rank-math\")}),!c&&wp.element.createElement(React.Fragment,null,wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"beta_tester\"},(0,a.__)(\"Beta Tester\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(r.ToggleControl,{id:\"beta_tester\",checked:i,onChange:function(e){t.betaOptin=e,n(t)}}))))),wp.element.createElement(l.default,s({panel:\"beta_optin\"},t))))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Footer.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\"),r=n(\"@wordpress\/element\"),l=n(\"@wordpress\/api-fetch\"),o=n.n(l),s=n(\"@rank-math\/components\");function i(e){return i=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},i(e)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!=i(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||\"default\");if(\"object\"!=i(a))return a;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==i(t)?t:t+\"\"}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var a,r,l,o,s=[],i=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(a=l.call(n)).done)&&(s.push(a.value),s.length!==t);i=!0);}catch(e){c=!0,r=e}finally{try{if(!i&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(c)throw r}}return s}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return d(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n)?d(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}t.default=function(e){var t=p((0,r.useState)((0,a.__)(\"Save Changes\",\"rank-math\")),2),n=t[0],l=t[1],i=p((0,r.useState)(!1),2),c=i[0],m=i[1];return wp.element.createElement(\"footer\",null,wp.element.createElement(s.Button,{type:\"submit\",variant:\"primary\",size:\"xlarge\",disabled:c,onClick:function(){l((0,a.__)(\"Saving\u2026\",\"rank-math\")),m(!0),o()({method:\"POST\",path:\"\/rankmath\/v1\/status\/updateViewData\",data:u({},e)}).catch((function(e){console.error(e.message),l((0,a.__)(\"Failed! Try again\",\"rank-math\"))})).then((function(e){l(e?(0,a.__)(\"Saved\",\"rank-math\"):(0,a.__)(\"Failed! Try again\",\"rank-math\"))})).finally((function(){setTimeout((function(){m(!1),l((0,a.__)(\"Save Changes\",\"rank-math\"))}),1e3)}))}},n))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\":function(e,t,n){n.r(t);var a=n(\"@wordpress\/i18n\");t.default=function(e){var t=e.title,n=e.description,r=e.warning,l=void 0===r?\"\":r;return wp.element.createElement(React.Fragment,null,wp.element.createElement(\"header\",null,wp.element.createElement(\"h3\",null,t)),wp.element.createElement(\"p\",null,n),l&&wp.element.createElement(\"p\",{className:\"description warning\"},wp.element.createElement(\"strong\",null,wp.element.createElement(\"span\",{className:\"warning\"},(0,a.__)(\"Warning: \",\"rank-math\")),l)))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/VersionControlPanel.js\":function(e,t,n){n.r(t);var a=n(\"lodash\"),r=n(\"@wordpress\/i18n\"),l=n(\"@wordpress\/element\"),o=n(\"@rank-math\/components\"),s=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/Header.js\");function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var a,r,l,o,s=[],i=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(a=l.call(n)).done)&&(s.push(a.value),s.length!==t);i=!0);}catch(e){c=!0,r=e}finally{try{if(!i&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(c)throw r}}return s}}(e,t)||function(e,t){if(e){if(\"string\"==typeof e)return c(e,t);var n={}.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(e):\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n)?c(e,t):void 0}}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}t.default=function(e){var t=e.data,n=t.latestVersion,c=t.isRollbackVersion,u=t.isPluginUpdateDisabled,m=t.availableVersions,p=t.updateCoreUrl,d=t.rollbackNonce,f=rankMath.version,h=i((0,l.useState)(m[1]),2),b=h[0],w=h[1],v=i((0,l.useState)(!1),2),y=v[0],_=v[1],k=(0,a.reduce)(m,(function(e,t){return e[t]=t,e}),{});return wp.element.createElement(\"form\",{className:\"rank-math-rollback-form field-form rank-math-box\",method:\"post\",action:\"\"},wp.element.createElement(s.default,{title:(0,r.__)(\"Rollback to Previous Version\",\"rank-math\"),description:(0,r.__)(\"If you are facing issues after an update, you can reinstall a previous version with this tool.\",\"rank-math\"),warning:(0,r.__)(\"Previous versions may not be secure or stable. Proceed with caution and always create a backup.\",\"rank-math\")}),wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"your-verions\"},(0,r.__)(\"Your Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(\"strong\",null,f),c&&wp.element.createElement(React.Fragment,null,wp.element.createElement(\"br\",null),wp.element.createElement(\"span\",{className:\"rollback-version-label\"},(0,r.__)(\"Rolled Back Version: \",\"rank-math\")),(0,r.__)(\"Auto updates will not work, please update the plugin manually.\",\"rank-math\")),f===n?wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"You are using the latest version of the plugin.\",\"rank-math\")):wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"This is the version you are using on this site.\",\"rank-math\")))),f!==n&&wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"latest-stable\"},(0,r.__)(\"Latest Stable Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(\"strong\",null,n),u&&f<n&&wp.element.createElement(\"a\",{href:p,className:\"update-link\"},(0,r.__)(\"Update Now\",\"rank-math\")),wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"This is the latest version of the plugin.\",\"rank-math\")))),wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"rollback_version\"},(0,r.__)(\"Rollback Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(o.SelectControl,{variant:\"default\",id:\"rm_rollback_version\",name:\"rm_rollback_version\",value:b,options:k,disabledOptions:[f],onChange:function(e){return w(e)}}),wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"Roll back to this version.\",\"rank-math\")))))),wp.element.createElement(\"footer\",null,wp.element.createElement(o.TextControl,{type:\"hidden\",name:\"_wpnonce\",value:d}),wp.element.createElement(o.Button,{type:\"submit\",variant:\"primary\",size:\"xlarge\",id:\"rm-rollback-button\",onClick:function(){return _(!0)}},(0,r.__)(\"Install Version \",\"rank-math\"),b),y&&wp.element.createElement(\"div\",{className:\"alignright rollback-loading-indicator\"},wp.element.createElement(\"span\",{className:\"loading-indicator-text\"},(0,r.__)(\"Reinstalling, please wait\u2026\",\"rank-math\")),wp.element.createElement(\"span\",{className:\"spinner is-active\"}))))}},\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/index.js\":function(e,t,n){n.r(t);var a=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/AutoUpdatePanel.js\"),r=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/BetaOptInPanel.js\"),l=n(\".\/includes\/modules\/status\/assets\/src\/tabs\/version-control\/VersionControlPanel.js\");t.default=function(e){return wp.element.createElement(React.Fragment,null,wp.element.createElement(l.default,e),wp.element.createElement(r.default,e),wp.element.createElement(a.default,e))}}}]);\n>>>>>>> Stashed changes\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/assets\/js\/systemStatus.js","ext":"js","size":5343,"mtime":1757324689,"type":"text","content":"\"use strict\";(self.webpackChunkrank_math=self.webpackChunkrank_math||[]).push([[532],{360:function(e,t,r){r.r(t),r.d(t,{default:function(){return h}});var n=r(3),a=r(610),l=r(749),o=r(142);function c(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,a,l,o,c=[],u=!0,i=!1;try{if(l=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=l.call(r)).done)&&(c.push(n.value),c.length!==t);u=!0);}catch(e){i=!0,a=e}finally{try{if(!u&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(i)throw a}}return c}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return u(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===r&&e.constructor&&(r=e.constructor.name);if(\"Map\"===r||\"Set\"===r)return Array.from(e);if(\"Arguments\"===r||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(r))return u(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var i=function(e){var t=e.errorLog,r=e.errorLogPath,u=e.errorLogSize,i=e.errorLogError,m=c((0,a.useState)(!1),2),s=m[0],p=m[1],f=(0,l.useCopyToClipboard)(t,(function(){p(!0),setTimeout((function(){p(!1)}),2e3)}));return(0,a.useEffect)((function(){var e=document.getElementById(\"rank-math-status-error-log\");e&&(e.scrollTop=e.scrollHeight)}),[]),wp.element.createElement(\"div\",{className:\"rank-math-system-status rank-math-box\"},wp.element.createElement(\"header\",null,wp.element.createElement(\"h3\",null,(0,n.__)(\"Error Log\",\"rank-math\"))),wp.element.createElement(\"p\",{className:\"description\",dangerouslySetInnerHTML:{__html:(0,n.sprintf)((0,n.__)(\"If you have %s enabled, errors will be stored in a log file. Here you can find the last 100 lines in reversed order so that you or the Rank Math support team can view it easily. The file cannot be edited here.\",\"rank-math\"),'<a href=\"https:\/\/wordpress.org\/support\/article\/debugging-in-wordpress\/\" target=_blank\" >WP_DEBUG_LOG<\/a>')}}),i&&wp.element.createElement(\"strong\",{className:\"error-log-cannot-display\"},i),!i&&wp.element.createElement(React.Fragment,null,wp.element.createElement(\"div\",{className:\"copy-button-wrapper\"},wp.element.createElement(o.Button,{ref:f},(0,n.__)(\"Copy Log to Clipboard\",\"rank-math\")),s&&wp.element.createElement(\"span\",{className:\"success\"},(0,n.__)(\"Copied!\",\"rank-math\"))),wp.element.createElement(\"div\",{id:\"error-log-wrapper\"},wp.element.createElement(o.TextareaControl,{rows:16,cols:80,value:t,variant:\"code-box\",className:\"code\",id:\"rank-math-status-error-log\",disabled:!0})),t&&wp.element.createElement(\"div\",{className:\"error-log-info\"},wp.element.createElement(\"code\",null,r),wp.element.createElement(\"em\",null,\"\u00a0(\",u,\")\"))))},m=r(85),s=r(537),p=function(e){return wp.element.createElement(s.Panel,{className:\"rank-math-panel\"},(0,m.map)(e,(function(e,t){var r=e.label,n=e.fields,a=e.show_count;if(!(0,m.isEmpty)(n)){var l=\"(\".concat((0,m.entries)(n).length,\")\"),c=\"\".concat(r,\" \").concat(a?l:\"\");return wp.element.createElement(s.PanelBody,{key:t,title:c,initialOpen:!1},wp.element.createElement(s.PanelRow,null,wp.element.createElement(o.Table,{size:\"small\",fields:(0,m.map)(n,(function(e){return[e.label,e.value]})),addHeader:!1})))}})))};function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,a,l,o,c=[],u=!0,i=!1;try{if(l=(r=r.call(e)).next,0===t){if(Object(r)!==r)return;u=!1}else for(;!(u=(n=l.call(r)).done)&&(c.push(n.value),c.length!==t);u=!0);}catch(e){i=!0,a=e}finally{try{if(!u&&null!=r.return&&(o=r.return(),Object(o)!==o))return}finally{if(i)throw a}}return c}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return d(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===r&&e.constructor&&(r=e.constructor.name);if(\"Map\"===r||\"Set\"===r)return Array.from(e);if(\"Arguments\"===r||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(r))return d(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var y=function(e){var t=e.systemInfo,r=e.systemInfoCopy,c=f((0,a.useState)(!1),2),u=c[0],i=c[1],m=(0,l.useCopyToClipboard)(r,(function(){i(!0),setTimeout((function(){i(!1)}),3e3)}));return wp.element.createElement(\"div\",{className:\"rank-math-system-status rank-math-box\"},wp.element.createElement(\"header\",null,wp.element.createElement(\"h3\",null,(0,n.__)(\"System Info\",\"rank-math\"))),wp.element.createElement(\"div\",{className:\"copy-button-wrapper\"},wp.element.createElement(o.Button,{ref:m},(0,n.__)(\"Copy System Info to Clipboard\",\"rank-math\")),u&&wp.element.createElement(\"span\",{className:\"success\"},(0,n.__)(\"Copied!\",\"rank-math\"))),wp.element.createElement(p,t))},h=function(e){return wp.element.createElement(React.Fragment,null,wp.element.createElement(y,e.data),wp.element.createElement(i,e.data))}}}]);"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/assets\/js\/status.js","ext":"js","size":35190,"mtime":1757324689,"type":"text","content":"!function(){\"use strict\";var e,t,n={674:function(e,t,n){n.r(t),n.d(t,{default:function(){return S}});var r=n(3),a=n(142),o=n(610),i=n(179),l=n.n(i);function u(e){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},u(e)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==u(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==u(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===u(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,i,l=[],u=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){c=!0,a=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(c)throw a}}return l}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return f(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var h=function(e){var t=p((0,o.useState)((0,r.__)(\"Save Changes\",\"rank-math\")),2),n=t[0],i=t[1],u=p((0,o.useState)(!1),2),c=u[0],m=u[1];return wp.element.createElement(\"footer\",null,wp.element.createElement(a.Button,{type:\"submit\",variant:\"primary\",size:\"xlarge\",disabled:c,onClick:function(){i((0,r.__)(\"Saving\u2026\",\"rank-math\")),m(!0),l()({method:\"POST\",path:\"\/rankmath\/v1\/status\/updateViewData\",data:s({},e)}).catch((function(e){console.error(e.message),i((0,r.__)(\"Failed! Try again\",\"rank-math\"))})).then((function(e){i(e?(0,r.__)(\"Saved\",\"rank-math\"):(0,r.__)(\"Failed! Try again\",\"rank-math\"))})).finally((function(){setTimeout((function(){m(!1),i((0,r.__)(\"Save Changes\",\"rank-math\"))}),1e3)}))}},n))},d=function(e){var t=e.title,n=e.description,a=e.warning,o=void 0===a?\"\":a;return wp.element.createElement(React.Fragment,null,wp.element.createElement(\"header\",null,wp.element.createElement(\"h3\",null,t)),wp.element.createElement(\"p\",null,n),o&&wp.element.createElement(\"p\",{className:\"description warning\"},wp.element.createElement(\"strong\",null,wp.element.createElement(\"span\",{className:\"warning\"},(0,r.__)(\"Warning: \",\"rank-math\")),o)))};function b(){return b=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},b.apply(this,arguments)}var y=function(e){var t=e.data,n=e.updateViewData,o=t.autoUpdate,i=t.updateNotificationEmail,l=t.isPluginUpdateDisabled,u=t.rollbackVersion;return wp.element.createElement(\"div\",{className:\"rank-math-auto-update-form field-form rank-math-box\"},wp.element.createElement(d,{title:(0,r.__)(\"Auto Update\",\"rank-math\"),description:l?(0,r.__)(\"You cannot turn on auto-updates to automatically update to stable versions of Rank Math as soon as they are released, because site wide plugins auto-update option is disabled on your site.\",\"rank-math\"):(0,r.__)(\"Turn on auto-updates to automatically update to stable versions of Rank Math as soon as they are released. The beta versions of Rank Math as soon as they are released. The beta versions will never install automatically.\",\"rank-math\")}),!l&&wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"enable_auto_update\"},(0,r.__)(\"Auto Update Plugin\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(a.ToggleControl,{id:\"enable_auto_update\",checked:o,onChange:function(e){t.autoUpdate=e,n(t)}}))))),wp.element.createElement(\"div\",{id:\"control_update_notification_email\"},wp.element.createElement(\"p\",null,(0,r.__)(\"When auto-updates are turned off, you can enable update notifications, to send an email to the site administrator when an update is available for Rank Math.\",\"rank-math\")),wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"enable_update_notification_email\"},(0,r.__)(\"Update Notification Email\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(a.ToggleControl,{id:\"enable_update_notification_email\",checked:i,onChange:function(e){t.updateNotificationEmail=e,n(t)}})))))),!l&&u&&wp.element.createElement(a.Notice,{variant:\"alt\",status:\"warning\"},wp.element.createElement(\"p\",null,(0,r.__)(\"Rank Math will not auto-update because you have rolled back to a previous version. Update to the latest version manually to make this option work again.\",\"rank-math\"))),wp.element.createElement(h,b({panel:\"auto_update\"},t)))};function w(){return w=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},w.apply(this,arguments)}var v=function(e){var t=e.data,n=e.updateViewData,o=t.betaOptin,i=t.isPluginUpdateDisabled;return wp.element.createElement(\"div\",{className:\"rank-math-beta-optin-form field-form rank-math-box\"},wp.element.createElement(d,{title:(0,r.__)(\"Beta Opt-in\",\"rank-math\"),description:i?(0,r.__)(\"You cannot turn on the Beta Tester feature because site wide plugins auto-update option is disabled on your site.\",\"rank-math\"):(0,r.__)(\"You can take part in shaping Rank Math by test-driving the newest features and letting us know what you think. Turn on the Beta Tester feature to get notified about new beta releases. The beta version will not install automatically and you always have the option to ignore it.\",\"rank-math\"),warning:i?\"\":(0,r.__)(\"It is not recommended to use the beta version on live production sites.\",\"rank-math\")}),!i&&wp.element.createElement(React.Fragment,null,wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",{className:\"field-row field-type-switch\"},wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"beta_tester\"},(0,r.__)(\"Beta Tester\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(a.ToggleControl,{id:\"beta_tester\",checked:o,onChange:function(e){t.betaOptin=e,n(t)}}))))),wp.element.createElement(h,w({panel:\"beta_optin\"},t))))},g=n(85);function E(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,i,l=[],u=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){c=!0,a=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(c)throw a}}return l}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return k(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return k(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function k(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var O=function(e){var t=e.data,n=t.latestVersion,i=t.isRollbackVersion,l=t.isPluginUpdateDisabled,u=t.availableVersions,c=t.updateCoreUrl,s=t.rollbackNonce;if((0,g.isEmpty)(u))return\"\";var m=rankMath.version,p=E((0,o.useState)(u[1]),2),f=p[0],h=p[1],b=E((0,o.useState)(!1),2),y=b[0],w=b[1],v=(0,g.reduce)(u,(function(e,t){return e[t]=t,e}),{});return wp.element.createElement(\"form\",{className:\"rank-math-rollback-form field-form rank-math-box\",method:\"post\",action:\"\"},wp.element.createElement(d,{title:(0,r.__)(\"Rollback to Previous Version\",\"rank-math\"),description:(0,r.__)(\"If you are facing issues after an update, you can reinstall a previous version with this tool.\",\"rank-math\"),warning:(0,r.__)(\"Previous versions may not be secure or stable. Proceed with caution and always create a backup.\",\"rank-math\")}),wp.element.createElement(\"table\",{className:\"form-table\"},wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"your-verions\"},(0,r.__)(\"Your Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(\"strong\",null,m),i&&wp.element.createElement(React.Fragment,null,wp.element.createElement(\"br\",null),wp.element.createElement(\"span\",{className:\"rollback-version-label\"},(0,r.__)(\"Rolled Back Version: \",\"rank-math\")),(0,r.__)(\"Auto updates will not work, please update the plugin manually.\",\"rank-math\")),m===n?wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"You are using the latest version of the plugin.\",\"rank-math\")):wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"This is the version you are using on this site.\",\"rank-math\")))),m!==n&&wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"latest-stable\"},(0,r.__)(\"Latest Stable Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(\"strong\",null,n),l&&m<n&&wp.element.createElement(\"a\",{href:c,className:\"update-link\"},(0,r.__)(\"Update Now\",\"rank-math\")),wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"This is the latest version of the plugin.\",\"rank-math\")))),wp.element.createElement(\"tr\",null,wp.element.createElement(\"th\",{scope:\"row\"},wp.element.createElement(\"label\",{htmlFor:\"rollback_version\"},(0,r.__)(\"Rollback Version\",\"rank-math\"))),wp.element.createElement(\"td\",null,wp.element.createElement(a.SelectControl,{variant:\"default\",id:\"rm_rollback_version\",name:\"rm_rollback_version\",value:f,options:v,disabledOptions:[m],onChange:function(e){return h(e)}}),wp.element.createElement(\"p\",{className:\"description\"},(0,r.__)(\"Roll back to this version.\",\"rank-math\")))))),wp.element.createElement(\"footer\",null,wp.element.createElement(a.TextControl,{type:\"hidden\",name:\"_wpnonce\",value:s}),wp.element.createElement(a.Button,{type:\"submit\",variant:\"primary\",size:\"xlarge\",id:\"rm-rollback-button\",onClick:function(){return w(!0)}},(0,r.__)(\"Install Version \",\"rank-math\"),f),y&&wp.element.createElement(\"div\",{className:\"alignright rollback-loading-indicator\"},wp.element.createElement(\"span\",{className:\"loading-indicator-text\"},(0,r.__)(\"Reinstalling, please wait\u2026\",\"rank-math\")),wp.element.createElement(\"span\",{className:\"spinner is-active\"}))))},S=function(e){return wp.element.createElement(React.Fragment,null,wp.element.createElement(O,e),wp.element.createElement(v,e),wp.element.createElement(y,e))}},311:function(e){e.exports=jQuery},85:function(e){e.exports=lodash},813:function(e){e.exports=rankMathAnalyzer},142:function(e){e.exports=window.rankMathComponents},179:function(e){e.exports=wp.apiFetch},537:function(e){e.exports=wp.components},749:function(e){e.exports=wp.compose},610:function(e){e.exports=wp.element},882:function(e){e.exports=wp.hooks},3:function(e){e.exports=wp.i18n}},r={};function a(e){var t=r[e];if(void 0!==t)return t.exports;var o=r[e]={exports:{}};return n[e](o,o.exports,a),o.exports}a.m=n,a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,{a:t}),t},a.d=function(e,t){for(var n in t)a.o(t,n)&&!a.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},a.f={},a.e=function(e){return Promise.all(Object.keys(a.f).reduce((function(t,n){return a.f[n](e,t),t}),[]))},a.u=function(e){return{43:\"databaseTools\",147:\"importExport\",532:\"systemStatus\"}[e]+\".js\"},a.g=function(){if(\"object\"==typeof globalThis)return globalThis;try{return this||new Function(\"return this\")()}catch(e){if(\"object\"==typeof window)return window}}(),a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},e={},t=\"rank-math:\",a.l=function(n,r,o,i){if(e[n])e[n].push(r);else{var l,u;if(void 0!==o)for(var c=document.getElementsByTagName(\"script\"),s=0;s<c.length;s++){var m=c[s];if(m.getAttribute(\"src\")==n||m.getAttribute(\"data-webpack\")==t+o){l=m;break}}l||(u=!0,(l=document.createElement(\"script\")).charset=\"utf-8\",l.timeout=120,a.nc&&l.setAttribute(\"nonce\",a.nc),l.setAttribute(\"data-webpack\",t+o),l.src=n),e[n]=[r];var p=function(t,r){l.onerror=l.onload=null,clearTimeout(f);var a=e[n];if(delete e[n],l.parentNode&&l.parentNode.removeChild(l),a&&a.forEach((function(e){return e(r)})),t)return t(r)},f=setTimeout(p.bind(null,void 0,{type:\"timeout\",target:l}),12e4);l.onerror=p.bind(null,l.onerror),l.onload=p.bind(null,l.onload),u&&document.head.appendChild(l)}},a.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},function(){var e;a.g.importScripts&&(e=a.g.location+\"\");var t=a.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName(\"script\");if(n.length)for(var r=n.length-1;r>-1&&!e;)e=n[r--].src}if(!e)throw new Error(\"Automatic publicPath is not supported in this browser\");e=e.replace(\/#.*$\/,\"\").replace(\/\\?.*$\/,\"\").replace(\/\\\/[^\\\/]+$\/,\"\/\"),a.p=e}(),function(){var e={426:0};a.f.j=function(t,n){var r=a.o(e,t)?e[t]:void 0;if(0!==r)if(r)n.push(r[2]);else{var o=new Promise((function(n,a){r=e[t]=[n,a]}));n.push(r[2]=o);var i=a.p+a.u(t),l=new Error;a.l(i,(function(n){if(a.o(e,t)&&(0!==(r=e[t])&&(e[t]=void 0),r)){var o=n&&(\"load\"===n.type?\"missing\":n.type),i=n&&n.target&&n.target.src;l.message=\"Loading chunk \"+t+\" failed.\\n(\"+o+\": \"+i+\")\",l.name=\"ChunkLoadError\",l.type=o,l.request=i,r[1](l)}}),\"chunk-\"+t,t)}};var t=function(t,n){var r,o,i=n[0],l=n[1],u=n[2],c=0;if(i.some((function(t){return 0!==e[t]}))){for(r in l)a.o(l,r)&&(a.m[r]=l[r]);if(u)u(a)}for(t&&t(n);c<i.length;c++)o=i[c],a.o(e,o)&&e[o]&&e[o][0](),e[o]=0},n=self.webpackChunkrank_math=self.webpackChunkrank_math||[];n.forEach(t.bind(null,0)),n.push=t.bind(null,n.push.bind(n))}(),function(){var e={};a.r(e),a.d(e,{updateViewData:function(){return re}});var t={};a.r(t),a.d(t,{appUi:function(){return ue}});var n={};a.r(n),a.d(n,{getViewData:function(){return ce}});var r,o=React,i=ReactDOM;function l(){return l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},l.apply(this,arguments)}!function(e){e.Pop=\"POP\",e.Push=\"PUSH\",e.Replace=\"REPLACE\"}(r||(r={}));const u=\"popstate\";function c(e,t){if(!1===e||null==e)throw new Error(t)}function s(e,t){return{usr:e.state,key:e.key,idx:t}}function m(e,t,n,r){return void 0===n&&(n=null),l({pathname:\"string\"==typeof e?e:e.pathname,search:\"\",hash:\"\"},\"string\"==typeof t?f(t):t,{state:n,key:t&&t.key||r||Math.random().toString(36).substr(2,8)})}function p(e){let{pathname:t=\"\/\",search:n=\"\",hash:r=\"\"}=e;return n&&\"?\"!==n&&(t+=\"?\"===n.charAt(0)?n:\"?\"+n),r&&\"#\"!==r&&(t+=\"#\"===r.charAt(0)?r:\"#\"+r),t}function f(e){let t={};if(e){let n=e.indexOf(\"#\");n>=0&&(t.hash=e.substr(n),e=e.substr(0,n));let r=e.indexOf(\"?\");r>=0&&(t.search=e.substr(r),e=e.substr(0,r)),e&&(t.pathname=e)}return t}function h(e,t,n,a){void 0===a&&(a={});let{window:o=document.defaultView,v5Compat:i=!1}=a,f=o.history,h=r.Pop,d=null,b=y();function y(){return(f.state||{idx:null}).idx}function w(){h=r.Pop;let e=y(),t=null==e?null:e-b;b=e,d&&d({action:h,location:g.location,delta:t})}function v(e){let t=\"null\"!==o.location.origin?o.location.origin:o.location.href,n=\"string\"==typeof e?e:p(e);return c(t,\"No window.location.(origin|href) available to create URL for href: \"+n),new URL(n,t)}null==b&&(b=0,f.replaceState(l({},f.state,{idx:b}),\"\"));let g={get action(){return h},get location(){return e(o,f)},listen(e){if(d)throw new Error(\"A history only accepts one active listener\");return o.addEventListener(u,w),d=e,()=>{o.removeEventListener(u,w),d=null}},createHref(e){return t(o,e)},createURL:v,encodeLocation(e){let t=v(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){h=r.Push;let a=m(g.location,e,t);n&&n(a,e),b=y()+1;let l=s(a,b),u=g.createHref(a);try{f.pushState(l,\"\",u)}catch(e){if(e instanceof DOMException&&\"DataCloneError\"===e.name)throw e;o.location.assign(u)}i&&d&&d({action:h,location:g.location,delta:1})},replace:function(e,t){h=r.Replace;let a=m(g.location,e,t);n&&n(a,e),b=y();let o=s(a,b),l=g.createHref(a);f.replaceState(o,\"\",l),i&&d&&d({action:h,location:g.location,delta:0})},go(e){return f.go(e)}};return g}var d;!function(e){e.data=\"data\",e.deferred=\"deferred\",e.redirect=\"redirect\",e.error=\"error\"}(d||(d={}));new Set([\"lazy\",\"caseSensitive\",\"path\",\"id\",\"index\",\"children\"]);function b(e,t){if(\"\/\"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith(\"\/\")?t.length-1:t.length,r=e.charAt(n);return r&&\"\/\"!==r?null:e.slice(n)||\"\/\"}function y(e,t,n,r){return\"Cannot include a '\"+e+\"' character in a manually specified `to.\"+t+\"` field [\"+JSON.stringify(r)+\"].  Please separate it out to the `to.\"+n+'` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.'}function w(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}function v(e,t,n,r){let a;void 0===r&&(r=!1),\"string\"==typeof e?a=f(e):(a=l({},e),c(!a.pathname||!a.pathname.includes(\"?\"),y(\"?\",\"pathname\",\"search\",a)),c(!a.pathname||!a.pathname.includes(\"#\"),y(\"#\",\"pathname\",\"hash\",a)),c(!a.search||!a.search.includes(\"#\"),y(\"#\",\"search\",\"hash\",a)));let o,i=\"\"===e||\"\"===a.pathname,u=i?\"\/\":a.pathname;if(null==u)o=n;else if(r){let e=t[t.length-1].replace(\/^\\\/\/,\"\").split(\"\/\");if(u.startsWith(\"..\")){let t=u.split(\"\/\");for(;\"..\"===t[0];)t.shift(),e.pop();a.pathname=t.join(\"\/\")}o=\"\/\"+e.join(\"\/\")}else{let e=t.length-1;if(u.startsWith(\"..\")){let t=u.split(\"\/\");for(;\"..\"===t[0];)t.shift(),e-=1;a.pathname=t.join(\"\/\")}o=e>=0?t[e]:\"\/\"}let s=function(e,t){void 0===t&&(t=\"\/\");let{pathname:n,search:r=\"\",hash:a=\"\"}=\"string\"==typeof e?f(e):e,o=n?n.startsWith(\"\/\")?n:function(e,t){let n=t.replace(\/\\\/+$\/,\"\").split(\"\/\");return e.split(\"\/\").forEach((e=>{\"..\"===e?n.length>1&&n.pop():\".\"!==e&&n.push(e)})),n.length>1?n.join(\"\/\"):\"\/\"}(n,t):t;return{pathname:o,search:E(r),hash:k(a)}}(a,o),m=u&&\"\/\"!==u&&u.endsWith(\"\/\"),p=(i||\".\"===u)&&n.endsWith(\"\/\");return s.pathname.endsWith(\"\/\")||!m&&!p||(s.pathname+=\"\/\"),s}const g=e=>e.join(\"\/\").replace(\/\\\/\\\/+\/g,\"\/\"),E=e=>e&&\"?\"!==e?e.startsWith(\"?\")?e:\"?\"+e:\"\",k=e=>e&&\"#\"!==e?e.startsWith(\"#\")?e:\"#\"+e:\"\";Error;const O=[\"post\",\"put\",\"patch\",\"delete\"],S=(new Set(O),[\"get\",...O]);new Set(S),new Set([301,302,303,307,308]),new Set([307,308]);Symbol(\"deferred\");function _(){return _=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},_.apply(this,arguments)}const j=o.createContext(null);const P=o.createContext(null);const N=o.createContext(null);const D=o.createContext({outlet:null,matches:[],isDataRoute:!1});function T(){return null!=o.useContext(N)}function A(){return T()||c(!1),o.useContext(N).location}function C(e){o.useContext(P).static||o.useLayoutEffect(e)}function R(){let{isDataRoute:e}=o.useContext(D);return e?function(){let{router:e}=V(x.UseNavigateStable),t=M(U.UseNavigateStable),n=o.useRef(!1);return C((()=>{n.current=!0})),o.useCallback((function(r,a){void 0===a&&(a={}),n.current&&(\"number\"==typeof r?e.navigate(r):e.navigate(r,_({fromRouteId:t},a)))}),[e,t])}():function(){T()||c(!1);let e=o.useContext(j),{basename:t,navigator:n}=o.useContext(P),{matches:r}=o.useContext(D),{pathname:a}=A(),i=JSON.stringify(w(r).map((e=>e.pathnameBase))),l=o.useRef(!1);return C((()=>{l.current=!0})),o.useCallback((function(r,o){if(void 0===o&&(o={}),!l.current)return;if(\"number\"==typeof r)return void n.go(r);let u=v(r,JSON.parse(i),a,\"path\"===o.relative);null==e&&\"\/\"!==t&&(u.pathname=\"\/\"===u.pathname?t:g([t,u.pathname])),(o.replace?n.replace:n.push)(u,o.state,o)}),[t,n,i,a,e])}()}o.Component;var x=function(e){return e.UseBlocker=\"useBlocker\",e.UseRevalidator=\"useRevalidator\",e.UseNavigateStable=\"useNavigate\",e}(x||{}),U=function(e){return e.UseBlocker=\"useBlocker\",e.UseLoaderData=\"useLoaderData\",e.UseActionData=\"useActionData\",e.UseRouteError=\"useRouteError\",e.UseNavigation=\"useNavigation\",e.UseRouteLoaderData=\"useRouteLoaderData\",e.UseMatches=\"useMatches\",e.UseRevalidator=\"useRevalidator\",e.UseNavigateStable=\"useNavigate\",e.UseRouteId=\"useRouteId\",e}(U||{});function V(e){let t=o.useContext(j);return t||c(!1),t}function M(e){let t=function(e){let t=o.useContext(D);return t||c(!1),t}(),n=t.matches[t.matches.length-1];return n.route.id||c(!1),n.route.id}o.startTransition;function F(e){let{basename:t=\"\/\",children:n=null,location:a,navigationType:i=r.Pop,navigator:l,static:u=!1}=e;T()&&c(!1);let s=t.replace(\/^\\\/*\/,\"\/\"),m=o.useMemo((()=>({basename:s,navigator:l,static:u})),[s,l,u]);\"string\"==typeof a&&(a=f(a));let{pathname:p=\"\/\",search:h=\"\",hash:d=\"\",state:y=null,key:w=\"default\"}=a,v=o.useMemo((()=>{let e=b(p,s);return null==e?null:{location:{pathname:e,search:h,hash:d,state:y,key:w},navigationType:i}}),[s,p,h,d,y,w,i]);return null==v?null:o.createElement(P.Provider,{value:m},o.createElement(N.Provider,{children:n,value:v}))}new Promise((()=>{}));o.Component;function I(e){return void 0===e&&(e=\"\"),new URLSearchParams(\"string\"==typeof e||Array.isArray(e)||e instanceof URLSearchParams?e:Object.keys(e).reduce(((t,n)=>{let r=e[n];return t.concat(Array.isArray(r)?r.map((e=>[n,e])):[[n,r]])}),[]))}new Set([\"application\/x-www-form-urlencoded\",\"multipart\/form-data\",\"text\/plain\"]);new Map;const L=o.startTransition;i.flushSync;function B(e){let{basename:t,children:n,future:r,window:a}=e,i=o.useRef();var l;null==i.current&&(i.current=(void 0===(l={window:a,v5Compat:!0})&&(l={}),h((function(e,t){let{pathname:n,search:r,hash:a}=e.location;return m(\"\",{pathname:n,search:r,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||\"default\")}),(function(e,t){return\"string\"==typeof t?t:p(t)}),null,l)));let u=i.current,[c,s]=o.useState({action:u.action,location:u.location}),{v7_startTransition:f}=r||{},d=o.useCallback((e=>{f&&L?L((()=>s(e))):s(e)}),[s,f]);return o.useLayoutEffect((()=>u.listen(d)),[u,d]),o.createElement(F,{basename:t,children:n,location:c.location,navigationType:c.action,navigator:u})}\"undefined\"!=typeof window&&void 0!==window.document&&window.document.createElement;var W,z;function $(e){let t=o.useRef(I(e)),n=o.useRef(!1),r=A(),a=o.useMemo((()=>function(e,t){let n=I(e);return t&&t.forEach(((e,r)=>{n.has(r)||t.getAll(r).forEach((e=>{n.append(r,e)}))})),n}(r.search,n.current?null:t.current)),[r.search]),i=R(),l=o.useCallback(((e,t)=>{const r=I(\"function\"==typeof e?e(a):e);n.current=!0,i(\"?\"+r,t)}),[i,a]);return[a,l]}(function(e){e.UseScrollRestoration=\"useScrollRestoration\",e.UseSubmit=\"useSubmit\",e.UseSubmitFetcher=\"useSubmitFetcher\",e.UseFetcher=\"useFetcher\",e.useViewTransitionState=\"useViewTransitionState\"})(W||(W={})),function(e){e.UseFetcher=\"useFetcher\",e.UseFetchers=\"useFetchers\",e.UseScrollRestoration=\"useScrollRestoration\"}(z||(z={}));var H=a(610),Y=a(85),J=a(179),K=a.n(J),q=a(749),Q=wp.data,G=function(e){var t=e.title;return wp.element.createElement(\"div\",{className:\"rank-math-skeleton rank-math-system-status rank-math-ui container\"},wp.element.createElement(\"div\",{className:\"rank-math-box\"},wp.element.createElement(\"header\",null,wp.element.createElement(\"h3\",null,t)),wp.element.createElement(\"div\",{className:\"copy-button-wrapper\"}),wp.element.createElement(\"div\",{className:\"rank-math-panel components-panel\"},(0,Y.map)(Array.from({length:8}),(function(e,t){return wp.element.createElement(\"div\",{key:t,className:\"components-panel__body\"})})))))},X=a(674),Z=(0,q.compose)((0,Q.withSelect)((function(e){return{data:e(\"rank-math-status\").getViewData(\"version_control\")}})),(0,Q.withDispatch)((function(e){var t=\"version_control\";return{getViewData:function(){K()({method:\"POST\",path:\"\/rankmath\/v1\/status\/getViewData\",data:{activeTab:t}}).catch((function(e){alert(e.message)})).then((function(n){e(\"rank-math-status\").updateViewData(t,n)}))},updateViewData:function(n){e(\"rank-math-status\").updateViewData(t,n)}}})))((function(e){var t=e.data,n=e.getViewData,r=e.updateViewData;return(0,H.useEffect)((function(){(0,Y.isEmpty)(t)&&n()}),[]),(0,Y.isUndefined)(t)?wp.element.createElement(G,{title:\"Version Control\"}):wp.element.createElement(\"div\",{className:\"rank-math-ui container version-control\"},wp.element.createElement(X.default,{data:t,updateViewData:r}))}));function ee(e){return ee=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},ee(e)}function te(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ne(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==ee(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==ee(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===ee(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function re(e,t){return n=e,r=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?te(Object(n),!0).forEach((function(t){ne(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):te(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t),{type:\"RANK_MATH_APP_UI\",key:n,value:r};var n,r}function ae(e){return ae=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},ae(e)}function oe(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ie(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?oe(Object(n),!0).forEach((function(t){le(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):oe(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function le(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==ae(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==ae(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===ae(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function ue(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;return\"RANK_MATH_APP_UI\"===t.type?ie(ie({},e),{},le({},t.key,t.value)):e}function ce(e,t){return e.appUi[t]}(0,Q.register)((0,Q.createReduxStore)(\"rank-math-status\",{reducer:(0,Q.combineReducers)(t),selectors:n,actions:e}));var se=a(3),me=(0,H.lazy)((function(){return Promise.resolve().then(a.bind(a,674))})),pe=(0,H.lazy)((function(){return a.e(43).then(a.bind(a,766))})),fe=(0,H.lazy)((function(){return a.e(532).then(a.bind(a,360))})),he=(0,H.lazy)((function(){return a.e(147).then(a.bind(a,698))})),de=rankMath,be=de.isAdvancedMode,ye=de.isPluginActiveForNetwork,we=de.canUser,ve=(0,Y.filter)([be&&(!ye||we.setupNetwork)&&we.installPlugins&&{name:\"version_control\",title:(0,se.__)(\"Version Control\",\"rank-math\"),view:me},be&&(!ye||we.manageOptions)&&{name:\"tools\",title:(0,se.__)(\"Database Tools\",\"rank-math\"),view:pe},we.manageOptions&&{name:\"status\",title:(0,se.__)(\"System Status\",\"rank-math\"),view:fe},be&&we.manageOptions&&{name:\"import_export\",title:(0,se.__)(\"Import & Export\",\"rank-math\"),view:he}],Boolean),ge=a(142);function Ee(e){return Ee=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},Ee(e)}function ke(e){return function(e){if(Array.isArray(e))return Oe(e)}(e)||function(e){if(\"undefined\"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e[\"@@iterator\"])return Array.from(e)}(e)||function(e,t){if(!e)return;if(\"string\"==typeof e)return Oe(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return Oe(e,t)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function Oe(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function Se(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function _e(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Se(Object(n),!0).forEach((function(t){je(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Se(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function je(e,t,n){return(t=function(e){var t=function(e,t){if(\"object\"!==Ee(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||\"default\");if(\"object\"!==Ee(r))return r;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"===Ee(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var Pe=(0,q.compose)((0,Q.withSelect)((function(e,t){var n=t.searchParams.get(\"view\"),r=e(\"rank-math-status\");return _e(_e({},t),{},{data:r.getViewData(n),activeTab:n})})),(0,Q.withDispatch)((function(e,t){var n=t.activeTab,r=t.setSearchParams;return{onTabChange:function(e){e!==n&&r((function(t){return(0,Y.fromPairs)([].concat(ke(t),[[\"view\",e]]))}))},getViewData:function(){K()({method:\"POST\",path:\"\/rankmath\/v1\/status\/getViewData\",data:{activeTab:n}}).catch((function(e){alert(e.message)})).then((function(t){e(\"rank-math-status\").updateViewData(n,t)}))},updateViewData:function(t){e(\"rank-math-status\").updateViewData(n,t)}}})))((function(e){var t=e.data,n=e.activeTab,r=e.onTabChange,a=e.getViewData,o=e.updateViewData;return(0,H.useEffect)((function(){(0,Y.isEmpty)(t)&&a()}),[n]),wp.element.createElement(React.Fragment,null,wp.element.createElement(ge.DashboardHeader,{page:n}),wp.element.createElement(\"span\",{className:\"wp-header-end\"}),wp.element.createElement(\"div\",{className:\"wrap rank-math-wrap rank-math-tools-wrap dashboard\"},wp.element.createElement(H.Suspense,null,wp.element.createElement(ge.TabPanel,{tabs:ve,key:n,initialTabName:n,onSelect:r},(function(e){var n=e.name,r=e.title,a=e.view;return(0,Y.isUndefined)(t)?wp.element.createElement(G,{title:r,name:n}):wp.element.createElement(\"div\",{className:\"rank-math-ui container \".concat(n)},wp.element.createElement(a,{data:t,updateViewData:o}))})))))}));function Ne(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var r,a,o,i,l=[],u=!0,c=!1;try{if(o=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=o.call(n)).done)&&(l.push(r.value),l.length!==t);u=!0);}catch(e){c=!0,a=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(c)throw a}}return l}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return De(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return De(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function De(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var Te,Ae=function(){var e=Ne($({view:ve[0].name}),2),t=e[0],n=e[1];return wp.element.createElement(Pe,{searchParams:t,setSearchParams:n})};Te=function(){var e=document.getElementById(\"rank-math-tools-wrapper\");e&&(0,H.createRoot)(e).render(wp.element.createElement(B,null,wp.element.createElement(Ae,null)));var t=document.getElementById(\"rank-math-version-control-wrapper\");t&&(0,H.createRoot)(t).render(wp.element.createElement(Z,null))},\"undefined\"!=typeof document&&(\"complete\"!==document.readyState&&\"interactive\"!==document.readyState?document.addEventListener(\"DOMContentLoaded\",Te):Te())}()}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/assets\/css\/status.css","ext":"css","size":6902,"mtime":1757324689,"type":"text","content":"\/*!\n * Plugin:\tRank Math - Status & Tools\n * URL:\t\thttps:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\n * Name:\tstatus.css\n *\/@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}:root{--rankmath-wp-adminbar-height: 0}.rank-math-auto-update-form .rank-math-notice{border:none}.rank-math-beta-optin-form .rank-math-button,.rank-math-auto-update-form .rank-math-button{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;width:145px}.rank-math-status-table{margin-top:20px}.rank-math-status-table tr th,.rank-math-status-table tr td{padding:10px}.rank-math-status-table thead tr th{color:#32373c}.rank-math-status-table thead tr th h2{font-size:14px;margin:0}.rank-math-status-table tbody tr td:first-child{width:33%}.rank-math-status-table .update_all_scores{display:block;font-size:13px;margin-top:10px;line-height:1.3}.rank-math-status-table .update_all_scores input{vertical-align:middle}.rank-math-tools-table.widefat{padding:0;border-color:#b5bfc9}.rank-math-tools-table.widefat tr:first-of-type th{border-radius:6px 0 0 0}.rank-math-tools-table.widefat tr:first-of-type td{border-radius:0 6px 0 0}.rank-math-tools-table.widefat tr:nth-child(odd){background:#f8f9fa}.rank-math-tools-table.widefat tr th,.rank-math-tools-table.widefat tr td{font-size:1.1em;font-weight:400;padding:2em;border-bottom:1px solid #b5bfc9}.rank-math-tools-table.widefat tr:last-of-type th,.rank-math-tools-table.widefat tr:last-of-type td{border-bottom:0}.rank-math-tools-table.widefat h4{margin:0 0 .825rem}.rank-math-panel{border-color:#c3c4c7}.rank-math-panel .components-panel__body{border-color:#c3c4c7}.rank-math-panel .components-panel__body>.components-panel__body-title{background:#f8f9fa}.rank-math-panel .components-panel__body-toggle.components-button{min-height:46px;padding:1em 1.5em;color:#2c3338;font-size:15px;font-weight:600}.rank-math-panel .components-panel__body-toggle.components-button svg{width:30px;height:30px;fill:#50575e}.rank-math-panel .components-panel__body-toggle.components-button:focus{-webkit-box-shadow:none;box-shadow:none;outline:2px solid #2271b1;outline-offset:-1px;color:#1d2327}.rank-math-panel .components-panel__row{margin:1em 8px 0}.copy-button-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:.5rem;margin:2rem 0}.copy-button-wrapper .success{color:#007017}.error-log-info{margin-top:1rem}.rank-math-ui.status p.description{font-size:1rem}@media screen and (max-width: 782px){.rank-math-system-status .rank-math-table td{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;word-wrap:break-word}.rank-math-system-status .rank-math-table td:first-child{padding-bottom:0;font-weight:600}}.rank-math-import-export .components-tab-panel__tabs{-ms-flex-wrap:wrap;flex-wrap:wrap;border-bottom:1px solid #b5bfc9;border-radius:6px 6px 0 0;background:#f8f9fa}.rank-math-import-export .components-tab-panel__tabs-item{height:46px;padding:0 15px;border-right:1px solid #b5bfc9;color:#5b6065;font-size:.825rem}.rank-math-import-export .components-tab-panel__tabs-item .rm-icon{margin-right:6px;font-size:18px;font-weight:600;vertical-align:-4px}.rank-math-import-export .components-tab-panel__tabs-item:first-of-type{border-top-left-radius:6px}.rank-math-import-export .components-tab-panel__tabs-item::after{bottom:-1px;background:#fff;outline:none}.rank-math-import-export .components-tab-panel__tabs-item:hover,.rank-math-import-export .components-tab-panel__tabs-item.is-active{color:#069de3}.rank-math-import-export .components-tab-panel__tabs-item.is-active{background:#fff}.import-plugins footer button:first-child{margin-right:4px}.rank-math-export-form .rank-math-checkbox-list label{margin-left:4px;cursor:pointer}#rank-math-import-form .components-form-file-upload{margin:1em 0}#rank-math-import-form .components-form-file-upload input[type=file]{display:block !important}#rank-math-import-form .components-form-file-upload .components-button{display:none}#rank-math-import-form br{display:none}#rank-math-import-form label{font-size:14px}.rank-math-skeleton.rank-math-system-status .copy-button-wrapper::after{content:\"\";display:block;width:220px;height:38px;border-radius:3px}.rank-math-skeleton.rank-math-system-status .components-panel__body{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1em 1.5em;background:#f8f9fa}.rank-math-skeleton.rank-math-system-status .components-panel__body::before,.rank-math-skeleton.rank-math-system-status .components-panel__body::after{content:\"\";display:block;height:15px;border-radius:16px}.rank-math-skeleton.rank-math-system-status .components-panel__body::after{width:20px}.rank-math-skeleton.rank-math-system-status .components-panel__body::before{width:100px}.rank-math-skeleton.rank-math-system-status .components-panel__body:nth-child(odd)::before{width:120px}.rank-math-skeleton.rank-math-system-status .copy-button-wrapper::after,.rank-math-skeleton.rank-math-system-status .components-panel__body::before,.rank-math-skeleton.rank-math-system-status .components-panel__body::after{background:rgba(0,0,0,.11);-webkit-animation:pulse 2s ease-in-out .5s infinite;animation:pulse 2s ease-in-out .5s infinite}body.rank-math_page_rank-math-status.rank-math-start-update-score{overflow:hidden}body.rank-math_page_rank-math-status.rank-math-start-update-score #wpadminbar{display:none}.rank-math-tools-wrap{width:100%;margin-bottom:-65px}footer{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;gap:1rem}.rank-math-page .rank-math-breadcrumbs .divider{margin:0 8px}.wp-header-end+.notice{margin-top:25px;margin-right:40px}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/class-rest.php","ext":"php","size":5275,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Global functionality of the plugin.\n *\n * Defines the functionality loaded on admin.\n *\n * @since      1.0.71\n * @package    RankMath\n * @subpackage RankMath\\Rest\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Status;\n\nuse WP_Error;\nuse WP_REST_Server;\nuse WP_REST_Request;\nuse WP_REST_Response;\nuse WP_REST_Controller;\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Rest class.\n *\/\nclass Rest extends WP_REST_Controller {\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->namespace = \\RankMath\\Rest\\Rest_Helper::BASE . '\/status';\n\t}\n\n\t\/**\n\t * Registers the routes for the objects of the controller.\n\t *\/\n\tpublic function register_routes() {\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/getViewData',\n\t\t\t[\n\t\t\t\t'methods'             => 'POST',\n\t\t\t\t'callback'            => [ $this, 'get_view_data' ],\n\t\t\t\t'permission_callback' => [ '\\\\RankMath\\\\Rest\\\\Rest_Helper', 'can_manage_options' ],\n\t\t\t]\n\t\t);\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/updateViewData',\n\t\t\t[\n\t\t\t\t'methods'             => 'POST',\n\t\t\t\t'callback'            => [ $this, 'update_view_data' ],\n\t\t\t\t'permission_callback' => [ '\\\\RankMath\\\\Rest\\\\Rest_Helper', 'can_manage_options' ],\n\t\t\t]\n\t\t);\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/importSettings',\n\t\t\t[\n\t\t\t\t'methods'             => 'POST',\n\t\t\t\t'callback'            => [ '\\\\RankMath\\\\Status\\\\Import_Export_Settings', 'import' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_import_export_permission' ],\n\t\t\t]\n\t\t);\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/exportSettings',\n\t\t\t[\n\t\t\t\t'methods'             => 'POST',\n\t\t\t\t'callback'            => [ '\\\\RankMath\\\\Status\\\\Import_Export_Settings', 'export' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_import_export_permission' ],\n\t\t\t]\n\t\t);\n\t\tregister_rest_route(\n\t\t\t$this->namespace,\n\t\t\t'\/runBackup',\n\t\t\t[\n\t\t\t\t'methods'             => 'POST',\n\t\t\t\t'callback'            => [ $this, 'run_backup' ],\n\t\t\t\t'permission_callback' => [ $this, 'has_import_export_permission' ],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Rest permission_callback method to check if user has the capability to import\/export the data.\n\t *\/\n\tpublic function has_import_export_permission() {\n\t\tif ( ! Helper::has_cap( 'general' ) ) {\n\t\t\treturn new WP_Error(\n\t\t\t\t'rest_cannot_access',\n\t\t\t\t__( 'Sorry, you are not authorized to Import\/Export the settings.', 'rank-math' ),\n\t\t\t\t[ 'status' => rest_authorization_required_code() ]\n\t\t\t);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Run Backup.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return int Credits.\n\t *\/\n\tpublic function run_backup( WP_REST_Request $request ) {\n\t\t$action = $request->get_param( 'action' );\n\t\tif ( ! in_array( $action, [ 'create', 'delete', 'restore' ], true ) ) {\n\t\t\treturn new WP_REST_Response(\n\t\t\t\t[\n\t\t\t\t\t'type'    => 'error',\n\t\t\t\t\t'message' => esc_html__( 'Invalid action selected.', 'rank-math' ),\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$key    = $request->get_param( 'key' );\n\t\t$method = \"{$action}_backup\";\n\t\t$data   = Backup::$method( $key );\n\t\treturn new WP_REST_Response(\n\t\t\t[\n\t\t\t\t'type'    => $data['type'],\n\t\t\t\t'message' => $data['message'],\n\t\t\t\t'backups' => isset( $data['backups'] ) ? $data['backups'] : false,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get View data\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return array View Data.\n\t *\/\n\tpublic function get_view_data( WP_REST_Request $request ) {\n\t\t$view = $request->get_param( 'activeTab' );\n\t\t$hash = [\n\t\t\t'version_control' => '\\RankMath\\Version_Control',\n\t\t\t'tools'           => '\\RankMath\\Tools\\Database_Tools',\n\t\t\t'status'          => '\\RankMath\\Status\\System_Status',\n\t\t\t'import_export'   => '\\RankMath\\Admin\\Import_Export',\n\t\t];\n\t\tif ( ! isset( $hash[ $view ] ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn apply_filters(\n\t\t\t\"rank_math\/status\/$view\/json_data\",\n\t\t\t$hash[ $view ]::get_json_data()\n\t\t);\n\t}\n\n\t\/**\n\t * Update Version Control data.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\/\n\tpublic function update_view_data( WP_REST_Request $request ) {\n\t\t$panel  = $request->get_param( 'panel' );\n\t\t$method = \"update_{$panel}\";\n\t\treturn $this->$method( $request );\n\t}\n\n\t\/**\n\t * Update the Auto Update panel data.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\/\n\tprivate function update_auto_update( $request ) {\n\t\t$enable_auto_update = $request->get_param( 'autoUpdate' );\n\t\t$enable_auto_update = $enable_auto_update ? 'on' : 'off';\n\t\tHelper::toggle_auto_update_setting( $enable_auto_update );\n\n\t\t$enable_notifications = (bool) $request->get_param( 'updateNotificationEmail' );\n\t\t$settings             = get_option( 'rank-math-options-general', [] );\n\n\t\t$settings['update_notification_email'] = $enable_notifications;\n\t\tupdate_option( 'rank-math-options-general', $settings );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Update the Auto Update panel data.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\/\n\tprivate function update_beta_optin( $request ) {\n\t\t$beta_optin = $request->get_param( 'betaOptin' );\n\n\t\t$settings               = get_option( 'rank-math-options-general', [] );\n\t\t$settings['beta_optin'] = $beta_optin;\n\t\tupdate_option( 'rank-math-options-general', $settings );\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/class-error-log.php","ext":"php","size":2703,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Locate, retrieve, and display the server's error log.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Status;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Error_Log class.\n *\/\nclass Error_Log {\n\n\t\/**\n\t * Log path.\n\t *\n\t * @var string|bool\n\t *\/\n\tprivate static $log_path = null;\n\n\t\/**\n\t * File content.\n\t *\n\t * @var array\n\t *\/\n\tprivate static $contents = null;\n\n\t\/**\n\t * Get Error Log JSON data to be used on the System Status page.\n\t *\n\t * @return array Error Log data.\n\t *\/\n\tpublic static function get_error_log_localized_data() {\n\t\t$error_log_load_error = self::error_log_load_error();\n\t\t\/\/ Early bail if Error log file could not be loaded.\n\t\tif ( $error_log_load_error ) {\n\t\t\treturn [\n\t\t\t\t'errorLogError' => $error_log_load_error,\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\t'errorLog'     => self::get_error_log_rows( 100 ),\n\t\t\t'errorLogPath' => esc_html( basename( self::get_log_path() ) ),\n\t\t\t'errorLogSize' => is_array( self::$contents ) ? esc_html( Str::human_number( strlen( join( '', self::$contents ) ) ) ) : '0',\n\t\t];\n\t}\n\n\t\/**\n\t * Get last x rows from the error log.\n\t *\n\t * @param  integer $limit Max number of rows to return.\n\t *\n\t * @return string[]       Array of rows of text.\n\t *\/\n\tprivate static function get_error_log_rows( $limit = -1 ) {\n\t\tif ( is_null( self::$contents ) ) {\n\t\t\t$wp_filesystem  = Helper::get_filesystem();\n\t\t\tself::$contents = $wp_filesystem->get_contents_array( self::get_log_path() );\n\t\t}\n\n\t\tif ( -1 === $limit ) {\n\t\t\treturn join( '', self::$contents );\n\t\t}\n\n\t\treturn is_array( self::$contents ) ? join( '', array_slice( self::$contents, -$limit ) ) : '';\n\t}\n\n\t\/**\n\t * Show error if the log cannot be loaded.\n\t *\/\n\tprivate static function error_log_load_error() {\n\t\t$log_file      = self::get_log_path();\n\t\t$wp_filesystem = Helper::get_filesystem();\n\n\t\tif (\n\t\t\tempty( $log_file ) ||\n\t\t\tis_null( $wp_filesystem ) ||\n\t\t\t! Helper::is_filesystem_direct() ||\n\t\t\t! $wp_filesystem->exists( $log_file ) ||\n\t\t\t! $wp_filesystem->is_readable( $log_file )\n\t\t) {\n\t\t\treturn esc_html__( 'The error log cannot be retrieved.', 'rank-math' );\n\t\t}\n\n\t\t\/\/ Error log must be smaller than 100 MB.\n\t\t$size = $wp_filesystem->size( $log_file );\n\t\tif ( $size > 100000000 ) {\n\t\t\treturn esc_html__( 'The error log cannot be retrieved: Error log file is too large.', 'rank-math' );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get error log file location.\n\t *\n\t * @return string Path to log file.\n\t *\/\n\tprivate static function get_log_path() {\n\t\tif ( is_null( self::$log_path ) ) {\n\t\t\tself::$log_path = ini_get( 'error_log' );\n\t\t}\n\n\t\treturn self::$log_path;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/views\/main.php","ext":"php","size":508,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Status & Tools main view file.\n *\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n * @license    GPL-2.0+\n * @link       https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\n * @copyright  2019 Rank Math\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\nuse RankMath\\Rollback_Version;\n\n\/\/ Header.\nif ( Rollback_Version::should_rollback() ) {\n\t$rollback = new Rollback_Version();\n\t$rollback->rollback();\n\treturn;\n}\n?>\n<div id=\"rank-math-tools-wrapper\"><\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/class-backup.php","ext":"php","size":2686,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The functionality related to the Backup.\n *\n * @since      1.0.240\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Status;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Backup class.\n *\/\nclass Backup {\n\t\/**\n\t * Get backups from the database.\n\t *\n\t * @param {bool} $return_object Whether to retrun the backup data or only the keys with formatted date.\n\t *\/\n\tpublic static function get_backups( $return_object = false ) {\n\t\t$backups = get_option( 'rank_math_backups', [] );\n\t\tif ( empty( $backups ) ) {\n\t\t\t$backups = [];\n\t\t} elseif ( ! is_array( $backups ) ) {\n\t\t\t$backups = (array) $backups;\n\t\t}\n\n\t\tif ( empty( $backups ) || $return_object ) {\n\t\t\treturn $backups;\n\t\t}\n\n\t\t$data = [];\n\t\tforeach ( array_keys( $backups ) as $backup ) {\n\t\t\t$data[ $backup ] = esc_html( date_i18n( 'M jS Y, H:i a', $backup ) );\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Create Backup.\n\t *\/\n\tpublic static function create_backup() {\n\t\t$key = Helper::get_current_time();\n\t\tif ( is_null( $key ) ) {\n\t\t\treturn [\n\t\t\t\t'type'    => 'error',\n\t\t\t\t'message' => esc_html__( 'Unable to create backup this time.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$backups = self::get_backups( true );\n\t\t$backups = [ $key => Import_Export_Settings::get_export_data() ] + $backups;\n\t\tupdate_option( 'rank_math_backups', $backups, false );\n\n\t\treturn [\n\t\t\t'type'    => 'success',\n\t\t\t'message' => esc_html__( 'Backup created successfully.', 'rank-math' ),\n\t\t\t'backups' => self::get_backups(),\n\t\t];\n\t}\n\n\t\/**\n\t * Create Backup.\n\t *\n\t * @param string $key Backup key to be restored.\n\t *\/\n\tpublic static function restore_backup( $key ) {\n\t\t$backups = self::get_backups( true );\n\t\tif ( ! array_key_exists( $key, $backups ) ) {\n\t\t\treturn [\n\t\t\t\t'type'    => 'error',\n\t\t\t\t'message' => esc_html__( 'Backup does not exist.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tImport_Export_Settings::do_import_data( $backups[ $key ], true );\n\n\t\treturn [\n\t\t\t'type'    => 'success',\n\t\t\t'message' => esc_html__( 'Backup restored successfully.', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Delete Backup.\n\t *\n\t * @param string $key Backup key to be restored.\n\t *\/\n\tpublic static function delete_backup( $key ) {\n\t\t$backups = self::get_backups();\n\t\tif ( ! isset( $backups[ $key ] ) ) {\n\t\t\treturn [\n\t\t\t\t'type'    => 'error',\n\t\t\t\t'message' => esc_html__( 'No backup key found to delete.', 'rank-math' ),\n\t\t\t\t'backups' => self::get_backups(),\n\t\t\t];\n\t\t}\n\n\t\tunset( $backups[ $key ] );\n\t\tupdate_option( 'rank_math_backups', $backups, false );\n\n\t\treturn [\n\t\t\t'type'    => 'success',\n\t\t\t'message' => esc_html__( 'Backup successfully deleted.', 'rank-math' ),\n\t\t\t'backups' => self::get_backups(),\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/class-system-status.php","ext":"php","size":6043,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * This class handles the content in Status & Tools > System Status.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Status;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Google\\Permissions;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * System_Status class.\n *\/\nclass System_Status {\n\n\t\/**\n\t * Get localized JSON data based on the Page view.\n\t *\/\n\tpublic static function get_json_data() {\n\t\tglobal $wpdb;\n\t\t$info = [];\n\n\t\t$plan             = Admin_Helper::get_registration_data();\n\t\t$tokens           = Authentication::tokens();\n\t\t$modules          = Helper::get_active_modules();\n\t\t$permissions      = Permissions::get_status();\n\t\t$permissions_data = '';\n\n\t\tif ( ! empty( $permissions ) ) {\n\t\t\t$permissions_data = implode(\n\t\t\t\t', ',\n\t\t\t\tarray_map(\n\t\t\t\t\tfn( $k, $v ) => \"$k: $v\",\n\t\t\t\t\tarray_keys( $permissions ),\n\t\t\t\t\t$permissions\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t$rankmath = [\n\t\t\t'label'  => esc_html__( 'Rank Math', 'rank-math' ),\n\t\t\t'fields' => [\n\t\t\t\t'version'          => [\n\t\t\t\t\t'label' => esc_html__( 'Version', 'rank-math' ),\n\t\t\t\t\t'value' => get_option( 'rank_math_version' ),\n\t\t\t\t],\n\t\t\t\t'database_version' => [\n\t\t\t\t\t'label' => esc_html__( 'Database version', 'rank-math' ),\n\t\t\t\t\t'value' => get_option( 'rank_math_db_version' ),\n\t\t\t\t],\n\t\t\t\t'plugin_plan'      => [\n\t\t\t\t\t'label' => esc_html__( 'Plugin subscription plan', 'rank-math' ),\n\t\t\t\t\t'value' => isset( $plan['plan'] ) ? \\ucwords( $plan['plan'] ) : esc_html__( 'Free', 'rank-math' ),\n\t\t\t\t],\n\t\t\t\t'active_modules'   => [\n\t\t\t\t\t'label' => esc_html__( 'Active modules', 'rank-math' ),\n\t\t\t\t\t'value' => empty( $modules ) ? esc_html__( '(none)', 'rank-math' ) : join( ', ', $modules ),\n\t\t\t\t],\n\t\t\t\t'refresh_token'    => [\n\t\t\t\t\t'label' => esc_html__( 'Google Refresh token', 'rank-math' ),\n\t\t\t\t\t'value' => empty( $tokens['refresh_token'] ) ? esc_html__( 'No token', 'rank-math' ) : esc_html__( 'Token exists', 'rank-math' ),\n\t\t\t\t],\n\t\t\t\t'permissions'      => [\n\t\t\t\t\t'label' => esc_html__( 'Google Permission', 'rank-math' ),\n\t\t\t\t\t'value' => $permissions_data,\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\n\t\t$database_tables = DB_Helper::get_results(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT\n\t\t\t\ttable_name AS 'name'\n\t\t\t\tFROM information_schema.TABLES\n\t\t\t\tWHERE table_schema = %s\n\t\t\t\tAND table_name LIKE %s\n\t\t\t\tORDER BY name ASC;\",\n\t\t\t\tDB_NAME,\n\t\t\t\t'%rank\\\\_math%'\n\t\t\t)\n\t\t);\n\n\t\t$tables = [];\n\t\tforeach ( $database_tables as $table ) {\n\t\t\t$name            = \\str_replace( $wpdb->prefix, '', $table->name );\n\t\t\t$tables[ $name ] = true;\n\t\t}\n\n\t\t$should_exist = [\n\t\t\t'rank_math_404_logs'                  => esc_html__( 'Database Table: 404 Log', 'rank-math' ),\n\t\t\t'rank_math_redirections'              => esc_html__( 'Database Table: Redirection', 'rank-math' ),\n\t\t\t'rank_math_redirections_cache'        => esc_html__( 'Database Table: Redirection Cache', 'rank-math' ),\n\t\t\t'rank_math_internal_links'            => esc_html__( 'Database Table: Internal Link', 'rank-math' ),\n\t\t\t'rank_math_internal_meta'             => esc_html__( 'Database Table: Internal Link Meta', 'rank-math' ),\n\t\t\t'rank_math_analytics_gsc'             => esc_html__( 'Database Table: Google Search Console', 'rank-math' ),\n\t\t\t'rank_math_analytics_objects'         => esc_html__( 'Database Table: Flat Posts', 'rank-math' ),\n\t\t\t'rank_math_analytics_ga'              => esc_html__( 'Database Table: Google Analytics', 'rank-math' ),\n\t\t\t'rank_math_analytics_adsense'         => esc_html__( 'Database Table: Google AdSense', 'rank-math' ),\n\t\t\t'rank_math_analytics_keyword_manager' => esc_html__( 'Database Table: Keyword Manager', 'rank-math' ),\n\t\t\t'rank_math_analytics_inspections'     => esc_html__( 'Database Table: Inspections', 'rank-math' ),\n\t\t];\n\n\t\tif ( ! defined( 'RANK_MATH_PRO_FILE' ) ) {\n\t\t\tunset(\n\t\t\t\t$should_exist['rank_math_analytics_ga'],\n\t\t\t\t$should_exist['rank_math_analytics_adsense'],\n\t\t\t\t$should_exist['rank_math_analytics_keyword_manager']\n\t\t\t);\n\t\t}\n\n\t\tforeach ( $should_exist as $name => $label ) {\n\t\t\t$rankmath['fields'][ $name ] = [\n\t\t\t\t'label' => $label,\n\t\t\t\t'value' => isset( $tables[ $name ] ) ? self::get_table_size( $name ) : esc_html__( 'Not found', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t\/\/ Core debug data.\n\t\tif ( ! class_exists( 'WP_Debug_Data' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/class-wp-debug-data.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\tif ( ! function_exists( 'got_url_rewrite' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/misc.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\tif ( false === function_exists( 'get_core_updates' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/update.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\tif ( ! class_exists( 'WP_Site_Health' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/class-wp-site-health.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\t$rankmath_data = apply_filters( 'rank_math\/status\/rank_math_info', $rankmath );\n\t\t$core_data     = \\WP_Debug_Data::debug_data();\n\n\t\t\/\/ Keep only relevant data.\n\t\t$core_data = array_intersect_key(\n\t\t\t$core_data,\n\t\t\tarray_flip(\n\t\t\t\t[\n\t\t\t\t\t'wp-core',\n\t\t\t\t\t'wp-dropins',\n\t\t\t\t\t'wp-active-theme',\n\t\t\t\t\t'wp-parent-theme',\n\t\t\t\t\t'wp-mu-plugins',\n\t\t\t\t\t'wp-plugins-active',\n\t\t\t\t\t'wp-server',\n\t\t\t\t\t'wp-database',\n\t\t\t\t\t'wp-constants',\n\t\t\t\t\t'wp-filesystem',\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\n\t\t$system_info = [ 'rank-math' => $rankmath_data ] + $core_data;\n\t\treturn array_merge(\n\t\t\t[\n\t\t\t\t'systemInfo'     => $system_info,\n\t\t\t\t'systemInfoCopy' => esc_attr( \\WP_Debug_Data::format( $system_info, 'debug' ) ),\n\t\t\t],\n\t\t\t\\RankMath\\Status\\Error_Log::get_error_log_localized_data()\n\t\t);\n\t}\n\n\t\/**\n\t * Get Table size.\n\t *\n\t * @param string $table Table name.\n\t *\n\t * @return int Table size.\n\t *\/\n\tpublic static function get_table_size( $table ) {\n\t\tglobal $wpdb;\n\t\t$size = (int) DB_Helper::get_var( \"SELECT SUM((data_length + index_length)) AS size FROM information_schema.TABLES WHERE table_schema='\" . $wpdb->dbname . \"' AND (table_name='\" . $wpdb->prefix . $table . \"')\" );\n\t\treturn size_format( $size );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/status\/class-import-export-settings.php","ext":"php","size":6371,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Import Export Settings Class\n *\n * @since      1.0.240\n * @package    RankMath\n * @subpackage RankMath\\Admin\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Status;\n\nuse WP_REST_Response;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Status\\Backup;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Import_Export_Settings class.\n *\/\nclass Import_Export_Settings {\n\t\/**\n\t * Handle export.\n\t *\/\n\tpublic static function export() {\n\t\t$panels = Param::post( 'panels', [], FILTER_DEFAULT, FILTER_REQUIRE_ARRAY );\n\n\t\treturn wp_json_encode( self::get_export_data( $panels ) );\n\t}\n\n\t\/**\n\t * Handle import.\n\t *\/\n\tpublic static function import() {\n\t\t$file = Helper::handle_file_upload();\n\t\tif ( isset( $file['error'] ) ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'Settings could not be imported:', 'rank-math' ) . ' ' . $file['error'],\n\t\t\t];\n\t\t}\n\n\t\tif ( ! isset( $file['file'] ) ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'Settings could not be imported: Upload failed.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t\/\/ Parse Options.\n\t\t$wp_filesystem = Helper::get_filesystem();\n\t\tif ( is_null( $wp_filesystem ) || ! Helper::is_filesystem_direct() ) {\n\t\t\treturn [\n\t\t\t\t'error' => esc_html__( 'Uploaded file could not be read.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$settings = $wp_filesystem->get_contents( $file['file'] );\n\t\t$settings = json_decode( $settings, true );\n\n\t\t\\wp_delete_file( $file['file'] );\n\n\t\tif ( is_array( $settings ) && self::do_import_data( $settings ) ) {\n\t\t\treturn [\n\t\t\t\t'success' => esc_html__( 'Settings successfully imported. Your old configuration has been saved as a backup.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\treturn [\n\t\t\t'error' => esc_html__( 'No settings found to be imported.', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Does import data.\n\t *\n\t * @param  array $data           Import data.\n\t * @param  bool  $suppress_hooks Suppress hooks or not.\n\t * @return bool\n\t *\/\n\tpublic static function do_import_data( array $data, $suppress_hooks = false ) {\n\t\tself::run_import_hooks( 'pre_import', $data, $suppress_hooks );\n\t\tBackup::create_backup();\n\n\t\t\/\/ Import options.\n\t\t$down = self::set_options( $data );\n\n\t\t\/\/ Import capabilities.\n\t\tif ( ! empty( $data['role-manager'] ) ) {\n\t\t\t$down = true;\n\t\t\tHelper::set_capabilities( $data['role-manager'] );\n\t\t}\n\n\t\t\/\/ Import redirections.\n\t\tif ( ! empty( $data['redirections'] ) ) {\n\t\t\t$down = true;\n\t\t\tself::set_redirections( $data['redirections'] );\n\t\t}\n\n\t\tself::run_import_hooks( 'after_import', $data, $suppress_hooks );\n\n\t\treturn $down;\n\t}\n\n\t\/**\n\t * Set options from data.\n\t *\n\t * @param array $data An array of data.\n\t *\/\n\tprivate static function set_options( $data ) {\n\t\t$set  = false;\n\t\t$hash = [\n\t\t\t'modules' => 'rank_math_modules',\n\t\t\t'general' => 'rank-math-options-general',\n\t\t\t'titles'  => 'rank-math-options-titles',\n\t\t\t'sitemap' => 'rank-math-options-sitemap',\n\t\t];\n\n\t\tforeach ( $hash as $key => $option_key ) {\n\t\t\tif ( ! empty( $data[ $key ] ) ) {\n\t\t\t\t$set = true;\n\t\t\t\tupdate_option( $option_key, $data[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\treturn $set;\n\t}\n\n\t\/**\n\t * Set redirections.\n\t *\n\t * @param array $redirections An array of redirections to import.\n\t *\/\n\tprivate static function set_redirections( $redirections ) {\n\t\tforeach ( $redirections as $key => $redirection ) {\n\t\t\t$matched = \\RankMath\\Redirections\\DB::match_redirections_source( $redirection['sources'] );\n\t\t\tif ( ! empty( $matched ) || ! is_serialized( $redirection['sources'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$sources = unserialize( trim( $redirection['sources'] ), [ 'allowed_classes' => false ] ); \/\/ phpcs:ignore -- We are going to move Redirections sources to JSON, that will fix this issue.\n\t\t\tif ( ! is_array( $sources ) || $sources instanceof \\__PHP_Incomplete_Class ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\\RankMath\\Redirections\\DB::add(\n\t\t\t\t[\n\t\t\t\t\t'url_to'      => $redirection['url_to'],\n\t\t\t\t\t'sources'     => self::sanitize_sources( $sources ),\n\t\t\t\t\t'header_code' => $redirection['header_code'],\n\t\t\t\t\t'hits'        => $redirection['hits'],\n\t\t\t\t\t'created'     => $redirection['created'],\n\t\t\t\t\t'updated'     => $redirection['updated'],\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Sanitize the redirection source before storing it.\n\t *\n\t * @param array $sources An array of redirection sources.\n\t *\/\n\tprivate static function sanitize_sources( $sources ) {\n\t\t$data = [];\n\t\tforeach ( $sources as $source ) {\n\t\t\tif ( empty( $source['pattern'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data[] = [\n\t\t\t\t'ignore'     => ! empty( $source['ignore'] ) ? 'case' : '',\n\t\t\t\t'pattern'    => wp_strip_all_tags( $source['pattern'], true ),\n\t\t\t\t'comparison' => in_array( $source['comparison'], [ 'exact', 'contains', 'start', 'end', 'regex' ], true ) ? $source['comparison'] : 'exact',\n\t\t\t];\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Run import hooks\n\t *\n\t * @param string $hook     Hook to fire.\n\t * @param array  $data     Import data.\n\t * @param bool   $suppress Suppress hooks or not.\n\t *\/\n\tprivate static function run_import_hooks( $hook, $data, $suppress ) {\n\t\tif ( ! $suppress ) {\n\t\t\t\/**\n\t\t\t * Fires while importing settings.\n\t\t\t *\n\t\t\t * @since 0.9.0\n\t\t\t *\n\t\t\t * @param array $data Import data.\n\t\t\t *\/\n\t\t\tdo_action( 'rank_math\/import\/settings\/' . $hook, $data );\n\t\t}\n\t}\n\n\t\/**\n\t * Gets export data.\n\t *\n\t * @param array $panels Which panels to export. All panels will be exported if this param is empty.\n\t * @return array\n\t *\/\n\tpublic static function get_export_data( array $panels = [] ) {\n\t\tif ( ! $panels ) {\n\t\t\t$panels = [ 'general', 'titles', 'sitemap', 'role-manager', 'redirections' ];\n\t\t}\n\n\t\tif ( ! \\RankMath\\Helpers\\DB::check_table_exists( 'rank_math_redirections' ) ) {\n\t\t\t$redirections_index = array_search( 'redirections', $panels, true );\n\t\t\tif ( false !== $redirections_index ) {\n\t\t\t\tunset( $panels[ $redirections_index ] );\n\t\t\t}\n\t\t}\n\n\t\t$settings = rank_math()->settings->all_raw();\n\t\t$data     = [];\n\t\tforeach ( $panels as $panel ) {\n\t\t\tif ( isset( $settings[ $panel ] ) ) {\n\t\t\t\t$data[ $panel ] = $settings[ $panel ];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( 'role-manager' === $panel ) {\n\t\t\t\t$data['role-manager'] = Helper::get_roles_capabilities();\n\t\t\t}\n\n\t\t\tif ( 'redirections' === $panel ) {\n\t\t\t\t$items = \\RankMath\\Redirections\\DB::get_redirections( [ 'limit' => 1000 ] );\n\n\t\t\t\t$data['redirections'] = $items['redirections'];\n\t\t\t}\n\n\t\t\t$data = apply_filters( 'rank_math\/export\/settings', $data, $panel );\n\t\t}\n\n\t\t$data['modules'] = get_option( 'rank_math_modules', [] );\n\n\t\treturn $data;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-yoast-howto-converter.php","ext":"php","size":3178,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Yoast HowTo Block Converter.\n *\n * @since      1.0.37\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Yoast_HowTo_Converter class.\n *\/\nclass Yoast_HowTo_Converter {\n\n\t\/**\n\t * Convert HowTo blocks to Rank Math.\n\t *\n\t * @param array $block Block to convert.\n\t *\n\t * @return array\n\t *\/\n\tpublic function convert( $block ) {\n\t\t$attrs     = $block['attrs'];\n\t\t$new_block = [\n\t\t\t'blockName' => 'rank-math\/howto-block',\n\t\t\t'attrs'     => [\n\t\t\t\t'hasDuration'       => isset( $attrs['hasDuration'] ) ? $attrs['hasDuration'] : '',\n\t\t\t\t'days'              => isset( $attrs['days'] ) ? $attrs['days'] : '',\n\t\t\t\t'hours'             => isset( $attrs['hours'] ) ? $attrs['hours'] : '',\n\t\t\t\t'minutes'           => isset( $attrs['minutes'] ) ? $attrs['minutes'] : '',\n\t\t\t\t'description'       => isset( $attrs['jsonDescription'] ) ? $attrs['jsonDescription'] : '',\n\t\t\t\t'listStyle'         => isset( $attrs['unorderedList'] ) && $attrs['unorderedList'] ? 'ol' : '',\n\t\t\t\t'timeLabel'         => isset( $attrs['durationText'] ) ? $attrs['durationText'] : '',\n\t\t\t\t'textAlign'         => 'left',\n\t\t\t\t'titleWrapper'      => 'h3',\n\t\t\t\t'listCssClasses'    => '',\n\t\t\t\t'titleCssClasses'   => '',\n\t\t\t\t'contentCssClasses' => '',\n\t\t\t\t'steps'             => array_map( [ $this, 'get_step' ], $attrs['steps'] ),\n\t\t\t\t'className'         => isset( $attrs['className'] ) ? $attrs['className'] : '',\n\t\t\t],\n\t\t];\n\n\t\t$new_block['innerContent'][] = $this->get_html( $new_block['attrs'] );\n\n\t\treturn $new_block;\n\t}\n\n\t\/**\n\t * Replace block in content.\n\t *\n\t * @param string $post_content Post content.\n\t * @param array  $blocks       Blocks.\n\t *\n\t * @return string\n\t *\/\n\tpublic function replace( $post_content, $blocks ) {\n\t\tpreg_match_all( '\/<!-- wp:yoast\\\/how-to-block.*-->.*<!-- \\\/wp:yoast\\\/how-to-block -->\/iUs', $post_content, $matches );\n\n\t\tforeach ( $matches[0] as $index => $match ) {\n\t\t\t$post_content = \\str_replace( $match, $blocks[ $index ], $post_content );\n\t\t}\n\n\t\treturn $post_content;\n\t}\n\n\t\/**\n\t * Format steps.\n\t *\n\t * @param array $step Steps.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_step( $step ) {\n\t\treturn [\n\t\t\t'id'      => uniqid( 'howto-step-' ),\n\t\t\t'visible' => true,\n\t\t\t'title'   => $step['jsonName'],\n\t\t\t'content' => $step['jsonText'],\n\t\t];\n\t}\n\n\t\/**\n\t * Generate HTML.\n\t *\n\t * @param array $attributes Block attributes.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_html( $attributes ) {\n\t\t\/\/ HTML.\n\t\t$out = [ '<div class=\"wp-block-rank-math-howto-block\">' ];\n\n\t\t\/\/ Steps.\n\t\tforeach ( $attributes['steps'] as $step ) {\n\t\t\tif ( empty( $step['visible'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$out[] = '<div class=\"rank-math-howto-step\">';\n\n\t\t\tif ( ! empty( $step['title'] ) ) {\n\t\t\t\t$out[] = sprintf(\n\t\t\t\t\t'<%1$s class=\"rank-math-howto-title\">%2$s<\/%1$s>',\n\t\t\t\t\t$attributes['titleWrapper'],\n\t\t\t\t\t$step['title']\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( ! empty( $step['content'] ) ) {\n\t\t\t\t$out[] = sprintf(\n\t\t\t\t\t'<div class=\"rank-math-howto-content\">%1$s<\/div>',\n\t\t\t\t\t$step['content']\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t$out[] = '<\/div>';\n\t\t}\n\n\t\t$out[] = '<\/div>';\n\n\t\treturn join( '', $out );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-update-score.php","ext":"php","size":6939,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The tool to update SEO score on existing posts.\n *\n * @since      1.0.97\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Admin\\Metabox\\Screen;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Update_Score class.\n *\/\nclass Update_Score {\n\n\tuse Hooker;\n\n\t\/**\n\t * Batch size.\n\t *\n\t * @var int\n\t *\/\n\tprivate $batch_size;\n\n\t\/**\n\t * Screen object.\n\t *\n\t * @var object\n\t *\/\n\tpublic $screen;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->batch_size = absint( apply_filters( 'rank_math\/recalculate_scores_batch_size', 25 ) );\n\n\t\t$this->filter( 'rank_math\/tools\/update_seo_score', 'update_seo_score' );\n\n\t\t$this->screen = new Screen();\n\t\t$this->screen->load_screen( 'post' );\n\n\t\tif ( Param::get( 'page' ) === 'rank-math-status' ) {\n\t\t\t$this->action( 'admin_enqueue_scripts', 'enqueue' );\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue scripts & add JSON data needed to update the SEO score on existing posts.\n\t *\/\n\tpublic function enqueue() {\n\t\t$scripts = [\n\t\t\t'lodash'             => '',\n\t\t\t'wp-data'            => '',\n\t\t\t'wp-core-data'       => '',\n\t\t\t'wp-compose'         => '',\n\t\t\t'wp-components'      => '',\n\t\t\t'wp-element'         => '',\n\t\t\t'wp-block-editor'    => '',\n\t\t\t'wp-wordcount'       => '',\n\t\t\t'rank-math-analyzer' => rank_math()->plugin_url() . 'assets\/admin\/js\/analyzer.js',\n\t\t];\n\n\t\tforeach ( $scripts as $handle => $src ) {\n\t\t\twp_enqueue_script( $handle, $src, [], rank_math()->version, true );\n\t\t}\n\n\t\tglobal $post;\n\t\t$temp_post = $post;\n\t\tif ( is_null( $post ) ) {\n\t\t\t$posts = get_posts(\n\t\t\t\t[\n\t\t\t\t\t'fields'         => 'id',\n\t\t\t\t\t'posts_per_page' => 1,\n\t\t\t\t\t'post_type'      => $this->get_post_types(),\n\t\t\t\t]\n\t\t\t);\n\t\t\t$post  = isset( $posts[0] ) ? $posts[0] : null; \/\/phpcs:ignore -- Overriding $post is required to load the localized data for the post.\n\t\t}\n\n\t\t$this->screen->localize();\n\t\t$post = $temp_post; \/\/phpcs:ignore -- Overriding $post is required to load the localized data for the post.\n\n\t\tHelper::add_json( 'totalPostsWithoutScore', $this->find( false ) );\n\t\tHelper::add_json( 'totalPosts', $this->find( true ) );\n\t\tHelper::add_json( 'batchSize', $this->batch_size );\n\t}\n\n\t\/**\n\t * Function to Update the SEO score.\n\t *\/\n\tpublic function update_seo_score() {\n\t\t$args   = Param::post( 'args', [], FILTER_DEFAULT, FILTER_REQUIRE_ARRAY );\n\t\t$offset = isset( $args['offset'] ) ? absint( $args['offset'] ) : 0;\n\n\t\t\/\/ We get \"paged\" when running from the importer.\n\t\t$paged = Param::post( 'paged', 0 );\n\t\tif ( $paged ) {\n\t\t\t$offset = ( $paged - 1 ) * $this->batch_size;\n\t\t}\n\n\t\t$update_all = ! isset( $args['update_all_scores'] ) || ! empty( $args['update_all_scores'] );\n\t\t$query_args = [\n\t\t\t'post_type'      => $this->get_post_types(),\n\t\t\t'posts_per_page' => $this->batch_size,\n\t\t\t'offset'         => $offset,\n\t\t\t'orderby'        => 'ID',\n\t\t\t'order'          => 'ASC',\n\t\t\t'status'         => 'any',\n\t\t\t'meta_query'     => [\n\t\t\t\t'relation' => 'AND',\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_focus_keyword',\n\t\t\t\t\t'value'   => '',\n\t\t\t\t\t'compare' => '!=',\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\n\t\tif ( ! $update_all ) {\n\t\t\t$query_args['meta_query'][] = [\n\t\t\t\t'relation' => 'OR',\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_seo_score',\n\t\t\t\t\t'compare' => 'NOT EXISTS',\n\t\t\t\t],\n\t\t\t\t[\n\t\t\t\t\t'key'     => 'rank_math_seo_score',\n\t\t\t\t\t'value'   => '',\n\t\t\t\t\t'compare' => '=',\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\n\t\t$posts = get_posts( $query_args );\n\n\t\tif ( empty( $posts ) ) {\n\t\t\treturn 'complete'; \/\/ Don't translate this string.\n\t\t}\n\n\t\tadd_filter(\n\t\t\t'rank_math\/replacements\/non_cacheable',\n\t\t\tfunction ( $non_cacheable ) {\n\t\t\t\t$non_cacheable[] = 'excerpt';\n\t\t\t\t$non_cacheable[] = 'excerpt_only';\n\t\t\t\t$non_cacheable[] = 'seo_description';\n\t\t\t\t$non_cacheable[] = 'keywords';\n\t\t\t\t$non_cacheable[] = 'focuskw';\n\t\t\t\treturn $non_cacheable;\n\t\t\t}\n\t\t);\n\n\t\trank_math()->variables->setup();\n\t\t$data = [];\n\t\tforeach ( $posts as $post ) {\n\t\t\t$post_id   = $post->ID;\n\t\t\t$post_type = $post->post_type;\n\t\t\t$title     = get_post_meta( $post_id, 'rank_math_title', true );\n\t\t\t$title     = $title ? $title : Paper::get_from_options( \"pt_{$post_type}_title\", $post, '%title% %sep% %sitename%' );\n\t\t\t$keywords  = array_map( 'trim', explode( ',', Helper::get_post_meta( 'focus_keyword', $post_id ) ) );\n\t\t\t$keyword   = $keywords[0];\n\n\t\t\t$values = [\n\t\t\t\t'title'        => Helper::replace_vars( '%seo_title%', $post ),\n\t\t\t\t'description'  => Helper::replace_vars( '%seo_description%', $post ),\n\t\t\t\t'keywords'     => $keywords,\n\t\t\t\t'keyword'      => $keyword,\n\t\t\t\t'content'      => wpautop( $post->post_content ),\n\t\t\t\t'url'          => urldecode( get_the_permalink( $post_id ) ),\n\t\t\t\t'hasContentAi' => ! empty( Helper::get_post_meta( 'contentai_score', $post_id ) ),\n\t\t\t];\n\n\t\t\tif ( has_post_thumbnail( $post_id ) ) {\n\t\t\t\t$thumbnail_id           = get_post_thumbnail_id( $post_id );\n\t\t\t\t$values['thumbnail']    = get_the_post_thumbnail_url( $post_id );\n\t\t\t\t$values['thumbnailAlt'] = get_post_meta( $thumbnail_id, '_wp_attachment_image_alt', true );\n\t\t\t}\n\n\t\t\t\/**\n\t\t\t * Filter the values sent to the analyzer to calculate the SEO score.\n\t\t\t *\n\t\t\t * @param array $values The values to be sent to the analyzer.\n\t\t\t *\/\n\t\t\t$data[ $post_id ] = $this->do_filter( 'recalculate_score\/data', $values, $post_id );\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Update_Score\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Update_Score ) ) {\n\t\t\t$instance = new Update_Score();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Find posts with focus keyword but no SEO score.\n\t *\n\t * @param  bool $update_all Whether to update all posts or only those without a score.\n\t * @return int\n\t *\/\n\tpublic function find( $update_all = true ) {\n\t\tglobal $wpdb;\n\t\t$post_types  = $this->get_post_types();\n\t\t$placeholder = implode( ', ', array_fill( 0, count( $post_types ), '%s' ) );\n\t\t$query       = \"SELECT COUNT(ID) FROM {$wpdb->posts} as p\n\t\t\tLEFT JOIN {$wpdb->postmeta} as pm ON p.ID = pm.post_id AND pm.meta_key = 'rank_math_focus_keyword'\n\t\t\tWHERE p.post_type IN ({$placeholder}) AND p.post_status = 'publish' AND pm.meta_value != ''\";\n\n\t\tif ( ! $update_all ) {\n\t\t\t$query .= \" AND (SELECT COUNT(*) FROM {$wpdb->postmeta} as pm2 WHERE pm2.post_id = p.ID AND pm2.meta_key = 'rank_math_seo_score' AND pm2.meta_value != '') = 0\";\n\t\t}\n\n\t\t$update_score_post_ids = DB_Helper::get_var( $wpdb->prepare( $query, $post_types ) );\n\n\t\treturn (int) $update_score_post_ids;\n\t}\n\n\t\/**\n\t * Get post types.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_post_types() {\n\t\t$post_types = get_post_types( [ 'public' => true ] );\n\t\tif ( isset( $post_types['attachment'] ) ) {\n\t\t\tunset( $post_types['attachment'] );\n\t\t}\n\n\t\treturn $this->do_filter( 'tool\/post_types', array_keys( $post_types ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-yoast-toc-converter.php","ext":"php","size":3005,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Yoast TOC Block Converter.\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\nuse RankMath\\Helpers\\HTML;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Yoast_TOC_Converter class.\n *\/\nclass Yoast_TOC_Converter {\n\n\t\/**\n\t * Convert TOC blocks to Rank Math.\n\t *\n\t * @param array $block Block to convert.\n\t *\n\t * @return array\n\t *\/\n\tpublic function convert( $block ) {\n\t\t$exclude_headings = [];\n\t\tif ( ! empty( $block['attrs']['maxHeadingLevel'] ) ) {\n\t\t\tfor ( $i = $block['attrs']['maxHeadingLevel'] + 1; $i <= 6; $i++ ) {\n\t\t\t\t$exclude_headings[] = \"h{$i}\";\n\t\t\t}\n\t\t}\n\n\t\t$new_block = [\n\t\t\t'blockName' => 'rank-math\/toc-block',\n\t\t\t'attrs'     => [\n\t\t\t\t'title'           => $this->get_toc_title( $block['innerHTML'] ),\n\t\t\t\t'headings'        => $this->get_headings( $block['innerHTML'] ),\n\t\t\t\t'listStyle'       => 'ul',\n\t\t\t\t'titleWrapper'    => 'h2',\n\t\t\t\t'excludeHeadings' => $exclude_headings,\n\t\t\t],\n\t\t];\n\n\t\t$new_block['innerContent'][] = $this->get_html( $block['innerHTML'] );\n\n\t\treturn $new_block;\n\t}\n\n\t\/**\n\t * Replace block in content.\n\t *\n\t * @param string $post_content Post content.\n\t * @param array  $blocks       Blocks.\n\t *\n\t * @return string\n\t *\/\n\tpublic function replace( $post_content, $blocks ) {\n\t\tpreg_match_all( '\/<!-- wp:yoast-seo\\\/table-of-contents.*-->.*<!-- \\\/wp:yoast-seo\\\/table-of-contents -->\/iUs', $post_content, $matches );\n\n\t\tforeach ( $matches[0] as $index => $match ) {\n\t\t\t$post_content = \\str_replace( $match, $blocks[ $index ], $post_content );\n\t\t}\n\n\t\treturn $post_content;\n\t}\n\n\t\/**\n\t * Extract headings from the block content.\n\t *\n\t * @param string $content Block content.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_headings( $content ) {\n\t\tpreg_match_all( '|<a\\s*href=\"([^\"]+)\"[^>]+>([^<]+)<\/a>|', $content, $matches );\n\t\tif ( empty( $matches ) || empty( $matches[0] ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$headings = [];\n\t\tforeach ( $matches[0] as $link ) {\n\t\t\t$attrs      = HTML::extract_attributes( $link );\n\t\t\t$headings[] = [\n\t\t\t\t'key'     => uniqid( 'toc-' ),\n\t\t\t\t'link'    => $attrs['href'] ?? '',\n\t\t\t\t'content' => wp_strip_all_tags( $link ),\n\t\t\t\t'level'   => $attrs['data-level'] ?? '',\n\t\t\t\t'disable' => false,\n\t\t\t];\n\t\t}\n\t\treturn $headings;\n\t}\n\n\t\/**\n\t * Get TOC title.\n\t *\n\t * @param string $html Block HTML.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_toc_title( $html ) {\n\t\tpreg_match( '#<h2.*?>(.*?)<\/h2>#i', $html, $found );\n\t\treturn ! empty( $found[1] ) ? $found[1] : '';\n\t}\n\n\t\/**\n\t * Generate HTML.\n\t *\n\t * @param string $html Block html.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_html( $html ) {\n\t\t$html = str_replace( 'wp-block-yoast-seo-table-of-contents yoast-table-of-contents', 'wp-block-rank-math-toc-block', $html );\n\t\t$html = str_replace( '<\/h2><ul>', '<\/h2><nav><ul>', $html );\n\t\t$html = str_replace( '<\/ul><\/div>', '<\/nav><\/ul><\/div>', $html );\n\t\t$html = preg_replace( '\/data-level=\"([^\"]*)\"\/', '', $html );\n\n\t\treturn $html;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-yoast-blocks.php","ext":"php","size":7093,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Yoast Block Converter imports editor blocks (FAQ, HowTo, Local Business) from Yoast to Rank Math.\n *\n * @since      1.0.37\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Yoast_Blocks class.\n *\/\nclass Yoast_Blocks extends \\WP_Background_Process {\n\n\t\/**\n\t * FAQ Converter.\n\t *\n\t * @var Yoast_FAQ_Converter\n\t *\/\n\tprivate $faq_converter;\n\n\t\/**\n\t * FAQ Converter.\n\t *\n\t * @var Yoast_HowTo_Converter\n\t *\/\n\tprivate $howto_converter;\n\n\t\/**\n\t * TOC Converter.\n\t *\n\t * @var Yoast_TOC_Converter\n\t *\/\n\tprivate $toc_converter;\n\n\t\/**\n\t * Local Converter.\n\t *\n\t * @var Yoast_Local_Converter\n\t *\/\n\tprivate $local_converter;\n\n\t\/**\n\t * Action.\n\t *\n\t * @var string\n\t *\/\n\tprotected $action = 'convert_yoast_blocks';\n\n\t\/**\n\t * Holds blocks for each post.\n\t *\n\t * @var array\n\t *\/\n\tprivate static $yoast_blocks = [];\n\n\t\/**\n\t * Main instance.\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Yoast_Blocks\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Yoast_Blocks ) ) {\n\t\t\t$instance = new Yoast_Blocks();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Start creating batches.\n\t *\n\t * @param array $posts Posts to process.\n\t *\/\n\tpublic function start( $posts ) {\n\t\t$chunks = array_chunk( $posts, 10 );\n\t\tforeach ( $chunks as $chunk ) {\n\t\t\t$this->push_to_queue( $chunk );\n\t\t}\n\n\t\t$this->save()->dispatch();\n\t}\n\n\t\/**\n\t * Complete.\n\t *\n\t * Override if applicable, but ensure that the below actions are\n\t * performed, or, call parent::complete().\n\t *\/\n\tprotected function complete() {\n\t\t$posts = get_option( 'rank_math_yoast_block_posts' );\n\t\tdelete_option( 'rank_math_yoast_block_posts' );\n\t\tHelper::add_notification(\n\t\t\t\/\/ Translators: placeholder is the number of modified posts.\n\t\t\tsprintf( _n( 'Blocks successfully converted in %d post.', 'Blocks successfully converted in %d posts.', $posts['count'], 'rank-math' ), $posts['count'] ),\n\t\t\t[\n\t\t\t\t'type'    => 'success',\n\t\t\t\t'id'      => 'rank_math_yoast_block_posts',\n\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t]\n\t\t);\n\n\t\tparent::complete();\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param string $posts Posts to process.\n\t *\/\n\tpublic function wizard( $posts ) {\n\t\t$this->task( $posts );\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param array $posts Posts to process.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function task( $posts ) {\n\t\ttry {\n\t\t\tremove_filter( 'pre_kses', 'wp_pre_kses_block_attributes', 10 );\n\t\t\t$this->faq_converter   = new Yoast_FAQ_Converter();\n\t\t\t$this->howto_converter = new Yoast_HowTo_Converter();\n\t\t\t$this->local_converter = new Yoast_Local_Converter();\n\t\t\t$this->toc_converter   = new Yoast_TOC_Converter();\n\t\t\tforeach ( $posts as $post_id ) {\n\t\t\t\tself::$yoast_blocks = [];\n\t\t\t\t$post               = get_post( $post_id );\n\t\t\t\t$this->convert( $post );\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch ( \\Exception $error ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t\/**\n\t * Convert post.\n\t *\n\t * @param WP_Post $post Post object.\n\t *\/\n\tpublic function convert( $post ) {\n\t\t$dirty  = false;\n\t\t$blocks = $this->parse_blocks( $post->post_content );\n\n\t\t$content = '';\n\t\tif ( isset( $blocks['yoast\/faq-block'] ) && ! empty( $blocks['yoast\/faq-block'] ) ) {\n\t\t\t$dirty   = true;\n\t\t\t$content = $this->faq_converter->replace( $post->post_content, $blocks['yoast\/faq-block'] );\n\t\t}\n\n\t\tif ( isset( $blocks['yoast\/how-to-block'] ) && ! empty( $blocks['yoast\/how-to-block'] ) ) {\n\t\t\t$dirty   = true;\n\t\t\t$content = $this->howto_converter->replace( $post->post_content, $blocks['yoast\/how-to-block'] );\n\t\t}\n\n\t\tif ( isset( $blocks['yoast-seo\/table-of-contents'] ) && ! empty( $blocks['yoast-seo\/table-of-contents'] ) ) {\n\t\t\t$dirty   = true;\n\t\t\t$content = $this->toc_converter->replace( $post->post_content, $blocks['yoast-seo\/table-of-contents'] );\n\t\t}\n\n\t\tif ( ! empty( array_intersect( array_keys( $blocks ), $this->local_converter->yoast_blocks ) ) ) {\n\t\t\t$dirty   = true;\n\t\t\t$content = $this->local_converter->replace( $post->post_content, $blocks );\n\t\t}\n\n\t\tif ( $dirty ) {\n\t\t\t$post->post_content = $content;\n\t\t\twp_update_post( $post );\n\t\t}\n\t}\n\n\t\/**\n\t * Find posts with Yoast blocks.\n\t *\n\t * @return array\n\t *\/\n\tpublic function find_posts() {\n\t\t$posts = get_option( 'rank_math_yoast_block_posts' );\n\t\tif ( ! empty( $posts['posts'] ) ) {\n\t\t\treturn $posts;\n\t\t}\n\n\t\t\/\/ FAQs Posts.\n\t\t$args = [\n\t\t\t's'             => 'wp:yoast\/faq-block',\n\t\t\t'post_status'   => 'any',\n\t\t\t'numberposts'   => -1,\n\t\t\t'fields'        => 'ids',\n\t\t\t'no_found_rows' => true,\n\t\t\t'post_type'     => 'any',\n\t\t];\n\t\t$faqs = get_posts( $args );\n\n\t\t\/\/ HowTo Posts.\n\t\t$args['s'] = 'wp:yoast\/how-to-block';\n\t\t$howto     = get_posts( $args );\n\n\t\t\/\/ TOC Posts.\n\t\t$args['s'] = 'wp:yoast-seo\/table-of-contents';\n\t\t$toc       = get_posts( $args );\n\n\t\t\/\/ Local Business Posts.\n\t\t$args['s']      = ':yoast-seo-local\/';\n\t\t$local_business = get_posts( $args );\n\t\t$posts          = array_merge( $faqs, $howto, $toc, $local_business );\n\n\t\t$posts_data = [\n\t\t\t'posts' => $posts,\n\t\t\t'count' => count( $posts ),\n\t\t];\n\t\tupdate_option( 'rank_math_yoast_block_posts', $posts_data, false );\n\n\t\treturn $posts_data;\n\t}\n\n\t\/**\n\t * Parse blocks to get data.\n\t *\n\t * @param string $content Post content to parse.\n\t *\n\t * @return array\n\t *\/\n\tprivate function parse_blocks( $content ) {\n\t\t$parsed_blocks = $this->filter_parsed_blocks( parse_blocks( $content ) );\n\n\t\t$blocks = [];\n\t\tforeach ( $parsed_blocks as $block ) {\n\t\t\tif ( empty( $block['blockName'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$name = strtolower( $block['blockName'] );\n\t\t\tif ( ! isset( $blocks[ $name ] ) || ! is_array( $blocks[ $name ] ) ) {\n\t\t\t\t$blocks[ $name ] = [];\n\t\t\t}\n\n\t\t\tif ( ! isset( $block['innerContent'] ) ) {\n\t\t\t\t$block['innerContent'] = [];\n\t\t\t}\n\n\t\t\tif ( 'yoast\/faq-block' === $name ) {\n\t\t\t\t$block             = $this->faq_converter->convert( $block );\n\t\t\t\t$blocks[ $name ][] = \\serialize_block( $block );\n\t\t\t}\n\n\t\t\tif ( 'yoast\/how-to-block' === $name ) {\n\t\t\t\t$block             = $this->howto_converter->convert( $block );\n\t\t\t\t$blocks[ $name ][] = \\serialize_block( $block );\n\t\t\t}\n\n\t\t\tif ( 'yoast-seo\/table-of-contents' === $name ) {\n\t\t\t\t$block             = $this->toc_converter->convert( $block );\n\t\t\t\t$blocks[ $name ][] = \\serialize_block( $block );\n\t\t\t}\n\n\t\t\tif ( in_array( $name, $this->local_converter->yoast_blocks, true ) ) {\n\t\t\t\t$block             = $this->local_converter->convert( $block );\n\t\t\t\t$blocks[ $name ][] = \\serialize_block( $block );\n\t\t\t}\n\t\t}\n\n\t\treturn $blocks;\n\t}\n\n\t\/**\n\t * Does a deep filter for blocks.\n\t *\n\t * @param array $blocks The blocks array.\n\t *\n\t * @return array\n\t *\/\n\tprivate function filter_parsed_blocks( $blocks ) {\n\t\t$block_names = [\n\t\t\t'yoast-seo\/table-of-contents',\n\t\t\t'yoast\/how-to-block',\n\t\t\t'yoast\/faq-block',\n\t\t];\n\n\t\tforeach ( $blocks as $block ) {\n\t\t\tif ( in_array( $block['blockName'], $block_names, true ) ) {\n\t\t\t\tself::$yoast_blocks[] = $block;\n\t\t\t}\n\t\t\tif ( ! empty( $block['innerBlocks'] ) ) {\n\t\t\t\t$this->filter_parsed_blocks( $block['innerBlocks'] );\n\t\t\t}\n\t\t}\n\n\t\treturn self::$yoast_blocks;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-yoast-faq-converter.php","ext":"php","size":2636,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Yoast FAQ Block Converter.\n *\n * @since      1.0.37\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Yoast_FAQ_Converter class.\n *\/\nclass Yoast_FAQ_Converter {\n\n\t\/**\n\t * Convert FAQ blocks to Rank Math.\n\t *\n\t * @param array $block Block to convert.\n\t *\n\t * @return array\n\t *\/\n\tpublic function convert( $block ) {\n\t\t$new_block = [\n\t\t\t'blockName' => 'rank-math\/faq-block',\n\t\t\t'attrs'     => [\n\t\t\t\t'listStyle'         => '',\n\t\t\t\t'textAlign'         => 'left',\n\t\t\t\t'titleWrapper'      => 'h3',\n\t\t\t\t'listCssClasses'    => '',\n\t\t\t\t'titleCssClasses'   => '',\n\t\t\t\t'contentCssClasses' => '',\n\t\t\t\t'questions'         => array_map( [ $this, 'get_question' ], $block['attrs']['questions'] ),\n\t\t\t\t'className'         => isset( $block['attrs']['className'] ) ? $block['attrs']['className'] : '',\n\t\t\t],\n\t\t];\n\n\t\t$new_block['innerContent'][] = $this->get_html( $new_block['attrs'] );\n\n\t\treturn $new_block;\n\t}\n\n\t\/**\n\t * Replace block in content.\n\t *\n\t * @param string $post_content Post content.\n\t * @param array  $blocks       Blocks.\n\t *\n\t * @return string\n\t *\/\n\tpublic function replace( $post_content, $blocks ) {\n\t\tpreg_match_all( '\/<!-- wp:yoast\\\/faq-block.*-->.*<!-- \\\/wp:yoast\\\/faq-block -->\/iUs', $post_content, $matches );\n\n\t\tforeach ( $matches[0] as $index => $match ) {\n\t\t\t$post_content = \\str_replace( $match, $blocks[ $index ], $post_content );\n\t\t}\n\n\t\treturn $post_content;\n\t}\n\n\t\/**\n\t * Format questions.\n\t *\n\t * @param array $question Question.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_question( $question ) {\n\t\treturn [\n\t\t\t'id'      => uniqid( 'faq-question-' ),\n\t\t\t'visible' => true,\n\t\t\t'title'   => $question['jsonQuestion'],\n\t\t\t'content' => $question['jsonAnswer'],\n\t\t];\n\t}\n\n\t\/**\n\t * Generate HTML.\n\t *\n\t * @param array $attributes Block attributes.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_html( $attributes ) {\n\t\t\/\/ HTML.\n\t\t$out = [ '<div class=\"wp-block-rank-math-faq-block\">' ];\n\n\t\t\/\/ Questions.\n\t\tforeach ( $attributes['questions'] as $question ) {\n\t\t\tif ( empty( $question['title'] ) || empty( $question['content'] ) || empty( $question['visible'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$out[] = '<div class=\"rank-math-faq-item\">';\n\t\t\t$out[] = sprintf(\n\t\t\t\t'<%1$s class=\"rank-math-question\">%2$s<\/%1$s>',\n\t\t\t\t$attributes['titleWrapper'],\n\t\t\t\t$question['title']\n\t\t\t);\n\n\t\t\t$out[] = sprintf(\n\t\t\t\t'<div class=\"rank-math-answer\">%2$s<\/div>',\n\t\t\t\t$attributes['titleWrapper'],\n\t\t\t\t$question['content']\n\t\t\t);\n\n\t\t\t$out[] = '<\/div>';\n\t\t}\n\n\t\t$out[] = '<\/div>';\n\n\t\treturn join( '', $out );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-yoast-local-converter.php","ext":"php","size":5926,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Yoast Local Business Block Converter.\n *\n * @since      1.0.48\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Yoast_Local_Converter class.\n *\/\nclass Yoast_Local_Converter {\n\n\t\/**\n\t * Yoast's Local Business Blocks.\n\t *\n\t * @var array\n\t *\/\n\tpublic $yoast_blocks = [\n\t\t'yoast-seo-local\/store-locator',\n\t\t'yoast-seo-local\/address',\n\t\t'yoast-seo-local\/map',\n\t\t'yoast-seo-local\/opening-hours',\n\t];\n\n\t\/**\n\t * Convert Local Business blocks to Rank Math.\n\t *\n\t * @param array $block Block to convert.\n\t *\n\t * @return array\n\t *\/\n\tpublic function convert( $block ) {\n\t\t$block['attrs']['type'] = str_replace( 'yoast-seo-local\/', '', $block['blockName'] );\n\n\t\t$new_block = [\n\t\t\t'blockName' => 'rank-math\/local-business',\n\t\t\t'attrs'     => $this->get_attributes( $block['attrs'] ),\n\t\t];\n\n\t\t$new_block['innerContent'] = '';\n\n\t\treturn $new_block;\n\t}\n\n\t\/**\n\t * Replace block in content.\n\t *\n\t * @param string $post_content Post content.\n\t * @param array  $blocks       Blocks.\n\t *\n\t * @return string\n\t *\/\n\tpublic function replace( $post_content, $blocks ) {\n\t\tforeach ( $blocks as $block_name => $block ) {\n\t\t\tif ( ! in_array( $block_name, $this->yoast_blocks, true ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$block_name = str_replace( 'yoast-seo-local\/', '', $block_name );\n\t\t\tpreg_match_all( \"\/<!-- wp:yoast-seo-local\\\/{$block_name}.*-->.*<!-- \\\/wp:yoast-seo-local\\\/{$block_name} -->\/iUs\", $post_content, $matches );\n\t\t\tforeach ( $matches[0] as $index => $match ) {\n\t\t\t\t$post_content = \\str_replace( $match, $block[ $index ], $post_content );\n\t\t\t}\n\t\t}\n\n\t\treturn $post_content;\n\t}\n\n\t\/**\n\t * Get Block attributes.\n\t *\n\t * @param array $attrs Yoast Block Attributes.\n\t *\/\n\tprivate function get_attributes( $attrs ) {\n\t\t$default_opening_days = 'Monday,\tTuesday, Wednesday, Thursday, Friday, Saturday, Sunday';\n\t\tif ( 'opening-hours' === $attrs['type'] ) {\n\t\t\t$days         = explode( ', ', $default_opening_days );\n\t\t\t$default_days = [];\n\n\t\t\tforeach ( $days as $day ) {\n\t\t\t\tif ( isset( $attrs[ \"show{$day}\" ] ) ) {\n\t\t\t\t\t$default_days[ $day ] = ! empty( $attrs[ \"show{$day}\" ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $default_days ) ) {\n\t\t\t\t$default_opening_days = implode( ',', array_filter( array_keys( $default_days ) ) );\n\t\t\t}\n\t\t}\n\t\treturn [\n\t\t\t'type'                   => isset( $attrs['type'] ) ? $attrs['type'] : 'address',\n\t\t\t'locations'              => 0,\n\t\t\t'terms'                  => [],\n\t\t\t'limit'                  => isset( $attrs['maxNumber'] ) ? $attrs['maxNumber'] : 0,\n\t\t\t'show_company_name'      => isset( $attrs['hideName'] ) ? ! $attrs['hideName'] : true,\n\t\t\t'show_company_address'   => isset( $attrs['hideCompanyAddress'] ) ? ! $attrs['hideCompanyAddress'] : true,\n\t\t\t'show_on_one_line'       => isset( $attrs['showOnOneLine'] ) ? ! $attrs['showOnOneLine'] : false,\n\t\t\t'show_state'             => isset( $attrs['showState'] ) ? $attrs['showState'] : true,\n\t\t\t'show_country'           => isset( $attrs['showCountry'] ) ? $attrs['showCountry'] : true,\n\t\t\t'show_telephone'         => isset( $attrs['showPhone'] ) ? $attrs['showPhone'] : true,\n\t\t\t'show_secondary_number'  => isset( $attrs['showPhone2nd'] ) ? $attrs['showPhone2nd'] : true,\n\t\t\t'show_fax'               => isset( $attrs['showFax'] ) ? $attrs['showFax'] : false,\n\t\t\t'show_email'             => isset( $attrs['showEmail'] ) ? $attrs['showEmail'] : true,\n\t\t\t'show_url'               => isset( $attrs['showURL'] ) ? $attrs['showURL'] : true,\n\t\t\t'show_logo'              => isset( $attrs['showLogo'] ) ? $attrs['showLogo'] : true,\n\t\t\t'show_vat_id'            => isset( $attrs['showVatId'] ) ? $attrs['showVatId'] : false,\n\t\t\t'show_tax_id'            => isset( $attrs['showTaxId'] ) ? $attrs['showTaxId'] : false,\n\t\t\t'show_coc_id'            => isset( $attrs['showCocId'] ) ? $attrs['showCocId'] : false,\n\t\t\t'show_priceRange'        => isset( $attrs['showPriceRange'] ) ? $attrs['showPriceRange'] : false,\n\t\t\t'show_opening_hours'     => isset( $attrs['showOpeningHours'] ) ? $attrs['showOpeningHours'] : false,\n\t\t\t'show_days'              => $default_opening_days,\n\t\t\t'hide_closed_days'       => isset( $attrs['hideClosedDays'] ) ? $attrs['hideClosedDays'] : false,\n\t\t\t'show_opening_now_label' => isset( $attrs['showOpenLabel'] ) ? $attrs['showOpenLabel'] : false,\n\t\t\t'opening_hours_note'     => isset( $attrs['extraComment'] ) ? $attrs['extraComment'] : '',\n\t\t\t'show_map'               => isset( $attrs['showMap'] ) ? $attrs['showMap'] : false,\n\t\t\t'map_type'               => isset( $attrs['mapType'] ) ? $attrs['mapType'] : 'roadmap',\n\t\t\t'map_width'              => isset( $attrs['mapWidth'] ) ? $attrs['mapWidth'] : '500',\n\t\t\t'map_height'             => isset( $attrs['mapHeight'] ) ? $attrs['mapHeight'] : '300',\n\t\t\t'zoom_level'             => isset( $attrs['zoomLevel'] ) ? $attrs['zoomLevel'] : -1,\n\t\t\t'allow_zoom'             => true,\n\t\t\t'allow_scrolling'        => isset( $attrs['allowScrolling'] ) ? $attrs['allowScrolling'] : true,\n\t\t\t'allow_dragging'         => isset( $attrs['allowDragging'] ) ? $attrs['allowDragging'] : true,\n\t\t\t'show_route_planner'     => isset( $attrs['showRoute'] ) ? $attrs['showRoute'] : true,\n\t\t\t'route_label'            => Helper::get_settings( 'titles.route_label' ),\n\t\t\t'show_category_filter'   => isset( $attrs['showCategoryFilter'] ) ? $attrs['showCategoryFilter'] : false,\n\t\t\t'show_marker_clustering' => isset( $attrs['markerClustering'] ) ? $attrs['markerClustering'] : true,\n\t\t\t'show_infowindow'        => isset( $attrs['defaultShowInfoWindow'] ) ? $attrs['defaultShowInfoWindow'] : true,\n\t\t\t'show_radius'            => isset( $attrs['showRadius'] ) ? $attrs['showRadius'] : true,\n\t\t\t'show_nearest_location'  => isset( $attrs['showNearest'] ) ? $attrs['showNearest'] : true,\n\t\t\t'search_radius'          => isset( $attrs['searchRadius'] ) ? $attrs['searchRadius'] : '10',\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-aioseo-blocks.php","ext":"php","size":4367,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The AIOSEO Block Converter imports editor blocks (TOC) from AIOSEO to Rank Math.\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * AIOSEO_Blocks class.\n *\/\nclass AIOSEO_Blocks extends \\WP_Background_Process {\n\n\t\/**\n\t * TOC Converter.\n\t *\n\t * @var AIOSEO_TOC_Converter\n\t *\/\n\tprivate $toc_converter;\n\n\t\/**\n\t * Action.\n\t *\n\t * @var string\n\t *\/\n\tprotected $action = 'convert_aioseo_blocks';\n\n\t\/**\n\t * Main instance.\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return AIOSEO_Blocks\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof AIOSEO_Blocks ) ) {\n\t\t\t$instance = new AIOSEO_Blocks();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Start creating batches.\n\t *\n\t * @param array $posts Posts to process.\n\t *\/\n\tpublic function start( $posts ) {\n\t\t$chunks = array_chunk( $posts, 10 );\n\t\tforeach ( $chunks as $chunk ) {\n\t\t\t$this->push_to_queue( $chunk );\n\t\t}\n\n\t\t$this->save()->dispatch();\n\t}\n\n\t\/**\n\t * Complete.\n\t *\n\t * Override if applicable, but ensure that the below actions are\n\t * performed, or, call parent::complete().\n\t *\/\n\tprotected function complete() {\n\t\t$posts = get_option( 'rank_math_aioseo_block_posts' );\n\t\tdelete_option( 'rank_math_aioseo_block_posts' );\n\t\tHelper::add_notification(\n\t\t\t\/\/ Translators: placeholder is the number of modified posts.\n\t\t\tsprintf( _n( 'Blocks successfully converted in %d post.', 'Blocks successfully converted in %d posts.', $posts['count'], 'rank-math' ), $posts['count'] ),\n\t\t\t[\n\t\t\t\t'type'    => 'success',\n\t\t\t\t'id'      => 'rank_math_aioseo_block_posts',\n\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t]\n\t\t);\n\n\t\tparent::complete();\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param string $posts Posts to process.\n\t *\/\n\tpublic function wizard( $posts ) {\n\t\t$this->task( $posts );\n\t}\n\n\t\/**\n\t * Task to perform.\n\t *\n\t * @param array $posts Posts to process.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function task( $posts ) {\n\t\ttry {\n\t\t\tremove_filter( 'pre_kses', 'wp_pre_kses_block_attributes', 10 );\n\t\t\t$this->toc_converter = new AIOSEO_TOC_Converter();\n\t\t\tforeach ( $posts as $post_id ) {\n\t\t\t\t$post = get_post( $post_id );\n\t\t\t\t$this->convert( $post );\n\t\t\t}\n\t\t\treturn false;\n\t\t} catch ( \\Exception $error ) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t\/**\n\t * Convert post.\n\t *\n\t * @param WP_Post $post Post object.\n\t *\/\n\tpublic function convert( $post ) {\n\t\t$dirty   = false;\n\t\t$blocks  = $this->parse_blocks( $post->post_content );\n\t\t$content = '';\n\n\t\tif ( isset( $blocks['aioseo\/table-of-contents'] ) && ! empty( $blocks['aioseo\/table-of-contents'] ) ) {\n\t\t\t$dirty   = true;\n\t\t\t$content = $this->toc_converter->replace( $post->post_content, $blocks['aioseo\/table-of-contents'] );\n\t\t}\n\n\t\tif ( $dirty ) {\n\t\t\t$post->post_content = $content;\n\t\t\twp_update_post( $post );\n\t\t}\n\t}\n\n\t\/**\n\t * Find posts with AIOSEO blocks.\n\t *\n\t * @return array\n\t *\/\n\tpublic function find_posts() {\n\t\t$posts = get_option( 'rank_math_aioseo_block_posts' );\n\t\tif ( false !== $posts ) {\n\t\t\treturn $posts;\n\t\t}\n\n\t\t\/\/ TOC Posts.\n\t\t$args = [\n\t\t\t's'             => 'wp:aioseo\/table-of-contents ',\n\t\t\t'post_status'   => 'any',\n\t\t\t'numberposts'   => -1,\n\t\t\t'fields'        => 'ids',\n\t\t\t'no_found_rows' => true,\n\t\t\t'post_type'     => 'any',\n\t\t];\n\n\t\t$toc_posts  = get_posts( $args );\n\t\t$posts_data = [\n\t\t\t'posts' => $toc_posts,\n\t\t\t'count' => count( $toc_posts ),\n\t\t];\n\t\tupdate_option( 'rank_math_aioseo_block_posts', $posts_data, false );\n\n\t\treturn $posts_data;\n\t}\n\n\t\/**\n\t * Parse blocks to get data.\n\t *\n\t * @param string $content Post content to parse.\n\t *\n\t * @return array\n\t *\/\n\tprivate function parse_blocks( $content ) {\n\t\t$parsed_blocks = parse_blocks( $content );\n\n\t\t$blocks = [];\n\t\tforeach ( $parsed_blocks as $block ) {\n\t\t\tif ( empty( $block['blockName'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$name = strtolower( $block['blockName'] );\n\t\t\tif ( ! isset( $blocks[ $name ] ) || ! is_array( $blocks[ $name ] ) ) {\n\t\t\t\t$blocks[ $name ] = [];\n\t\t\t}\n\n\t\t\tif ( ! isset( $block['innerContent'] ) ) {\n\t\t\t\t$block['innerContent'] = [];\n\t\t\t}\n\n\t\t\tif ( 'aioseo\/table-of-contents' === $name ) {\n\t\t\t\t$block             = $this->toc_converter->convert( $block );\n\t\t\t\t$blocks[ $name ][] = \\serialize_block( $block );\n\t\t\t}\n\t\t}\n\n\t\treturn $blocks;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-aioseo-toc-converter.php","ext":"php","size":2856,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The AIOSEO TOC Block Converter.\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Status\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Tools;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * AIOSEO_TOC_Converter class.\n *\/\nclass AIOSEO_TOC_Converter {\n\n\t\/**\n\t * Convert TOC blocks to Rank Math.\n\t *\n\t * @param array $block Block to convert.\n\t *\n\t * @return array\n\t *\/\n\tpublic function convert( $block ) {\n\t\t$attributes = $block['attrs'];\n\t\t$headings   = [];\n\t\t$this->get_headings( $attributes['headings'], $headings );\n\t\t$new_block = [\n\t\t\t'blockName' => 'rank-math\/toc-block',\n\t\t\t'attrs'     => [\n\t\t\t\t'title'           => '',\n\t\t\t\t'headings'        => $headings,\n\t\t\t\t'listStyle'       => $attributes['listStyle'] ?? 'ul',\n\t\t\t\t'titleWrapper'    => 'h2',\n\t\t\t\t'excludeHeadings' => [],\n\t\t\t],\n\t\t];\n\n\t\t$new_block['innerContent'][] = $this->get_html( $block['innerHTML'] );\n\t\treturn $new_block;\n\t}\n\n\t\/**\n\t * Replace block in content.\n\t *\n\t * @param string $post_content Post content.\n\t * @param array  $blocks       Blocks.\n\t *\n\t * @return string\n\t *\/\n\tpublic function replace( $post_content, $blocks ) {\n\t\tpreg_match_all( '\/<!-- wp:aioseo\\\/table-of-contents.*-->.*<!-- \\\/wp:aioseo\\\/table-of-contents -->\/iUs', $post_content, $matches );\n\n\t\tforeach ( $matches[0] as $index => $match ) {\n\t\t\t$post_content = \\str_replace( $match, $blocks[ $index ], $post_content );\n\t\t}\n\n\t\treturn $post_content;\n\t}\n\n\t\/**\n\t * Get headings from the content.\n\t *\n\t * @param array $data     Block data.\n\t * @param array $headings Headings.\n\t *\n\t * @return void\n\t *\/\n\tpublic function get_headings( $data, &$headings ) {\n\t\tforeach ( $data as $heading ) {\n\t\t\t$headings[] = [\n\t\t\t\t'key'     => $heading['blockClientId'],\n\t\t\t\t'link'    => '#' . $heading['anchor'],\n\t\t\t\t'content' => ! empty( $heading['editedContent'] ) ? $heading['editedContent'] : $heading['content'],\n\t\t\t\t'level'   => ! empty( $heading['editedLevel'] ) ? $heading['editedLevel'] : $heading['level'],\n\t\t\t\t'disable' => ! empty( $heading['hidden'] ),\n\t\t\t];\n\n\t\t\tif ( ! empty( $heading['headings'] ) ) {\n\t\t\t\t$this->get_headings( $heading['headings'], $headings );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Get TOC title.\n\t *\n\t * @param string $html Block HTML.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_toc_title( $html ) {\n\t\tpreg_match( '#<h2.*?>(.*?)<\/h2>#i', $html, $found );\n\t\treturn ! empty( $found[1] ) ? $found[1] : '';\n\t}\n\n\t\/**\n\t * Generate HTML.\n\t *\n\t * @param string $html Block html.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_html( $html ) {\n\t\t$html = str_replace( 'wp-block-aioseo-table-of-contents', 'wp-block-rank-math-toc-block', $html );\n\t\t$html = str_replace( '<div class=\"wp-block-rank-math-toc-block\"><ul>', '<div class=\"wp-block-rank-math-toc-block\"><nav><ul>', $html );\n\t\t$html = str_replace( '<\/ul><\/div>', '<\/nav><\/ul><\/div>', $html );\n\n\t\treturn $html;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/database-tools\/class-database-tools.php","ext":"php","size":13920,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Database_Tools is responsible for the Database Tools inside Status & Tools.\n *\n * @package    RankMath\n * @subpackage RankMath\\Database_Tools\n *\/\n\nnamespace RankMath\\Tools;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Helpers\\Schedule;\nuse RankMath\\Installer;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Helpers\\Sitepress;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Database_Tools class.\n *\/\nclass Database_Tools {\n\n\tuse Hooker;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( Helper::is_heartbeat() || ! Helper::is_advanced_mode() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tYoast_Blocks::get();\n\t\tAIOSEO_Blocks::get();\n\t\tUpdate_Score::get();\n\t\t$this->hooks();\n\t}\n\n\t\/**\n\t * Register version control hooks.\n\t *\/\n\tpublic function hooks() {\n\t\tif ( Helper::is_rest() && Str::contains( 'toolsAction', add_query_arg( [] ) ) ) {\n\t\t\tforeach ( $this->get_tools() as $id => $tool ) {\n\t\t\t\tif ( ! method_exists( $this, $id ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tadd_filter( 'rank_math\/tools\/' . $id, [ $this, $id ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Get localized JSON data to be used on the Database Tools view of the Status & Tools page.\n\t *\/\n\tpublic static function get_json_data() {\n\t\treturn [\n\t\t\t'tools' => self::get_tools(),\n\t\t];\n\t}\n\n\t\/**\n\t * Function to clear all the transients from the database.\n\t *\/\n\tpublic function clear_transients() {\n\t\tglobal $wpdb;\n\n\t\t$transients = DB_Helper::get_col(\n\t\t\t\"SELECT `option_name` AS `name`\n\t\t\tFROM  $wpdb->options\n\t\t\tWHERE `option_name` LIKE '%\\\\_transient\\\\_rank_math%'\n\t\t\tORDER BY `option_name`\"\n\t\t);\n\n\t\tif ( empty( $transients ) ) {\n\t\t\treturn [\n\t\t\t\t'status'  => 'error',\n\t\t\t\t'message' => __( 'No Rank Math transients found.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$count = 0;\n\t\tforeach ( $transients as $transient ) {\n\t\t\tdelete_option( $transient );\n\t\t\t++$count;\n\t\t}\n\n\t\t\/\/ Translators: placeholder is the number of transients deleted.\n\t\treturn sprintf( _n( '%d Rank Math transient cleared.', '%d Rank Math transients cleared.', $count, 'rank-math' ), $count );\n\t}\n\n\t\/**\n\t * Function to reset the SEO Analyzer.\n\t *\/\n\tpublic function clear_seo_analysis() {\n\t\t$stored = get_option( 'rank_math_seo_analysis_results' );\n\t\tif ( empty( $stored ) ) {\n\t\t\treturn [\n\t\t\t\t'status'  => 'error',\n\t\t\t\t'message' => __( 'SEO Analyzer data has already been cleared.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tdelete_option( 'rank_math_seo_analysis_results' );\n\t\tdelete_option( 'rank_math_seo_analysis_date' );\n\n\t\treturn __( 'SEO Analyzer data successfully deleted.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Function to delete all the Internal Links data.\n\t *\/\n\tpublic function delete_links() {\n\t\tglobal $wpdb;\n\n\t\t$exists = DB_Helper::get_var( \"SELECT EXISTS ( SELECT 1 FROM {$wpdb->prefix}rank_math_internal_links )\" );\n\t\tif ( empty( $exists ) ) {\n\t\t\treturn [\n\t\t\t\t'status'  => 'error',\n\t\t\t\t'message' => __( 'No Internal Links data found.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tDB_Helper::query( \"TRUNCATE TABLE {$wpdb->prefix}rank_math_internal_links\" );\n\t\tDB_Helper::query( \"TRUNCATE TABLE {$wpdb->prefix}rank_math_internal_meta\" );\n\n\t\treturn __( 'Internal Links successfully deleted.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Function to delete all the 404 log items.\n\t *\/\n\tpublic function delete_log() {\n\t\tglobal $wpdb;\n\n\t\t$exists = DB_Helper::get_var( \"SELECT EXISTS ( SELECT 1 FROM {$wpdb->prefix}rank_math_404_logs )\" );\n\t\tif ( empty( $exists ) ) {\n\t\t\treturn [\n\t\t\t\t'status'  => 'error',\n\t\t\t\t'message' => __( 'No 404 log data found.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tDB_Helper::query( \"TRUNCATE TABLE {$wpdb->prefix}rank_math_404_logs;\" );\n\n\t\treturn __( '404 Log successfully deleted.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Function to delete all Redirections data.\n\t *\/\n\tpublic function delete_redirections() {\n\t\tglobal $wpdb;\n\n\t\t$exists = DB_Helper::get_var( \"SELECT EXISTS ( SELECT 1 FROM {$wpdb->prefix}rank_math_redirections )\" );\n\t\tif ( empty( $exists ) ) {\n\t\t\treturn [\n\t\t\t\t'status'  => 'error',\n\t\t\t\t'message' => __( 'No Redirections found.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tDB_Helper::query( \"TRUNCATE TABLE {$wpdb->prefix}rank_math_redirections;\" );\n\t\tDB_Helper::query( \"TRUNCATE TABLE {$wpdb->prefix}rank_math_redirections_cache;\" );\n\n\t\treturn __( 'Redirection rules successfully deleted.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Re-create Database Tables.\n\t *\n\t * @return string\n\t *\/\n\tpublic function recreate_tables() {\n\t\t\/\/ Base.\n\t\tInstaller::create_tables( get_option( 'rank_math_modules', [] ) );\n\n\t\t\/\/ ActionScheduler.\n\t\t$this->maybe_recreate_actionscheduler_tables();\n\n\t\t\/\/ Analytics module.\n\t\tif ( Helper::is_module_active( 'analytics' ) ) {\n\t\t\tSchedule::async_action(\n\t\t\t\t'rank_math\/analytics\/workflow\/create_tables',\n\t\t\t\t[],\n\t\t\t\t'rank-math'\n\t\t\t);\n\t\t}\n\n\t\treturn __( 'Table re-creation started. It might take a couple of minutes.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Recreate ActionScheduler tables if missing.\n\t *\/\n\tpublic function maybe_recreate_actionscheduler_tables() {\n\t\tglobal $wpdb;\n\n\t\tif ( Helper::is_woocommerce_active() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (\n\t\t\t! class_exists( 'ActionScheduler_HybridStore' )\n\t\t\t|| ! class_exists( 'ActionScheduler_StoreSchema' )\n\t\t\t|| ! class_exists( 'ActionScheduler_LoggerSchema' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$table_list = [\n\t\t\t'actionscheduler_actions',\n\t\t\t'actionscheduler_logs',\n\t\t\t'actionscheduler_groups',\n\t\t\t'actionscheduler_claims',\n\t\t];\n\n\t\t$found_tables = DB_Helper::get_col( \"SHOW TABLES LIKE '{$wpdb->prefix}actionscheduler%'\" );\n\t\tforeach ( $table_list as $table_name ) {\n\t\t\tif ( ! in_array( $wpdb->prefix . $table_name, $found_tables, true ) ) {\n\t\t\t\t$this->recreate_actionscheduler_tables();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Force the data store schema updates.\n\t *\/\n\tpublic function recreate_actionscheduler_tables() {\n\t\t$store = new \\ActionScheduler_HybridStore();\n\t\tadd_action( 'action_scheduler\/created_table', [ $store, 'set_autoincrement' ], 10, 2 );\n\n\t\t$store_schema  = new \\ActionScheduler_StoreSchema();\n\t\t$logger_schema = new \\ActionScheduler_LoggerSchema();\n\t\t$store_schema->register_tables( true );\n\t\t$logger_schema->register_tables( true );\n\n\t\tremove_action( 'action_scheduler\/created_table', [ $store, 'set_autoincrement' ], 10 );\n\t}\n\n\t\/**\n\t * Function to convert Yoast blocks in posts to Rank Math blocks (FAQ & HowTo).\n\t *\n\t * @return string\n\t *\/\n\tpublic function yoast_blocks() {\n\t\t$posts = Yoast_Blocks::get()->find_posts();\n\t\tif ( empty( $posts['posts'] ) ) {\n\t\t\treturn [\n\t\t\t\t'status'  => 'error',\n\t\t\t\t'message' => __( 'No posts found to convert.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tYoast_Blocks::get()->start( $posts['posts'] );\n\n\t\treturn __( 'Conversion started. A success message will be shown here once the process completes. You can close this page.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Function to convert AIOSEO blocks in posts to Rank Math blocks (TOC).\n\t *\n\t * @return string\n\t *\/\n\tpublic function aioseo_blocks() {\n\t\t$posts = AIOSEO_Blocks::get()->find_posts();\n\t\tif ( empty( $posts['posts'] ) ) {\n\t\t\treturn [\n\t\t\t\t'status'  => 'error',\n\t\t\t\t'message' => __( 'No posts found to convert.', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tAIOSEO_Blocks::get()->start( $posts['posts'] );\n\n\t\treturn __( 'Conversion started. A success message will be shown here once the process completes. You can close this page.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Get tools.\n\t *\n\t * @return array\n\t *\/\n\tprivate static function get_tools() {\n\t\t$tools = [];\n\n\t\tif ( Helper::is_module_active( 'seo-analysis' ) ) {\n\t\t\t$tools['clear_seo_analysis'] = [\n\t\t\t\t'title'       => __( 'Flush SEO Analyzer Data', 'rank-math' ),\n\t\t\t\t'description' => __( \"Need a clean slate or not able to run the SEO Analyzer tool? Flushing the analysis data might fix the issue. Flushing SEO Analyzer data is entirely safe and doesn't remove any critical data from your website.\", 'rank-math' ),\n\t\t\t\t'button_text' => __( 'Clear SEO Analyzer', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$tools['clear_transients'] = [\n\t\t\t'title'       => __( 'Remove Rank Math Transients', 'rank-math' ),\n\t\t\t'description' => __( 'If you see any issue while using Rank Math or one of its options - clearing the Rank Math transients fixes the problem in most cases. Deleting transients does not delete ANY data added using Rank Math.', 'rank-math' ),\n\t\t\t'button_text' => __( 'Remove transients', 'rank-math' ),\n\t\t];\n\n\t\tif ( Helper::is_module_active( '404-monitor' ) ) {\n\t\t\t$tools['delete_log'] = [\n\t\t\t\t'title'        => __( 'Clear 404 Log', 'rank-math' ),\n\t\t\t\t'description'  => __( 'Is the 404 error log getting out of hand? Use this option to clear ALL 404 logs generated by your website in the Rank Math 404 Monitor.', 'rank-math' ),\n\t\t\t\t'confirm_text' => __( 'Are you sure you want to delete the 404 log? This action is irreversible.', 'rank-math' ),\n\t\t\t\t'button_text'  => __( 'Clear 404 Log', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$tools['recreate_tables'] = [\n\t\t\t'title'       => __( 'Re-create Missing Database Tables', 'rank-math' ),\n\t\t\t'description' => __( 'Check if required tables exist and create them if not.', 'rank-math' ),\n\t\t\t'button_text' => __( 'Re-create Tables', 'rank-math' ),\n\t\t];\n\n\t\tif ( Helper::is_module_active( 'analytics' ) ) {\n\t\t\t$tools['analytics_fix_collations'] = [\n\t\t\t\t'title'       => __( 'Fix Analytics table collations', 'rank-math' ),\n\t\t\t\t'description' => __( 'In some cases, the Analytics database tables or columns don\\'t match with each other, which can cause database errors. This tool can fix that issue.', 'rank-math' ),\n\t\t\t\t'button_text' => __( 'Fix Collations', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$block_posts = Yoast_Blocks::get()->find_posts();\n\t\tif ( is_array( $block_posts ) && ! empty( $block_posts['count'] ) ) {\n\t\t\t$tools['yoast_blocks'] = [\n\t\t\t\t'title'        => __( 'Yoast Block Converter', 'rank-math' ),\n\t\t\t\t'description'  => __( 'Convert FAQ, HowTo, & Table of Contents Blocks created using Yoast. Use this option to easily move your previous blocks into Rank Math.', 'rank-math' ),\n\t\t\t\t'confirm_text' => __( 'Are you sure you want to convert Yoast blocks into Rank Math blocks? This action is irreversible.', 'rank-math' ),\n\t\t\t\t'button_text'  => __( 'Convert Blocks', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\t$aio_block_posts = AIOSEO_Blocks::get()->find_posts();\n\t\tif ( is_array( $aio_block_posts ) && ! empty( $aio_block_posts['count'] ) ) {\n\t\t\t$tools['aioseo_blocks'] = [\n\t\t\t\t'title'        => __( 'AIOSEO Block Converter', 'rank-math' ),\n\t\t\t\t'description'  => __( 'Convert TOC block created using AIOSEO. Use this option to easily move your previous blocks into Rank Math.', 'rank-math' ),\n\t\t\t\t'confirm_text' => __( 'Are you sure you want to convert AIOSEO blocks into Rank Math blocks? This action is irreversible.', 'rank-math' ),\n\t\t\t\t'button_text'  => __( 'Convert Blocks', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( Helper::is_module_active( 'link-counter' ) ) {\n\t\t\t$tools['delete_links'] = [\n\t\t\t\t'title'        => __( 'Delete Internal Links Data', 'rank-math' ),\n\t\t\t\t'description'  => __( 'In some instances, the internal links data might show an inflated number or no number at all. Deleting the internal links data might fix the issue.', 'rank-math' ),\n\t\t\t\t'confirm_text' => __( 'Are you sure you want to delete Internal Links Data? This action is irreversible.', 'rank-math' ),\n\t\t\t\t'button_text'  => __( 'Delete Internal Links', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( Helper::is_module_active( 'redirections' ) ) {\n\t\t\t$tools['delete_redirections'] = [\n\t\t\t\t'title'        => __( 'Delete Redirections Rules', 'rank-math' ),\n\t\t\t\t'description'  => __( 'Getting a redirection loop or need a fresh start? Delete all the redirections using this tool. Note: This process is irreversible and will delete ALL your redirection rules.', 'rank-math' ),\n\t\t\t\t'confirm_text' => __( 'Are you sure you want to delete all the Redirection Rules? This action is irreversible.', 'rank-math' ),\n\t\t\t\t'button_text'  => __( 'Delete Redirections', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( ! empty( Update_Score::get()->find() ) ) {\n\t\t\t$tools['update_seo_score'] = [\n\t\t\t\t'title'       => __( 'Update SEO Scores', 'rank-math' ),\n\t\t\t\t'description' => __( 'This tool will calculate the SEO score for the posts\/pages that have a Focus Keyword set. Note: This process may take some time and the browser tab must be kept open while it is running.', 'rank-math' ),\n\t\t\t\t'button_text' => __( 'Recalculate Scores', 'rank-math' ),\n\t\t\t];\n\t\t}\n\n\t\tif ( Helper::is_module_active( 'analytics' ) && Helper::has_cap( 'analytics' ) ) {\n\n\t\t\tArr::insert(\n\t\t\t\t$tools,\n\t\t\t\t[\n\t\t\t\t\t'analytics_clear_caches' => [\n\t\t\t\t\t\t'title'       => __( 'Purge Analytics Cache', 'rank-math' ),\n\t\t\t\t\t\t'description' => __( 'Clear analytics cache to re-calculate all the stats again.', 'rank-math' ),\n\t\t\t\t\t\t'button_text' => __( 'Clear Cache', 'rank-math' ),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t3\n\t\t\t);\n\n\t\t\t$description = __( 'Missing some posts\/pages in the Analytics data? Clear the index and build a new one for more accurate stats.', 'rank-math' );\n\n\t\t\t$sitepress = Sitepress::get()->is_active() ? Sitepress::get()->get_var() : false;\n\t\t\tif ( Sitepress::get()->is_per_domain() && ! empty( $sitepress->get_setting( 'auto_adjust_ids', null ) ) ) {\n\t\t\t\t$description .= '<br \/><br \/><i>' . sprintf(\n\t\t\t\t\t\/* translators: 1: settings URL, 2: settings text *\/\n\t\t\t\t\t__( 'To properly rebuild Analytics posts in secondary languages, please disable the %1$s when using a different domain per language.', 'rank-math' ),\n\t\t\t\t\t'<a href=\"' . esc_url( admin_url( 'admin.php?page=sitepress-multilingual-cms\/menu\/languages.php#lang-sec-8' ) ) . '\">' . __( 'Make themes work multilingual option in WPML settings', 'rank-math' ) . '<\/a>'\n\t\t\t\t) . '<\/i>';\n\t\t\t}\n\n\t\t\tArr::insert(\n\t\t\t\t$tools,\n\t\t\t\t[\n\t\t\t\t\t'analytics_reindex_posts' => [\n\t\t\t\t\t\t'title'       => __( 'Rebuild Index for Analytics', 'rank-math' ),\n\t\t\t\t\t\t'description' => $description,\n\t\t\t\t\t\t'button_text' => __( 'Rebuild Index', 'rank-math' ),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t3\n\t\t\t);\n\t\t}\n\n\t\t\/**\n\t\t * Filters the list of tools available on the Database Tools page.\n\t\t *\n\t\t * @param array $tools The tools.\n\t\t *\/\n\t\t$tools = apply_filters( 'rank_math\/database\/tools', $tools );\n\n\t\treturn $tools;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/llms\/options.php","ext":"php","size":2124,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The llms.txt settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\Settings\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'llms_info',\n\t\t'type'    => 'notice',\n\t\t'what'    => 'info',\n\t\t'classes' => 'nob nopt rank-math-notice',\n\t\t'content' => sprintf(\n\t\t\t\/\/ Translators: placeholder is the llms.txt file URL.\n\t\t\t__( 'Your <code>llms.txt<\/code> file is available at <a href=\"%1$s\" target=\"_blank\">%2$s<\/a>.', 'rank-math' ),\n\t\t\tesc_url( home_url( '\/llms.txt' ) ),\n\t\t\tesc_html( home_url( '\/llms.txt' ) )\n\t\t),\n\t]\n);\n\n$post_types = Helper::choices_post_types();\nif ( isset( $post_types['attachment'] ) ) {\n\tunset( $post_types['attachment'] );\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'llms_post_types',\n\t\t'name'    => esc_html__( 'Select Post Types', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Select the post types to be included in the llms.txt file.', 'rank-math' ),\n\t\t'type'    => 'multicheck',\n\t\t'options' => $post_types,\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'llms_taxonomies',\n\t\t'name'    => esc_html__( 'Select Taxonomies', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Select the taxonomies to be included in the llms.txt file.', 'rank-math' ),\n\t\t'type'    => 'multicheck',\n\t\t'options' => wp_list_pluck( Helper::get_accessible_taxonomies(), 'label', 'name' ),\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'llms_limit',\n\t\t'name'       => esc_html__( 'Posts\/Terms Limit', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Maximum number of links to include for each post type.', 'rank-math' ),\n\t\t'type'       => 'text',\n\t\t'classes'    => 'small-text',\n\t\t'default'    => 50,\n\t\t'attributes' => [\n\t\t\t'type' => 'number',\n\t\t\t'min'  => 1,\n\t\t],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'llms_extra_content',\n\t\t'name'       => esc_html__( 'Additional Content', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Add any extra text or links you\\'d like to include in your llms.txt file manually.', 'rank-math' ),\n\t\t'type'       => 'textarea',\n\t\t'attributes' => [ 'rows' => 6 ],\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/llms\/index.php","ext":"php","size":27,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden."},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/llms\/class-llms-txt.php","ext":"php","size":8595,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The llms.txt module.\n *\n * @package    RankMath\n * @subpackage RankMath\\LLMS\n *\/\n\nnamespace RankMath\\LLMS;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Sitemap\\Sitemap;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Helpers\\Url;\nuse WP_Query;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * LLMS_Txt class.\n *\/\nclass LLMS_Txt {\n\tuse Hooker;\n\n\t\/**\n\t * Class constructor.\n\t *\n\t * Registers hooks and filters for the llms.txt module.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'init', 'add_rewrite_rule' );\n\t\t$this->action( 'template_redirect', 'maybe_serve_llms_txt' );\n\t\t$this->filter( 'rank_math\/settings\/general', 'add_settings' );\n\t\t$this->action( 'wp_loaded', 'remove_canonical_redirect' );\n\t}\n\n\t\/**\n\t * Remove the canonical redirect for the llms.txt file.\n\t *\n\t * @hook wp_loaded\n\t * @return void\n\t *\/\n\tpublic function remove_canonical_redirect() {\n\t\tif ( strpos( Url::get_current_url(), '\/llms.txt' ) !== false ) {\n\t\t\tremove_filter( 'template_redirect', 'redirect_canonical' );\n\t\t}\n\t}\n\n\t\/**\n\t * Add the llms.txt settings tab to the General settings panel.\n\t *\n\t * @hook rank_math\/settings\/general\n\t *\n\t * @param array $tabs Option panel tabs.\n\t * @return array Modified tabs array with llms.txt tab added.\n\t *\/\n\tpublic function add_settings( $tabs ) {\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'llms' => [\n\t\t\t\t\t'icon'    => 'rm-icon rm-icon-bot',\n\t\t\t\t\t'title'   => esc_html__( 'Edit llms.txt', 'rank-math' ),\n\t\t\t\t\t'desc'    => esc_html__( 'Configure your llms.txt file for custom crawling\/indexing rules.', 'rank-math' ),\n\t\t\t\t\t'file'    => __DIR__ . '\/options.php',\n\t\t\t\t\t'classes' => 'rank-math-advanced-option',\n\t\t\t\t\t'json'    => [\n\t\t\t\t\t\t'llmsUrl' => esc_url( home_url( '\/llms.txt' ) ),\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t5\n\t\t);\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Add the rewrite rule and query var for llms.txt.\n\t *\n\t * @hook init\n\t * @return void\n\t *\/\n\tpublic function add_rewrite_rule() {\n\t\tadd_rewrite_rule( '^llms\\.txt$', 'index.php?llms_txt=1', 'top' );\n\t\tadd_rewrite_tag( '%llms_txt%', '1' );\n\t}\n\n\t\/**\n\t * Serve the llms.txt file if the endpoint is hit.\n\t *\n\t * @hook template_redirect\n\t * @return void\n\t *\/\n\tpublic function maybe_serve_llms_txt() {\n\t\tif ( intval( get_query_var( 'llms_txt' ) ) !== 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( substr( Url::get_current_url(), -1 ) === '\/' ) {\n\t\t\twp_safe_redirect( home_url( '\/llms.txt' ) );\n\t\t\texit;\n\t\t}\n\n\t\t$this->output();\n\t\texit;\n\t}\n\n\t\/**\n\t * Output the llms.txt file content in Markdown format.\n\t *\n\t * @action rank_math\/llms_txt\/before_output Fires before llms.txt output is sent.\n\t * @action rank_math\/llms_txt\/after_output Fires after llms.txt output is sent.\n\t * @filter rank_math\/llms_txt\/posts_query_args Filter WP_Query args for posts.\n\t * @filter rank_math\/llms_txt\/posts Filter post IDs to include.\n\t * @filter rank_math\/llms_txt\/terms Filter term IDs to include.\n\t * @filter rank_math\/llms_txt\/extra_content Filter extra content output.\n\t *\n\t * @return void\n\t *\/\n\tpublic function output() {\n\t\tif ( headers_sent() ) {\n\t\t\treturn;\n\t\t}\n\n\t\theader( 'Content-Type: text\/plain; charset=utf-8' );\n\t\theader( 'X-Robots-Tag: noindex, nofollow', true );\n\t\t\/**\n\t\t * Fires before the llms.txt output is sent to the browser.\n\t\t *\n\t\t * @since 1.0.250\n\t\t *\/\n\t\t$this->do_action( 'llms_txt\/before_output' );\n\n\t\t$limit = absint( Helper::get_settings( 'general.llms_limit', 100 ) );\n\t\t$this->add_header_content();\n\t\t$this->add_post_types_data( $limit );\n\t\t$this->add_taxonomies_data( $limit );\n\t\t$this->add_extra_content();\n\n\t\t\/**\n\t\t * Fires after the llms.txt output is sent to the browser.\n\t\t *\n\t\t * @since 1.0.250\n\t\t *\/\n\t\t$this->do_action( 'llms_txt\/after_output' );\n\t}\n\n\t\/**\n\t * Adds header content to the llms.txt output.\n\t *\n\t * @return void\n\t *\/\n\tprivate function add_header_content() {\n\t\t$site_title  = Helper::get_settings( 'titles.knowledgegraph_name', get_bloginfo( 'name' ) );\n\t\t$site_desc   = Helper::get_settings( 'titles.organization_description', get_bloginfo( 'description' ) );\n\t\t$site_title .= $site_desc ? ': ' . $site_desc : '';\n\n\t\t$this->output_line( 'Generated by Rank Math SEO, this is an llms.txt file designed to help LLMs better understand and index this website.' );\n\t\t$this->output_line( '' );\n\t\t$this->output_line( '# ' . esc_html( $site_title ) );\n\n\t\tif ( ! Helper::is_module_active( 'sitemap' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->output_line( '' );\n\t\t$sitemap_url = Router::get_base_url( Sitemap::get_sitemap_index_slug() . '.xml' );\n\t\t$this->output_line( '## Sitemaps' );\n\t\t$this->output_line( '[XML Sitemap](' . esc_url( $sitemap_url ) . '): Includes all crawlable and indexable pages.' );\n\t\t\/\/ Add an extra blank line after the header content.\n\t\t$this->output_line( '' );\n\t}\n\n\t\/**\n\t * Adds post type data to the llms.txt output.\n\t *\n\t * @param int $limit The maximum number of posts to include per post type.\n\t * @return void\n\t *\/\n\tprivate function add_post_types_data( $limit ) {\n\t\t$post_types = Helper::get_settings( 'general.llms_post_types', [] );\n\t\tif ( empty( $post_types ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $post_types as $post_type ) {\n\t\t\t$args = [\n\t\t\t\t'post_type'      => $post_type,\n\t\t\t\t'post_status'    => 'publish',\n\t\t\t\t'posts_per_page' => $limit,\n\t\t\t\t'no_found_rows'  => true,\n\t\t\t];\n\n\t\t\t\/**\n\t\t\t * Filter the WP_Query arguments used to fetch posts for llms.txt.\n\t\t\t *\n\t\t\t * @since 1.0.250\n\t\t\t * @param array $args The WP_Query arguments.\n\t\t\t * @return array Modified WP_Query arguments.\n\t\t\t *\/\n\t\t\t$args  = $this->do_filter( 'llms_txt\/posts_query_args', $args );\n\t\t\t$query = new \\WP_Query( $args );\n\n\t\t\t\/**\n\t\t\t * Filter the list of post IDs to be included in llms.txt for a post type.\n\t\t\t *\n\t\t\t * @since 1.0.250\n\t\t\t * @param array $posts List of posts.\n\t\t\t * @param array $args     The WP_Query arguments.\n\t\t\t * @return array Modified list of post IDs.\n\t\t\t *\/\n\t\t\t$posts = $this->do_filter( 'llms_txt\/posts', $query->posts, $args );\n\t\t\tif ( empty( $posts ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$label = get_post_type_object( $post_type )->labels->name;\n\t\t\t$this->output_line( '## ' . esc_html( $label ) );\n\n\t\t\tforeach ( $posts as $object ) {\n\t\t\t\tif ( ! Helper::is_post_indexable( $object ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$title = get_the_title( $object );\n\t\t\t\t$link  = get_permalink( $object );\n\t\t\t\t$desc  = wp_strip_all_tags( Helper::replace_vars( '%excerpt%', $object ) );\n\n\t\t\t\t$this->output_line(\n\t\t\t\t\t$desc\n\t\t\t\t\t\t? '- [' . esc_html( $title ) . '](' . esc_url( $link ) . '): ' . esc_html( $desc )\n\t\t\t\t\t\t: '- [' . esc_html( $title ) . '](' . esc_url( $link ) . ')'\n\t\t\t\t);\n\t\t\t}\n\t\t\t$this->output_line( '' );\n\t\t}\n\t}\n\n\t\/**\n\t * Adds taxonomy data to the llms.txt output.\n\t *\n\t * @param int $limit The maximum number of terms to include per taxonomy.\n\t * @return void\n\t *\/\n\tprivate function add_taxonomies_data( $limit ) {\n\t\t$taxonomies = Helper::get_settings( 'general.llms_taxonomies', [] );\n\t\tif ( empty( $taxonomies ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $taxonomies as $taxonomy ) {\n\t\t\t$tax_obj = get_taxonomy( $taxonomy );\n\t\t\tif ( ! $tax_obj ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$terms = get_terms(\n\t\t\t\t[\n\t\t\t\t\t'taxonomy'   => $taxonomy,\n\t\t\t\t\t'hide_empty' => true,\n\t\t\t\t\t'number'     => $limit,\n\t\t\t\t]\n\t\t\t);\n\n\t\t\t\/**\n\t\t\t * Filter the list of terms to be included in llms.txt for a taxonomy.\n\t\t\t *\n\t\t\t * @since 1.0.250\n\t\t\t * @param array  $terms    List of terms.\n\t\t\t * @param string $taxonomy Taxonomy name.\n\t\t\t * @return array Modified list of term IDs.\n\t\t\t *\/\n\t\t\t$terms = $this->do_filter( 'llms_txt\/terms', $terms, $taxonomy );\n\t\t\tif ( empty( $terms ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$label = $tax_obj->labels->name;\n\t\t\t$this->output_line( '## ' . esc_html( $label ) );\n\t\t\tforeach ( $terms as $term ) {\n\t\t\t\tif ( $term && Helper::is_term_indexable( $term ) ) {\n\t\t\t\t\t$name = $term->name;\n\t\t\t\t\t$link = get_term_link( $term );\n\t\t\t\t\t$this->output_line( '- [' . esc_html( $name ) . '](' . esc_url( $link ) . ')' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t$this->output_line( '' );\n\t\t}\n\t}\n\n\t\/**\n\t * Adds extra content to the end of the llms.txt output.\n\t *\n\t * @return void\n\t *\/\n\tprivate function add_extra_content() {\n\t\t\/**\n\t\t * Filter the extra content output at the end of llms.txt.\n\t\t *\n\t\t * @since 1.0.250\n\t\t * @param string $extra The extra content string.\n\t\t * @return string Modified extra content.\n\t\t *\/\n\t\t$extra = $this->do_filter( 'llms_txt\/extra_content', Helper::get_settings( 'general.llms_extra_content', '' ) );\n\t\tif ( ! empty( $extra ) ) {\n\t\t\t$this->output_line( esc_html( str_replace( \"\\n\", \"\\n\", $extra ) ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Outputs a line with a newline character (\\n).\n\t *\n\t * @param string $content The content to output.\n\t * @return void\n\t *\/\n\tprivate function output_line( $content ) {\n\t\techo esc_html( $content ) . \"\\n\";\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-stats.php","ext":"php","size":27103,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics Module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Google\\Analytics;\nuse RankMathPro\\Analytics\\Pageviews;\nuse RankMath\\Google\\Console as Google_Analytics;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Stats class.\n *\/\nclass Stats extends Keywords {\n\n\tuse Hooker;\n\n\t\/**\n\t * Start timestamp.\n\t *\n\t * @var int\n\t *\/\n\tpublic $start = 0;\n\n\t\/**\n\t * End timestamp.\n\t *\n\t * @var int\n\t *\/\n\tpublic $end = 0;\n\n\t\/**\n\t * Start date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $start_date = '';\n\n\t\/**\n\t * End date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $end_date = '';\n\n\t\/**\n\t * Compare Start date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $compare_start_date = '';\n\n\t\/**\n\t * Compare End date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $compare_end_date = '';\n\n\t\/**\n\t * Number of days.\n\t *\n\t * @var int\n\t *\/\n\tpublic $days = 0;\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Stats\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Stats ) ) {\n\t\t\t$instance = new Stats();\n\t\t\t$instance->set_date_range();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Set date range.\n\t *\n\t * @param string $range Range of days.\n\t *\/\n\tpublic function set_date_range( $range = false ) {\n\t\t\/\/ Shift 3 days prior.\n\t\t$subtract = DAY_IN_SECONDS * 3;\n\t\t$end      = strtotime( $this->do_filter( 'analytics\/end_date', 'today' ) ) - $subtract;\n\t\t$start    = strtotime( false !== $range ? $range : $this->get_date_from_cookie( 'date_range', '-30 days' ), $end ) - $subtract;\n\n\t\t\/\/ Timestamp.\n\t\t$this->end   = Helper::get_midnight( $end );\n\t\t$this->start = Helper::get_midnight( $start );\n\n\t\t\/\/ Period.\n\t\t$this->end_date   = Helper::get_date( 'Y-m-d 23:59:59', $end, false, true );\n\t\t$this->start_date = Helper::get_date( 'Y-m-d 00:00:00', $start, false, true );\n\n\t\t\/\/ Compare date.\n\t\t$this->days               = ceil( abs( $end - $start ) \/ DAY_IN_SECONDS );\n\t\t$this->compare_end_date   = $start - DAY_IN_SECONDS;\n\t\t$this->compare_start_date = $this->compare_end_date - ( $this->days * DAY_IN_SECONDS );\n\t\t$this->compare_end_date   = Helper::get_date( 'Y-m-d 23:59:59', $this->compare_end_date, false, true );\n\t\t$this->compare_start_date = Helper::get_date( 'Y-m-d 00:00:00', $this->compare_start_date, false, true );\n\t}\n\n\t\/**\n\t * Get date intervals for graph.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_intervals() {\n\t\t$range    = $this->get_date_from_cookie( 'date_range', '-30 days' );\n\t\t$interval = [\n\t\t\t'-7 days'   => '0 days',\n\t\t\t'-15 days'  => '-3 days',\n\t\t\t'-30 days'  => '-6 days',\n\t\t\t'-3 months' => '-6 days',\n\t\t\t'-6 months' => '-30 days',\n\t\t\t'-1 year'   => '-30 days',\n\t\t];\n\n\t\t$ticks = [\n\t\t\t'-7 days'   => 7,\n\t\t\t'-15 days'  => 5,\n\t\t\t'-30 days'  => 5,\n\t\t\t'-3 months' => 13,\n\t\t\t'-6 months' => 6,\n\t\t\t'-1 year'   => 12,\n\t\t];\n\n\t\t$addition = [\n\t\t\t'-7 days'   => 0,\n\t\t\t'-15 days'  => DAY_IN_SECONDS,\n\t\t\t'-30 days'  => DAY_IN_SECONDS,\n\t\t\t'-3 months' => -DAY_IN_SECONDS \/ 6,\n\t\t\t'-6 months' => DAY_IN_SECONDS \/ 2,\n\t\t\t'-1 year'   => 0,\n\t\t];\n\n\t\t$ticks    = $ticks[ $range ];\n\t\t$interval = $interval[ $range ];\n\t\t$addition = $addition[ $range ];\n\n\t\t$map   = [];\n\t\t$dates = [];\n\n\t\t$end   = $this->end;\n\t\t$start = strtotime( $interval, $end );\n\n\t\tfor ( $i = 0; $i < $ticks; $i++ ) {\n\t\t\t$end_date   = Helper::get_date( 'Y-m-d', $end, false, true );\n\t\t\t$start_date = Helper::get_date( 'Y-m-d', $start, false, true );\n\n\t\t\t$dates[ $end_date ] = [\n\t\t\t\t'start'            => $start_date,\n\t\t\t\t'end'              => $end_date,\n\t\t\t\t'formatted_date'   => Helper::get_date( 'd M, Y', $end ),\n\t\t\t\t'formatted_period' => Helper::get_date( 'd M', $start ) . ' - ' . Helper::get_date( 'd M, Y', $end ),\n\t\t\t];\n\n\t\t\t$map[ $start_date ] = $end_date;\n\t\t\tfor ( $j = 1; $j < 32; $j++ ) {\n\t\t\t\t$date = Helper::get_date( 'Y-m-d', strtotime( $j . ' days', $start ), false, true );\n\t\t\t\tif ( $start_date === $end_date ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( $date === $end_date ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t$map[ $date ] = $end_date;\n\t\t\t}\n\t\t\t$map[ $end_date ] = $end_date;\n\n\t\t\t$end   = \\strtotime( '-1 days', $start );\n\t\t\t$start = \\strtotime( $interval, $end + $addition );\n\t\t}\n\t\treturn [\n\t\t\t'map'   => $map,\n\t\t\t'dates' => \\array_reverse( $dates ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get date intervals for SQL query.\n\t *\n\t * @param  array  $intervals Date Intervals.\n\t * @param  string $column Column name to check.\n\t * @param  string $newcolumn Column name to return.\n\t * @return string\n\t *\/\n\tpublic function get_sql_date_intervals( $intervals, $column = 'created', $newcolumn = 'range_group' ) {\n\t\t$sql_parts = [];\n\t\tarray_push( $sql_parts, 'CASE' );\n\n\t\t$index = 1;\n\t\tforeach ( $intervals['dates'] as $date_range ) {\n\t\t\t$start_date = $date_range['start'] . ' 00:00:00';\n\t\t\t$end_date   = $date_range['end'] . ' 23:59:59';\n\n\t\t\tarray_push( $sql_parts, sprintf( \"WHEN %s BETWEEN '%s' AND '%s' THEN 'range%d'\", $column, $start_date, $end_date, $index ) );\n\n\t\t\t++$index;\n\t\t}\n\n\t\tarray_push( $sql_parts, \"ELSE 'none'\" );\n\t\tarray_push( $sql_parts, sprintf( \"END AS '%s'\", $newcolumn ) );\n\n\t\treturn implode( ' ', $sql_parts );\n\t}\n\n\t\/**\n\t * Get date array\n\t *\n\t * @param  array $dates         Dates.\n\t * @param  array $default_value Default value.\n\t * @return array\n\t *\/\n\tpublic function get_date_array( $dates, $default_value ) {\n\t\t$data = [];\n\t\tforeach ( $dates as $date => $d ) {\n\t\t\t$data[ $date ]                  = $default_value;\n\t\t\t$data[ $date ]['date']          = $date;\n\t\t\t$data[ $date ]['dateFormatted'] = $d['start'] === $d['end'] ? $d['formatted_date'] : $d['formatted_period'];\n\t\t\t$data[ $date ]['formattedDate'] = $d['formatted_date'];\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Convert data to proper type.\n\t *\n\t * @param  array $row Row to normalize.\n\t * @return array\n\t *\/\n\tpublic function normalize_graph_rows( $row ) {\n\t\tforeach ( $row as $col => $val ) {\n\t\t\tif ( in_array( $col, [ 'query', 'page', 'date', 'created', 'dateFormatted' ], true ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( in_array( $col, [ 'ctr', 'position', 'earnings' ], true ) ) {\n\t\t\t\t$row->$col = round( $row->$col, 0 );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$row->$col = absint( $row->$col );\n\t\t}\n\n\t\treturn $row;\n\t}\n\n\t\/**\n\t * Remove uncessary graph rows.\n\t *\n\t * @param  array $rows Rows to filter.\n\t * @return array\n\t *\/\n\tpublic function filter_graph_rows( $rows ) {\n\t\tforeach ( $rows as $key => $row ) {\n\t\t\tif ( isset( $row->range_group ) && 'none' === $row->range_group ) {\n\t\t\t\tunset( $rows[ $key ] );\n\t\t\t}\n\t\t}\n\t\treturn $rows;\n\t}\n\n\t\/**\n\t * Extract proper data.\n\t *\n\t * @param  array  $rows   Data rows.\n\t * @param  string $column Column name contains mixed data.\n\t * @param  string $sep    Separator for mixed data.\n\t * @param  array  $keys   Column array to extract.\n\t * @return array\n\t *\/\n\tpublic function extract_data_from_mixed( $rows, $column, $sep, $keys ) {\n\t\tforeach ( $rows as $index => &$row ) {\n\t\t\tif ( ! isset( $row->$column ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$mixed       = explode( $sep, $row->$column );\n\t\t\t$mixed_count = count( $mixed );\n\t\t\tif ( ! $mixed_count ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tforeach ( $keys as $key_idx => $key ) {\n\t\t\t\tif ( 'position' === $key ) {\n\t\t\t\t\t\/\/ Should subtract the position value from 100. The position data was inverted before call this function.\n\t\t\t\t\t$value = 100 - (int) $mixed[ $mixed_count - $key_idx - 1 ];\n\t\t\t\t} else {\n\t\t\t\t\t$value = $mixed[ $mixed_count - $key_idx - 1 ];\n\t\t\t\t}\n\t\t\t\t$row->$key = $value;\n\t\t\t}\n\n\t\t\tunset( $row->$column );\n\t\t}\n\n\t\treturn $rows;\n\t}\n\n\t\/**\n\t * Merge two metrics array into one\n\t *\n\t * @param  array   $metrics_rows1 Metrics Rows to merge.\n\t * @param  array   $metrics_rows2 Metrics Rows to merge.\n\t * @param  boolean $has_traffic   Flag to include\/exclude traffic data.\n\t * @return array\n\t *\/\n\tpublic function get_merged_metrics( $metrics_rows1, $metrics_rows2, $has_traffic = false ) {\n\t\t$data = [];\n\n\t\t\/\/ Construct base data array.\n\t\t$base_array = [\n\t\t\t'position'        => 0,\n\t\t\t'diffPosition'    => 0,\n\t\t\t'clicks'          => 0,\n\t\t\t'diffClicks'      => 0,\n\t\t\t'impressions'     => 0,\n\t\t\t'diffImpressions' => 0,\n\t\t\t'ctr'             => 0,\n\t\t\t'diffCtr'         => 0,\n\t\t];\n\n\t\tif ( $has_traffic ) {\n\t\t\t$base_array['pageviews']  = 0;\n\t\t\t$base_array['difference'] = 0;\n\t\t}\n\n\t\t\/\/ Merge first array and second array into base array.\n\t\tforeach ( $metrics_rows1 as $key => $row ) {\n\t\t\tif ( isset( $metrics_rows2[ $key ] ) ) {\n\t\t\t\tif ( is_object( $row ) ) {\n\t\t\t\t\t$data[ $key ] = (object) array_merge( $base_array, (array) $row, (array) $metrics_rows2[ $key ] );\n\t\t\t\t} else {\n\t\t\t\t\t$data[ $key ] = array_merge( $base_array, $row, $metrics_rows2[ $key ] );\n\t\t\t\t}\n\t\t\t\tunset( $metrics_rows2[ $key ] );\n\t\t\t} else {\n\t\t\t\t$data[ $key ] = array_merge( $base_array, $row );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Merge remaining items from second array into base array.\n\t\tforeach ( $metrics_rows2 as $key => $row ) {\n\t\t\tif ( is_object( $row ) ) {\n\t\t\t\t$metrics_rows2[ $key ] = (object) array_merge( $base_array, (array) $row );\n\t\t\t} else {\n\t\t\t\t$metrics_rows2[ $key ] = array_merge( $base_array, $row );\n\t\t\t}\n\t\t}\n\n\t\treturn array_merge( $data, $metrics_rows2 );\n\t}\n\n\t\/**\n\t * Merge data graph by date.\n\t *\n\t * @param  array $rows Rows to merge.\n\t * @param  array $data Data array.\n\t * @param  array $map  Interval map.\n\t * @return array\n\t *\/\n\tpublic function get_merge_data_graph( $rows, $data, $map ) {\n\t\tforeach ( $rows as $row ) {\n\t\t\tif ( ! isset( $map[ $row->date ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$date = $map[ $row->date ];\n\t\t\tforeach ( $row as $key => $value ) {\n\t\t\t\tif ( 'date' === $key || 'created' === $key ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t\/\/ trick to invert Position Graph YAxis.\n\t\t\t\tif ( 'position' === $key ) {\n\t\t\t\t\t$value = 0 - $value;\n\t\t\t\t}\n\t\t\t\t$data[ $date ][ $key ][] = $value;\n\t\t\t}\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Flat graph data.\n\t *\n\t * @param  array $rows Graph data.\n\t * @return array\n\t *\/\n\tpublic function get_graph_data_flat( $rows ) {\n\t\tforeach ( $rows as &$row ) {\n\t\t\tif ( isset( $row['clicks'] ) ) {\n\t\t\t\t$row['clicks'] = \\array_sum( $row['clicks'] );\n\t\t\t}\n\n\t\t\tif ( isset( $row['impressions'] ) ) {\n\t\t\t\t$row['impressions'] = \\array_sum( $row['impressions'] );\n\t\t\t}\n\n\t\t\tif ( isset( $row['earnings'] ) ) {\n\t\t\t\t$row['earnings'] = \\array_sum( $row['earnings'] );\n\t\t\t}\n\n\t\t\tif ( isset( $row['pageviews'] ) ) {\n\t\t\t\t$row['pageviews'] = \\array_sum( $row['pageviews'] );\n\t\t\t}\n\n\t\t\tif ( isset( $row['ctr'] ) ) {\n\t\t\t\t$row['ctr'] = empty( $row['ctr'] ) ? 0 : ceil( array_sum( $row['ctr'] ) \/ count( $row['ctr'] ) );\n\t\t\t}\n\n\t\t\tif ( isset( $row['position'] ) ) {\n\t\t\t\tif ( empty( $row['position'] ) ) {\n\t\t\t\t\tunset( $row['position'] );\n\t\t\t\t} else {\n\t\t\t\t\t$row['position'] = ceil( array_sum( $row['position'] ) \/ count( $row['position'] ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( isset( $row['keywords'] ) ) {\n\t\t\t\t$row['keywords'] = empty( $row['keywords'] ) ? 0 : ceil( array_sum( $row['keywords'] ) \/ count( $row['keywords'] ) );\n\t\t\t}\n\t\t}\n\n\t\treturn $rows;\n\t}\n\n\t\/**\n\t * Get filter data.\n\t *\n\t * @param string $filter        Filter key.\n\t * @param string $default_value Filter default value.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function get_date_from_cookie( $filter, $default_value ) {\n\t\t$cookie_key = 'rank_math_analytics_' . $filter;\n\t\t$new_value  = sanitize_title( Param::post( $filter ) );\n\t\tif ( $new_value ) {\n\t\t\tsetcookie( $cookie_key, $new_value, time() + ( HOUR_IN_SECONDS * 30 ), COOKIEPATH, COOKIE_DOMAIN, false, true );\n\t\t\treturn $new_value;\n\t\t}\n\n\t\tif ( ! empty( $_COOKIE[ $cookie_key ] ) ) {\n\t\t\treturn sanitize_text_field( wp_unslash( $_COOKIE[ $cookie_key ] ) );\n\t\t}\n\n\t\treturn $default_value;\n\t}\n\n\t\/**\n\t * Get analytics data.\n\t *\n\t * @param  array $args Array of arguments.\n\t * @return array\n\t *\/\n\tpublic function get_analytics_data( $args = [] ) {\n\t\tglobal $wpdb;\n\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'action'    => '',\n\t\t\t\t'keyword'   => '',\n\t\t\t\t'dimension' => 'page',\n\t\t\t\t'order'     => 'DESC',\n\t\t\t\t'orderBy'   => 'diffPosition',\n\t\t\t\t'objects'   => false,\n\t\t\t\t'pageview'  => false,\n\t\t\t\t'where'     => '',\n\t\t\t\t'sub_where' => '',\n\t\t\t\t'pages'     => [],\n\t\t\t\t'type'      => '',\n\t\t\t\t'offset'    => 0,\n\t\t\t\t'perpage'   => 5,\n\t\t\t]\n\t\t);\n\n\t\t$action         = $args['action'];\n\t\t$dimension      = $args['dimension'];\n\t\t$type           = $args['type'];\n\t\t$offset         = $args['offset'];\n\t\t$perpage        = $args['perpage'];\n\t\t$order_by_field = $args['orderBy'];\n\t\t$sub_where      = $args['sub_where'];\n\n\t\t$order_position_fields = [ 'position', 'diffPosition' ];\n\t\t$order_metrics_fields  = [ 'clicks', 'diffClicks', 'impressions', 'diffImpressions', 'ctr', 'diffCtr' ];\n\n\t\tif ( in_array( $order_by_field, $order_position_fields, true ) ) {\n\t\t\t\/\/ In case order by position related fields, get position data first.\n\t\t\t$positions = $this->get_position_data_by_dimension( $args );\n\n\t\t\t\/\/ Filter position data by condition.\n\t\t\t$positions = $this->filter_analytics_data( $positions, $args );\n\n\t\t\t\/\/ Get dimension list from above result.\n\t\t\t$dimensions = wp_list_pluck( $positions, $dimension );\n\t\t\t$dimensions = array_map( 'esc_sql', $dimensions );\n\n\t\t\t\/\/ Get metrics data based on above dimension list.\n\t\t\t$metrics_args = [\n\t\t\t\t'dimension' => $dimension,\n\t\t\t\t'sub_where' => ' AND ' . $dimension . \" IN ('\" . join( \"', '\", $dimensions ) . \"')\",\n\t\t\t];\n\n\t\t\tif ( 'get_keyword_pages' === $action ) {\n\t\t\t\t$metrics_args['sub_where'] = $metrics_args['sub_where'] . ' AND query = \"' . $args['keyword'] . '\"';\n\t\t\t}\n\t\t\t$metrics = $this->get_metrics_data_by_dimension( $metrics_args );\n\n\t\t\t\/\/ Merge above two data into one.\n\t\t\t$rows = $this->get_merged_metrics( $positions, $metrics, true );\n\n\t\t} elseif ( in_array( $order_by_field, $order_metrics_fields, true ) ) {\n\t\t\t\/\/ In case order by fields which are not related with position, get metrics data first.\n\t\t\t$metrics = $this->get_metrics_data_by_dimension( $args );\n\n\t\t\t\/\/ Filter metrics data by condition.\n\t\t\t$metrics = $this->filter_analytics_data( $metrics, $args );\n\n\t\t\t\/\/ Get dimension list from above result.\n\t\t\t$dimensions = wp_list_pluck( $metrics, $dimension );\n\t\t\t$dimensions = array_map( 'esc_sql', $dimensions );\n\n\t\t\t\/\/ Get position data based on above dimension list.\n\t\t\t$positions = $this->get_position_data_by_dimension(\n\t\t\t\t[\n\t\t\t\t\t'dimension' => $dimension,\n\t\t\t\t\t'sub_where' => ' AND ' . $dimension . \" IN ('\" . join( \"', '\", $dimensions ) . \"') \" . $sub_where,\n\t\t\t\t]\n\t\t\t);\n\n\t\t\t\/\/ Merge above two data into one.\n\t\t\t$rows = $this->get_merged_metrics( $metrics, $positions, true );\n\t\t} else {\n\t\t\t\/\/ Get position data and other metrics data separately.\n\t\t\t$positions = $this->get_position_data_by_dimension( $args );\n\t\t\t$metrics   = $this->get_metrics_data_by_dimension( $args );\n\n\t\t\t\/\/ Merge above two data into one.\n\t\t\t$rows = $this->get_merged_metrics( $positions, $metrics, true );\n\n\t\t\t\/\/ Filter array by condition.\n\t\t\t$rows = $this->filter_analytics_data( $rows, $args );\n\t\t}\n\n\t\t$page_urls = \\array_unique( \\array_merge( \\array_keys( $rows ), $args['pages'] ) );\n\n\t\tif ( $args['objects'] ) {\n\t\t\t$objects = $this->get_objects( $page_urls );\n\t\t}\n\t\tforeach ( $rows as $page => $row ) {\n\t\t\t$rows[ $page ]['pageviews'] = [\n\t\t\t\t'total'      => 0,\n\t\t\t\t'difference' => 0,\n\t\t\t];\n\n\t\t\t$rows[ $page ]['clicks'] = [\n\t\t\t\t'total'      => (int) $rows[ $page ]['clicks'],\n\t\t\t\t'difference' => (int) $rows[ $page ]['diffClicks'],\n\t\t\t];\n\n\t\t\t$rows[ $page ]['impressions'] = [\n\t\t\t\t'total'      => (int) $rows[ $page ]['impressions'],\n\t\t\t\t'difference' => (int) $rows[ $page ]['diffImpressions'],\n\t\t\t];\n\n\t\t\t$rows[ $page ]['position'] = [\n\t\t\t\t'total'      => (float) $rows[ $page ]['position'],\n\t\t\t\t'difference' => (float) $rows[ $page ]['diffPosition'],\n\t\t\t];\n\n\t\t\t$rows[ $page ]['ctr'] = [\n\t\t\t\t'total'      => (float) $rows[ $page ]['ctr'],\n\t\t\t\t'difference' => (float) $rows[ $page ]['diffCtr'],\n\t\t\t];\n\n\t\t\tunset(\n\t\t\t\t$rows[ $page ]['diffClicks'],\n\t\t\t\t$rows[ $page ]['diffImpressions'],\n\t\t\t\t$rows[ $page ]['diffPosition'],\n\t\t\t\t$rows[ $page ]['diffCtr'],\n\t\t\t\t$rows[ $page ]['difference']\n\t\t\t);\n\t\t}\n\n\t\tif ( $args['objects'] && ! empty( $objects ) ) {\n\t\t\tforeach ( $objects as $object ) {\n\t\t\t\t$page = $object['page'];\n\t\t\t\tif ( ! isset( $rows[ $page ] ) ) {\n\t\t\t\t\t$rows[ $page ] = [];\n\t\t\t\t}\n\t\t\t\t$rows[ $page ] = array_merge( $rows[ $page ], $object );\n\t\t\t}\n\t\t}\n\n\t\treturn $this->do_filter( 'analytics\/rows', $rows, $args, $page_urls );\n\t}\n\n\t\/**\n\t * Get position data.\n\t *\n\t * @param array $args Argument array.\n\t * @return array\n\t *\/\n\tpublic function get_position_data_by_dimension( $args = [] ) {\n\t\tglobal $wpdb;\n\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'dimension' => 'page',\n\t\t\t\t'where'     => '',\n\t\t\t\t'sub_where' => '',\n\t\t\t]\n\t\t);\n\n\t\t$dimension = $args['dimension'];\n\t\t$where     = $args['where'];\n\t\t$sub_where = $args['sub_where'];\n\n\t\tif ( 'page' === $dimension ) {\n\t\t\t\/\/ In case dimension is set as 'page', position data for each page will be top position of last ranked date.\n\t\t\t\/\/ That is, among all the position value from the last date of the page, the top position(smallest position value) value will be the result.\n\n\t\t\t\/\/ Get current position data.\n\t\t\t$positions = DB_Helper::get_results(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT %i, MAX(CONCAT(%i, ':', DATE(`created`), ':', LPAD((100 - `position`), 3, '0'))) as uid\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc \n\t\t\t\tWHERE `created` BETWEEN %s AND %s {$sub_where}\n\t\t\t\tGROUP BY %i\",\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$this->start_date,\n\t\t\t\t\t$this->end_date,\n\t\t\t\t\t$dimension\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t\/\/ Get old position data.\n\t\t\t$old_positions = DB_Helper::get_results(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT %i, MAX(CONCAT(%i, ':', DATE(`created`), ':', LPAD((100 - `position`), 3, '0'))) as uid\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc \n\t\t\t\tWHERE `created` BETWEEN %s AND %s {$sub_where}\n\t\t\t\tGROUP BY %i\",\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$this->compare_start_date,\n\t\t\t\t\t$this->compare_end_date,\n\t\t\t\t\t$dimension,\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t\/\/ Extract proper position data.\n\t\t\t$positions     = $this->extract_data_from_mixed( $positions, 'uid', ':', [ 'position', 'date' ] );\n\t\t\t$old_positions = $this->extract_data_from_mixed( $old_positions, 'uid', ':', [ 'position', 'date' ] );\n\n\t\t\t\/\/ Set 'page' as key.\n\t\t\t$positions     = $this->set_dimension_as_key( $positions, $dimension );\n\t\t\t$old_positions = $this->set_dimension_as_key( $old_positions, $dimension );\n\n\t\t\t\/\/ Calculate position difference, merge old into current position data array.\n\t\t\tforeach ( $positions as $page => &$row ) {\n\t\t\t\t$row = (array) $row; \/\/ force to convert as array.\n\t\t\t\tif ( ! isset( $old_positions[ $page ] ) ) {\n\t\t\t\t\t$old_position_value = 100; \/\/ Should set as 100 here to get correct position difference.\n\t\t\t\t} else {\n\t\t\t\t\t$old_position_value = $old_positions[ $page ]->position;\n\t\t\t\t}\n\n\t\t\t\t$row['diffPosition'] = $row['position'] - $old_position_value;\n\t\t\t}\n\t\t} else {\n\t\t\t\/\/ In case dimension is not 'page', position data for each dimension will be most recent position value.\n\n\t\t\t\/\/ Step1. Get most recent row id for each dimension for current data.\n\t\t\t$ids = DB_Helper::get_results(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT t1.id as id\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc t1\n\t\t\t\tINNER JOIN (\n\t\t\t\t\tSELECT query, MAX(created) as latest_created\n\t\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\t\tWHERE created BETWEEN %s AND %s {$sub_where} GROUP BY %i\n\t\t\t\t) t2 ON t1.query = t2.query AND t1.created = t2.latest_created\",\n\t\t\t\t\t$this->start_date,\n\t\t\t\t\t$this->end_date,\n\t\t\t\t\t$dimension\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t\/\/ Step2. Get id list from above result.\n\t\t\t$ids       = wp_list_pluck( $ids, 'id' );\n\t\t\t$ids_where = \" AND id IN ('\" . join( \"', '\", $ids ) . \"')\";\n\n\t\t\t\/\/ Step3. Get most recent row id for each dimension for compare data.\n\t\t\t$old_ids = DB_Helper::get_results(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT t1.id as id\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc t1\n\t\t\t\tINNER JOIN (\n\t\t\t\t\tSELECT query, MAX(created) as latest_created\n\t\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\t\tWHERE created BETWEEN %s AND %s {$sub_where} GROUP BY %i\n\t\t\t\t) t2 ON t1.query = t2.query AND t1.created = t2.latest_created\",\n\t\t\t\t\t$this->compare_start_date,\n\t\t\t\t\t$this->compare_end_date,\n\t\t\t\t\t$dimension\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t\/\/ Step4. Get id list from above result.\n\t\t\t$old_ids       = wp_list_pluck( $old_ids, 'id' );\n\t\t\t$old_ids_where = \" AND id IN ('\" . join( \"', '\", $old_ids ) . \"')\";\n\n\t\t\t\/\/ Step5. Get position and difference data based on above id list.\n\t\t\t$positions = DB_Helper::get_results(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT\n\t\t\t\t\t\tt1.%i as %i, ROUND( t1.position, 0 ) as position,\n\t\t\t\t\t\tCOALESCE( ROUND( t1.position - COALESCE( t2.position, 100 ), 0 ), 0 ) as diffPosition\n\t\t\t\t\tFROM\n\t\t\t\t\t\t( SELECT a.%i, a.position FROM {$wpdb->prefix}rank_math_analytics_gsc AS a WHERE 1 = 1{$ids_where}) AS t1\n\t\t\t\t\tLEFT JOIN\n\t\t\t\t\t\t( SELECT a.%i, a.position FROM {$wpdb->prefix}rank_math_analytics_gsc AS a WHERE 1 = 1{$old_ids_where}) AS t2\n\t\t\t\t\tON t1.%i = t2.%i\n\t\t\t\t\t{$where}\",\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$dimension,\n\t\t\t\t\t$dimension,\n\t\t\t\t),\n\t\t\t\tARRAY_A\n\t\t\t);\n\n\t\t\t$positions = $this->set_dimension_as_key( $positions, $dimension );\n\t\t}\n\n\t\treturn $positions;\n\t}\n\n\t\/**\n\t * Get metrics data.\n\t *\n\t * @param array $args Argument array.\n\t * @return array\n\t *\/\n\tpublic function get_metrics_data_by_dimension( $args = [] ) {\n\t\tglobal $wpdb;\n\t\tHelper::enable_big_selects_for_queries();\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'dimension' => 'page',\n\t\t\t\t'sub_where' => '',\n\t\t\t]\n\t\t);\n\n\t\t$dimension = $args['dimension'];\n\t\t$sub_where = $args['sub_where'];\n\n\t\t\/\/ Get metrics data like impressions, click, ctr, etc.\n\t\t$metrics = DB_Helper::get_results(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT\n\t\t\t\tt1.%i as %i, t1.clicks, t1.impressions, t1.ctr,\n\t\t\t\tCOALESCE( t1.clicks - t2.clicks, 0 ) as diffClicks,\n\t\t\t\tCOALESCE( t1.impressions - t2.impressions, 0 ) as diffImpressions,\n\t\t\t\tCOALESCE( t1.ctr - t2.ctr, 0 ) as diffCtr\n\t\t\tFROM\n\t\t\t\t( SELECT %i, SUM( clicks ) as clicks, SUM(impressions) as impressions, AVG(ctr) as ctr\n\t\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\t\tWHERE 1 = 1 AND created BETWEEN %s AND %s {$sub_where}\n\t\t\t\t\tGROUP BY %i) as t1\n\t\t\tLEFT JOIN\n\t\t\t\t( SELECT %i, SUM( clicks ) as clicks, SUM(impressions) as impressions, AVG(ctr) as ctr\n\t\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\t\tWHERE 1 = 1 AND created BETWEEN %s AND %s {$sub_where}\n\t\t\t\t\tGROUP BY %i) as t2\n\t\t\tON t1.%i = t2.%i\",\n\t\t\t\t$dimension,\n\t\t\t\t$dimension,\n\t\t\t\t$dimension,\n\t\t\t\t$this->start_date,\n\t\t\t\t$this->end_date,\n\t\t\t\t$dimension,\n\t\t\t\t$dimension,\n\t\t\t\t$this->compare_start_date,\n\t\t\t\t$this->compare_end_date,\n\t\t\t\t$dimension,\n\t\t\t\t$dimension,\n\t\t\t\t$dimension\n\t\t\t),\n\t\t\tARRAY_A\n\t\t);\n\n\t\t$metrics = $this->set_dimension_as_key( $metrics, $dimension );\n\n\t\treturn $metrics;\n\t}\n\n\t\/**\n\t * Filter analytics data.\n\t *\n\t * @param array $data Data to process.\n\t * @param array $args Argument array.\n\t * @return array\n\t *\/\n\tpublic function filter_analytics_data( $data, $args ) {\n\t\t$dimension      = $args['dimension'];\n\t\t$offset         = $args['offset'];\n\t\t$perpage        = $args['perpage'];\n\t\t$order_by_field = $args['orderBy'];\n\n\t\t\/**\n\t\t * Short-circuit to filter the data.\n\t\t *\/\n\t\t$pre = $this->do_filter( 'analytics\/pre_filter_data', null, $data, $args );\n\t\tif ( is_array( $pre ) ) {\n\t\t\treturn $pre;\n\t\t}\n\n\t\t\/\/ Sort array by $args['order'], $order_by_field value.\n\t\tif ( ! empty( $args['order'] ) ) {\n\t\t\t$sort_base_arr = array_column( $data, $order_by_field, $dimension );\n\t\t\tarray_multisort( $sort_base_arr, 'ASC' === $args['order'] ? SORT_ASC : SORT_DESC, $data );\n\t\t}\n\n\t\t\/\/ Filter array by $offset, $perpage value.\n\t\t$data = array_slice( $data, $offset, $perpage, true );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Set page as key.\n\t *\n\t * @param array $data Rows to process.\n\t * @return array\n\t *\/\n\tpublic function set_page_as_key( $data ) {\n\t\t$rows = [];\n\t\tforeach ( $data as $row ) {\n\t\t\t$page = $this->get_relative_url( $row['page'] );\n\t\t\tif ( ! empty( $row['object_id'] ) && empty( $row['schemas_in_use'] ) ) {\n\t\t\t\t$row['schemas_in_use'] = Helper::get_default_schema_type( $row['object_id'], true, true );\n\t\t\t}\n\t\t\t$rows[ $page ] = $row;\n\t\t}\n\n\t\treturn $rows;\n\t}\n\n\t\/**\n\t * Set dimension parameter as key.\n\t *\n\t * @param array  $data      Rows to process.\n\t * @param string $dimension Dimension to set as key.\n\t * @return array\n\t *\/\n\tpublic function set_dimension_as_key( $data, $dimension = 'query' ) {\n\t\t$rows = [];\n\t\tforeach ( $data as $row ) {\n\t\t\tif ( is_object( $row ) ) {\n\t\t\t\t$value = $row->$dimension;\n\t\t\t} else {\n\t\t\t\t$value = $row[ $dimension ];\n\t\t\t}\n\t\t\t$key          = 'page' === $dimension ? $this->get_relative_url( $value ) : strtolower( $value );\n\t\t\t$rows[ $key ] = $row;\n\t\t}\n\n\t\treturn $rows;\n\t}\n\n\t\/**\n\t * Set query position history.\n\t *\n\t * @param array $data    Rows to process.\n\t * @param array $history Rows to process.\n\t *\n\t * @return array\n\t *\/\n\tpublic function set_query_position( $data, $history ) {\n\t\tforeach ( $history as $row ) {\n\t\t\t$key = strtolower( $row->query );\n\n\t\t\t$data[ $key ]['query'] = isset( $data[ $key ]['query'] ) ? $data[ $key ]['query'] : $key;\n\t\t\t$data[ $key ]['graph'] = isset( $data[ $key ]['graph'] ) ? $data[ $key ]['graph'] : [];\n\n\t\t\tif ( ! isset( $row->formatted_date ) ) {\n\t\t\t\t$formatted_date      = Helper::get_date( 'd M, Y', strtotime( $row->date ) );\n\t\t\t\t$row->formatted_date = $formatted_date;\n\t\t\t}\n\n\t\t\t$data[ $row->query ]['graph'][] = $row;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Set page position history.\n\t *\n\t * @param array $data    Rows to process.\n\t * @param array $history Rows to process.\n\t *\n\t * @return array\n\t *\/\n\tpublic function set_page_position_graph( $data, $history ) {\n\t\tforeach ( $history as $row ) {\n\t\t\t$data[ $row->page ]['graph'] = isset( $data[ $row->page ]['graph'] ) ? $data[ $row->page ]['graph'] : [];\n\n\t\t\tif ( ! isset( $row->formatted_date ) ) {\n\t\t\t\t$formatted_date      = Helper::get_date( 'd M, Y', strtotime( $row->date ) );\n\t\t\t\t$row->formatted_date = $formatted_date;\n\t\t\t}\n\t\t\t$data[ $row->page ]['graph'][] = $row;\n\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Generate Cache Keys.\n\t *\n\t * @param string $what What for you need the key.\n\t * @param mixed  $args more salt to add into key.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_cache_key( $what, $args = [] ) {\n\t\t$key = 'rank_math_' . $what;\n\n\t\tif ( ! empty( $args ) ) {\n\t\t\t$key .= '_' . md5( wp_json_encode( $args ) );\n\n\t\t}\n\n\t\treturn $key;\n\t}\n\n\t\/**\n\t * Get relative url.\n\t *\n\t * @param  string $url Url to make relative.\n\t * @return string\n\t *\/\n\tpublic static function get_relative_url( $url ) {\n\t\t$home_url = Google_Analytics::get_site_url();\n\n\t\t\/\/ On multisite and sub-directory setup replace the home url.\n\t\tif ( is_multisite() && ! is_subdomain_install() ) {\n\t\t\t$url = \\str_replace( $home_url, '\/', $url );\n\t\t} else {\n\t\t\t$domain = strtolower( wp_parse_url( $home_url, PHP_URL_HOST ) );\n\t\t\t$domain = str_replace( [ 'www.', '.' ], [ '', '\\.' ], $domain );\n\t\t\t$regex  = \"\/http[s]?:\\\/\\\/(www\\.)?$domain\/mU\";\n\t\t\t$url    = strtolower( trim( $url ) );\n\t\t\t$url    = preg_replace( $regex, '', $url );\n\t\t}\n\n\t\t\/**\n\t\t * Google API and get_permalink sends URL Encoded strings so we need\n\t\t * to urldecode in order to get them to match with whats saved in DB.\n\t\t *\/\n\t\t$url = urldecode( $url );\n\t\treturn \\str_replace( $home_url, '', $url );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-analytics-common.php","ext":"php","size":12969,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Methods for frontend and backend in admin-only module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\Analytics\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Google\\Console;\nuse RankMath\\Analytics\\Analytics;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Analytics\\Workflow\\Jobs;\nuse RankMath\\Analytics\\Workflow\\Workflow;\nuse RankMath\\Helpers\\Schedule;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Analytics class.\n *\/\nclass Analytics_Common {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor\n\t *\/\n\tpublic function __construct() {\n\t\tif ( Helper::is_heartbeat() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Helper::has_cap( 'analytics' ) ) {\n\t\t\t$this->action( 'rank_math\/admin_bar\/items', 'admin_bar_items', 11 );\n\t\t}\n\n\t\t\/\/ Show Analytics block in the Dashboard widget only if account is connected or user has permissions.\n\t\tif ( Helper::has_cap( 'analytics' ) && Authentication::is_authorized() ) {\n\t\t\t$this->action( 'rank_math\/dashboard\/widget', 'dashboard_widget' );\n\t\t}\n\n\t\tnew GTag();\n\t\tnew Analytics_Stats();\n\t\t$this->action( 'init', 'maybe_init_email_reports' );\n\t\t$this->action( 'init', 'maybe_enable_email_reports', 20 );\n\t\t$this->action( 'cmb2_save_options-page_fields_rank-math-options-general_options', 'maybe_update_report_schedule', 20, 3 );\n\t\t$this->action( 'rank_math\/settings\/before_save', 'before_settings_save', 10, 2 );\n\n\t\tJobs::get();\n\t\tWorkflow::get();\n\n\t\t$this->action( 'rest_api_init', 'init_rest_api' );\n\t\t$this->filter( 'rank_math\/webmaster\/google_verify', 'add_site_verification' );\n\n\t\t$this->filter( 'rank_math\/tools\/analytics_clear_caches', 'analytics_clear_caches' );\n\t\t$this->filter( 'rank_math\/tools\/analytics_reindex_posts', 'analytics_reindex_posts' );\n\t\t$this->filter( 'rank_math\/tools\/analytics_fix_collations', 'analytics_fix_collations' );\n\t\t$this->filter( 'wp_helpers_notifications_render', 'replace_notice_link', 10, 3 );\n\t}\n\n\t\/**\n\t * Add stats widget into admin dashboard.\n\t *\/\n\tpublic function dashboard_widget() {\n\t\t?>\n\t\t<h3>\n\t\t\t<?php esc_html_e( 'Analytics', 'rank-math' ); ?>\n\t\t\t<span><?php esc_html_e( 'Last 30 Days', 'rank-math' ); ?><\/span>\n\t\t\t<a href=\"<?php echo esc_url( Helper::get_admin_url( 'analytics' ) ); ?>\" class=\"rank-math-view-report\" title=\"<?php esc_html_e( 'View Report', 'rank-math' ); ?>\">\n\t\t\t\t<i class=\"dashicons dashicons-chart-bar\"><\/i>\n\t\t\t<\/a>\n\t\t<\/h3>\n\t\t<div class=\"rank-math-dashboard-block items-4\">\n\t\t\t<?php\n\t\t\t$items = $this->get_dashboard_widget_items();\n\t\t\tforeach ( $items as $label => $item ) {\n\t\t\t\tif ( ! $item['value'] ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<div>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\t<?php echo esc_html( $item['label'] ); ?>\n\t\t\t\t\t\t<span class=\"rank-math-tooltip\">\n\t\t\t\t\t\t\t<em class=\"dashicons-before dashicons-editor-help\"><\/em>\n\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t<?php echo esc_html( $item['desc'] ); ?>\n\t\t\t\t\t\t\t<\/span>\n\t\t\t\t\t\t<\/span>\n\t\t\t\t\t<\/h4>\n\t\t\t\t\t<?php $this->get_analytic_block( $item['data'], ! empty( $item['revert'] ) ); ?>\n\t\t\t\t<\/div>\n\t\t\t<?php } ?>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Return site verification code.\n\t *\n\t * @param string $content If any code from setting.\n\t *\n\t * @return string\n\t *\/\n\tpublic function add_site_verification( $content ) {\n\t\t$code = get_transient( 'rank_math_google_site_verification' );\n\n\t\treturn ! empty( $code ) ? $code : $content;\n\t}\n\n\t\/**\n\t * Load the REST API endpoints.\n\t *\/\n\tpublic function init_rest_api() {\n\t\t$controllers = [\n\t\t\tnew Rest(),\n\t\t];\n\n\t\tforeach ( $controllers as $controller ) {\n\t\t\t$controller->register_routes();\n\t\t}\n\t}\n\n\t\/**\n\t * Add admin bar item.\n\t *\n\t * @param Admin_Bar_Menu $menu Menu class instance.\n\t *\/\n\tpublic function admin_bar_items( $menu ) {\n\t\t$dot_color = '#ed5e5e';\n\t\tif ( Console::is_console_connected() ) {\n\t\t\t$dot_color = '#11ac84';\n\t\t}\n\n\t\t$menu->add_sub_menu(\n\t\t\t'analytics',\n\t\t\t[\n\t\t\t\t'title'    => esc_html__( 'Analytics', 'rank-math' ) . '<span class=\"rm-menu-new update-plugins\" style=\"background: ' . $dot_color . ';margin-left: 5px;min-width: 10px;height: 10px;margin-bottom: -1px;display: inline-block;border-radius: 5px;\"><span class=\"plugin-count\"><\/span><\/span>',\n\t\t\t\t'href'     => Helper::get_admin_url( 'analytics' ),\n\t\t\t\t'meta'     => [ 'title' => esc_html__( 'Review analytics and sitemaps', 'rank-math' ) ],\n\t\t\t\t'priority' => 20,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Purge cache.\n\t *\n\t * @return string\n\t *\/\n\tpublic function analytics_clear_caches() {\n\t\tDB::purge_cache();\n\t\treturn __( 'Analytics cache cleared.', 'rank-math' );\n\t}\n\n\t\/**\n\t * ReIndex posts.\n\t *\n\t * @return string\n\t *\/\n\tpublic function analytics_reindex_posts() {\n\t\t\/\/ Clear all objects data.\n\t\tDB::objects()\n\t\t\t->truncate();\n\n\t\t\/\/ Clear all metadata related to object.\n\t\tDB::table( 'postmeta' )\n\t\t\t->where( 'meta_key', 'rank_math_analytic_object_id' )\n\t\t\t->delete();\n\n\t\t\/\/ Start reindexing posts.\n\t\t( new \\RankMath\\Analytics\\Workflow\\Objects() )->flat_posts();\n\n\t\treturn __( 'Post re-index in progress.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Fix table & column collations.\n\t *\n\t * @return string\n\t *\/\n\tpublic function analytics_fix_collations() {\n\t\t$tables = [\n\t\t\t'rank_math_analytics_ga',\n\t\t\t'rank_math_analytics_gsc',\n\t\t\t'rank_math_analytics_keyword_manager',\n\t\t\t'rank_math_analytics_inspections',\n\t\t];\n\n\t\t$objects_coll = DB_Helper::get_table_collation( 'rank_math_analytics_objects' );\n\t\t$changed      = 0;\n\t\tforeach ( $tables as $table ) {\n\t\t\t$changed += (int) DB_Helper::check_collation( $table, 'all', $objects_coll );\n\t\t}\n\n\t\treturn $changed ? sprintf(\n\t\t\t\/* translators: %1$d: number of changes, %2$s: new collation. *\/\n\t\t\t_n( '%1$d collation changed to %2$s.', '%1$d collations changed to %2$s.', $changed, 'rank-math' ),\n\t\t\t$changed,\n\t\t\t'`' . $objects_coll . '`'\n\t\t) : __( 'No collation mismatch to fix.', 'rank-math' );\n\t}\n\n\t\/**\n\t * Init Email Reports class if the option is enabled.\n\t *\n\t * @return void\n\t *\/\n\tpublic function maybe_init_email_reports() {\n\t\tif ( Helper::get_settings( 'general.console_email_reports' ) ) {\n\t\t\tnew Email_Reports();\n\t\t}\n\t}\n\n\t\/**\n\t * Enable the email reports option if the `enable_email_reports` param is set.\n\t *\n\t * @return void\n\t *\/\n\tpublic function maybe_enable_email_reports() {\n\t\tif ( ! Helper::has_cap( 'analytics' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isset( $_GET['_wpnonce'] ) || ! wp_verify_nonce( sanitize_text_field( $_GET['_wpnonce'] ), 'enable_email_reports' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! empty( $_GET['enable_email_reports'] ) ) {\n\t\t\t$all_opts = rank_math()->settings->all_raw();\n\t\t\t$general  = $all_opts['general'];\n\n\t\t\t$general['console_email_reports'] = 'on';\n\n\t\t\tHelper::update_all_settings( $general, null, null );\n\t\t\trank_math()->settings->reset();\n\t\t\t$this->schedule_email_reporting();\n\n\t\t\tHelper::remove_notification( 'rank_math_analytics_new_email_reports' );\n\t\t\tHelper::redirect( remove_query_arg( 'enable_email_reports' ) );\n\t\t\tdie();\n\t\t}\n\t}\n\n\t\/**\n\t * Add\/remove\/change scheduled action when the report on\/off or the frequency options are changed.\n\t *\n\t * @param string $type     Settings type.\n\t * @param array  $settings Settings data.\n\t *\/\n\tpublic function before_settings_save( $type, $settings ) {\n\t\tif ( $type !== 'general' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$console_email_reports   = Helper::get_settings( 'general.console_email_reports' );\n\t\t$console_email_frequency = Helper::get_settings( 'general.console_email_frequency' );\n\t\t$updated_email_reports   = isset( $settings['console_email_reports'] ) ? $settings['console_email_reports'] : '';\n\t\t$updated_email_frequency = isset( $settings['console_email_frequency'] ) ? $settings['console_email_frequency'] : '';\n\n\t\t\/\/ Early bail if our options are not changed.\n\t\tif ( $console_email_reports === $updated_email_reports && $console_email_frequency === $updated_email_frequency ) {\n\t\t\treturn;\n\t\t}\n\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/email_report_event', [], 'rank-math' );\n\t\tif ( ! $console_email_reports ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$frequency = $updated_email_frequency ? $updated_email_frequency : 'monthly';\n\t\t$this->schedule_email_reporting( $frequency );\n\t}\n\n\t\/**\n\t * Add\/remove\/change scheduled action when the report on\/off or the frequency options are changed.\n\t *\n\t * @param int    $object_id The ID of the current object.\n\t * @param array  $updated   Array of field IDs that were updated.\n\t *                          Will only include field IDs that had values change.\n\t * @param object $cmb       CMB object.\n\t *\/\n\tpublic function maybe_update_report_schedule( $object_id, $updated, $cmb ) {\n\t\t\/\/ Early bail if our options are not changed.\n\t\tif ( ! in_array( 'console_email_reports', $updated, true ) && ! in_array( 'console_email_frequency', $updated, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/email_report_event', [], 'rank-math' );\n\t\t$values = $cmb->get_sanitized_values( $_POST ); \/\/ phpcs:ignore\n\t\tif ( 'off' === $values['console_email_reports'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$frequency = isset( $values['console_email_frequency'] ) ? $values['console_email_frequency'] : 'monthly';\n\t\t$this->schedule_email_reporting( $frequency );\n\t}\n\n\t\/**\n\t * Replace link inside notice dynamically to avoid issues with the nonce.\n\t *\n\t * @param string $output Notice output.\n\t *\n\t * @return string\n\t *\/\n\tpublic function replace_notice_link( $output ) {\n\t\t$url    = wp_nonce_url( Helper::get_settings_url( 'general', 'analytics' ) . '&enable_email_reports=1', 'enable_email_reports' );\n\t\t$output = str_replace( '###ENABLE_EMAIL_REPORTS###', $url, $output );\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Get Dashboard Widget items.\n\t *\/\n\tprivate function get_dashboard_widget_items() {\n\t\t\/\/ Get stats info within last 30 days.\n\t\tStats::get()->set_date_range( '-30 days' );\n\t\t$data         = Stats::get()->get_widget();\n\t\t$analytics    = get_option( 'rank_math_google_analytic_options' );\n\t\t$is_connected = ! empty( $analytics ) && ! empty( $analytics['view_id'] );\n\t\treturn [\n\t\t\t'search-traffic'    => [\n\t\t\t\t'label' => __( 'Search Traffic', 'rank-math' ),\n\t\t\t\t'desc'  => __( 'This is the number of pageviews carried out by visitors from Search Engines.', 'rank-math' ),\n\t\t\t\t'value' => $is_connected && defined( 'RANK_MATH_PRO_FILE' ),\n\t\t\t\t'data'  => isset( $data->pageviews ) ? $data->pageviews : '',\n\t\t\t],\n\t\t\t'total-impressions' => [\n\t\t\t\t'label' => __( 'Total Impressions', 'rank-math' ),\n\t\t\t\t'desc'  => __( 'How many times your site showed up in the search results.', 'rank-math' ),\n\t\t\t\t'value' => true,\n\t\t\t\t'data'  => $data->impressions,\n\t\t\t],\n\t\t\t'total-clicks'      => [\n\t\t\t\t'label' => __( 'Total Clicks', 'rank-math' ),\n\t\t\t\t'desc'  => __( 'How many times your site was clicked on in the search results.', 'rank-math' ),\n\t\t\t\t'value' => ! $is_connected || ( $is_connected && ! defined( 'RANK_MATH_PRO_FILE' ) ),\n\t\t\t\t'data'  => $data->clicks,\n\t\t\t],\n\t\t\t'total-keywords'    => [\n\t\t\t\t'label' => __( 'Total Keywords', 'rank-math' ),\n\t\t\t\t'desc'  => __( 'Total number of keywords your site ranks for within top 100 positions.', 'rank-math' ),\n\t\t\t\t'value' => true,\n\t\t\t\t'data'  => $data->keywords,\n\t\t\t],\n\t\t\t'average-position'  => [\n\t\t\t\t'label'  => __( 'Average Position', 'rank-math' ),\n\t\t\t\t'desc'   => __( 'Average position of all the keywords ranking within top 100 positions.', 'rank-math' ),\n\t\t\t\t'value'  => true,\n\t\t\t\t'revert' => true,\n\t\t\t\t'data'   => $data->position,\n\t\t\t],\n\t\t];\n\t}\n\n\t\/**\n\t * Get analytic block\n\t *\n\t * @param object  $item   Item.\n\t * @param boolean $revert Flag whether to revert difference icon or not.\n\t *\/\n\tprivate function get_analytic_block( $item, $revert = false ) {\n\t\t$total       = isset( $item['total'] ) && 'n\/a' !== $item['total'] ? abs( $item['total'] ) : 0;\n\t\t$difference  = isset( $item['difference'] ) && 'n\/a' !== $item['difference'] ? abs( $item['difference'] ) : 0;\n\t\t$is_negative = isset( $item['difference'] ) && 'n\/a' !== $item['difference'] && abs( $item['difference'] ) !== $item['difference'];\n\t\t$diff_class  = 'up';\n\t\tif ( ( ! $revert && $is_negative ) || ( $revert && ! $is_negative && $item['difference'] > 0 ) ) {\n\t\t\t$diff_class = 'down';\n\t\t}\n\t\tif ( 0.0 === floatval( $difference ) ) {\n\t\t\t$diff_class = 'no-diff';\n\t\t}\n\t\t?>\n\t\t<div class=\"rank-math-item-numbers\">\n\t\t\t<strong class=\"text-large\" title=\"<?php echo esc_html( Str::human_number( $total ) ); ?>\"><?php echo esc_html( Str::human_number( $total ) ); ?><\/strong>\n\t\t\t<span class=\"rank-math-item-difference <?php echo esc_attr( $diff_class ); ?>\" title=\"<?php echo esc_html( Str::human_number( $difference ) ); ?>\"><?php echo esc_html( Str::human_number( $difference ) ); ?><\/span>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Schedule Email Reporting.\n\t *\n\t * @param string $frequency  The frequency in which the action should run.\n\t * @return void\n\t *\/\n\tprivate function schedule_email_reporting( $frequency = 'monthly' ) {\n\t\t$interval_days = Email_Reports::get_period_from_frequency( $frequency );\n\t\t$midnight      = strtotime( 'tomorrow midnight' );\n\t\tSchedule::recurring_action( $midnight, $interval_days * DAY_IN_SECONDS, 'rank_math\/analytics\/email_report_event', [], 'rank-math' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-ajax.php","ext":"php","size":19301,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics AJAX\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse WP_Error;\nuse RankMath\\Helper;\nuse RankMath\\Google\\Api;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Google\\Analytics;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Sitemap\\Sitemap;\nuse RankMath\\Analytics\\Workflow\\Console;\nuse RankMath\\Analytics\\Workflow\\Inspections;\nuse RankMath\\Analytics\\Workflow\\Objects;\nuse RankMath\\Google\\Console as Google_Analytics;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * AJAX class.\n *\/\nclass AJAX {\n\n\tuse \\RankMath\\Traits\\Ajax;\n\n\t\/**\n\t * Get the instance of this class.\n\t *\n\t * @return AJAX\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance = null;\n\n\t\tif ( is_null( $instance ) ) {\n\t\t\t$instance = new self();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * The Constructor\n\t *\/\n\tpublic function __construct() {\n\t\t$this->ajax( 'query_analytics', 'query_analytics' );\n\t\t$this->ajax( 'add_site_console', 'add_site_console' );\n\t\t$this->ajax( 'disconnect_google', 'disconnect_google' );\n\t\t$this->ajax( 'verify_site_console', 'verify_site_console' );\n\t\t$this->ajax( 'google_check_all_services', 'check_all_services' );\n\n\t\t\/\/ Google Data Management Services.\n\t\t$this->ajax( 'analytics_delete_cache', 'delete_cache' );\n\t\t$this->ajax( 'analytic_start_fetching', 'analytic_start_fetching' );\n\t\t$this->ajax( 'analytic_cancel_fetching', 'analytic_cancel_fetching' );\n\n\t\t\/\/ Save Linked Google Account info Services.\n\t\t$this->ajax( 'check_console_request', 'check_console_request' );\n\t\t$this->ajax( 'check_analytics_request', 'check_analytics_request' );\n\t\t$this->ajax( 'save_analytic_profile', 'save_analytic_profile' );\n\t\t$this->ajax( 'save_analytic_options', 'save_analytic_options' );\n\n\t\t\/\/ Create new GA4 property.\n\t\t$this->ajax( 'create_ga4_property', 'create_ga4_property' );\n\t\t$this->ajax( 'get_ga4_data_streams', 'get_ga4_data_streams' );\n\t}\n\n\t\/**\n\t * Create a new GA4 property.\n\t *\/\n\tpublic function create_ga4_property() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\t\t$account_id = Param::post( 'accountID', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\n\t\t$timezone = get_option( 'timezone_string' );\n\t\t$offset   = get_option( 'gmt_offset' );\n\n\t\tif ( empty( $timezone ) && 0 !== $offset && floor( $offset ) === $offset ) {\n\t\t\t$offset_st = $offset > 0 ? \"-$offset\" : '+' . absint( $offset );\n\t\t\t$timezone  = 'Etc\/GMT' . $offset_st;\n\t\t}\n\n\t\t$args = [\n\t\t\t'displayName' => get_bloginfo( 'sitename' ) . ' - GA4',\n\t\t\t'parent'      => \"accounts\/{$account_id}\",\n\t\t\t'timeZone'    => empty( $timezone ) ? 'UTC' : $timezone,\n\t\t];\n\n\t\t$response = Api::get()->http_post(\n\t\t\t'https:\/\/analyticsadmin.googleapis.com\/v1alpha\/properties',\n\t\t\t$args\n\t\t);\n\n\t\tif ( ! empty( $response['error'] ) ) {\n\t\t\t$this->error( $response['error']['message'] );\n\t\t}\n\n\t\t$property_id   = str_replace( 'properties\/', '', $response['name'] );\n\t\t$property_name = esc_html( $response['displayName'] );\n\t\t$all_accounts  = get_option( 'rank_math_analytics_all_services' );\n\t\tif ( isset( $all_accounts['accounts'][ $account_id ] ) ) {\n\t\t\t$all_accounts['accounts'][ $account_id ]['properties'][ $property_id ] = [\n\t\t\t\t'name'       => $property_name,\n\t\t\t\t'id'         => $property_id,\n\t\t\t\t'account_id' => $account_id,\n\t\t\t\t'type'       => 'GA4',\n\t\t\t];\n\n\t\t\tupdate_option( 'rank_math_analytics_all_services', $all_accounts );\n\t\t}\n\n\t\t$this->success(\n\t\t\t[\n\t\t\t\t'id'   => $property_id,\n\t\t\t\t'name' => $property_name,\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the list of Web data streams.\n\t *\/\n\tpublic function get_ga4_data_streams() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\t\t$property_id = Param::post( 'propertyID', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\n\t\t$response = Api::get()->http_get(\n\t\t\t\"https:\/\/analyticsadmin.googleapis.com\/v1alpha\/properties\/{$property_id}\/dataStreams\"\n\t\t);\n\n\t\tif ( ! empty( $response['error'] ) ) {\n\t\t\t$this->error( $response['error']['message'] );\n\t\t}\n\n\t\tif ( ! empty( $response['dataStreams'] ) ) {\n\t\t\t$streams = [];\n\t\t\tforeach ( $response['dataStreams'] as $data_stream ) {\n\t\t\t\t$streams[] = [\n\t\t\t\t\t'id'            => str_replace( \"properties\/{$property_id}\/dataStreams\/\", '', $data_stream['name'] ),\n\t\t\t\t\t'name'          => $data_stream['displayName'],\n\t\t\t\t\t'measurementId' => $data_stream['webStreamData']['measurementId'],\n\t\t\t\t];\n\t\t\t}\n\n\t\t\t$this->success( [ 'streams' => $streams ] );\n\t\t}\n\n\t\t$stream = $this->create_ga4_data_stream( $property_id );\n\t\tif ( ! is_array( $stream ) ) {\n\t\t\t$this->error( $stream );\n\t\t}\n\n\t\t$this->success( [ 'streams' => [ $stream ] ] );\n\t}\n\n\t\/**\n\t * Check the Google Search Console request.\n\t *\/\n\tpublic function check_console_request() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$success = Google_Analytics::test_connection();\n\t\tif ( false === $success ) {\n\t\t\t$this->error( esc_html__( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' ) );\n\t\t}\n\n\t\t$this->success();\n\t}\n\n\t\/**\n\t * Check the Google Analytics request.\n\t *\/\n\tpublic function check_analytics_request() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$success = Analytics::test_connection();\n\t\tif ( false === $success ) {\n\t\t\t$this->error( esc_html__( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' ) );\n\t\t}\n\n\t\t$this->success();\n\t}\n\n\t\/**\n\t * Save analytic profile.\n\t *\/\n\tpublic function save_analytic_profile() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$response = $this->do_save_analytic_profile(\n\t\t\t[\n\t\t\t\t'profile'             => Param::post( 'profile' ),\n\t\t\t\t'country'             => Param::post( 'country', 'all' ),\n\t\t\t\t'days'                => Param::get( 'days', 90, FILTER_VALIDATE_INT ),\n\t\t\t\t'enable_index_status' => Param::post( 'enableIndexStatus', false, FILTER_VALIDATE_BOOLEAN ),\n\t\t\t]\n\t\t);\n\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\t$this->error( esc_html__( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' ) );\n\t\t}\n\n\t\t$this->success();\n\t}\n\n\t\/**\n\t * Save analytic profile.\n\t *\/\n\tpublic function save_analytic_options() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$request = $this->do_save_analytic_options(\n\t\t\t[\n\t\t\t\t'account_id'       => Param::post( 'accountID', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK ),\n\t\t\t\t'property_id'      => Param::post( 'propertyID', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK ),\n\t\t\t\t'view_id'          => Param::post( 'viewID', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK ),\n\t\t\t\t'measurement_id'   => Param::post( 'measurementID', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK ),\n\t\t\t\t'stream_name'      => Param::post( 'streamName', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK ),\n\t\t\t\t'country'          => Param::post( 'country', 'all', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK ),\n\t\t\t\t'install_code'     => Param::post( 'installCode', false, FILTER_VALIDATE_BOOLEAN ),\n\t\t\t\t'anonymize_ip'     => Param::post( 'anonymizeIP', false, FILTER_VALIDATE_BOOLEAN ),\n\t\t\t\t'local_ga_js'      => Param::post( 'localGAJS', false, FILTER_VALIDATE_BOOLEAN ),\n\t\t\t\t'exclude_loggedin' => Param::post( 'excludeLoggedin', false, FILTER_VALIDATE_BOOLEAN ),\n\t\t\t\t'days'             => Param::get( 'days', 90, FILTER_VALIDATE_INT ),\n\t\t\t]\n\t\t);\n\n\t\tif ( is_wp_error( $request ) ) {\n\t\t\t$this->error( esc_html__( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' ) );\n\t\t}\n\n\t\t$this->success();\n\t}\n\n\t\/**\n\t * Disconnect google.\n\t *\/\n\tpublic function disconnect_google() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\t\tApi::get()->revoke_token();\n\t\tWorkflow\\Workflow::kill_workflows();\n\n\t\tforeach (\n\t\t\t[\n\t\t\t\t'rank_math_analytics_all_services',\n\t\t\t\t'rank_math_google_analytic_options',\n\t\t\t]\n\t\t\tas $option_name\n\t\t) {\n\t\t\tdelete_option( $option_name );\n\t\t}\n\n\t\t$this->success();\n\t}\n\n\t\/**\n\t * Cancel fetching data.\n\t *\/\n\tpublic function analytic_cancel_fetching() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\t\tWorkflow\\Workflow::kill_workflows();\n\n\t\t$this->success( esc_html__( 'Data fetching cancelled.', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Start data fetching for console, analytics, adsense.\n\t *\/\n\tpublic function analytic_start_fetching() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\tif ( ! Authentication::is_authorized() ) {\n\t\t\t$this->error( esc_html__( 'Google oAuth is not authorized.', 'rank-math' ) );\n\t\t}\n\n\t\t$days = Param::get( 'days', 90, FILTER_VALIDATE_INT );\n\t\t$days = $days * 2;\n\t\t$rows = DB::objects()\n\t\t\t->selectCount( 'id' )\n\t\t\t->getVar();\n\n\t\tif ( empty( $rows ) ) {\n\t\t\tdelete_option( 'rank_math_analytics_installed' );\n\t\t}\n\t\tdelete_option( 'rank_math_analytics_last_single_action_schedule_time' );\n\t\t\/\/ Start fetching data.\n\t\tforeach ( [ 'console', 'analytics', 'adsense' ] as $action ) {\n\t\t\tWorkflow\\Workflow::do_workflow(\n\t\t\t\t$action,\n\t\t\t\t$days,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t}\n\n\t\t$this->success( esc_html__( 'Data fetching started in the background.', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Delete cache.\n\t *\/\n\tpublic function delete_cache() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$days = Param::get( 'days', false, FILTER_VALIDATE_INT );\n\t\tif ( ! $days ) {\n\t\t\t$this->error( esc_html__( 'Not a valid settings founds to delete cache.', 'rank-math' ) );\n\t\t}\n\n\t\t\/\/ Delete fetched console data within specified date range.\n\t\tDB::delete_by_days( $days );\n\n\t\t\/\/ Cancel data fetch action.\n\t\tWorkflow\\Workflow::kill_workflows();\n\t\tdelete_transient( 'rank_math_analytics_data_info' );\n\t\t$db_info = DB::info();\n\n\t\t$this->success(\n\t\t\t[\n\t\t\t\t'days' => $db_info['days'] ?? 0,\n\t\t\t\t'rows' => Str::human_number( $db_info['rows'] ?? 0 ),\n\t\t\t\t'size' => size_format( $db_info['size'] ?? 0 ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Search objects info by title or page and return.\n\t *\/\n\tpublic function query_analytics() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$query = Param::get( 'query', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK );\n\n\t\t$data = DB::objects()\n\t\t->whereLike( 'title', $query )\n\t\t->orWhereLike( 'page', $query )\n\t\t->limit( 10 )\n\t\t->get();\n\n\t\t$this->send( [ 'data' => $data ] );\n\t}\n\n\t\/**\n\t * Check all google services.\n\t *\/\n\tpublic function check_all_services() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$result = [\n\t\t\t'isVerified'           => false,\n\t\t\t'inSearchConsole'      => false,\n\t\t\t'hasSitemap'           => false,\n\t\t\t'hasAnalytics'         => false,\n\t\t\t'hasAnalyticsProperty' => false,\n\t\t];\n\n\t\t$result['homeUrl']         = Google_Analytics::get_site_url();\n\t\t$result['sites']           = Api::get()->get_sites();\n\t\t$result['inSearchConsole'] = $this->is_site_in_search_console();\n\n\t\tif ( $result['inSearchConsole'] ) {\n\t\t\t$result['isVerified'] = Helper::is_localhost() ? true : Api::get()->is_site_verified( Google_Analytics::get_site_url() );\n\t\t\t$result['hasSitemap'] = $this->has_sitemap_submitted();\n\t\t}\n\n\t\t$result['accounts'] = Api::get()->get_analytics_accounts();\n\n\t\tif ( ! empty( $result['accounts'] ) ) {\n\t\t\t$result['hasAnalytics']         = true;\n\t\t\t$result['hasAnalyticsProperty'] = $this->is_site_in_analytics( $result['accounts'] );\n\t\t}\n\n\t\t$result = apply_filters( 'rank_math\/analytics\/check_all_services', $result );\n\n\t\tupdate_option( 'rank_math_analytics_all_services', $result );\n\n\t\t$this->success( $result );\n\t}\n\n\t\/**\n\t * Add site to search console\n\t *\/\n\tpublic function add_site_console() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$home_url = Google_Analytics::get_site_url();\n\t\tApi::get()->add_site( $home_url );\n\t\tApi::get()->verify_site( $home_url );\n\n\t\t$this->success( [ 'sites' => Api::get()->get_sites() ] );\n\t}\n\n\t\/**\n\t * Verify site console.\n\t *\/\n\tpublic function verify_site_console() {\n\t\tcheck_ajax_referer( 'rank-math-ajax-nonce', 'security' );\n\t\t$this->has_cap_ajax( 'analytics' );\n\n\t\t$home_url = Google_Analytics::get_site_url();\n\t\tApi::get()->verify_site( $home_url );\n\n\t\t$this->success( [ 'verified' => true ] );\n\t}\n\n\t\/**\n\t * Is site in search console.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_site_in_search_console() {\n\t\t\/\/ Early Bail!!\n\t\tif ( Helper::is_localhost() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$sites    = Api::get()->get_sites();\n\t\t$home_url = Google_Analytics::get_site_url();\n\n\t\tforeach ( $sites as $site ) {\n\t\t\tif ( trailingslashit( $site ) === $home_url ) {\n\t\t\t\t$profile = get_option( 'rank_math_google_analytic_profile' );\n\t\t\t\tif ( empty( $profile ) ) {\n\t\t\t\t\tupdate_option(\n\t\t\t\t\t\t'rank_math_google_analytic_profile',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'country' => 'all',\n\t\t\t\t\t\t\t'profile' => $home_url,\n\t\t\t\t\t\t]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Is site in analytics.\n\t *\n\t * @param array $accounts Analytics accounts.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_site_in_analytics( $accounts ) {\n\t\t$home_url = Google_Analytics::get_site_url();\n\n\t\tforeach ( $accounts as $account ) {\n\t\t\tforeach ( $account['properties'] as $property ) {\n\t\t\t\tif ( ! empty( $property['url'] ) && trailingslashit( $property['url'] ) === $home_url ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Has sitemap in search console.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function has_sitemap_submitted() {\n\t\t$home_url = Google_Analytics::get_site_url();\n\t\t$sitemaps = Api::get()->get_sitemaps( $home_url );\n\n\t\tif ( ! \\is_array( $sitemaps ) || empty( $sitemaps ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tforeach ( $sitemaps as $sitemap ) {\n\t\t\tif ( $sitemap['path'] === $home_url . Sitemap::get_sitemap_index_slug() . '.xml' ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Create a new data stream.\n\t *\n\t * @param string $property_id GA4 property ID.\n\t *\/\n\tprivate function create_ga4_data_stream( $property_id ) {\n\t\t$args = [\n\t\t\t'type'          => 'WEB_DATA_STREAM',\n\t\t\t'displayName'   => 'Website',\n\t\t\t'webStreamData' => [\n\t\t\t\t'defaultUri' => home_url(),\n\t\t\t],\n\t\t];\n\n\t\t$stream = Api::get()->http_post(\n\t\t\t\"https:\/\/analyticsadmin.googleapis.com\/v1alpha\/properties\/{$property_id}\/dataStreams\",\n\t\t\t$args\n\t\t);\n\n\t\tif ( ! empty( $stream['error'] ) ) {\n\t\t\treturn $stream['error']['message'];\n\t\t}\n\n\t\treturn [\n\t\t\t'id'            => str_replace( \"properties\/{$property_id}\/dataStreams\/\", '', $stream['name'] ),\n\t\t\t'name'          => $stream['displayName'],\n\t\t\t'measurementId' => $stream['webStreamData']['measurementId'],\n\t\t];\n\t}\n\n\t\/**\n\t * Save analytic profile.\n\t *\n\t * @param array $data Data to save.\n\t *\/\n\tpublic function do_save_analytic_options( $data = [] ) {\n\t\t$value = [\n\t\t\t'account_id'       => $data['account_id'] ?? '',\n\t\t\t'property_id'      => $data['property_id'] ?? '',\n\t\t\t'view_id'          => $data['view_id'] ?? '',\n\t\t\t'measurement_id'   => $data['measurement_id'] ?? '',\n\t\t\t'stream_name'      => $data['stream_name'] ?? '',\n\t\t\t'country'          => $data['country'] ?? 'all',\n\t\t\t'install_code'     => $data['install_code'] ?? false,\n\t\t\t'anonymize_ip'     => $data['anonymize_ip'] ?? false,\n\t\t\t'local_ga_js'      => $data['local_ga_js'] ?? false,\n\t\t\t'exclude_loggedin' => $data['exclude_loggedin'] ?? false,\n\t\t\t'days'             => $data['days'] ?? 90,\n\t\t];\n\n\t\t$days = $value['days'];\n\n\t\t$prev = get_option( 'rank_math_google_analytic_options' );\n\t\t\/\/ Preserve adsense info.\n\t\tif ( isset( $prev['adsense_id'] ) ) {\n\t\t\t$value['adsense_id'] = $prev['adsense_id'];\n\t\t}\n\t\tupdate_option( 'rank_math_google_analytic_options', $value );\n\n\t\t\/\/ Remove other stored accounts from option for privacy.\n\t\t$all_accounts = get_option( 'rank_math_analytics_all_services', [] );\n\t\tif ( isset( $all_accounts['accounts'][ $value['account_id'] ] ) ) {\n\t\t\t$account = $all_accounts['accounts'][ $value['account_id'] ];\n\n\t\t\tif ( isset( $account['properties'][ $value['property_id'] ] ) ) {\n\t\t\t\t$property              = $account['properties'][ $value['property_id'] ];\n\t\t\t\t$account['properties'] = [ $value['property_id'] => $property ];\n\t\t\t}\n\n\t\t\t$all_accounts['accounts'] = [ $value['account_id'] => $account ];\n\t\t}\n\t\tupdate_option( 'rank_math_analytics_all_services', $all_accounts );\n\n\t\t\/\/ Test Google Analytics (GA) connection request.\n\t\tif ( ! empty( $value['view_id'] ) || ! empty( $value['country'] ) || ! empty( $value['property_id'] ) ) {\n\t\t\t$request = Analytics::get_analytics(\n\t\t\t\t[\n\t\t\t\t\t'view_id'     => $value['view_id'],\n\t\t\t\t\t'country'     => $value['country'],\n\t\t\t\t\t'property_id' => $value['property_id'],\n\t\t\t\t],\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tif ( is_wp_error( $request ) ) {\n\t\t\t\treturn new WP_Error(\n\t\t\t\t\t'insufficient_permissions',\n\t\t\t\t\tesc_html__( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Start fetching analytics data.\n\t\tWorkflow\\Workflow::do_workflow(\n\t\t\t'analytics',\n\t\t\t$days,\n\t\t\t$prev,\n\t\t\t$value\n\t\t);\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Save analytic profile.\n\t *\n\t * @param array $data Data to save.\n\t *\/\n\tpublic function do_save_analytic_profile( $data = [] ) {\n\t\t$profile             = $data['profile'] ?? '';\n\t\t$country             = $data['country'] ?? 'all';\n\t\t$days                = $data['days'] ?? 90;\n\t\t$enable_index_status = $data['enable_index_status'] ?? false;\n\n\t\t$success = Api::get()->get_search_analytics(\n\t\t\t[\n\t\t\t\t'country' => $country,\n\t\t\t\t'profile' => $profile,\n\t\t\t]\n\t\t);\n\n\t\tif ( is_wp_error( $success ) ) {\n\t\t\treturn new WP_Error( 'insufficient_permissions', esc_html__( 'Data import will not work for this service as sufficient permissions are not given.', 'rank-math' ) );\n\t\t}\n\n\t\t$prev  = get_option( 'rank_math_google_analytic_profile', [] );\n\t\t$value = [\n\t\t\t'country'             => $country,\n\t\t\t'profile'             => $profile,\n\t\t\t'enable_index_status' => $enable_index_status,\n\t\t];\n\t\tupdate_option( 'rank_math_google_analytic_profile', $value );\n\n\t\t\/\/ Remove other stored sites from option for privacy.\n\t\t$all_accounts          = get_option( 'rank_math_analytics_all_services', [] );\n\t\t$all_accounts['sites'] = [ $profile => $profile ];\n\n\t\tupdate_option( 'rank_math_analytics_all_services', $all_accounts );\n\n\t\t\/\/ Purge Cache.\n\t\tif ( ! empty( array_diff( $prev, $value ) ) ) {\n\t\t\tDB::purge_cache();\n\t\t}\n\n\t\tnew Objects();\n\t\tnew Console();\n\t\tnew Inspections();\n\n\t\t\/\/ Start fetching console data.\n\t\tWorkflow\\Workflow::do_workflow(\n\t\t\t'console',\n\t\t\t$days,\n\t\t\t$prev,\n\t\t\t$value\n\t\t);\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-summary.php","ext":"php","size":12508,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics Module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Traits\\Cache;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Summary class.\n *\n * @method get_cache_key()\n * @method get_intervals()\n * @method get_sql_date_intervals()\n * @method set_dimension_as_key()\n * @method extract_data_from_mixed()\n * @method get_merged_metrics()\n * @method get_merge_data_graph()\n * @method get_date_array()\n * @method get_graph_data_flat()\n *\/\nclass Summary {\n\n\tuse Cache;\n\n\t\/**\n\t * Start date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $start_date;\n\n\t\/**\n\t * End date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $end_date;\n\n\t\/**\n\t * Compare start date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $compare_start_date;\n\n\t\/**\n\t * Compare end date.\n\t *\n\t * @var string\n\t *\/\n\tpublic $compare_end_date;\n\n\t\/**\n\t * Days.\n\t *\n\t * @var int\n\t *\/\n\tpublic $days;\n\n\t\/**\n\t * Get Widget.\n\t *\n\t * @return object\n\t *\/\n\tpublic function get_widget() {\n\t\tglobal $wpdb;\n\n\t\t$cache_key = Stats::get()->get_cache_key( 'dashboard_stats_widget' );\n\t\t$cache     = get_transient( $cache_key );\n\n\t\tif ( false !== $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t$stats = DB::analytics()\n\t\t\t->selectSum( 'impressions', 'impressions' )\n\t\t\t->selectSum( 'clicks', 'clicks' )\n\t\t\t->selectAvg( 'position', 'position' )\n\t\t\t->whereBetween( 'created', [ Stats::get()->start_date, Stats::get()->end_date ] )\n\t\t\t->one();\n\n\t\t$old_stats = DB::analytics()\n\t\t\t->selectSum( 'impressions', 'impressions' )\n\t\t\t->selectSum( 'clicks', 'clicks' )\n\t\t\t->selectAvg( 'position', 'position' )\n\t\t\t->whereBetween( 'created', [ Stats::get()->compare_start_date, Stats::get()->compare_end_date ] )\n\t\t\t->one();\n\n\t\tif ( is_null( $stats ) ) {\n\t\t\t$stats = (object) [\n\t\t\t\t'clicks'      => 0,\n\t\t\t\t'impressions' => 0,\n\t\t\t\t'position'    => 0,\n\t\t\t];\n\t\t}\n\n\t\tif ( is_null( $old_stats ) ) {\n\t\t\t$old_stats = $stats;\n\t\t}\n\n\t\t$stats->clicks = [\n\t\t\t'total'      => (int) $stats->clicks,\n\t\t\t'previous'   => (int) $old_stats->clicks,\n\t\t\t'difference' => $stats->clicks - $old_stats->clicks,\n\t\t];\n\n\t\t$stats->impressions = [\n\t\t\t'total'      => (int) $stats->impressions,\n\t\t\t'previous'   => (int) $old_stats->impressions,\n\t\t\t'difference' => $stats->impressions - $old_stats->impressions,\n\t\t];\n\n\t\t$stats->position = [\n\t\t\t'total'      => (float) \\number_format( $stats->position, 2 ),\n\t\t\t'previous'   => (float) \\number_format( $old_stats->position, 2 ),\n\t\t\t'difference' => (float) \\number_format( $stats->position - $old_stats->position, 2 ),\n\t\t];\n\n\t\t$stats->keywords = $this->get_keywords_summary();\n\n\t\t$stats = apply_filters( 'rank_math\/analytics\/get_widget', $stats );\n\n\t\tset_transient( $cache_key, $stats, DAY_IN_SECONDS * Stats::get()->days );\n\n\t\treturn $stats;\n\t}\n\n\t\/**\n\t * Get Optimization stats.\n\t *\n\t * @param string $post_type Selected Post Type.\n\t *\n\t * @return object\n\t *\/\n\tpublic function get_optimization_summary( $post_type = '' ) {\n\t\tglobal $wpdb;\n\n\t\t$cache_group = 'rank_math_optimization_summary';\n\t\t$hash_name   = $post_type ? $post_type : 'overall';\n\t\t$cache_key   = $this->generate_hash( $hash_name );\n\t\t$cache       = $this->get_cache( $cache_key, $cache_group );\n\t\tif ( false !== $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t$stats = (object) [\n\t\t\t'good'    => 0,\n\t\t\t'ok'      => 0,\n\t\t\t'bad'     => 0,\n\t\t\t'noData'  => 0,\n\t\t\t'total'   => 0,\n\t\t\t'average' => 0,\n\t\t];\n\n\t\t$object_type_sql = $post_type ? ' AND object_subtype = \"' . $post_type . '\"' : '';\n\t\t$data            = DB_Helper::get_results(\n\t\t\t\"SELECT COUNT(object_id) AS count,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN seo_score BETWEEN 81 AND 100 THEN 'good'\n\t\t\t\t\tWHEN seo_score BETWEEN 51 AND 80 THEN 'ok'\n\t\t\t\t\tWHEN seo_score BETWEEN 1 AND 50 THEN 'bad'\n\t\t\t\t\tWHEN seo_score = 0 THEN 'noData'\n\t\t\t\t\tELSE 'none'\n\t\t\t\tEND AS type\n\t\t\tFROM {$wpdb->prefix}rank_math_analytics_objects\n\t\t\tWHERE is_indexable = 1\n\t\t\t{$object_type_sql}\n\t\t\tGROUP BY type\"\n\t\t);\n\n\t\t$total = 0;\n\t\tforeach ( $data as $row ) {\n\t\t\t$total              += (int) $row->count;\n\t\t\t$stats->{$row->type} = (int) $row->count;\n\t\t}\n\t\t$stats->total   = $total;\n\t\t$stats->average = 0;\n\n\t\t\/\/ Average.\n\t\t$query = DB::objects()\n\t\t->selectCount( 'object_id', 'total' )\n\t\t->where( 'is_indexable', 1 )\n\t\t->selectSum( 'seo_score', 'score' );\n\t\tif ( $object_type_sql ) {\n\t\t\t$query->where( 'object_subtype', $post_type );\n\t\t}\n\n\t\t$average = $query->one();\n\t\tif ( $average && $average->total > 0 ) {\n\t\t\t$average->total += property_exists( $stats, 'noData' ) ? $stats->noData : 0; \/\/ phpcs:ignore\n\t\t\t$stats->average  = \\round( $average->score \/ $average->total, 2 );\n\t\t}\n\n\t\t$this->set_cache( $cache_key, $stats, $cache_group, DAY_IN_SECONDS );\n\n\t\treturn $stats;\n\t}\n\n\t\/**\n\t * Get analytics summary.\n\t *\n\t * @return object\n\t *\/\n\tpublic function get_analytics_summary() {\n\t\t$args = [\n\t\t\t'start_date'         => $this->start_date,\n\t\t\t'end_date'           => $this->end_date,\n\t\t\t'compare_start_date' => $this->compare_start_date,\n\t\t\t'compare_end_date'   => $this->compare_end_date,\n\t\t];\n\n\t\t$cache_group = 'rank_math_analytics_summary';\n\t\t$cache_key   = $this->generate_hash( $args );\n\t\t$cache       = $this->get_cache( $cache_key, $cache_group );\n\t\tif ( false !== $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t$stats = DB::analytics()\n\t\t\t->selectCount( 'DISTINCT(page)', 'posts' )\n\t\t\t->selectSum( 'impressions', 'impressions' )\n\t\t\t->selectSum( 'clicks', 'clicks' )\n\t\t\t->selectAvg( 'position', 'position' )\n\t\t\t->whereBetween( 'created', [ $this->start_date, $this->end_date ] )\n\t\t\t->one();\n\n\t\t$old_stats = DB::analytics()\n\t\t\t->selectCount( 'DISTINCT(page)', 'posts' )\n\t\t\t->selectSum( 'impressions', 'impressions' )\n\t\t\t->selectSum( 'clicks', 'clicks' )\n\t\t\t->selectAvg( 'position', 'position' )\n\t\t\t->whereBetween( 'created', [ $this->compare_start_date, $this->compare_end_date ] )\n\t\t\t->one();\n\n\t\t$total_ctr    = is_null( $stats->impressions ) ? 'n\/a' : round( ( $stats->clicks \/ $stats->impressions ) * 100, 2 );\n\t\t$previous_ctr = is_null( $old_stats->impressions ) ? 'n\/a' : ( 0 !== $old_stats->impressions && 'n\/a' !== $old_stats->impressions ? round( ( $old_stats->clicks \/ $old_stats->impressions ) * 100, 2 ) : 0 );\n\n\t\t$stats->ctr = [\n\t\t\t'total'      => $total_ctr,\n\t\t\t'previous'   => $previous_ctr,\n\t\t\t'difference' => 'n\/a' !== $total_ctr && 'n\/a' !== $previous_ctr ? $total_ctr - $previous_ctr : 'n\/a',\n\t\t];\n\n\t\t$stats->clicks = [\n\t\t\t'total'      => is_null( $stats->clicks ) ? 'n\/a' : (int) $stats->clicks,\n\t\t\t'previous'   => is_null( $old_stats->clicks ) ? 'n\/a' : (int) $old_stats->clicks,\n\t\t\t'difference' => is_null( $stats->clicks ) || is_null( $old_stats->clicks ) ? 'n\/a' : $stats->clicks - $old_stats->clicks,\n\t\t];\n\n\t\t$stats->impressions = [\n\t\t\t'total'      => is_null( $stats->impressions ) ? 'n\/a' : (int) $stats->impressions,\n\t\t\t'previous'   => is_null( $old_stats->impressions ) ? 'n\/a' : (int) $old_stats->impressions,\n\t\t\t'difference' => is_null( $stats->impressions ) || is_null( $old_stats->impressions ) ? 'n\/a' : $stats->impressions - $old_stats->impressions,\n\t\t];\n\n\t\t$stats->position = [\n\t\t\t'total'      => is_null( $stats->position ) ? 'n\/a' : (float) \\number_format( $stats->position, 2 ),\n\t\t\t'previous'   => is_null( $old_stats->position ) ? 'n\/a' : (float) \\number_format( $old_stats->position, 2 ),\n\t\t\t'difference' => is_null( $old_stats->position ) || is_null( $old_stats->position ) ? 'n\/a' : (float) \\number_format( $stats->position - $old_stats->position, 2 ),\n\t\t];\n\t\t$stats->keywords = $this->get_keywords_summary();\n\t\t$stats->graph    = $this->get_analytics_summary_graph();\n\n\t\t$stats = apply_filters( 'rank_math\/analytics\/summary', $stats );\n\n\t\t$stats = array_filter( (array) $stats );\n\n\t\t$this->set_cache( $cache_key, $stats, $cache_group, DAY_IN_SECONDS );\n\n\t\treturn $stats;\n\t}\n\t\/**\n\t * Get posts summary.\n\t *\n\t * @param string $post_type Selected Post Type.\n\t *\n\t * @return object\n\t *\/\n\tpublic function get_posts_summary( $post_type = '' ) {\n\t\t$cache_key = $this->get_cache_key( 'posts_summary', $this->days . 'days' );\n\t\t$cache     = ! $post_type ? get_transient( $cache_key ) : false;\n\n\t\tif ( false !== $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\tglobal $wpdb;\n\t\t$query   = DB::analytics()\n\t\t\t->selectCount( 'DISTINCT(' . $wpdb->prefix . 'rank_math_analytics_gsc.page)', 'posts' )\n\t\t\t->selectSum( 'impressions', 'impressions' )\n\t\t\t->selectSum( 'clicks', 'clicks' )\n\t\t\t->selectAvg( 'ctr', 'ctr' )\n\t\t\t->whereBetween( $wpdb->prefix . 'rank_math_analytics_gsc.created', [ $this->start_date, $this->end_date ] );\n\t\t$summary = $query->one();\n\t\t$summary = apply_filters( 'rank_math\/analytics\/posts_summary', $summary, $post_type, $query );\n\t\t$summary = wp_parse_args(\n\t\t\tarray_filter( (array) $summary ),\n\t\t\t[\n\t\t\t\t'ctr'         => 'n\/a',\n\t\t\t\t'posts'       => 'n\/a',\n\t\t\t\t'clicks'      => 'n\/a',\n\t\t\t\t'pageviews'   => 'n\/a',\n\t\t\t\t'impressions' => 'n\/a',\n\t\t\t]\n\t\t);\n\n\t\tset_transient( $cache_key, $summary, DAY_IN_SECONDS );\n\n\t\treturn $summary;\n\t}\n\n\t\/**\n\t * Get keywords summary.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_keywords_summary() {\n\t\tglobal $wpdb;\n\n\t\t\/\/ Get Total Keywords Counts.\n\t\t$keywords_count = DB_Helper::get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT NULLIF(COUNT(DISTINCT(query)), 0)\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\tWHERE created BETWEEN %s AND %s\",\n\t\t\t\t$this->start_date,\n\t\t\t\t$this->end_date\n\t\t\t)\n\t\t);\n\n\t\t$old_keywords_count = DB_Helper::get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT NULLIF(COUNT(DISTINCT(query)), 0)\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\tWHERE created BETWEEN %s AND %s\",\n\t\t\t\t$this->compare_start_date,\n\t\t\t\t$this->compare_end_date\n\t\t\t)\n\t\t);\n\n\t\t$keywords = [\n\t\t\t'total'      => is_null( $keywords_count ) ? 'n\/a' : (int) $keywords_count,\n\t\t\t'previous'   => is_null( $old_keywords_count ) ? 'n\/a' : (int) $old_keywords_count,\n\t\t\t'difference' => is_null( $keywords_count ) || is_null( $old_keywords_count ) ? 'n\/a' : (int) $keywords_count - (int) $old_keywords_count,\n\t\t];\n\n\t\treturn $keywords;\n\t}\n\n\t\/**\n\t * Get analytics graph data.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_analytics_summary_graph() {\n\t\tglobal $wpdb;\n\n\t\t$data = new \\stdClass();\n\n\t\t\/\/ Step1. Get splitted date intervals for graph within selected date range.\n\t\t$intervals     = $this->get_intervals();\n\t\t$sql_daterange = $this->get_sql_date_intervals( $intervals );\n\n\t\t\/\/ Step2. Get current analytics data by splitted date intervals.\n\t\t\/\/ phpcs:disable\n\t\t$query = $wpdb->prepare(\n\t\t\t\"SELECT DATE_FORMAT( created, '%%Y-%%m-%%d') as date, SUM(clicks) as clicks, SUM(impressions) as impressions, AVG(position) as position, AVG(ctr) as ctr, {$sql_daterange}\n\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\tWHERE created BETWEEN %s AND %s\n\t\t\tGROUP BY range_group\",\n\t\t\t$this->start_date,\n\t\t\t$this->end_date\n\t\t);\n\t\t$analytics = DB_Helper::get_results( $query );\n\t\t$analytics = $this->set_dimension_as_key( $analytics, 'range_group' );\n\t\t\/\/ phpcs:enable\n\n\t\t\/\/ Step2. Get current keyword data by splitted date intervals. Keyword count should be calculated as total count of most recent date for each splitted date intervals.\n\t\t\/\/ phpcs:disable\n\t\t$query = $wpdb->prepare(\n\t\t\t\"SELECT t.range_group, MAX(CONCAT(t.range_group, ':', t.date, ':', t.keywords )) as mixed FROM\n\t\t\t\t(SELECT COUNT(DISTINCT(query)) as keywords, Date(created) as date, {$sql_daterange}\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\tWHERE created BETWEEN %s AND %s\n\t\t\t\tGROUP BY range_group, Date(created)) AS t\n\t\t\tGROUP BY t.range_group\",\n\t\t\t$this->start_date,\n\t\t\t$this->end_date\n\t\t);\n\t\t$keywords = DB_Helper::get_results( $query );\n\t\t\/\/ phpcs:enable\n\n\t\t$keywords = $this->extract_data_from_mixed( $keywords, 'mixed', ':', [ 'keywords', 'date' ] );\n\t\t$keywords = $this->set_dimension_as_key( $keywords, 'range_group' );\n\n\t\t\/\/ merge metrics data.\n\t\t$data->analytics = [];\n\t\t$data->analytics = $this->get_merged_metrics( $analytics, $keywords, true );\n\n\t\t$data->merged = $this->get_date_array(\n\t\t\t$intervals['dates'],\n\t\t\t[\n\t\t\t\t'clicks'      => [],\n\t\t\t\t'impressions' => [],\n\t\t\t\t'position'    => [],\n\t\t\t\t'ctr'         => [],\n\t\t\t\t'keywords'    => [],\n\t\t\t\t'pageviews'   => [],\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Convert types.\n\t\t$data->analytics = array_map( [ $this, 'normalize_graph_rows' ], $data->analytics );\n\n\t\t\/\/ Merge for performance.\n\t\t$data->merged = $this->get_merge_data_graph( $data->analytics, $data->merged, $intervals['map'] );\n\n\t\t\/\/ For developers.\n\t\t$data = apply_filters( 'rank_math\/analytics\/analytics_summary_graph', $data, $intervals );\n\n\t\t$data->merged = $this->get_graph_data_flat( $data->merged );\n\t\t$data->merged = array_values( $data->merged );\n\n\t\treturn $data;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/rest\/class-rest.php","ext":"php","size":9521,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Global functionality of the plugin.\n *\n * Defines the functionality loaded on admin.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\Rest\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse WP_Error;\nuse WP_REST_Server;\nuse WP_REST_Request;\nuse WP_REST_Controller;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Rest class.\n *\/\nclass Rest extends WP_REST_Controller {\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->namespace = \\RankMath\\Rest\\Rest_Helper::BASE . '\/an';\n\t}\n\n\t\/**\n\t * Registers the routes for the objects of the controller.\n\t *\/\n\tpublic function register_routes() {\n\t\t$routes = [\n\t\t\t'dashboard'           => [\n\t\t\t\t'callback' => [ $this, 'get_dashboard' ],\n\t\t\t],\n\t\t\t'keywordsOverview'    => [\n\t\t\t\t'callback' => [ $this, 'get_keywords_overview' ],\n\t\t\t],\n\t\t\t'postsSummary'        => [\n\t\t\t\t'callback' => [ Stats::get(), 'get_posts_summary' ],\n\t\t\t],\n\t\t\t'postsRowsByObjects'  => [\n\t\t\t\t'callback' => [ Stats::get(), 'get_posts_rows_by_objects' ],\n\t\t\t],\n\t\t\t'post\/(?P<id>\\d+)'    => [\n\t\t\t\t'callback' => [ $this, 'get_post' ],\n\t\t\t\t'args'     => [\n\t\t\t\t\t'id' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Post ID.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t'keywordsSummary'     => [\n\t\t\t\t'callback' => [ Stats::get(), 'get_analytics_summary' ],\n\t\t\t],\n\t\t\t'analyticsSummary'    => [\n\t\t\t\t'callback' => [ $this, 'get_analytics_summary' ],\n\t\t\t\t'args'     => [\n\t\t\t\t\t'postType' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Post Type.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t'keywordsRows'        => [\n\t\t\t\t'callback' => [ Stats::get(), 'get_keywords_rows' ],\n\t\t\t\t'args'     => [\n\t\t\t\t\t'page'    => [\n\t\t\t\t\t\t'description' => esc_html__( 'Page number.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'perPage' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Results per page.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'orderBy' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Order by.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'order'   => [\n\t\t\t\t\t\t'description' => esc_html__( 'Order.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'search'  => [\n\t\t\t\t\t\t'description' => esc_html__( 'Search.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t'userPreferences'     => [\n\t\t\t\t'callback' => [ $this, 'update_user_preferences' ],\n\t\t\t\t'methods'  => WP_REST_Server::CREATABLE,\n\t\t\t\t'args'     => [\n\t\t\t\t\t'preferences' => [\n\t\t\t\t\t\t'description' => esc_html__( 'User preferences.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'object',\n\t\t\t\t\t\t'required'    => true,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t'inspectionResults'   => [\n\t\t\t\t'callback' => [ $this, 'get_inspection_results' ],\n\t\t\t\t'args'     => [\n\t\t\t\t\t'page'       => [\n\t\t\t\t\t\t'description' => esc_html__( 'Page number.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'perPage'    => [\n\t\t\t\t\t\t'description' => esc_html__( 'Results per page.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'orderBy'    => [\n\t\t\t\t\t\t'description' => esc_html__( 'Order by.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'order'      => [\n\t\t\t\t\t\t'description' => esc_html__( 'Order.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'search'     => [\n\t\t\t\t\t\t'description' => esc_html__( 'Search.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'filter'     => [\n\t\t\t\t\t\t'description' => esc_html__( 'Filter.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'filterType' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Filter type.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t'removeFrontendStats' => [\n\t\t\t\t'callback' => [ $this, 'remove_frontend_stats' ],\n\t\t\t\t'methods'  => WP_REST_Server::CREATABLE,\n\t\t\t\t'args'     => [\n\t\t\t\t\t'toggleBar' => [\n\t\t\t\t\t\t'description' => esc_html__( 'Toggle bar.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'boolean',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t\t'hide'      => [\n\t\t\t\t\t\t'description' => esc_html__( 'Hide.', 'rank-math' ),\n\t\t\t\t\t\t'type'        => 'boolean',\n\t\t\t\t\t\t'required'    => false,\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\n\t\tforeach ( $routes as $route => $args ) {\n\t\t\t$this->register_route( $route, $args );\n\t\t}\n\t}\n\n\t\/**\n\t * Register a route.\n\t *\n\t * @param string $route  Route.\n\t * @param array  $args   Arguments.\n\t *\/\n\tprivate function register_route( $route, $args ) {\n\t\t$route_defaults = [\n\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t'permission_callback' => [ $this, 'has_permission' ],\n\t\t];\n\n\t\t$route_args = wp_parse_args( $args, $route_defaults );\n\n\t\tregister_rest_route( $this->namespace, '\/' . $route, $route_args );\n\t}\n\n\t\/**\n\t * Determines if the current user can manage analytics.\n\t *\n\t * @return true\n\t *\/\n\tpublic function has_permission() {\n\t\treturn current_user_can( 'rank_math_analytics' );\n\t}\n\n\t\/**\n\t * Update user perferences.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return boolean|WP_Error True on success, or WP_Error object on failure.\n\t *\/\n\tpublic function update_user_preferences( WP_REST_Request $request ) {\n\t\t$pref = $request->get_param( 'preferences' );\n\t\tif ( empty( $pref ) ) {\n\t\t\treturn new WP_Error(\n\t\t\t\t'param_value_empty',\n\t\t\t\tesc_html__( 'Sorry, no preference found.', 'rank-math' )\n\t\t\t);\n\t\t}\n\n\t\tupdate_user_meta(\n\t\t\tget_current_user_id(),\n\t\t\t'rank_math_analytics_table_columns',\n\t\t\t$pref\n\t\t);\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get post data.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function get_post( WP_REST_Request $request ) {\n\t\t$id = $request->get_param( 'id' );\n\t\tif ( empty( $id ) ) {\n\t\t\treturn new WP_Error(\n\t\t\t\t'param_value_empty',\n\t\t\t\tesc_html__( 'Sorry, no post id found.', 'rank-math' )\n\t\t\t);\n\t\t}\n\n\t\treturn rest_ensure_response( Stats::get()->get_post( $request ) );\n\t}\n\n\t\/**\n\t * Get dashboard data.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function get_dashboard() {\n\t\treturn rest_ensure_response(\n\t\t\t[\n\t\t\t\t'stats'        => Stats::get()->get_analytics_summary(),\n\t\t\t\t'optimization' => Stats::get()->get_optimization_summary(),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get analytics summary.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function get_analytics_summary( WP_REST_Request $request ) { \/\/ phpcs:ignore\n\t\t$post_type = sanitize_key( $request->get_param( 'postType' ) );\n\t\treturn rest_ensure_response(\n\t\t\t[\n\t\t\t\t'summary'      => Stats::get()->get_posts_summary( $post_type ),\n\t\t\t\t'optimization' => Stats::get()->get_optimization_summary( $post_type ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get keywords overview.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function get_keywords_overview() {\n\t\treturn rest_ensure_response(\n\t\t\tapply_filters(\n\t\t\t\t'rank_math\/analytics\/keywords_overview',\n\t\t\t\t[\n\t\t\t\t\t'topKeywords'   => Stats::get()->get_top_keywords(),\n\t\t\t\t\t'positionGraph' => Stats::get()->get_top_position_graph(),\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Get inspection results: latest result for each post.\n\t *\n\t * @param WP_REST_Request $request Rest request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function get_inspection_results( WP_REST_Request $request ) {\n\t\t$per_page = 25;\n\t\t$rows     = Url_Inspection::get()->get_inspections( $request->get_params(), $per_page );\n\n\t\tif ( empty( $rows ) ) {\n\t\t\treturn [\n\t\t\t\t'rows'      => [ 'response' => 'No Data' ],\n\t\t\t\t'rowsFound' => 0,\n\t\t\t];\n\t\t}\n\n\t\treturn rest_ensure_response(\n\t\t\t[\n\t\t\t\t'rows'      => $rows,\n\t\t\t\t'rowsFound' => DB::get_inspections_count( $request->get_params() ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Remove frontend stats.\n\t *\n\t * @param WP_REST_Request $request Rest request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function remove_frontend_stats( WP_REST_Request $request ) {\n\t\tif ( (bool) $request->get_param( 'toggleBar' ) ) {\n\t\t\t$hide_bar = (bool) $request->get_param( 'hide' );\n\t\t\t$user_id  = get_current_user_id();\n\t\t\tif ( $hide_bar ) {\n\t\t\t\treturn update_user_meta( $user_id, 'rank_math_hide_frontend_stats', true );\n\t\t\t}\n\n\t\t\treturn delete_user_meta( $user_id, 'rank_math_hide_frontend_stats' );\n\t\t}\n\n\t\t$all_opts                   = rank_math()->settings->all_raw();\n\t\t$general                    = $all_opts['general'];\n\t\t$general['analytics_stats'] = 'off';\n\n\t\tHelper::update_all_settings( $general, null, null );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Should update pagespeed record.\n\t *\n\t * @param  int $id      Database row id.\n\t * @return bool\n\t *\/\n\tprivate function should_update_pagespeed( $id ) {\n\t\t$record = DB::objects()->where( 'id', $id )->one();\n\n\t\treturn \\time() > ( \\strtotime( $record->pagespeed_refreshed ) + ( DAY_IN_SECONDS * 7 ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/assets\/js\/stats.js","ext":"js","size":647446,"mtime":1757324689},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/assets\/js\/admin-bar.js","ext":"js","size":30669,"mtime":1757324689,"type":"text","content":"!function(){var e={4184:function(e,t){var n;!function(){\"use strict\";var a={}.hasOwnProperty;function r(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var l=typeof n;if(\"string\"===l||\"number\"===l)e.push(n);else if(Array.isArray(n)){if(n.length){var o=r.apply(null,n);o&&e.push(o)}}else if(\"object\"===l){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes(\"[native code]\")){e.push(n.toString());continue}for(var i in n)a.call(n,i)&&n[i]&&e.push(i)}}}return e.join(\" \")}e.exports?(r.default=r,e.exports=r):void 0===(n=function(){return r}.apply(t,[]))||(e.exports=n)}()}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var l=t[a]={exports:{}};return e[a](l,l.exports,n),l.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){\"use strict\";var e=jQuery,t=n.n(e),a=React,r=function(){return r=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e},r.apply(this,arguments)};var l=function(e){var t=e.animate,n=void 0===t||t,l=e.animateBegin,o=e.backgroundColor,i=void 0===o?\"#f5f6f7\":o,s=e.backgroundOpacity,c=void 0===s?1:s,m=e.baseUrl,u=void 0===m?\"\":m,p=e.children,d=e.foregroundColor,f=void 0===d?\"#eee\":d,h=e.foregroundOpacity,y=void 0===h?1:h,v=e.gradientRatio,w=void 0===v?2:v,E=e.gradientDirection,b=void 0===E?\"left-right\":E,g=e.uniqueKey,k=e.interval,_=void 0===k?.25:k,S=e.rtl,N=void 0!==S&&S,O=e.speed,x=void 0===O?1.2:O,R=e.style,C=void 0===R?{}:R,P=e.title,I=void 0===P?\"Loading...\":P,T=e.beforeMask,j=void 0===T?null:T,A=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&\"function\"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n}(e,[\"animate\",\"animateBegin\",\"backgroundColor\",\"backgroundOpacity\",\"baseUrl\",\"children\",\"foregroundColor\",\"foregroundOpacity\",\"gradientRatio\",\"gradientDirection\",\"uniqueKey\",\"interval\",\"rtl\",\"speed\",\"style\",\"title\",\"beforeMask\"]),M=g||Math.random().toString(36).substring(6),U=M+\"-diff\",F=M+\"-animated-diff\",D=M+\"-aria\",B=N?{transform:\"scaleX(-1)\"}:null,L=\"0; \"+_+\"; 1\",G=x+\"s\",V=\"top-bottom\"===b?\"rotate(90)\":void 0;return(0,a.createElement)(\"svg\",r({\"aria-labelledby\":D,role:\"img\",style:r(r({},C),B)},A),I?(0,a.createElement)(\"title\",{id:D},I):null,j&&(0,a.isValidElement)(j)?j:null,(0,a.createElement)(\"rect\",{role:\"presentation\",x:\"0\",y:\"0\",width:\"100%\",height:\"100%\",clipPath:\"url(\"+u+\"#\"+U+\")\",style:{fill:\"url(\"+u+\"#\"+F+\")\"}}),(0,a.createElement)(\"defs\",null,(0,a.createElement)(\"clipPath\",{id:U},p),(0,a.createElement)(\"linearGradient\",{id:F,gradientTransform:V},(0,a.createElement)(\"stop\",{offset:\"0%\",stopColor:i,stopOpacity:c},n&&(0,a.createElement)(\"animate\",{attributeName:\"offset\",values:-w+\"; \"+-w+\"; 1\",keyTimes:L,dur:G,repeatCount:\"indefinite\",begin:l})),(0,a.createElement)(\"stop\",{offset:\"50%\",stopColor:f,stopOpacity:y},n&&(0,a.createElement)(\"animate\",{attributeName:\"offset\",values:-w\/2+\"; \"+-w\/2+\"; \"+(1+w\/2),keyTimes:L,dur:G,repeatCount:\"indefinite\",begin:l})),(0,a.createElement)(\"stop\",{offset:\"100%\",stopColor:i,stopOpacity:c},n&&(0,a.createElement)(\"animate\",{attributeName:\"offset\",values:\"0; 0; \"+(1+w),keyTimes:L,dur:G,repeatCount:\"indefinite\",begin:l})))))},o=function(e){return e.children?(0,a.createElement)(l,r({},e)):(0,a.createElement)(i,r({},e))},i=function(e){return(0,a.createElement)(o,r({viewBox:\"0 0 476 124\"},e),(0,a.createElement)(\"rect\",{x:\"48\",y:\"8\",width:\"88\",height:\"6\",rx:\"3\"}),(0,a.createElement)(\"rect\",{x:\"48\",y:\"26\",width:\"52\",height:\"6\",rx:\"3\"}),(0,a.createElement)(\"rect\",{x:\"0\",y:\"56\",width:\"410\",height:\"6\",rx:\"3\"}),(0,a.createElement)(\"rect\",{x:\"0\",y:\"72\",width:\"380\",height:\"6\",rx:\"3\"}),(0,a.createElement)(\"rect\",{x:\"0\",y:\"88\",width:\"178\",height:\"6\",rx:\"3\"}),(0,a.createElement)(\"circle\",{cx:\"20\",cy:\"20\",r:\"20\"}))},s=o,c=wp.apiFetch,m=n.n(c),u=wp.hooks,p=wp.element,d=wp.i18n;function f(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"\",a=rankMath.links[e]||\"\";if(!a)return\"#\";if(!t)return a;var r={utm_source:\"Plugin\",utm_medium:encodeURIComponent(t),utm_campaign:\"WP\"};return a+\"?\"+Object.keys(r).map((function(e){return\"\".concat(e,\"=\").concat(r[e])})).join(\"&\")+n}var h=lodash,y=n(4184),v=n.n(y),w=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return(e=-1===e.toString().indexOf(\".\")?e:e.toFixed(t)).toString().replace(\".00\",\"\")},E=function(e){if(\"n\/a\"===e)return e;e=parseFloat(e);var t=0,n=[\"K\",\"M\",\"B\",\"T\",\"Q\"],a=Math.abs(e);if((e=w(a))<1e3)return e;for(;e>=1e3&&++t<n.length;)e\/=1e3;return 0===t?e:w(e)+n[t-1]},b=function(e){var t=e.total,n=void 0===t?\"n\/a\":t,a=e.difference,r=void 0===a?\"n\/a\":a,l=e.revert,o=void 0!==l&&l,i=\"rank-math-item-difference\",s=\"\",c=\"\";if(\"n\/a\"!==n&&\"n\/a\"!==r){n=(0,h.isUndefined)(n)?0:n,s=(0,h.round)(n,2),n=E(n),r=(0,h.isUndefined)(r)?0:r,c=(0,h.round)(r,2),o=!(0,h.isUndefined)(o)&&o;var m=Math.abs(r)!==r;i=v()(i,{up:!o&&!m&&r>0||o&&m,down:!o&&m||o&&!m&&r>0})}return wp.element.createElement(\"div\",{className:\"rank-math-item-numbers\"},wp.element.createElement(\"strong\",{className:\"text-large\",title:s},n),\"n\/a\"!==n&&n!=r&&wp.element.createElement(\"span\",{className:i,title:c},E(r)))};function g(e){return g=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},g(e)}function k(){return k=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},k.apply(this,arguments)}function _(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,(r=a.key,l=void 0,l=function(e,t){if(\"object\"!==g(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||\"default\");if(\"object\"!==g(a))return a;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(r,\"string\"),\"symbol\"===g(l)?l:String(l)),a)}var r,l}function S(e,t){return S=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},S(e,t)}function N(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=O(e);if(t){var r=O(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return function(e,t){if(t&&(\"object\"===g(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(this,n)}}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var x=function(e){!function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&S(e,t)}(l,e);var t,n,a,r=N(l);function l(){var e;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,l),(e=r.apply(this,arguments)).data=e.props.data,e}return t=l,(n=[{key:\"render\",value:function(){return wp.element.createElement(React.Fragment,null,this.getContentAiScore(),this.getSeoScore(),this.getSiteTraffic(),this.getSiteImpression(),this.getAveragePosition(),this.getIndexVerdict(),this.getPageSpeed())}},{key:\"getContentAiScore\",value:function(){return!(0,h.isUndefined)(this.data.contentAiScore)&&wp.element.createElement(\"div\",{className:\"rank-math-item content-ai-score\"},wp.element.createElement(\"h3\",null,(0,d.__)(\"Content AI score\",\"rank-math\"),wp.element.createElement(\"span\",{className:\"rank-math-tooltip\"},wp.element.createElement(\"em\",{className:\"dashicons-before dashicons-editor-help\"}),wp.element.createElement(\"span\",null,(0,d.__)(\"Content AI Score.\",\"rank-math\")))),wp.element.createElement(\"div\",{className:\"score\"},wp.element.createElement(\"strong\",null,this.data.contentAiScore,\" \/ 100\"),wp.element.createElement(\"div\",{className:\"score-wrapper\"},wp.element.createElement(\"span\",{className:\"score-dot\",style:{left:this.data.contentAiScore<13?13:this.data.contentAiScore+\"%\"}}))))}},{key:\"getSeoScore\",value:function(){var e=this.data.seo_score,t=\"rank-math-item seo-score \"+this.getScoreClass(e);return wp.element.createElement(\"div\",{className:t},wp.element.createElement(\"h3\",null,(0,d.__)(\"SEO Score\",\"rank-math\"),wp.element.createElement(\"span\",{className:\"rank-math-tooltip\"},wp.element.createElement(\"em\",{className:\"dashicons-before dashicons-editor-help\"}),wp.element.createElement(\"span\",null,(0,d.__)(\"Rank Math's SEO Score\",\"rank-math\")))),wp.element.createElement(\"div\",{className:\"score\"},wp.element.createElement(\"strong\",null,wp.element.createElement(\"span\",null,e))))}},{key:\"getSiteImpression\",value:function(){if((0,h.isUndefined)(this.data.impressions)&&!rankMath.isAnalyticsConnected)return!1;var e=(0,h.get)(this.data,\"impressions\",0);return wp.element.createElement(\"div\",{className:\"rank-math-item\"},wp.element.createElement(\"h3\",null,(0,d.__)(\"Total Impressions\",\"rank-math\"),wp.element.createElement(\"span\",{className:\"rank-math-tooltip\"},wp.element.createElement(\"em\",{className:\"dashicons-before dashicons-editor-help\"}),wp.element.createElement(\"span\",null,(0,d.__)(\"This is how many times your site showed up in the search results.\",\"rank-math\")))),wp.element.createElement(\"div\",{className:\"score\"},wp.element.createElement(b,e)))}},{key:\"getAveragePosition\",value:function(){return!((0,h.isUndefined)(this.data.position)||!rankMath.isConsoleConnected)&&wp.element.createElement(\"div\",{className:\"rank-math-item\"},wp.element.createElement(\"h3\",null,(0,d.__)(\"Average Position\",\"rank-math\"),wp.element.createElement(\"span\",{className:\"rank-math-tooltip\"},wp.element.createElement(\"em\",{className:\"dashicons-before dashicons-editor-help\"}),wp.element.createElement(\"span\",null,(0,d.__)(\"This is the average position of your site in the search results.\",\"rank-math\")))),wp.element.createElement(\"div\",{className:\"score\"},wp.element.createElement(b,k({},this.data.position,{revert:!0}))))}},{key:\"getSiteTraffic\",value:function(){return(0,u.applyFilters)(\"rank-math-analytics-stats-site-traffic\",\"\")}},{key:\"getIndexVerdict\",value:function(){return(0,u.applyFilters)(\"rank-math-analytics-stats-index-verdict\",wp.element.createElement(\"div\",{className:\"rank-math-item blur index-status\"},wp.element.createElement(\"h3\",null,(0,d.__)(\"Index Status\",\"rank-math\"),wp.element.createElement(\"span\",{className:\"rank-math-tooltip\"},wp.element.createElement(\"em\",{className:\"dashicons-before dashicons-editor-help\"}),wp.element.createElement(\"span\",null,(0,d.__)(\"URL Inspection Status\",\"rank-math\")))),wp.element.createElement(\"div\",{className:\"verdict\"},wp.element.createElement(\"i\",{className:\"indexing_state verdict indexing allowed undefined\"}),wp.element.createElement(\"span\",null,\"undefined\"))),this.data)}},{key:\"getPageSpeed\",value:function(){return(0,u.applyFilters)(\"rank-math-analytics-stats-pagespeed\",wp.element.createElement(React.Fragment,null,wp.element.createElement(\"div\",{id:\"rank-math-analytics-stats-pagespeed\",className:\"rank-math-single-tab rank-math-item blur\"},wp.element.createElement(\"div\",{className:\"rank-math-box rank-math-pagespeed-box\"},wp.element.createElement(\"div\",{className:\"rank-math-pagespeed-header\"},wp.element.createElement(\"h3\",null,(0,d.__)(\"PageSpeed\",\"rank-math\"),wp.element.createElement(\"span\",{className:\"rank-math-tooltip\"},wp.element.createElement(\"em\",{className:\"dashicons-before dashicons-editor-help\"}))),wp.element.createElement(\"span\",null,\"April 2, 2022\")),wp.element.createElement(\"div\",{className:\"grid\"},wp.element.createElement(\"div\",{className:\"col pagespeed-desktop\"},wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-desktop\"}),wp.element.createElement(\"strong\",{className:\"pagespeed interactive-good\"},\"0 s\"),wp.element.createElement(\"small\",{className:\"pagescore score-bad\"},\"0\")),wp.element.createElement(\"div\",{className:\"col pagespeed-mobile\"},wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-mobile\"}),wp.element.createElement(\"strong\",{className:\"pagespeed interactive-good\"},\"0 s\"),wp.element.createElement(\"small\",{className:\"pagescore score-bad\"},\"0\")))))))}},{key:\"getScoreClass\",value:function(e){return e>80?\"great\":e>50&&e<81?\"good\":\"bad\"}}])&&_(t.prototype,n),a&&_(t,a),Object.defineProperty(t,\"prototype\",{writable:!1}),l}(p.Component),R=x,C=wp.htmlEntities,P=wp.components;(0,P.withFilters)(\"rankMath.analytics.keywordAddRemoveButton\")((function(e){var t=e.sequence;return wp.element.createElement(p.Fragment,null,t,wp.element.createElement(P.Button,{className:\"button button-secondary button-small add-keyword\",href:f(\"pro\",\"Add KW Button\"),target:\"_blank\"},wp.element.createElement(\"div\",{className:\"rank-math-tooltip\"},wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-plus\"}),wp.element.createElement(\"span\",null,(0,d.__)(\"Pro Feature\",\"rank-math\")))))})),(0,P.withFilters)(\"rankMath.analytics.keywordTitle\")((function(e){var t=e.query;return wp.element.createElement(\"h4\",null,(0,C.decodeEntities)(t))})),(0,P.withFilters)(\"rankMath.analytics.keywordDelete\")((function(e){var t=e.sequence,n=e.query;return wp.element.createElement(p.Fragment,null,t,wp.element.createElement(P.Button,{className:\"button button-secondary button-small add-keyword delete\",title:(0,d.__)(\"Delete from Keyword Manager\",\"rank-math\"),onClick:function(){return(0,u.doAction)(\"rank_math_remove_keyword\",n)}},wp.element.createElement(\"i\",{className:\"rm-icon rm-icon-trash\"})))})),(0,P.withFilters)(\"rankMath.analytics.IndexingDataFooter\")((function(){return wp.element.createElement(\"div\",{className:\"row-footer\"},wp.element.createElement(\"table\",null,wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",null,wp.element.createElement(\"td\",{colSpan:\"8\"},wp.element.createElement(\"div\",{className:\"last-crawl-data\"},wp.element.createElement(\"div\",null,wp.element.createElement(\"strong\",null,(0,d.__)(\"Google: \",\"rank-math\")),wp.element.createElement(\"span\",{className:\"blurred\"},(0,d.__)(\"Available in the PRO version\",\"rank-math\"))),wp.element.createElement(\"div\",null,wp.element.createElement(\"strong\",null,(0,d.__)(\"Last Crawl: \",\"rank-math\")),wp.element.createElement(\"span\",{className:\"blurred\"},(0,d.__)(\"PRO Feature\",\"rank-math\")))))))))}));function I(e){return I=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},I(e)}function T(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,(r=a.key,l=void 0,l=function(e,t){if(\"object\"!==I(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||\"default\");if(\"object\"!==I(a))return a;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(r,\"string\"),\"symbol\"===I(l)?l:String(l)),a)}var r,l}function j(e,t){return j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},j(e,t)}function A(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=M(e);if(t){var r=M(this).constructor;n=Reflect.construct(a,arguments,r)}else n=a.apply(this,arguments);return function(e,t){if(t&&(\"object\"===I(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}(e)}(this,n)}}function M(e){return M=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},M(e)}var U=function(e){!function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&j(e,t)}(l,e);var t,n,a,r=A(l);function l(){return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,l),r.apply(this,arguments)}return t=l,(n=[{key:\"render\",value:function(){return wp.element.createElement(\"div\",{className:\"inner-elements hidden\"},wp.element.createElement(\"table\",null,wp.element.createElement(\"tbody\",null,wp.element.createElement(\"tr\",null,wp.element.createElement(\"td\",{colSpan:\"8\"},wp.element.createElement(\"div\",{className:\"indexing-data-wrapper\"},this.getStatusResult(),this.getReferringURLs(),this.getMobileData(),this.richResultsData(),wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"center\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-box blue-ticks top-20 width-50\"},wp.element.createElement(\"h3\",null,(0,d.__)(\"PRO Version offers Advanced Indexing Stats\",\"rank-math\")),wp.element.createElement(\"ul\",null,wp.element.createElement(\"li\",null,(0,d.__)(\"Monitor metrics like Index Status, Last Crawl date, etc\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,d.__)(\"All the Indexing statistics about your content in one place\",\"rank-math\")),wp.element.createElement(\"li\",null,(0,d.__)(\"Use data provided by Google instead of 3rd party tools\",\"rank-math\"))),wp.element.createElement(\"a\",{href:f(\"pro\",\"Index Status Tab Toggle\"),target:\"_blank\",rel:\"noreferrer\",className:\"button button-primary is-green\"},(0,d.__)(\"Upgrade\",\"rank-math\"))))))))))}},{key:\"getStatusResult\",value:function(){return wp.element.createElement(\"div\",{className:\"indexing-data status\"},wp.element.createElement(\"h4\",null,\"Index Status Result\"),Array.from([{label:\"Verdict\",value:\"NEUTRAL\"},{label:\"Robots Text State\",value:\"ROBOTS_TXT_STATE_UNSPECIFIED\"},{label:\"Indexing State\",value:\"INDEXING_STATE_UNSPECIFIED\"},{label:\"Last Crawl Time\",value:\"2022-01-09 05:46:12\"},{label:\"Page Fetch State\",value:\"PAGE_FETCH_STATE_UNSPECIFIED\"},{label:\"Google Canonical\",value:\"https:\/\/example.com\/\"},{label:\"User Canonical\",value:\"https:\/\/example.com\/\"},{label:\"Sitemap\",value:\"https:\/\/example.com\/sitemap_index.xml\"}]).map((function(e){return wp.element.createElement(\"div\",{key:e.label},wp.element.createElement(\"span\",{className:\"label\"},e.label),wp.element.createElement(\"span\",{className:\"result\"},e.value))})))}},{key:\"getReferringURLs\",value:function(){return wp.element.createElement(\"div\",{className:\"indexing-data referring-urls\"},wp.element.createElement(\"h4\",null,\"Referring URLs\"),wp.element.createElement(\"ul\",null,[\"https:\/\/example.com\/test1\",\"https:\/\/example.com\/test2\"].map((function(e,t){return wp.element.createElement(\"li\",{key:t},e)}))))}},{key:\"getMobileData\",value:function(){return wp.element.createElement(React.Fragment,null,wp.element.createElement(\"div\",{className:\"indexing-data crawled\"},wp.element.createElement(\"h4\",null,\"Crawled As\"),wp.element.createElement(\"div\",null,\"UNSPECIFIED\")),wp.element.createElement(\"div\",{className:\"indexing-data status\"},wp.element.createElement(\"h4\",null,\"Mobile Usability Result\"),wp.element.createElement(\"div\",null,wp.element.createElement(\"span\",null,\"Verdict\"),wp.element.createElement(\"span\",null,\"Unspecified\"))))}},{key:\"richResultsData\",value:function(){return wp.element.createElement(\"div\",{className:\"indexing-data detected-items\"},wp.element.createElement(\"h4\",null,\"detectedItems\"),wp.element.createElement(\"div\",{className:\"rich-results-wrapper\"},wp.element.createElement(\"div\",{className:\"rich-results-header\"},wp.element.createElement(\"h4\",null,\"Rich Result Types\"),wp.element.createElement(\"h4\",null,\"Items\")),wp.element.createElement(\"div\",{className:\"rich-results-data\"},wp.element.createElement(\"div\",{className:\"inner-wrapper\"},wp.element.createElement(\"h4\",null,\"Breadcrumbs\"),wp.element.createElement(\"div\",{className:\"schema-data\"},wp.element.createElement(\"strong\",null,\"Name\"),wp.element.createElement(\"span\",null,\"Unnamed item\"))),wp.element.createElement(\"div\",{className:\"inner-wrapper\"},wp.element.createElement(\"h4\",null,\"Review snippets\"),wp.element.createElement(\"div\",{className:\"schema-data\"},wp.element.createElement(\"strong\",null,\"Name\"),wp.element.createElement(\"span\",null,\"Issues\"),wp.element.createElement(\"div\",{className:\"sub-issues\"},wp.element.createElement(\"span\",null,\"Unnamed item\"),wp.element.createElement(\"span\",{className:\"schema-issues\"},wp.element.createElement(\"strong\",null,\"Issue Message\"),wp.element.createElement(\"strong\",null,\"Severity\"),wp.element.createElement(\"div\",{className:\"issue-details\"},wp.element.createElement(\"span\",{className:\"error\"},wp.element.createElement(\"span\",null,\"Item does not support reviews\"),wp.element.createElement(\"span\",null,\"ERROR\")),wp.element.createElement(\"span\",{className:\"warning\"},wp.element.createElement(\"span\",null,\"Missing reviewed item name\"),wp.element.createElement(\"span\",null,\"WARNING\"))))))))))}}])&&T(t.prototype,n),a&&T(t,a),Object.defineProperty(t,\"prototype\",{writable:!1}),l}(p.Component);(0,P.withFilters)(\"rankMath.analytics.IndexingDataToggle\")(U);function F(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=n){var a,r,l,o,i=[],s=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(a=l.call(n)).done)&&(i.push(a.value),i.length!==t);s=!0);}catch(e){c=!0,r=e}finally{try{if(!s&&null!=n.return&&(o=n.return(),Object(o)!==o))return}finally{if(c)throw r}}return i}}(e,t)||function(e,t){if(!e)return;if(\"string\"==typeof e)return D(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);\"Object\"===n&&e.constructor&&(n=e.constructor.name);if(\"Map\"===n||\"Set\"===n)return Array.from(e);if(\"Arguments\"===n||\/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$\/.test(n))return D(e,t)}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function D(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=new Array(t);n<t;n++)a[n]=e[n];return a}function B(e){return B=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},B(e)}function L(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(e,(r=a.key,l=void 0,l=function(e,t){if(\"object\"!==B(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||\"default\");if(\"object\"!==B(a))return a;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(r,\"string\"),\"symbol\"===B(l)?l:String(l)),a)}var r,l}window.rankMath=window.rankMath||{},window.rankMath.analyticsHelpers=window.rankMath.analyticsHelpers||{},window.rankMath.analyticsHelpers={translateText:function(e,t){if(\"page_fetch_state\"!==t)return e;var n={PAGE_FETCH_STATE_UNSPECIFIED:(0,d.__)(\"Unknown fetch state\",\"rank-math\"),SUCCESSFUL:(0,d.__)(\"Successful fetch\",\"rank-math\"),SOFT_404:(0,d.__)(\"Soft 404\",\"rank-math\"),BLOCKED_ROBOTS_TXT:(0,d.__)(\"Blocked by robots.txt\",\"rank-math\"),NOT_FOUND:(0,d.__)(\"Not found (404)\",\"rank-math\"),ACCESS_DENIED:(0,d.__)(\"Blocked due to unauthorized request (401)\",\"rank-math\"),SERVER_ERROR:(0,d.__)(\"Server error (5xx)\",\"rank-math\"),REDIRECT_ERROR:(0,d.__)(\"Redirection error\",\"rank-math\"),ACCESS_FORBIDDEN:(0,d.__)(\"Blocked due to access forbidden (403)\",\"rank-math\"),BLOCKED_4XX:(0,d.__)(\"Blocked due to other 4xx issue (not 403, 404)\",\"rank-math\"),INTERNAL_CRAWL_ERROR:(0,d.__)(\"Internal error\",\"rank-math\"),INVALID_URL:(0,d.__)(\"Invalid URL\",\"rank-math\")};return(0,h.has)(n,e)?n[e]:e},convertValue:function(e){return e?e.includes(\"UNSPECIFIED\")?(0,d.__)(\"Unspecified\",\"rank-math\"):\"NEUTRAL\"===e?(0,d.__)(\"Excluded\",\"rank-math\"):e:(0,d.__)(\"Not available\",\"rank-math\")},noDataMessage:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\";return t=t||(0,d.sprintf)((0,d.__)(\"No data to display. Check back later or try to update data manually from %s\",\"rank-math\"),'<a href=\"'+rankMath.adminurl+'?page=rank-math-options-general#setting-panel-analytics\"><strong>'+(0,d.__)(\"Rank Math > General Settings > Analytics > Click 'Update data manually' button.\",\"rank-math\")+\"<\/strong><\/a>\"),wp.element.createElement(\"div\",{id:\"rank-math-pro-cta\",className:\"rank-math-analytics-notice\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-table woocommerce-table rank-math-table\"},wp.element.createElement(\"div\",{className:\"rank-math-cta-header\"},wp.element.createElement(\"h2\",null,e)),wp.element.createElement(\"div\",{className:\"rank-math-cta-body\",dangerouslySetInnerHTML:{__html:t}})))},elementObserver:function(e,t){var n=F(t,2),a=n[0],r=n[1];return(0,p.useEffect)((function(){var t=e.current;if(t){new IntersectionObserver((function(e){F(e,1)[0].isIntersecting&&!1===a&&r(!0)})).observe(t)}}),[a]),a}};var G=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,e),this.init(),this.addContentLoader(),this.events()}var n,a,r;return n=e,(a=[{key:\"init\",value:function(){t()(\"body\").prepend(this.analyticsWrapper()),m()({method:\"GET\",path:\"rankmath\/v1\/an\/post\/\"+rankMath.objectID}).then((function(e){e.errorMessage?t()(\"#rank-math-analytics-stats-wrapper\").remove():((0,p.createRoot)(document.getElementById(\"rank-math-analytics-stats\")).render((0,p.createElement)((function(){return wp.element.createElement(\"div\",{className:\"rank-math-analytics-wrapper\"},wp.element.createElement(R,{data:e}))}))),(0,u.doAction)(\"rank-math-analytics-stats\",e))})).catch((function(){t()(\"#rank-math-analytics-stats-wrapper\").remove()}))}},{key:\"analyticsWrapper\",value:function(){var e=rankMath.hideFrontendStats?\"hide-stats\":\"\";return'<div id=\"rank-math-analytics-stats-wrapper\" class=\"'.concat(e,'\">\\n\\t\\t\\t\\t<div class=\"top-icons\">\\t\\n\\t\\t\\t\\t\\t<a href=\"').concat(f(\"analytics-stats-bar\",\"Analytics Stats Bar KB\"),'\" target=\"_blank\" class=\"rank-math-stats-bar-help\">\\n\\t\\t\\t\\t\\t\\t<em class=\"dashicons-before dashicons-editor-help\" title=\"').concat((0,d.__)(\"Learn More\",\"rank-math\"),'\"><\/em>\\n\\t\\t\\t\\t\\t<\/a>\\n\\t\\t\\t\\t\\t<a href=\"#\" class=\"rank-math-analytics-disable-stats\" title=\"').concat((0,d.__)(\"Close Permanently\",\"rank-math\"),'\">\\n\\t\\t\\t\\t\\t\\t<span class=\"dashicons dashicons-no-alt\"><\/span>\\n\\t\\t\\t\\t\\t<\/a>\\n\\t\\t\\t\\t<\/div>\\n\\t\\t\\t\\t<a href=\"#\" class=\"rank-math-analytics-close-stats\">\\n\\t\\t\\t\\t\\t<span class=\"dashicons dashicons-arrow-up-alt2\" title=\"').concat((0,d.__)(\"Hide Analytics Stats\",\"rank-math\"),'\"><\/span>\\n\\t\\t\\t\\t\\t<svg viewBox=\"0 0 462.03 462.03\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\"><title>').concat((0,d.__)(\"Show Analytics Stats\",\"rank-math\"),'<\/title><g><path d=\"m462 234.84-76.17 3.43 13.43 21-127 81.18-126-52.93-146.26 60.97 10.14 24.34 136.1-56.71 128.57 54 138.69-88.61 13.43 21z\"><\/path><path d=\"m54.1 312.78 92.18-38.41 4.49 1.89v-54.58h-96.67zm210.9-223.57v235.05l7.26 3 89.43-57.05v-181zm-105.44 190.79 96.67 40.62v-165.19h-96.67z\"><\/path><\/g><\/svg>\\n\\t\\t\\t\\t<\/a>\\n\\n\\t\\t\\t\\t<div id=\"rank-math-analytics-stats-content\">\\n\\t\\t\\t\\t\\t<div id=\"rank-math-analytics-stats\" class=\"rank-math-analytics\"><\/div>\\n\\t\\t\\t\\t\\t').concat(this.proContent(),\"\\n\\t\\t\\t\\t<\/div>\\n\\t\\t\\t<\/div>\")}},{key:\"addContentLoader\",value:function(){for(var e=[],t=0;t<4;t++)e.push(wp.element.createElement(s,{animate:!0,backgroundColor:\"#f0f2f4\",foregroundColor:\"#f0f2f4\",style:{width:\"23%\",height:\"83px\",padding:\"1rem\"}},wp.element.createElement(\"rect\",{x:\"0\",y:\"0\",rx:\"0\",ry:\"0\",width:\"100%\",height:\"100%\"})));(0,p.createRoot)(document.getElementById(\"rank-math-analytics-stats\")).render((0,p.createElement)((function(){return wp.element.createElement(\"div\",{className:\"rank-math-analytics-wrapper\"},e)})))}},{key:\"proContent\",value:function(){return(0,u.applyFilters)(\"rank_math_is_pro\",!1)?\"\":'<div class=\"rank-math-analytics-stats-footer\">\\n\\t\\t\\t<p>\\n\\t\\t\\t'.concat((0,d.sprintf)((0,d.__)(\"Advanced Stats are available in the PRO version, %1$s.\",\"rank-math\"),'<a href=\"'+f(\"analytics-stats-bar\",\"Analytics Stats Bar\")+'\" target=\"_blank\" rel=\"noreferrer\" class=\"button button-primary\">'+(0,d.__)(\"learn More\",\"rank-math\")+\"<\/a>\"),'\\n\\t\\t\\t<\/p>\\n\\t\\t\\t<a href=\"').concat(f(\"analytics-stats-bar\",\"Analytics Stats Bar\"),'\" target=\"_blank\" rel=\"noreferrer\" class=\"button button-primary\">\\n\\t\\t\\t\\t').concat((0,d.__)(\"Upgrade to PRO\",\"rank-math\"),\"\\n\\t\\t\\t<\/a>\\n\\t\\t\\t<\/div>\\n\\t\\t\")}},{key:\"events\",value:function(){var e=t()(\"#rank-math-analytics-stats-wrapper\");t()(\".rank-math-analytics-close-stats\").on(\"click\",(function(t){return t.preventDefault(),e.toggleClass(\"hide-stats\"),m()({method:\"POST\",path:\"rankmath\/v1\/an\/removeFrontendStats\/\",data:{toggleBar:!0,hide:e.hasClass(\"hide-stats\")}}),!1})),t()(\".rank-math-analytics-disable-stats\").on(\"click\",(function(t){return t.preventDefault(),confirm((0,d.__)(\"Are you sure you want to do this? This action will close the Stats bar permanently. Instead, you can use the toggle icon to minimize it.\",\"rank-math\"))&&(e.remove(),m()({method:\"POST\",path:\"rankmath\/v1\/an\/removeFrontendStats\/\"})),!1}))}}])&&L(n.prototype,a),r&&L(n,r),Object.defineProperty(n,\"prototype\",{writable:!1}),e}();t()((function(){new G}))}()}();"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/assets\/css\/admin-bar.css","ext":"css","size":19975,"mtime":1757324689,"type":"text","content":":root{--rankmath-wp-adminbar-height: 0}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@font-face{font-family:\"Rank-Math\";font-weight:normal;font-style:normal;font-display:block;src:url(\"..\/fonts\/Rank-Math.ttf?v1.0.94\") format(\"truetype\"),url(\"..\/fonts\/Rank-Math.woff?v1.0.94\") format(\"woff\"),url(\"..\/fonts\/Rank-Math.svg?v1.0.94#Rank-Math\") format(\"svg\")}[class^=rm-icon-],[class*=\" rm-icon-\"]{font-family:\"Rank-Math\" !important;font-weight:normal;font-style:normal;font-variant:normal;line-height:1;text-transform:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;speak:none}.rm-icon-content-ai:before{content:\"\ue909\"}.rm-icon-bot:before{content:\"\uea20\"}.rm-icon-enter-key:before{content:\"\ue908\"}.rm-icon-send:before{content:\"\ue907\"}.rm-icon-seo-description:before{content:\"\uea35\"}.rm-icon-search-console:before{content:\"\ued71\"}.rm-icon-adsense:before{content:\"\ueb99\"}.rm-icon-role-manager:before{content:\"\uea3a\"}.rm-icon-software:before{content:\"\uea9a\"}.rm-icon-calendar:before{content:\"\uea43\"}.rm-icon-cart:before{content:\"\ued73\"}.rm-icon-post-format:before{content:\"\uec64\"}.rm-icon-fact-check:before{content:\"\uebf7\"}.rm-icon-tick:before{content:\"\ueb9d\"}.rm-icon-recipe:before{content:\"\uec3b\"}.rm-icon-circle-plus:before{content:\"\ueb9f\"}.rm-icon-service:before{content:\"\uec66\"}.rm-icon-cross:before{content:\"\uebea\"}.rm-icon-code:before{content:\"\uec67\"}.rm-icon-settings:before{content:\"\uea60\"}.rm-icon-comments-reply:before{content:\"\uec7f\"}.rm-icon-comments:before{content:\"\ued35\"}.rm-icon-dataset:before{content:\"\uecf8\"}.rm-icon-schema:before{content:\"\ueb97\"}.rm-icon-direction:before{content:\"\uecc9\"}.rm-icon-desktop:before{content:\"\uea67\"}.rm-icon-mail:before{content:\"\ued8e\"}.rm-icon-import:before{content:\"\uea5a\"}.rm-icon-export:before{content:\"\uea5d\"}.rm-icon-eye:before{content:\"\ueba4\"}.rm-icon-facebook:before{content:\"\ueda5\"}.rm-icon-htaccess:before{content:\"\uea6f\"}.rm-icon-robots:before{content:\"\uea70\"}.rm-icon-movie:before{content:\"\uedc1\"}.rm-icon-category:before{content:\"\uea76\"}.rm-icon-images:before{content:\"\ueb6a\"}.rm-icon-google:before{content:\"\ue905\"}.rm-icon-course:before{content:\"\uec70\"}.rm-icon-heart-filled:before{content:\"\uebac\"}.rm-icon-home:before{content:\"\ued0d\"}.rm-icon-image:before{content:\"\ueaa0\"}.rm-icon-info:before{content:\"\uebb4\"}.rm-icon-instagram:before{content:\"\ueefa\"}.rm-icon-stories:before{content:\"\uece7\"}.rm-icon-acf:before{content:\"\ueceb\"}.rm-icon-book:before{content:\"\uec73\"}.rm-icon-light-bulb:before{content:\"\uef60\"}.rm-icon-howto:before{content:\"\uebbc\"}.rm-icon-faq:before{content:\"\uebbd\"}.rm-icon-local-seo:before{content:\"\uea87\"}.rm-icon-job:before{content:\"\ued3a\"}.rm-icon-misc:before{content:\"\uea8f\"}.rm-icon-mail-reply:before{content:\"\uefde\"}.rm-icon-podcast:before{content:\"\uefee\"}.rm-icon-copy:before{content:\"\ue906\"}.rm-icon-mobile:before{content:\"\uea2e\"}.rm-icon-social:before{content:\"\uec76\"}.rm-icon-music:before{content:\"\uebc8\"}.rm-icon-sitemap:before{content:\"\uea4f\"}.rm-icon-post:before{content:\"\ued4d\"}.rm-icon-attachment:before{content:\"\ued83\"}.rm-icon-edit:before{content:\"\uec78\"}.rm-icon-pencil:before{content:\"\uf0a8\"}.rm-icon-plus:before{content:\"\uebce\"}.rm-icon-help:before{content:\"\uebd2\"}.rm-icon-restaurant:before{content:\"\uec56\"}.rm-icon-analyzer:before{content:\"\ueaa9\"}.rm-icon-search:before{content:\"\ueaab\"}.rm-icon-star-filled:before{content:\"\ueab3\"}.rm-icon-star:before{content:\"\ueab5\"}.rm-icon-support:before{content:\"\ued64\"}.rm-icon-tag:before{content:\"\ued91\"}.rm-icon-target:before{content:\"\ued95\"}.rm-icon-text-align-left:before{content:\"\uf335\"}.rm-icon-text:before{content:\"\uf338\"}.rm-icon-heading:before{content:\"\uf33b\"}.rm-icon-thumbs-up:before{content:\"\uf345\"}.rm-icon-instant-indexing:before{content:\"\uebe1\"}.rm-icon-toolbox:before{content:\"\ued1f\"}.rm-icon-trash:before{content:\"\ueaba\"}.rm-icon-redirection:before{content:\"\ueb70\"}.rm-icon-twitter:before{content:\"\uf3c1\"}.rm-icon-link:before{content:\"\uea83\"}.rm-icon-seo-title:before{content:\"\uf3d0\"}.rm-icon-user:before{content:\"\uf3d8\"}.rm-icon-users:before{content:\"\ueac4\"}.rm-icon-video:before{content:\"\ueb73\"}.rm-icon-404:before{content:\"\uebe8\"}.rm-icon-seo:before{content:\"\uf43b\"}.rm-icon-page:before{content:\"\uec86\"}.rm-icon-youtube:before{content:\"\uf485\"}.rm-icon-rank-math:before{content:\"\ue904\"}.rm-icon-bank-3:before{content:\"\ue900\"}.rm-icon-map-marker-11:before{content:\"\ue901\"}.rm-icon-wallet-1-dollar:before{content:\"\ue902\"}.rm-icon-info-circle:before{content:\"\ue903\"}.rm-icon-bulb-1:before{content:\"\ue90a\"}.rank-math-tooltip{position:relative;cursor:pointer;color:#b5bfc9;display:inline-block;line-height:20px;height:20px;z-index:1}.rank-math-tooltip em{line-height:20px}.rank-math-tooltip>span{font-size:11px;font-weight:400;line-height:1.5;white-space:normal;width:200px;padding:8px 10px;-webkit-transition:all .3s ease-in-out;transition:all .3s ease-in-out;-webkit-transform:translate3d(-50%, 0, 0);transform:translate3d(-50%, 0, 0);text-align:center;pointer-events:none;opacity:0;color:#fff;border-radius:3px;background:#555d66;position:absolute;bottom:100%;left:50%}.rank-math-tooltip>span:after{content:\"\";-webkit-transform:translate3d(-50%, 0, 0);transform:translate3d(-50%, 0, 0);position:absolute;top:100%;left:50%;border-style:solid;height:0;width:0;border-color:#555d66 rgba(0,0,0,0) rgba(0,0,0,0);border-width:8px 7px 0}.rank-math-tooltip.bottom span{top:130%;bottom:auto;display:table}.rank-math-tooltip.bottom span:after{position:absolute;top:auto;bottom:100%;left:50%;-webkit-transform:rotate(180deg) translate3d(50%, 0, 0);transform:rotate(180deg) translate3d(50%, 0, 0)}.rank-math-tooltip.left span{right:0%;-webkit-transform:translate3d(-90%, 0, 0);transform:translate3d(-90%, 0, 0)}.rank-math-tooltip.left span:after{left:90%}.rank-math-tooltip:hover{color:#069de3}.rank-math-tooltip:hover span{bottom:130%;opacity:1;z-index:1}@font-face{font-family:\"Rank-Math\";font-weight:normal;font-style:normal;font-display:block;src:url(\"..\/..\/..\/..\/..\/assets\/admin\/fonts\/Rank-Math.ttf?v1.0.76\") format(\"truetype\"),url(\"..\/..\/..\/..\/..\/assets\/admin\/fonts\/Rank-Math.woff?v1.0.76\") format(\"woff\"),url(\"..\/..\/..\/..\/..\/assets\/admin\/fonts\/Rank-Math.svg?v1.0.76#Rank-Math\") format(\"svg\")}#rank-math-analytics-stats-wrapper{line-height:1.3;position:relative;z-index:99999;color:#242628;-webkit-box-shadow:0 0 8px rgba(0,0,0,.1);box-shadow:0 0 8px rgba(0,0,0,.1);-webkit-font-smoothing:auto}#rank-math-analytics-stats-wrapper *{letter-spacing:initial}#rank-math-analytics-stats-wrapper a.rank-math-analytics-close-stats{position:absolute;z-index:1;top:auto;right:20px;bottom:0;display:inline-block;-webkit-box-sizing:border-box;box-sizing:border-box;width:34px;height:34px;padding:4px;text-align:center;text-decoration:none;border-radius:4px 4px 0 0;background:rgba(218,223,228,.7)}#rank-math-analytics-stats-wrapper a.rank-math-analytics-close-stats .dashicons{line-height:28px;color:#7f868d}#rank-math-analytics-stats-wrapper a.rank-math-analytics-close-stats:hover .dashicons{color:#242628}#rank-math-analytics-stats-wrapper a.rank-math-analytics-close-stats svg{display:none;fill:#6666c3}#rank-math-analytics-stats-wrapper .top-icons{position:absolute;z-index:1;top:5px;right:20px}#rank-math-analytics-stats-wrapper .top-icons a{line-height:20px;display:inline-block;width:20px;text-decoration:none;opacity:.5;color:#7f868d}#rank-math-analytics-stats-wrapper .top-icons a:hover{opacity:1;color:#069de3}#rank-math-analytics-stats-wrapper .top-icons a.rank-math-analytics-disable-stats{opacity:.7}#rank-math-analytics-stats-wrapper .top-icons a.rank-math-analytics-disable-stats:hover{color:#ed5e5e}#rank-math-analytics-stats-wrapper .top-icons a.rank-math-analytics-disable-stats span{vertical-align:-5px}#rank-math-analytics-stats-wrapper.hide-stats a.rank-math-analytics-close-stats{top:20px;border-radius:4px;background:#fff;-webkit-box-shadow:0 0 3px rgba(68,68,68,.5);box-shadow:0 0 3px rgba(68,68,68,.5)}#rank-math-analytics-stats-wrapper.hide-stats a.rank-math-analytics-close-stats .dashicons-arrow-up-alt2{display:none}#rank-math-analytics-stats-wrapper.hide-stats a.rank-math-analytics-close-stats svg{display:block}#rank-math-analytics-stats-wrapper.hide-stats .top-icons,#rank-math-analytics-stats-wrapper.hide-stats .rank-math-stats-bar-help,#rank-math-analytics-stats-wrapper.hide-stats .rank-math-analytics-disable-stats,#rank-math-analytics-stats-wrapper.hide-stats #rank-math-analytics-stats-content{display:none}#rank-math-analytics-stats{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Open Sans\",\"Helvetica Neue\",sans-serif;display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;background-color:#fff;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}#rank-math-analytics-stats .rank-math-analytics-wrapper{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;max-width:96%;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}#rank-math-analytics-stats .rank-math-analytics-wrapper .rank-math-tooltip{text-transform:none}#rank-math-analytics-stats .rank-math-analytics-wrapper .rank-math-tooltip span{top:108% !important;bottom:auto !important}#rank-math-analytics-stats .rank-math-analytics-wrapper .rank-math-tooltip>span:after{top:-5px;left:46%;-webkit-transform:rotate(180deg);transform:rotate(180deg)}#rank-math-analytics-stats .rank-math-item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:1rem 1.5rem;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}#rank-math-analytics-stats .rank-math-item .text-large{font-size:1.5rem;font-weight:700;margin-right:5px;color:#242628}#rank-math-analytics-stats .rank-math-item .rank-math-item-difference{color:#7f868d;font-size:1rem}#rank-math-analytics-stats .rank-math-item .up,#rank-math-analytics-stats .rank-math-item .down{font-weight:500}#rank-math-analytics-stats .rank-math-item .up:before,#rank-math-analytics-stats .rank-math-item .down:before{font-family:\"dashicons\";font-size:18px;font-weight:900;margin-right:2px;vertical-align:-3px}#rank-math-analytics-stats .rank-math-item .up{color:#10ac84}#rank-math-analytics-stats .rank-math-item .up:before{content:\"\uf142\"}#rank-math-analytics-stats .rank-math-item .down{color:#ed5e5e}#rank-math-analytics-stats .rank-math-item .down:before{content:\"\uf140\"}#rank-math-analytics-stats .rank-math-item.blur{-webkit-filter:blur(2px);filter:blur(2px)}#rank-math-analytics-stats .rank-math-item.content-ai-score strong{font-size:1rem}#rank-math-analytics-stats .rank-math-item.seo-score{margin-right:0}#rank-math-analytics-stats .rank-math-item.seo-score .score{display:block}#rank-math-analytics-stats .rank-math-item.seo-score .score span{position:relative;z-index:0}#rank-math-analytics-stats .rank-math-item.seo-score .score strong{font-size:14px;line-height:22px;position:relative;display:inline-block;min-width:52px;height:22px;text-align:center;color:#ef877f;border:1px solid #ef877f;border-radius:5px}#rank-math-analytics-stats .rank-math-item.seo-score .score strong:before{position:absolute;top:0;bottom:0;left:0;width:20px;content:\"\";border-radius:5px;background:#fce9e8}#rank-math-analytics-stats .rank-math-item.seo-score.good strong{color:#ff9f13;border-color:#ff9f13}#rank-math-analytics-stats .rank-math-item.seo-score.good strong:before{background:#ffeccf}#rank-math-analytics-stats .rank-math-item.seo-score.great strong{color:#67c267;border-color:#67c267}#rank-math-analytics-stats .rank-math-item.seo-score.great strong:before{background:#dff2df}#rank-math-analytics-stats .rank-math-item h3{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Open Sans\",\"Helvetica Neue\",sans-serif;font-size:13px;font-weight:500;line-height:1;margin:0;text-transform:uppercase}#rank-math-analytics-stats .rank-math-item .score{line-height:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}#rank-math-analytics-stats .rank-math-item .score strong{margin-right:10px;-ms-flex-preferred-size:100%;flex-basis:100%}#rank-math-analytics-stats .rank-math-item .score .score-wrapper{position:relative;overflow:hidden;width:100%;min-width:130px;height:10px;border-radius:10px;background:-webkit-gradient(linear, left top, right top, from(#e93f30), color-stop(50%, #ffbe5f), to(#58bb58));background:linear-gradient(90deg, #e93f30 0%, #ffbe5f 50%, #58bb58 100%)}#rank-math-analytics-stats .rank-math-item .score .score-wrapper .score-dot{position:absolute;top:-2px;left:0;-webkit-box-sizing:border-box;box-sizing:border-box;width:14px;height:14px;margin-left:-14px;-webkit-transition:1s left linear;transition:1s left linear;border:2px solid #fff;border-radius:50%;background:rgba(0,0,0,0)}#rank-math-analytics-stats .rank-math-item .score .score-wrapper .score-dot:before{position:absolute;-webkit-box-sizing:border-box;box-sizing:border-box;width:10px;height:10px;content:\"\";border:1px solid rgba(0,0,0,.1);border-radius:10px}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-box{padding:0}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-box .col{line-height:1;margin:0;-webkit-box-flex:0;-ms-flex:0 0 auto;flex:0 0 auto}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-box .col .rm-icon{font-size:13px}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-box .col.pagespeed-desktop{margin-right:10px}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-header{margin-bottom:10px}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-header h3{display:inline-block;margin-right:2.5rem}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-header>span{font-size:12px;font-weight:normal;line-height:1;vertical-align:4px;opacity:.6}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-header button{line-height:.5;width:15px;height:15px;margin:0 0 0 5px;vertical-align:2px;background-color:rgba(0,0,0,0);-webkit-text-stroke:0}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-header button span{font-size:14px;width:inherit;height:inherit;vertical-align:0}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-header .rank-math-tooltip{height:15px}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .rank-math-pagespeed-header .rank-math-tooltip em{vertical-align:0}#rank-math-analytics-stats .rank-math-item#rank-math-analytics-stats-pagespeed .grid{display:-webkit-box;display:-ms-flexbox;display:flex;margin-top:.2rem;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}#rank-math-analytics-stats .rank-math-item.index-status .verdict span{font-size:1rem;font-weight:500;vertical-align:top;text-transform:capitalize}#rank-math-analytics-stats .rank-math-item.index-status .verdict i{font-style:normal;position:relative;margin-right:5px;text-align:center}#rank-math-analytics-stats .rank-math-item.index-status .verdict i:before{font-family:\"Dashicons\";font-size:16px;line-height:20px;display:inline-block;width:20px;content:\"\uf460\";-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;color:#fff;border-radius:50%;background-color:#ff9f43}#rank-math-analytics-stats .rank-math-item.index-status .verdict i:hover:before{-webkit-box-shadow:0 0 0 4px rgba(255,159,67,.25);box-shadow:0 0 0 4px rgba(255,159,67,.25)}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.neutral:before{background:#b5bfc9}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.neutral:hover:before{-webkit-box-shadow:0 0 0 4px rgba(181,191,201,.25);box-shadow:0 0 0 4px rgba(181,191,201,.25)}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.unspecified:before{font-family:Arial,Helvetica,sans-serif;font-size:14px;font-weight:500;content:\"?\";background:#7f868d}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.unspecified:hover:before{-webkit-box-shadow:0 0 0 4px rgba(127,134,141,.25);box-shadow:0 0 0 4px rgba(127,134,141,.25)}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.pass:before{content:\"\uf15e\";background:#10ac84}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.pass:hover:before{-webkit-box-shadow:0 0 0 4px rgba(16,172,132,.25);box-shadow:0 0 0 4px rgba(16,172,132,.25)}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.fail:before{content:\"\uf335\";background:#ed5e5e}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.fail:hover:before{-webkit-box-shadow:0 0 0 4px rgba(237,94,94,.25);box-shadow:0 0 0 4px rgba(237,94,94,.25)}#rank-math-analytics-stats .rank-math-item.index-status .verdict i.partial:before{content:\"\uf15e\"}#rank-math-analytics-stats .rank-math-pagespeed-box .rank-math-pagespeed-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}#rank-math-analytics-stats .rank-math-pagespeed-box .rank-math-pagespeed-header span{margin-left:auto}#rank-math-analytics-stats .rank-math-pagespeed-box .col{margin-top:.825rem;-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%}#rank-math-analytics-stats .rank-math-pagespeed-box .col .rm-icon{font-size:1.25rem;margin-right:8px;vertical-align:middle}#rank-math-analytics-stats .rank-math-pagespeed-box .col strong{font-size:1rem;font-weight:500;margin-right:10px;vertical-align:middle}#rank-math-analytics-stats .rank-math-pagespeed-box .col strong.interactive-good{color:#52a652}#rank-math-analytics-stats .rank-math-pagespeed-box .col small{font-size:14px;font-weight:500;line-height:24px;display:inline-block;width:42px;text-align:center;border-radius:5px}#rank-math-analytics-stats .rank-math-pagespeed-box .col small.score-bad{color:#f0776f;background:#fdedec}.rank-math-analytics-stats-footer{font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen,Ubuntu,Cantarell,\"Open Sans\",\"Helvetica Neue\",sans-serif;font-size:1rem;padding:.75rem 1.5rem;text-align:center;border-top:1px solid rgba(218,223,228,.7);background-color:#fff}.rank-math-analytics-stats-footer>a{font-size:12px;font-weight:600;margin-left:3px;padding:4px 15px;text-decoration:none;text-transform:uppercase;color:#fff;border-radius:4px;background-color:#4e8cde}.rank-math-analytics-stats-footer>a:hover{color:#fff}.rank-math-analytics-stats-footer p{font-size:14px;line-height:1;display:inline-block;margin:0}.rank-math-analytics-stats-footer p a.button{font-size:inherit;line-height:1;display:inline-block;padding:0;color:#4e8cde;background-color:rgba(0,0,0,0)}body.et_fixed_nav #rank-math-analytics-stats-wrapper{z-index:999999}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/assets\/css\/stats.css","ext":"css","size":71125,"mtime":1757324689,"type":"text","content":"\/*!\n * Plugin:\tRank Math\n * URL:\t\thttps:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/\n * Name:\tstats.css\n *\/:root{--rankmath-wp-adminbar-height: 0}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}#rank-math-pro-cta .rank-math-cta-body,#rank-math-pro-cta .rank-math-cta-header,.rank-math-analytics .rank-math-keywords-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-keywords-overview .rank-math-list__item-text,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-score-overview .rank-math-list__item-text,.rank-math-analytics .grid,.woocommerce-table__summary,.woocommerce-pagination>div,.woocommerce-pagination,.woocommerce-table table .link-listing,.woocommerce-table .components-text .add-keyword-button,.woocommerce-table .components-card__header-item,.woocommerce-table .components-card__header,.rank-math-box-grid,.rank-math-analyzer-header{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}html{font-size:14px}.rank-math-wrap.analytics{font-size:1rem}#rank-math-analytics h2,#rank-math-analytics h3,#rank-math-analytics h4{color:#5a5d70}.rank-math-analytics input,.rank-math-analytics textarea,.rank-math-analytics select{-webkit-transition:.25s all ease-in-out;transition:.25s all ease-in-out;border-color:#b5bfc9}.rank-math-analytics input:hover,.rank-math-analytics input:focus,.rank-math-analytics input:active,.rank-math-analytics textarea:hover,.rank-math-analytics textarea:focus,.rank-math-analytics textarea:active,.rank-math-analytics select:hover,.rank-math-analytics select:focus,.rank-math-analytics select:active{border-color:#069de3;background-color:#fff;-webkit-box-shadow:0 0 0 1px #069de3;box-shadow:0 0 0 1px #069de3}.rank-math-analytics .text-large{font-size:1.5rem;font-weight:700;margin-right:5px;color:#242628}.rank-math-analytics .rank-math-item-difference{color:#7f868d;font-size:1rem}.rank-math-analytics .up,.rank-math-analytics .down{font-weight:500}.rank-math-analytics .up:before,.rank-math-analytics .down:before{font-family:\"dashicons\";font-size:18px;font-weight:900;margin-right:2px;vertical-align:-3px}.rank-math-analytics .up{color:#10ac84}.rank-math-analytics .up:before{content:\"\uf142\"}.rank-math-analytics .down{color:#ed5e5e}.rank-math-analytics .down:before{content:\"\uf140\"}.rank-math-analytics .rank-math-tooltip{color:#b5bfc9}.rank-math-analytics .rank-math-tooltip:hover{color:#069de3}.rank-math-analytics button:not(disabled){cursor:pointer}.rank-math-analytics button.is-link,.rank-math-analytics button.woocommerce-ellipsis-menu__toggle{font-size:.825rem;font-weight:500;line-height:1;float:right;min-height:auto;padding:0;text-transform:uppercase;color:#4e8cde;border:0;border-bottom:1px dotted #fff;background:rgba(0,0,0,0)}.rank-math-analytics button.is-link:hover,.rank-math-analytics button.is-link:focus,.rank-math-analytics button.is-link:active,.rank-math-analytics button.woocommerce-ellipsis-menu__toggle:hover,.rank-math-analytics button.woocommerce-ellipsis-menu__toggle:focus,.rank-math-analytics button.woocommerce-ellipsis-menu__toggle:active{color:#069de3;border-bottom-color:#069de3;background:rgba(0,0,0,0)}.rank-math-analytics .rank-math-analytics-notice .rank-math-cta-body{-webkit-box-pack:start !important;-ms-flex-pack:start !important;justify-content:flex-start !important}.rank-math-analytics .rank-math-analytics-notice .rank-math-cta-body a{margin-left:5px;margin-right:5px}.rank-math-analyzer-header{margin-bottom:1rem;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-analyzer-header h3.tab-title{font-weight:500;margin:0 1rem 1rem 0;-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%}@media screen and (min-width: 48rem){.rank-math-analyzer-header h3.tab-title{-webkit-box-flex:1;-ms-flex:1;flex:1}}.rank-math-analyzer-header .rank-math-suggestions-wrapper{position:relative}@media screen and (min-width: 48rem){.rank-math-analyzer-header .rank-math-suggestions-wrapper{margin-left:auto}}.rank-math-analyzer-header .rank-math-suggestions{position:absolute;z-index:10;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;padding:10px;border:1px solid #b5bfc9;border-radius:4px;background:#fff}.rank-math-analyzer-header .rank-math-suggestions li{padding:5px 0;cursor:pointer}.rank-math-analyzer-header .rank-math-suggestions li:hover .title{color:#069de3}.rank-math-analyzer-header .rank-math-suggestions li .title{-webkit-transition:.25s all ease-in-out;transition:.25s all ease-in-out;color:#5a5d70}.rank-math-analyzer-header .rank-math-suggestions li .url{font-size:12px;margin-top:3px;opacity:.7}.rank-math-analyzer-header .analytics-search{width:250px}.rank-math-analyzer-header .analytics-search:after{font-family:\"Rank-Math\";font-size:13px;content:\"\ueaab\";color:#98a6b3;position:absolute;top:9px;right:10px}.rank-math-analyzer-header .analytics-search input{width:100%;height:34px;background:#fdfdfd}.rank-math-analyzer-header .analytics-search input::-webkit-input-placeholder{color:#98a6b3}.rank-math-analyzer-header .analytics-search input::-moz-placeholder{color:#98a6b3}.rank-math-analyzer-header .analytics-search input:-ms-input-placeholder{color:#98a6b3}.rank-math-analyzer-header .analytics-search input::-ms-input-placeholder{color:#98a6b3}.rank-math-analyzer-header .analytics-search input::placeholder{color:#98a6b3}.rank-math-analyzer-header .analytics-dropdown{width:auto;margin-left:.5rem;gap:initial}.rank-math-analyzer-header .analytics-dropdown label{display:none !important}@media screen and (min-width: 48rem){.rank-math-analyzer-header .analytics-dropdown{margin-left:1.5rem}.rank-math-analyzer-header .analytics-dropdown label{display:inline;margin-right:5px}}.rank-math-analyzer-header .analytics-dropdown select.components-select-control__input{height:34px;color:#7f868d;background-color:#fdfdfd;border:1px solid #b5bfc9}.rank-math-analyzer-header .analytics-dropdown select.components-select-control__input+span+.components-input-control__backdrop{display:none}.rank-math-box-grid{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-box-grid>*{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%}@media screen and (min-width: 48rem){.rank-math-box-grid>*{-webkit-box-flex:0;-ms-flex:0 0 48%;flex:0 0 48%}.rank-math-box-grid.has-3-col>*{-webkit-box-flex:0;-ms-flex:0 0 32%;flex:0 0 32%}.rank-math-box-grid.has-4-col>*{-webkit-box-flex:0;-ms-flex:0 0 23%;flex:0 0 23%}.rank-math-box-grid.has-5-col>*{-webkit-box-flex:0;-ms-flex:0 0 18%;flex:0 0 18%}}.rank-math-wrap p.rank-math-footnote{font-style:italic;position:relative;z-index:100;margin-bottom:0;opacity:.6}@media screen and (min-width: 62rem){html{font-size:16px}}@media screen and (min-width: 48rem){html{font-size:15px}}.rank-math-analytics{width:1200px;max-width:100%}.rank-math-tabs .rank-math-tab{font-size:15px;font-weight:500;line-height:40px;position:relative;display:inline-block;margin-left:0;padding:0 15px;-webkit-transition:.25s all ease-in-out;transition:.25s all ease-in-out;text-decoration:none;color:#5b646c;border:1px solid #b5bfc9;border-right:0;border-bottom:0;background:#f0f2f4}.rank-math-tabs .rank-math-tab:hover,.rank-math-tabs .rank-math-tab:focus,.rank-math-tabs .rank-math-tab.is-active{color:#1a1e22;outline:none;background:#f8f9fa;-webkit-box-shadow:none;box-shadow:none}.rank-math-tabs .rank-math-tab-nav{display:-webkit-box;display:-ms-flexbox;display:flex;overflow-x:auto;white-space:nowrap;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row;flex-flow:row}@media screen and (min-width: 64rem){.rank-math-tabs .rank-math-tab-nav{overflow-x:visible}}.rank-math-tabs .rank-math-tab-nav .rank-math-tab:not(.rank-math-options-panel-content){line-height:44px}.rank-math-tabs .rank-math-tab.is-active:after{position:absolute;z-index:1;bottom:-1px;left:0;width:100%;height:1px;content:\"\";background:#fafafb}.rank-math-tabs .rank-math-tab:first-child{border-radius:4px 0 0 0}.rank-math-tabs .rank-math-tab:last-of-type{border-right:1px solid #b5bfc9;border-radius:0 4px 0 0}.rank-math-tabs .rank-math-tab .rm-icon{font-size:1rem;margin-right:7px;vertical-align:-2px}.rank-math-tabs .rank-math-tab-content{position:relative;margin-bottom:.5rem;padding:30px 0;color:#7f868d;border-radius:0 6px 6px 6px;background:#f8f9fa}.rank-math-tabs .rank-math-tab-content:before{position:absolute;top:0;left:-20px;overflow:hidden;width:120vw;height:100%;padding-bottom:50px;content:\"\";border-top:1px solid #b5bfc9;border-bottom:1px solid #b5bfc9;background:#f8f9fa}.rank-math-tabs .rank-math-tab-content>div{position:relative}.rank-math-tabs .rank-math-tab.is-new:before{font-size:9px;font-weight:600;line-height:1;position:absolute;top:-23px;right:7px;padding:3px 4px;content:\"New!\";-webkit-animation:bounce .8s infinite alternate;animation:bounce .8s infinite alternate;color:#fff;border-radius:2px 2px 0 2px;background:#ed5e5e}.rank-math-tabs .rank-math-tab.is-new:after{position:absolute;top:-8px;right:7px;left:auto;width:0;height:0;content:\"\";-webkit-animation:bounce .8s infinite alternate;animation:bounce .8s infinite alternate;border:0 solid rgba(0,0,0,0);border-top:4px solid #ed5e5e;border-right-width:0;border-left-width:11px}.rank-math-tabs .rank-math-updated{font-size:13px;display:inline-block;margin-bottom:10px;margin-left:10px;opacity:.5;text-align:right}@media screen and (min-width: 62rem){.rank-math-tabs .rank-math-updated{margin-left:auto}}body.rtl .rank-math-tabs .rank-math-updated{margin-right:10px;margin-left:0}@media screen and (min-width: 62rem){body.rtl .rank-math-tabs .rank-math-updated{margin-right:auto}}.keyword-manager .woocommerce-ellipsis-menu{margin-left:0}.rank-math-keyword-table .delete{opacity:0}.rank-math-page .components-popover{z-index:999}.rank-math-page .components-popover__content{z-index:200;width:200px;padding:1rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}.rtl .rank-math-page .components-popover__content{right:0;left:auto}.woocommerce-ellipsis-menu__item{padding:5px 0;cursor:pointer}.woocommerce-ellipsis-menu__item .components-form-toggle{pointer-events:none}.woocommerce-ellipsis-menu__title{font-weight:500;margin-bottom:5px;color:#242628}.woocommerce-table{margin-bottom:1rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}.woocommerce-table__header{white-space:nowrap}.woocommerce-table__header .is-placeholder,.woocommerce-table__item .is-placeholder{display:inline-block;width:80%;max-width:120px;height:16px;-webkit-animation:loading-fade 1.6s ease-in-out infinite;animation:loading-fade 1.6s ease-in-out infinite;color:rgba(0,0,0,0);background-color:#eee}.woocommerce-table__header .is-placeholder::after,.woocommerce-table__item .is-placeholder::after{content:\"\u00a0\"}@media screen and (prefers-reduced-motion: reduce){.woocommerce-table__header .is-placeholder,.woocommerce-table__item .is-placeholder{-webkit-animation:none;animation:none}}.woocommerce-table__header.is-numeric .is-placeholder,.woocommerce-table__item.is-numeric .is-placeholder{max-width:40px}.woocommerce-table__table{overflow-x:auto}.woocommerce-table__table::after,.woocommerce-table__table::before{position:absolute;z-index:1;top:0;width:60px;height:100%;content:\"\";-webkit-transition:opacity .3s;transition:opacity .3s;pointer-events:none;opacity:0}.woocommerce-table__table::after{right:0;background:-webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0)), to(rgba(255, 255, 255, 0.65)));background:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.65))}.woocommerce-table__table::before{left:0;background:-webkit-gradient(linear, left top, right top, from(rgba(255, 255, 255, 0.65)), to(rgba(255, 255, 255, 0)));background:linear-gradient(90deg, rgba(255, 255, 255, 0.65), rgba(255, 255, 255, 0))}.woocommerce-table__table.is-scrollable-right::after,.woocommerce-table__table.is-scrollable-left::before{opacity:1}.woocommerce-table__actions{margin-right:.5rem}.woocommerce-table__actions .components-base-control__field{margin-bottom:0}.woocommerce-table__actions .components-base-control .components-select-control .components-input-control__backdrop{border-color:#b5bfc9;border-radius:3px;-webkit-box-shadow:none;box-shadow:none}.woocommerce-table.components-card{color:#7f868d;border-radius:6px;-webkit-box-shadow:none;box-shadow:none}.woocommerce-table__item .is-placeholder{display:inline-block;width:80%;max-width:120px;height:16px;-webkit-animation:loading-fade 1.6s ease-in-out infinite;animation:loading-fade 1.6s ease-in-out infinite;color:rgba(0,0,0,0);background-color:#eee}.woocommerce-table__item .is-placeholder::after{content:\"\u00a0\"}@media screen and (prefers-reduced-motion: reduce){.woocommerce-table__item .is-placeholder{-webkit-animation:none;animation:none}}.woocommerce-table__item.is-numeric .is-placeholder{max-width:40px}.woocommerce-table .components-button.woocommerce-ellipsis-menu__toggle{display:-webkit-box;display:-ms-flexbox;display:flex;float:none;height:30px;height:30px;padding:0 10px;padding:0 8px;border:1px solid #b5bfc9;border-radius:3px;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.woocommerce-table .components-button.woocommerce-ellipsis-menu__toggle:hover,.woocommerce-table .components-button.woocommerce-ellipsis-menu__toggle:focus{fill:#069de3}.woocommerce-table .components-button.woocommerce-ellipsis-menu__toggle span{margin-right:0 !important}.woocommerce-table .components-button.woocommerce-ellipsis-menu__toggle svg{vertical-align:top}.woocommerce-table .components-button.woocommerce-ellipsis-menu__toggle svg:nth-child(2){display:none}.woocommerce-table .components-button.woocommerce-ellipsis-menu__toggle:hover{border-color:#069de3}.woocommerce-table .components-dropdown{position:relative}.woocommerce-table .components-dropdown svg{fill:#6b7278}.woocommerce-table .components-card__footer{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;padding:0}.woocommerce-table .components-card__body{position:relative}.woocommerce-table .components-card__header{-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;margin-right:1rem;padding:1.25rem .825rem;border-bottom:1px solid #dadfe4;-webkit-box-flex:1;-ms-flex:1;flex:1;-ms-flex-positive:1;flex-grow:1;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.woocommerce-table .components-card__header .button{border-color:#b5bfc9}.woocommerce-table .components-card__header .components-dropdown{position:relative}.woocommerce-table .components-card__header .components-dropdown .components-popover{z-index:999;position:relative !important;top:0 !important;right:auto !important;left:auto !important}.woocommerce-table .components-card__header .components-dropdown .components-popover__content{position:absolute;z-index:200;top:5px;right:auto;left:0;width:200px;padding:1rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}.rtl .woocommerce-table .components-card__header .components-dropdown .components-popover__content{right:0;left:auto}.woocommerce-table .components-card__header .woocommerce-ellipsis-menu .components-dropdown .components-popover__content{right:0;left:auto}.rtl .woocommerce-table .components-card__header .woocommerce-ellipsis-menu .components-dropdown .components-popover__content{right:auto;left:0}.woocommerce-table .components-card__header .components-dropdown .components-popover__content .woocommerce-ellipsis-menu__item{padding:5px 0}.woocommerce-table .components-card__header .components-dropdown .components-popover__content .woocommerce-ellipsis-menu__item .is-disabled input{border-color:rgba(220,220,222,.75);background:#f8f9fa}.woocommerce-table .components-card__header .components-dropdown .components-popover__content .woocommerce-ellipsis-menu__item .is-disabled input:hover{-webkit-box-shadow:none;box-shadow:none}.woocommerce-table .components-card__header .components-dropdown .components-popover__content .woocommerce-ellipsis-menu__item input{margin-right:7px}.woocommerce-table .components-card__header .components-dropdown .components-popover__content .woocommerce-ellipsis-menu__title{font-weight:500;margin-bottom:5px;color:#242628}.woocommerce-table .components-card__header-item{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.woocommerce-table .components .woocommerce-list{margin:0}.woocommerce-table .components-dropdown li{font-size:.9375rem;font-weight:normal;padding:5px 0;cursor:pointer}.woocommerce-table .components-dropdown li:hover{color:#069de3}.woocommerce-table .components .button{margin-left:5px;border-color:#b5bfc9}.woocommerce-table .components .button.button-auto-add-focus-keyword{margin-right:-10px;margin-left:0}.woocommerce-table .components-popover__content{position:absolute;z-index:200;top:35px;right:0;width:200px;padding:1rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}.woocommerce-table .components-text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:1;-ms-flex:1;flex:1}.woocommerce-table .components-text .add-keyword-button{font-weight:normal;margin:-10px auto -10px 10px}.woocommerce-table .components-text .add-keyword-button .button{line-height:28px;margin-left:5px}.woocommerce-table .components-text .add-keyword-button .button.adding{color:#52a652;border-color:#52a652}.woocommerce-table .components-text .add-keyword-button .components-base-control__field{margin-bottom:0}.woocommerce-table .components-text button:not(.is-link):not(.add-keyword):not(.cancel-keyword):not(.add-focus-keyword):not(.button-auto-add-focus-keyword){font-size:1.125rem;font-weight:600;line-height:1;min-height:100%;padding:0;color:#5a5d70;border:0;background:rgba(0,0,0,0)}.woocommerce-table .components-text button:not(.is-link):not(.add-keyword):not(.cancel-keyword):not(.add-focus-keyword):not(.button-auto-add-focus-keyword):after{font-family:\"Dashicons\";margin-left:5px;content:\"\uf347\";vertical-align:-4px}.woocommerce-table .components-text .components-popover__content{right:auto;left:0}.woocommerce-table h2{font-size:1.125rem;margin:0;padding:10px 0;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.woocommerce-table table{width:1198px;border-collapse:collapse;color:#7f868d;border-bottom:1px solid #dadfe4}.woocommerce-table table .text-large{font-size:inherit;font-weight:normal}.woocommerce-table table .rank-math-item-difference{font-size:13px}.woocommerce-table table h4{font-size:1rem;font-weight:500;width:300px;margin:0}.woocommerce-table table h4 a{text-decoration:none;color:inherit}.woocommerce-table table h4:hover span{border-bottom:1px dotted}.woocommerce-table table small{font-size:.9375rem;font-weight:normal;display:block;margin-top:5px;color:#7f868d}.woocommerce-table table .schema-item{font-size:14px;margin-bottom:8px}.woocommerce-table table .schema-item:last-child{margin-bottom:0}.woocommerce-table table .schema-item.none i{display:none}.woocommerce-table table .schema-item i{font-size:18px;display:inline-block;margin-right:3px;vertical-align:-3px}.woocommerce-table table .seo-score{font-weight:500;line-height:26px;position:relative;width:64px;text-align:center;border:1px solid #b5bfc9;border-radius:3px}.woocommerce-table table .seo-score span{position:absolute;top:0;left:0;height:100%;opacity:.2}.woocommerce-table table .seo-score div{position:relative;z-index:1}.woocommerce-table table .seo-score.good-fk{color:#10ac84;border-color:#10ac84}.woocommerce-table table .seo-score.good-fk span{background:rgba(16,172,132,.8)}.woocommerce-table table .seo-score.ok-fk{color:#ff9f43;border-color:#ff9f43}.woocommerce-table table .seo-score.ok-fk span{background:rgba(255,159,67,.8)}.woocommerce-table table .seo-score.bad-fk{color:#ed5e5e;border-color:#ed5e5e}.woocommerce-table table .seo-score.bad-fk span{background:rgba(237,94,94,.8)}.woocommerce-table table .seo-score.no-fk{color:#7f868d;border-color:#7f868d}.woocommerce-table table .link-listing{max-width:110px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.woocommerce-table table .link-listing .link-item{margin-bottom:5px;-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%}.woocommerce-table table .link-listing .link-item:nth-child(3) .dashicon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.woocommerce-table table .link-listing svg,.woocommerce-table table .link-listing .dashicon{font-size:18px;margin-right:3px;vertical-align:-4px;fill:#7f868d;stroke:#fff;-webkit-text-stroke:.5px #fff}.woocommerce-table table .rank-math-col-links{min-width:140px}.woocommerce-table table button span{font-size:12px;line-height:18px;display:inline-block;width:22px;margin-left:5px;text-align:center;border-radius:3px;background:#dadfe4}.woocommerce-table table tr{-webkit-transition:.25s background ease-in-out;transition:.25s background ease-in-out;border-bottom:1px solid #dadfe4}.woocommerce-table table tr:hover{background:#fafafb}.woocommerce-table table tr:first-child{border-bottom:1px solid #dadfe4;background:#fafafb}.woocommerce-table table tr:first-child th{font-weight:500;padding:14px}.woocommerce-table table tr:last-child{border-bottom:0}.woocommerce-table table tr:last-child th:first-child{border-radius:0 0 0 6px}.woocommerce-table table tr th{font-weight:normal;-webkit-box-sizing:border-box;box-sizing:border-box;min-width:100px;padding:5px .625rem;-webkit-transition:.25s box-shadow ease-in-out;transition:.25s box-shadow ease-in-out;text-align:left;color:#242628;border-right:1px solid #dadfe4;background:#fafafb}.woocommerce-table table tr th:first-child{min-width:60px;padding:5px 0;text-align:center}.woocommerce-table table tr th:first-child .add-keyword{font-size:10px;line-height:20px;display:block;width:22px;height:100%;min-height:100%;margin:7px auto;margin-top:5px;padding:0;text-align:center;color:#7f868d;border-color:#7f868d;border-radius:25px}.woocommerce-table table tr th:first-child .add-keyword i{font-weight:bold;vertical-align:-1px}.woocommerce-table table tr th:first-child .add-keyword:hover,.woocommerce-table table tr th:first-child .add-keyword:focus,.woocommerce-table table tr th:first-child .add-keyword.added{color:#52a652 !important;border-color:#52a652 !important;background:#dff2df !important;-webkit-box-shadow:0 0 0 5px #dff2df !important;box-shadow:0 0 0 5px #dff2df !important}.woocommerce-table table tr th:first-child .add-keyword.added{-webkit-box-shadow:none !important;box-shadow:none !important}.woocommerce-table table tr th:first-child .add-keyword.delete{color:#f0776f !important;border-color:#f0776f !important;background:#fce9e8 !important;-webkit-box-shadow:0 0 0 5px #fce9e8 !important;box-shadow:0 0 0 5px #fce9e8 !important}.woocommerce-table table tr th:first-child .add-keyword .rank-math-tooltip span{width:100px}.woocommerce-table table tr th:first-child i.post-type{display:block;margin-top:8px;opacity:.5}.woocommerce-table table tr th:last-child{border-right:0}.woocommerce-table table tr td{-webkit-box-sizing:border-box;box-sizing:border-box;padding:1rem .825rem}.woocommerce-table table tr td .rank-math-graph{position:relative;width:160px;height:40px;background:rgba(0,0,0,0)}.woocommerce-table table tr td .rank-math-graph .recharts-layer{max-height:50px}.woocommerce-table .rank-math-keyword-table tr:hover .delete{opacity:1}.woocommerce-table .rank-math-keyword-table tr a:hover{border-bottom:1px dotted}.woocommerce-pagination{position:relative;z-index:1;padding:2rem 1rem 2rem;background:#fff;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.woocommerce-pagination>div{margin-left:1rem}.woocommerce-pagination>div:first-child{margin-left:0}.woocommerce-pagination>div input,.woocommerce-pagination>div select,.woocommerce-pagination>div>.woocommerce-pagination__page-arrows-buttons{margin-left:.5rem}.woocommerce-pagination>div .woocommerce-pagination__page-arrows-label{margin-top:8px}.woocommerce-pagination>div .woocommerce-pagination__page-arrows-buttons{border:1px solid #b5bfc9;border-radius:4px;background:#f8f9fa}.woocommerce-pagination>div button{line-height:34px;width:34px;padding:0 4px;border:0;border-right:1px solid #b5bfc9;background:rgba(0,0,0,0);fill:#7f868d}.woocommerce-pagination>div button:disabled{opacity:.3}.woocommerce-pagination>div button:hover{background:none;fill:#242628}.woocommerce-pagination>div button svg{vertical-align:-5px}.woocommerce-pagination>div button:last-child{border-right:0}.woocommerce-pagination>div button span{display:none}.woocommerce-pagination+.woocommerce-table__summary{margin:0;padding-top:0}.woocommerce-pagination__per-page-picker{display:none !important}.woocommerce-table__summary{position:relative;z-index:1;margin:0;padding:2rem 1rem;padding:2rem 1rem;border-radius:0 0 6px 6px;background:#fff;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.woocommerce-table__summary li{display:inline-block;margin:0 1rem .25rem}.woocommerce-table__summary li span:first-child{font-weight:500;margin-right:4px;color:#242628}body.rtl .woocommerce-pagination__page-picker{margin-right:1rem;margin-left:0}body.rtl .woocommerce-pagination__page-picker-input{margin-right:.5rem;margin-left:0}body.rtl .woocommerce-pagination__page-arrows-buttons{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse;margin-right:.5rem;margin-left:0}.rank-math-graph{background:#fff}.rank-math-graph .recharts-surface{overflow:visible}.rank-math-graph.main-graph{overflow:visible;-webkit-box-sizing:border-box;box-sizing:border-box;height:340px;margin-top:-1px;margin-bottom:2rem;padding:1.5rem 1rem 2rem 1rem;border:1px solid #dadfe4}.rank-math-graph.main-graph.loader{padding:1.5rem}.recharts-tooltip-wrapper{z-index:999;left:0px}.rank-math-graph-tooltip{z-index:1;padding:10px;border:1px solid #dadfe4;border-radius:5px;background-color:#fff}.rank-math-graph-tooltip.color-good{color:#fff;border-color:#10ac84;background:#10ac84}.rank-math-graph-tooltip.color-fair{color:#fff;border-color:#ff9f43;background:#ff9f43}.rank-math-graph-tooltip.color-poor{color:#fff;border-color:#ed5e5e;background:#ed5e5e}.rank-math-graph-tooltip p{font-weight:600;margin-bottom:5px !important;padding-bottom:5px;text-align:center;color:#242628;border-bottom:1px solid #dadfe4}.rank-math-graph-tooltip p:empty{display:none}.rank-math-graph-tooltip .recharts-tooltip-item{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important;padding-bottom:7px !important;border-bottom:1px solid #f2f2f2}.rank-math-graph-tooltip .recharts-tooltip-item:before{margin-right:5px;content:\"\u25cf\";color:inherit}.rank-math-graph-tooltip .recharts-tooltip-item:last-child{padding-bottom:0 !important;border-bottom:0 !important}.rank-math-graph-tooltip .recharts-tooltip-item-name{text-transform:capitalize;color:#7f868d}.rank-math-graph-tooltip .recharts-tooltip-item-name:text(ctr){text-transform:uppercase}.rank-math-graph-tooltip .recharts-tooltip-item-separator{margin-right:10px;color:#7f868d}.rank-math-graph-tooltip .recharts-tooltip-item-value{font-weight:500;margin-left:auto;color:#7f868d}body.rtl .rank-math-graph-tooltip .recharts-tooltip-item:before{margin-left:5px;margin-right:0}body.rtl .rank-math-graph-tooltip .recharts-tooltip-item-separator{margin-right:0;margin-left:10px}body.rtl .rank-math-graph-tooltip .recharts-tooltip-item-value{margin-right:auto;margin-left:0}.rank-math-graph-filter{z-index:1;display:grid;overflow-x:auto;margin-bottom:1.5rem;border-width:1px 0 0 1px;border-style:solid;border-color:#dadfe4;grid-template-columns:repeat(4, 1fr)}@media screen and (min-width: 64rem){.rank-math-graph-filter{overflow-x:visible}}.rank-math-graph-filter.has-3-col{grid-template-columns:repeat(3, 1fr)}.rank-math-graph-filter.rank-math-stat-filters{margin-bottom:0;white-space:nowrap}.rank-math-graph-filter.rank-math-stat-filters+.graph{height:300px;margin-bottom:1.5rem;border:1px solid #dadfe4;border-top:0;background:#eee;-webkit-box-shadow:inset 0 0 0 10px #fff;box-shadow:inset 0 0 0 10px #fff}.rank-math-graph-filter button.components-button{position:relative;display:block;min-width:200px;height:100%;margin:0;padding:1.125rem;text-align:left;border-width:0 1px 1px 0;border-style:solid;border-color:#dadfe4;background:#fff}.rank-math-graph-filter button.components-button:after{position:absolute;right:-1px;bottom:-1px;left:-1px;height:5px;content:\"\";-webkit-transition:.25s all ease-in-out;transition:.25s all ease-in-out;background:rgba(0,0,0,0)}.rank-math-graph-filter button.components-button:hover,.rank-math-graph-filter button.components-button.is-active{border-color:#dadfe4;background:rgba(181,191,201,.05);-webkit-box-shadow:none;box-shadow:none}.rank-math-graph-filter button.components-button:hover:after,.rank-math-graph-filter button.components-button.is-active:after{background:#b5bfc9}.rank-math-graph-filter button.components-button:hover{background:#fff}.rank-math-graph-filter button.components-button:focus{border-color:#dadfe4;outline:0;background:#fff;-webkit-box-shadow:inset 0 0 0 1px #7f868d;box-shadow:inset 0 0 0 1px #7f868d}.rank-math-graph-filter button.components-button.score-filter-good.is-active,.rank-math-graph-filter button.components-button.stat-filter-good.is-active{background:rgba(16,172,132,.05)}.rank-math-graph-filter button.components-button.score-filter-good.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-good.is-active:after{background:#10ac84}.rank-math-graph-filter button.components-button.score-filter-ok.is-active,.rank-math-graph-filter button.components-button.stat-filter-ok.is-active{background:rgba(255,159,67,.05)}.rank-math-graph-filter button.components-button.score-filter-ok.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-ok.is-active:after{background:#ff9f43}.rank-math-graph-filter button.components-button.score-filter-bad.is-active,.rank-math-graph-filter button.components-button.stat-filter-bad.is-active{background:rgba(237,94,94,.05)}.rank-math-graph-filter button.components-button.score-filter-bad.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-bad.is-active:after{background:#ed5e5e}.rank-math-graph-filter button.components-button.score-filter-top3.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-top3.is-active:after{background:#3e70b2}.rank-math-graph-filter button.components-button.score-filter-top10.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-top10.is-active:after{background:#4e8cde}.rank-math-graph-filter button.components-button.score-filter-top50.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-top50.is-active:after{background:#71a3e5}.rank-math-graph-filter button.components-button.score-filter-top100.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-top100.is-active:after{background:#83afe8}.rank-math-graph-filter button.components-button.score-filter-color-1.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-1.is-active{background:rgba(16,172,132,.05)}.rank-math-graph-filter button.components-button.score-filter-color-1.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-color-1.is-active:after{background:#10ac84}.rank-math-graph-filter button.components-button.score-filter-color-2.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-2.is-active{background:rgba(78,140,222,.05)}.rank-math-graph-filter button.components-button.score-filter-color-2.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-color-2.is-active:after{background:#4e8cde}.rank-math-graph-filter button.components-button.score-filter-color-3.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-3.is-active{background:rgba(237,94,94,.05)}.rank-math-graph-filter button.components-button.score-filter-color-3.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-color-3.is-active:after{background:#ed5e5e}.rank-math-graph-filter button.components-button.score-filter-color-4.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-4.is-active{background:rgba(255,159,67,.05)}.rank-math-graph-filter button.components-button.score-filter-color-4.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-color-4.is-active:after{background:#ff9f43}.rank-math-graph-filter button.components-button.score-filter-color-5.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-5.is-active{background:rgba(243,104,224,.05)}.rank-math-graph-filter button.components-button.score-filter-color-5.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-color-5.is-active:after{background:#f368e0}.rank-math-graph-filter button.components-button.score-filter-color-6.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-6.is-active{background:rgba(11,189,227,.05)}.rank-math-graph-filter button.components-button.score-filter-color-6.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-color-6.is-active:after{background:#0bbde3}.rank-math-graph-filter button.components-button.score-filter-color-7.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-7.is-active{background:rgba(0,163,164,.05)}.rank-math-graph-filter button.components-button.score-filter-color-7.is-active:after,.rank-math-graph-filter button.components-button.stat-filter-color-7.is-active:after{background:#00a3a4}.rank-math-graph-filter button.components-button.score-filter-color-8.is-active,.rank-math-graph-filter button.components-button.stat-filter-color-8.is-active{background:rgba(33,47,62,.05)}.rank-math-graph-filter button.components-button.score-filter-color-8.is-active:before,.rank-math-graph-filter button.components-button.stat-filter-color-8.is-active:before{background:#212f3e}.rank-math-graph-filter button.components-button h4{font-size:1.3125rem;font-weight:400;margin:0}.rank-math-graph-filter button.components-button em:before{margin-left:3px;vertical-align:-3px}.rank-math-graph-filter button.components-button .text-large{font-size:2.75rem}.rank-math-analytics .rank-math-position-overview .rank-math-position h4:before,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rank-math-list__item-title:before{position:relative;display:inline-block;width:10px;height:10px;margin-right:10px;content:\"\";border-radius:2px;background:#dadfe4}.rtl .rank-math-analytics .rank-math-position-overview .rank-math-position h4:before,.rank-math-analytics .rank-math-position-overview .rank-math-position .rtl h4:before,.rtl .rank-math-analytics .rank-math-score-overview .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rtl .woocommerce-list__item-title:before,.rtl .rank-math-analytics .rank-math-score-overview .rank-math-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rtl .rank-math-list__item-title:before{margin-right:auto;margin-left:10px}.rank-math-analytics .grid{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-analytics .grid .rank-math-box{-webkit-box-sizing:border-box;box-sizing:border-box;border-color:#dadfe4;-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%}@media screen and (min-width: 48rem){.rank-math-analytics .grid .rank-math-box{-webkit-box-flex:0;-ms-flex:0 0 49.5%;flex:0 0 49.5%}}.rank-math-analytics .rank-math-box h3{font-size:1.3125rem;font-weight:500;margin:0}.rank-math-analytics .rank-math-box h3 .rank-math-tooltip em:before{margin-left:3px;vertical-align:-3px}.rtl .rank-math-analytics .rank-math-box h3 .rank-math-tooltip em:before{margin-left:auto;margin-right:3px}.rank-math-analytics .rank-math-score-overview h3{margin:0 0 1rem;text-align:center}.rank-math-analytics .rank-math-score-overview .rank-math-seo-score-graph{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;width:213px;height:213px;margin:-1rem 1rem 0 0;border:1rem solid #fff;border-radius:50%;-webkit-box-flex:0;-ms-flex:0 0 213px;flex:0 0 213px}.rank-math-analytics .rank-math-score-overview .rank-math-seo-score-graph .recharts-label{font-size:3rem;font-weight:700;opacity:.7}@media screen and (min-width: 48rem){.rank-math-analytics .rank-math-score-overview .rank-math-seo-score-graph{margin:-1rem 1rem 0 0}}.rank-math-analytics .rank-math-score-overview .woocommerce-list,.rank-math-analytics .rank-math-score-overview .rank-math-list{-webkit-box-flex:1;-ms-flex:1;flex:1;-ms-flex-positive:1;flex-grow:1}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item,.rank-math-analytics .rank-math-score-overview .rank-math-list__item{margin-bottom:0;padding:8px 3px;-webkit-transition:.25s all ease-in-out;transition:.25s all ease-in-out;border-bottom:1px solid #e9ecef}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-score-overview .rank-math-list__item-text{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-good .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-good .rank-math-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-good .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-good .rank-math-list__item-title:before{background:#10ac84}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-good .woocommerce-list__item-content,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-good .rank-math-list__item-content,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-good .woocommerce-list__item-content,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-good .rank-math-list__item-content{color:#10ac84}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-ok .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-ok .rank-math-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-ok .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-ok .rank-math-list__item-title:before{background:#ff9f43}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-ok .woocommerce-list__item-content,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-ok .rank-math-list__item-content,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-ok .woocommerce-list__item-content,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-ok .rank-math-list__item-content{color:#ff9f43}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-bad .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-bad .rank-math-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-bad .woocommerce-list__item-title:before,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-bad .rank-math-list__item-title:before{background:#ed5e5e}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-bad .woocommerce-list__item-content,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item.seo-score-bad .rank-math-list__item-content,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-bad .woocommerce-list__item-content,.rank-math-analytics .rank-math-score-overview .rank-math-list__item.seo-score-bad .rank-math-list__item-content{color:#ed5e5e}.rank-math-analytics .rank-math-score-overview .woocommerce-list__item-content,.rank-math-analytics .rank-math-score-overview .rank-math-list__item-content{font-weight:500;color:#98a6b3}.rank-math-analytics .rank-math-score-overview p{font-size:.875rem;font-weight:300;text-align:center;color:#92949f}.rank-math-analytics .rank-math-score-overview button.is-link{margin-top:11px}.rank-math-analytics .rank-math-analytics-overview .rank-math-analytic-item{margin-bottom:1.5rem}.rank-math-analytics .rank-math-analytics-overview .rank-math-item-numbers{margin:10px 0}.rank-math-analytics .rank-math-analytics-overview .rank-math-item-numbers span{vertical-align:1px}.rank-math-analytics .rank-math-analytics-overview .rank-math-analytic-graph{position:relative;height:50px;margin-top:1rem}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tabs{border-bottom:1px solid #dadfe4;border-radius:6px 6px 0 0;background:#f9f9f9}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tabs button{line-height:2.625rem;border:0;border-right:1px solid #dadfe4;background:rgba(0,0,0,0)}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tabs button.is-active{background:#fff}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tabs button.is-active:after{background:#fff}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tabs button:last-child{border-radius:0}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tabs button:focus{background:#fff;-webkit-box-shadow:none;box-shadow:none}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content{overflow:scroll;max-height:310px;margin-bottom:0;padding:0 0 .9375rem;background:rgba(0,0,0,0)}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content:before{display:none}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content .loader{padding:0 2rem 0 1rem}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content h4{margin:0;padding:.9375rem;border-bottom:1px solid #dadfe4}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content ul{margin:0}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content li{line-height:1.3;margin-bottom:0;padding:.825rem .9375rem;border-bottom:1px solid #dadfe4}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content .col{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%}@media screen and (min-width: 48rem){.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content .col{max-width:50%;-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%}}.rank-math-analytics .rank-math-keywords-overview .rank-math-tabs .components-tab-panel__tab-content .text-large{font-size:inherit;font-weight:500}.rank-math-analytics .rank-math-keywords-overview .rank-math-tooltip{position:absolute;z-index:999;top:10px;right:10px}.rank-math-analytics .rank-math-keywords-overview-tooltip .analytics-dashicon{position:absolute;z-index:999;top:10px;right:10px}.rank-math-analytics .rank-math-keywords-overview button:not(.rank-math-tab){margin-right:1rem;margin-bottom:1rem}.rank-math-analytics .rank-math-keywords-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-keywords-overview .rank-math-list__item-text{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-analytics .rank-math-keywords-overview .woocommerce-list__item-title,.rank-math-analytics .rank-math-keywords-overview .rank-math-list__item-title{overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;max-width:300px;margin-right:10px;white-space:nowrap;text-overflow:ellipsis;-webkit-box-flex:1;-ms-flex:1;flex:1;-ms-flex-positive:1;flex-grow:1}.rank-math-analytics .rank-math-position-overview h3{margin-bottom:1.5rem}.rank-math-analytics .rank-math-position-overview h4{font-weight:normal;margin:0 0 1rem;color:#92949f}.rank-math-analytics .rank-math-position-overview .rank-math-position{margin-bottom:1rem}.rank-math-analytics .rank-math-position-overview .rank-math-position.position-top3 h4:before{background:#3e70b2}.rank-math-analytics .rank-math-position-overview .rank-math-position.position-top10 h4:before{background:#4e8cde}.rank-math-analytics .rank-math-position-overview .rank-math-position.position-top50 h4:before{background:#71a3e5}.rank-math-analytics .rank-math-position-overview .rank-math-position-graph{height:160px;background:#eee}.rank-math-analytics .rank-math-position-overview .rank-math-avg-ctr{display:inline-block;margin:1rem 0 0}.rank-math-analytics .rank-math-position-overview .rank-math-avg-ctr h4{display:inline-block;margin:0 5px 0 0}.rank-math-analytics .rank-math-position-overview .rank-math-avg-ctr .text-large{font-size:inherit;font-weight:500}.rank-math-analytics .rank-math-position-overview .rank-math-avg-ctr .rank-math-item-numbers{display:inline-block}.rank-math-analytics .rank-math-position-overview button.is-link{line-height:21px;margin:1rem 0 0}.rank-math-score-bar{overflow:hidden;height:26px;margin-bottom:1.5em;background:#dadfe4}.rank-math-score-bar>div{display:inline-block;height:100%;border-right:3px solid #f0f2f4}.rank-math-score-bar>div[style*=\"width: 0%\"]{display:none}.rank-math-score-bar>div.score-bar-good{background:#10ac84}.rank-math-score-bar>div.score-bar-ok{background:#ff9f43}.rank-math-score-bar>div.score-bar-bad{background:#ed5e5e}.rank-math-analytics-tab .woocommerce-table .components-card__header,.rank-math-analytics-tab .woocommerce-table .components-card__body,.rank-math-analytics-tab .woocommerce-table .woocommerce-pagination{-webkit-filter:blur(2px);filter:blur(2px)}#rank-math-pro-cta .rank-math-cta-body,#rank-math-pro-cta .rank-math-cta-header,.rank-math-analyzer-header,.rank-math-box-grid,.woocommerce-table .components-card__header,.woocommerce-table .components-card__header-item,.woocommerce-table .components-text .add-keyword-button,.woocommerce-table table .link-listing,.woocommerce-pagination,.woocommerce-pagination>div,.woocommerce-table__summary,.rank-math-analytics .grid,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-score-overview .rank-math-list__item-text,.rank-math-analytics .rank-math-keywords-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-keywords-overview .rank-math-list__item-text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.rank-math-single-tab .single-post-report{position:relative;z-index:1;max-width:100%}.rank-math-single-tab .rank-math-edit-post{font-size:1rem;display:inline-block;margin-left:10px;vertical-align:2px;text-decoration:none;color:#069de3}.rank-math-single-tab .rank-math-post-link{font-size:.825rem;font-weight:normal;display:inline-block;vertical-align:top;text-decoration:none;color:#7f868d}.rank-math-single-tab .rank-math-post-link:hover,.rank-math-single-tab .rank-math-post-link:focus{color:#069de3;outline:none;-webkit-box-shadow:none;box-shadow:none}.rank-math-single-tab .rank-math-post-link:after{font-family:\"dashicons\";font-size:1rem;margin-left:5px;content:\"\uf504\";vertical-align:-3px;fill:#7f868d;-webkit-text-stroke:.5px #fff}.rank-math-keyword-table.keyword-manager{margin-bottom:2rem}.rank-math-keyword-table.keyword-manager table tr:last-child{border-bottom:1px solid #dadfe4}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes spin{0%{-webkit-transform:rotate(0deg)}100%{-webkit-transform:rotate(-360deg)}}@keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@-webkit-keyframes bounce{from{-webkit-transform:translateY(0px);transform:translateY(0px)}to{-webkit-transform:translateY(-5px);transform:translateY(-5px)}}@keyframes loading{0%{background-size:20% 50%,20% 50%,20% 50%}20%{background-size:20% 20%,20% 50%,20% 50%}40%{background-size:20% 100%,20% 20%,20% 50%}60%{background-size:20% 50%,20% 100%,20% 20%}80%{background-size:20% 50%,20% 50%,20% 100%}100%{background-size:20% 50%,20% 50%,20% 50%}}#rank-math-pro-cta .rank-math-cta-body,#rank-math-pro-cta .rank-math-cta-header,.rank-math-analyzer-header,.rank-math-box-grid,.woocommerce-table .components-card__header,.woocommerce-table .components-card__header-item,.woocommerce-table .components-text .add-keyword-button,.woocommerce-table table .link-listing,.woocommerce-pagination,.woocommerce-pagination>div,.woocommerce-table__summary,.rank-math-analytics .grid,.rank-math-analytics .rank-math-score-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-score-overview .rank-math-list__item-text,.rank-math-analytics .rank-math-keywords-overview .woocommerce-list__item-text,.rank-math-analytics .rank-math-keywords-overview .rank-math-list__item-text{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap}.blurred{pointer-events:none;-webkit-filter:blur(2px);filter:blur(2px)}.blurred:after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";background:rgba(248,249,250,.1)}#rank-math-pro-cta{position:relative;z-index:100;margin-top:2rem}#rank-math-pro-cta.center{position:absolute;top:0;right:0;bottom:0;left:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:0}#rank-math-pro-cta.analytics{width:560px;max-width:100%;margin:2rem auto 0}#rank-math-pro-cta.no-margin{margin:0}#rank-math-pro-cta .rank-math-cta-box{-ms-flex-item-align:center;align-self:center;-webkit-box-sizing:border-box;box-sizing:border-box;width:100%;max-width:90%;padding:2rem 1.5rem;border:2px solid #6666c3;border-radius:4px;background:#fff;-webkit-box-shadow:0 4px 14px 0 rgba(34,36,55,.28);box-shadow:0 4px 14px 0 rgba(34,36,55,.28);justify-self:center}#rank-math-pro-cta .rank-math-cta-box.no-shadow{-webkit-box-shadow:none;box-shadow:none}#rank-math-pro-cta .rank-math-cta-box.no-padding{padding:0}#rank-math-pro-cta .rank-math-cta-box.no-border{border:none}#rank-math-pro-cta .rank-math-cta-box.less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-box.less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.top-20{-ms-flex-item-align:start;align-self:flex-start;margin-top:10%}#rank-math-pro-cta .rank-math-cta-box h3{font-size:1.25rem;font-weight:600;line-height:1.4;margin-top:0;margin-bottom:1.5rem;color:#242628}@media screen and (min-width: 48rem){#rank-math-pro-cta .rank-math-cta-box.width-100{width:100%;max-width:100%}#rank-math-pro-cta .rank-math-cta-box.width-80{max-width:80%}#rank-math-pro-cta .rank-math-cta-box.width-70{max-width:70%}#rank-math-pro-cta .rank-math-cta-box.width-60{max-width:60%}#rank-math-pro-cta .rank-math-cta-box.width-60 h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-box.width-50{max-width:50%}#rank-math-pro-cta .rank-math-cta-box.width-40{max-width:40%}#rank-math-pro-cta .rank-math-cta-box.width-30{max-width:30%}}#rank-math-pro-cta .rank-math-cta-box.blue-ticks ul li:before{background:#069de3}#rank-math-pro-cta .rank-math-cta-table{margin-bottom:2rem;border:1px solid #dadfe4;border-radius:6px;background:#fff}#rank-math-pro-cta .rank-math-cta-table .less-padding{padding:1.5rem}#rank-math-pro-cta .rank-math-cta-table .less-padding h3{margin-bottom:1rem}#rank-math-pro-cta .rank-math-cta-header{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem .825rem;border-bottom:1px solid #dadfe4}#rank-math-pro-cta .rank-math-cta-header h2{font-size:1.125rem;font-weight:500;margin:0}#rank-math-pro-cta .rank-math-cta-body{-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:1.25rem 1.5rem 1.25rem .825rem}#rank-math-pro-cta .rank-math-cta-body svg,#rank-math-pro-cta .rank-math-cta-body .dashicon{margin-right:1.25rem;fill:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body span.dashicon{font-size:50px;width:50px;height:50px;color:#ed5e5e}#rank-math-pro-cta .rank-math-cta-body p{font-size:1rem;-webkit-box-flex:1;-ms-flex:1;flex:1}#rank-math-pro-cta .rank-math-cta-body .button{line-height:40px;margin-left:1.25rem}#rank-math-pro-cta .rank-math-cta-text{display:block;color:#7f868d}#rank-math-pro-cta .rank-math-cta-text span{margin-right:3px}#rank-math-pro-cta p,#rank-math-pro-cta ul{font-size:1rem;color:#7f868d}#rank-math-pro-cta p{margin-top:0}#rank-math-pro-cta ul{margin-bottom:1.5rem}#rank-math-pro-cta ul li{font-size:1rem;line-height:1.5;margin-bottom:1rem;padding:0;border:0}#rank-math-pro-cta ul li:before{font-family:\"dashicons\";font-size:16px;line-height:18px;display:inline-block;width:18px;margin-right:8px;content:\"\uf15e\";text-align:center;vertical-align:-2px;color:#fff;border-radius:50%;background:#10ac84}#rank-math-pro-cta .button{font-weight:500;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:auto;max-width:100%;margin:0 auto;padding:0 2rem;text-align:center}#rank-math-pro-cta .button.is-link{margin-left:15px;padding:0;font-size:10px;background-color:rgba(0,0,0,0)}.rank-math-error-modal.rank-math-contentai-modal{background-color:rgba(0,0,0,0);-webkit-box-shadow:none;box-shadow:none;height:auto}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content{margin-top:0}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content .components-modal__header{border:none}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta{position:static}.rank-math-error-modal.rank-math-contentai-modal .components-modal__content #rank-math-pro-cta .rank-math-cta-box{margin-top:0;max-width:100%}#rank-math-pro-cta.analytics{margin-left:0}#rank-math-pro-cta.analytics .rank-math-cta-box{background:rgba(0,0,0,0)}#rank-math-pro-cta.rank-math-privacy-box{width:630px;max-width:100%;margin-top:3rem}#rank-math-pro-cta.rank-math-privacy-box.width-100{width:100%}#rank-math-pro-cta.rank-math-privacy-box .rank-math-cta-table{border-width:2px;border-color:#10ac84}#rank-math-pro-cta.rank-math-privacy-box .rank-math-cta-body{background:rgba(16,172,132,.06)}#rank-math-pro-cta.rank-math-privacy-box .rank-math-cta-body i{font-size:2rem;line-height:50px;width:50px;height:50px;margin-right:1.25rem;color:#10ac84;border-radius:50px;background:rgba(16,172,132,.1)}#rank-math-pro-cta.rank-math-privacy-box .rank-math-cta-body p{font-size:.9375rem;margin:0;color:#5f8c80}.rank-math-indexing-tab #rank-math-unlock-pro-notice{position:relative;display:block;-webkit-box-sizing:border-box;box-sizing:border-box;width:978px;max-width:100%;margin-top:15px;border:3px solid #161e28;border-radius:4px;background:#253142}.rank-math-indexing-tab #rank-math-unlock-pro-notice a{display:block;padding:10px 14px;text-decoration:none;color:#e4e5e7}.rank-math-indexing-tab #rank-math-unlock-pro-notice a:focus{-webkit-box-shadow:none;box-shadow:none}.rank-math-indexing-tab #rank-math-unlock-pro-notice p{font-size:1rem;margin:0}.rank-math-indexing-tab #rank-math-unlock-pro-notice p span{text-decoration:underline;color:#f7d070}.rank-math-indexing-tab #rank-math-unlock-pro-notice .close-notice{display:none}.rank-math-indexing-tab #rank-math-pro-cta{margin-top:0}.rank-math-indexing-tab td.rank-math-col-status{-webkit-filter:blur(2px);filter:blur(2px)}.rank-math-indexing-tab td.rank-math-col-status .rank-math-tooltip:hover span{opacity:0}.rank-math-indexing-tab .rank-math-col-rich-results{min-width:170px}.rank-math-indexing-tab .rank-math-col-rich-results .schema-item{display:block}.rank-math-indexing-tab .rank-math-col-rich-results .schema-item i{margin-right:6px;padding:3px;color:#10ac84;border-radius:3px;background:rgba(16,172,132,.15)}.rank-math-indexing-tab .rank-math-col-rich-results .schema-item.error i{color:#ed5e5e;background:rgba(237,94,94,.15)}.rank-math-indexing-tab .rank-math-col-rich-results .schema-item.warning i{color:#ff9f43;background:rgba(255,159,67,.15)}.rank-math-indexing-tab .rank-math-col-status,.rank-math-indexing-tab .rank-math-col-indexing-allowed,.rank-math-indexing-tab .rank-math-col-crawled-as,.rank-math-indexing-tab .rank-math-col-robots-state{text-align:center}.rank-math-indexing-tab .verdict{font-style:normal;position:relative;display:block;width:100%;text-align:center}.rank-math-indexing-tab .verdict:before{font-family:\"Dashicons\";font-size:16px;line-height:20px;display:inline-block;width:20px;content:\"\uf460\";-webkit-transition:all .2s ease-in-out;transition:all .2s ease-in-out;color:#fff;border-radius:50%;background-color:#ff9f43}.rank-math-indexing-tab .verdict:hover:before{-webkit-box-shadow:0 0 0 4px rgba(255,159,67,.25);box-shadow:0 0 0 4px rgba(255,159,67,.25)}.rank-math-indexing-tab .verdict.neutral:before{background:#b5bfc9}.rank-math-indexing-tab .verdict.neutral:hover:before{-webkit-box-shadow:0 0 0 4px rgba(181,191,201,.25);box-shadow:0 0 0 4px rgba(181,191,201,.25)}.rank-math-indexing-tab .verdict.unspecified:before{font-family:Arial,Helvetica,sans-serif;font-size:14px;font-weight:500;content:\"?\";background:#7f868d}.rank-math-indexing-tab .verdict.unspecified:hover:before{-webkit-box-shadow:0 0 0 4px rgba(127,134,141,.25);box-shadow:0 0 0 4px rgba(127,134,141,.25)}.rank-math-indexing-tab .verdict.pass:before{content:\"\uf15e\";background:#10ac84}.rank-math-indexing-tab .verdict.pass:hover:before{-webkit-box-shadow:0 0 0 4px rgba(16,172,132,.25);box-shadow:0 0 0 4px rgba(16,172,132,.25)}.rank-math-indexing-tab .verdict.fail:before{content:\"\uf335\";background:#ed5e5e}.rank-math-indexing-tab .verdict.fail:hover:before{-webkit-box-shadow:0 0 0 4px rgba(237,94,94,.25);box-shadow:0 0 0 4px rgba(237,94,94,.25)}.rank-math-indexing-tab .verdict.partial:before{content:\"\uf15e\"}.rank-math-indexing-tab .rank-math-tooltip span{width:100px}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict:before{background-color:#dadfe4}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict:hover:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict:hover:before{-webkit-box-shadow:0 0 0 4px rgba(127,134,141,.1);box-shadow:0 0 0 4px rgba(127,134,141,.1)}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.unspecified:hover:before,.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.neutral:hover:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.unspecified:hover:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.neutral:hover:before{-webkit-box-shadow:0 0 0 4px rgba(127,134,141,.1);box-shadow:0 0 0 4px rgba(127,134,141,.1)}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.pass:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.pass:before{content:\"\uf15e\";color:#10ac84;background:rgba(16,172,132,.25)}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.pass:hover:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.pass:hover:before{-webkit-box-shadow:0 0 0 4px rgba(16,172,132,.1);box-shadow:0 0 0 4px rgba(16,172,132,.1)}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.fail:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.fail:before{content:\"\uf335\";color:#ed5e5e;background:rgba(237,94,94,.25)}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.fail:hover:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.fail:hover:before{-webkit-box-shadow:0 0 0 4px rgba(237,94,94,.1);box-shadow:0 0 0 4px rgba(237,94,94,.1)}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.partial:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.partial:before{content:\"\uf15e\";color:#ff9f43;background:rgba(255,159,67,.25)}.rank-math-indexing-tab .rank-math-col-indexing-allowed .verdict.partial:hover:before,.rank-math-indexing-tab .rank-math-col-robots-state .verdict.partial:hover:before{-webkit-box-shadow:0 0 0 4px rgba(255,159,67,.1);box-shadow:0 0 0 4px rgba(255,159,67,.1)}.rank-math-indexing-tab .row-footer{cursor:pointer;background:rgba(248,249,250,.5)}.rank-math-indexing-tab .row-footer td{padding:.825rem .825rem}.rank-math-indexing-tab .last-crawl-data{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.rank-math-indexing-tab .last-crawl-data div:first-child{margin-right:1rem}.rank-math-indexing-tab .inner-elements>td{border-bottom:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements>td:first-child:empty{background:#efeff1}.rank-math-indexing-tab .inner-elements td{padding:0;padding-top:0;padding-bottom:0}.rank-math-indexing-tab .inner-elements td:first-child{border-right:1px solid #dadfe4;background-color:#fafafb}.rank-math-indexing-tab .inner-elements td .indexing-data-wrapper{position:relative}.rank-math-indexing-tab .inner-elements td .indexing-data-wrapper .indexing-data{-webkit-filter:blur(2px);filter:blur(2px)}.rank-math-indexing-tab .inner-elements td .indexing-data h4{display:block;-webkit-box-sizing:border-box;box-sizing:border-box;width:inherit;padding:1rem .825rem;border-bottom:1px solid #dadfe4;background-color:#efeff1}.rank-math-indexing-tab .inner-elements td .indexing-data h4 .rank-math-tooltip{margin-left:3px;color:#069de3}.rank-math-indexing-tab .inner-elements td .indexing-data h4 .rank-math-tooltip:hover em:before{color:#057bb1}.rank-math-indexing-tab .inner-elements td .indexing-data.status div{display:-webkit-box;display:-ms-flexbox;display:flex;border-bottom:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data.status div span{-webkit-box-sizing:border-box;box-sizing:border-box;padding:1rem .825rem}.rank-math-indexing-tab .inner-elements td .indexing-data.status div span:first-child{font-weight:500;width:30%;color:#5a5d70;border-right:1px solid #dadfe4;background-color:#fafafb}.rank-math-indexing-tab .inner-elements td .indexing-data.detected-items>h4{display:none}.rank-math-indexing-tab .inner-elements td .indexing-data.referring-urls ul{max-width:900px;margin:.825rem .825rem .825rem 1.75rem;list-style-type:square;word-break:break-all}.rank-math-indexing-tab .inner-elements td .indexing-data.referring-urls ul li{margin-bottom:.825rem}.rank-math-indexing-tab .inner-elements td .indexing-data.crawled div{padding:1rem .825rem;border-bottom:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data.crawled div i{margin-right:5px;vertical-align:middle}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-header{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-header h4{font-size:1rem;font-weight:500;display:block;width:inherit;width:30%;margin:0;padding:1rem .825rem}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-header h4:first-child{border-right:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-header h4:last-child{width:70%}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper:last-of-type h4{border-bottom:0}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper:last-of-type .schema-data:last-of-type>span,.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper:last-of-type .schema-data:last-of-type>strong{border-bottom:0}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper:last-of-type .schema-data:last-of-type>span+.sub-issues{border-top:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper:last-of-type .sub-issues:last-of-type{border-bottom:0}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper h4{width:30%;border-right:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data{display:-webkit-box;display:-ms-flexbox;display:flex;width:70%;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1;-ms-flex-wrap:wrap;flex-wrap:wrap}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data>span{width:70%}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data strong{-webkit-box-sizing:border-box;box-sizing:border-box;width:30%;padding:1rem .825rem;border-right:1px solid #dadfe4;border-bottom:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data>span{-webkit-box-sizing:border-box;box-sizing:border-box;padding:1rem .825rem;border-bottom:1px solid #dadfe4;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;width:100%;border-bottom:1px solid #dadfe4;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues>span:first-child{font-weight:500;-webkit-box-sizing:border-box;box-sizing:border-box;width:30%;margin-left:-1px;padding:1rem .825rem}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues>span:last-child{display:-webkit-box;display:-ms-flexbox;display:flex;width:70%;border-left:1px solid #dadfe4;-ms-flex-wrap:wrap;flex-wrap:wrap}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues strong{width:30%}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues strong:first-child{width:70%}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details>span{display:-webkit-box;display:-ms-flexbox;display:flex;border-bottom:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details>span:last-of-type{border-bottom:0}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details>span span{-webkit-box-sizing:border-box;box-sizing:border-box;padding:1rem .825rem}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details>span span:first-child{width:70%;border-right:1px solid #dadfe4}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details>span span:last-child{width:30%}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details>span.error span:last-of-type{color:#ed5e5e}.rank-math-indexing-tab .inner-elements td .indexing-data .rich-results-wrapper .rich-results-data .inner-wrapper .schema-data .sub-issues .schema-issues .issue-details>span.warning span:last-of-type{color:#ff9f43}.rank-math-indexing-tab #rank-math-unlock-pro-notice{width:100%;margin-bottom:1.5rem}.rank-math-indexing-tab .rank-math-child-row>td{padding:0}.rank-math-indexing-tab .rank-math-child-row>td table{width:100%}.rank-math-indexing-tab .woocommerce-ellipsis-menu__content .woocommerce-ellipsis-menu__item:last-child,.rank-math-indexing-tab .woocommerce-ellipsis-menu__content .woocommerce-ellipsis-menu__item:nth-last-child(2){pointer-events:none}"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-watcher.php","ext":"php","size":4260,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics Module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Helpers\\Sitepress;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Watcher class.\n *\/\nclass Watcher {\n\n\tuse Hooker;\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Watcher\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Watcher ) ) {\n\t\t\t$instance = new Watcher();\n\t\t\t$instance->hooks();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Hooks\n\t *\/\n\tpublic function hooks() {\n\t\tif ( Authentication::is_authorized() ) {\n\t\t\t$this->action( 'save_post', 'update_post_info', 101 );\n\t\t}\n\t}\n\n\t\/**\n\t * Update post info for analytics.\n\t *\n\t * @param int $post_id Post id.\n\t *\/\n\tpublic function update_post_info( $post_id ) {\n\t\t$status    = get_post_status( $post_id );\n\t\t$post_type = get_post_type( $post_id );\n\t\tif (\n\t\t\t'publish' !== $status ||\n\t\t\twp_is_post_autosave( $post_id ) ||\n\t\t\twp_is_post_revision( $post_id ) ||\n\t\t\t! Helper::is_post_type_accessible( $post_type )\n\t\t) {\n\t\t\tDB::objects()\n\t\t\t\t->where( 'object_type', 'post' )\n\t\t\t\t->where( 'object_id', $post_id )\n\t\t\t\t->delete();\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Get primary focus keyword.\n\t\t$primary_keyword = get_post_meta( $post_id, 'rank_math_focus_keyword', true );\n\t\tif ( $primary_keyword ) {\n\t\t\t$primary_keyword = explode( ',', $primary_keyword );\n\t\t\t$primary_keyword = trim( $primary_keyword[0] );\n\t\t}\n\n\t\t$permalink = $this->get_permalink( $post_id );\n\t\t$page      = str_replace( Helper::get_home_url(), '', urldecode( $permalink ) );\n\n\t\t\/\/ Set argument for object row.\n\t\t$object_args = [\n\t\t\t'id'                  => get_post_meta( $post_id, 'rank_math_analytic_object_id', true ),\n\t\t\t'created'             => get_the_modified_date( 'Y-m-d H:i:s', $post_id ),\n\t\t\t'title'               => get_the_title( $post_id ),\n\t\t\t'page'                => $page,\n\t\t\t'object_type'         => 'post',\n\t\t\t'object_subtype'      => $post_type,\n\t\t\t'object_id'           => $post_id,\n\t\t\t'primary_key'         => $primary_keyword,\n\t\t\t'seo_score'           => $primary_keyword ? get_post_meta( $post_id, 'rank_math_seo_score', true ) : 0,\n\t\t\t'schemas_in_use'      => \\RankMath\\Schema\\DB::get_schema_types( $post_id, true, false ),\n\t\t\t'is_indexable'        => Helper::is_post_indexable( $post_id ),\n\t\t\t'pagespeed_refreshed' => 'NULL',\n\t\t];\n\n\t\t\/\/ Get translated object info in case multi-language plugin is installed.\n\t\t$translated_objects = apply_filters( 'rank_math\/analytics\/get_translated_objects', $post_id );\n\t\tif ( false !== $translated_objects && is_array( $translated_objects ) ) {\n\t\t\t\/\/ Remove current object info from objects table.\n\t\t\tDB::objects()\n\t\t\t\t->where( 'object_id', $post_id )\n\t\t\t\t->delete();\n\n\t\t\tforeach ( $translated_objects as $obj ) {\n\t\t\t\t$object_args['title'] = $obj['title'];\n\t\t\t\t$object_args['page']  = $obj['url'];\n\n\t\t\t\tDB::add_object( $object_args );\n\t\t\t}\n\n\t\t\t\/\/ Here we don't need to add `rank_math_analytic_object_id` post meta, because we always remove old translated objects info and add new one, in case of multi-lanauge.\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Update post from objects table.\n\t\t$id = DB::update_object( $object_args );\n\n\t\tif ( $id > 0 ) {\n\t\t\tupdate_post_meta( $post_id, 'rank_math_analytic_object_id', $id );\n\t\t}\n\t}\n\n\t\/**\n\t * Get permalink.\n\t *\n\t * @param int $post_id   Post ID.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_permalink( $post_id ) {\n\t\t$permalink = get_permalink( $post_id );\n\n\t\tif ( ! Sitepress::get()->is_active() ) {\n\t\t\treturn $permalink;\n\t\t}\n\n\t\t$sitepress = Sitepress::get()->get_var();\n\n\t\t$language_domains = $sitepress->get_setting( 'language_domains', [] );\n\t\tif ( ! $language_domains ) {\n\t\t\treturn $permalink;\n\t\t}\n\n\t\t$details   = apply_filters( 'wpml_post_language_details', null, $post_id );\n\t\t$code      = $details['language_code'] ?? '';\n\t\t$permalink = apply_filters( 'wpml_permalink', get_the_permalink( $post_id ), $code );\n\t\tforeach ( $language_domains as $key => $domain ) {\n\t\t\t$permalink = preg_replace( \"#https?:\/\/{$domain}#i\", '', $permalink );\n\t\t}\n\n\t\treturn $permalink;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-keywords.php","ext":"php","size":9319,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics Module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse WP_REST_Request;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Analytics\\Stats;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Keywords class.\n *\n * @method get_analytics_data()\n *\/\nclass Keywords extends Posts {\n\n\t\/**\n\t * Get most recent day's keywords.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_recent_keywords() {\n\t\tglobal $wpdb;\n\n\t\t$query = $wpdb->prepare(\n\t\t\t\"SELECT query\n\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\tWHERE DATE(created) = (SELECT MAX(DATE(created)) FROM {$wpdb->prefix}rank_math_analytics_gsc WHERE created BETWEEN %s AND %s)\n\t\t\tGROUP BY query\",\n\t\t\tStats::get()->start_date,\n\t\t\tStats::get()->end_date\n\t\t);\n\t\t$data  = DB_Helper::get_results( $query );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get keywords data.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function get_keywords_rows( WP_REST_Request $request ) {\n\t\t\/\/ Get most recent day's keywords only.\n\t\t$keywords = $this->get_recent_keywords();\n\t\t$keywords = wp_list_pluck( $keywords, 'query' );\n\t\t$keywords = array_map( 'esc_sql', $keywords );\n\t\t$keywords = array_map( 'mb_strtolower', $keywords );\n\t\t$per_page = 25;\n\n\t\t$cache_args             = $request->get_params();\n\t\t$cache_args['per_page'] = $per_page;\n\n\t\t$cache_group = 'rank_math_rest_keywords_rows';\n\t\t$cache_key   = $this->generate_hash( $cache_args );\n\t\t$rows        = $this->get_cache( $cache_key, $cache_group );\n\t\tif ( empty( $rows ) ) {\n\t\t\t$rows = $this->get_analytics_data(\n\t\t\t\t[\n\t\t\t\t\t'dimension' => 'query',\n\t\t\t\t\t'objects'   => false,\n\t\t\t\t\t'pageview'  => false,\n\t\t\t\t\t'orderBy'   => ! empty( $request->get_param( 'orderby' ) ) ? $request->get_param( 'orderby' ) : 'impressions',\n\t\t\t\t\t'order'     => in_array( $request->get_param( 'order' ), [ 'asc', 'desc' ], true ) ? strtoupper( $request->get_param( 'order' ) ) : 'DESC',\n\t\t\t\t\t'offset'    => ( $request->get_param( 'page' ) - 1 ) * $per_page,\n\t\t\t\t\t'perpage'   => $per_page,\n\t\t\t\t\t'sub_where' => \" AND query IN ('\" . join( \"', '\", $keywords ) . \"')\",\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$rows = apply_filters( 'rank_math\/analytics\/keywords', $rows );\n\t\tif ( empty( $rows ) ) {\n\t\t\t$rows['response'] = 'No Data';\n\t\t}\n\t\treturn $rows;\n\t}\n\n\t\/**\n\t * Get top keywords overview filtered by keyword position range.\n\t *\n\t * @return object\n\t *\/\n\tpublic function get_top_keywords() {\n\t\tglobal $wpdb;\n\n\t\t$cache_key = $this->get_cache_key( 'top_keywords', $this->days . 'days' );\n\t\t$cache     = get_transient( $cache_key );\n\n\t\tif ( false !== $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t\/\/ Get current keywords count filtered by position range.\n\t\t$query = $wpdb->prepare(\n\t\t\t\"SELECT COUNT(t1.query) AS total,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN t1.position BETWEEN 1 AND 3 THEN 'top3'\n\t\t\t\t\tWHEN t1.position BETWEEN 4 AND 10 THEN 'top10'\n\t\t\t\t\tWHEN t1.position BETWEEN 11 AND 50 THEN 'top50'\n\t\t\t\t\tWHEN t1.position BETWEEN 51 AND 100 THEN 'top100'\n\t\t\t\t\tELSE 'none'\n\t\t\t\tEND AS position_type\n\t\t\tFROM (SELECT query, ROUND( AVG(position), 0 ) AS position \n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\tWHERE created BETWEEN %s AND %s AND DATE(created) = (SELECT MAX(DATE(created)) FROM {$wpdb->prefix}rank_math_analytics_gsc WHERE created BETWEEN %s AND %s)\n\t\t\t\tGROUP BY query \n\t\t\t\tORDER BY position) as t1\n\t\t\tGROUP BY position_type\",\n\t\t\t$this->start_date,\n\t\t\t$this->end_date,\n\t\t\t$this->start_date,\n\t\t\t$this->end_date\n\t\t);\n\t\t$data  = DB_Helper::get_results( $query );\n\n\t\t\/\/ Get compare keywords count filtered by position range.\n\t\t$query   = $wpdb->prepare(\n\t\t\t\"SELECT COUNT(t1.query) AS total,\n\t\t\t\tCASE\n\t\t\t\t\tWHEN t1.position BETWEEN 1 AND 3 THEN 'top3'\n\t\t\t\t\tWHEN t1.position BETWEEN 4 AND 10 THEN 'top10'\n\t\t\t\t\tWHEN t1.position BETWEEN 11 AND 50 THEN 'top50'\n\t\t\t\t\tWHEN t1.position BETWEEN 51 AND 100 THEN 'top100'\n\t\t\t\t\tELSE 'none'\n\t\t\t\tEND AS position_type\n\t\t\tFROM (SELECT query, ROUND( AVG(position), 0 ) AS position \n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\tWHERE created BETWEEN %s AND %s AND DATE(created) = (SELECT MAX(DATE(created)) FROM {$wpdb->prefix}rank_math_analytics_gsc WHERE created BETWEEN %s AND %s)\n\t\t\t\tGROUP BY query \n\t\t\t\tORDER BY position) as t1\n\t\t\tGROUP BY position_type\",\n\t\t\t$this->compare_start_date,\n\t\t\t$this->compare_end_date,\n\t\t\t$this->compare_start_date,\n\t\t\t$this->compare_end_date\n\t\t);\n\t\t$compare = DB_Helper::get_results( $query );\n\n\t\t$positions = [\n\t\t\t'top3'          => [\n\t\t\t\t'total'      => 0,\n\t\t\t\t'difference' => 0,\n\t\t\t],\n\t\t\t'top10'         => [\n\t\t\t\t'total'      => 0,\n\t\t\t\t'difference' => 0,\n\t\t\t],\n\t\t\t'top50'         => [\n\t\t\t\t'total'      => 0,\n\t\t\t\t'difference' => 0,\n\t\t\t],\n\t\t\t'top100'        => [\n\t\t\t\t'total'      => 0,\n\t\t\t\t'difference' => 0,\n\t\t\t],\n\t\t\t'ctr'           => 0,\n\t\t\t'ctrDifference' => 0,\n\t\t];\n\n\t\t\/\/ Calculate total and difference for each position range.\n\t\t$positions = $this->get_top_position_total( $positions, $data, 'total' );\n\t\t$positions = $this->get_top_position_total( $positions, $compare, 'difference' );\n\n\t\t\/\/ Get CTR.\n\t\t$positions['ctr'] = DB::analytics()\n\t\t\t->selectAvg( 'ctr', 'ctr' )\n\t\t\t->whereBetween( 'created', [ $this->start_date, $this->end_date ] )\n\t\t\t->getVar();\n\n\t\t\/\/ Get compare CTR.\n\t\t$positions['ctrDifference'] = DB::analytics()\n\t\t\t->selectAvg( 'ctr', 'ctr' )\n\t\t\t->whereBetween( 'created', [ $this->compare_start_date, $this->compare_end_date ] )\n\t\t\t->getVar();\n\n\t\t\/\/ Calculate current CTR and CTR difference.\n\t\t$positions['ctr']           = empty( $positions['ctr'] ) ? 0 : $positions['ctr'];\n\t\t$positions['ctrDifference'] = empty( $positions['ctrDifference'] ) ? 0 : $positions['ctrDifference'];\n\t\t$positions['ctrDifference'] = $positions['ctr'] - $positions['ctrDifference'];\n\n\t\tset_transient( $cache_key, $positions, DAY_IN_SECONDS );\n\n\t\treturn $positions;\n\t}\n\n\t\/**\n\t * Get position graph\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_top_position_graph() {\n\t\tglobal $wpdb;\n\n\t\t$cache_key = $this->get_cache_key( 'top_keywords_graph', $this->days . 'days' );\n\t\t$cache     = get_transient( $cache_key );\n\n\t\tif ( false !== $cache ) {\n\t\t\treturn $cache;\n\t\t}\n\n\t\t\/\/ Step1. Get splitted date intervals for graph within selected date range.\n\t\t$intervals     = $this->get_intervals();\n\t\t$sql_daterange = $this->get_sql_date_intervals( $intervals );\n\n\t\t\/\/ Step2. Get most recent days for each splitted date intervals.\n\t\t\/\/ phpcs:disable\n\t\t$query = $wpdb->prepare(\n\t\t\t\"SELECT MAX(DATE(created)) as date, {$sql_daterange}\n\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\tWHERE created BETWEEN %s AND %s\n\t\t\tGROUP BY range_group\",\n\t\t\t$this->start_date,\n\t\t\t$this->end_date\n\t\t);\n\t\t$position_dates = DB_Helper::get_results( $query, ARRAY_A );\n\t\t\/\/ phpcs:enable\n\n\t\tif ( count( $position_dates ) === 0 ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$dates = [];\n\t\tforeach ( $position_dates as $row ) {\n\t\t\tarray_push( $dates, $row['date'] );\n\t\t}\n\t\t$dates = '(\\'' . join( '\\', \\'', $dates ) . '\\')';\n\n\t\t\/\/ Step3. Get keywords count filtered by position range group for each date.\n\t\t\/\/ phpcs:disable\n\t\t$query = $wpdb->prepare(\n\t\t\t\"SELECT COUNT(t.query) AS total, t.date, \n\t\t\t\tCASE\n\t\t\t\t\tWHEN t.position BETWEEN 1 AND 3 THEN 'top3'\n\t\t\t\t\tWHEN t.position BETWEEN 4 AND 10 THEN 'top10'\n\t\t\t\t\tWHEN t.position BETWEEN 11 AND 50 THEN 'top50'\n\t\t\t\t\tWHEN t.position BETWEEN 51 AND 100 THEN 'top100'\n\t\t\t\t\tELSE 'none'\n\t\t\t\tEND AS position_type\n\t\t\tFROM (\n\t\t\t\tSELECT query, ROUND( AVG(position), 0 ) AS position, Date(created) as date\n\t\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\t\tWHERE created BETWEEN %s AND %s AND DATE(created) IN {$dates}\n\t\t\t\tGROUP BY DATE(created), query) AS t\n\t\t\tGROUP BY t.date, position_type\",\n\t\t\t$this->start_date,\n\t\t\t$this->end_date\n\t\t);\n\t\t$position_data = DB_Helper::get_results( $query );\n\t\t\/\/ phpcs:enable\n\n\t\t\/\/ Construct return data.\n\t\t$data = $this->get_date_array(\n\t\t\t$intervals['dates'],\n\t\t\t[\n\t\t\t\t'top3'   => 0,\n\t\t\t\t'top10'  => 0,\n\t\t\t\t'top50'  => 0,\n\t\t\t\t'top100' => 0,\n\t\t\t]\n\t\t);\n\n\t\tforeach ( $position_data as $row ) {\n\t\t\tif ( ! isset( $intervals['map'][ $row->date ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$date = $intervals['map'][ $row->date ];\n\n\t\t\tif ( ! isset( $data[ $date ][ $row->position_type ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$key = $row->position_type;\n\n\t\t\t$data[ $date ][ $key ] = $row->total;\n\t\t}\n\n\t\t$data = array_values( $data );\n\t\tset_transient( $cache_key, $data, DAY_IN_SECONDS );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get top position total.\n\t *\n\t * @param  array  $positions Position array.\n\t * @param  array  $rows      Data to process.\n\t * @param  string $where     What data to get total.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_top_position_total( $positions, $rows, $where ) {\n\t\tforeach ( $rows as $row ) {\n\t\t\t$positions[ $row->position_type ][ $where ] = $row->total;\n\t\t}\n\n\t\tif ( 'difference' === $where ) {\n\t\t\t$positions['top3']['difference']   = $positions['top3']['total'] - $positions['top3']['difference'];\n\t\t\t$positions['top10']['difference']  = $positions['top10']['total'] - $positions['top10']['difference'];\n\t\t\t$positions['top50']['difference']  = $positions['top50']['total'] - $positions['top50']['difference'];\n\t\t\t$positions['top100']['difference'] = $positions['top100']['total'] - $positions['top100']['difference'];\n\t\t}\n\n\t\treturn $positions;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-posts.php","ext":"php","size":2968,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics Module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse stdClass;\nuse WP_Error;\nuse WP_REST_Request;\nuse RankMath\\Helper;\nuse RankMath\\Analytics\\DB;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Posts class.\n *\n * @method get_analytics_data()\n *\/\nclass Posts extends Objects {\n\n\t\/**\n\t * Get post data.\n\t *\n\t * @param  WP_REST_Request $request post object.\n\t *\n\t * @return object\n\t *\/\n\tpublic function get_post( $request ) {\n\t\t$id   = $request->get_param( 'id' );\n\t\t$post = DB::objects()\n\t\t\t->where( 'object_id', $id )\n\t\t\t->one();\n\n\t\tif ( is_null( $post ) ) {\n\t\t\treturn [ 'errorMessage' => esc_html__( 'Sorry, no post found for given id.', 'rank-math' ) ];\n\t\t}\n\n\t\t$post->admin_url = admin_url();\n\t\t$post->home_url  = home_url();\n\n\t\treturn apply_filters( 'rank_math\/analytics\/post_data', (array) $post, $request );\n\t}\n\n\t\/**\n\t * Get posts by objects.\n\t *\n\t * @param WP_REST_Request $request Full details about the request.\n\t *\n\t * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.\n\t *\/\n\tpublic function get_posts_rows_by_objects( WP_REST_Request $request ) {\n\t\t$pre = apply_filters( 'rank_math\/analytics\/get_posts_rows_by_objects', false, $request );\n\t\tif ( false !== $pre ) {\n\t\t\treturn $pre;\n\t\t}\n\n\t\t$cache_group = 'rank_math_posts_rows_by_objects';\n\t\t$cache_key   = $this->generate_hash( $request );\n\t\t$data        = $this->get_cache( $cache_key, $cache_group );\n\t\tif ( false !== $data ) {\n\t\t\treturn rest_ensure_response( $data );\n\t\t}\n\n\t\t\/\/ Pagination.\n\t\t$per_page = 25;\n\t\t$offset   = ( $request->get_param( 'page' ) - 1 ) * $per_page;\n\n\t\t\/\/ Get objects filtered by seo score range and it's analytics data.\n\t\t$objects = $this->get_objects_by_score( $request );\n\t\t$pages   = \\array_keys( $objects['rows'] );\n\t\t$console = $this->get_analytics_data(\n\t\t\t[\n\t\t\t\t'offset'    => 0, \/\/ Here offset should always zero.\n\t\t\t\t'perpage'   => $objects['rowsFound'],\n\t\t\t\t'sub_where' => \" AND page IN ('\" . join( \"', '\", $pages ) . \"')\",\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Construct return data.\n\t\t$new_rows = [];\n\t\tforeach ( $objects['rows'] as $object ) {\n\t\t\t$page = $object['page'];\n\n\t\t\tif ( isset( $console[ $page ] ) ) {\n\t\t\t\t$object = \\array_merge( $console[ $page ], $object );\n\t\t\t}\n\n\t\t\tif ( ! isset( $object['links'] ) ) {\n\t\t\t\t$object['links'] = new stdClass();\n\t\t\t}\n\n\t\t\t$new_rows[ $page ] = $object;\n\t\t}\n\n\t\t$count = count( $new_rows );\n\n\t\tif ( $offset + 25 <= $count ) {\n\t\t\t$new_rows = array_slice( $new_rows, $offset, 25 );\n\n\t\t} else {\n\t\t\t$rest     = $count - $offset;\n\t\t\t$new_rows = array_slice( $new_rows, $offset, $rest );\n\t\t}\n\t\tif ( empty( $new_rows ) ) {\n\t\t\t$new_rows['response'] = 'No Data';\n\t\t}\n\n\t\t$output = [\n\t\t\t'rows'      => $new_rows,\n\t\t\t'rowsFound' => $objects['rowsFound'],\n\t\t];\n\n\t\t$this->set_cache( $cache_key, $output, $cache_group, DAY_IN_SECONDS );\n\n\t\treturn rest_ensure_response( $output );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-gtag.php","ext":"php","size":10386,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The GTag\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright 2019 Google LLC\n * The following code is a derivative work of the code from the Site Kit Plugin(https:\/\/sitekit.withgoogle.com), which is licensed under Apache License 2.0.\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse AMP_Theme_Support;\nuse AMP_Options_Manager;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * GTag class.\n *\/\nclass GTag {\n\n\tuse Hooker;\n\n\t\/**\n\t * Primary \"standard\" AMP website mode.\n\t *\n\t * @var string\n\t *\/\n\tconst AMP_MODE_PRIMARY = 'primary';\n\n\t\/**\n\t * Secondary AMP website mode.\n\t *\n\t * @var string\n\t *\/\n\tconst AMP_MODE_SECONDARY = 'secondary';\n\n\t\/**\n\t * Options.\n\t *\n\t * @var array\n\t *\/\n\tprivate $options = null;\n\n\t\/**\n\t * Internal flag set after gtag amp print for the first time.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $did_amp_gtag = false;\n\n\t\/**\n\t * The Constructor\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'template_redirect', 'add_analytics_tag' );\n\t}\n\n\t\/**\n\t * Add analytics tag.\n\t *\/\n\tpublic function add_analytics_tag() {\n\t\t\/\/ Early Bail!!\n\t\t$use_snippet = $this->get( 'install_code' );\n\t\tif ( ! $use_snippet ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$property_id = $this->get( 'property_id' );\n\t\tif ( ! $property_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'wp_head', 'print_tracking_opt_out', 0 ); \/\/ For non-AMP and AMP.\n\t\t$this->action( 'web_stories_story_head', 'print_tracking_opt_out', 0 ); \/\/ For Web Stories plugin.\n\n\t\tif ( $this->is_amp() ) {\n\t\t\t$this->action( 'amp_print_analytics', 'print_amp_gtag' ); \/\/ For all AMP modes.\n\t\t\t$this->action( 'wp_footer', 'print_amp_gtag', 20 ); \/\/ For AMP Standard and Transitional.\n\t\t\t$this->action( 'amp_post_template_footer', 'print_amp_gtag', 20 ); \/\/ For AMP Reader.\n\t\t\t$this->action( 'web_stories_print_analytics', 'print_amp_gtag' ); \/\/ For Web Stories plugin.\n\n\t\t\t\/\/ Load amp-analytics component for AMP Reader.\n\t\t\t$this->filter( 'amp_post_template_data', 'amp_analytics_component_data' );\n\t\t} elseif ( version_compare( get_bloginfo( 'version' ), '5.7', '<' ) ) {\n\t\t\t$this->action( 'wp_enqueue_scripts', 'enqueue_gtag_js' );\n\t\t} else {\n\t\t\t$this->action( 'wp_head', 'add_gtag_js' );\n\t\t}\n\t}\n\n\t\/**\n\t * Print gtag <amp-analytics> tag.\n\t *\/\n\tpublic function print_amp_gtag() {\n\t\tif ( $this->did_amp_gtag ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->did_amp_gtag = true;\n\n\t\t$property_id  = $this->get( 'property_id' );\n\t\t$gtag_options = [\n\t\t\t'vars'            => [\n\t\t\t\t'gtag_id' => $property_id,\n\t\t\t\t'config'  => [\n\t\t\t\t\t$property_id => [\n\t\t\t\t\t\t'groups' => 'default',\n\t\t\t\t\t\t'linker' => [\n\t\t\t\t\t\t\t'domains' => [ $this->get_home_domain() ],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t\t'optoutElementId' => '__gaOptOutExtension',\n\t\t];\n\t\t?>\n\t\t<amp-analytics type=\"gtag\" data-credentials=\"include\">\n\t\t\t<script type=\"application\/json\">\n\t\t\t\t<?php echo wp_json_encode( $gtag_options ); ?>\n\t\t\t<\/script>\n\t\t<\/amp-analytics>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Loads AMP analytics script if opted in.\n\t *\n\t * @param array $data AMP template data.\n\t * @return array Filtered $data.\n\t *\/\n\tpublic function amp_analytics_component_data( $data ) {\n\t\tif ( isset( $data['amp_component_scripts']['amp-analytics'] ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$data['amp_component_scripts']['amp-analytics'] = 'https:\/\/cdn.ampproject.org\/v0\/amp-analytics-0.1.js';\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Print gtag snippet for non-amp. Used only for WordPress 5.7 or above.\n\t *\/\n\tpublic function add_gtag_js() {\n\t\tif ( $this->is_tracking_disabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$gtag_script_info = $this->get_gtag_info();\n\n\t\twp_print_script_tag(\n\t\t\t[\n\t\t\t\t'id'    => 'google_gtagjs',\n\t\t\t\t'src'   => $gtag_script_info['url'],\n\t\t\t\t'async' => true,\n\t\t\t]\n\t\t);\n\n\t\twp_print_inline_script_tag(\n\t\t\t$gtag_script_info['inline'],\n\t\t\t[\n\t\t\t\t'id' => 'google_gtagjs-inline',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Print gtag snippet for non-amp. Used for below WordPress 5.7.\n\t *\/\n\tpublic function enqueue_gtag_js() {\n\t\tif ( $this->is_tracking_disabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$gtag_script_info = $this->get_gtag_info();\n\n\t\twp_enqueue_script( \/\/ phpcs:ignore WordPress.WP.EnqueuedResourceParameters.MissingVersion\n\t\t\t'google_gtagjs',\n\t\t\t$gtag_script_info['url'],\n\t\t\tfalse,\n\t\t\tnull, \/\/ phpcs:ignore\n\t\t\tfalse\n\t\t);\n\n\t\twp_add_inline_script(\n\t\t\t'google_gtagjs',\n\t\t\t$gtag_script_info['inline']\n\t\t);\n\t}\n\n\t\/**\n\t * Gets the current AMP mode.\n\t *\n\t * @return bool|string 'primary' if in standard mode,\n\t *                     'secondary' if in transitional or reader modes\n\t *                     false if AMP not active, or unknown mode\n\t *\/\n\tpublic function get_amp_mode() {\n\t\tif ( ! class_exists( 'AMP_Theme_Support' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$exposes_support_mode = defined( 'AMP_Theme_Support::STANDARD_MODE_SLUG' )\n\t\t\t&& defined( 'AMP_Theme_Support::TRANSITIONAL_MODE_SLUG' )\n\t\t\t&& defined( 'AMP_Theme_Support::READER_MODE_SLUG' );\n\n\t\tif ( defined( 'AMP__VERSION' ) ) {\n\t\t\t$amp_plugin_version = AMP__VERSION;\n\t\t\tif ( strpos( $amp_plugin_version, '-' ) !== false ) {\n\t\t\t\t$amp_plugin_version = explode( '-', $amp_plugin_version )[0];\n\t\t\t}\n\n\t\t\t$amp_plugin_version_2_or_higher = version_compare( $amp_plugin_version, '2.0.0', '>=' );\n\t\t} else {\n\t\t\t$amp_plugin_version_2_or_higher = false;\n\t\t}\n\n\t\tif ( $amp_plugin_version_2_or_higher ) {\n\t\t\t$exposes_support_mode = class_exists( 'AMP_Options_Manager' )\n\t\t\t\t&& method_exists( 'AMP_Options_Manager', 'get_option' )\n\t\t\t\t&& $exposes_support_mode;\n\t\t} else {\n\t\t\t$exposes_support_mode = class_exists( 'AMP_Theme_Support' )\n\t\t\t\t&& method_exists( 'AMP_Theme_Support', 'get_support_mode' )\n\t\t\t\t&& $exposes_support_mode;\n\t\t}\n\n\t\tif ( $exposes_support_mode ) {\n\t\t\t\/\/ If recent version, we can properly detect the mode.\n\t\t\tif ( $amp_plugin_version_2_or_higher ) {\n\t\t\t\t$mode = AMP_Options_Manager::get_option( 'theme_support' );\n\t\t\t} else {\n\t\t\t\t$mode = AMP_Theme_Support::get_support_mode();\n\t\t\t}\n\n\t\t\tif ( AMP_Theme_Support::STANDARD_MODE_SLUG === $mode ) {\n\t\t\t\treturn self::AMP_MODE_PRIMARY;\n\t\t\t}\n\n\t\t\tif ( in_array( $mode, [ AMP_Theme_Support::TRANSITIONAL_MODE_SLUG, AMP_Theme_Support::READER_MODE_SLUG ], true ) ) {\n\t\t\t\treturn self::AMP_MODE_SECONDARY;\n\t\t\t}\n\t\t} elseif ( function_exists( 'amp_is_canonical' ) ) {\n\t\t\t\/\/ On older versions, if it is not primary AMP, it is definitely secondary AMP (transitional or reader mode).\n\t\t\tif ( amp_is_canonical() ) {\n\t\t\t\treturn self::AMP_MODE_PRIMARY;\n\t\t\t}\n\n\t\t\treturn self::AMP_MODE_SECONDARY;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Is AMP url.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function is_amp() {\n\t\tif ( is_singular( 'web-story' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn function_exists( 'is_amp_endpoint' ) && is_amp_endpoint();\n\t}\n\n\t\/**\n\t * Is tracking disabled.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function is_tracking_disabled() {\n\t\tif ( ! $this->get( 'exclude_loggedin' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$logged_in    = is_user_logged_in();\n\t\t$filter_match = false;\n\t\tif ( $logged_in ) {\n\t\t\tif ( ! function_exists( 'get_editable_roles' ) ) {\n\t\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/user.php'; \/\/ @phpstan-ignore-line\n\t\t\t}\n\n\t\t\t$all_roles    = array_keys( get_editable_roles() );\n\t\t\t$all_roles    = array_combine( $all_roles, $all_roles ); \/\/ Copy values to keys for easier filtering.\n\t\t\t$user_roles   = array_flip( get_userdata( get_current_user_id() )->roles );\n\t\t\t$filter_match = count( array_intersect_key( (array) $this->do_filter( 'analytics\/gtag_exclude_loggedin_roles', $all_roles ), $user_roles ) );\n\t\t}\n\n\t\treturn $filter_match;\n\t}\n\n\t\/**\n\t * Gets the hostname of the home URL.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_home_domain() {\n\t\treturn wp_parse_url( home_url(), PHP_URL_HOST );\n\t}\n\n\t\/**\n\t * Get option\n\t *\n\t * @param  string $id Option to get.\n\t *\n\t * @return mixed\n\t *\/\n\tprotected function get( $id ) {\n\t\tif ( is_null( $this->options ) ) {\n\t\t\t$this->options = $this->normalize_it( get_option( 'rank_math_google_analytic_options', [] ) );\n\t\t}\n\n\t\t$value = isset( $this->options[ $id ] ) ? $this->options[ $id ] : false;\n\t\tif ( $value && 'property_id' === $id ) {\n\t\t\t$value = $this->get( 'measurement_id' );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Get gtag script info\n\t *\n\t * @return mixed\n\t *\/\n\tprotected function get_gtag_info() {\n\t\t\/\/ Get Google Analytics Property ID.\n\t\t$property_id = $this->get( 'property_id' );\n\n\t\t\/\/ Get main gtag script Url.\n\t\t$url = 'https:\/\/www.googletagmanager.com\/gtag\/js?id=' . esc_attr( $property_id );\n\n\t\t$gtag_opt = [];\n\t\tif ( $this->get_amp_mode() ) {\n\t\t\t$gtag_opt['linker'] = [\n\t\t\t\t'domains' => [ $this->get_home_domain() ],\n\t\t\t];\n\t\t}\n\n\t\t$gtag_inline_linker_script = '';\n\t\tif ( ! empty( $gtag_opt['linker'] ) ) {\n\t\t\t$gtag_inline_linker_script = 'gtag(\\'set\\', \\'linker\\', ' . wp_json_encode( $gtag_opt['linker'] ) . ' );';\n\t\t}\n\t\tunset( $gtag_opt['linker'] );\n\n\t\t\/\/ Get Google Analytics Property ID.\n\t\t$gtag_config = [];\n\t\t$gtag_config = $this->do_filter( 'analytics\/gtag_config', $gtag_config );\n\n\t\t\/\/ Construct inline scripts.\n\t\t$gtag_inline_script  = 'window.dataLayer = window.dataLayer || [];function gtag(){dataLayer.push(arguments);}';\n\t\t$gtag_inline_script .= $gtag_inline_linker_script;\n\t\t$gtag_inline_script .= 'gtag(\\'js\\', new Date());';\n\t\t$gtag_inline_script .= 'gtag(\\'config\\', \\'' . esc_attr( $property_id ) . '\\', {' . join( ', ', $gtag_config ) . '} );';\n\n\t\t$gtag = $this->do_filter(\n\t\t\t'analytics\/gtag',\n\t\t\t[\n\t\t\t\t'url'    => $url,\n\t\t\t\t'inline' => $gtag_inline_script,\n\t\t\t]\n\t\t);\n\n\t\treturn $gtag;\n\t}\n\n\t\/**\n\t * Normalize option data\n\t *\n\t * @param mixed $options Array to normalize.\n\t * @return mixed\n\t *\/\n\tprotected function normalize_it( $options ) {\n\t\tforeach ( (array) $options as $key => $value ) {\n\t\t\t$options[ $key ] = is_array( $value ) ? $this->normalize_it( $value ) : Helper::normalize_data( $value );\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\t\/**\n\t * Print the user tracking opt-out code\n\t *\n\t * This script opts out of all Google Analytics tracking, for all measurement IDs, regardless of implementation.\n\t *\n\t * @link https:\/\/developers.google.com\/analytics\/devguides\/collection\/analyticsjs\/user-opt-out\n\t *\/\n\tpublic function print_tracking_opt_out() {\n\t\tif ( ! $this->is_tracking_disabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $this->is_amp() ) :\n\t\t\t?>\n\t\t<script type=\"application\/ld+json\" id=\"__gaOptOutExtension\"><\/script>\n\t\t<?php else : ?>\n\t\t<script type=\"text\/javascript\">window['ga-disable-<?php echo esc_js( $this->get( 'property_id' ) ); ?>'] = true;<\/script>\n\t\t\t<?php\n\t\tendif;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/workflows\/class-inspections.php","ext":"php","size":6301,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Google Search Console.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\Analytics\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics\\Workflow;\n\nuse Exception;\nuse RankMath\\Helpers\\DB;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Analytics\\Workflow\\Base;\nuse RankMath\\Analytics\\DB as AnalyticsDB;\nuse RankMath\\Analytics\\Url_Inspection;\nuse RankMath\\Google\\Console;\nuse RankMath\\Helpers\\Schedule;\n\nuse function as_unschedule_all_actions;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Inspections class.\n *\/\nclass Inspections {\n\n\tuse Hooker;\n\n\t\/**\n\t * API Limit.\n\t * 600 requests per minute, 2000 per day.\n\t * We can ignore the per-minute limit, since we will use a few seconds delay after each request.\n\t *\/\n\tconst API_LIMIT = 2000;\n\n\t\/**\n\t * Interval between requests.\n\t *\/\n\tconst REQUEST_GAP_SECONDS = 7;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$this->create_tables();\n\n\t\t\/\/ If console is not connected, ignore all, no need to proceed.\n\t\tif ( ! Console::is_console_connected() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'rank_math\/analytics\/workflow\/create_tables', 'create_tables' );\n\t\t$this->action( 'rank_math\/analytics\/workflow\/inspections', 'create_tables', 6, 0 );\n\t\t$this->action( 'rank_math\/analytics\/workflow\/inspections', 'create_data_jobs', 10, 0 );\n\t}\n\n\t\/**\n\t * Unschedule all inspections data fetch action.\n\t *\n\t * Stop processing queue items, clear cronjob and delete all batches.\n\t *\/\n\tpublic static function kill_jobs() {\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/get_inspections_data' );\n\t}\n\n\t\/**\n\t * Create tables.\n\t *\/\n\tpublic function create_tables() {\n\t\tglobal $wpdb;\n\n\t\t$collate = $wpdb->get_charset_collate();\n\t\t$table   = 'rank_math_analytics_inspections';\n\n\t\t\/\/ Early Bail!!\n\t\tif ( DB::check_table_exists( $table ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$schema = \"CREATE TABLE {$wpdb->prefix}{$table} (\n\t\t\t\tid bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\tpage varchar(500) NOT NULL,\n\t\t\t\tcreated timestamp NOT NULL, \n                index_verdict varchar(64) NOT NULL,            \/* PASS, PARTIAL, FAIL, NEUTRAL, VERDICT_UNSPECIFIED *\/\n                indexing_state varchar(64) NOT NULL,           \/* INDEXING_ALLOWED, BLOCKED_BY_META_TAG, BLOCKED_BY_HTTP_HEADER, BLOCKED_BY_ROBOTS_TXT, INDEXING_STATE_UNSPECIFIED *\/\n                coverage_state text NOT NULL,                  \/* String, e.g. 'Submitted and indexed'. *\/\n                page_fetch_state varchar(64) NOT NULL,         \/* SUCCESSFUL, SOFT_404, BLOCKED_ROBOTS_TXT, NOT_FOUND, ACCESS_DENIED, SERVER_ERROR, REDIRECT_ERROR, ACCESS_FORBIDDEN, BLOCKED_4XX, INTERNAL_CRAWL_ERROR, INVALID_URL, PAGE_FETCH_STATE_UNSPECIFIED *\/\n                robots_txt_state varchar(64) NOT NULL,         \/* ALLOWED, DISALLOWED, ROBOTS_TXT_STATE_UNSPECIFIED *\/\n                rich_results_verdict varchar(64) NOT NULL,     \/* PASS, PARTIAL, FAIL, NEUTRAL, VERDICT_UNSPECIFIED *\/\n                rich_results_items longtext NOT NULL,          \/* JSON *\/\n                last_crawl_time timestamp NOT NULL,\n                crawled_as varchar(64) NOT NULL,               \/* DESKTOP, MOBILE, CRAWLING_USER_AGENT_UNSPECIFIED *\/\n                google_canonical text NOT NULL,                \/* Google-chosen canonical URL. *\/\n                user_canonical text NOT NULL,                  \/* Canonical URL declared on-page. *\/\n                sitemap text NOT NULL,                         \/* Sitemap URL. *\/\n                referring_urls longtext NOT NULL,              \/* JSON *\/\n\t\t\t\traw_api_response longtext NOT NULL,            \/* JSON *\/\n                PRIMARY KEY  (id),\n\t\t\t\tKEY analytics_object_page (page(190)),\n\t\t\t\tKEY created (created),\n                KEY index_verdict (index_verdict),\n                KEY page_fetch_state (page_fetch_state),\n                KEY robots_txt_state (robots_txt_state),\n                KEY rich_results_verdict (rich_results_verdict)\n            ) $collate;\";\n\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/upgrade.php'; \/\/ @phpstan-ignore-line\n\t\ttry {\n\t\t\tdbDelta( $schema );\n\t\t} catch ( Exception $e ) { \/\/ phpcs:ignore\n\t\t\t\/\/ Will log.\n\t\t}\n\n\t\t\/\/ Make sure that collations match the objects table.\n\t\t$objects_coll = DB::get_table_collation( 'rank_math_analytics_objects' );\n\t\tDB::check_collation( $table, 'all', $objects_coll );\n\t}\n\n\t\/**\n\t * Create jobs to fetch data.\n\t *\/\n\tpublic function create_data_jobs() {\n\t\t\/\/ If there are jobs left from the previous queue, don't create new jobs.\n\t\tif ( as_has_scheduled_action( 'rank_math\/analytics\/get_inspections_data' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ If the option is disabled, don't create jobs.\n\t\tif ( ! Url_Inspection::is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $wpdb;\n\n\t\t$inspections_table = AnalyticsDB::inspections()->table;\n\t\t$objects_table     = AnalyticsDB::objects()->table;\n\n\t\t$objects = AnalyticsDB::objects()\n\t\t\t->select( [ \"$objects_table.id\", \"$objects_table.page\", \"$inspections_table.created\" ] )\n\t\t\t->leftJoin( $inspections_table, \"$inspections_table.page\", \"$objects_table.page\" )\n\t\t\t->where( \"$objects_table.is_indexable\", 1 )\n\t\t\t->orderBy( \"$inspections_table.created\", 'ASC' )\n\t\t\t->get();\n\n\t\t$pages = [];\n\t\tforeach ( $objects as $object ) {\n\t\t\tif ( $object->created && date( 'Y-m-d', strtotime( $object->created ) ) === date( 'Y-m-d' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$pages[] = $object->page;\n\t\t}\n\n\t\tif ( empty( $pages ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$dates = Base::get_dates();\n\n\t\t$query = $wpdb->prepare(\n\t\t\t\"SELECT DISTINCT(page) as page, COUNT(impressions) as total\n\t\t\tFROM {$wpdb->prefix}rank_math_analytics_gsc\n\t\t\tWHERE page IN ('\" . join( \"', '\", $pages ) . \"')\n\t\t\tAND DATE(created) BETWEEN %s AND %s\n\t\t\tGROUP BY page\n\t\t\tORDER BY total DESC\",\n\t\t\t$dates['start_date'],\n\t\t\t$dates['end_date']\n\t\t);\n\n\t\t$top_pages = $wpdb->get_results( $query );\n\t\t$top_pages = wp_list_pluck( $top_pages, 'page' );\n\n\t\t$pages = array_merge( $top_pages, $pages );\n\t\t$pages = array_unique( $pages );\n\n\t\t$count = 0;\n\t\tforeach ( $pages as $page ) {\n\t\t\t++$count;\n\t\t\t$time = time() + ( $count * self::REQUEST_GAP_SECONDS );\n\t\t\tif ( $count > self::API_LIMIT ) {\n\t\t\t\t$delay_days = floor( $count \/ self::API_LIMIT );\n\t\t\t\t$time       = strtotime( \"+{$delay_days} days\", $time );\n\t\t\t}\n\n\t\t\tSchedule::single_action( $time, 'rank_math\/analytics\/get_inspections_data', [ $page ], 'rank-math' );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/workflows\/class-base.php","ext":"php","size":5072,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Workflow Base.\n *\n * @since      1.0.54\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics\\Workflow;\n\nuse RankMath\\Helper;\nuse RankMath\\Analytics\\DB;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Schedule;\nuse function has_filter;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Base class.\n *\/\nabstract class Base {\n\n\tuse Hooker;\n\n\t\/**\n\t * Start fetching process.\n\t *\n\t * @param  integer $days   Number of days to fetch from past.\n\t * @param  string  $action Action to perform.\n\t * @return integer\n\t *\/\n\tpublic function create_jobs( $days = 90, $action = 'console' ) {\n\t\t$count    = $this->add_data_pull( $days + 3, $action );\n\t\t$time_gap = $this->get_schedule_gap();\n\n\t\tWorkflow::add_clear_cache( time() + ( $time_gap * ( $count + 1 ) ) );\n\n\t\tupdate_option( 'rank_math_analytics_first_fetch', 'fetching' );\n\n\t\treturn $count;\n\t}\n\n\t\/**\n\t * Add data pull jobs.\n\t *\n\t * @param integer $days Number of days to fetch from past.\n\t * @param  string  $action Action to perform.\n\t * @return integer\n\t *\/\n\tprivate function add_data_pull( $days, $action = 'console' ) {\n\t\t$count    = 1;\n\t\t$start    = Helper::get_midnight( time() + DAY_IN_SECONDS );\n\t\t$interval = $this->get_data_interval();\n\t\t$time_gap = $this->get_schedule_gap();\n\n\t\t$hook = \"get_{$action}_data\";\n\t\tif ( 1 === $interval ) {\n\t\t\tfor ( $current = 1; $current <= $days; $current++ ) {\n\t\t\t\t$date = date_i18n( 'Y-m-d', $start - ( DAY_IN_SECONDS * $current ) );\n\t\t\t\tif ( ! DB::date_exists( $date, $action ) ) {\n\t\t\t\t\t++$count;\n\t\t\t\t\tSchedule::single_action(\n\t\t\t\t\t\ttime() + ( $time_gap * $count ),\n\t\t\t\t\t\t'rank_math\/analytics\/' . $hook,\n\t\t\t\t\t\t[ $date ],\n\t\t\t\t\t\t'rank-math'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor ( $current = 1; $current <= $days; $current = $current + $interval ) {\n\t\t\t\tfor ( $j = 0; $j < $interval; $j++ ) {\n\t\t\t\t\t$date = date_i18n( 'Y-m-d', $start - ( DAY_IN_SECONDS * ( $current + $j ) ) );\n\t\t\t\t\tif ( ! DB::date_exists( $date, $action ) ) {\n\t\t\t\t\t\t++$count;\n\t\t\t\t\t\tSchedule::single_action(\n\t\t\t\t\t\t\ttime() + ( $time_gap * $count ),\n\t\t\t\t\t\t\t'rank_math\/analytics\/' . $hook,\n\t\t\t\t\t\t\t[ $date ],\n\t\t\t\t\t\t\t'rank-math'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $count;\n\t}\n\n\t\/**\n\t * Get data interval.\n\t *\n\t * @return int\n\t *\/\n\tprivate function get_data_interval() {\n\t\t$is_custom = has_filter( 'rank_math\/analytics\/app_url' );\n\n\t\treturn $is_custom ? $this->do_filter( 'analytics\/data_interval', 7 ) : 7;\n\t}\n\n\t\/**\n\t * Get schedule gap.\n\t *\n\t * @return int\n\t *\/\n\tprivate function get_schedule_gap() {\n\t\treturn $this->do_filter( 'analytics\/schedule_gap', 30 );\n\t}\n\n\t\/**\n\t * Check if google profile is updated.\n\t *\n\t * @param string $param Google profile param name.\n\t * @param string $previous_value Previous profile data.\n\t * @param string $new_value  New posted profile data.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function is_profile_updated( $param, $previous_value, $new_value ) {\n\t\tif (\n\t\t\t! is_null( $previous_value ) &&\n\t\t\t! is_null( $new_value ) &&\n\t\t\tisset( $previous_value[ $param ] ) &&\n\t\t\tisset( $new_value[ $param ] ) &&\n\t\t\t$previous_value[ $param ] === $new_value[ $param ]\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Function to get the dates.\n\t *\n\t * @param int $days Number of days.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_dates( $days = 90 ) {\n\t\t$end   = Helper::get_midnight( strtotime( '-1 day', time() ) );\n\t\t$start = strtotime( '-' . $days . ' day', $end );\n\n\t\treturn [\n\t\t\t'start_date' => date_i18n( 'Y-m-d', $start ),\n\t\t\t'end_date'   => date_i18n( 'Y-m-d', $end ),\n\t\t];\n\t}\n\n\t\/**\n\t * Schedule single action\n\t *\n\t * @param int     $days   Number of days.\n\t * @param string  $action Name of the action hook.\n\t * @param array   $args   Arguments to pass to callbacks when the hook triggers.\n\t * @param string  $group  The group to assign this job to.\n\t * @param boolean $unique Whether the action should be unique.\n\t *\/\n\tpublic function schedule_single_action( $days = 90, $action = '', $args = [], $group = 'rank-math', $unique = false ) {\n\t\t$timestamp = get_option( 'rank_math_analytics_last_single_action_schedule_time', time() );\n\t\t$time_gap  = $this->get_schedule_gap();\n\n\t\t$dates = self::get_dates( $days );\n\n\t\t\/\/ Get the analytics dates in which analytics data is actually available.\n\t\t$days = apply_filters(\n\t\t\t'rank_math\/analytics\/get_' . $action . '_days',\n\t\t\t[\n\t\t\t\t'start_date' => $dates['start_date'],\n\t\t\t\t'end_date'   => $dates['end_date'],\n\t\t\t]\n\t\t);\n\n\t\t\/\/ No days then don't schedule the action.\n\t\tif ( empty( $days ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $days as $day ) {\n\n\t\t\t\/\/ Next schedule time.\n\t\t\t$timestamp = $timestamp + $time_gap;\n\n\t\t\t$args = wp_parse_args(\n\t\t\t\t[\n\t\t\t\t\t'start_date' => $day['start_date'],\n\t\t\t\t\t'end_date'   => $day['end_date'],\n\t\t\t\t],\n\t\t\t\t$args\n\t\t\t);\n\n\t\t\tSchedule::single_action(\n\t\t\t\t$timestamp,\n\t\t\t\t'rank_math\/analytics\/get_' . $action . '_data',\n\t\t\t\t$args,\n\t\t\t\t$group,\n\t\t\t\t$unique\n\t\t\t);\n\n\t\t}\n\n\t\tWorkflow::add_clear_cache( $timestamp );\n\n\t\t\/\/ Update timestamp.\n\t\tupdate_option( 'rank_math_analytics_last_single_action_schedule_time', $timestamp );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/workflows\/class-objects.php","ext":"php","size":3418,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Install objects.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics\\Workflow;\n\nuse Exception;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Schedule;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Objects class.\n *\/\nclass Objects extends Base {\n\n\tuse Hooker;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$done = \\boolval( get_option( 'rank_math_analytics_installed' ) );\n\t\tif ( $done ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->create_tables();\n\t\t$this->create_data_job();\n\t\t$this->flat_posts();\n\n\t\tupdate_option( 'rank_math_analytics_installed', true );\n\t}\n\n\t\/**\n\t * Create tables.\n\t *\/\n\tpublic function create_tables() {\n\t\tglobal $wpdb;\n\n\t\t$collate = $wpdb->get_charset_collate();\n\t\t$table   = 'rank_math_analytics_objects';\n\n\t\t\/\/ Early Bail!!\n\t\tif ( DB::check_table_exists( $table ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$schema = \"CREATE TABLE {$wpdb->prefix}{$table} (\n\t\t\t\tid bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\tcreated timestamp NOT NULL,\n\t\t\t\ttitle text NOT NULL,\n\t\t\t\tpage varchar(500) NOT NULL,\n\t\t\t\tobject_type varchar(100) NOT NULL,\n\t\t\t\tobject_subtype varchar(100) NOT NULL,\n\t\t\t\tobject_id bigint(20) unsigned NOT NULL,\n\t\t\t\tprimary_key varchar(255) NOT NULL,\n\t\t\t\tseo_score tinyint NOT NULL default 0,\n\t\t\t\tpage_score tinyint NOT NULL default 0,\n\t\t\t\tis_indexable tinyint(1) NOT NULL default 1,\n\t\t\t\tschemas_in_use varchar(500),\n\t\t\t\tdesktop_interactive double default 0,\n\t\t\t\tdesktop_pagescore double default 0,\n\t\t\t\tmobile_interactive double default 0,\n\t\t\t\tmobile_pagescore double default 0,\n\t\t\t\tpagespeed_refreshed timestamp,\n\t\t\t\tPRIMARY KEY  (id),\n\t\t\t\tKEY analytics_object_page (page(190))\n\t\t\t) $collate;\";\n\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/upgrade.php'; \/\/ @phpstan-ignore-line\n\t\ttry {\n\t\t\tdbDelta( $schema );\n\t\t} catch ( Exception $e ) { \/\/ phpcs:ignore\n\t\t\t\/\/ Will log.\n\t\t}\n\t}\n\n\t\/**\n\t * Create jobs to fetch data.\n\t *\/\n\tpublic function create_data_job() {\n\t\t\/\/ Clear old schedule.\n\t\twp_clear_scheduled_hook( 'rank_math\/analytics\/get_analytics' );\n\n\t\t\/\/ Schedule new action only when there is no existing action.\n\t\tif ( false === as_next_scheduled_action( 'rank_math\/analytics\/data_fetch' ) ) {\n\t\t\tHelper::schedule_data_fetch();\n\t\t}\n\t}\n\n\t\/**\n\t * Flat posts\n\t *\/\n\tpublic function flat_posts() {\n\t\t$ids = get_posts(\n\t\t\t[\n\t\t\t\t'post_type'      => $this->get_post_types(),\n\t\t\t\t'post_status'    => 'publish',\n\t\t\t\t'fields'         => 'ids',\n\t\t\t\t'posts_per_page' => -1,\n\t\t\t]\n\t\t);\n\n\t\t$counter = 0;\n\t\t$chunks  = \\array_chunk( $ids, 50 );\n\t\tforeach ( $chunks as $chunk ) {\n\t\t\t++$counter;\n\t\t\tSchedule::single_action(\n\t\t\t\ttime() + ( 60 * ( $counter \/ 2 ) ),\n\t\t\t\t'rank_math\/analytics\/flat_posts',\n\t\t\t\t[ $chunk ],\n\t\t\t\t'rank-math'\n\t\t\t);\n\t\t}\n\n\t\t\/\/ Check for posts.\n\t\tSchedule::single_action(\n\t\t\ttime() + ( 60 * ( ( $counter + 1 ) \/ 2 ) ),\n\t\t\t'rank_math\/analytics\/flat_posts_completed',\n\t\t\t[],\n\t\t\t'rank-math'\n\t\t);\n\n\t\t\/\/ Clear cache.\n\t\tWorkflow::add_clear_cache( time() + ( 60 * ( ( $counter + 2 ) \/ 2 ) ) );\n\t}\n\n\t\/**\n\t * Get post types to process.\n\t *\/\n\tprivate function get_post_types() {\n\t\t$post_types = $this->do_filter( 'analytics\/post_types', Helper::get_accessible_post_types() );\n\t\tunset( $post_types['attachment'] );\n\t\tif ( isset( $post_types['web-story'] ) ) {\n\t\t\tunset( $post_types['web-story'] );\n\t\t}\n\n\t\treturn array_keys( $post_types );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/workflows\/class-workflow.php","ext":"php","size":3667,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Workflow.\n *\n * @since      1.0.54\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics\\Workflow;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Schedule;\nuse function as_unschedule_all_actions;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Workflow class.\n *\/\nclass Workflow {\n\n\tuse Hooker;\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Workflow\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Workflow ) ) {\n\t\t\t$instance = new Workflow();\n\t\t\t$instance->hooks();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t\/\/ Common.\n\t\t$this->action( 'rank_math\/analytics\/workflow', 'maybe_first_install', 5, 0 );\n\t\t$this->action( 'rank_math\/analytics\/workflow', 'start_workflow', 10, 4 );\n\t\t$this->action( 'rank_math\/analytics\/workflow\/create_tables', 'create_tables_only', 5 );\n\n\t\t\/\/ Console.\n\t\t$this->action( 'rank_math\/analytics\/workflow\/console', 'init_console_workflow', 5, 0 );\n\n\t\t\/\/ Inspections.\n\t\t$this->action( 'rank_math\/analytics\/workflow\/inspections', 'init_inspections_workflow', 5, 0 );\n\t}\n\n\t\/**\n\t * Maybe first install.\n\t *\/\n\tpublic function maybe_first_install() {\n\t\tnew Objects();\n\t}\n\n\t\/**\n\t * Init Console workflow\n\t *\/\n\tpublic function init_console_workflow() {\n\t\tnew Console();\n\t}\n\n\t\/**\n\t * Init Inspections workflow.\n\t *\/\n\tpublic function init_inspections_workflow() {\n\t\tnew Inspections();\n\t}\n\n\t\/**\n\t * Create tables only.\n\t *\/\n\tpublic function create_tables_only() {\n\t\t( new Objects() )->create_tables();\n\t\t( new Inspections() )->create_tables();\n\t\tnew Console();\n\t}\n\n\t\/**\n\t * Service workflow\n\t *\n\t * @param string  $action    Action to perform.\n\t * @param integer $days      Number of days to fetch from past.\n\t * @param string  $prev      Previous saved value.\n\t * @param string  $new_value New posted value.\n\t *\/\n\tpublic function start_workflow( $action, $days = 0, $prev = null, $new_value = null ) {\n\t\tdo_action(\n\t\t\t'rank_math\/analytics\/workflow\/' . $action,\n\t\t\t$days,\n\t\t\t$prev,\n\t\t\t$new_value\n\t\t);\n\t}\n\n\t\/**\n\t * Service workflow\n\t *\n\t * @param string  $action    Action to perform.\n\t * @param integer $days      Number of days to fetch from past.\n\t * @param string  $prev      Previous saved value.\n\t * @param string  $new_value New posted value.\n\t *\/\n\tpublic static function do_workflow( $action, $days = 0, $prev = null, $new_value = null ) {\n\t\tSchedule::async_action(\n\t\t\t'rank_math\/analytics\/workflow',\n\t\t\t[\n\t\t\t\t$action,\n\t\t\t\t$days,\n\t\t\t\t$prev,\n\t\t\t\t$new_value,\n\t\t\t],\n\t\t\t'rank-math'\n\t\t);\n\t}\n\n\t\/**\n\t * Kill all workflows\n\t *\n\t * Stop processing queue items, clear cronjob and delete all batches.\n\t *\/\n\tpublic static function kill_workflows() {\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/workflow' );\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/clear_cache' );\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/get_console_data' );\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/get_analytics_data' );\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/get_adsense_data' );\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/get_inspections_data' );\n\n\t\tdo_action( 'rank_math\/analytics\/clear_cache' );\n\t}\n\n\t\/**\n\t * Add clear cache job.\n\t *\n\t * @param int $time Timestamp to add job for.\n\t *\/\n\tpublic static function add_clear_cache( $time ) {\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/clear_cache' );\n\t\tSchedule::single_action(\n\t\t\t$time,\n\t\t\t'rank_math\/analytics\/clear_cache',\n\t\t\t[],\n\t\t\t'rank-math'\n\t\t);\n\n\t\tdelete_option( 'rank_math_analytics_last_single_action_schedule_time' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/workflows\/class-console.php","ext":"php","size":2883,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Google Search Console.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\Analytics\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics\\Workflow;\n\nuse Exception;\nuse RankMath\\Helpers\\DB;\nuse RankMath\\Google\\Console as GoogleConsole;\nuse function as_unschedule_all_actions;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Console class.\n *\/\nclass Console extends Base {\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\n\t\t$this->create_tables();\n\n\t\t\/\/ If console is not connected, ignore all no need to proceed.\n\t\tif ( ! GoogleConsole::is_console_connected() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'rank_math\/analytics\/workflow\/console', 'kill_jobs', 5, 0 );\n\t\t$this->action( 'rank_math\/analytics\/workflow\/create_tables', 'create_tables' );\n\t\t$this->action( 'rank_math\/analytics\/workflow\/console', 'create_tables', 6, 0 );\n\t\t$this->action( 'rank_math\/analytics\/workflow\/console', 'create_data_jobs', 10, 3 );\n\t}\n\n\t\/**\n\t * Unschedule all console data fetch action.\n\t *\n\t * Stop processing queue items, clear cronjob and delete all batches.\n\t *\/\n\tpublic function kill_jobs() {\n\t\tas_unschedule_all_actions( 'rank_math\/analytics\/get_console_data' );\n\t}\n\n\t\/**\n\t * Create tables.\n\t *\/\n\tpublic function create_tables() {\n\t\tglobal $wpdb;\n\n\t\t$collate = $wpdb->get_charset_collate();\n\t\t$table   = 'rank_math_analytics_gsc';\n\n\t\t\/\/ Early Bail!!\n\t\tif ( DB::check_table_exists( $table ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$schema = \"CREATE TABLE {$wpdb->prefix}{$table} (\n\t\t\t\tid bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\tcreated timestamp NOT NULL,\n\t\t\t\tquery varchar(1000) NOT NULL,\n\t\t\t\tpage varchar(500) NOT NULL,\n\t\t\t\tclicks mediumint(6) NOT NULL,\n\t\t\t\timpressions mediumint(6) NOT NULL,\n\t\t\t\tposition double NOT NULL,\n\t\t\t\tctr double NOT NULL,\n\t\t\t\tPRIMARY KEY  (id),\n\t\t\t\tKEY analytics_query (query(190)),\n\t\t\t\tKEY analytics_page (page(190)),\n\t\t\t\tKEY clicks (clicks),\n\t\t\t\tKEY rank_position (position)\n\t\t\t) $collate;\";\n\n\t\trequire_once ABSPATH . 'wp-admin\/includes\/upgrade.php'; \/\/ @phpstan-ignore-line\n\t\ttry {\n\t\t\tdbDelta( $schema );\n\t\t} catch ( Exception $e ) { \/\/ phpcs:ignore\n\t\t\t\/\/ Will log.\n\t\t}\n\n\t\t\/\/ Make sure that collations match the objects table.\n\t\t$objects_coll = DB::get_table_collation( 'rank_math_analytics_objects' );\n\t\tDB::check_collation( $table, 'all', $objects_coll );\n\t}\n\n\t\/**\n\t * Create jobs to fetch data.\n\t *\n\t * @param integer $days      Number of days to fetch from past.\n\t * @param string  $prev      Previous saved value.\n\t * @param string  $new_value New posted value.\n\t *\/\n\tpublic function create_data_jobs( $days, $prev, $new_value ) {\n\t\t\/\/ Early bail if saved & new profile are same.\n\t\tif ( ! $this->is_profile_updated( 'profile', $prev, $new_value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_option( 'rank_math_analytics_first_fetch', 'fetching' );\n\n\t\t\/\/ Fetch now.\n\t\t$this->schedule_single_action( $days, 'console' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/workflows\/class-oauth.php","ext":"php","size":4603,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Authentication workflow.\n *\n * @since      1.0.55\n * @package    RankMath\n * @subpackage RankMath\\Analytics\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics\\Workflow;\n\nuse RankMath\\Helper;\nuse RankMath\\Google\\Api;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Security;\nuse RankMath\\Analytics\\DB;\nuse RankMath\\Google\\Permissions;\nuse RankMath\\Google\\Authentication;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * OAuth class.\n *\/\nclass OAuth {\n\n\tuse Hooker;\n\n\t\/**\n\t * Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'admin_init', 'process_oauth' );\n\t\t$this->action( 'admin_init', 'reconnect_google' );\n\t}\n\n\t\/**\n\t * OAuth reply back\n\t *\/\n\tpublic function process_oauth() {\n\t\t$process_oauth = Param::get( 'process_oauth', 0, FILTER_VALIDATE_INT );\n\t\t$access_token  = Param::get( 'access_token', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t\t$security      = Param::get( 'rankmath_security', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\n\t\t\/\/ Early Bail!!\n\t\tif ( empty( $security ) || ( $process_oauth < 1 && empty( $access_token ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! wp_verify_nonce( $security, 'rank_math_oauth_token' ) ) {\n\t\t\twp_nonce_ays( 'rank_math_oauth_token' );\n\t\t\tdie();\n\t\t}\n\n\t\t$redirect = false;\n\t\t\/\/ Backward compatibility.\n\t\tif ( ! empty( $process_oauth ) ) {\n\t\t\t$redirect = $this->get_tokens_from_server();\n\t\t}\n\n\t\t\/\/ New version.\n\t\tif ( ! empty( $access_token ) ) {\n\t\t\t$redirect = $this->get_tokens_from_url();\n\t\t}\n\n\t\t\/\/ Remove possible admin notice if we have new access token.\n\t\t\/\/ Also remove the connection errors.\n\t\tforeach (\n\t\t\t[\n\t\t\t\t'rankmath_google_api_failed_attempts_data',\n\t\t\t\t'rankmath_google_api_reconnect',\n\t\t\t\t'rank_math_console_connection_error',\n\t\t\t\t'rank_math_analytics_connection_error',\n\t\t\t\t'rank_math_adsense_connection_error',\n\t\t\t] as $option\n\t\t) {\n\t\t\tdelete_option( $option );\n\t\t}\n\n\t\tPermissions::fetch();\n\n\t\tif ( ! empty( $redirect ) ) {\n\t\t\tHelper::redirect( $redirect );\n\t\t\texit;\n\t\t}\n\t}\n\n\t\/**\n\t * Reconnect Google.\n\t *\/\n\tpublic function reconnect_google() {\n\t\tif ( ! isset( $_GET['reconnect'] ) || 'google' !== $_GET['reconnect'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isset( $_GET['_wpnonce'] ) || ! wp_verify_nonce( sanitize_key( $_GET['_wpnonce'] ), 'rank_math_reconnect_google' ) ) {\n\t\t\twp_nonce_ays( 'rank_math_reconnect_google' );\n\t\t\tdie();\n\t\t}\n\n\t\tif ( ! Helper::has_cap( 'analytics' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$rows = DB::objects()\n\t\t\t->selectCount( 'id' )\n\t\t\t->getVar();\n\n\t\tif ( empty( $rows ) ) {\n\t\t\tdelete_option( 'rank_math_analytics_installed' );\n\t\t}\n\n\t\tApi::get()->revoke_token();\n\t\tWorkflow::kill_workflows();\n\n\t\twp_redirect( Authentication::get_auth_url() ); \/\/ phpcs:ignore\n\t\tdie();\n\t}\n\n\t\/**\n\t * Get access token from url.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_tokens_from_url() {\n\t\t$data = [\n\t\t\t'access_token'  => urldecode( Param::get( 'access_token', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK ) ),\n\t\t\t'refresh_token' => urldecode( Param::get( 'refresh_token', '', FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK ) ),\n\t\t\t'expire'        => urldecode( Param::get( 'expire', 0, FILTER_VALIDATE_INT ) ),\n\t\t];\n\n\t\tAuthentication::tokens( $data );\n\n\t\t$current_request = remove_query_arg(\n\t\t\t[\n\t\t\t\t'access_token',\n\t\t\t\t'refresh_token',\n\t\t\t\t'expire',\n\t\t\t\t'security',\n\t\t\t]\n\t\t);\n\n\t\treturn $current_request;\n\t}\n\n\t\/**\n\t * Get access token from rankmath server.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_tokens_from_server() {\n\t\t\/\/ Bail if the user is not authenticated at all yet.\n\t\t$id = Param::get( 'process_oauth', 0, FILTER_VALIDATE_INT );\n\t\tif ( $id < 1 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$response = wp_remote_get( Authentication::get_auth_app_url() . '\/get.php?id=' . $id );\n\t\tif ( 200 !== wp_remote_retrieve_response_code( $response ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$response = wp_remote_retrieve_body( $response );\n\t\tif ( empty( $response ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$response = \\json_decode( $response, true );\n\t\tunset( $response['id'] );\n\n\t\t\/\/ Save new token.\n\t\tAuthentication::tokens( $response );\n\n\t\t$redirect = Security::remove_query_arg_raw( [ 'process_oauth', 'security' ] );\n\t\tif ( Str::contains( 'rank-math-options-general', $redirect ) ) {\n\t\t\t$redirect .= '#setting-panel-analytics';\n\t\t}\n\n\t\tHelper::remove_notification( 'rank_math_analytics_reauthenticate' );\n\n\t\treturn $redirect;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/workflows\/class-jobs.php","ext":"php","size":7247,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Jobs.\n *\n * @since      1.0.54\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics\\Workflow;\n\nuse Exception;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Google\\Api;\nuse RankMath\\Google\\Console;\nuse RankMath\\Google\\Url_Inspection;\nuse RankMath\\Analytics\\DB;\nuse RankMath\\Traits\\Cache;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Analytics\\Stats;\nuse RankMath\\Analytics\\Watcher;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Jobs class.\n *\/\nclass Jobs {\n\n\tuse Hooker;\n\tuse Cache;\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Jobs\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Jobs ) ) {\n\t\t\t$instance = new Jobs();\n\t\t\t$instance->hooks();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Hooks.\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'rank_math\/analytics\/flat_posts', 'do_flat_posts' );\n\t\t$this->action( 'rank_math\/analytics\/flat_posts_completed', 'flat_posts_completed' );\n\t\tadd_action( 'rank_math\/analytics\/sync_sitemaps', [ Api::get(), 'sync_sitemaps' ] );\n\n\t\tif ( Console::is_console_connected() ) {\n\t\t\t$this->action( 'rank_math\/analytics\/clear_cache', 'clear_cache', 99 );\n\n\t\t\t\/\/ Fetch missing google data action.\n\t\t\t$this->action( 'rank_math\/analytics\/data_fetch', 'data_fetch' );\n\n\t\t\t\/\/ Console data fetch.\n\t\t\t$this->filter( 'rank_math\/analytics\/get_console_days', 'get_console_days' );\n\t\t\t$this->action( 'rank_math\/analytics\/get_console_data', 'get_console_data' );\n\t\t\t$this->action( 'rank_math\/analytics\/handle_console_response', 'handle_console_response' );\n\n\t\t\t\/\/ Inspections data fetch.\n\t\t\t$this->action( 'rank_math\/analytics\/get_inspections_data', 'get_inspections_data' );\n\t\t}\n\t}\n\n\t\/**\n\t * Fetch missing console data.\n\t *\/\n\tpublic function data_fetch() {\n\t\t$success = Console::test_connection();\n\t\tif ( $success ) {\n\t\t\t$this->check_for_missing_dates( 'console' );\n\t\t}\n\t}\n\n\t\/**\n\t * Perform post check.\n\t *\/\n\tpublic function flat_posts_completed() {\n\t\t$rows = DB::objects()\n\t\t\t->selectCount( 'id' )\n\t\t\t->getVar();\n\n\t\tWorkflow::kill_workflows();\n\t}\n\n\t\/**\n\t * Add\/update posts info from objects table.\n\t *\n\t * @param  array $ids Posts ids to process.\n\t *\/\n\tpublic function do_flat_posts( $ids ) {\n\t\tInspections::kill_jobs();\n\n\t\tforeach ( $ids as $id ) {\n\t\t\tWatcher::get()->update_post_info( $id );\n\t\t}\n\t}\n\n\t\/**\n\t * Clear cache.\n\t *\/\n\tpublic function clear_cache() {\n\t\tglobal $wpdb;\n\n\t\t\/\/ Delete all useless data from console data table.\n\t\tDB_Helper::get_results( \"DELETE FROM {$wpdb->prefix}rank_math_analytics_gsc WHERE page NOT IN ( SELECT page from {$wpdb->prefix}rank_math_analytics_objects )\" );\n\n\t\t\/\/ Delete useless data from inspections table too.\n\t\tDB_Helper::get_results( \"DELETE FROM {$wpdb->prefix}rank_math_analytics_inspections WHERE page NOT IN ( SELECT page from {$wpdb->prefix}rank_math_analytics_objects )\" );\n\n\t\tdelete_transient( 'rank_math_analytics_data_info' );\n\t\tDB::purge_cache();\n\t\tDB::delete_data_log();\n\t\t$this->calculate_stats();\n\n\t\tupdate_option( 'rank_math_analytics_last_updated', time() );\n\n\t\tWorkflow::do_workflow( 'inspections' );\n\t}\n\n\t\/**\n\t * Set the console start and end dates.\n\t *\n\t * @param array $args Args containing start and end date.\n\t *\/\n\tpublic function get_console_days( $args = [] ) {\n\t\tset_time_limit( 300 );\n\n\t\t$rows = Api::get()->get_search_analytics(\n\t\t\t[\n\t\t\t\t'start_date' => $args['start_date'],\n\t\t\t\t'end_date'   => $args['end_date'],\n\t\t\t\t'dimensions' => [ 'date' ],\n\t\t\t]\n\t\t);\n\n\t\tif ( empty( $rows ) || is_wp_error( $rows ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$empty_dates = get_option( 'rank_math_console_empty_dates', [] );\n\n\t\t$dates = [];\n\n\t\tforeach ( $rows as $row ) {\n\n\t\t\t\/\/ Have at least few impressions.\n\t\t\tif ( $row['impressions'] ) {\n\t\t\t\t$date = $row['keys'][0];\n\n\t\t\t\tif ( ! DB::date_exists( $date, 'console' ) && ! in_array( $date, $empty_dates, true ) ) {\n\t\t\t\t\t$dates[] = [\n\t\t\t\t\t\t'start_date' => $date,\n\t\t\t\t\t\t'end_date'   => $date,\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $dates;\n\t}\n\n\t\/**\n\t * Get console data.\n\t *\n\t * @param string $date Date to fetch data for.\n\t *\/\n\tpublic function get_console_data( $date ) {\n\t\tset_time_limit( 300 );\n\n\t\t$rows = Api::get()->get_search_analytics(\n\t\t\t[\n\t\t\t\t'start_date' => $date,\n\t\t\t\t'end_date'   => $date,\n\t\t\t\t'dimensions' => [ 'query', 'page' ],\n\t\t\t]\n\t\t);\n\n\t\tif ( empty( $rows ) || is_wp_error( $rows ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$rows = \\array_map( [ $this, 'normalize_query_page_data' ], $rows );\n\n\t\ttry {\n\t\t\tDB::add_query_page_bulk( $date, $rows );\n\n\t\t\t\/\/ Clear the cache here.\n\t\t\t$this->cache_flush_group( 'rank_math_rest_keywords_rows' );\n\t\t\t$this->cache_flush_group( 'rank_math_posts_rows_by_objects' );\n\t\t\t$this->cache_flush_group( 'rank_math_analytics_summary' );\n\n\t\t\treturn $rows;\n\t\t} catch ( Exception $e ) {} \/\/ phpcs:ignore\n\t}\n\n\t\/**\n\t * Handlle console response.\n\t *\n\t * @param array $data API request and response data.\n\t *\/\n\tpublic function handle_console_response( $data = [] ) {\n\t\tif ( 200 !== $data['code'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isset( $data['formatted_response']['rows'] ) && ! empty( $data['formatted_response']['rows'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! isset( $data['args']['startDate'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$dates = get_option( 'rank_math_console_empty_dates', [] );\n\t\tif ( ! $dates ) {\n\t\t\t$dates = [];\n\t\t}\n\n\t\t$dates[] = $data['args']['startDate'];\n\t\t$dates[] = $data['args']['endDate'];\n\n\t\t$dates = array_unique( $dates );\n\n\t\tupdate_option( 'rank_math_console_empty_dates', $dates );\n\t}\n\n\t\/**\n\t * Get inspection results from the API and store them in the database.\n\t *\n\t * @param string $page URI to fetch data for.\n\t *\/\n\tpublic function get_inspections_data( $page ) {\n\t\t\/\/ If the option is disabled, don't fetch data.\n\t\tif ( ! \\RankMath\\Analytics\\Url_Inspection::is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$inspection = Url_Inspection::get()->get_inspection_data( $page );\n\t\tif ( empty( $inspection ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tDB::store_inspection( $inspection );\n\t\t} catch ( Exception $e ) {} \/\/ phpcs:ignore\n\t}\n\n\t\/**\n\t * Check for missing dates.\n\t *\n\t * @param string $action Action to perform.\n\t *\/\n\tpublic function check_for_missing_dates( $action ) {\n\t\t$days = Helper::get_settings( 'general.console_caching_control', 90 );\n\n\t\tWorkflow::do_workflow(\n\t\t\t$action,\n\t\t\t$days,\n\t\t\tnull,\n\t\t\tnull\n\t\t);\n\t}\n\n\t\/**\n\t * Calculate stats.\n\t *\/\n\tprivate function calculate_stats() {\n\t\t$ranges = [\n\t\t\t'-7 days',\n\t\t\t'-15 days',\n\t\t\t'-30 days',\n\t\t\t'-3 months',\n\t\t\t'-6 months',\n\t\t\t'-1 year',\n\t\t];\n\n\t\tforeach ( $ranges as $range ) {\n\t\t\tStats::get()->set_date_range( $range );\n\t\t\tStats::get()->get_top_keywords();\n\t\t}\n\t}\n\n\t\/**\n\t * Normalize console data.\n\t *\n\t * @param array $row Single row item.\n\t *\n\t * @return array\n\t *\/\n\tprotected function normalize_query_page_data( $row ) {\n\t\t$row          = $this->normalize_data( $row );\n\t\t$row['query'] = $row['keys'][0];\n\t\t$row['page']  = $row['keys'][1];\n\n\t\tunset( $row['keys'] );\n\n\t\treturn $row;\n\t}\n\n\t\/**\n\t * Normalize console data.\n\t *\n\t * @param array $row Single row item.\n\t *\n\t * @return array\n\t *\/\n\tprivate function normalize_data( $row ) {\n\t\t$row['ctr']      = round( $row['ctr'] * 100, 2 );\n\t\t$row['position'] = round( $row['position'], 2 );\n\n\t\treturn $row;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-analytics.php","ext":"php","size":19369,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics Module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Arr;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Google\\Api;\nuse RankMath\\Module\\Base;\nuse RankMath\\Admin\\Page;\nuse RankMath\\Google\\Console;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Analytics\\Workflow\\Jobs;\nuse RankMath\\Analytics\\Workflow\\OAuth;\nuse RankMath\\Analytics\\Workflow\\Workflow;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Analytics class.\n *\/\nclass Analytics extends Base {\n\n\t\/**\n\t * Module ID.\n\t *\n\t * @var string\n\t *\/\n\tpublic $id = '';\n\n\t\/**\n\t * Module directory.\n\t *\n\t * @var string\n\t *\/\n\tpublic $directory = '';\n\n\t\/**\n\t * Module help.\n\t *\n\t * @var array\n\t *\/\n\tpublic $help = [];\n\n\t\/**\n\t * Module page.\n\t *\n\t * @var object\n\t *\/\n\tpublic $page;\n\n\t\/**\n\t * The Constructor\n\t *\/\n\tpublic function __construct() {\n\t\tif ( Helper::is_heartbeat() || ! Helper::has_cap( 'analytics' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$directory = __DIR__;\n\t\t$this->config(\n\t\t\t[\n\t\t\t\t'id'        => 'analytics',\n\t\t\t\t'directory' => $directory,\n\t\t\t\t'help'      => [\n\t\t\t\t\t'title' => esc_html__( 'Analytics', 'rank-math' ),\n\t\t\t\t\t'view'  => $directory . '\/views\/help.php',\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t\tparent::__construct();\n\n\t\tnew AJAX();\n\t\tApi::get();\n\t\tWatcher::get();\n\t\tStats::get();\n\t\tJobs::get();\n\t\tWorkflow::get();\n\n\t\t$this->action( 'admin_notices', 'render_notice' );\n\t\t$this->action( 'rank_math\/admin\/enqueue_scripts', 'enqueue' );\n\t\t$this->action( 'admin_enqueue_scripts', 'options_panel_messages' );\n\t\t$this->action( 'wp_helpers_notification_dismissed', 'analytic_first_fetch_dismiss' );\n\n\t\tif ( is_admin() ) {\n\t\t\t$this->filter( 'rank_math\/settings\/general', 'add_settings' );\n\t\t\t$this->action( 'admin_init', 'refresh_token_missing', 25 );\n\t\t\t$this->action( 'admin_init', 'cancel_fetch', 5 );\n\t\t\t$this->action( 'wp_helpers_notification_dismissed', 'notice_dismissible' );\n\n\t\t\tnew OAuth();\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel Fetching of Google.\n\t *\/\n\tpublic function cancel_fetch() {\n\t\t$cancel = Param::get( 'cancel-fetch', false );\n\t\tif (\n\t\t\tempty( $cancel ) ||\n\t\t\t! Param::get( '_wpnonce' ) ||\n\t\t\t! wp_verify_nonce( Param::get( '_wpnonce' ), 'rank_math_cancel_fetch' ) ||\n\t\t\t! Helper::has_cap( 'analytics' )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tWorkflow::kill_workflows();\n\t}\n\n\t\/**\n\t * If refresh token missing add notice.\n\t *\/\n\tpublic function refresh_token_missing() {\n\t\t\/\/ Bail if the user is not authenticated at all yet.\n\t\tif ( ! Helper::is_site_connected() || ! Authentication::is_authorized() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->maybe_add_cron_notice();\n\n\t\t$tokens = Authentication::tokens();\n\t\tif ( ! empty( $tokens['refresh_token'] ) ) {\n\t\t\tHelper::remove_notification( 'reconnect' );\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Show admin notification.\n\t\tHelper::add_notification(\n\t\t\tsprintf(\n\t\t\t\t\/* translators: Auth URL *\/\n\t\t\t\t'<i class=\"rm-icon rm-icon-rank-math\"><\/i>' . __( 'It seems like the connection with your Google account & Rank Math needs to be made again. <a href=\"%s\" class=\"rank-math-reconnect-google\">Please click here.<\/a>', 'rank-math' ),\n\t\t\t\tesc_url( Authentication::get_auth_url() )\n\t\t\t),\n\t\t\t[\n\t\t\t\t'type'    => 'error',\n\t\t\t\t'classes' => 'rank-math-error rank-math-notice',\n\t\t\t\t'id'      => 'reconnect',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Hide fetch notice.\n\t *\n\t * @param  string $notification_id Notification id.\n\t *\/\n\tpublic function analytic_first_fetch_dismiss( $notification_id ) {\n\t\tif ( 'rank_math_analytics_first_fetch' !== $notification_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_option( 'rank_math_analytics_first_fetch', 'hidden' );\n\t}\n\n\t\/**\n\t * Admin init.\n\t *\/\n\tpublic function render_notice() {\n\t\t$this->remove_action( 'admin_notices', 'render_notice' );\n\t\tif ( 'fetching' === get_option( 'rank_math_analytics_first_fetch' ) ) {\n\t\t\t$actions = as_get_scheduled_actions(\n\t\t\t\t[\n\t\t\t\t\t'order'  => 'DESC',\n\t\t\t\t\t'hook'   => 'rank_math\/analytics\/clear_cache',\n\t\t\t\t\t'status' => \\ActionScheduler_Store::STATUS_PENDING,\n\t\t\t\t]\n\t\t\t);\n\n\t\t\tif ( empty( $actions ) ) {\n\t\t\t\tupdate_option( 'rank_math_analytics_first_fetch', 'hidden' );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$action         = current( $actions );\n\t\t\t$schedule       = $action->get_schedule();\n\t\t\t$next_timestamp = $schedule->get_date()->getTimestamp();\n\n\t\t\t\/\/ Calculate extra time needed for the inspections.\n\t\t\t$objects_count   = DB::objects()->selectCount( 'id' )->getVar();\n\t\t\t$daily_api_limit = \\RankMath\\Analytics\\Workflow\\Inspections::API_LIMIT;\n\t\t\t$time_gap        = \\RankMath\\Analytics\\Workflow\\Inspections::REQUEST_GAP_SECONDS;\n\t\t\t$extra_time      = $objects_count * $time_gap;\n\t\t\tif ( $objects_count > $daily_api_limit ) {\n\t\t\t\t$extra_time += DAY_IN_SECONDS * floor( $objects_count \/ $daily_api_limit );\n\t\t\t}\n\n\t\t\t\/\/ phpcs:disable\n\t\t\t$notification   = new \\RankMath\\Admin\\Notifications\\Notification(\n\t\t\t\t\/* translators: delete counter *\/\n\t\t\t\tsprintf(\n\t\t\t\t\t'<svg style=\"vertical-align: middle; margin-right: 5px\" viewBox=\"0 0 462.03 462.03\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"20\"><g><path d=\"m462 234.84-76.17 3.43 13.43 21-127 81.18-126-52.93-146.26 60.97 10.14 24.34 136.1-56.71 128.57 54 138.69-88.61 13.43 21z\"><\/path><path d=\"m54.1 312.78 92.18-38.41 4.49 1.89v-54.58h-96.67zm210.9-223.57v235.05l7.26 3 89.43-57.05v-181zm-105.44 190.79 96.67 40.62v-165.19h-96.67z\"><\/path><\/g><\/svg>' .\n\t\t\t\t\tesc_html__( 'Rank Math is importing latest data from connected Google Services, %1$s remaining.', 'rank-math' ) .\n\t\t\t\t\t'&nbsp;<a href=\"%2$s\">' . esc_html__( 'Cancel Fetch', 'rank-math' ) . '<\/a>',\n\t\t\t\t\t$this->human_interval( $next_timestamp - gmdate( 'U' ) + $extra_time ),\n\t\t\t\t\tesc_url( wp_nonce_url( add_query_arg( 'cancel-fetch', 1 ), 'rank_math_cancel_fetch' ) )\n\t\t\t\t),\n\t\t\t\t[\n\t\t\t\t\t'type'    => 'info',\n\t\t\t\t\t'id'      => 'rank_math_analytics_first_fetch',\n\t\t\t\t\t'classes' => 'rank-math-notice',\n\t\t\t\t]\n\t\t\t);\n\n\t\t\techo $notification;\n\t\t}\n\t}\n\n\t\/**\n\t * Store a value in the options table when CRON notice is dismissed to prevent the site from showing it again.\n\t *\n\t * @param string $notification_id Notification id.\n\t *\/\n\tpublic function notice_dismissible( $notification_id ) {\n\t\tif ( 'analytics_cron_notice' === $notification_id ) {\n\t\t\tupdate_option( 'rank_math_analytics_cron_notice_dismissed', true, false );\n\t\t}\n\t}\n\n\t\/**\n\t * Add Notice on Analytics page when CRON is not working on the site.\n\t *\/\n\tprivate function maybe_add_cron_notice() {\n\t\tif ( ! $this->page->is_current_page() || get_option( 'rank_math_analytics_cron_notice_dismissed' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Helper::is_cron_enabled() ) {\n\t\t\tHelper::remove_notification( 'analytics_cron_notice' );\n\t\t\treturn;\n\t\t}\n\n\t\t$message = sprintf(\n\t\t\t\/* translators: constant value *\/\n\t\t\tesc_html__( 'Loopback requests to %s are blocked. This may prevent scheduled tasks from running. Please check your server configuration.', 'rank-math' ),\n\t\t\t'<code>wp-cron.php<\/code>'\n\t\t);\n\t\tif ( defined( 'DISABLE_WP_CRON' ) && DISABLE_WP_CRON ) {\n\t\t\t$message = sprintf(\n\t\t\t\t\/* translators: constant value *\/\n\t\t\t\tesc_html__( 'WordPress\\'s internal cron system is disabled via %s. Please ensure a real cron job is set up, otherwise scheduled features like Analytics may not work correctly.', 'rank-math' ),\n\t\t\t\t'<code>DISABLE_WP_CRON<\/code>'\n\t\t\t);\n\t\t}\n\n\t\t\/\/ Show admin notification.\n\t\tHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'type'   => 'warning',\n\t\t\t\t'id'     => 'analytics_cron_notice',\n\t\t\t\t'screen' => 'rank-math_page_rank-math-analytics',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Convert an interval of seconds into a two part human friendly string.\n\t *\n\t * The WordPress human_time_diff() function only calculates the time difference to one degree, meaning\n\t * even if an action is 1 day and 11 hours away, it will display \"1 day\". This function goes one step\n\t * further to display two degrees of accuracy.\n\t *\n\t * Inspired by the Crontrol::interval() function by Edward Dale: https:\/\/wordpress.org\/plugins\/wp-crontrol\/\n\t *\n\t * @param int $interval A interval in seconds.\n\t * @param int $periods_to_include Depth of time periods to include, e.g. for an interval of 70, and $periods_to_include of 2, both minutes and seconds would be included. With a value of 1, only minutes would be included.\n\t * @return string A human friendly string representation of the interval.\n\t *\/\n\tprivate function human_interval( $interval, $periods_to_include = 2 ) {\n\t\t$time_periods = [\n\t\t\t[\n\t\t\t\t'seconds' => YEAR_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s year', '%s years', 'rank-math' ),\n\t\t\t],\n\t\t\t[\n\t\t\t\t'seconds' => MONTH_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s month', '%s months', 'rank-math' ),\n\t\t\t],\n\t\t\t[\n\t\t\t\t'seconds' => WEEK_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s week', '%s weeks', 'rank-math' ),\n\t\t\t],\n\t\t\t[\n\t\t\t\t'seconds' => DAY_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s day', '%s days', 'rank-math' ),\n\t\t\t],\n\t\t\t[\n\t\t\t\t'seconds' => HOUR_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s hour', '%s hours', 'rank-math' ),\n\t\t\t],\n\t\t\t[\n\t\t\t\t'seconds' => MINUTE_IN_SECONDS,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s minute', '%s minutes', 'rank-math' ),\n\t\t\t],\n\t\t\t[\n\t\t\t\t'seconds' => 1,\n\t\t\t\t\/* translators: %s: amount of time *\/\n\t\t\t\t'names'   => _n_noop( '%s second', '%s seconds', 'rank-math' ),\n\t\t\t],\n\t\t];\n\n\t\tif ( $interval <= 0 ) {\n\t\t\treturn __( 'Now!', 'rank-math' );\n\t\t}\n\n\t\t$output = '';\n\n\t\t$time_period_count = count( $time_periods );\n\t\tfor ( $time_period_index = 0, $periods_included = 0, $seconds_remaining = $interval; $time_period_index < $time_period_count && $seconds_remaining > 0 && $periods_included < $periods_to_include; $time_period_index++ ) {\n\n\t\t\t$periods_in_interval = floor( $seconds_remaining \/ $time_periods[ $time_period_index ]['seconds'] );\n\n\t\t\tif ( $periods_in_interval > 0 ) {\n\t\t\t\tif ( ! empty( $output ) ) {\n\t\t\t\t\t$output .= ' ';\n\t\t\t\t}\n\t\t\t\t$output            .= sprintf( _n( $time_periods[ $time_period_index ]['names'][0], $time_periods[ $time_period_index ]['names'][1], $periods_in_interval, 'rank-math' ), $periods_in_interval );\n\t\t\t\t$seconds_remaining -= $periods_in_interval * $time_periods[ $time_period_index ]['seconds'];\n\t\t\t\t++$periods_included;\n\t\t\t}\n\t\t}\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Add l18n for the Settings.\n\t *\n\t * @return void\n\t *\/\n\tpublic function options_panel_messages() {\n\t\t$screen = get_current_screen();\n\n\t\tif ( 'rank-math_page_rank-math-options-general' !== $screen->id ) {\n\t\t\treturn;\n\t\t}\n\n\t\tHelper::add_json( 'confirmAction', esc_html__( 'Are you sure you want to do this?', 'rank-math' ) );\n\t\tHelper::add_json( 'confirmClearImportedData', esc_html__( 'You are about to delete all the previously imported data.', 'rank-math' ) );\n\t\tHelper::add_json( 'confirmClear90DaysCache', esc_html__( 'You are about to delete your 90 days cache.', 'rank-math' ) );\n\t\tHelper::add_json( 'confirmDisconnect', esc_html__( 'Are you sure you want to disconnect Google services from your site?', 'rank-math' ) );\n\t\tHelper::add_json( 'feedbackCacheDeleted', esc_html__( 'Cache deleted.', 'rank-math' ) );\n\t}\n\n\t\/**\n\t * Enqueue scripts for the metabox.\n\t *\/\n\tpublic function enqueue() {\n\t\t$screen = get_current_screen();\n\n\t\tif ( 'rank-math_page_rank-math-analytics' !== $screen->id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$uri = untrailingslashit( plugin_dir_url( __FILE__ ) );\n\n\t\twp_enqueue_style(\n\t\t\t'rank-math-analytics',\n\t\t\t$uri . '\/assets\/css\/stats.css',\n\t\t\t[],\n\t\t\trank_math()->version\n\t\t);\n\n\t\twp_register_script(\n\t\t\t'rank-math-analytics',\n\t\t\t$uri . '\/assets\/js\/stats.js',\n\t\t\t[\n\t\t\t\t'lodash',\n\t\t\t\t'wp-components',\n\t\t\t\t'wp-element',\n\t\t\t\t'wp-i18n',\n\t\t\t\t'wp-date',\n\t\t\t\t'wp-api-fetch',\n\t\t\t\t'wp-html-entities',\n\t\t\t\t'rank-math-components',\n\t\t\t],\n\t\t\trank_math()->version,\n\t\t\ttrue\n\t\t);\n\n\t\twp_set_script_translations( 'rank-math-analytics', 'rank-math', plugin_dir_path( __FILE__ ) . 'languages\/' );\n\n\t\t$this->action( 'admin_footer', 'dequeue_cmb2' );\n\n\t\t$preference = apply_filters(\n\t\t\t'rank_math\/analytics\/user_preference',\n\t\t\t[\n\t\t\t\t'topPosts'        => [\n\t\t\t\t\t'seo_score'       => false,\n\t\t\t\t\t'schemas_in_use'  => false,\n\t\t\t\t\t'impressions'     => true,\n\t\t\t\t\t'pageviews'       => true,\n\t\t\t\t\t'clicks'          => false,\n\t\t\t\t\t'position'        => true,\n\t\t\t\t\t'positionHistory' => true,\n\t\t\t\t],\n\t\t\t\t'siteAnalytics'   => [\n\t\t\t\t\t'seo_score'       => true,\n\t\t\t\t\t'schemas_in_use'  => true,\n\t\t\t\t\t'impressions'     => false,\n\t\t\t\t\t'pageviews'       => true,\n\t\t\t\t\t'links'           => true,\n\t\t\t\t\t'clicks'          => false,\n\t\t\t\t\t'position'        => false,\n\t\t\t\t\t'positionHistory' => false,\n\t\t\t\t],\n\t\t\t\t'performance'     => [\n\t\t\t\t\t'seo_score'       => true,\n\t\t\t\t\t'schemas_in_use'  => true,\n\t\t\t\t\t'impressions'     => true,\n\t\t\t\t\t'pageviews'       => true,\n\t\t\t\t\t'ctr'             => false,\n\t\t\t\t\t'clicks'          => true,\n\t\t\t\t\t'position'        => true,\n\t\t\t\t\t'positionHistory' => true,\n\t\t\t\t],\n\t\t\t\t'keywords'        => [\n\t\t\t\t\t'impressions'     => true,\n\t\t\t\t\t'ctr'             => false,\n\t\t\t\t\t'clicks'          => true,\n\t\t\t\t\t'position'        => true,\n\t\t\t\t\t'positionHistory' => true,\n\t\t\t\t],\n\t\t\t\t'topKeywords'     => [\n\t\t\t\t\t'impressions'     => true,\n\t\t\t\t\t'ctr'             => true,\n\t\t\t\t\t'clicks'          => true,\n\t\t\t\t\t'position'        => true,\n\t\t\t\t\t'positionHistory' => true,\n\t\t\t\t],\n\t\t\t\t'trackKeywords'   => [\n\t\t\t\t\t'impressions'     => true,\n\t\t\t\t\t'ctr'             => false,\n\t\t\t\t\t'clicks'          => true,\n\t\t\t\t\t'position'        => true,\n\t\t\t\t\t'positionHistory' => true,\n\t\t\t\t],\n\t\t\t\t'rankingKeywords' => [\n\t\t\t\t\t'impressions'     => true,\n\t\t\t\t\t'ctr'             => false,\n\t\t\t\t\t'clicks'          => true,\n\t\t\t\t\t'position'        => true,\n\t\t\t\t\t'positionHistory' => true,\n\t\t\t\t],\n\t\t\t\t'indexing'        => [\n\t\t\t\t\t'index_verdict'      => true,\n\t\t\t\t\t'indexing_state'     => true,\n\t\t\t\t\t'rich_results_items' => true,\n\t\t\t\t\t'page_fetch_state'   => false,\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t$user_id = get_current_user_id();\n\t\tif ( metadata_exists( 'user', $user_id, 'rank_math_analytics_table_columns' ) ) {\n\t\t\t$preference = wp_parse_args(\n\t\t\t\tget_user_meta( $user_id, 'rank_math_analytics_table_columns', true ),\n\t\t\t\t$preference\n\t\t\t);\n\t\t}\n\n\t\tHelper::add_json( 'userColumnPreference', $preference );\n\n\t\t\/\/ Last Updated.\n\t\t$updated = get_option( 'rank_math_analytics_last_updated', false );\n\t\t$updated = $updated ? date_i18n( get_option( 'date_format' ), $updated ) : '';\n\t\tHelper::add_json( 'lastUpdated', $updated );\n\n\t\tHelper::add_json( 'singleImage', rank_math()->plugin_url() . 'includes\/modules\/analytics\/assets\/img\/single-post-report.jpg' );\n\n\t\t\/\/ Index Status tab.\n\t\t$enable_index_status = Helper::can_add_index_status();\n\t\tHelper::add_json( 'enableIndexStatus', $enable_index_status );\n\t\tHelper::add_json( 'viewedIndexStatus', get_option( 'rank_math_viewed_index_status', false ) );\n\n\t\tif ( $enable_index_status ) {\n\t\t\tupdate_option( 'rank_math_viewed_index_status', true );\n\t\t}\n\n\t\tHelper::add_json( 'isRtl', is_rtl() );\n\t}\n\n\t\/**\n\t * Dequeue cmb2.\n\t *\/\n\tpublic function dequeue_cmb2() {\n\t\twp_dequeue_script( 'cmb2-scripts' );\n\t}\n\n\t\/**\n\t * Register admin page.\n\t *\/\n\tpublic function register_admin_page() {\n\t\t$dot_color = '#ed5e5e';\n\t\tif ( Console::is_console_connected() ) {\n\t\t\t$dot_color = '#11ac84';\n\t\t}\n\n\t\t$this->page = new Page(\n\t\t\t'rank-math-analytics',\n\t\t\tesc_html__( 'Analytics', 'rank-math' ) . '<span class=\"rm-menu-new update-plugins\" style=\"background: ' . $dot_color . '; margin-left: 5px;min-width: 10px;height: 10px;margin-top: 5px;\"><span class=\"plugin-count\"><\/span><\/span>',\n\t\t\t[\n\t\t\t\t'position'   => 5,\n\t\t\t\t'parent'     => 'rank-math',\n\t\t\t\t'capability' => 'rank_math_analytics',\n\t\t\t\t'render'     => $this->directory . '\/views\/dashboard.php',\n\t\t\t\t'classes'    => [ 'rank-math-page' ],\n\t\t\t\t'assets'     => [\n\t\t\t\t\t'styles'  => [\n\t\t\t\t\t\t'rank-math-common'    => '',\n\t\t\t\t\t\t'rank-math-analytics' => '',\n\t\t\t\t\t],\n\t\t\t\t\t'scripts' => [\n\t\t\t\t\t\t'rank-math-analytics' => '',\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Add module settings into general optional panel.\n\t *\n\t * @param array $tabs Array of option panel tabs.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_settings( $tabs ) {\n\t\t$db_info = \\RankMath\\Analytics\\DB::info();\n\t\t$next_fetch = '';\n\t\t$actions = as_get_scheduled_actions(\n\t\t\t[\n\t\t\t\t'order'  => 'DESC',\n\t\t\t\t'hook'   => 'rank_math\/analytics\/data_fetch',\n\t\t\t\t'status' => \\ActionScheduler_Store::STATUS_PENDING,\n\t\t\t]\n\t\t);\n\t\tif ( Authentication::is_authorized() && ! empty( $actions ) ) {\n\t\t\t$action    = current( $actions );\n\t\t\t$schedule  = $action->get_schedule();\n\t\t\t$next_date = $schedule->get_date();\n\t\t\tif ( $next_date ) {\n\t\t\t\t$next_fetch = sprintf(\n\t\t\t\t\t__( 'Next update on %s (in %s)', 'rank-math' ),\n\t\t\t\t\tdate_i18n( 'd M, Y H:m:i', $next_date->getTimestamp() ),\n\t\t\t\t\thuman_time_diff( $next_date->getTimestamp() )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tArr::insert(\n\t\t\t$tabs,\n\t\t\t[\n\t\t\t\t'analytics' => [\n\t\t\t\t\t'icon'  => 'rm-icon rm-icon-search-console',\n\t\t\t\t\t'title' => esc_html__( 'Analytics', 'rank-math' ),\n\t\t\t\t\t\/* translators: Link to kb article *\/\n\t\t\t\t\t'desc'  => sprintf( esc_html__( 'See your Google Search Console, Analytics and AdSense data without leaving your WP dashboard. %s.', 'rank-math' ), '<a href=\"' . KB::get( 'analytics-settings', 'Options Panel Analytics Tab' ) . '\" target=\"_blank\">' . esc_html__( 'Learn more', 'rank-math' ) . '<\/a>' ),\n\t\t\t\t\t'file'  => $this->directory . '\/views\/options.php',\n\t\t\t\t\t'json'  => apply_filters(\n\t\t\t\t\t\t'rank_math\/analytics\/options\/data',\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'analytics' => \\RankMath\\Wizard\\Search_Console::get_localized_data(),\n\t\t\t\t\t\t\t'isSettingsPage' => true,\n\t\t\t\t\t\t\t'homeUrl' => home_url(),\n\t\t\t\t\t\t\t'fields' => [\n\t\t\t\t\t\t\t\t'console_caching_control' => [\n\t\t\t\t\t\t\t\t\t'description' => $this->get_description( 'console_caching_control' ),\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'dbInfo' => [\n\t\t\t\t\t\t\t\t'days'    => $db_info['days'] ?? 0,\n\t\t\t\t\t\t\t\t'rows'    => Str::human_number( $db_info['rows'] ?? 0 ),\n\t\t\t\t\t\t\t\t'size'    => size_format( $db_info['size'] ?? 0 ),\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t'isFetching' => 'fetching' === get_option( 'rank_math_analytics_first_fetch' ),\n\t\t\t\t\t\t\t'nextFetch'  => $next_fetch,\n\t\t\t\t\t\t\t'isAuthorized' => Authentication::is_authorized(),\n\t\t\t\t\t\t]\n\t\t\t\t\t),\n\t\t\t\t],\n\t\t\t],\n\t\t\t9\n\t\t);\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Get the description for a field.\n\t *\n\t * @param string $field_id The field ID.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_description( $field_id ) {\n\t\tif ( ! $field_id ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$description = '';\n\n\t\tswitch ( $field_id ) {\n\t\t\tcase 'console_caching_control':\n\t\t\t\t\/\/ Translators: placeholder is a link to rankmath.com, with \"free version\" as the anchor text.\n\t\t\t\t$description = sprintf( __( 'Enter the number of days to keep Analytics data in your database. The maximum allowed days are 90 in the %s. Though, 2x data will be stored in the DB for calculating the difference properly.', 'rank-math' ), '<a href=\"' . KB::get( 'pro', 'Analytics DB Option' ) . '\" target=\"_blank\" rel=\"noopener noreferrer\">' . __( 'free version', 'rank-math' ) . '<\/a>' );\n\t\t\t\t$description = apply_filters_deprecated( 'rank_math\/analytics\/options\/cahce_control\/description', [ $description ], '1.0.61.1', 'rank_math\/analytics\/options\/cache_control\/description' );\n\t\t\t\t$description = apply_filters( 'rank_math\/analytics\/options\/cache_control\/description', $description );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$description = apply_filters( 'rank_math\/analytics\/options\/' . $field_id . '\/description', '' );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $description;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/options.php","ext":"php","size":6802,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Search console options.\n *\n * @package Rank_Math\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Analytics\\DB;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Google\\Authentication;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/\/ phpcs:disable\n$actions = \\as_get_scheduled_actions(\n\t[\n\t\t'hook' => 'rank_math\/analytics\/clear_cache',\n\t\t'status' => \\ActionScheduler_Store::STATUS_PENDING,\n\t]\n);\n$db_info        = DB::info();\n$is_queue_empty = empty( $actions );\n$disable        = ( ! Authentication::is_authorized() || ! $is_queue_empty ) ? true : false;\n\nif ( ! empty( $db_info ) ) {\n\t$db_info = [\n\t\t\/* translators: number of days *\/\n\t\t'<div class=\"rank-math-console-db-info\"><i class=\"rm-icon rm-icon-calendar\"><\/i> ' . sprintf( esc_html__( 'Storage Days: %s', 'rank-math' ), '<strong>' . $db_info['days'] . '<\/strong>' ) . '<\/div>',\n\t\t\/* translators: number of rows *\/\n\t\t'<div class=\"rank-math-console-db-info\"><i class=\"rm-icon rm-icon-faq\"><\/i> ' . sprintf( esc_html__( 'Data Rows: %s', 'rank-math' ), '<strong>' . Str::human_number( $db_info['rows'] ) . '<\/strong>' ) . '<\/div>',\n\t\t\/* translators: database size *\/\n\t\t'<div class=\"rank-math-console-db-info\"><i class=\"rm-icon rm-icon-database\"><\/i> ' . sprintf( esc_html__( 'Size: %s', 'rank-math' ), '<strong>' . size_format( $db_info['size'] ) . '<\/strong>' ) . '<\/div>',\n\t];\n}\n\n$actions = as_get_scheduled_actions(\n\t[\n\t\t'order'  => 'DESC',\n\t\t'hook'   => 'rank_math\/analytics\/data_fetch',\n\t\t'status' => \\ActionScheduler_Store::STATUS_PENDING,\n\t]\n);\nif ( Authentication::is_authorized() && ! empty( $actions ) ) {\n\t$action    = current( $actions );\n\t$schedule  = $action->get_schedule();\n\t$next_date = $schedule->get_date();\n\tif ( $next_date ) {\n\t\t$cmb->add_field(\n\t\t\t[\n\t\t\t\t'id'      => 'console_data_empty',\n\t\t\t\t'type'    => 'raw',\n\t\t\t\t\/* translators: date *\/\n\t\t\t\t'content' => sprintf(\n\t\t\t\t\t'<span class=\"next-fetch\">' . __( 'Next data fetch on %s', 'rank-math' ),\n\t\t\t\t\tdate_i18n( 'd M, Y H:m:i', $next_date->getTimestamp() ) . '<\/span>'\n\t\t\t\t),\n\t\t\t]\n\t\t);\n\t}\n}\n\/\/ phpcs:enable\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'search_console_ui',\n\t\t'type' => 'raw',\n\t\t'file' => rank_math()->admin_dir() . '\/wizard\/views\/search-console-ui.php',\n\t]\n);\n\nif ( ! Authentication::is_authorized() ) {\n\treturn;\n}\n\n$is_fetching = 'fetching' === get_option( 'rank_math_analytics_first_fetch' );\n$buttons     = '<br>' .\n\t'<button class=\"button button-small console-cache-delete\" data-days=\"-1\">' . esc_html__( 'Delete data', 'rank-math' ) . '<\/button>' .\n\t'&nbsp;&nbsp;<button class=\"button button-small console-cache-update-manually\"' . ( $disable ? ' disabled=\"disabled\"' : '' ) . '>' . ( $is_queue_empty ? esc_html__( 'Update data manually', 'rank-math' ) : esc_html__( 'Fetching in Progress', 'rank-math' ) ) . '<\/button>' .\n\t'&nbsp;&nbsp;<button class=\"button button-link-delete button-small cancel-fetch\"' . disabled( $is_fetching, false, false ) . '>' . esc_html__( 'Cancel Fetching', 'rank-math' ) . '<\/button>';\n\n$buttons .= '<br>' . join( '', $db_info );\n\n\/\/ Translators: placeholder is a link to rankmath.com, with \"free version\" as the anchor text.\n$description = sprintf( __( 'Enter the number of days to keep Analytics data in your database. The maximum allowed days are 90 in the %s. Though, 2x data will be stored in the DB for calculating the difference properly.', 'rank-math' ), '<a href=\"' . KB::get( 'pro', 'Analytics DB Option' ) . '\" target=\"_blank\" rel=\"noopener noreferrer\">' . __( 'free version', 'rank-math' ) . '<\/a>' );\n$description = apply_filters_deprecated( 'rank_math\/analytics\/options\/cahce_control\/description', [ $description ], '1.0.61.1', 'rank_math\/analytics\/options\/cache_control\/description' );\n$description = apply_filters( 'rank_math\/analytics\/options\/cache_control\/description', $description );\n\n$cmb->add_field(\n\t[\n\t\t'id'              => 'console_caching_control',\n\t\t'type'            => 'text',\n\t\t'name'            => __( 'Analytics Database', 'rank-math' ),\n\t\t\/\/ translators: Anchor text 'free version', linking to pricing page.\n\t\t'description'     => $description,\n\t\t'default'         => 90,\n\t\t'sanitization_cb' => function ( $value ) {\n\t\t\t$max   = apply_filters( 'rank_math\/analytics\/max_days_allowed', 90 );\n\t\t\t$value = absint( $value );\n\t\t\tif ( $value > $max ) {\n\t\t\t\t$value = $max;\n\t\t\t}\n\n\t\t\treturn $value;\n\t\t},\n\t\t'after_field'     => $buttons,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'          => 'analytics_stats',\n\t\t'type'        => 'toggle',\n\t\t'name'        => __( 'Frontend Stats Bar', 'rank-math' ),\n\t\t'description' => esc_html__( 'Enable this option to show Analytics Stats on the front just after the admin bar.', 'rank-math' ),\n\t\t'default'     => 'on',\n\t]\n);\n\nif ( RankMath\\Analytics\\Email_Reports::are_fields_hidden() ) {\n\treturn;\n}\n\n$preview_url  = home_url( '?rank_math_analytics_report_preview=1' );\n$report_title = esc_html__( 'Email Reports', 'rank-math' );\n\/\/ Translators: Placeholders are the opening and closing tag for the link.\n$description = sprintf( esc_html__( 'Receive periodic SEO Performance reports via email. Once enabled and options are saved, you can see %1$s the preview here%2$s.', 'rank-math' ), '<a href=\"' . esc_url_raw( $preview_url ) . '\" target=\"_blank\">', '<\/a>' );\n$cmb->add_field(\n\t[\n\t\t'id'      => 'email_reports_title',\n\t\t'type'    => 'raw',\n\t\t'content' => sprintf( '<div class=\"cmb-form cmb-row nopb\"><header class=\"email-reports-title\"><h3>%1$s<\/h3><p class=\"description\">%2$s<\/p><\/header><\/div>', $report_title, $description ),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'          => 'console_email_reports',\n\t\t'type'        => 'toggle',\n\t\t'name'        => __( 'Email Reports', 'rank-math' ),\n\t\t'description' => __( 'Turn on email reports.', 'rank-math' ),\n\t\t'default'     => Helper::get_settings( 'general.console_email_reports' ) ? 'on' : 'off',\n\t\t'classes'     => 'nob',\n\t]\n);\n\n$is_pro_active = defined( 'RANK_MATH_PRO_FILE' );\n$pro_badge     = '<span class=\"rank-math-pro-badge\"><a href=\"' . KB::get( 'seo-email-reporting', 'Email Frequency Toggle' ) . '\" target=\"_blank\" rel=\"noopener noreferrer\">' . __( 'PRO', 'rank-math' ) . '<\/a><\/span>';\n$args          = [\n\t'id'         => 'console_email_frequency',\n\t'type'       => 'select',\n\t'name'       => esc_html__( 'Email Frequency', 'rank-math' ) . ( ! $is_pro_active ? $pro_badge : '' ),\n\t'desc'       => wp_kses_post( __( 'Email report frequency.', 'rank-math' ) ),\n\t'default'    => 'monthly',\n\t'options'    => [\n\t\t'monthly' => esc_html__( 'Every 30 days', 'rank-math' ),\n\t],\n\t'dep'        => [ [ 'console_email_reports', 'on' ] ],\n\t'attributes' => ! $is_pro_active ? [ 'disabled' => 'disabled' ] : [],\n\t'before_row' => ! $is_pro_active ? '<div class=\"cmb-redirector-element\" data-url=\"' . KB::get( 'seo-email-reporting', 'Email Frequency Toggle' ) . '\">' : '',\n\t'after_row'  => ! $is_pro_active ? '<\/div>' : '',\n];\n\n$cmb->add_field( $args );\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/dashboard.php","ext":"php","size":594,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Dashboard page template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\nuse RankMath\\Helper;\nuse RankMath\\Google\\Authentication;\n\ndefined( 'ABSPATH' ) || exit;\n\n$path = rank_math()->admin_dir() . 'wizard\/views\/'; \/\/ phpcs:ignore\n?>\n<div class=\"analytics\">\n\n\t<span class=\"wp-header-end\"><\/span>\n\n\t<?php\n\tif ( ! Helper::is_site_connected() ) {\n\t\trequire_once $path . 'rank-math-connect.php';\n\t} elseif ( ! Authentication::is_authorized() ) {\n\t\trequire_once $path . 'google-connect.php';\n\t} else {\n\t\techo '<div class=\"\" id=\"rank-math-analytics\"><\/div>';\n\t}\n\t?>\n\n<\/div>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/index.php","ext":"php","size":27,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden."},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/header-after.php","ext":"php","size":1638,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report header template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"report-info\">\n\t<tr>\n\t\t<td>\n\t\t\t<h1><?php esc_html_e( 'SEO Report of Your Website', 'rank-math' ); ?><\/h1>\n\t\t\t<h2 class=\"report-date\">###START_DATE### - ###END_DATE###<\/h2>\n\t\t\t<a href=\"###SITE_URL###\" target=\"_blank\" class=\"site-url\">###SITE_URL_SIMPLE###<\/a>\n\t\t<\/td>\n\t\t<td class=\"full-report-link\">\n\t\t\t<a href=\"###REPORT_URL###\" target=\"_blank\" class=\"full-report-link\">\n\t\t\t\t<?php esc_html_e( 'FULL REPORT', 'rank-math' ); ?>\n\t\t\t\t<?php $this->image( 'report-icon-external.png', 12, 12, __( 'External Link Icon', 'rank-math' ) ); ?>\n\t\t\t<\/a>\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n\n<?php if ( $this->get_variable( 'stats_invalid_data' ) ) { ?>\n\t<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"report-error\">\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\t<h2><?php esc_html_e( 'Uh-oh', 'rank-math' ); ?><\/h2>\n\t\t\t\t<p><em><?php esc_html_e( 'It seems that there are no stats to show right now.', 'rank-math' ); ?><\/em><\/p>\n\t\t\t\t<?php \/\/ Translators: placeholders are anchor opening and closing tags. ?>\n\t\t\t\t<p><?php printf( esc_html__( 'If you can see the site data in your Search Console and Analytics accounts, but not here, then %1$s try reconnecting your account %2$s and make sure that the correct properties are selected in the %1$s Analytics Settings%2$s.', 'rank-math' ), '<a href=\"' . esc_url( Helper::get_settings_url( 'general', 'analytics' ) ) . '\">', '<\/a>' ); ?><\/p>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t<\/table>\n\t<?php\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/report.php","ext":"php","size":419,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report email template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n$this->template_part( 'header' );\n\n?>\n\n<?php $this->template_part( 'header-after' ); ?>\n\n<?php $this->template_part( 'sections\/summary' ); ?>\n\n<?php $this->template_part( 'sections\/positions' ); ?>\n\n<?php $this->template_part( 'cta' ); ?>\n\n<?php\n$this->template_part( 'footer' );\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/style.php","ext":"php","size":8179,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report email styling.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n?>\n<style>\n\t\/* -------------------------------------\n\t\t\tGLOBAL RESETS\n\t------------------------------------- *\/\n\t\/* All the styling goes here *\/\n\timg {\n\t\tborder: none;\n\t\t-ms-interpolation-mode: bicubic;\n\t\tmax-width: 100%; \n\t}\n\n\tbody {\n\t\tbackground-color: #f7f9fb;\n\t\t-webkit-font-smoothing: antialiased;\n\t\tfont-size: 14px;\n\t\tline-height: 1.4;\n\t\tmargin: 0;\n\t\tpadding: 0;\n\t\t-ms-text-size-adjust: 100%;\n\t\t-webkit-text-size-adjust: 100%; \n\t}\n\n\ttable {\n\t\tborder-collapse: separate;\n\t\tmso-table-lspace: 0pt;\n\t\tmso-table-rspace: 0pt;\n\t\twidth: 100%;\n\t}\n\n\ttable td {\n\t\tfont-size: 15px;\n\t\tvertical-align: top; \n\t}\n\n\t\/* -------------------------------------\n\t\t\tBODY & CONTAINER\n\t------------------------------------- *\/\n\n\t.body, td {\n\t\tfont-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",\"Roboto\",\"Oxygen\",\"Ubuntu\",\"Cantarell\",\"Fira Sans\",\"Droid Sans\",\"Helvetica Neue\",sans-serif;\n\t}\n\n\t.body {\n\t\tbackground-color: #F0F4F8;\n\t\twidth: 100%; \n\t}\n\n\t\/* Set a max-width, and make it display as block. *\/\n\t.container {\n\t\tdisplay: block;\n\t\tmargin: 0 auto !important;\n\t\t\/* makes it centered *\/\n\t\tmax-width: 90%;\n\t\tpadding: 50px 0;\n\t\twidth: 600px; \n\t}\n\n\t.content {\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tmargin: 0 auto;\n\t\twidth: 100%;\n\t}\n\n\t\/* -------------------------------------\n\t\t\tHEADER, FOOTER, MAIN\n\t------------------------------------- *\/\n\t.main {\n\t\tbackground: #ffffff;\n\t\tborder-radius: 6px;\n\t\twidth: 100%;\n\t\tcolor: #1a1e22;\n\t}\n\n\t.wrapper {\n\t\tbox-sizing: border-box;\n\t\tpadding: 30px 30px 60px;\n\t}\n\n\t.header {\n\t\tbackground: #724BB7;\n\t\tbackground: linear-gradient(90deg, #724BB7 0%, #4098D7 100%);\n\t\tborder-radius: 8px 8px 0 0;\n\t\theight: 76px;\n\t\tvertical-align: middle;\n\t\tpadding: 0 30px;\n\t\tcolor: #ffffff;\n\t}\n\n\ttd.logo {\n\t\tvertical-align: middle;\n\t}\n\n\ttd.logo img {\n\t\twidth: auto;\n\t\theight: 26px;\n\t\tmargin-top: 6px;\n\t}\n\n\t.period-days {\n\t\ttext-align: right;\n\t\tvertical-align: middle;\n\t\tfont-weight: 500;\n\t\tletter-spacing: 0.5px;\n\t\tfont-size: 14px;\n\t}\n\n\t.content-block {\n\t\tpadding-bottom: 10px;\n\t\tpadding-top: 10px;\n\t}\n\n\t.footer {\n\t\tclear: both;\n\t\tmargin-top: 10px;\n\t\twidth: 100%; \n\t}\n\n\t.footer .wrapper {\n\t\tpadding-bottom: 30px;\n\t}\n\n\t.footer td,\n\t.footer p,\n\t.footer span {\n\t\tcolor: #999ba7;\n\t\tfont-size: 14px; \n\t}\n\n\t.footer td {\n\t\tpadding-top: 0;\n\t}\n\n\t.footer p.first {\n\t\tpadding-top: 20px;\n\t\tborder-top: 1px solid #e5e5e7;\n\t\tline-height: 1.8;\n\t\tmargin-bottom: 0;\n\t}\n\n\t.footer .rank-math-contact-address {\n\t\tfont-style: normal;\n\t}\n\n\t.footer p:empty {\n\t\tdisplay: none;\n\t}\n\n\t.footer address {\n\t\tdisplay: inline-block;\n\t\tfont-style: normal;\n\t\tmargin-top: 10px;\n\t}\n\n\t\/* -------------------------------------\n\t\t\tTYPOGRAPHY\n\t------------------------------------- *\/\n\th1,\n\th2,\n\th3,\n\th4 {\n\t\tcolor: #000000;\n\t\tfont-weight: 600;\n\t\tline-height: 1.4;\n\t\tmargin: 0;\n\t}\n\n\th1 {\n\t\tfont-size: 30px;\n\t}\n\n\tp,\n\tul,\n\tol {\n\t\tfont-size: 14px;\n\t\tfont-weight: normal;\n\t\tmargin: 0;\n\t\tmargin-bottom: 15px; \n\t}\n\t\tp li,\n\t\tul li,\n\t\tol li {\n\t\t\tlist-style-position: inside;\n\t\t\tmargin-left: 5px; \n\t}\n\n\ta {\n\t\tcolor: #22a8e6;\n\t\ttext-decoration: none; \n\t}\n\n\th2.report-date {\n\t\tmargin: 25px 0 4px;\n\t\tfont-size: 18px;\n\t}\n\n\t.site-url {\n\t\tcolor: #595d6f;\n\t\ttext-decoration: none;\n\t\tfont-size: 15px;\n\t}\n\n\t.full-report-link {\n\t\tvertical-align: bottom;\n\t\ttext-align: right;\n\t\twidth: 110px;\n\t}\n\n\t.full-report-link a {\n\t\tfont-size: 12px;\n\t\tfont-weight: 600;\n\t\ttext-decoration: none;\n\t}\n\n\t.full-report-link img {\n\t\tvertical-align: -1px;\n\t\tmargin-left: 2px;\n\t}\n\n\ttable.report-error {\n\t\tborder: 2px solid #f1d400;\n\t\tbackground: #fffdec;\n\t\tmargin: 10px 0;\n\t}\n\n\ttable.report-error td {\n\t\tpadding: 5px 10px;\n\t}\n\ttable.stats {\n\t\tborder-collapse: separate;\n\t\tmargin-top: 10px;\n\t}\n\n\ttable.stats td {\n\t\twidth: 50%;\n\t\tpadding: 20px 20px;\n\t\tbackground: #f7f9fb;\n\t\tborder: 10px solid #fff;\n\t\tborder-radius: 16px;\n\t}\n\n\ttable.stats td.col-2 {\n\t\tborder-right: none;\n\t}\n\n\ttable.stats td.col-1 {\n\t\tborder-left: none;\n\t}\n\n\th3 {\n\t\tfont-size: 13px;\n\t\tfont-weight: 500;\n\t\tcolor: #565a6b;\n\t\ttext-transform: uppercase;\n\t}\n\n\t.stat-value {\n\t\tcolor: #000000;\n\t\tfont-size: 25px;\n\t\tfont-weight: 700;\n\t}\n\n\t.stat-diff {\n\t\tfont-size: 14px;\n\t\tfont-weight: 500;\n\t}\n\n\t.stat-diff.positive {\n\t\tcolor: #339e75;\n\t}\n\n\tspan.stat-diff.negative {\n\t\tcolor: #e2454f;\n\t}\n\n\t.stat-diff.no-diff {\n\t\tcolor: #999ba7;\n\t}\n\n\t.diff-sign {\n\t\tfont-size: 10px;\n\t}\n\n\t.stats-2 {\n\t\tmargin: 50px 0 24px;\n\t}\n\n\t.stats-2 td.col-1, .stats-2 td.col-2 {\n\t\tborder-right: 3px solid #f7f9fb;\n\t}\n\n\t.stats-2 td.col-2, .stats-2 td.col-3 {\n\t\tpadding-left: 40px;\n\t}\n\n\t.cta {\n\t\tmargin-bottom: 0;\n\t}\n\n\t\/* -------------------------------------\n\t\t\tBUTTONS\n\t------------------------------------- *\/\n\t.btn {\n\t\tbox-sizing: border-box;\n\t\twidth: 100%;\n\t}\n\n\t.btn > tbody > tr > td {\n\t\tpadding-bottom: 48px;\n\t\ttext-align: center;\n\t\tpadding-top: 34px;\n\t}\n\n\t.btn table {\n\t\twidth: auto; \n\t}\n\n\t.btn table td {\n\t\tbackground-color: #ffffff;\n\t\tborder-radius: 5px;\n\t\ttext-align: center; \n\t}\n\n\t.btn a {\n\t\tborder: none;\n\t\tborder-radius: 31px;\n\t\tbox-sizing: border-box;\n\t\tcolor: #59403b;\n\t\tcursor: pointer;\n\t\tdisplay: inline-block;\n\t\tfont-size: 16px;\n\t\tfont-weight: 700;\n\t\tmargin: 0;\n\t\tpadding: 18px 44px;\n\t\ttext-decoration: none;\n\t\ttext-transform: capitalize;\n\t\tbackground: rgb(47,166,129);\n\t\tbackground: linear-gradient( 0deg, #f7d070 0%, #f7dc6f 100%);\n\t\tletter-spacing: 0.7px;\n\t}\n\n\t.btn-primary table td {\n\t\tbackground-color: #3498db;\n\t}\n\n\t\/* -------------------------------------\n\t\t\tOTHER STYLES THAT MIGHT BE USEFUL\n\t------------------------------------- *\/\n\t.last {\n\t\tmargin-bottom: 0; \n\t}\n\n\t.first {\n\t\tmargin-top: 0; \n\t}\n\n\t.align-center {\n\t\ttext-align: center; \n\t}\n\n\t.align-right {\n\t\ttext-align: right; \n\t}\n\n\t.align-left {\n\t\ttext-align: left; \n\t}\n\n\t.clear {\n\t\tclear: both; \n\t}\n\n\t.mt0 {\n\t\tmargin-top: 0; \n\t}\n\n\t.mb0 {\n\t\tmargin-bottom: 0; \n\t}\n\n\t.preheader {\n\t\tcolor: transparent;\n\t\tdisplay: none;\n\t\theight: 0;\n\t\tmax-height: 0;\n\t\tmax-width: 0;\n\t\topacity: 0;\n\t\toverflow: hidden;\n\t\tmso-hide: all;\n\t\tvisibility: hidden;\n\t\twidth: 0; \n\t}\n\n\thr {\n\t\tborder: 0;\n\t\tborder-bottom: 1px solid #F0F4F8;\n\t\tmargin: 20px 0; \n\t}\n\n\t\/* -------------------------------------\n\t\t\tRESPONSIVE AND MOBILE FRIENDLY STYLES\n\t------------------------------------- *\/\n\t@media only screen and (max-width: 620px) {\n\t\ttable[class=body] h1 {\n\t\t\tfont-size: 28px !important;\n\t\t\tmargin-bottom: 10px !important; \n\t\t}\n\t\ttable[class=body] p,\n\t\ttable[class=body] ul,\n\t\ttable[class=body] ol,\n\t\ttable[class=body] td,\n\t\ttable[class=body] span,\n\t\ttable[class=body] a {\n\t\t\tfont-size: 16px !important; \n\t\t}\n\t\ttable[class=body] .wrapper,\n\t\ttable[class=body] .article {\n\t\t\tpadding: 10px !important; \n\t\t}\n\t\ttable[class=body] .content {\n\t\t\tpadding: 0 !important; \n\t\t}\n\t\ttable[class=body] .container {\n\t\t\tpadding: 0 !important;\n\t\t\twidth: 100% !important; \n\t\t}\n\t\ttable[class=body] .main {\n\t\t\tborder-left-width: 0 !important;\n\t\t\tborder-radius: 0 !important;\n\t\t\tborder-right-width: 0 !important; \n\t\t}\n\t\ttable[class=body] .btn table {\n\t\t\twidth: 100% !important; \n\t\t}\n\t\ttable[class=body] .btn a {\n\t\t\twidth: 100% !important; \n\t\t}\n\t\ttable[class=body] .img-responsive {\n\t\t\theight: auto !important;\n\t\t\tmax-width: 100% !important;\n\t\t\twidth: auto !important; \n\t\t}\n\t}\n\n\t\/* -------------------------------------\n\t\t\tPRESERVE THESE STYLES IN THE HEAD\n\t------------------------------------- *\/\n\t@media all {\n\t\t.ExternalClass {\n\t\t\twidth: 100%; \n\t\t}\n\t\t.ExternalClass,\n\t\t.ExternalClass p,\n\t\t.ExternalClass span,\n\t\t.ExternalClass font,\n\t\t.ExternalClass td,\n\t\t.ExternalClass div {\n\t\t\tline-height: 100%; \n\t\t}\n\t\t.rankmath-link a {\n\t\t\tcolor: inherit !important;\n\t\t\tfont-family: inherit !important;\n\t\t\tfont-size: inherit !important;\n\t\t\tfont-weight: inherit !important;\n\t\t\tline-height: inherit !important;\n\t\t\ttext-decoration: none !important; \n\t\t}\n\t\t#MessageViewBody a {\n\t\t\tcolor: inherit;\n\t\t\ttext-decoration: none;\n\t\t\tfont-size: inherit;\n\t\t\tfont-family: inherit;\n\t\t\tfont-weight: inherit;\n\t\t\tline-height: inherit;\n\t\t}\n\t\t.btn-primary table td:hover {\n\t\t\tbackground-color: #34495e !important; \n\t\t}\n\t\t.btn-primary a:hover {\n\t\t\tbackground-color: #34495e !important;\n\t\t\tborder-color: #34495e !important; \n\t\t} \n\t}\n<\/style>\n\n<?php $this->template_part( 'pro-style' ); ?>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/sections\/summary.php","ext":"php","size":1995,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report summary table template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n\n<?php if ( $this->get_variable( 'stats_invalid_data' ) ) { ?>\n\t<?php return; ?>\n<?php } ?>\n\n<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"stats\">\n\t<tr>\n\t\t<td class=\"col-1\">\n\t\t\t<h3><?php esc_html_e( 'Total Impressions', 'rank-math' ); ?><\/h3>\n\t\t\t<?php\n\t\t\t$this->template_part(\n\t\t\t\t'stat',\n\t\t\t\t[\n\t\t\t\t\t'value'      => $this->get_variable( 'stats_impressions' ),\n\t\t\t\t\t'diff'       => $this->get_variable( 'stats_impressions_diff' ),\n\t\t\t\t\t'graph'      => true,\n\t\t\t\t\t'graph_data' => $this->get_graph_data( 'impressions' ),\n\t\t\t\t]\n\t\t\t);\n\t\t\t?>\n\t\t<\/td>\n\t\t<td class=\"col-2\">\n\t\t\t<h3><?php esc_html_e( 'Total Clicks', 'rank-math' ); ?><\/h3>\n\t\t\t<?php\n\t\t\t$this->template_part(\n\t\t\t\t'stat',\n\t\t\t\t[\n\t\t\t\t\t'value'      => $this->get_variable( 'stats_clicks' ),\n\t\t\t\t\t'diff'       => $this->get_variable( 'stats_clicks_diff' ),\n\t\t\t\t\t'graph'      => true,\n\t\t\t\t\t'graph_data' => $this->get_graph_data( 'clicks' ),\n\t\t\t\t]\n\t\t\t);\n\t\t\t?>\n\t\t<\/td>\n\t<\/tr>\n\t<tr>\n\t\t<td class=\"col-1\">\n\t\t\t<h3><?php esc_html_e( 'Total Keywords', 'rank-math' ); ?><\/h3>\n\t\t\t<?php\n\t\t\t$this->template_part(\n\t\t\t\t'stat',\n\t\t\t\t[\n\t\t\t\t\t'value'      => $this->get_variable( 'stats_keywords' ),\n\t\t\t\t\t'diff'       => $this->get_variable( 'stats_keywords_diff' ),\n\t\t\t\t\t'graph'      => true,\n\t\t\t\t\t'graph_data' => $this->get_graph_data( 'keywords' ),\n\t\t\t\t]\n\t\t\t);\n\t\t\t?>\n\t\t<\/td>\n\t\t<td class=\"col-2\">\n\t\t\t<h3><?php esc_html_e( 'Average Position', 'rank-math' ); ?><\/h3>\n\t\t\t<?php\n\t\t\t$this->template_part(\n\t\t\t\t'stat',\n\t\t\t\t[\n\t\t\t\t\t'value'          => $this->get_variable( 'stats_position' ),\n\t\t\t\t\t'diff'           => $this->get_variable( 'stats_position_diff' ),\n\t\t\t\t\t'graph'          => true,\n\t\t\t\t\t'graph_data'     => $this->get_graph_data( 'position' ),\n\t\t\t\t\t'graph_modifier' => -100,\n\t\t\t\t\t'human_number'   => false,\n\t\t\t\t\t'invert'         => true,\n\t\t\t\t]\n\t\t\t);\n\t\t\t?>\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/sections\/positions.php","ext":"php","size":1252,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report summary table template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n\n<?php if ( $this->get_variable( 'stats_invalid_data' ) ) { ?>\n\t<?php return; ?>\n<?php } ?>\n\n<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"stats-2\">\n\t<tr>\n\t\t<td class=\"col-1\">\n\t\t\t<h3><?php esc_html_e( 'Top 3 Positions', 'rank-math' ); ?><\/h3>\n\t\t\t<?php\n\t\t\t$this->template_part(\n\t\t\t\t'stat',\n\t\t\t\t[\n\t\t\t\t\t'value' => $this->get_variable( 'stats_top_3_positions' ),\n\t\t\t\t\t'diff'  => $this->get_variable( 'stats_top_3_positions_diff' ),\n\t\t\t\t]\n\t\t\t);\n\t\t\t?>\n\t\t<\/td>\n\t\t<td class=\"col-2\">\n\t\t\t<h3><?php esc_html_e( '4-10 Positions', 'rank-math' ); ?><\/h3>\n\t\t\t<?php\n\t\t\t$this->template_part(\n\t\t\t\t'stat',\n\t\t\t\t[\n\t\t\t\t\t'value' => $this->get_variable( 'stats_top_10_positions' ),\n\t\t\t\t\t'diff'  => $this->get_variable( 'stats_top_10_positions_diff' ),\n\t\t\t\t]\n\t\t\t);\n\t\t\t?>\n\t\t<\/td>\n\t\t<td class=\"col-3\">\n\t\t\t<h3><?php esc_html_e( '11-50 Positions', 'rank-math' ); ?><\/h3>\n\t\t\t<?php\n\t\t\t$this->template_part(\n\t\t\t\t'stat',\n\t\t\t\t[\n\t\t\t\t\t'value' => $this->get_variable( 'stats_top_50_positions' ),\n\t\t\t\t\t'diff'  => $this->get_variable( 'stats_top_50_positions_diff' ),\n\t\t\t\t]\n\t\t\t);\n\t\t\t?>\n\t\t<\/td>\n\t<\/tr>\n<\/table>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/footer.php","ext":"php","size":615,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report email template footer.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t\t<\/table>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\n\t\t\t\t\t\t\t<!-- START FOOTER -->\n\t\t\t\t\t\t\t<tr class=\"footer\">\n\t\t\t\t\t\t\t\t<td class=\"wrapper\">\n\t\t\t\t\t\t\t\t\t<p class=\"first\">\n\t\t\t\t\t\t\t\t\t\t###FOOTER_HTML###\n\t\t\t\t\t\t\t\t\t<\/p>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<!-- END FOOTER -->\n\n\t\t\t\t\t\t\t<!-- END MAIN CONTENT AREA -->\n\n\t\t\t\t\t\t<\/table>\n\t\t\t\t\t\t<!-- END CENTERED WHITE CONTAINER -->\n\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/td>\n\t\t\t\t<td>&nbsp;<\/td>\n\t\t\t<\/tr>\n\t\t<\/table>\n\t<\/body>\n<\/html>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/cta.php","ext":"php","size":502,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report header template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\nuse RankMath\\KB;\n\ndefined( 'ABSPATH' ) || exit;\n\n?>\n<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"cta\">\n\t<tbody>\n\t\t<tr class=\"top\">\n\t\t\t<td align=\"left\">\n\t\t\t\t<a href=\"<?php KB::the( 'seo-email-reporting', 'Email Report CTA' ); ?>\"><?php $this->image( 'rank-math-pro.jpg', 540, 422, __( 'Rank Math PRO', 'rank-math' ) ); ?><\/a>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t<\/tbody>\n<\/table>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/header.php","ext":"php","size":1745,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report header template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n?><!doctype html>\n<html>\n\t<head>\n\t\t<meta name=\"viewport\" content=\"width=device-width\" \/>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\" \/>\n\t\t<title><?php esc_html_e( 'SEO Report of Your Website', 'rank-math' ); ?><\/title>\n\n\t\t<?php $this->template_part( 'style' ); ?>\n\t<\/head>\n\t<body class=\"\">\n\t\t<span class=\"preheader\"><?php esc_html_e( 'SEO Report of Your Website', 'rank-math' ); ?><\/span>\n\t\t<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"body\">\n\t\t\t<tr>\n\t\t\t\t<td>&nbsp;<\/td>\n\t\t\t\t<td class=\"container\">\n\t\t\t\t\t<div class=\"content\">\n\n\t\t\t\t\t\t<!-- START CENTERED WHITE CONTAINER -->\n\t\t\t\t\t\t<table role=\"presentation\" class=\"main\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\n\t\t\t\t\t\t\t<!-- START HEADER -->\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"header\">\n\t\t\t\t\t\t\t\t\t<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"logo\">\n\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"###LOGO_LINK###\" target=\"_blank\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<?php $this->image( 'report-logo.png', 0, 26, __( 'Rank Math', 'rank-math' ) ); ?>\n\t\t\t\t\t\t\t\t\t\t\t\t<\/a>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t\t<td class=\"period-days\">\n\t\t\t\t\t\t\t\t\t\t\t\t<?php \/\/ Translators: don't translate the variable names between the #hashes#. ?>\n\t\t\t\t\t\t\t\t\t\t\t\t<?php esc_html_e( 'Last ###PERIOD_DAYS### Days', 'rank-math' ); ?>\n\t\t\t\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t\t\t<\/table>\n\t\t\t\t\t\t\t\t<\/td>\n\t\t\t\t\t\t\t<\/tr>\n\t\t\t\t\t\t\t<!-- END HEADER -->\n\n\t\t\t\t\t\t\t<!-- START MAIN CONTENT AREA -->\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td class=\"wrapper\">\n\t\t\t\t\t\t\t\t\t<table role=\"presentation\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/views\/email-reports\/stat.php","ext":"php","size":1622,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Report header template.\n *\n * @package    RankMath\n * @subpackage RankMath\\Admin\n *\/\n\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n$diff_class = $diff > 0 ? 'positive' : 'negative';\n\nif ( ! empty( $invert ) ) {\n\t$diff_class = $diff < 0 ? 'positive' : 'negative';\n}\n\n$diff_sign = '<span class=\"diff-sign\">' . ( 'positive' === $diff_class ? '&#9650;' : '&#9660;' ) . '<\/span>';\n\nif ( 0.0 === floatval( $diff ) ) {\n\t$diff_class = 'no-diff';\n\t$diff_sign  = '';\n}\n\n$stat_value = $value;\n$stat_diff  = abs( $diff );\n\n\/\/ Human number is 'true' by default.\nif ( ! isset( $human_number ) || $human_number ) {\n\t$stat_value = Str::human_number( $stat_value );\n\t$stat_diff  = Str::human_number( $stat_diff );\n}\n\n?>\n<span class=\"stat-value\">\n\t<?php echo esc_html( $stat_value ); ?>\n<\/span>\n<span class=\"stat-diff <?php echo sanitize_html_class( $diff_class ); ?>\">\n\t<?php echo $diff_sign . ' ' . esc_html( $stat_diff ); \/\/ phpcs:ignore ?>\n<\/span>\n\n<?php\nif ( ! empty( $graph ) && ! empty( $graph_data ) ) {\n\n\t$show_graph = false;\n\t\/\/ Check data points.\n\tforeach ( $graph_data as $key => $value ) {\n\t\tif ( ! empty( $value ) ) {\n\t\t\t$show_graph = true;\n\t\t}\n\n\t\t\/\/ Adjust values.\n\t\tif ( ! empty( $graph_modifier ) ) {\n\t\t\t$graph_data[ $key ] = abs( $graph_data[ $key ] + $graph_modifier );\n\t\t}\n\t}\n\n\tif ( ! $show_graph ) {\n\t\treturn;\n\t}\n\n\t\/\/ `img` tag size.\n\t\/\/ Actual image size is 3x this.\n\t$width  = 64;\n\t$height = 34;\n\n\t$this->image( $this->charts_api_url( $graph_data, $width * 3, $height * 3 ), $width, $height, __( 'Data Chart', 'rank-math' ), [ 'style' => 'float: right;margin-top: -7px;' ] );\n} ?>\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-objects.php","ext":"php","size":3012,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics Module\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Objects class.\n *\n * @method set_page_as_key()\n *\/\nclass Objects extends Summary {\n\n\t\/**\n\t * Get objects for pages.\n\t *\n\t * @param  array $pages Array of urls.\n\t * @return array\n\t *\/\n\tpublic function get_objects( $pages ) {\n\t\tif ( empty( $pages ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$pages = DB::objects()\n\t\t\t->whereIn( 'page', \\array_unique( $pages ) )\n\t\t\t->where( 'is_indexable', 1 )\n\t\t\t->get( ARRAY_A );\n\n\t\treturn $this->set_page_as_key( $pages );\n\t}\n\n\t\/**\n\t * Get objects by seo score range filter.\n\t *\n\t * @param WP_REST_Request $request Filters.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_objects_by_score( $request ) {\n\t\tglobal $wpdb;\n\n\t\t$orderby   = in_array( $request->get_param( 'orderby' ), [ 'title', 'seo_score', 'created' ], true ) ? $request->get_param( 'orderby' ) : 'created';\n\t\t$order     = in_array( $request->get_param( 'order' ), [ 'asc', 'desc' ], true ) ? strtoupper( $request->get_param( 'order' ) ) : 'DESC';\n\t\t$post_type = sanitize_key( $request->get_param( 'postType' ) );\n\t\t\/\/ Construct filters from request parameters.\n\t\t$filters    = [\n\t\t\t'good'   => $request->get_param( 'good' ),\n\t\t\t'ok'     => $request->get_param( 'ok' ),\n\t\t\t'bad'    => $request->get_param( 'bad' ),\n\t\t\t'noData' => $request->get_param( 'noData' ),\n\t\t];\n\t\t$field_name = 'seo_score';\n\t\t$per_page   = $request->get_param( 'per_page' ) ? sanitize_text_field( $request->get_param( 'per_page' ) ) : 25;\n\t\t$offset     = ( sanitize_text_field( $request->get_param( 'page' ) ) - 1 ) * $per_page;\n\n\t\t\/\/ Construct SQL condition based on filter parameters.\n\t\t$conditions = [];\n\t\tif ( $filters['good'] ) {\n\t\t\t$conditions[] = \"{$field_name} BETWEEN 81 AND 100\";\n\t\t}\n\n\t\tif ( $filters['ok'] ) {\n\t\t\t$conditions[] = \"{$field_name} BETWEEN 51 AND 80\";\n\t\t}\n\n\t\tif ( $filters['bad'] ) {\n\t\t\t$conditions[] = \"{$field_name} BETWEEN 1 AND 50\";\n\t\t}\n\n\t\tif ( $filters['noData'] ) {\n\t\t\t$conditions[] = \"{$field_name} = 0\";\n\t\t}\n\n\t\t$subwhere = '';\n\t\tif ( count( $conditions ) > 0 ) {\n\t\t\t$subwhere = implode( ' OR ', $conditions );\n\t\t\t$subwhere = \" AND ({$subwhere})\";\n\t\t}\n\n\t\tif ( $post_type ) {\n\t\t\t$subwhere = $subwhere . ' AND object_subtype = \"' . $post_type . '\"';\n\t\t}\n\n\t\t\/\/ Get filtered objects data limited by page param.\n\t\t$pages = DB_Helper::get_results(\n\t\t\t\"SELECT * FROM {$wpdb->prefix}rank_math_analytics_objects \n\t\t\tWHERE is_indexable = 1 \n\t\t\t{$subwhere} \n\t\t\tORDER BY {$orderby} {$order}\n\t\t\tLIMIT {$offset} , {$per_page}\",\n\t\t\tARRAY_A\n\t\t);\n\n\t\t\/\/ Get total filtered objects count.\n\t\t$total_rows = DB_Helper::get_var(\n\t\t\t\"SELECT count(*) FROM {$wpdb->prefix}rank_math_analytics_objects \n\t\t\tWHERE is_indexable = 1 \n\t\t\t{$subwhere}\n\t\t\tORDER BY created DESC\"\n\t\t);\n\n\t\treturn [\n\t\t\t'rows'      => $this->set_page_as_key( $pages ),\n\t\t\t'rowsFound' => $total_rows,\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-url-inspection.php","ext":"php","size":2903,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Get URL Inspection data.\n *\n * @since      1.0.84\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse Exception;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Helpers\\Schedule;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Url_Inspection class.\n *\/\nclass Url_Inspection {\n\n\t\/**\n\t * Holds the singleton instance of this class.\n\t *\n\t * @var Url_Inspection\n\t *\/\n\tprivate static $instance;\n\n\t\/**\n\t * Singleton\n\t *\/\n\tpublic static function get() {\n\t\tif ( is_null( self::$instance ) ) {\n\t\t\tself::$instance = new self();\n\t\t}\n\t\treturn self::$instance;\n\t}\n\n\t\/**\n\t * Schedule a new inspection for an object ID.\n\t *\n\t * @param string $page       URL to inspect (relative).\n\t * @param string $reschedule What to do if the job already exists: reschedule for new time, or skip and keep old time.\n\t * @param int    $delay      Number of seconds to delay the inspection from now.\n\t *\/\n\tpublic function schedule_inspection( $page, $reschedule = true, $delay = 0 ) {\n\t\t$delay = absint( $delay );\n\t\tif ( $reschedule ) {\n\t\t\tSchedule::unschedule_action( 'rank_math\/analytics\/get_inspections_data', [ $page ], 'rank-math' );\n\t\t} elseif ( as_has_scheduled_action( 'rank_math\/analytics\/get_inspections_data', [ $page ], 'rank-math' ) ) {\n\t\t\t\/\/ Already scheduled and reschedule = false.\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 0 === $delay ) {\n\t\t\tSchedule::async_action( 'rank_math\/analytics\/get_inspections_data', [ $page ], 'rank-math' );\n\t\t\treturn;\n\t\t}\n\n\t\t$time = time() + $delay;\n\t\tSchedule::single_action( $time, 'rank_math\/analytics\/get_inspections_data', [ $page ], 'rank-math' );\n\t}\n\n\t\/**\n\t * Fetch the inspection data for a URL, store it, and return it.\n\t *\n\t * @param string $page URL to inspect.\n\t *\/\n\tpublic function inspect( $page ) {\n\t\t$inspection = \\RankMath\\Google\\Url_Inspection::get()->get_inspection_data( $page );\n\n\t\tif ( empty( $inspection ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tDB::store_inspection( $inspection );\n\n\t\treturn wp_parse_args( $inspection, DB::get_inspection_defaults() );\n\t}\n\n\t\/**\n\t * Get latest inspection results for each page.\n\t *\n\t * @param array $params   Parameters.\n\t * @param int   $per_page Number of items per page.\n\t *\/\n\tpublic function get_inspections( $params, $per_page ) {\n\t\t\/\/ Early Bail!!\n\t\tif ( ! DB_Helper::check_table_exists( 'rank_math_analytics_inspections' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn DB::get_inspections( $params, $per_page );\n\t}\n\n\t\/**\n\t * Check if the \"Enable Index Status Tab\" option is enabled.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_enabled() {\n\t\t$profile = get_option( 'rank_math_google_analytic_profile', [] );\n\t\tif ( empty( $profile ) || ! is_array( $profile ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$enable_index_status = true;\n\t\tif ( isset( $profile['enable_index_status'] ) ) {\n\t\t\t$enable_index_status = $profile['enable_index_status'];\n\t\t}\n\n\t\treturn $enable_index_status;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-email-reports.php","ext":"php","size":16510,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Analytics Email Reports.\n *\n * @since      1.0.68\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Google\\Console;\nuse RankMath\\Admin\\Admin_Helper;\n\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Email_Reports class.\n *\/\nclass Email_Reports {\n\n\tuse Hooker;\n\n\t\/**\n\t * Email content variables.\n\t *\n\t * @var array\n\t *\/\n\tprivate $variables = [];\n\n\t\/**\n\t * Path to the views directory.\n\t *\n\t * @var array\n\t *\/\n\tprivate $views_path = '';\n\n\t\/**\n\t * URL to the assets directory.\n\t *\n\t * @var array\n\t *\/\n\tprivate $assets_url = '';\n\n\t\/**\n\t * Charts Account.\n\t *\n\t * @var string\n\t *\/\n\tprivate $charts_account = 'rankmath';\n\n\t\/**\n\t * Charts Key.\n\t *\n\t * @var string\n\t *\/\n\tprivate $charts_key = '10042B42-9193-428A-ABA7-5753F3370F84';\n\n\t\/**\n\t * Graph data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $graph_data = [];\n\n\t\/**\n\t * Debug mode.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate $debug = false;\n\n\t\/**\n\t * The constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( ! Console::is_console_connected() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$directory        = __DIR__;\n\t\t$this->views_path = $directory . '\/views\/email-reports\/';\n\n\t\t$url              = plugin_dir_url( __FILE__ );\n\t\t$this->assets_url = $this->do_filter( 'analytics\/email_report_assets_url', $url . 'assets\/' );\n\n\t\t$this->hooks();\n\t}\n\n\t\/**\n\t * Add filter & action hooks.\n\t *\n\t * @return void\n\t *\/\n\tpublic function hooks() {\n\t\t$this->action( 'rank_math\/analytics\/email_report_event', 'email_report' );\n\t\t$this->action( 'wp_loaded', 'maybe_debug' );\n\n\t\t$this->action( 'rank_math\/analytics\/email_report_html', 'replace_variables' );\n\t\t$this->action( 'rank_math\/analytics\/email_report_html', 'strip_comments' );\n\t}\n\n\t\/**\n\t * Send Analytics report or error message.\n\t *\n\t * @return void\n\t *\/\n\tpublic function email_report() {\n\t\t$this->setup_variables();\n\t\t$this->send_report();\n\t}\n\n\t\/**\n\t * Collect variables to be used in the Report template.\n\t *\n\t * @return void\n\t *\/\n\tpublic function setup_variables() {\n\t\t$stats = $this->get_stats();\n\t\t$date  = $this->get_date();\n\n\t\t\/\/ Translators: placeholder is \"rankmath.com\" as a link.\n\t\t$footer_text  = sprintf( esc_html__( 'This email was sent to you as a registered member of %s.', 'rank-math' ), '<a href=\"###SITE_URL###\">###SITE_URL_SIMPLE###<\/a>' );\n\t\t$footer_text .= ' ';\n\n\t\t\/\/ Translators: placeholder is \"click here\" as a link.\n\t\t$footer_text .= sprintf( esc_html__( 'To update your email preferences, %s.', 'rank-math' ), '<a href=\"###SETTINGS_URL###\">' . esc_html__( 'click here', 'rank-math' ) . '<\/a>' );\n\n\t\t$footer_text .= '###ADDRESS###';\n\n\t\t$this->variables = [\n\t\t\t'site_url'                    => get_home_url(),\n\t\t\t'site_url_simple'             => explode( ':\/\/', get_home_url() )[1],\n\t\t\t'settings_url'                => Helper::get_settings_url( 'general', 'analytics' ),\n\t\t\t'report_url'                  => Helper::get_admin_url( 'analytics' ),\n\t\t\t'assets_url'                  => $this->assets_url,\n\t\t\t'address'                     => '<br\/> [rank_math_contact_info show=\"address\"]',\n\t\t\t'logo_link'                   => KB::get( 'email-reports-logo', 'Email Report Logo' ),\n\n\t\t\t'period_days'                 => $date['period'],\n\t\t\t'start_date'                  => $date['start'],\n\t\t\t'end_date'                    => $date['end'],\n\n\t\t\t'stats_clicks'                => $stats['clicks'],\n\t\t\t'stats_clicks_diff'           => $stats['clicks_diff'],\n\t\t\t'stats_traffic'               => $stats['traffic'],\n\t\t\t'stats_traffic_diff'          => $stats['traffic_diff'],\n\t\t\t'stats_impressions'           => $stats['impressions'],\n\t\t\t'stats_impressions_diff'      => $stats['impressions_diff'],\n\t\t\t'stats_keywords'              => $stats['keywords'],\n\t\t\t'stats_keywords_diff'         => $stats['keywords_diff'],\n\t\t\t'stats_position'              => $stats['position'],\n\t\t\t'stats_position_diff'         => $stats['position_diff'],\n\t\t\t'stats_top_3_positions'       => $stats['top_3_positions'],\n\t\t\t'stats_top_3_positions_diff'  => $stats['top_3_positions_diff'],\n\t\t\t'stats_top_10_positions'      => $stats['top_10_positions'],\n\t\t\t'stats_top_10_positions_diff' => $stats['top_10_positions_diff'],\n\t\t\t'stats_top_50_positions'      => $stats['top_50_positions'],\n\t\t\t'stats_top_50_positions_diff' => $stats['top_50_positions_diff'],\n\t\t\t'stats_invalid_data'          => $stats['invalid_data'],\n\t\t\t'footer_html'                 => $footer_text,\n\t\t];\n\n\t\t$this->variables = $this->do_filter( 'analytics\/email_report_variables', $this->variables );\n\t}\n\n\t\/**\n\t * Get date data.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_date() {\n\t\t$period = self::get_period_from_frequency();\n\n\t\t\/\/ Shift 3 days prior.\n\t\t$subtract = DAY_IN_SECONDS * 3;\n\t\t$start    = strtotime( '-' . $period . ' days' ) - $subtract;\n\t\t$end      = strtotime( $this->do_filter( 'analytics\/report_end_date', 'today' ) ) - $subtract;\n\n\t\t$start = date_i18n( 'd M Y', $start );\n\t\t$end   = date_i18n( 'd M Y', $end );\n\t\treturn compact( 'start', 'end', 'period' );\n\t}\n\n\t\/**\n\t * Get Analytics stats.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_stats() {\n\t\t$period = self::get_period_from_frequency();\n\t\t$stats  = Stats::get();\n\t\t$stats->set_date_range( \"-{$period} days\" );\n\n\t\t\/\/ Basic stats.\n\t\t$data = (array) $stats->get_analytics_summary();\n\n\t\t$analytics              = get_option( 'rank_math_google_analytic_options' );\n\t\t$is_analytics_connected = ! empty( $analytics ) && ! empty( $analytics['view_id'] );\n\n\t\t$out = [];\n\n\t\t$out['impressions']      = $data['impressions']['total'];\n\t\t$out['impressions_diff'] = $data['impressions']['difference'];\n\n\t\t$out['traffic']      = 0;\n\t\t$out['traffic_diff'] = 0;\n\t\tif ( $is_analytics_connected && defined( 'RANK_MATH_PRO_FILE' ) && isset( $data['pageviews'] ) ) {\n\t\t\t$out['traffic']      = $data['pageviews']['total'];\n\t\t\t$out['traffic_diff'] = $data['pageviews']['difference'];\n\t\t}\n\n\t\t$out['clicks']      = 0;\n\t\t$out['clicks_diff'] = 0;\n\t\tif ( ! $is_analytics_connected || ( $is_analytics_connected && ! defined( 'RANK_MATH_PRO_FILE' ) ) ) {\n\t\t\t$out['clicks']      = $data['clicks']['total'];\n\t\t\t$out['clicks_diff'] = $data['clicks']['difference'];\n\t\t}\n\n\t\t$out['keywords']      = $data['keywords']['total'];\n\t\t$out['keywords_diff'] = $data['keywords']['difference'];\n\n\t\t$out['position']      = $data['position']['total'];\n\t\t$out['position_diff'] = $data['position']['difference'];\n\n\t\t\/\/ Keyword stats.\n\t\t$kw_data = (array) $stats->get_top_keywords();\n\n\t\t$out['top_3_positions']      = $kw_data['top3']['total'];\n\t\t$out['top_3_positions_diff'] = $kw_data['top3']['difference'];\n\n\t\t$out['top_10_positions']      = $kw_data['top10']['total'];\n\t\t$out['top_10_positions_diff'] = $kw_data['top10']['difference'];\n\n\t\t$out['top_50_positions']      = $kw_data['top50']['total'];\n\t\t$out['top_50_positions_diff'] = $kw_data['top50']['difference'];\n\n\t\t$out['invalid_data'] = false;\n\t\tif ( ! count( array_filter( $out ) ) ) {\n\t\t\t$out['invalid_data'] = true;\n\t\t}\n\n\t\treturn $out;\n\t}\n\n\t\/**\n\t * Get date period (days) from the frequency option.\n\t *\n\t * @param string $frequency Frequency string.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_period_from_frequency( $frequency = null ) {\n\t\t$periods = [\n\t\t\t'monthly' => 30,\n\t\t];\n\n\t\t$periods = apply_filters( 'rank_math\/analytics\/email_report_periods', $periods );\n\n\t\tif ( empty( $frequency ) ) {\n\t\t\t$frequency = self::get_setting( 'frequency', 'monthly' );\n\t\t}\n\n\t\tif ( isset( $periods[ $frequency ] ) ) {\n\t\t\treturn absint( $periods[ $frequency ] );\n\t\t}\n\n\t\treturn absint( reset( $periods ) );\n\t}\n\n\t\/**\n\t * Send report data.\n\t *\n\t * @return void\n\t *\/\n\tpublic function send_report() {\n\t\t$account      = Admin_Helper::get_registration_data();\n\t\t$report_email = [\n\t\t\t'to'      => $account['email'],\n\t\t\t'subject' => sprintf(\n\t\t\t\t\/\/ Translators: placeholder is the site URL.\n\t\t\t\t__( 'Rank Math [SEO Report] - %s', 'rank-math' ),\n\t\t\t\texplode( ':\/\/', get_home_url() )[1]\n\t\t\t),\n\t\t\t'message' => $this->get_template( 'report' ),\n\t\t\t'headers' => 'Content-Type: text\/html; charset=UTF-8',\n\t\t];\n\n\t\t\/**\n\t\t * Filter: rank_math\/analytics\/email_report_parameters\n\t\t * Filters the report email parameters.\n\t\t *\/\n\t\t$report_email = $this->do_filter( 'analytics\/email_report_parameters', $report_email );\n\n\t\twp_mail(\n\t\t\t$report_email['to'],\n\t\t\t$report_email['subject'],\n\t\t\t$report_email['message'],\n\t\t\t$report_email['headers']\n\t\t);\n\t}\n\n\t\/**\n\t * Get full HTML template for email.\n\t *\n\t * @param string $template Template name.\n\t * @return string\n\t *\/\n\tprivate function get_template( $template ) {\n\t\t$file = $this->locate_template( $template );\n\n\t\t\/**\n\t\t * Filter template file.\n\t\t *\/\n\t\t$file = $this->do_filter( 'analytics\/email_report_template', $file, $template );\n\n\t\tif ( ! file_exists( $file ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tob_start();\n\t\tinclude_once $file;\n\t\t$content = ob_get_clean();\n\n\t\t\/**\n\t\t * Filter template HTML.\n\t\t *\/\n\t\treturn $this->do_filter( 'analytics\/email_report_html', $content );\n\t}\n\n\t\/**\n\t * Locate and include template part.\n\t *\n\t * @param string $part Template part.\n\t * @param array  $args Template arguments.\n\t * @return mixed\n\t *\/\n\tprivate function template_part( $part, $args = [] ) {\n\t\t$file = $this->locate_template( $part );\n\n\t\t\/**\n\t\t * Filter template part.\n\t\t *\/\n\t\t$file = $this->do_filter( 'analytics\/email_report_template_part', $file, $part, $args );\n\n\t\tif ( ! file_exists( $file ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\textract( $args, EXTR_SKIP ); \/\/ phpcs:ignore\n\t\tinclude $file;\n\t}\n\n\t\/**\n\t * Replace variables in content.\n\t *\n\t * @param string $content   Email content.\n\t * @param string $recursion Recursion count, to account for double-encoded variables.\n\t * @return string\n\t *\/\n\tpublic function replace_variables( $content, $recursion = 1 ) {\n\t\tforeach ( $this->variables as $key => $value ) {\n\t\t\tif ( ! is_scalar( $value ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ Variables must be uppercase.\n\t\t\t$key = mb_strtoupper( $key );\n\n\t\t\t$content = str_replace( \"###$key###\", $value, $content );\n\t\t}\n\n\t\tif ( $recursion ) {\n\t\t\t--$recursion;\n\t\t\t$content = $this->replace_variables( $content, $recursion );\n\t\t}\n\n\t\treturn do_shortcode( $content );\n\t}\n\n\t\/**\n\t * Strip HTML & CSS comments.\n\t *\n\t * @param string $content Email content.\n\t * @return string\n\t *\/\n\tpublic function strip_comments( $content ) {\n\t\t$content = preg_replace( '[(<!--(.*)-->|\/\\*(.*)\\*\/)]isU', '', $content );\n\n\t\treturn $content;\n\t}\n\n\t\/**\n\t * Init debug mode if requested and allowed.\n\t *\n\t * @return void\n\t *\/\n\tpublic function maybe_debug() {\n\t\tif ( 1 !== absint( Param::get( 'rank_math_analytics_report_preview' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! Helper::has_cap( 'analytics' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$send   = boolval( Param::get( 'send' ) );\n\t\t$values = boolval( Param::get( 'values', '1' ) );\n\n\t\t$this->debug( $send, $values );\n\t}\n\n\t\/**\n\t * Send or output the report email.\n\t *\n\t * @param boolean $send   Send email or output to browser.\n\t * @param boolean $values Replace variables with actual values.\n\t * @return void\n\t *\/\n\tprivate function debug( $send = false, $values = true ) {\n\t\t$this->debug = true;\n\n\t\tif ( $values ) {\n\t\t\t$this->setup_variables();\n\t\t}\n\n\t\tif ( $send ) {\n\t\t\t\/\/ Send it now.\n\t\t\t$this->send_report();\n\t\t\t$url = remove_query_arg(\n\t\t\t\t[\n\t\t\t\t\t'rank_math_analytics_report_preview',\n\t\t\t\t\t'send',\n\t\t\t\t\t'values',\n\t\t\t\t]\n\t\t\t);\n\t\t\tHelper::redirect( $url );\n\t\t\texit;\n\t\t}\n\n\t\t\/\/ Output it to the browser.\n\t\techo $this->get_template( 'report' ); \/\/ phpcs:ignore\n\t\tdie();\n\t}\n\n\t\/**\n\t * Variable getter, whenever the value is needed in PHP.\n\t *\n\t * @param string $name Variable name.\n\t * @return mixed\n\t *\/\n\tpublic function get_variable( $name ) {\n\t\tif ( isset( $this->variables[ $name ] ) ) {\n\t\t\treturn $this->variables[ $name ];\n\t\t}\n\n\t\treturn \"###$name###\";\n\t}\n\n\t\/**\n\t * Setting getter.\n\t *\n\t * @param string $option        Option name.\n\t * @param mixed  $default_value Default value.\n\t * @return mixed\n\t *\/\n\tpublic static function get_setting( $option, $default_value = false ) {\n\t\treturn Helper::get_settings( 'general.console_email_' . $option, $default_value );\n\t}\n\n\t\/**\n\t * Output image inside the email template.\n\t *\n\t * @param string $url    Image URL.\n\t * @param string $width  Image width.\n\t * @param string $height Image height.\n\t * @param string $alt    ALT text.\n\t * @param array  $attr   Additional attributes.\n\t * @return void\n\t *\/\n\tpublic function image( $url, $width = 0, $height = 0, $alt = '', $attr = [] ) {\n\t\t$atts           = $attr;\n\t\t$atts['border'] = '0';\n\n\t\tif ( ! isset( $atts['src'] ) ) {\n\t\t\t$atts['src'] = $url;\n\t\t}\n\n\t\tif ( ! isset( $atts['width'] ) && $width ) {\n\t\t\t$atts['width'] = $width;\n\t\t}\n\n\t\tif ( ! isset( $atts['height'] ) && $height ) {\n\t\t\t$atts['height'] = $height;\n\t\t}\n\n\t\tif ( ! isset( $atts['alt'] ) ) {\n\t\t\t$atts['alt'] = $alt;\n\t\t}\n\n\t\tif ( ! isset( $atts['style'] ) ) {\n\t\t\t$atts['style'] = 'border: 0; outline: none; text-decoration: none; display: inline-block;';\n\t\t}\n\n\t\tif ( substr( $atts['src'], 0, 4 ) !== 'http' && substr( $atts['src'], 0, 3 ) !== '###' ) {\n\t\t\t$atts['src'] = $this->assets_url . 'img\/' . $atts['src'];\n\t\t}\n\n\t\t$atts = $this->do_filter( 'analytics\/email_report_image_atts', $atts, $url, $width, $height, $alt, $attr );\n\n\t\t$attributes = '';\n\t\tforeach ( $atts as $name => $value ) {\n\t\t\tif ( ! empty( $value ) ) {\n\t\t\t\t$value       = ( 'src' === $name ) ? esc_url_raw( $value ) : esc_attr( $value );\n\t\t\t\t$attributes .= ' ' . $name . '=\"' . $value . '\"';\n\t\t\t}\n\t\t}\n\n\t\t$image = \"<img $attributes>\";\n\t\t$image = $this->do_filter( 'analytics\/email_report_image_html', $image, $url, $width, $height, $alt, $attr );\n\n\t\techo $image; \/\/ phpcs:ignore\n\t}\n\n\t\/**\n\t * Gets template path.\n\t *\n\t * @param string $template_name    Template name.\n\t * @param bool   $return_full_path Return the full path or not.\n\t * @return string\n\t *\/\n\tpublic function locate_template( $template_name, $return_full_path = true ) {\n\t\t$default_paths  = [ $this->views_path ];\n\t\t$template_paths = $this->do_filter( 'analytics\/email_report_template_paths', $default_paths );\n\n\t\t$paths        = array_reverse( $template_paths );\n\t\t$located      = '';\n\t\t$path_partial = '';\n\t\tforeach ( $paths as $path ) {\n\t\t\tif ( file_exists( $full_path = trailingslashit( $path ) . $template_name . '.php' ) ) { \/\/ phpcs:ignore\n\t\t\t\t$located      = $full_path;\n\t\t\t\t$path_partial = $path;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $return_full_path ? $located : $path_partial;\n\t}\n\n\t\/**\n\t * Load all graph data into memory.\n\t *\n\t * @return void\n\t *\/\n\tprivate function load_graph_data() {\n\t\t$period = self::get_period_from_frequency();\n\t\t$stats  = Stats::get();\n\t\t$stats->set_date_range( \"-{$period} days\" );\n\t\t$this->graph_data = (array) $stats->get_analytics_summary_graph();\n\t}\n\n\t\/**\n\t * Get data points for graph.\n\t *\n\t * @param string $chart Chart to get data for.\n\t * @return array\n\t *\/\n\tpublic function get_graph_data( $chart ) {\n\t\tif ( empty( $this->graph_data ) ) {\n\t\t\t$this->load_graph_data();\n\t\t}\n\n\t\t$data  = [];\n\t\t$group = 'merged';\n\t\t$prop  = $chart;\n\t\tif ( 'traffic' === $chart ) {\n\t\t\t$group = 'traffic';\n\t\t\t$prop  = 'pageviews';\n\t\t}\n\n\t\tif ( empty( $this->graph_data[ $group ] ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\tforeach ( (array) $this->graph_data[ $group ] as $range_data ) {\n\t\t\t$range_data = (array) $range_data;\n\t\t\tif ( isset( $range_data[ $prop ] ) ) {\n\t\t\t\t$data[] = $range_data[ $prop ];\n\t\t\t}\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Charts API sign request.\n\t *\n\t * @param string $query Query.\n\t * @param string $code  Code.\n\t * @return string\n\t *\/\n\tprivate function charts_api_sign( $query, $code ) {\n\t\treturn hash_hmac( 'sha256', $query, $code );\n\t}\n\n\t\/**\n\t * Generate URL for the Charts API image.\n\t *\n\t * @param  array $graph_data Graph data points.\n\t * @param  int   $width      Image height.\n\t * @param  int   $height     Image width.\n\t *\n\t * @return string\n\t *\/\n\tprivate function charts_api_url( $graph_data, $width = 192, $height = 102 ) {\n\t\t$params = [\n\t\t\t'chco' => '80ace7',\n\t\t\t'chds' => 'a',\n\t\t\t'chf'  => 'bg,s,f7f9fb',\n\t\t\t'chls' => 4,\n\t\t\t'chm'  => 'B,e2eeff,0,0,0',\n\t\t\t'chs'  => \"{$width}x{$height}\",\n\t\t\t'cht'  => 'ls',\n\t\t\t'chd'  => 'a:' . join( ',', $graph_data ),\n\t\t\t'icac' => $this->charts_account,\n\t\t];\n\n\t\t$query_string = urldecode( http_build_query( $params ) );\n\t\t$signature    = $this->charts_api_sign( $query_string, $this->charts_key );\n\n\t\treturn 'https:\/\/charts.rankmath.com\/chart?' . $query_string . '&ichm=' . $signature;\n\t}\n\n\t\/**\n\t * Check if fields should be hidden.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function are_fields_hidden() {\n\t\treturn apply_filters( 'rank_math\/analytics\/hide_email_report_options', false );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-db.php","ext":"php","size":13061,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics module database operations\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Helper;\nuse RankMath\\Google\\Api;\nuse RankMath\\Google\\Console;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\DB as DB_Helper;\nuse RankMath\\Admin\\Database\\Database;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * DB class.\n *\/\nclass DB {\n\n\t\/**\n\t * Get any table.\n\t *\n\t * @param string $table_name Table name.\n\t *\n\t * @return \\RankMath\\Admin\\Database\\Query_Builder\n\t *\/\n\tpublic static function table( $table_name ) {\n\t\treturn Database::table( $table_name );\n\t}\n\n\t\/**\n\t * Get console data table.\n\t *\n\t * @return \\RankMath\\Admin\\Database\\Query_Builder\n\t *\/\n\tpublic static function analytics() {\n\t\treturn Database::table( 'rank_math_analytics_gsc' );\n\t}\n\n\t\/**\n\t * Get objects table.\n\t *\n\t * @return \\RankMath\\Admin\\Database\\Query_Builder\n\t *\/\n\tpublic static function objects() {\n\t\treturn Database::table( 'rank_math_analytics_objects' );\n\t}\n\n\t\/**\n\t * Get inspections table.\n\t *\n\t * @return \\RankMath\\Admin\\Database\\Query_Builder\n\t *\/\n\tpublic static function inspections() {\n\t\treturn Database::table( 'rank_math_analytics_inspections' );\n\t}\n\n\t\/**\n\t * Delete a record.\n\t *\n\t * @param  int $days Decide whether to delete all or delete 90 days data.\n\t *\/\n\tpublic static function delete_by_days( $days ) {\n\t\t\/\/ Delete console data.\n\t\tif ( Console::is_console_connected() ) {\n\t\t\tif ( -1 === $days ) {\n\t\t\t\tself::analytics()->truncate();\n\t\t\t} else {\n\t\t\t\t$start = date_i18n( 'Y-m-d H:i:s', strtotime( '-1 days' ) );\n\t\t\t\t$end   = date_i18n( 'Y-m-d H:i:s', strtotime( '-' . $days . ' days' ) );\n\n\t\t\t\tself::analytics()->whereBetween( 'created', [ $end, $start ] )->delete();\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Delete analytics, adsense data.\n\t\tdo_action( 'rank_math\/analytics\/delete_by_days', $days );\n\t\tself::purge_cache();\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Delete record for comparison.\n\t *\/\n\tpublic static function delete_data_log() {\n\t\t$days = Helper::get_settings( 'general.console_caching_control', 90 );\n\n\t\t\/\/ Delete old console data more than 2 times ago of specified number of days to keep the data.\n\t\t$start = date_i18n( 'Y-m-d H:i:s', strtotime( '-' . ( $days * 2 ) . ' days' ) );\n\n\t\tself::analytics()->where( 'created', '<', $start )->delete();\n\n\t\t\/\/ Delete old analytics and adsense data.\n\t\tdo_action( 'rank_math\/analytics\/delete_data_log', $start );\n\t}\n\n\t\/**\n\t * Purge SC transient\n\t *\/\n\tpublic static function purge_cache() {\n\t\t$table = Database::table( 'options' );\n\t\t$table->whereLike( 'option_name', 'top_keywords' )->delete();\n\t\t$table->whereLike( 'option_name', 'posts_summary' )->delete();\n\t\t$table->whereLike( 'option_name', 'top_keywords_graph' )->delete();\n\t\t$table->whereLike( 'option_name', 'dashboard_stats_widget' )->delete();\n\t\t$table->whereLike( 'option_name', 'rank_math_analytics_data_info' )->delete();\n\n\t\tdo_action( 'rank_math\/analytics\/purge_cache', $table );\n\n\t\twp_cache_flush();\n\t}\n\n\t\/**\n\t * Get search console table info.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function info() {\n\t\tglobal $wpdb;\n\n\t\tif ( ! Api::get()->is_console_connected() ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( ! DB_Helper::check_table_exists( 'rank_math_analytics_gsc' ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$key  = 'rank_math_analytics_data_info';\n\t\t$data = get_transient( $key );\n\t\tif ( false !== $data ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$days = self::analytics()\n\t\t\t->selectCount( 'DISTINCT(created)', 'days' )\n\t\t\t->getVar();\n\n\t\t$rows = self::analytics()\n\t\t\t->selectCount( 'id' )\n\t\t\t->getVar();\n\n\t\t$size = DB_Helper::get_var( \"SELECT SUM((data_length + index_length)) AS size FROM information_schema.TABLES WHERE table_schema='\" . $wpdb->dbname . \"' AND (table_name='\" . $wpdb->prefix . \"rank_math_analytics_gsc')\" );\n\t\t$data = compact( 'days', 'rows', 'size' );\n\n\t\t$data = apply_filters( 'rank_math\/analytics\/analytics_tables_info', $data );\n\n\t\tset_transient( $key, $data, DAY_IN_SECONDS );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Has data pulled.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function has_data() {\n\t\tstatic $rank_math_gsc_has_data;\n\t\tif ( isset( $rank_math_gsc_has_data ) ) {\n\t\t\treturn $rank_math_gsc_has_data;\n\t\t}\n\n\t\t$id = self::objects()\n\t\t->select( 'id' )\n\t\t->limit( 1 )\n\t\t->getVar();\n\n\t\t$rank_math_gsc_has_data = $id > 0 ? true : false;\n\t\treturn $rank_math_gsc_has_data;\n\t}\n\n\t\/**\n\t * Check if console data exists at specified date.\n\t *\n\t * @param  string $date   Date to check data existence.\n\t * @param  string $action Action name to filter data type.\n\t * @return boolean\n\t *\/\n\tpublic static function date_exists( $date, $action = 'console' ) {\n\t\t$tables['console'] = DB_Helper::check_table_exists( 'rank_math_analytics_gsc' ) ? 'rank_math_analytics_gsc' : '';\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/analytics\/date_exists_tables' - Allow developers to add more tables to check.\n\t\t *\/\n\t\t$tables = apply_filters( 'rank_math\/analytics\/date_exists_tables', $tables, $date, $action );\n\n\t\tif ( empty( $tables[ $action ] ) ) {\n\t\t\treturn true; \/\/ Should return true to avoid further data fetch action.\n\t\t}\n\n\t\t$table = self::table( $tables[ $action ] );\n\n\t\t$id = $table\n\t\t\t->select( 'id' )\n\t\t\t->where( 'DATE(created)', $date )\n\t\t\t->getVar();\n\n\t\treturn $id > 0 ? true : false;\n\t}\n\n\t\/**\n\t * Add a new record into objects table.\n\t *\n\t * @param array $args Values to insert.\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function add_object( $args = [] ) {\n\t\tif ( empty( $args ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tunset( $args['id'] );\n\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'created'        => current_time( 'mysql' ),\n\t\t\t\t'page'           => '',\n\t\t\t\t'object_type'    => 'post',\n\t\t\t\t'object_subtype' => 'post',\n\t\t\t\t'object_id'      => 0,\n\t\t\t\t'primary_key'    => '',\n\t\t\t\t'seo_score'      => 0,\n\t\t\t\t'page_score'     => 0,\n\t\t\t\t'is_indexable'   => false,\n\t\t\t\t'schemas_in_use' => '',\n\t\t\t]\n\t\t);\n\n\t\treturn self::objects()->insert( $args, [ '%s', '%s', '%s', '%s', '%d', '%s', '%d', '%d', '%d', '%s' ] );\n\t}\n\n\t\/**\n\t * Add new record in the inspections table.\n\t *\n\t * @param array $args Values to insert.\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function store_inspection( $args = [] ) {\n\t\tif ( empty( $args ) || empty( $args['page'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tunset( $args['id'] );\n\n\t\t$defaults = self::get_inspection_defaults();\n\n\t\t\/\/ Only keep $args items that are in $defaults.\n\t\t$args = array_intersect_key( $args, $defaults );\n\n\t\t\/\/ Apply defaults.\n\t\t$args = wp_parse_args( $args, $defaults );\n\n\t\t\/\/ We only have strings: placeholders will be '%s'.\n\t\t$format = array_fill( 0, count( $args ), '%s' );\n\n\t\t\/\/ Check if we have an existing record, based on 'page'.\n\t\t$id = self::inspections()\n\t\t\t->select( 'id' )\n\t\t\t->where( 'page', $args['page'] )\n\t\t\t->getVar();\n\n\t\tif ( $id ) {\n\t\t\treturn self::inspections()\n\t\t\t\t->set( $args )\n\t\t\t\t->where( 'id', $id )\n\t\t\t\t->update();\n\t\t}\n\n\t\treturn self::inspections()->insert( $args, $format );\n\t}\n\n\t\/**\n\t * Get inspection defaults.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_inspection_defaults() {\n\t\t$defaults = [\n\t\t\t'created'              => current_time( 'mysql' ),\n\t\t\t'page'                 => '',\n\t\t\t'index_verdict'        => 'VERDICT_UNSPECIFIED',\n\t\t\t'indexing_state'       => 'INDEXING_STATE_UNSPECIFIED',\n\t\t\t'coverage_state'       => '',\n\t\t\t'page_fetch_state'     => 'PAGE_FETCH_STATE_UNSPECIFIED',\n\t\t\t'robots_txt_state'     => 'ROBOTS_TXT_STATE_UNSPECIFIED',\n\t\t\t'rich_results_verdict' => 'VERDICT_UNSPECIFIED',\n\t\t\t'rich_results_items'   => '',\n\t\t\t'last_crawl_time'      => '',\n\t\t\t'crawled_as'           => 'CRAWLING_USER_AGENT_UNSPECIFIED',\n\t\t\t'google_canonical'     => '',\n\t\t\t'user_canonical'       => '',\n\t\t\t'sitemap'              => '',\n\t\t\t'referring_urls'       => '',\n\t\t\t'raw_api_response'     => '',\n\t\t];\n\n\t\treturn apply_filters( 'rank_math\/analytics\/inspection_defaults', $defaults );\n\t}\n\n\t\/**\n\t * Add\/Update a record into\/from objects table.\n\t *\n\t * @param array $args Values to update.\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function update_object( $args = [] ) {\n\t\tif ( empty( $args ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ If object exists, try to update.\n\t\t$old_id = absint( $args['id'] );\n\t\tif ( ! empty( $old_id ) ) {\n\t\t\tunset( $args['id'] );\n\n\t\t\t$updated = self::objects()->set( $args )\n\t\t\t\t->where( 'id', $old_id )\n\t\t\t\t->where( 'object_id', absint( $args['object_id'] ) )\n\t\t\t\t->update();\n\n\t\t\tif ( ! empty( $updated ) ) {\n\t\t\t\treturn $old_id;\n\t\t\t}\n\t\t}\n\n\t\t\/\/ In case of new object or failed to update, try to add.\n\t\treturn self::add_object( $args );\n\t}\n\n\t\/**\n\t * Add console records.\n\t *\n\t * @param string $date Date of creation.\n\t * @param array  $rows Data rows to insert.\n\t *\/\n\tpublic static function add_query_page_bulk( $date, $rows ) {\n\t\t$chunks = array_chunk( $rows, 50 );\n\n\t\tforeach ( $chunks as $chunk ) {\n\t\t\tself::bulk_insert_query_page_data( $date . ' 00:00:00', $chunk );\n\t\t}\n\t}\n\n\t\/**\n\t * Bulk inserts records into a console table using WPDB.  All rows must contain the same keys.\n\t *\n\t * @param  string $date        Date.\n\t * @param  array  $rows        Rows to insert.\n\t *\/\n\tpublic static function bulk_insert_query_page_data( $date, $rows ) {\n\t\tglobal $wpdb;\n\n\t\t$data         = [];\n\t\t$placeholders = [];\n\t\t$columns      = [\n\t\t\t'created',\n\t\t\t'query',\n\t\t\t'page',\n\t\t\t'clicks',\n\t\t\t'impressions',\n\t\t\t'position',\n\t\t\t'ctr',\n\t\t];\n\t\t$columns      = '`' . implode( '`, `', $columns ) . '`';\n\t\t$placeholder  = [\n\t\t\t'%s',\n\t\t\t'%s',\n\t\t\t'%s',\n\t\t\t'%d',\n\t\t\t'%d',\n\t\t\t'%d',\n\t\t\t'%d',\n\t\t];\n\n\t\t\/\/ Start building SQL, initialise data and placeholder arrays.\n\t\t$sql = \"INSERT INTO `{$wpdb->prefix}rank_math_analytics_gsc` ( $columns ) VALUES\\n\";\n\n\t\t\/\/ Build placeholders for each row, and add values to data array.\n\t\tforeach ( $rows as $row ) {\n\t\t\tif (\n\t\t\t\t$row['position'] > self::get_position_filter() ||\n\t\t\t\tStr::contains( '?', $row['page'] )\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$data[] = $date;\n\t\t\t$data[] = $row['query'];\n\t\t\t$data[] = self::get_page( $row['page'] );\n\t\t\t$data[] = $row['clicks'];\n\t\t\t$data[] = $row['impressions'];\n\t\t\t$data[] = $row['position'];\n\t\t\t$data[] = $row['ctr'];\n\n\t\t\t$placeholders[] = '(' . implode( ', ', $placeholder ) . ')';\n\t\t}\n\n\t\t\/\/ Don't run insert with empty dataset, return 0 since no rows affected.\n\t\tif ( empty( $data ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t\/\/ Stitch all rows together.\n\t\t$sql .= implode( \",\\n\", $placeholders );\n\n\t\t\/\/ Run the query.  Returns number of affected rows.\n\t\treturn DB_Helper::query( $wpdb->prepare( $sql, $data ) );\n\t}\n\n\t\/**\n\t * Get page slug from full URL.\n\t *\n\t * @param  string $url Full URL to parse.\n\t * @return string Page path\/slug with leading slash.\n\t *\/\n\tpublic static function get_page( $url ) {\n\t\tif ( empty( $url ) || ! is_string( $url ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$url  = urldecode( preg_replace( '\/#.*$\/', '', $url ) );\n\t\t$host = wp_parse_url( $url, PHP_URL_HOST );\n\t\tif ( ! $host ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$url = self::remove_hash( $url );\n\n\t\t$url = str_replace( Helper::get_home_url(), '', $url );\n\n\t\t\/\/ Remove ASCII domain.\n\t\t$host_ascii = idn_to_ascii( $host );\n\t\t$url        = str_replace( $host_ascii, '', $url );\n\n\t\t$url = preg_replace( '#^https?:\/\/(www\\.)?#i', '', $url );\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Remove hash part from Url.\n\t *\n\t * @param  string $url Url to process.\n\t * @return string\n\t *\/\n\tpublic static function remove_hash( $url ) {\n\t\tif ( ! Str::contains( '#', $url ) ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\t$url = \\explode( '#', $url );\n\t\treturn $url[0];\n\t}\n\n\t\/**\n\t * Get position filter.\n\t *\n\t * @return int\n\t *\/\n\tprivate static function get_position_filter() {\n\t\t$number = apply_filters( 'rank_math\/analytics\/position_limit', false );\n\t\tif ( false === $number ) {\n\t\t\treturn 100;\n\t\t}\n\n\t\treturn $number;\n\t}\n\n\t\/**\n\t * Get all inspections.\n\t *\n\t * @param array $params   REST Parameters.\n\t * @param int   $per_page Limit.\n\t *\/\n\tpublic static function get_inspections( $params, $per_page ) {\n\t\t$page     = ! empty( $params['page'] ) ? absint( $params['page'] ) : 1;\n\t\t$per_page = absint( $per_page );\n\t\t$offset   = ( $page - 1 ) * $per_page;\n\n\t\t$inspections = self::inspections()->table;\n\t\t$objects     = self::objects()->table;\n\n\t\t$query = self::inspections()\n\t\t\t->select( [ \"$inspections.*\", \"$objects.title\", \"$objects.object_id\" ] )\n\t\t\t->leftJoin( $objects, \"$inspections.page\", \"$objects.page\" )\n\t\t\t->where( \"$objects.page\", '!=', '' )\n\t\t\t->orderBy( 'id', 'DESC' )\n\t\t\t->limit( $per_page, $offset );\n\n\t\tdo_action_ref_array( 'rank_math\/analytics\/get_inspections_query', [ &$query, $params ] );\n\n\t\t$results = $query->get();\n\n\t\treturn apply_filters( 'rank_math\/analytics\/get_inspections_results', $results );\n\t}\n\n\t\/**\n\t * Get inspections count.\n\t *\n\t * @param array $params   REST Parameters.\n\t *\n\t * @return int\n\t *\/\n\tpublic static function get_inspections_count( $params ) {\n\t\t$inspections = self::inspections()->table;\n\t\t$objects     = self::objects()->table;\n\t\t$query       = self::inspections()\n\t\t->selectCount( \"$inspections.id\", 'total' )\n\t\t->leftJoin( $objects, \"$inspections.page\", \"$objects.page\" )\n\t\t->where( \"$objects.page\", '!=', '' );\n\n\t\tdo_action_ref_array( 'rank_math\/analytics\/get_inspections_count_query', [ &$query, $params ] );\n\n\t\treturn $query->getVar();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/google\/class-api.php","ext":"php","size":1954,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Minimal Google API wrapper.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Google;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Api\n *\/\nclass Api extends Console {\n\n\t\/**\n\t * Access token.\n\t *\n\t * @var array\n\t *\/\n\tpublic $token = [];\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Api\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Api ) ) {\n\t\t\t$instance = new Api();\n\t\t\t$instance->setup();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Setup token.\n\t *\/\n\tprivate function setup() {\n\t\tif ( ! Authentication::is_authorized() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$tokens      = Authentication::tokens();\n\t\t$this->token = $tokens['access_token'];\n\t}\n\n\t\/**\n\t * Get row limit.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_row_limit() {\n\t\treturn apply_filters( 'rank_math\/analytics\/row_limit', 10000 );\n\t}\n\n\t\/**\n\t * Get connection status.\n\t *\n\t * @param string $key Connection status key.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function get_connection_status( $key ) {\n\t\treturn ! get_option( $key, false );\n\t}\n\n\t\/**\n\t * Set connection status.\n\t *\n\t * @param string $key   Connection status key.\n\t * @param bool   $status Connection status.\n\t *\/\n\tpublic function set_connection_status( $key, $status ) {\n\t\tif ( $status ) {\n\t\t\tupdate_option( $key, true );\n\t\t} else {\n\t\t\tdelete_option( $key );\n\t\t}\n\t}\n\n\t\/**\n\t * Check connection status.\n\t *\n\t * @param string   $key     Connection status key.\n\t * @param callable $callback Callback to check connection.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function check_connection_status( $key, $callback ) {\n\t\t$this->set_connection_status( $key, false );\n\n\t\t$response = call_user_func( $callback );\n\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\t$this->set_connection_status( $key, true );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/google\/class-authentication.php","ext":"php","size":3404,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Google Authentication wrapper.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Google;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Data_Encryption;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Security;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Authentication class.\n *\/\nclass Authentication {\n\n\t\/**\n\t * API version.\n\t *\n\t * @var string\n\t *\/\n\tprotected static $api_version = '2.1';\n\n\t\/**\n\t * Get or update token data.\n\t *\n\t * @param  bool|array $data Data to save.\n\t * @return bool|array\n\t *\/\n\tpublic static function tokens( $data = null ) {\n\t\t$key          = 'rank_math_google_oauth_tokens';\n\t\t$encrypt_keys = [\n\t\t\t'access_token',\n\t\t\t'refresh_token',\n\t\t];\n\n\t\t\/\/ Clear data.\n\t\tif ( false === $data ) {\n\t\t\tdelete_option( $key );\n\t\t\treturn false;\n\t\t}\n\n\t\t$saved = get_option( $key, [] );\n\t\tforeach ( $encrypt_keys as $enc_key ) {\n\t\t\tif ( isset( $saved[ $enc_key ] ) ) {\n\t\t\t\t$saved[ $enc_key ] = Data_Encryption::deep_decrypt( $saved[ $enc_key ] );\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Getter.\n\t\tif ( is_null( $data ) ) {\n\t\t\treturn wp_parse_args( $saved, [] );\n\t\t}\n\n\t\t\/\/ Setter.\n\t\tforeach ( $encrypt_keys as $enc_key ) {\n\t\t\tif ( isset( $saved[ $enc_key ] ) ) {\n\t\t\t\t$saved[ $enc_key ] = Data_Encryption::deep_encrypt( $saved[ $enc_key ] );\n\t\t\t}\n\t\t\tif ( isset( $data[ $enc_key ] ) ) {\n\t\t\t\t$data[ $enc_key ] = Data_Encryption::deep_encrypt( $data[ $enc_key ] );\n\t\t\t}\n\t\t}\n\n\t\t$data = wp_parse_args( $data, $saved );\n\t\tupdate_option( $key, $data );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Is google authorized.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_authorized() {\n\t\t$tokens = self::tokens();\n\n\t\treturn isset( $tokens['access_token'] ) && isset( $tokens['refresh_token'] );\n\t}\n\n\t\/**\n\t * Check if token is expired.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_token_expired() {\n\t\t$tokens = self::tokens();\n\n\t\treturn $tokens['expire'] && time() > $tokens['expire'];\n\t}\n\n\t\/**\n\t * Get oauth url.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_auth_url() {\n\t\t$page = self::get_page_slug();\n\n\t\treturn Security::add_query_arg_raw(\n\t\t\t[\n\t\t\t\t'version'      => defined( 'RANK_MATH_PRO_VERSION' ) ? 'pro' : 'free',\n\t\t\t\t'api_version'  => static::$api_version,\n\t\t\t\t'redirect_uri' => rawurlencode( admin_url( 'admin.php?page=' . $page ) ),\n\t\t\t\t'security'     => wp_create_nonce( 'rank_math_oauth_token' ),\n\t\t\t],\n\t\t\tself::get_auth_app_url()\n\t\t);\n\t}\n\n\t\/**\n\t * Google custom app.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_auth_app_url() {\n\t\treturn apply_filters( 'rank_math\/analytics\/app_url', 'https:\/\/oauth.rankmath.com' );\n\t}\n\n\t\/**\n\t * Get page slug according to request.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_page_slug() {\n\t\t$page = Param::get( 'page' );\n\t\tif ( ! empty( $page ) ) {\n\t\t\tswitch ( $page ) {\n\t\t\t\tcase 'rank-math-wizard':\n\t\t\t\t\treturn 'rank-math-wizard&step=analytics';\n\n\t\t\t\tcase 'rank-math-analytics':\n\t\t\t\t\treturn 'rank-math-analytics';\n\n\t\t\t\tdefault:\n\t\t\t\t\tif ( Helper::is_react_enabled() ) {\n\t\t\t\t\t\treturn 'rank-math-options-general&view=analytics';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn 'rank-math-options-general#setting-panel-analytics';\n\t\t\t}\n\t\t}\n\n\t\t$page = wp_get_referer();\n\t\tif ( ! empty( $page ) && Str::contains( 'wizard', $page ) ) {\n\t\t\treturn 'rank-math-wizard&step=analytics';\n\t\t}\n\n\t\treturn 'rank-math-options-general#setting-panel-analytics';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/google\/class-request.php","ext":"php","size":14958,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Google API Request.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Google;\n\nuse RankMath\\Helper;\nuse WP_Error;\nuse RankMath\\Helpers\\Schedule;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Request\n *\/\nclass Request {\n\n\t\/**\n\t * Workflow.\n\t *\n\t * @var string\n\t *\/\n\tprivate $workflow = '';\n\n\t\/**\n\t * Was the last request successful.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $is_success = false;\n\n\t\/**\n\t * Last error.\n\t *\n\t * @var string\n\t *\/\n\tprivate $last_error = '';\n\n\t\/**\n\t * Last response.\n\t *\n\t * @var array\n\t *\/\n\tprivate $last_response = [];\n\n\t\/**\n\t * Last response header code.\n\t *\n\t * @var int\n\t *\/\n\tprotected $last_code = 0;\n\n\t\/**\n\t * Is refresh token notice added.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $is_notice_added = false;\n\n\t\/**\n\t * Access token.\n\t *\n\t * @var string\n\t *\/\n\tpublic $token = '';\n\n\t\/**\n\t * Set workflow\n\t *\n\t * @param string $workflow Workflow name.\n\t *\/\n\tpublic function set_workflow( $workflow = '' ) {\n\t\t$this->workflow = $workflow;\n\t}\n\n\t\/**\n\t * Was the last request successful?\n\t *\n\t * @return bool  True for success, false for failure\n\t *\/\n\tpublic function is_success() {\n\t\treturn $this->is_success;\n\t}\n\n\t\/**\n\t * Get the last error returned by either the network transport, or by the API.\n\t * If something didn't work, this should contain the string describing the problem.\n\t *\n\t * @return  array|false  describing the error\n\t *\/\n\tpublic function get_error() {\n\t\treturn $this->last_error ? $this->last_error : false;\n\t}\n\n\t\/**\n\t * Get an array containing the HTTP headers and the body of the API response.\n\t *\n\t * @return array  Assoc array with keys 'headers' and 'body'\n\t *\/\n\tpublic function get_response() {\n\t\treturn $this->last_response;\n\t}\n\n\t\/**\n\t * Make an HTTP GET request - for retrieving data.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return WP_Error|array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_get( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'GET', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Make an HTTP POST request - for creating and updating items.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return WP_Error|array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_post( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'POST', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Make an HTTP PUT request - for creating new items.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return WP_Error|array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_put( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'PUT', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Make an HTTP DELETE request - for deleting data.\n\t *\n\t * @param string $url     URL to do request.\n\t * @param array  $args    Assoc array of arguments (usually your data).\n\t * @param int    $timeout Timeout limit for request in seconds.\n\t *\n\t * @return WP_Error|array|false     Assoc array of API response, decoded from JSON.\n\t *\/\n\tpublic function http_delete( $url, $args = [], $timeout = 10 ) {\n\t\treturn $this->make_request( 'DELETE', $url, $args, $timeout );\n\t}\n\n\t\/**\n\t * Performs the underlying HTTP request. Not very exciting.\n\t *\n\t * @param string $http_verb The HTTP verb to use: get, post, put, patch, delete.\n\t * @param string $url       URL to do request.\n\t * @param array  $args       Assoc array of parameters to be passed.\n\t * @param int    $timeout    Timeout limit for request in seconds.\n\t *\n\t * @return array|false Assoc array of decoded result.\n\t *\/\n\tprivate function make_request( $http_verb, $url, $args = [], $timeout = 10 ) {\n\t\t\/\/ Early Bail!!\n\t\tif ( ! Authentication::is_authorized() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! $this->refresh_token() || ! is_scalar( $this->token ) ) {\n\t\t\tif ( ! $this->is_notice_added ) {\n\t\t\t\t$this->is_notice_added = true;\n\t\t\t\t$this->is_success      = false;\n\t\t\t\t$this->last_error      = sprintf(\n\t\t\t\t\t\/* translators: reconnect link *\/\n\t\t\t\t\twp_kses_post( __( 'There is a problem with the Google auth token. Please <a href=\"%1$s\" class=\"button button-link rank-math-reconnect-google\">reconnect your app<\/a>', 'rank-math' ) ),\n\t\t\t\t\twp_nonce_url( admin_url( 'admin.php?reconnect=google' ), 'rank_math_reconnect_google' )\n\t\t\t\t);\n\t\t\t\t$this->log_response( $http_verb, $url, $args, '', '', '', date( 'Y-m-d H:i:s' ) . ': Google auth token has been expired or is invalid' );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t$params = [\n\t\t\t'timeout' => $timeout,\n\t\t\t'method'  => $http_verb,\n\t\t];\n\n\t\t$params['headers'] = [ 'Authorization' => 'Bearer ' . $this->token ];\n\n\t\tif ( 'DELETE' === $http_verb || 'PUT' === $http_verb ) {\n\t\t\t$params['headers']['Content-Length'] = '0';\n\t\t} elseif ( 'POST' === $http_verb && ! empty( $args ) && is_array( $args ) ) {\n\t\t\t$json                                = wp_json_encode( $args );\n\t\t\t$params['body']                      = $json;\n\t\t\t$params['headers']['Content-Type']   = 'application\/json';\n\t\t\t$params['headers']['Content-Length'] = strlen( $json );\n\t\t}\n\n\t\t$this->reset();\n\t\tsleep( 1 );\n\t\t$response           = wp_remote_request( $url, $params );\n\t\t$formatted_response = $this->format_response( $response );\n\t\t$this->determine_success( $response, $formatted_response );\n\n\t\t$this->log_response( $http_verb, $url, $args, $response, $formatted_response, $params );\n\n\t\t\/\/ Error handaling.\n\t\t$code = wp_remote_retrieve_response_code( $response );\n\t\tif ( 200 !== $code ) {\n\t\t\t\/\/ Remove workflow actions.\n\t\t\tif ( $this->workflow ) {\n\t\t\t\tas_unschedule_all_actions( 'rank_math\/analytics\/get_' . $this->workflow . '_data' );\n\t\t\t}\n\t\t}\n\n\t\tdo_action(\n\t\t\t'rank_math\/analytics\/handle_' . $this->workflow . '_response',\n\t\t\t[\n\t\t\t\t'formatted_response' => $formatted_response,\n\t\t\t\t'response'           => $response,\n\t\t\t\t'http_verb'          => $http_verb,\n\t\t\t\t'url'                => $url,\n\t\t\t\t'args'               => $args,\n\t\t\t\t'code'               => $code,\n\t\t\t]\n\t\t);\n\n\t\treturn $formatted_response;\n\t}\n\n\t\/**\n\t * Log the response in analytics_debug.log file.\n\t *\n\t * @param string         $http_verb          The HTTP verb to use: get, post, put, patch, delete.\n\t * @param string         $url                URL to do request.\n\t * @param array          $args               Assoc array of parameters to be passed.\n\t * @param array|WP_Error $response           make_request response.\n\t * @param string         $formatted_response Formated response.\n\t * @param array          $params             Parameters.\n\t * @param string         $text               Text to append at the end of the response.\n\t *\/\n\tprivate function log_response( $http_verb = '', $url = '', $args = [], $response = [], $formatted_response = '', $params = [], $text = '' ) {\n\t\tdo_action( 'rank_math\/analytics\/log', $http_verb, $url, $args, $response, $formatted_response, $params );\n\n\t\tif ( ! apply_filters( 'rank_math\/analytics\/log_response', false ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$uploads = wp_upload_dir();\n\t\t$file    = $uploads['basedir'] . '\/rank-math\/analytics-debug.log';\n\n\t\t$wp_filesystem = Helper::get_filesystem();\n\n\t\t\/\/ Create log file if it doesn't exist.\n\t\t$wp_filesystem->touch( $file );\n\n\t\t\/\/ Not writable? Bail.\n\t\tif ( ! $wp_filesystem->is_writable( $file ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$message  = '********************************' . PHP_EOL;\n\t\t$message .= date( 'Y-m-d h:i:s' ) . PHP_EOL;\n\n\t\t$tokens = Authentication::tokens();\n\t\tif ( ! empty( $tokens ) && is_array( $tokens ) && isset( $tokens['expire'] ) ) {\n\t\t\t$message .= 'Expiry: ' . date( 'Y-m-d h:i:s', $tokens['expire'] ) . PHP_EOL;\n\t\t\t$message .= 'Expiry Readable: ' . human_time_diff( $tokens['expire'] ) . PHP_EOL;\n\t\t}\n\n\t\t$message .= $text . PHP_EOL;\n\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\t$message .= '<span class=\"fail\">FAIL<\/span>' . PHP_EOL;\n\t\t\t$message .= 'WP_Error: ' . $response->get_error_message() . PHP_EOL;\n\t\t} elseif ( 200 !== wp_remote_retrieve_response_code( $response ) ) {\n\t\t\t$message .= '<span class=\"fail\">FAIL<\/span>' . PHP_EOL;\n\t\t} elseif ( isset( $formatted_response['error_description'] ) ) {\n\t\t\t$message .= '<span class=\"fail\">FAIL<\/span>' . PHP_EOL;\n\t\t\t$message .= 'Bad Request' === $formatted_response['error_description'] ?\n\t\t\tesc_html__( 'Bad request. Please check the code.', 'rank-math' ) : $formatted_response['error_description'];\n\t\t} else {\n\t\t\t$message .= '<span class=\"pass\">PASS<\/span>' . PHP_EOL;\n\t\t}\n\t\t$message .= 'REQUEST: ' . $http_verb . ' > ' . $url . PHP_EOL;\n\t\t$message .= 'REQUEST_PARAMETERS: ' . wp_json_encode( $params ) . PHP_EOL;\n\t\t$message .= 'REQUEST_API_ARGUMENTS: ' . wp_json_encode( $args ) . PHP_EOL;\n\t\t$message .= 'RESPONSE_CODE: ' . wp_remote_retrieve_response_code( $response ) . PHP_EOL;\n\t\t$message .= 'RESPONSE_CODE_MESSAGE: ' . wp_remote_retrieve_body( $response ) . PHP_EOL;\n\t\t$message .= 'RESPONSE_FORMATTED: ' . wp_json_encode( $formatted_response ) . PHP_EOL;\n\t\t$message .= 'ORIGINAL_RESPONSE: ' . wp_json_encode( $response ) . PHP_EOL;\n\t\t$message .= '================================' . PHP_EOL;\n\t\t$message .= $wp_filesystem->get_contents( $file );\n\n\t\t$wp_filesystem->put_contents( $file, $message );\n\t}\n\n\t\/**\n\t * Decode the response and format any error messages for debugging\n\t *\n\t * @param array|WP_Error $response The response from the curl request.\n\t *\n\t * @return array|false The JSON decoded into an array\n\t *\/\n\tprivate function format_response( $response ) {\n\t\t$this->last_response = $response;\n\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! empty( $response['body'] ) ) {\n\t\t\treturn json_decode( $response['body'], true );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if the response was successful or a failure. If it failed, store the error.\n\t *\n\t * @param object      $response           The response from the curl request.\n\t * @param array|false $formatted_response The response body payload from the curl request.\n\t *\/\n\tprivate function determine_success( $response, $formatted_response ) {\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\t$this->last_error = 'WP_Error: ' . $response->get_error_message();\n\t\t\treturn;\n\t\t}\n\n\t\t$this->last_code = wp_remote_retrieve_response_code( $response );\n\t\tif ( in_array( $this->last_code, [ 200, 204 ], true ) ) {\n\t\t\t$this->is_success = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isset( $formatted_response['error_description'] ) ) {\n\t\t\t$this->last_error = 'Bad Request' === $formatted_response['error_description'] ?\n\t\t\t\tesc_html__( 'Bad request. Please check the code.', 'rank-math' ) : $formatted_response['error_description'];\n\t\t\treturn;\n\t\t}\n\n\t\t$message = esc_html__( 'Unknown error, call get_response() to find out what happened.', 'rank-math' );\n\t\t$body    = wp_remote_retrieve_body( $response );\n\t\tif ( ! empty( $body ) ) {\n\t\t\t$body = json_decode( $body, true );\n\t\t\tif ( ! empty( $body['error'] ) && ! empty( $body['error']['message'] ) ) {\n\t\t\t\t$message = $body['error']['message'];\n\t\t\t} elseif ( ! empty( $body['errors'] ) && is_array( $body['errors'] ) && ! empty( $body['errors'][0]['message'] ) ) {\n\t\t\t\t$message = $body['errors'][0]['message'];\n\t\t\t}\n\t\t}\n\n\t\t$this->last_error = $message;\n\t}\n\n\t\/**\n\t * Reset request.\n\t *\/\n\tprivate function reset() {\n\t\t$this->last_code     = 0;\n\t\t$this->last_error    = '';\n\t\t$this->is_success    = false;\n\t\t$this->last_response = [\n\t\t\t'body'    => null,\n\t\t\t'headers' => null,\n\t\t];\n\t}\n\n\t\/**\n\t * Refresh access token when user login.\n\t *\/\n\tpublic function refresh_token() {\n\t\t\/\/ Bail if the user is not authenticated at all yet.\n\t\tif ( ! Authentication::is_authorized() || ! Authentication::is_token_expired() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$response = $this->get_refresh_token();\n\t\tif ( ! $response ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( false === $response['success'] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$tokens = Authentication::tokens();\n\n\t\t\/\/ Save new token.\n\t\t$this->token            = $response['access_token'];\n\t\t$tokens['expire']       = $response['expire'];\n\t\t$tokens['access_token'] = $response['access_token'];\n\t\tAuthentication::tokens( $tokens );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get the new refresh token.\n\t *\n\t * @return mixed\n\t *\/\n\tprotected function get_refresh_token() {\n\t\t$tokens = Authentication::tokens();\n\t\tif ( empty( $tokens['refresh_token'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$response = wp_remote_get(\n\t\t\tadd_query_arg(\n\t\t\t\t[\n\t\t\t\t\t'code'   => $tokens['refresh_token'],\n\t\t\t\t\t'format' => 'json',\n\t\t\t\t],\n\t\t\t\tAuthentication::get_auth_app_url() . '\/refresh.php'\n\t\t\t)\n\t\t);\n\n\t\tif ( 200 !== wp_remote_retrieve_response_code( $response ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$response = json_decode( wp_remote_retrieve_body( $response ), true );\n\t\tif ( empty( $response ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $response;\n\t}\n\n\t\/**\n\t * Revoke an OAuth2 token.\n\t *\n\t * @return boolean Whether the token was revoked successfully.\n\t *\/\n\tpublic function revoke_token() {\n\t\tAuthentication::tokens( false );\n\t\tdelete_option( 'rank_math_google_analytic_profile' );\n\t\tdelete_option( 'rank_math_google_analytic_options' );\n\t\tdelete_option( 'rankmath_google_api_failed_attempts_data' );\n\t\tdelete_option( 'rankmath_google_api_reconnect' );\n\n\t\treturn $this->is_success();\n\t}\n\n\t\/**\n\t * Log every failed API call.\n\t * And kill all next scheduled event if failed count is more then three.\n\t *\n\t * @param array  $response   Response from api.\n\t * @param string $action     Action performing.\n\t * @param string $start_date Start date fetching for (or page URI for inspections).\n\t * @param array  $args       Array of arguments.\n\t *\/\n\tpublic function log_failed_request( $response, $action, $start_date, $args ) {\n\t\tif ( $this->is_success() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$option_key                  = 'rankmath_google_api_failed_attempts_data';\n\t\t$reconnect_google_option_key = 'rankmath_google_api_reconnect';\n\t\tif ( empty( $response['error'] ) || ! is_array( $response['error'] ) ) {\n\t\t\tdelete_option( $option_key );\n\t\t\tdelete_option( $reconnect_google_option_key );\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Limit maximum 10 failed attempt data to log.\n\t\t$failed_attempts   = get_option( $option_key, [] );\n\t\t$failed_attempts   = ( ! empty( $failed_attempts ) && is_array( $failed_attempts ) ) ? array_slice( $failed_attempts, -9, 9 ) : [];\n\t\t$failed_attempts[] = [\n\t\t\t'action' => $action,\n\t\t\t'args'   => $args,\n\t\t\t'error'  => $response['error'],\n\t\t];\n\n\t\tupdate_option( $option_key, $failed_attempts, false );\n\n\t\t\/\/ Number of allowed attempt.\n\t\tif ( 3 < count( $failed_attempts ) ) {\n\t\t\tupdate_option( $reconnect_google_option_key, 'search_analytics_query' );\n\t\t\treturn;\n\t\t}\n\n\t\tSchedule::single_action(\n\t\t\ttime() + 60,\n\t\t\t\"rank_math\/analytics\/get_{$action}_data\",\n\t\t\t[ $start_date ],\n\t\t\t'rank-math'\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/google\/class-permissions.php","ext":"php","size":3005,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Google Permissions.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Google;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Permissions class.\n *\/\nclass Permissions {\n\n\tconst OPTION_NAME = 'rank_math_analytics_permissions';\n\n\t\/**\n\t * Permission info.\n\t *\/\n\tpublic static function fetch() {\n\t\t$tokens = Authentication::tokens();\n\t\tif ( empty( $tokens['access_token'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$url      = 'https:\/\/www.googleapis.com\/oauth2\/v1\/tokeninfo?access_token=' . $tokens['access_token'];\n\t\t$response = wp_remote_get( $url );\n\t\tif ( 200 !== wp_remote_retrieve_response_code( $response ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$response = wp_remote_retrieve_body( $response );\n\t\tif ( empty( $response ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$response = \\json_decode( $response, true );\n\t\t$scopes   = $response['scope'];\n\t\t$scopes   = explode( ' ', $scopes );\n\t\t$scopes   = str_replace( 'https:\/\/www.googleapis.com\/auth\/', '', $scopes );\n\n\t\tupdate_option( self::OPTION_NAME, $scopes );\n\t}\n\n\t\/**\n\t * Get permissions.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get() {\n\t\treturn get_option( self::OPTION_NAME, [] );\n\t}\n\n\t\/**\n\t * If user give permission or not.\n\t *\n\t * @param  string $permission Permission name.\n\t * @return boolean\n\t *\/\n\tpublic static function has( $permission ) {\n\t\t$permissions = self::get();\n\n\t\treturn in_array( $permission, $permissions, true );\n\t}\n\n\t\/**\n\t * If user give permission or not.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function has_console() {\n\t\treturn self::has( 'webmasters' );\n\t}\n\n\t\/**\n\t * If user give permission or not.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function has_analytics() {\n\t\treturn self::has( 'analytics.readonly' ) ||\n\t\t\tself::has( 'analytics.provision' ) ||\n\t\t\tself::has( 'analytics.edit' );\n\t}\n\n\t\/**\n\t * If user give permission or not.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function has_adsense() {\n\t\treturn self::has( 'adsense.readonly' );\n\t}\n\n\t\/**\n\t * If user give permission or not.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_status() {\n\t\treturn [\n\t\t\tesc_html__( 'Search Console', 'rank-math' ) => self::get_status_text( self::has_console() ),\n\t\t];\n\t}\n\n\t\/**\n\t * Status text\n\t *\n\t * @param  boolean $check Truthness.\n\t * @return string\n\t *\/\n\tpublic static function get_status_text( $check ) {\n\t\treturn $check ? esc_html__( 'Given', 'rank-math' ) : esc_html__( 'Not Given', 'rank-math' );\n\t}\n\n\t\/**\n\t * Print warning\n\t *\/\n\tpublic static function print_warning() {\n\t\t?>\n\t\t<p class=\"warning\">\n\t\t\t<strong class=\"warning\">\n\t\t\t\t<?php esc_html_e( 'Warning:', 'rank-math' ); ?>\n\t\t\t<\/strong>\n\t\t\t<?php\n\t\t\t\t\/* translators: %s is the reconnect link. *\/\n\t\t\t\tprintf( wp_kses_post( __( 'You have not given the permission to fetch this data. Please <a href=\"%s\">reconnect<\/a> with all required permissions.', 'rank-math' ) ), esc_url( wp_nonce_url( admin_url( 'admin.php?reconnect=google' ), 'rank_math_reconnect_google' ) ) );\n\t\t\t?>\n\t\t<\/p>\n\t\t<?php\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/google\/class-analytics.php","ext":"php","size":7354,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Google Analytics.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Google;\n\ndefined( 'ABSPATH' ) || exit;\n\nuse WP_Error;\nuse RankMath\\Google\\Api;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Analytics\\Workflow\\Base;\n\n\/**\n * Analytics class.\n *\/\nclass Analytics extends Request {\n\n\t\/**\n\t * Connection status key.\n\t *\/\n\tconst CONNECTION_STATUS_KEY = 'rank_math_analytics_connection_error';\n\n\t\/**\n\t * Get analytics accounts.\n\t *\/\n\tpublic function get_analytics_accounts() {\n\t\t$accounts    = [];\n\t\t$v3_response = $this->http_get( 'https:\/\/www.googleapis.com\/analytics\/v3\/management\/accountSummaries' );\n\t\t$v3_data     = true;\n\t\tif ( ! $this->is_success() || isset( $v3_response->error ) ) {\n\t\t\t$v3_data = false;\n\t\t}\n\t\tif ( false !== $v3_data ) {\n\t\t\tforeach ( $v3_response['items'] as $account ) {\n\t\t\t\tif ( 'analytics#accountSummary' !== $account['kind'] ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$properties = [];\n\t\t\t\t$account_id = $account['id'];\n\n\t\t\t\tforeach ( $account['webProperties'] as $property ) {\n\t\t\t\t\t$property_id = $property['id'];\n\n\t\t\t\t\t$properties[ $property_id ] = [\n\t\t\t\t\t\t'name'       => $property['name'],\n\t\t\t\t\t\t'id'         => $property['id'],\n\t\t\t\t\t\t'url'        => $property['websiteUrl'],\n\t\t\t\t\t\t'account_id' => $account_id,\n\t\t\t\t\t];\n\n\t\t\t\t\tforeach ( $property['profiles'] as $profile ) {\n\t\t\t\t\t\tunset( $profile['kind'] );\n\t\t\t\t\t\t$properties[ $property_id ]['profiles'][ $profile['id'] ] = $profile;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$accounts[ $account_id ] = [\n\t\t\t\t\t'name'       => $account['name'],\n\t\t\t\t\t'properties' => $properties,\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\treturn $this->add_ga4_accounts( $accounts );\n\t}\n\t\/**\n\t * Get GA4 accounts info.\n\t *\n\t * @param array $accounts GA3 accounts info or empty array.\n\t *\n\t * @return array $accounts with added ga4 accounts\n\t *\/\n\tpublic function add_ga4_accounts( $accounts ) {\n\n\t\t$v4_response = $this->http_get( 'https:\/\/analyticsadmin.googleapis.com\/v1alpha\/accountSummaries?pageSize=200' );\n\t\tif ( ! $v4_response || ! $this->is_success() || isset( $v4_response->error ) ) {\n\t\t\treturn $accounts;\n\t\t}\n\t\tforeach ( $v4_response['accountSummaries'] as $account ) {\n\t\t\tif ( empty( $account['propertySummaries'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$properties = [];\n\t\t\t$account_id = str_replace( 'accounts\/', '', $account['account'] );\n\n\t\t\tforeach ( $account['propertySummaries'] as $property ) {\n\t\t\t\t$property_id = str_replace( 'properties\/', '', $property['property'] );\n\n\t\t\t\t$accounts[ $account_id ]['properties'][ $property_id ] = [\n\t\t\t\t\t'name'       => $property['displayName'],\n\t\t\t\t\t'id'         => $property_id,\n\t\t\t\t\t'account_id' => $account_id,\n\t\t\t\t\t'type'       => 'GA4',\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\t\treturn $accounts;\n\t}\n\n\t\/**\n\t * Check if google analytics is connected.\n\t *\n\t * @return boolean Returns True if the google analytics is connected, otherwise False.\n\t *\/\n\tpublic static function is_analytics_connected() {\n\t\t$account = wp_parse_args(\n\t\t\tget_option( 'rank_math_google_analytic_options' ),\n\t\t\t[ 'view_id' => '' ]\n\t\t);\n\n\t\treturn ! empty( $account['view_id'] );\n\t}\n\n\t\/**\n\t * Is valid connection\n\t *\/\n\tpublic static function is_valid_connection() {\n\t\treturn Api::get()->get_connection_status( self::CONNECTION_STATUS_KEY );\n\t}\n\n\t\/**\n\t * Test connection\n\t *\/\n\tpublic static function test_connection() {\n\t\treturn Api::get()->check_connection_status( self::CONNECTION_STATUS_KEY, [ __CLASS__, 'get_analytics' ] );\n\t}\n\n\t\/**\n\t * Query analytics data from google client api.\n\t *\n\t * @param array   $options Analytics options.\n\t * @param boolean $days    Whether to include dates.\n\t *\n\t * @return array|false|WP_Error\n\t *\/\n\tpublic static function get_analytics( $options = [], $days = false ) {\n\t\t\/\/ Check view ID.\n\t\t$view_id = isset( $options['view_id'] ) ? $options['view_id'] : self::get_view_id();\n\t\tif ( ! $view_id ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$stored = get_option(\n\t\t\t'rank_math_google_analytic_options',\n\t\t\t[\n\t\t\t\t'account_id'       => '',\n\t\t\t\t'property_id'      => '',\n\t\t\t\t'view_id'          => '',\n\t\t\t\t'measurement_id'   => '',\n\t\t\t\t'stream_name'      => '',\n\t\t\t\t'country'          => '',\n\t\t\t\t'install_code'     => '',\n\t\t\t\t'anonymize_ip'     => '',\n\t\t\t\t'local_ga_js'      => '',\n\t\t\t\t'exclude_loggedin' => '',\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Check property ID.\n\t\t$property_id = isset( $options['property_id'] ) ? $options['property_id'] : $stored['property_id'];\n\t\tif ( ! $property_id ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Check dates.\n\t\t$dates      = Base::get_dates();\n\t\t$start_date = isset( $options['start_date'] ) ? $options['start_date'] : $dates['start_date'];\n\t\t$end_date   = isset( $options['end_date'] ) ? $options['end_date'] : $dates['end_date'];\n\t\tif ( ! $start_date || ! $end_date ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Request params.\n\t\t$row_limit = isset( $options['row_limit'] ) ? $options['row_limit'] : Api::get()->get_row_limit();\n\t\t$country   = isset( $options['country'] ) ? $options['country'] : '';\n\t\tif ( ! empty( $stored['country'] ) && 'all' !== $stored['country'] ) {\n\t\t\t$country = $stored['country'];\n\t\t}\n\n\t\t\/\/ Request for GA4 API.\n\t\t$args = [\n\t\t\t'dateRanges'      => [\n\t\t\t\t[\n\t\t\t\t\t'startDate' => $start_date,\n\t\t\t\t\t'endDate'   => $end_date,\n\t\t\t\t],\n\t\t\t],\n\t\t\t'dimensionFilter' => [\n\t\t\t\t'andGroup' => [\n\t\t\t\t\t'expressions' => [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'filter' => [\n\t\t\t\t\t\t\t\t'fieldName'    => 'streamId',\n\t\t\t\t\t\t\t\t'stringFilter' => [\n\t\t\t\t\t\t\t\t\t'matchType' => 'EXACT',\n\t\t\t\t\t\t\t\t\t'value'     => $view_id,\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'filter' => [\n\t\t\t\t\t\t\t\t'fieldName'    => 'sessionMedium',\n\t\t\t\t\t\t\t\t'stringFilter' => [\n\t\t\t\t\t\t\t\t\t'matchType' => 'EXACT',\n\t\t\t\t\t\t\t\t\t'value'     => 'organic',\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\n\t\t\/\/ Include only dates.\n\t\tif ( true === $days ) {\n\t\t\t$args = wp_parse_args(\n\t\t\t\t[\n\t\t\t\t\t'dimensions' => [\n\t\t\t\t\t\t[ 'name' => 'date' ],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t$args\n\t\t\t);\n\t\t} else {\n\t\t\t$args = wp_parse_args(\n\t\t\t\t[\n\t\t\t\t\t'dimensions' => [\n\t\t\t\t\t\t[ 'name' => 'hostname' ],\n\t\t\t\t\t\t[ 'name' => 'pagePath' ],\n\t\t\t\t\t\t[ 'name' => 'countryId' ],\n\t\t\t\t\t\t[ 'name' => 'sessionMedium' ],\n\t\t\t\t\t],\n\t\t\t\t\t'metrics'    => [\n\t\t\t\t\t\t[ 'name' => 'screenPageViews' ],\n\t\t\t\t\t\t[ 'name' => 'totalUsers' ],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t\t$args\n\t\t\t);\n\n\t\t\t\/\/ Include country.\n\t\t\tif ( $country ) {\n\t\t\t\t$args['dimensionFilter']['andGroup']['expressions'][] = [\n\t\t\t\t\t'filter' => [\n\t\t\t\t\t\t'fieldName'    => 'countryId',\n\t\t\t\t\t\t'stringFilter' => [\n\t\t\t\t\t\t\t'matchType' => 'EXACT',\n\t\t\t\t\t\t\t'value'     => $country,\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t];\n\t\t\t}\n\t\t}\n\n\t\t$workflow = 'analytics';\n\t\tApi::get()->set_workflow( $workflow );\n\t\t$response = Api::get()->http_post(\n\t\t\t'https:\/\/analyticsdata.googleapis.com\/v1beta\/properties\/' . $property_id . ':runReport',\n\t\t\t$args\n\t\t);\n\n\t\tApi::get()->log_failed_request( $response, $workflow, $start_date, func_get_args() );\n\n\t\tif ( ! Api::get()->is_success() ) {\n\t\t\treturn new WP_Error( 'request_failed', __( 'The Google Analytics Console request failed.', 'rank-math' ) );\n\t\t}\n\n\t\tif ( ! isset( $response['rows'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $response['rows'];\n\t}\n\n\t\/**\n\t * Get view id.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_view_id() {\n\t\tstatic $rank_math_view_id;\n\n\t\tif ( is_null( $rank_math_view_id ) ) {\n\t\t\t$options           = get_option( 'rank_math_google_analytic_options' );\n\t\t\t$rank_math_view_id = ! empty( $options['view_id'] ) ? $options['view_id'] : false;\n\t\t}\n\n\t\treturn $rank_math_view_id;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/google\/class-url-inspection.php","ext":"php","size":5298,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Google URL Inspection API.\n *\n * @since      1.0.84\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Google;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Analytics class.\n *\/\nclass Url_Inspection extends Request {\n\t\/**\n\t * URL Inspection API base URL.\n\t *\n\t * @var string\n\t *\/\n\tprivate $api_url = 'https:\/\/searchconsole.googleapis.com\/v1\/urlInspection\/index:inspect';\n\n\t\/**\n\t * Access token.\n\t *\n\t * @var array\n\t *\/\n\tpublic $token = [];\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Url_Inspection\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Url_Inspection ) ) {\n\t\t\t$instance = new Url_Inspection();\n\t\t\t$instance->setup();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Setup token.\n\t *\/\n\tpublic function setup() {\n\t\tif ( ! Authentication::is_authorized() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$tokens      = Authentication::tokens();\n\t\t$this->token = $tokens['access_token'];\n\t}\n\n\t\/**\n\t * Send URL to the API and return the response, or false on failure.\n\t *\n\t * @param string $page URL to inspect (relative).\n\t *\/\n\tpublic function get_api_results( $page ) {\n\t\t$lang_arr  = \\explode( '_', get_locale() );\n\t\t$lang_code = empty( $lang_arr[1] ) ? $lang_arr[0] : $lang_arr[0] . '-' . $lang_arr[1];\n\n\t\t$args = [\n\t\t\t'inspectionUrl' => untrailingslashit( Helper::get_home_url() ) . $page,\n\t\t\t'siteUrl'       => Console::get_site_url(),\n\t\t\t'languageCode'  => $lang_code,\n\t\t];\n\n\t\tset_time_limit( 90 );\n\n\t\t$workflow = 'inspections';\n\t\t$this->set_workflow( $workflow );\n\n\t\t$response = $this->http_post( $this->api_url, $args, 60 );\n\n\t\t$this->log_failed_request( $response, $workflow, $page, func_get_args() );\n\n\t\tif ( ! $this->is_success() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $response;\n\t}\n\n\t\/**\n\t * Get inspection data.\n\t *\n\t * @param string $page URL to inspect.\n\t *\/\n\tpublic function get_inspection_data( $page ) {\n\t\t$inspection = $this->get_api_results( $page );\n\t\tif ( empty( $inspection ) || empty( $inspection['inspectionResult'] ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$inspection = $this->normalize_inspection_data( $inspection );\n\n\t\t$inspection['page'] = $page;\n\n\t\treturn $inspection;\n\t}\n\n\t\/**\n\t * Normalize inspection data.\n\t *\n\t * @param  array $inspection Inspection data.\n\t *\/\n\tprivate function normalize_inspection_data( $inspection ) {\n\t\t$incoming   = $inspection['inspectionResult'];\n\t\t$normalized = [];\n\n\t\t$map_properties = [\n\t\t\t'indexStatusResult.verdict'         => 'index_verdict',\n\t\t\t'indexStatusResult.coverageState'   => 'coverage_state',\n\t\t\t'indexStatusResult.indexingState'   => 'indexing_state',\n\t\t\t'indexStatusResult.pageFetchState'  => 'page_fetch_state',\n\t\t\t'indexStatusResult.robotsTxtState'  => 'robots_txt_state',\n\t\t\t'richResultsResult.verdict'         => 'rich_results_verdict',\n\t\t\t'indexStatusResult.crawledAs'       => 'crawled_as',\n\t\t\t'indexStatusResult.googleCanonical' => 'google_canonical',\n\t\t\t'indexStatusResult.userCanonical'   => 'user_canonical',\n\t\t\t'indexStatusResult.sitemap'         => 'sitemap',\n\t\t\t'indexStatusResult.referringUrls'   => 'referring_urls',\n\t\t];\n\n\t\t$this->assign_inspection_values( $incoming, $map_properties, $normalized );\n\n\t\t$normalized = apply_filters( 'rank_math\/analytics\/url_inspection_map_properties', $normalized, $incoming );\n\n\t\treturn $normalized;\n\t}\n\n\t\/**\n\t * Assign inspection field value to the data array.\n\t *\n\t * @param  array  $raw_data  Raw data.\n\t * @param  string $field     Field name.\n\t * @param  string $assign_to Field name to assign to.\n\t * @param  array  $data      Data array.\n\t *\n\t * @return void\n\t *\/\n\tpublic function assign_inspection_value( $raw_data, $field, $assign_to, &$data ) {\n\t\t$data[ $assign_to ] = $this->get_result_field( $raw_data, $field );\n\n\t\tif ( is_array( $data[ $assign_to ] ) ) {\n\t\t\t$data[ $assign_to ] = wp_json_encode( $data[ $assign_to ] );\n\t\t} elseif ( preg_match( '\/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\/', $data[ $assign_to ], $matches ) ) {\n\t\t\t\/\/ If it's a date, convert to MySQL format.\n\t\t\t$data[ $assign_to ] = date( 'Y-m-d H:i:s', strtotime( $matches[0] ) ); \/\/ phpcs:ignore WordPress.DateTime.RestrictedFunctions.date_date -- Date is stored as TIMESTAMP, so the timezone is converted automatically.\n\t\t}\n\t}\n\n\t\/**\n\t * Get a field from the inspection result.\n\t *\n\t * @param array  $raw_data Incoming data.\n\t * @param string $field    Field name.\n\t *\n\t * @return mixed\n\t *\/\n\tprotected function get_result_field( $raw_data, $field ) {\n\t\tif ( false !== strpos( $field, '.' ) ) {\n\t\t\t$fields = explode( '.', $field );\n\n\t\t\tif ( ! isset( $raw_data[ $fields[0] ] ) || ! isset( $raw_data[ $fields[0] ][ $fields[1] ] ) ) {\n\t\t\t\treturn '';\n\t\t\t}\n\n\t\t\treturn $raw_data[ $fields[0] ][ $fields[1] ];\n\t\t}\n\n\t\tif ( ! isset( $raw_data[ $field ] ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $raw_data[ $field ];\n\t}\n\n\t\/**\n\t * Assign inspection field values to the data array.\n\t *\n\t * @param  array $raw_data Raw data.\n\t * @param  array $fields   Map properties.\n\t * @param  array $data     Data array.\n\t *\n\t * @return void\n\t *\/\n\tpublic function assign_inspection_values( $raw_data, $fields, &$data ) {\n\t\tforeach ( $fields as $field => $assign_to ) {\n\t\t\t$this->assign_inspection_value( $raw_data, $field, $assign_to, $data );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/google\/class-console.php","ext":"php","size":9053,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n *  Google Search Console.\n *\n * @since      1.0.49\n * @package    RankMath\n * @subpackage RankMath\\modules\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Google;\n\nuse RankMath\\Google\\Api;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Schedule;\nuse RankMath\\Analytics\\Workflow\\Base;\nuse RankMath\\Sitemap\\Sitemap;\nuse WP_Error;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Console class.\n *\/\nclass Console extends Analytics {\n\n\t\/**\n\t * Connection status key.\n\t *\/\n\tconst CONNECTION_STATUS_KEY = 'rank_math_console_connection_error';\n\n\t\/**\n\t * Add site.\n\t *\n\t * @param string $url Site url to add.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function add_site( $url ) {\n\t\t$this->http_put( 'https:\/\/www.googleapis.com\/webmasters\/v3\/sites\/' . rawurlencode( $url ) );\n\t\treturn $this->is_success();\n\t}\n\n\t\/**\n\t * Get site verification token.\n\t *\n\t * @param string $url Site url to add.\n\t *\n\t * @return bool|string\n\t *\/\n\tpublic function get_site_verification_token( $url ) {\n\t\t$args = [\n\t\t\t'site'               => [\n\t\t\t\t'type'       => 'SITE',\n\t\t\t\t'identifier' => $url,\n\t\t\t],\n\t\t\t'verificationMethod' => 'META',\n\t\t];\n\n\t\t$response = $this->http_post( 'https:\/\/www.googleapis.com\/siteVerification\/v1\/token', $args );\n\t\tif ( ! $this->is_success() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn \\RankMath\\CMB2::sanitize_webmaster_tags( $response['token'] );\n\t}\n\n\t\/**\n\t * Verify site token.\n\t *\n\t * @param string $url Site url to add.\n\t *\n\t * @return bool|string\n\t *\/\n\tpublic function verify_site( $url ) {\n\t\t$token = $this->get_site_verification_token( $url );\n\t\tif ( ! $token ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Save in transient.\n\t\tset_transient( 'rank_math_google_site_verification', $token, DAY_IN_SECONDS * 2 );\n\n\t\t\/\/ Call Google site verification.\n\t\t$args = [\n\t\t\t'site' => [\n\t\t\t\t'type'       => 'SITE',\n\t\t\t\t'identifier' => $url,\n\t\t\t],\n\t\t];\n\n\t\t$this->http_post( 'https:\/\/www.googleapis.com\/siteVerification\/v1\/webResource?verificationMethod=META', $args );\n\n\t\t\/\/ Sync sitemap.\n\t\tSchedule::async_action( 'rank_math\/analytics\/sync_sitemaps', [], 'rank-math' );\n\n\t\treturn $this->is_success();\n\t}\n\n\t\/**\n\t * Get sites.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_sites() {\n\t\tstatic $rank_math_google_sites;\n\t\tif ( ! \\is_null( $rank_math_google_sites ) ) {\n\t\t\treturn $rank_math_google_sites;\n\t\t}\n\n\t\t$rank_math_google_sites = [];\n\t\t$response               = $this->http_get( 'https:\/\/www.googleapis.com\/webmasters\/v3\/sites' );\n\t\tif ( ! $this->is_success() || empty( $response['siteEntry'] ) ) {\n\t\t\treturn $rank_math_google_sites;\n\t\t}\n\n\t\tforeach ( $response['siteEntry'] as $site ) {\n\t\t\t$rank_math_google_sites[ $site['siteUrl'] ] = $site['siteUrl'];\n\t\t}\n\n\t\treturn $rank_math_google_sites;\n\t}\n\n\t\/**\n\t * Fetch sitemaps.\n\t *\n\t * @param string  $url        Site to get sitemaps for.\n\t * @param boolean $with_index With index data.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_sitemaps( $url, $with_index = false ) {\n\t\t$with_index = $with_index ? '?sitemapIndex=' . rawurlencode( $url . Sitemap::get_sitemap_index_slug() . '.xml' ) : '';\n\t\t$response   = $this->http_get( 'https:\/\/www.googleapis.com\/webmasters\/v3\/sites\/' . rawurlencode( $url ) . '\/sitemaps' . $with_index );\n\n\t\tif ( ! $this->is_success() || empty( $response['sitemap'] ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\treturn $response['sitemap'];\n\t}\n\n\t\/**\n\t * Submit sitemap to search console.\n\t *\n\t * @param string $url     Site to add sitemap for.\n\t * @param string $sitemap Sitemap url.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_sitemap( $url, $sitemap ) {\n\t\treturn $this->http_put( 'https:\/\/www.googleapis.com\/webmasters\/v3\/sites\/' . rawurlencode( $url ) . '\/sitemaps\/' . rawurlencode( $sitemap ) );\n\t}\n\n\t\/**\n\t * Delete sitemap from search console.\n\t *\n\t * @param string $url     Site to delete sitemap for.\n\t * @param string $sitemap Sitemap url.\n\t *\n\t * @return array\n\t *\/\n\tpublic function delete_sitemap( $url, $sitemap ) {\n\t\treturn $this->http_delete( 'https:\/\/www.googleapis.com\/webmasters\/v3\/sites\/' . rawurlencode( $url ) . '\/sitemaps\/' . rawurlencode( $sitemap ) );\n\t}\n\n\t\/**\n\t * Query analytics data from google client api.\n\t *\n\t * @param array $args  Query arguments.\n\t *\n\t * @return array|false|WP_Error\n\t *\/\n\tpublic function get_search_analytics( $args = [] ) {\n\t\t$dates = Base::get_dates();\n\n\t\t$start_date = isset( $args['start_date'] ) ? $args['start_date'] : $dates['start_date'];\n\t\t$end_date   = isset( $args['end_date'] ) ? $args['end_date'] : $dates['end_date'];\n\t\t$dimensions = isset( $args['dimensions'] ) ? $args['dimensions'] : 'date';\n\t\t$row_limit  = isset( $args['row_limit'] ) ? $args['row_limit'] : Api::get()->get_row_limit();\n\n\t\t$params = [\n\t\t\t'startDate'  => $start_date,\n\t\t\t'endDate'    => $end_date,\n\t\t\t'rowLimit'   => $row_limit,\n\t\t\t'dimensions' => \\is_array( $dimensions ) ? $dimensions : [ $dimensions ],\n\t\t];\n\n\t\t$stored  = get_option(\n\t\t\t'rank_math_google_analytic_profile',\n\t\t\t[\n\t\t\t\t'country'             => '',\n\t\t\t\t'profile'             => '',\n\t\t\t\t'enable_index_status' => true,\n\t\t\t]\n\t\t);\n\t\t$country = isset( $args['country'] ) ? $args['country'] : $stored['country'];\n\t\t$profile = isset( $args['profile'] ) ? $args['profile'] : $stored['profile'];\n\n\t\tif ( 'all' !== $country ) {\n\t\t\t$params['dimensionFilterGroups'] = [\n\t\t\t\t[\n\t\t\t\t\t'filters' => [\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'dimension'  => 'country',\n\t\t\t\t\t\t\t'operator'   => 'equals',\n\t\t\t\t\t\t\t'expression' => $country,\n\t\t\t\t\t\t],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t];\n\t\t}\n\n\t\tif ( empty( $profile ) ) {\n\t\t\t$profile = trailingslashit( strtolower( home_url() ) );\n\t\t}\n\n\t\t$workflow = 'console';\n\t\t$this->set_workflow( $workflow );\n\t\t$response = $this->http_post(\n\t\t\t'https:\/\/www.googleapis.com\/webmasters\/v3\/sites\/' . rawurlencode( $profile ) . '\/searchAnalytics\/query',\n\t\t\t$params\n\t\t);\n\n\t\t$this->log_failed_request( $response, $workflow, $start_date, func_get_args() );\n\n\t\tif ( ! $this->is_success() ) {\n\t\t\treturn new WP_Error( 'request_failed', __( 'The Google Search Console request failed.', 'rank-math' ) );\n\t\t}\n\n\t\tif ( ! isset( $response['rows'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $response['rows'];\n\t}\n\n\t\/**\n\t * Is site verified.\n\t *\n\t * @param string $url Site to verify.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function is_site_verified( $url ) {\n\t\t$response = $this->http_get( 'https:\/\/www.googleapis.com\/siteVerification\/v1\/webResource\/' . rawurlencode( $url ) );\n\t\tif ( ! $this->is_success() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn isset( $response['owners'] );\n\t}\n\n\t\/**\n\t * Sync sitemaps with google search console.\n\t *\/\n\tpublic function sync_sitemaps() {\n\t\t$site_url = self::get_site_url();\n\t\t$data     = $this->get_sitemap_to_sync();\n\n\t\t\/\/ Submit it.\n\t\tif ( ! $data['sitemaps_in_list'] ) {\n\t\t\t$this->add_sitemap( $site_url, $data['local_sitemap'] );\n\t\t}\n\n\t\tif ( empty( $data['delete_sitemaps'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Delete it.\n\t\tforeach ( $data['delete_sitemaps'] as $sitemap ) {\n\t\t\t$this->delete_sitemap( $site_url, $sitemap );\n\t\t}\n\t}\n\n\t\/**\n\t * Get sitemaps to sync.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_sitemap_to_sync() {\n\t\t$delete_sitemaps  = [];\n\t\t$sitemaps_in_list = false;\n\t\t$site_url         = self::get_site_url();\n\t\t$sitemaps         = $this->get_sitemaps( $site_url );\n\t\t$local_sitemap    = trailingslashit( $site_url ) . Sitemap::get_sitemap_index_slug() . '.xml';\n\n\t\t\/\/ Early Bail if there are no sitemaps.\n\t\tif ( empty( $sitemaps ) ) {\n\t\t\treturn compact( 'delete_sitemaps', 'sitemaps_in_list', 'local_sitemap' );\n\t\t}\n\n\t\tforeach ( $sitemaps as $sitemap ) {\n\t\t\tif ( $sitemap['path'] === $local_sitemap ) {\n\t\t\t\t$sitemaps_in_list = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$delete_sitemaps[] = $sitemap['path'];\n\t\t}\n\n\t\treturn compact( 'delete_sitemaps', 'sitemaps_in_list', 'local_sitemap' );\n\t}\n\n\t\/**\n\t * Get site url.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_site_url() {\n\t\tstatic $rank_math_site_url;\n\n\t\tif ( is_null( $rank_math_site_url ) ) {\n\t\t\t$default            = trailingslashit( strtolower( home_url() ) );\n\t\t\t$rank_math_site_url = get_option( 'rank_math_google_analytic_profile', [ 'profile' => $default ] );\n\t\t\t$rank_math_site_url = empty( $rank_math_site_url['profile'] ) ? $default : $rank_math_site_url['profile'];\n\n\t\t\tif ( Str::contains( 'sc-domain:', $rank_math_site_url ) ) {\n\t\t\t\t$rank_math_site_url = str_replace( 'sc-domain:', '', $rank_math_site_url );\n\t\t\t\t$rank_math_site_url = ( is_ssl() ? 'https:\/\/' : 'http:\/\/' ) . $rank_math_site_url;\n\t\t\t}\n\t\t}\n\n\t\treturn $rank_math_site_url;\n\t}\n\n\t\/**\n\t * Check if console is connected.\n\t *\n\t * @return boolean Returns True if the console is connected, otherwise False.\n\t *\/\n\tpublic static function is_console_connected() {\n\t\t$profile = wp_parse_args(\n\t\t\tget_option( 'rank_math_google_analytic_profile' ),\n\t\t\t[\n\t\t\t\t'profile' => '',\n\t\t\t\t'country' => 'all',\n\t\t\t]\n\t\t);\n\n\t\treturn ! empty( $profile['profile'] );\n\t}\n\n\t\/**\n\t * Is valid connection\n\t *\/\n\tpublic static function is_valid_connection() {\n\t\treturn Api::get()->get_connection_status( self::CONNECTION_STATUS_KEY );\n\t}\n\n\t\/**\n\t * Test connection\n\t *\/\n\tpublic static function test_connection() {\n\t\treturn Api::get()->check_connection_status( self::CONNECTION_STATUS_KEY, [ Api::get(), 'get_search_analytics' ] );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/analytics\/class-analytics-stats.php","ext":"php","size":1475,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Show Analytics stats on frontend.\n *\n * @since      1.0.86\n * @package    RankMath\n * @subpackage RankMath\\Analytics\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Analytics;\n\nuse RankMath\\Helper;\nuse RankMath\\KB;\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Analytics_Stats class.\n *\/\nclass Analytics_Stats {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor\n\t *\/\n\tpublic function __construct() {\n\t\tif ( ! Helper::can_add_frontend_stats() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'wp_enqueue_scripts', 'enqueue' );\n\t}\n\n\t\/**\n\t * Enqueue Styles and Scripts\n\t *\/\n\tpublic function enqueue() {\n\t\tif ( ! is_singular() || is_admin() || is_preview() || Helper::is_divi_frontend_editor() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$uri = untrailingslashit( plugin_dir_url( __FILE__ ) );\n\t\twp_enqueue_style( 'rank-math-analytics-stats', $uri . '\/assets\/css\/admin-bar.css', null, rank_math()->version );\n\t\twp_enqueue_script( 'rank-math-analytics-stats', $uri . '\/assets\/js\/admin-bar.js', [ 'jquery', 'wp-api-fetch', 'wp-element', 'wp-components', 'lodash' ], rank_math()->version, true );\n\n\t\tHelper::add_json( 'isConsoleConnected', \\RankMath\\Google\\Console::is_console_connected() );\n\t\tHelper::add_json( 'isAnalyticsConnected', \\RankMath\\Google\\Analytics::is_analytics_connected() );\n\t\tHelper::add_json( 'hideFrontendStats', get_user_meta( get_current_user_id(), 'rank_math_hide_frontend_stats', true ) );\n\n\t\tHelper::add_json( 'links', KB::get_links() );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/buddypress\/paper\/class-bp-user.php","ext":"php","size":2114,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The BuddyPress user class for the BuddyPress module.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\User;\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * BP_User class.\n *\/\nclass BP_User implements IPaper {\n\n\t\/**\n\t * Retrieves the SEO title set in the user metabox.\n\t *\n\t * @return string The SEO title for the user.\n\t *\/\n\tpublic function title() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the SEO description set in the user metabox.\n\t *\n\t * @return string The SEO description for the user.\n\t *\/\n\tpublic function description() {\n\t\t$description = User::get_meta( 'description', bp_displayed_user_id() );\n\t\tif ( '' !== $description ) {\n\t\t\treturn $description;\n\t\t}\n\n\t\treturn Paper::get_from_options( 'author_archive_description' );\n\t}\n\n\t\/**\n\t * Retrieves the robots set in the user metabox.\n\t *\n\t * @return string The robots for the specified user.\n\t *\/\n\tpublic function robots() {\n\t\t$robots = Paper::robots_combine( User::get_meta( 'robots', bp_displayed_user_id() ) );\n\n\t\tif ( empty( $robots ) && Helper::get_settings( 'titles.author_custom_robots' ) ) {\n\t\t\t$robots = Paper::robots_combine( Helper::get_settings( 'titles.author_robots' ), true );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots set in the user metabox.\n\t *\n\t * @return array The advanced robots for the specified user.\n\t *\/\n\tpublic function advanced_robots() {\n\t\t$robots = Paper::advanced_robots_combine( User::get_meta( 'advanced_robots', bp_displayed_user_id() ) );\n\n\t\tif ( empty( $robots ) && Helper::get_settings( 'titles.author_custom_robots' ) ) {\n\t\t\t$robots = Paper::advanced_robots_combine( Helper::get_settings( 'titles.author_advanced_robots' ), true );\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Retrieves the default canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the default keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn User::get_meta( 'focus_keyword', bp_displayed_user_id() );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/buddypress\/paper\/class-bp-group.php","ext":"php","size":1584,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The BuddyPress group class for the BuddyPress module.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\Paper\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Paper;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * BP_Group class.\n *\/\nclass BP_Group implements IPaper {\n\n\t\/**\n\t * Retrieves the SEO title.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title() {\n\t\treturn Paper::get_from_options( 'bp_group_title' );\n\t}\n\n\t\/**\n\t * Retrieves the SEO description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function description() {\n\t\treturn Paper::get_from_options( 'bp_group_description' );\n\t}\n\n\t\/**\n\t * Retrieves the robots meta value.\n\t *\n\t * @return string\n\t *\/\n\tpublic function robots() {\n\t\t$robots = [];\n\t\tif ( Helper::get_settings( 'titles.bp_group_custom_robots' ) ) {\n\t\t\t$robots = Helper::get_settings( 'titles.bp_group_robots' );\n\t\t}\n\n\t\treturn Paper::robots_combine( $robots, true );\n\t}\n\n\t\/**\n\t * Retrieves the advanced robots meta values.\n\t *\n\t * @return array The advanced robots meta values for the group.\n\t *\/\n\tpublic function advanced_robots() {\n\t\t$robots = [];\n\t\tif ( Helper::get_settings( 'titles.bp_group_custom_robots' ) ) {\n\t\t\t$robots = Helper::get_settings( 'titles.bp_group_advanced_robots' );\n\t\t}\n\n\t\treturn Paper::advanced_robots_combine( $robots, true );\n\t}\n\n\t\/**\n\t * Retrieves the default canonical URL.\n\t *\n\t * @return array\n\t *\/\n\tpublic function canonical() {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Retrieves the default meta keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function keywords() {\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/buddypress\/class-admin.php","ext":"php","size":1104,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The admin-side code for the BuddyPress module.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\BuddyPress\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\BuddyPress;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Admin class\n *\/\nclass Admin {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->filter( 'rank_math\/settings\/title', 'add_title_settings' );\n\t}\n\n\t\/**\n\t * Add new tab in the Titles & Meta settings for the BuddyPress module.\n\t *\n\t * @param array $tabs Array of option panel tabs.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_title_settings( $tabs ) {\n\t\t$tabs['buddypress'] = [\n\t\t\t'title' => esc_html__( 'BuddyPress:', 'rank-math' ),\n\t\t\t'type'  => 'seprator',\n\t\t];\n\n\t\t$tabs['buddypress-groups'] = [\n\t\t\t'icon'  => 'rm-icon rm-icon-users',\n\t\t\t'title' => esc_html__( 'Groups', 'rank-math' ),\n\t\t\t'desc'  => esc_html__( 'This tab contains SEO options for BuddyPress Group pages.', 'rank-math' ),\n\t\t\t'file'  => __DIR__ . '\/views\/options-titles.php',\n\t\t];\n\n\t\treturn $tabs;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/buddypress\/views\/options-titles.php","ext":"php","size":2473,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The BuddyPress groups settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\Settings\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n$cmb->add_field(\n\t[\n\t\t'id'              => 'bp_group_title',\n\t\t'type'            => 'text',\n\t\t'name'            => esc_html__( 'Group Title', 'rank-math' ),\n\t\t'desc'            => esc_html__( 'Title tag for groups', 'rank-math' ),\n\t\t'classes'         => 'rank-math-supports-variables rank-math-title',\n\t\t'default'         => '',\n\t\t'sanitization_cb' => [ '\\RankMath\\CMB2', 'sanitize_textfield' ],\n\t\t'attributes'      => [ 'data-exclude-variables' => 'seo_title,seo_description' ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'bp_group_description',\n\t\t'type'       => 'textarea',\n\t\t'name'       => esc_html__( 'Group Description', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'BuddyPress group description', 'rank-math' ),\n\t\t'classes'    => 'rank-math-supports-variables rank-math-description',\n\t\t'attributes' => [\n\t\t\t'data-exclude-variables' => 'seo_title,seo_description',\n\t\t\t'rows'                   => 2,\n\t\t],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'bp_group_custom_robots',\n\t\t'type'    => 'toggle',\n\t\t'name'    => esc_html__( 'Group Robots Meta', 'rank-math' ),\n\t\t'desc'    => __( 'Select custom robots meta for Group archive pages. Otherwise the default meta will be used, as set in the Global Meta tab.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'off' => esc_html__( 'Default', 'rank-math' ),\n\t\t\t'on'  => esc_html__( 'Custom', 'rank-math' ),\n\t\t],\n\t\t'default' => $custom_default,\n\t\t'classes' => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'                => 'bp_group_robots',\n\t\t'type'              => 'multicheck',\n\t\t'name'              => esc_html__( 'Group Robots Meta', 'rank-math' ),\n\t\t'desc'              => esc_html__( 'Custom values for robots meta tag on groups page.', 'rank-math' ),\n\t\t'options'           => Helper::choices_robots(),\n\t\t'select_all_button' => false,\n\t\t'dep'               => [ [ 'bp_group_custom_robots', 'on' ] ],\n\t\t'classes'           => 'rank-math-advanced-option',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'              => 'bp_group_advanced_robots',\n\t\t'type'            => 'advanced_robots',\n\t\t'name'            => esc_html__( 'Group Advanced Robots Meta', 'rank-math' ),\n\t\t'sanitization_cb' => [ '\\RankMath\\CMB2', 'sanitize_advanced_robots' ],\n\t\t'dep'             => [ [ 'bp_group_custom_robots', 'on' ] ],\n\t\t'classes'         => 'rank-math-advanced-option',\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/buddypress\/class-buddypress.php","ext":"php","size":3877,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The BuddyPress Module.\n *\n * @since      1.0.32\n * @package    RankMath\n * @subpackage RankMath\\BuddyPress\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\BuddyPress;\n\nuse RankMath\\Traits\\Hooker;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * BuddyPress class.\n *\/\nclass BuddyPress {\n\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tif ( is_admin() ) {\n\t\t\tnew Admin();\n\t\t}\n\n\t\t$this->filter( 'rank_math\/paper\/hash', 'paper' );\n\t\t$this->action( 'rank_math\/vars\/register_extra_replacements', 'register_replacements' );\n\t\t$this->filter( 'rank_math\/json_ld', 'json_ld', 11 );\n\t\t$this->filter( 'rank_math\/frontend\/title', 'change_activate_title' );\n\t}\n\n\t\/**\n\t * Filter to change the Activate page title.\n\t *\n\t * @param string $title Page title.\n\t *\/\n\tpublic function change_activate_title( $title ) {\n\t\tif ( function_exists( 'bp_is_current_component' ) && bp_is_current_component( 'activate' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $title;\n\t}\n\n\t\/**\n\t * Add BuddyPress class.\n\t *\n\t * @param array $hash Paper Hash.\n\t *\/\n\tpublic function paper( $hash ) {\n\t\t$bp_data = [\n\t\t\t'BP_User'  => bp_is_user(),\n\t\t\t'BP_Group' => ! is_singular() && bp_is_groups_component(),\n\t\t];\n\n\t\treturn array_merge( $bp_data, $hash );\n\t}\n\n\t\/**\n\t * Collect data to output in JSON-LD.\n\t *\n\t * @param array $data An array of data to output in JSON-LD.\n\t *\/\n\tpublic function json_ld( $data ) {\n\t\tif ( ! bp_is_user() ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\tif ( isset( $data['richSnippet'] ) ) {\n\t\t\tunset( $data['richSnippet'] );\n\t\t}\n\n\t\t$user_id = bp_displayed_user_id();\n\n\t\t$data['ProfilePage'] = [\n\t\t\t'@type'      => 'ProfilePage',\n\t\t\t'@id'        => get_author_posts_url( $user_id ),\n\t\t\t'headline'   => sprintf( 'About %s', get_the_author_meta( 'display_name', $user_id ) ),\n\t\t\t'mainEntity' => [\n\t\t\t\t'@type'       => 'Person',\n\t\t\t\t'name'        => get_the_author_meta( 'display_name', $user_id ),\n\t\t\t\t'url'         => function_exists( 'bp_members_get_user_url' ) ? esc_url( bp_members_get_user_url( $user_id ) ) : esc_url( bp_core_get_user_domain( $user_id ) ),\n\t\t\t\t'description' => get_the_author_meta( 'description', $user_id ),\n\t\t\t\t'image'       => [\n\t\t\t\t\t'@type'  => 'ImageObject',\n\t\t\t\t\t'url'    => get_avatar_url( $user_id, 96 ),\n\t\t\t\t\t'height' => 96,\n\t\t\t\t\t'width'  => 96,\n\t\t\t\t],\n\t\t\t],\n\t\t];\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Register variable replacements for BuddyPress groups.\n\t *\/\n\tpublic function register_replacements() {\n\t\trank_math_register_var_replacement(\n\t\t\t'group_name',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Group name.', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Group name of the current group', 'rank-math' ),\n\t\t\t\t'variable'    => 'group_name',\n\t\t\t\t'example'     => $this->get_group_name(),\n\t\t\t],\n\t\t\t[ $this, 'get_group_name' ]\n\t\t);\n\n\t\trank_math_register_var_replacement(\n\t\t\t'group_desc',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Group Description.', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Group description of the current group', 'rank-math' ),\n\t\t\t\t'variable'    => 'group_desc',\n\t\t\t\t'example'     => $this->get_group_desc(),\n\t\t\t],\n\t\t\t[ $this, 'get_group_desc' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieves the group name.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_group_name() {\n\t\t$group = $this->get_group();\n\t\tif ( ! is_object( $group ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $group->name;\n\t}\n\n\t\/**\n\t * Retrieves the group description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_group_desc() {\n\t\t$group = $this->get_group();\n\t\tif ( ! is_object( $group ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $group->description;\n\t}\n\n\t\/**\n\t * Returns the group object when the current page is the group page.\n\t *\n\t * @return null|Object\n\t *\/\n\tprivate function get_group() {\n\t\tif ( ! function_exists( 'groups_get_current_group' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$group = groups_get_current_group();\n\t\tif ( ! is_object( $group ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $group;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/local-seo\/class-local-seo.php","ext":"php","size":12513,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Local SEO module.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Local_Seo\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Local_Seo;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Local_Seo class.\n *\/\nclass Local_Seo {\n\n\tuse Ajax;\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'after_setup_theme', 'location_sitemap', 11 );\n\t\t$this->filter( 'rank_math\/settings\/title', 'add_settings' );\n\t\t$this->filter( 'rank_math\/json_ld', 'organization_or_person', 9, 2 );\n\t}\n\n\t\/**\n\t * Init Local SEO Sitemap.\n\t *\/\n\tpublic function location_sitemap() {\n\t\tif (\n\t\t\tHelper::is_module_active( 'sitemap' ) &&\n\t\t\t'company' === Helper::get_settings( 'titles.knowledgegraph_type' ) &&\n\t\t\t$this->do_filter( 'sitemap\/locations', false )\n\t\t) {\n\t\t\tnew KML_File();\n\t\t}\n\t}\n\n\t\/**\n\t * Add module settings in Titles & Meta panel.\n\t *\n\t * @param array $tabs Array of option panel tabs.\n\t *\n\t * @return array\n\t *\/\n\tpublic function add_settings( $tabs ) {\n\t\t$about_page = Helper::get_settings( 'titles.local_seo_about_page' );\n\t\tif ( $about_page ) {\n\t\t\t$about_page = [\n\t\t\t\t'id'   => $about_page,\n\t\t\t\t'name' => get_the_title( $about_page ),\n\t\t\t\t'url'  => get_permalink( $about_page ),\n\t\t\t];\n\t\t}\n\n\t\t$contact_page = Helper::get_settings( 'titles.local_seo_contact_page' );\n\t\tif ( $contact_page ) {\n\t\t\t$contact_page = [\n\t\t\t\t'id'   => $contact_page,\n\t\t\t\t'name' => get_the_title( $contact_page ),\n\t\t\t\t'url'  => get_permalink( $contact_page ),\n\t\t\t];\n\t\t}\n\t\t$tabs['local']['json'] = [\n\t\t\t'businessTypes'    => Helper::choices_business_types( true ),\n\t\t\t'phoneTypes'       => Helper::choices_phone_types(),\n\t\t\t'organizationInfo' => Helper::choices_additional_organization_info(),\n\t\t\t'aboutPage'        => $about_page,\n\t\t\t'contactPage'      => $contact_page,\n\t\t];\n\n\t\t$tabs['local']['file'] = __DIR__ . '\/views\/titles-options.php';\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Add Person\/Organization schema.\n\t *\n\t * @param array  $data    Array of JSON-LD data.\n\t * @param JsonLD $json_ld The JsonLD instance.\n\t *\n\t * @return array\n\t *\/\n\tpublic function organization_or_person( $data, $json_ld ) {\n\t\tif ( ! $json_ld->can_add_global_entities( $data ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$entity = [\n\t\t\t'@type' => '',\n\t\t\t'@id'   => '',\n\t\t\t'name'  => '',\n\t\t\t'url'   => get_home_url(),\n\t\t];\n\n\t\t$social_profiles = $json_ld->get_social_profiles();\n\t\tif ( ! empty( $social_profiles ) ) {\n\t\t\t$entity['sameAs'] = $social_profiles;\n\t\t}\n\n\t\t$json_ld->add_prop( 'email', $entity );\n\t\t$json_ld->add_prop( 'url', $entity );\n\t\t$json_ld->add_prop( 'address', $entity );\n\t\t$json_ld->add_prop( 'image', $entity );\n\n\t\tswitch ( Helper::get_settings( 'titles.knowledgegraph_type' ) ) {\n\t\t\tcase 'company':\n\t\t\t\t$this->add_place_entity( $data, $json_ld );\n\t\t\t\t$data['publisher'] = $this->organization( $entity, $data );\n\t\t\t\tbreak;\n\t\t\tcase 'person':\n\t\t\t\t$data['publisher'] = $this->person( $entity, $json_ld );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Add place entity to use in the Organization schema.\n\t *\n\t * @param array  $data   Array of JSON-LD data.\n\t * @param JsonLD $jsonld The JsonLD instance.\n\t *\/\n\tprivate function add_place_entity( &$data, $jsonld ) {\n\t\t$properties = [];\n\t\t$this->add_geo_cordinates( $properties );\n\t\t$jsonld->add_prop( 'address', $properties );\n\t\tif ( empty( $properties ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$data['place'] = array_merge(\n\t\t\t[\n\t\t\t\t'@type' => 'Place',\n\t\t\t\t'@id'   => home_url( '\/#place' ),\n\t\t\t],\n\t\t\t$properties\n\t\t);\n\t}\n\n\t\/**\n\t * Structured data for Organization.\n\t *\n\t * @param array $entity Array of JSON-LD entity.\n\t * @param array $data  Array of JSON-LD data.\n\t *\/\n\tprivate function organization( $entity, $data ) {\n\t\t$name            = Helper::get_settings( 'titles.knowledgegraph_name' );\n\t\t$type            = Helper::get_settings( 'titles.local_business_type' );\n\t\t$entity['@type'] = $type ? $type : 'Organization';\n\t\t$entity['@id']   = home_url( '\/#organization' );\n\t\t$entity['name']  = $name ? $name : get_bloginfo( 'name' );\n\n\t\tif ( is_singular() && 'Organization' !== $type ) {\n\t\t\t$entity['@type'] = \\array_values( array_filter( [ $type, 'Organization' ] ) );\n\t\t}\n\n\t\t\/\/ Price Range.\n\t\tif ( $price_range = Helper::get_settings( 'titles.price_range' ) ) { \/\/ phpcs:ignore\n\t\t\t$entity['priceRange'] = $price_range;\n\t\t}\n\n\t\t$this->add_contact_points( $entity );\n\t\t$this->add_business_hours( $entity );\n\t\t$this->add_additional_details( $entity );\n\n\t\t\/\/ Add reference to the place entity.\n\t\tif ( isset( $data['place'] ) ) {\n\t\t\t$entity['location'] = [ '@id' => $data['place']['@id'] ];\n\t\t}\n\n\t\treturn $this->sanitize_organization_schema( $entity, $type );\n\t}\n\n\t\/**\n\t * Structured data for Person.\n\t *\n\t * @param array  $entity  Array of JSON-LD entity.\n\t * @param JsonLD $json_ld JsonLD instance.\n\t *\/\n\tprivate function person( $entity, $json_ld ) {\n\t\t$name = Helper::get_settings( 'titles.knowledgegraph_name' );\n\t\tif ( ! $name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$entity['@type'] = is_singular()\n\t\t? [\n\t\t\t'Organization',\n\t\t\t'Person',\n\t\t]\n\t\t: 'Person';\n\t\t$entity['@id']   = home_url( '\/#person' );\n\t\t$entity['name']  = $name;\n\t\t$json_ld->add_prop( 'phone', $entity );\n\n\t\tif ( isset( $entity['logo'] ) ) {\n\t\t\t$entity['image'] = [ '@id' => $entity['logo']['@id'] ];\n\n\t\t\tif ( ! is_singular() ) {\n\t\t\t\t$entity['image'] = $entity['logo'];\n\t\t\t\tunset( $entity['logo'] );\n\t\t\t}\n\t\t}\n\n\t\treturn $entity;\n\t}\n\n\t\/**\n\t * Add Contact points in the Organization schema.\n\t *\n\t * @param array $entity Array of JSON-LD entity.\n\t *\/\n\tprivate function add_contact_points( &$entity ) {\n\t\t$phone_numbers = Helper::get_settings( 'titles.phone_numbers' );\n\t\tif ( empty( $phone_numbers ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$numbers = [];\n\t\tforeach ( $phone_numbers as $number ) {\n\t\t\tif ( empty( $number['number'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$numbers[] = [\n\t\t\t\t'@type'       => 'ContactPoint',\n\t\t\t\t'telephone'   => $number['number'],\n\t\t\t\t'contactType' => $number['type'],\n\t\t\t];\n\t\t}\n\n\t\tif ( ! empty( $numbers ) ) {\n\t\t\t$entity['contactPoint'] = $numbers;\n\t\t}\n\t}\n\n\t\/**\n\t * Add geo coordinates in Place entity.\n\t *\n\t * @param array $entity Array of JSON-LD entity.\n\t *\/\n\tprivate function add_geo_cordinates( &$entity ) {\n\t\t$geo = Str::to_arr( Helper::get_settings( 'titles.geo' ) );\n\t\tif ( ! isset( $geo[0], $geo[1] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$entity['geo'] = [\n\t\t\t'@type'     => 'GeoCoordinates',\n\t\t\t'latitude'  => $geo[0],\n\t\t\t'longitude' => $geo[1],\n\t\t];\n\n\t\t$entity['hasMap'] = 'https:\/\/www.google.com\/maps\/search\/?api=1&query=' . join( ',', $geo );\n\t}\n\n\t\/**\n\t * Add business hours in the Organization schema.\n\t *\n\t * @param array $entity Array of JSON-LD entity.\n\t *\/\n\tprivate function add_business_hours( &$entity ) {\n\t\t$opening_hours = $this->get_opening_hours();\n\t\tif ( empty( $opening_hours ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$entity['openingHours'] = [];\n\t\tforeach ( $opening_hours as $time => $days ) {\n\t\t\t$entity['openingHours'][] = join( ',', $days ) . ' ' . $time;\n\t\t}\n\t}\n\n\t\/**\n\t * Get Business opening hours.\n\t *\n\t * @return bool|array\n\t *\/\n\tprivate function get_opening_hours() {\n\t\t$hours = Helper::get_settings( 'titles.opening_hours' );\n\t\tif ( ! is_array( $hours ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$opening_hours = [];\n\t\tforeach ( $hours as $hour ) {\n\t\t\tif ( empty( $hour['time'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$opening_hours[ $hour['time'] ][] = $hour['day'];\n\t\t}\n\n\t\treturn $opening_hours;\n\t}\n\n\t\/**\n\t * Add additional details in the Organization schema.\n\t *\n\t * @param array $entity Array of JSON-LD entity.\n\t *\/\n\tprivate function add_additional_details( &$entity ) {\n\t\t$description = Helper::get_settings( 'titles.organization_description' );\n\t\tif ( $description ) {\n\t\t\t$entity['description'] = $description;\n\t\t}\n\n\t\t$properties = Helper::get_settings( 'titles.additional_info' );\n\t\tif ( empty( $properties ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $properties as $property ) {\n\t\t\tif ( empty( $property['value'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$type = $property['type'];\n\t\t\tif ( 'numberOfEmployees' === $type ) {\n\t\t\t\t$parts = explode( '-', $property['value'] );\n\t\t\t\tif ( empty( $parts[1] ) ) {\n\t\t\t\t\t$entity['numberOfEmployees'] = [\n\t\t\t\t\t\t'@type' => 'QuantitativeValue',\n\t\t\t\t\t\t'value' => $parts[0],\n\t\t\t\t\t];\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$entity['numberOfEmployees'] = [\n\t\t\t\t\t'@type'    => 'QuantitativeValue',\n\t\t\t\t\t'minValue' => $parts[0],\n\t\t\t\t\t'maxValue' => $parts[1],\n\t\t\t\t];\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$entity[ $type ] = $property['value'];\n\t\t}\n\t}\n\n\t\/**\n\t * Sanitize structured data for different organization types.\n\t *\n\t * @param array  $entity Array of Schema structured data.\n\t * @param string $type   Type of organization.\n\t *\n\t * @return array Sanitized data.\n\t *\/\n\tprivate function sanitize_organization_schema( $entity, $type ) {\n\t\t$types = [\n\t\t\t'op'   => [ 'Organization', 'Corporation', 'EducationalOrganization', 'CollegeOrUniversity', 'ElementarySchool', 'HighSchool', 'MiddleSchool', 'Preschool', 'School', 'SportsTeam', 'MedicalOrganization', 'DiagnosticLab', 'Pharmacy', 'VeterinaryCare', 'PerformingGroup', 'DanceGroup', 'MusicGroup', 'TheaterGroup', 'GovernmentOrganization', 'NGO', 'Airline', 'Consortium', 'Funding Scheme', 'FundingAgency', 'LibrarySystem', 'NewsMediaOrganization', 'Project', 'SportsOrganization', 'WorkersUnion' ],\n\t\t\t'logo' => [ 'AnimalShelter', 'AutomotiveBusiness', 'Campground', 'ChildCare', 'DryCleaningOrLaundry', 'Dentist', 'EmergencyService', 'FireStation', 'PoliceStation', 'EntertainmentBusiness', 'AdultEntertainment', 'AmusementPark', 'ArtGallery', 'Casino', 'ComedyClub', 'MovieTheater', 'NightClub', 'EmploymentAgency', 'TravelAgency', 'Store', 'AutoPartsStore', 'BikeStore', 'BookStore', 'ClothingStore', 'ComputerStore', 'ConvenienceStore', 'DepartmentStore', 'ElectronicsStore', 'Florist', 'FurnitureStore', 'GardenStore', 'GroceryStore', 'HardwareStore', 'HobbyShop', 'HomeGoodsStore', 'JewelryStore', 'LiquorStore', 'MensClothingStore', 'MobilePhoneStore', 'MovieRentalStore', 'MusicStore', 'OfficeEquipmentStore', 'OutletStore', 'PawnShop', 'PetStore', 'ShoeStore', 'SportingGoodsStore', 'TireShop', 'ToyStore', 'WholesaleStore', 'FinancialService', 'Hospital', 'MovieTheater', 'HomeAndConstructionBusiness', 'Electrician', 'GeneralContractor', 'Plumber', 'InternetCafe', 'Library', 'LocalBusiness', 'LodgingBusiness', 'Hostel', 'Hotel', 'Motel', 'BedAndBreakfast', 'Campground', 'RadioStation', 'RealEstateAgent', 'RecyclingCenter', 'SelfStorage', 'ShoppingCenter', 'SportsActivityLocation', 'BowlingAlley', 'ExerciseGym', 'GolfCourse', 'HealthClub', 'PublicSwimmingPool', 'Resort', 'SkiResort', 'SportsClub', 'TennisComplex', 'StadiumOrArena', 'TelevisionStation', 'TouristInformationCenter', 'MovingCompany', 'InsuranceAgency', 'ProfessionalService', 'HVACBusiness', 'AutoBodyShop', 'AutoDealer', 'AutoPartsStore', 'AutoRental', 'AutoRepair', 'AutoWash', 'GasStation', 'MotorcycleDealer', 'MotorcycleRepair', 'AccountingService', 'AutomatedTeller', 'FoodEstablishment', 'Bakery', 'BarOrPub', 'Brewery', 'CafeOrCoffeeShop', 'FastFoodRestaurant', 'IceCreamShop', 'Restaurant', 'Winery', 'GovernmentOffice', 'PostOffice', 'HealthAndBeautyBusiness', 'BeautySalon', 'DaySpa', 'HairSalon', 'HealthClub', 'NailSalon', 'TattooParlor', 'HousePainter', 'Locksmith', 'Notary', 'RoofingContractor', 'LegalService', 'Physician', 'Optician', 'MedicalBusiness', 'MedicalClinic', 'BankOrCreditUnion', 'CovidTestingFacility', 'ArchiveOrganization', 'Optician', 'DietNutrition' ],\n\t\t];\n\n\t\t$perform = false;\n\t\tforeach ( $types as $func => $to_check ) {\n\t\t\tif ( in_array( $type, $to_check, true ) ) {\n\t\t\t\t$perform = 'sanitize_organization_' . $func;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $perform ? $this->$perform( $entity ) : $entity;\n\t}\n\n\t\/**\n\t * Remove `openingHours`, `priceRange` properties\n\t * from the Schema entity.\n\t *\n\t * @param array $entity Array of Schema structured data.\n\t *\n\t * @return array Sanitized data.\n\t *\/\n\tprivate function sanitize_organization_op( $entity ) {\n\t\tunset( $entity['openingHours'], $entity['priceRange'] );\n\n\t\treturn $entity;\n\t}\n\n\t\/**\n\t * Change `logo` property to `image` & `contactPoint` to `telephone`.\n\t *\n\t * @param array $entity Array of schema data.\n\t *\n\t * @return array Sanitized data.\n\t *\/\n\tprivate function sanitize_organization_logo( $entity ) {\n\t\tif ( isset( $entity['logo'] ) ) {\n\t\t\t$entity['image'] = [ '@id' => $entity['logo']['@id'] ];\n\t\t}\n\t\tif ( isset( $entity['contactPoint'] ) ) {\n\t\t\t$entity['telephone'] = $entity['contactPoint'][0]['telephone'];\n\t\t\tunset( $entity['contactPoint'] );\n\t\t}\n\n\t\treturn $entity;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/local-seo\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/local-seo\/views\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/local-seo\/views\/titles-options.php","ext":"php","size":10271,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The local SEO settings.\n *\n * @package    RankMath\n * @subpackage RankMath\\Local_Seo\n *\/\n\nuse RankMath\\Helper;\nuse RankMath\\KB;\n\ndefined( 'ABSPATH' ) || exit;\n\n$rank_math_company = [ [ 'knowledgegraph_type', 'company' ] ];\n$rank_math_person  = [ [ 'knowledgegraph_type', 'person' ] ];\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'knowledgegraph_type',\n\t\t'type'    => 'radio_inline',\n\t\t'name'    => esc_html__( 'Person or Company', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'person'  => esc_html__( 'Person', 'rank-math' ),\n\t\t\t'company' => esc_html__( 'Organization', 'rank-math' ),\n\t\t],\n\t\t'desc'    => esc_html__( 'Choose whether the site represents a person or an organization.', 'rank-math' ),\n\t\t'default' => 'person',\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'website_name',\n\t\t'type'    => 'text',\n\t\t'name'    => esc_html__( 'Website Name', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Enter the name of your site to appear in search results.', 'rank-math' ),\n\t\t'default' => get_bloginfo( 'name' ),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'website_alternate_name',\n\t\t'type' => 'text',\n\t\t'name' => esc_html__( 'Website Alternate Name', 'rank-math' ),\n\t\t'desc' => esc_html__( 'An alternate version of your site name (for example, an acronym or shorter name).', 'rank-math' ),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'knowledgegraph_name',\n\t\t'type'    => 'text',\n\t\t'name'    => esc_html__( 'Person\/Organization Name', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Your name or company name intended to feature in Google\\'s Knowledge Panel.', 'rank-math' ),\n\t\t'default' => get_bloginfo( 'name' ),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'organization_description',\n\t\t'type' => 'textarea_small',\n\t\t'name' => esc_html__( 'Description', 'rank-math' ),\n\t\t'desc' => esc_html__( 'Provide a detailed description of your organization.', 'rank-math' ),\n\t\t'dep'  => $rank_math_company,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'knowledgegraph_logo',\n\t\t'type'    => 'file',\n\t\t'name'    => esc_html__( 'Logo', 'rank-math' ),\n\t\t'desc'    => __( '<strong>Min Size: 112\u03a7112px<\/strong>.<br \/> A squared image is preferred by the search engines.', 'rank-math' ),\n\t\t'options' => [ 'url' => false ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'url',\n\t\t'type'    => 'text_url',\n\t\t'name'    => esc_html__( 'URL', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'URL of your website or your company\u2019s website.', 'rank-math' ),\n\t\t'default' => home_url(),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'email',\n\t\t'type' => 'text',\n\t\t'name' => esc_html__( 'Email', 'rank-math' ),\n\t\t'desc' => esc_html__( 'Enter the contact email address that could be displayed on search engines.', 'rank-math' ),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'phone',\n\t\t'type' => 'text',\n\t\t'name' => esc_html__( 'Phone', 'rank-math' ),\n\t\t'desc' => esc_html__( 'Search engines may prominently display your contact phone number for mobile users.', 'rank-math' ),\n\t\t'dep'  => $rank_math_person,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'local_address',\n\t\t'type' => 'address',\n\t\t'name' => esc_html__( 'Address', 'rank-math' ),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'local_address_format',\n\t\t'type'       => 'textarea_small',\n\t\t'name'       => esc_html__( 'Address Format', 'rank-math' ),\n\t\t'desc'       => wp_kses_post( __( 'Format used when the address is displayed using the <code>[rank_math_contact_info]<\/code> shortcode.<br><strong>Available Tags: {address}, {locality}, {region}, {postalcode}, {country}, {gps}<\/strong>', 'rank-math' ) ),\n\t\t'default'    => '{address} {locality}, {region} {postalcode}',\n\t\t'classes'    => 'rank-math-address-format',\n\t\t'attributes' => [\n\t\t\t'rows'        => 2,\n\t\t\t'placeholder' => '{address} {locality}, {region} {country}. {postalcode}.',\n\t\t],\n\t\t'dep'        => $rank_math_company,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'local_business_type',\n\t\t'type'       => 'select',\n\t\t'name'       => esc_html__( 'Business Type', 'rank-math' ),\n\t\t'options'    => Helper::choices_business_types( true ),\n\t\t'attributes' => ( 'data-s2' ),\n\t\t'dep'        => $rank_math_company,\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'      => 'opening_hours_format',\n\t\t'type'    => 'switch',\n\t\t'name'    => esc_html__( 'Opening Hours Format', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'off' => '24:00',\n\t\t\t'on'  => '12:00',\n\t\t],\n\t\t'desc'    => esc_html__( 'Time format used in the contact shortcode.', 'rank-math' ),\n\t\t'default' => 'off',\n\t\t'dep'     => $rank_math_company,\n\t]\n);\n\n$rank_math_opening_hours = $cmb->add_field(\n\t[\n\t\t'id'      => 'opening_hours',\n\t\t'type'    => 'group',\n\t\t'name'    => esc_html__( 'Opening Hours', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Select opening hours. You can add multiple sets if you have different opening or closing hours on some days or if you have a mid-day break. Times are specified using 24:00 time.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'add_button'    => esc_html__( 'Add time', 'rank-math' ),\n\t\t\t'remove_button' => esc_html__( 'Remove', 'rank-math' ),\n\t\t],\n\t\t'dep'     => $rank_math_company,\n\t\t'classes' => 'cmb-group-text-only',\n\t]\n);\n\n$cmb->add_group_field(\n\t$rank_math_opening_hours,\n\t[\n\t\t'id'      => 'day',\n\t\t'type'    => 'select',\n\t\t'options' => [\n\t\t\t'Monday'    => esc_html__( 'Monday', 'rank-math' ),\n\t\t\t'Tuesday'   => esc_html__( 'Tuesday', 'rank-math' ),\n\t\t\t'Wednesday' => esc_html__( 'Wednesday', 'rank-math' ),\n\t\t\t'Thursday'  => esc_html__( 'Thursday', 'rank-math' ),\n\t\t\t'Friday'    => esc_html__( 'Friday', 'rank-math' ),\n\t\t\t'Saturday'  => esc_html__( 'Saturday', 'rank-math' ),\n\t\t\t'Sunday'    => esc_html__( 'Sunday', 'rank-math' ),\n\t\t],\n\t]\n);\n\n$cmb->add_group_field(\n\t$rank_math_opening_hours,\n\t[\n\t\t'id'          => 'time',\n\t\t'type'        => 'text',\n\t\t'attributes'  => [ 'placeholder' => esc_html__( 'e.g. 09:00-17:00', 'rank-math' ) ],\n\t\t'time_format' => 'H:i',\n\t]\n);\n\n$rank_math_phones = $cmb->add_field(\n\t[\n\t\t'id'      => 'phone_numbers',\n\t\t'type'    => 'group',\n\t\t'name'    => esc_html__( 'Phone Number', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Search engines may prominently display your contact phone number for mobile users.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'add_button'    => esc_html__( 'Add number', 'rank-math' ),\n\t\t\t'remove_button' => esc_html__( 'Remove', 'rank-math' ),\n\t\t],\n\t\t'dep'     => $rank_math_company,\n\t\t'classes' => 'cmb-group-text-only',\n\t]\n);\n\n$cmb->add_group_field(\n\t$rank_math_phones,\n\t[\n\t\t'id'      => 'type',\n\t\t'type'    => 'select',\n\t\t'options' => Helper::choices_phone_types(),\n\t\t'default' => 'customer_support',\n\t]\n);\n\n$cmb->add_group_field(\n\t$rank_math_phones,\n\t[\n\t\t'id'         => 'number',\n\t\t'type'       => 'text',\n\t\t'attributes' => [ 'placeholder' => esc_html__( 'Format: +1-401-555-1212', 'rank-math' ) ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'   => 'price_range',\n\t\t'type' => 'text',\n\t\t'name' => esc_html__( 'Price Range', 'rank-math' ),\n\t\t'desc' => esc_html__( 'The price range of the business, for example $$$.', 'rank-math' ),\n\t\t'dep'  => $rank_math_company,\n\t]\n);\n\n$rank_math_additional_info = $cmb->add_field(\n\t[\n\t\t'id'      => 'additional_info',\n\t\t'type'    => 'group',\n\t\t'name'    => esc_html__( 'Additional Info', 'rank-math' ),\n\t\t'desc'    => esc_html__( 'Provide relevant details of your company to include in the Organization Schema.', 'rank-math' ),\n\t\t'options' => [\n\t\t\t'add_button'    => esc_html__( 'Add', 'rank-math' ),\n\t\t\t'remove_button' => esc_html__( 'Remove', 'rank-math' ),\n\t\t],\n\t\t'dep'     => $rank_math_company,\n\t\t'classes' => 'cmb-group-text-only',\n\t]\n);\n\n$cmb->add_group_field(\n\t$rank_math_additional_info,\n\t[\n\t\t'id'      => 'type',\n\t\t'type'    => 'select',\n\t\t'options' => Helper::choices_additional_organization_info(),\n\t\t'default' => '',\n\t]\n);\n\n$cmb->add_group_field(\n\t$rank_math_additional_info,\n\t[\n\t\t'id'   => 'value',\n\t\t'type' => 'text',\n\t]\n);\n\n$rank_math_about_page    = Helper::get_settings( 'titles.local_seo_about_page' );\n$rank_math_about_options = [ '' => __( 'Select Page', 'rank-math' ) ];\n\nif ( $rank_math_about_page ) {\n\t$rank_math_about_options[ $rank_math_about_page ] = get_the_title( $rank_math_about_page );\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'local_seo_about_page',\n\t\t'type'       => 'select',\n\t\t'options'    => $rank_math_about_options,\n\t\t'name'       => esc_html__( 'About Page', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Select a page on your site where you want to show the LocalBusiness meta data.', 'rank-math' ),\n\t\t'attributes' => ( 'data-s2-pages' ),\n\t]\n);\n\n$rank_math_contact_page    = Helper::get_settings( 'titles.local_seo_contact_page' );\n$rank_math_contact_options = [ '' => __( 'Select Page', 'rank-math' ) ];\n\nif ( $rank_math_contact_page ) {\n\t$rank_math_contact_options[ $rank_math_contact_page ] = get_the_title( $rank_math_contact_page );\n}\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'local_seo_contact_page',\n\t\t'type'       => 'select',\n\t\t'options'    => $rank_math_contact_options,\n\t\t'name'       => esc_html__( 'Contact Page', 'rank-math' ),\n\t\t'desc'       => esc_html__( 'Select a page on your site where you want to show the LocalBusiness meta data.', 'rank-math' ),\n\t\t'attributes' => ( 'data-s2-pages' ),\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'         => 'maps_api_key',\n\t\t'type'       => 'text',\n\t\t'name'       => esc_html__( 'Google Maps API Key', 'rank-math' ),\n\t\t\/* translators: %s expands to \"Google Maps Embed API\" https:\/\/developers.google.com\/maps\/documentation\/embed\/ *\/\n\t\t'desc'       => sprintf( esc_html__( 'An API Key is required to display embedded Google Maps on your site. Get it here: %s', 'rank-math' ), '<a href=\"https:\/\/developers.google.com\/maps\/documentation\/javascript\/get-api-key\" target=\"_blank\">' . __( 'Google Maps Embed API', 'rank-math' ) . '<\/a>' ),\n\t\t'dep'        => $rank_math_company,\n\t\t'attributes' => [ 'type' => 'password' ],\n\t]\n);\n\n$cmb->add_field(\n\t[\n\t\t'id'    => 'geo',\n\t\t'type'  => 'text',\n\t\t'name'  => esc_html__( 'Geo Coordinates', 'rank-math' ),\n\t\t'desc'  => esc_html__( 'Latitude and longitude values separated by comma.', 'rank-math' ),\n\t\t'dep'   => $rank_math_company,\n\t\t\/* Translators: placeholder is a link to the Pro version *\/\n\t\t'after' => '<strong style=\"margin-top:20px; display:block; text-align:right;\">' . sprintf( __( 'Multiple Locations are available in the %s.', 'rank-math' ), '<a href=\"' . KB::get( 'pro', 'Multiple Location Notice' ) . '\" target=\"_blank\">PRO Version<\/a>' ) . '<\/strong>',\n\t]\n);\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/modules\/local-seo\/class-kml-file.php","ext":"php","size":8904,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The KML File.\n *\n * @since      1.0.24\n * @package    RankMath\n * @subpackage RankMath\\Local_Seo\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Local_Seo;\n\nuse RankMath\\Helper;\nuse RankMath\\Traits\\Ajax;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Sitemap\\Router;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * KML_File class.\n *\/\nclass KML_File {\n\n\tuse Ajax;\n\tuse Hooker;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'init', 'init', 1 );\n\t\t$this->filter( 'rank_math\/sitemap\/http_headers', 'remove_x_robots_tag' );\n\t\t$this->filter( 'rank_math\/sitemap\/index', 'add_local_sitemap' );\n\t\t$this->filter( 'rank_math\/sitemap\/local\/content', 'local_sitemap_content' );\n\t\t$this->filter( 'rank_math\/sitemap\/locations\/content', 'kml_file_content' );\n\t\t$this->action( 'cmb2_save_options-page_fields_rank-math-options-titles_options', 'update_sitemap', 25, 2 );\n\t\t$this->action( 'rank_math\/settings\/before_save', 'before_settings_save', 25, 2 );\n\t}\n\n\t\/**\n\t * Set up rewrite rules.\n\t *\/\n\tpublic function init() {\n\t\tadd_rewrite_rule( Router::get_sitemap_base() . 'locations\\.kml$', 'index.php?sitemap=locations', 'top' );\n\t}\n\n\t\/**\n\t * Filter function to remove x-robots tag from Locations KML file.\n\t *\n\t * @param array $headers HTTP headers.\n\t *\/\n\tpublic function remove_x_robots_tag( $headers ) {\n\t\tif ( ! isset( $headers['X-Robots-Tag'] ) ) {\n\t\t\treturn $headers;\n\t\t}\n\n\t\t$url = array_filter( explode( '\/', Param::server( 'REQUEST_URI' ) ) );\n\t\tif ( 'locations.kml' !== end( $url ) ) {\n\t\t\treturn $headers;\n\t\t}\n\n\t\tunset( $headers['X-Robots-Tag'] );\n\t\treturn $headers;\n\t}\n\n\t\/**\n\t * Add the Local SEO Sitemap to the sitemap index.\n\t *\n\t * @param string $xml String to append to sitemaps index.\n\t *\n\t * @return string $xml The sitemap index with the Local SEO Sitemap added.\n\t *\/\n\tpublic function add_local_sitemap( $xml ) {\n\t\t$item = $this->do_filter(\n\t\t\t'sitemap\/index\/entry',\n\t\t\t[\n\t\t\t\t'loc'     => Router::get_base_url( 'local-sitemap.xml' ),\n\t\t\t\t'lastmod' => $this->get_modified_date(),\n\t\t\t],\n\t\t\t'local',\n\t\t);\n\n\t\tif ( ! $item ) {\n\t\t\treturn $xml;\n\t\t}\n\n\t\t$xml .= $this->newline( '<sitemap>', 1 );\n\t\t$xml .= $this->newline( '<loc>' . htmlspecialchars( $item['loc'] ) . '<\/loc>', 2 );\n\t\t$xml .= empty( $item['lastmod'] ) ? '' : $this->newline( '<lastmod>' . htmlspecialchars( $item['lastmod'] ) . '<\/lastmod>', 2 );\n\t\t$xml .= $this->newline( '<\/sitemap>', 1 );\n\n\t\treturn $xml;\n\t}\n\n\t\/**\n\t * The content of the Local SEO Sitemap.\n\t *\n\t * @return string $urlset Local SEO Sitemap XML content.\n\t *\/\n\tpublic function local_sitemap_content() {\n\t\t$item = $this->do_filter(\n\t\t\t'sitemap\/entry',\n\t\t\t[\n\t\t\t\t'loc' => Router::get_base_url( 'locations.kml' ),\n\t\t\t\t'mod' => $this->get_modified_date(),\n\t\t\t],\n\t\t\t'local',\n\t\t\t[]\n\t\t);\n\n\t\tif ( ! $item ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$output  = $this->newline( '<urlset xmlns=\"http:\/\/www.sitemaps.org\/schemas\/sitemap\/0.9\">', 1 );\n\t\t$output .= $this->newline( '<url>', 2 );\n\t\t$output .= $this->newline( '<loc>' . htmlspecialchars( $item['loc'] ) . '<\/loc>', 3 );\n\t\t$output .= empty( $item['mod'] ) ? '' : $this->newline( '<lastmod>' . htmlspecialchars( $item['mod'] ) . '<\/lastmod>', 3 );\n\t\t$output .= $this->newline( '<\/url>', 2 );\n\t\t$output .= $this->newline( '<\/urlset>', 1 );\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Generate the KML file contents.\n\t *\n\t * @return string $kml KML file content.\n\t *\/\n\tpublic function kml_file_content() {\n\t\t$locations = $this->get_local_seo_data();\n\t\tif ( empty( $locations ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$business_name = Helper::get_settings( 'titles.knowledgegraph_name' );\n\t\t$business_url  = Helper::get_settings( 'titles.url' );\n\n\t\t$kml  = $this->newline( '<kml xmlns=\"http:\/\/www.opengis.net\/kml\/2.2\" xmlns:atom=\"http:\/\/www.w3.org\/2005\/Atom\">' );\n\t\t$kml .= $this->newline( '<Document>', 1 );\n\t\t$kml .= $this->newline( '<name>Locations for ' . esc_html( $business_name ) . '<\/name>', 2 );\n\t\t$kml .= $this->newline( '<open>1<\/open>', 2 );\n\t\t$kml .= $this->newline( '<Folder>', 2 );\n\n\t\tif ( ! empty( $business_url ) ) {\n\t\t\t$kml .= $this->newline( '<atom:link href=\"' . $business_url . '\" \/>', 3 );\n\t\t}\n\n\t\tforeach ( $locations as $location ) {\n\t\t\t$address   = ! empty( $location['address'] ) ? Helper::replace_vars( implode( ', ', array_filter( $location['address'] ) ) ) : '';\n\t\t\t$has_coord = ! empty( $location['coords']['latitude'] ) && ! empty( $location['coords']['longitude'] );\n\n\t\t\t$kml .= $this->newline( '<Placemark>', 3 );\n\t\t\t$kml .= $this->newline( '<name><![CDATA[' . html_entity_decode( $location['name'] ) . ']]><\/name>', 4 );\n\t\t\t$kml .= $this->newline( '<description><![CDATA[' . html_entity_decode( $location['description'] ) . ']]><\/description>', 4 );\n\t\t\t$kml .= $this->newline( '<address><![CDATA[' . $address . ']]><\/address>', 4 );\n\t\t\t$kml .= $this->newline( '<phoneNumber><![CDATA[' . $location['phone'] . ']]><\/phoneNumber>', 4 );\n\t\t\t$kml .= $this->newline( '<atom:link href=\"' . $location['url'] . '\"\/>', 4 );\n\t\t\t$kml .= $this->newline( '<LookAt>', 4 );\n\n\t\t\tif ( $has_coord ) {\n\t\t\t\t$kml .= $this->newline( '<latitude>' . $location['coords']['latitude'] . '<\/latitude>', 5 );\n\t\t\t\t$kml .= $this->newline( '<longitude>' . $location['coords']['longitude'] . '<\/longitude>', 5 );\n\t\t\t}\n\n\t\t\t$kml .= $this->newline( '<altitude>0<\/altitude>', 5 );\n\t\t\t$kml .= $this->newline( '<range><\/range>', 5 );\n\t\t\t$kml .= $this->newline( '<tilt>0<\/tilt>', 5 );\n\t\t\t$kml .= $this->newline( '<\/LookAt>', 4 );\n\t\t\t$kml .= $this->newline( '<Point>', 4 );\n\t\t\tif ( $has_coord ) {\n\t\t\t\t$kml .= $this->newline( '<coordinates>' . $location['coords']['longitude'] . ',' . $location['coords']['latitude'] . '<\/coordinates>', 5 );\n\t\t\t}\n\t\t\t$kml .= $this->newline( '<\/Point>', 4 );\n\t\t\t$kml .= $this->newline( '<\/Placemark>', 3 );\n\t\t}\n\n\t\t$kml .= $this->newline( '<\/Folder>', 2 );\n\t\t$kml .= $this->newline( '<\/Document>', 1 );\n\t\t$kml .= $this->newline( '<\/kml>' );\n\n\t\treturn $kml;\n\t}\n\n\t\/**\n\t * Add\/remove\/change scheduled action when the report on\/off or the frequency options are changed.\n\t *\n\t * @param string $type     Settings type.\n\t * @param array  $settings Settings data.\n\t *\/\n\tpublic function before_settings_save( $type, $settings ) {\n\t\tif ( $type !== 'titles' ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$local_seo_fields = [\n\t\t\t'knowledgegraph_name',\n\t\t\t'url',\n\t\t\t'email',\n\t\t\t'local_address',\n\t\t\t'local_business_type',\n\t\t\t'opening_hours',\n\t\t\t'phone_numbers',\n\t\t\t'price_range',\n\t\t\t'geo',\n\t\t];\n\n\t\tforeach ( $local_seo_fields as $field ) {\n\t\t\t$value = Helper::get_settings( \"titles.{$field}\" );\n\t\t\tif ( isset( $settings[ $field ] ) && $settings[ $field ] !== $value ) {\n\t\t\t\tupdate_option( 'rank_math_local_seo_update', date( 'c' ) );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Update the sitemap when the Local SEO settings are changed.\n\t *\n\t * @param int   $object_id The ID of the current object.\n\t * @param array $updated   Array of field IDs that were updated.\n\t *                         Will only include field IDs that had values change.\n\t *\/\n\tpublic function update_sitemap( $object_id, $updated ) { \/\/ phpcs:ignore\n\t\t$local_seo_fields = [\n\t\t\t'knowledgegraph_name',\n\t\t\t'url',\n\t\t\t'email',\n\t\t\t'local_address',\n\t\t\t'local_business_type',\n\t\t\t'opening_hours',\n\t\t\t'phone_numbers',\n\t\t\t'price_range',\n\t\t\t'geo',\n\t\t];\n\n\t\tif ( count( array_intersect( $local_seo_fields, $updated ) ) ) {\n\t\t\tupdate_option( 'rank_math_local_seo_update', date( 'c' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the Local SEO data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_local_seo_data() {\n\t\t$geo   = Str::to_arr( Helper::get_settings( 'titles.geo' ) );\n\t\t$cords = [\n\t\t\t'latitude'  => isset( $geo[0] ) ? $geo[0] : '',\n\t\t\t'longitude' => isset( $geo[1] ) ? $geo[1] : '',\n\t\t];\n\n\t\t$phone_numbers = Helper::get_settings( 'titles.phone_numbers' );\n\t\t$number        = ! empty( $phone_numbers ) && isset( $phone_numbers[0]['number'] ) ? $phone_numbers[0]['number'] : '';\n\n\t\t$locations = [\n\t\t\t[\n\t\t\t\t'name'        => Helper::get_settings( 'titles.knowledgegraph_name' ),\n\t\t\t\t'description' => get_option( 'blogname' ) . ' - ' . get_option( 'blogdescription' ),\n\t\t\t\t'email'       => Helper::get_settings( 'titles.email' ),\n\t\t\t\t'phone'       => $number,\n\t\t\t\t'url'         => Helper::get_settings( 'titles.url' ),\n\t\t\t\t'address'     => Helper::get_settings( 'titles.local_address' ),\n\t\t\t\t'coords'      => $cords,\n\t\t\t\t'author'      => get_option( 'blogname' ),\n\t\t\t],\n\t\t];\n\n\t\treturn $this->do_filter( 'sitemap\/locations\/data', $locations );\n\t}\n\n\t\/**\n\t * Get the Modified Date.\n\t *\n\t * @return $date\n\t *\/\n\tprivate function get_modified_date() {\n\t\tif ( ! $date = get_option( 'rank_math_local_seo_update' ) ) { \/\/ phpcs:ignore\n\t\t\t$date = date( 'c' );\n\t\t}\n\n\t\treturn $date;\n\t}\n\n\t\/**\n\t * Write a newline with indent count.\n\t *\n\t * @param string  $content Content to write.\n\t * @param integer $indent  Count of indent.\n\t *\n\t * @return string\n\t *\/\n\tprivate function newline( $content, $indent = 0 ) {\n\t\treturn str_repeat( \"\\t\", $indent ) . $content . \"\\n\";\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-api.php","ext":"php","size":3512,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The API helpers.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * API class.\n *\/\ntrait Api {\n\n\t\/**\n\t * Add notification.\n\t *\n\t * @param string $message Message string.\n\t * @param array  $options Set of options.\n\t *\/\n\tpublic static function add_notification( $message, $options = [] ) {\n\t\t$options['classes'] = ! empty( $options['classes'] ) ? $options['classes'] . ' rank-math-notice' : 'rank-math-notice';\n\t\t$notification       = compact( 'message', 'options' );\n\n\t\t\/**\n\t\t * Filter notification message & arguments before adding.\n\t\t * Pass a falsy value to stop the notification from getting added.\n\t\t *\/\n\t\tapply_filters( 'rank_math\/admin\/add_notification', $notification );\n\n\t\tif ( empty( $notification ) || ! is_array( $notification ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\trank_math()->notification->add( $notification['message'], $notification['options'] );\n\t}\n\n\t\/**\n\t * Remove notification.\n\t *\n\t * @param string $notification_id Notification id.\n\t *\/\n\tpublic static function remove_notification( $notification_id ) {\n\t\trank_math()->notification->remove_by_id( $notification_id );\n\t}\n\n\t\/**\n\t * Check if notification exists.\n\t *\n\t * @param string $notification_id Notification id.\n\t *\/\n\tpublic static function has_notification( $notification_id ) {\n\t\treturn rank_math()->notification->has_notification( $notification_id );\n\t}\n\n\t\/**\n\t * Get Setting.\n\t *\n\t * @param  string $field_id      The field id to get value for.\n\t * @param  mixed  $default_value The default value if no field found.\n\t * @return mixed\n\t *\/\n\tpublic static function get_settings( $field_id = '', $default_value = false ) {\n\t\treturn rank_math()->settings->get( $field_id, $default_value );\n\t}\n\n\t\/**\n\t * Get Auto update setting status.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function get_auto_update_setting() {\n\t\treturn in_array( 'seo-by-rank-math\/rank-math.php', (array) get_site_option( 'auto_update_plugins', [] ), true );\n\t}\n\n\t\/**\n\t * Toggle auto updates option.\n\t *\n\t * @param string $toggle       New status.\n\t * @return void\n\t *\/\n\tpublic static function toggle_auto_update_setting( $toggle ) {\n\t\tdo_action( 'rank_math\/settings\/toggle_auto_update', $toggle );\n\n\t\t$auto_updates = (array) get_site_option( 'auto_update_plugins', [] );\n\t\tif ( ! empty( $toggle ) && 'off' !== $toggle ) {\n\t\t\t$auto_updates[] = 'seo-by-rank-math\/rank-math.php';\n\t\t\tupdate_site_option( 'auto_update_plugins', array_unique( $auto_updates ) );\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_site_option( 'auto_update_plugins', array_diff( $auto_updates, [ 'seo-by-rank-math\/rank-math.php' ] ) );\n\t}\n\n\t\/**\n\t * Add something to the JSON object.\n\t *\n\t * @param string $key         Unique identifier.\n\t * @param mixed  $value       The data itself can be either a single or an array.\n\t * @param string $object_name Name for the JavaScript object. Passed directly, so it should be qualified JS variable.\n\t *\/\n\tpublic static function add_json( $key, $value, $object_name = 'rankMath' ) {\n\t\trank_math()->json->add( $key, $value, $object_name );\n\t}\n\n\t\/**\n\t * Remove something from the JSON object.\n\t *\n\t * @param string $key         Unique identifier.\n\t * @param string $object_name Name for the JavaScript object. Passed directly, so it should be qualified JS variable.\n\t *\/\n\tpublic static function remove_json( $key, $object_name = 'rankMath' ) {\n\t\trank_math()->json->remove( $key, $object_name );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-attachment.php","ext":"php","size":4236,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Attachment helpers.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Attachment trait.\n *\/\nclass Attachment {\n\n\t\/**\n\t * Check if a post can be included in sitemap.\n\t *\n\t * @param  int $attachment_id Attachment ID to check.\n\t * @return bool\n\t *\/\n\tpublic static function attachment_in_sitemap( $attachment_id ) {\n\t\tif ( empty( $attachment_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$exclude_sitemap = get_post_meta( $attachment_id, 'rank_math_exclude_sitemap', true );\n\n\t\treturn empty( $exclude_sitemap );\n\t}\n\n\t\/**\n\t * Generate local path for an attachment image.\n\t * Credit: https:\/\/wordpress.stackexchange.com\/a\/182519\n\t *\n\t * @param int    $attachment_id  Attachment ID.\n\t * @param string $size Size.\n\t *\/\n\tpublic static function get_scaled_image_path( $attachment_id, $size = 'thumbnail' ) {\n\t\t$file = get_attached_file( $attachment_id, true );\n\t\tif ( empty( $size ) || $size === 'full' ) {\n\t\t\t\/\/ For the original size get_attached_file is fine.\n\t\t\treturn realpath( $file );\n\t\t}\n\n\t\tif ( ! wp_attachment_is_image( $attachment_id ) ) {\n\t\t\treturn false; \/\/ the ID is not referring to a media.\n\t\t}\n\n\t\t$info = image_get_intermediate_size( $attachment_id, $size );\n\t\tif ( ! is_array( $info ) || ! isset( $info['file'] ) ) {\n\t\t\treturn false; \/\/ Probably a bad size argument.\n\t\t}\n\n\t\treturn realpath( str_replace( wp_basename( $file ), $info['file'], $file ) );\n\t}\n\n\t\/**\n\t * Grabs an image alt text.\n\t *\n\t * @param int $attachment_id The attachment ID.\n\t *\n\t * @return string The image alt text.\n\t *\/\n\tpublic static function get_alt_tag( $attachment_id ) {\n\t\treturn (string) get_post_meta( $attachment_id, '_wp_attachment_image_alt', true );\n\t}\n\n\t\/**\n\t * Get the relative path of the image.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $img Image URL.\n\t *\n\t * @return string The expanded image URL.\n\t *\/\n\tpublic static function get_relative_path( $img ) {\n\t\tif ( '\/' !== $img[0] ) {\n\t\t\treturn $img;\n\t\t}\n\n\t\t\/\/ If it's a relative URL, it's relative to the domain, not necessarily to the WordPress install, we\n\t\t\/\/ want to preserve domain name and URL scheme (http \/ https) though.\n\t\t$parsed_url = wp_parse_url( home_url() );\n\n\t\treturn $parsed_url['scheme'] . ':\/\/' . $parsed_url['host'] . $img;\n\t}\n\n\t\/**\n\t * Find an attachment ID for a given URL.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $url The URL to find the attachment for.\n\t *\n\t * @return int The found attachment ID, or 0 if none was found.\n\t *\/\n\tpublic static function get_by_url( $url ) {\n\t\t\/\/ Because get_by_url won't work on resized versions of images, we strip out the size part of an image URL.\n\t\t$url = preg_replace( '\/(.*)-\\d+x\\d+\\.(jpg|png|gif)$\/', '$1.$2', $url );\n\n\t\t$id = function_exists( 'wpcom_vip_attachment_url_to_postid' ) ? wpcom_vip_attachment_url_to_postid( $url ) : self::url_to_postid( $url );\n\n\t\treturn absint( $id );\n\t}\n\n\t\/**\n\t * Implements the attachment_url_to_postid with use of WP Cache.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @link https:\/\/dotlayer.com\/20-wordpress-core-functions-that-dont-scale-and-how-to-work-around-it\/\n\t *\n\t * @param string $url The attachment URL for which we want to know the Post ID.\n\t *\n\t * @return int The Post ID belonging to the attachment, 0 if not found.\n\t *\/\n\tprivate static function url_to_postid( $url ) {\n\t\t$cache_key = sprintf( 'mythemeshop_attachment_url_post_id_%s', md5( $url ) );\n\n\t\t\/\/ Set the ID based on the hashed url in the cache.\n\t\t$id = wp_cache_get( $cache_key );\n\n\t\tif ( 'not_found' === $id ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t\/\/ ID is found in cache, return.\n\t\tif ( false !== $id ) {\n\t\t\treturn $id;\n\t\t}\n\n\t\t\/\/ phpcs:ignore WordPress.VIP.RestrictedFunctions -- We use the WP COM version if we can, see above.\n\t\t$id = attachment_url_to_postid( $url );\n\n\t\tif ( empty( $id ) ) {\n\t\t\twp_cache_set( $cache_key, 'not_found', 'default', ( 12 * HOUR_IN_SECONDS + wp_rand( 0, ( 4 * HOUR_IN_SECONDS ) ) ) );\n\t\t\treturn 0;\n\t\t}\n\n\t\t\/\/ We have the Post ID, but it's not in the cache yet. We do that here and return.\n\t\twp_cache_set( $cache_key, $id, 'default', ( 24 * HOUR_IN_SECONDS + wp_rand( 0, ( 12 * HOUR_IN_SECONDS ) ) ) );\n\n\t\treturn $id;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-html.php","ext":"php","size":1847,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The HTML helpers.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\n\/**\n * HTML class.\n *\/\nclass HTML {\n\n\t\/**\n\t * Extract attributes from a html tag.\n\t *\n\t * @param string $elem Extract attributes from tag.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function extract_attributes( $elem ) {\n\t\t$regex = '#([^\\s=]+)\\s*=\\s*(\\'[^<\\']*\\'|\"[^<\"]*\")#';\n\t\tpreg_match_all( $regex, $elem, $attributes, PREG_SET_ORDER );\n\n\t\t$new       = [];\n\t\t$remaining = $elem;\n\t\tforeach ( $attributes as $attribute ) {\n\t\t\t$val                  = substr( $attribute[2], 1, -1 );\n\t\t\t$new[ $attribute[1] ] = $val;\n\t\t\t$remaining            = str_replace( $attribute[0], '', $remaining );\n\t\t}\n\n\t\t\/\/ Chop off tag name.\n\t\t$remaining = preg_replace( '\/<[^\\s]+\/', '', $remaining, 1 );\n\t\t\/\/ Check for empty attributes without values.\n\t\t$regex = '\/([^<][\\w\\d:_-]+)[\\s>]\/i';\n\t\tpreg_match_all( $regex, $remaining, $attributes, PREG_SET_ORDER );\n\t\tforeach ( $attributes as $attribute ) {\n\t\t\t$new[ trim( $attribute[1] ) ] = null;\n\t\t}\n\n\t\treturn $new;\n\t}\n\n\t\/**\n\t * Generate html attribute string for array.\n\t *\n\t * @param array  $attributes Contains key\/value pair to generate a string.\n\t * @param string $prefix     If you want to append a prefic before every key.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function attributes_to_string( $attributes = [], $prefix = '' ) {\n\n\t\t\/\/ Early Bail!\n\t\tif ( empty( $attributes ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$out = '';\n\t\tforeach ( $attributes as $key => $value ) {\n\t\t\tif ( true === $value || false === $value ) {\n\t\t\t\t$value = $value ? 'true' : 'false';\n\t\t\t}\n\n\t\t\t$out .= ' ' . esc_html( $prefix . $key );\n\t\t\tif ( null === $value ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$out .= sprintf( '=\"%s\"', esc_attr( $value ) );\n\t\t}\n\n\t\treturn $out;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-arr.php","ext":"php","size":4290,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Array helpers.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse ArrayAccess;\n\n\/**\n * Arr class.\n *\/\nclass Arr {\n\n\t\/**\n\t * Determine whether the given value is array accessible.\n\t *\n\t * @param mixed $value Value to check.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function accessible( $value ) {\n\t\treturn is_array( $value ) || $value instanceof ArrayAccess;\n\t}\n\n\t\/**\n\t * Determine if the given key exists in the provided array.\n\t *\n\t * @param ArrayAccess|array $arr Array to check key in.\n\t * @param string|int        $key   Key to check for.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function exists( $arr, $key ) {\n\t\tif ( $arr instanceof ArrayAccess ) {\n\t\t\t\/\/ @codeCoverageIgnoreStart\n\t\t\treturn $arr->offsetExists( $key );\n\t\t\t\/\/ @codeCoverageIgnoreEnd\n\t\t}\n\n\t\treturn array_key_exists( $key, $arr );\n\t}\n\n\t\/**\n\t * Check whether an array or [[\\Traversable]] contains an element.\n\t *\n\t * This method does the same as the PHP function [in_array()](https:\/\/secure.php.net\/manual\/en\/function.in-array.php)\n\t * but additionally works for objects that implement the [[\\Traversable]] interface.\n\t *\n\t * @throws \\InvalidArgumentException If `$arr` is neither traversable nor an array.\n\t *\n\t * @param array|\\Traversable $arr  The set of values to search.\n\t * @param mixed              $search The value to look for.\n\t * @param bool               $strict Whether to enable strict (`===`) comparison.\n\t *\n\t * @return bool `true` if `$search` was found in `$arr`, `false` otherwise.\n\t *\/\n\tpublic static function includes( $arr, $search, $strict = true ) {\n\t\tif ( $arr instanceof \\Traversable ) {\n\t\t\treturn self::includes_traversable( $arr, $search, $strict );\n\t\t}\n\n\t\t$is_array = is_array( $arr );\n\t\tif ( ! $is_array ) {\n\t\t\tthrow new \\InvalidArgumentException( 'Argument $arr must be an array or implement Traversable' );\n\t\t}\n\n\t\treturn $is_array ? in_array( $search, $arr, $strict ) : false; \/\/ phpcs:ignore\n\t}\n\n\t\/**\n\t * Check Traversable contains an element.\n\t *\n\t * @param \\Traversable $arr  The set of values to search.\n\t * @param mixed        $search The value to look for.\n\t * @param bool         $strict Whether to enable strict (`===`) comparison.\n\t *\n\t * @return bool `true` if `$search` was found in `$arr`, `false` otherwise.\n\t *\/\n\tprivate static function includes_traversable( $arr, $search, $strict = true ) {\n\t\tforeach ( $arr as $value ) {\n\t\t\tif ( ( $strict && $search === $value ) || $search == $value ) { \/\/ phpcs:ignore\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Insert a single array item inside another array at a set position\n\t *\n\t * @param array $arr      Array to modify. Is passed by reference, and no return is needed.\n\t * @param array $new_arr  New array to insert.\n\t * @param int   $position Position in the main array to insert the new array.\n\t *\/\n\tpublic static function insert( &$arr, $new_arr, $position ) {\n\t\t$before = array_slice( $arr, 0, $position - 1 );\n\t\t$after  = array_diff_key( $arr, $before );\n\t\t$arr    = array_merge( $before, $new_arr, $after );\n\t}\n\n\t\/**\n\t * Push an item onto the beginning of an array.\n\t *\n\t * @param array $arr Array to add.\n\t * @param mixed $value Value to add.\n\t * @param mixed $key   Add with this key.\n\t *\/\n\tpublic static function prepend( &$arr, $value, $key = null ) {\n\t\tif ( is_null( $key ) ) {\n\t\t\tarray_unshift( $arr, $value );\n\t\t\treturn;\n\t\t}\n\n\t\t$arr = [ $key => $value ] + $arr;\n\t}\n\n\t\/**\n\t * Update array add or delete value\n\t *\n\t * @param array $arr Array to modify. Is passed by reference, and no return is needed.\n\t * @param array $value Value to add or delete.\n\t *\/\n\tpublic static function add_delete_value( &$arr, $value ) {\n\t\tif ( ( $key = array_search( $value, $arr ) ) !== false ) { \/\/ @codingStandardsIgnoreLine\n\t\t\tunset( $arr[ $key ] );\n\t\t\treturn;\n\t\t}\n\n\t\t$arr[] = $value;\n\t}\n\n\t\/**\n\t * Create an array from string.\n\t *\n\t * @param string $value     The string to split.\n\t * @param string $separator Specifies where to break the string.\n\t *\n\t * @return array Returns an array after applying the function to each one.\n\t *\/\n\tpublic static function from_string( $value, $separator = ',' ) {\n\t\treturn array_values( array_filter( array_map( 'trim', explode( $separator, $value ) ) ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-url.php","ext":"php","size":4008,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The URL helpers.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\n\n\/**\n * Url class.\n *\/\nclass Url {\n\n\t\/**\n\t * Simple check for validating a URL, it must start with http:\/\/ or https:\/\/.\n\t * and pass FILTER_VALIDATE_URL validation.\n\t *\n\t * @param string $url to check.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_url( $url ) {\n\t\tif ( ! is_string( $url ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Must start with http:\/\/ or https:\/\/.\n\t\tif ( 0 !== strpos( $url, 'http:\/\/' ) && 0 !== strpos( $url, 'https:\/\/' ) && 0 !== strpos( $url, '\/\/' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Check for scheme first, if it's missing then add it.\n\t\tif ( 0 === strpos( $url, '\/\/' ) ) {\n\t\t\t$url = 'http:' . $url;\n\t\t}\n\n\t\t\/\/ Must pass validation.\n\t\treturn false !== filter_var( trailingslashit( $url ), FILTER_VALIDATE_URL ) ? true : false;\n\t}\n\n\t\/**\n\t * Check whether a url is relative.\n\t *\n\t * @param string $url URL string to check.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_relative( $url ) {\n\t\treturn ( 0 !== strpos( $url, 'http' ) && 0 !== strpos( $url, '\/\/' ) );\n\t}\n\n\t\/**\n\t * Checks whether a url is external.\n\t *\n\t * @param string $url    URL string to check. This should be a absolute URL.\n\t * @param string $domain If wants to use some other domain not home_url().\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_external( $url, $domain = false ) {\n\t\tif ( empty( $url ) || '#' === $url[0] ) { \/\/ Link to current page.\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( self::is_affiliate( $url ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( '\/' === $url[0] ) { \/\/ Link to current page or relative link.\n\t\t\treturn false;\n\t\t}\n\n\t\t$domain = self::get_domain( $domain ? $domain : home_url() );\n\t\tif ( Str::contains( $domain, $url ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Checks whether a link is an affiliate link.\n\t *\n\t * @param string $url URL string to check. This should be a absolute URL.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_affiliate( $url ) {\n\t\tif ( empty( $url ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter: 'wp_helpers_is_affiliate_link' - Allows developer to consider a link as affiliate.\n\t\t *\n\t\t * @param bool   $value Default false.\n\t\t * @param string $url URL.\n\t\t *\/\n\t\treturn apply_filters( 'wp_helpers_is_affiliate_link', false, $url );\n\t}\n\n\t\/**\n\t * Get current url.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_current_url() {\n\t\treturn self::get_scheme() . ':\/\/' . self::get_host() . self::get_port() . Param::server( 'REQUEST_URI' );\n\t}\n\n\t\/**\n\t * Get url scheme.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_scheme() {\n\t\treturn is_ssl() ? 'https' : 'http';\n\t}\n\n\t\/**\n\t * Some setups like HTTP_HOST, some like SERVER_NAME, it's complicated.\n\t *\n\t * @link http:\/\/stackoverflow.com\/questions\/2297403\/http-host-vs-server-name\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string the HTTP_HOST or SERVER_NAME\n\t *\/\n\tpublic static function get_host() {\n\t\t$host = Param::server( 'HTTP_HOST' );\n\t\tif ( false !== $host ) {\n\t\t\treturn $host;\n\t\t}\n\n\t\t$name = Param::server( 'SERVER_NAME' );\n\t\tif ( false !== $name ) {\n\t\t\treturn $name;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Get current request port.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_port() {\n\t\t$port     = Param::server( 'SERVER_PORT' );\n\t\t$has_port = $port && ! in_array( $port, [ '80', '443' ], true );\n\t\treturn $has_port ? ':' . $port : '';\n\t}\n\n\t\/**\n\t * Get parent domain\n\t *\n\t * @param string $url Url to parse.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_domain( $url ) {\n\t\t$pieces = wp_parse_url( $url );\n\t\t$domain = isset( $pieces['host'] ) ? $pieces['host'] : '';\n\n\t\tif ( Str::contains( 'localhost', $domain ) ) {\n\t\t\treturn 'localhost';\n\t\t}\n\n\t\tif ( preg_match( '\/(?P<domain>[a-z\u00c0-\u017e0-9][a-z\u00c0-\u017e0-9\\-]{1,63}\\.[a-z\u00c0-\u017e\\.]{2,15})$\/ui', $domain, $regs ) ) {\n\t\t\treturn $regs['domain'];\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-options.php","ext":"php","size":1835,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Options helpers.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Options class.\n *\/\ntrait Options {\n\n\t\/**\n\t * Option handler.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  string $key   Option to perform action.\n\t * @param  mixed  $value Pass null to get option,\n\t *                       Pass false to delete option,\n\t *                       Pass value to update option.\n\t * @return mixed\n\t *\/\n\tpublic static function option( $key, $value = null ) {\n\t\t$key = 'rank_math_' . $key;\n\n\t\tif ( false === $value ) {\n\t\t\treturn delete_option( $key );\n\t\t}\n\n\t\tif ( is_null( $value ) ) {\n\t\t\treturn get_option( $key, [] );\n\t\t}\n\n\t\treturn update_option( $key, $value );\n\t}\n\n\t\/**\n\t * Normalize option value.\n\t *\n\t * @param mixed $value Value to normalize.\n\t * @return mixed\n\t *\/\n\tpublic static function normalize_data( $value ) {\n\n\t\tif ( 'true' === $value || 'on' === $value ) {\n\t\t\t$value = true;\n\t\t} elseif ( 'false' === $value || 'off' === $value ) {\n\t\t\t$value = false;\n\t\t} elseif ( '0' === $value || '1' === $value ) {\n\t\t\t$value = intval( $value );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Update settings.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param array|null $general Array to update settings.\n\t * @param array|null $titles  Array to update settings.\n\t * @param array|null $sitemap Array to update settings.\n\t *\/\n\tpublic static function update_all_settings( $general, $titles, $sitemap ) {\n\n\t\tif ( ! is_null( $general ) ) {\n\t\t\tupdate_option( 'rank-math-options-general', $general );\n\t\t}\n\n\t\tif ( ! is_null( $titles ) ) {\n\t\t\tupdate_option( 'rank-math-options-titles', $titles );\n\t\t}\n\n\t\tif ( ! is_null( $sitemap ) ) {\n\t\t\tupdate_option( 'rank-math-options-sitemap', $sitemap );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-security.php","ext":"php","size":1408,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Security wrappers.\n *\n * @since      1.0.41.3\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Security class.\n *\/\nclass Security {\n\n\t\/**\n\t * Add query arg\n\t *\n\t * @param mixed ...$args Array of arguments.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function add_query_arg( ...$args ) {\n\t\treturn esc_url( add_query_arg( ...$args ) );\n\t}\n\n\t\/**\n\t * Add query arg\n\t *\n\t * @param mixed ...$args Array of arguments.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function add_query_arg_raw( ...$args ) {\n\t\treturn esc_url_raw( add_query_arg( ...$args ) );\n\t}\n\n\t\/**\n\t * Removes an item or items from a query string.\n\t *\n\t * @param string|array   $key    (Required) Query key or keys to remove.\n\t * @param string|boolean $query  When false uses the current URL.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function remove_query_arg( $key, $query = false ) {\n\t\treturn esc_url( remove_query_arg( $key, $query ) );\n\t}\n\n\t\/**\n\t * Removes an item or items from a query string.\n\t *\n\t * @param string|array   $key    (Required) Query key or keys to remove.\n\t * @param string|boolean $query  When false uses the current URL.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function remove_query_arg_raw( $key, $query = false ) {\n\t\treturn esc_url_raw( remove_query_arg( $key, $query ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-choices.php","ext":"php","size":24760,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Choices helpers.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\DB as DB_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Choices class.\n *\/\ntrait Choices {\n\n\t\/**\n\t * Gets list of overlay images for the social thumbnail.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  string $output Output type.\n\t * @return array\n\t *\/\n\tpublic static function choices_overlay_images( $output = 'object' ) {\n\t\t$uri = rank_math()->plugin_url() . 'assets\/admin\/img\/';\n\t\t$dir = rank_math()->plugin_dir() . 'assets\/admin\/img\/';\n\n\t\t\/**\n\t\t * Allow developers to add\/remove overlay images.\n\t\t *\n\t\t * @param array $images Image data as array of arrays.\n\t\t *\/\n\t\t$list = apply_filters(\n\t\t\t'rank_math\/social\/overlay_images',\n\t\t\t[\n\t\t\t\t'play' => [\n\t\t\t\t\t'name' => esc_html__( 'Play icon', 'rank-math' ),\n\t\t\t\t\t'url'  => $uri . 'icon-play.png',\n\t\t\t\t\t'path' => $dir . 'icon-play.png',\n\t\t\t\t],\n\t\t\t\t'gif'  => [\n\t\t\t\t\t'name' => esc_html__( 'GIF icon', 'rank-math' ),\n\t\t\t\t\t'url'  => $uri . 'icon-gif.png',\n\t\t\t\t\t'path' => $dir . 'icon-gif.png',\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t\/\/ Allow custom positions.\n\t\tforeach ( $list as $name => $data ) {\n\t\t\t$list[ $name ]['position'] = apply_filters( 'rank_math\/social\/overlay_image_position', 'middle_center', $name );\n\t\t}\n\n\t\treturn 'names' === $output ? wp_list_pluck( $list, 'name' ) : $list;\n\t}\n\n\t\/**\n\t * Get robot choices.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_robots() {\n\t\treturn [\n\t\t\t'index'        => esc_html__( 'Index', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Instructs search engines to index and show these pages in the search results.', 'rank-math' ) ),\n\t\t\t'noindex'      => esc_html__( 'No Index', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Prevents pages from being indexed and displayed in search engine result pages', 'rank-math' ) ),\n\t\t\t'nofollow'     => esc_html__( 'No Follow', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Prevents search engines from following links on the pages', 'rank-math' ) ),\n\t\t\t'noarchive'    => esc_html__( 'No Archive', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Prevents search engines from showing Cached links for pages', 'rank-math' ) ),\n\t\t\t'noimageindex' => esc_html__( 'No Image Index', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Prevents images on a page from being indexed by Google and other search engines', 'rank-math' ) ),\n\t\t\t'nosnippet'    => esc_html__( 'No Snippet', 'rank-math' ) . Admin_Helper::get_tooltip( esc_html__( 'Prevents a snippet from being shown in the search results', 'rank-math' ) ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get separator choices.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_separator() {\n\t\treturn [\n\t\t\t'-'       => '-',\n\t\t\t'&ndash;' => '\u2013',\n\t\t\t'&mdash;' => '\u2014',\n\t\t\t'&raquo;' => '\u00bb',\n\t\t\t'|'       => '|',\n\t\t\t'&bull;'  => '\u2022',\n\t\t];\n\t}\n\n\t\/**\n\t * Get all accessible post types as choices.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param boolean $force_refresh Whether to force a fresh call to get_post_types() even if the value is cached. Default false.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_post_types( $force_refresh = false ) {\n\t\tstatic $choices_post_types;\n\n\t\tif ( ! isset( $choices_post_types ) || $force_refresh ) {\n\t\t\t$choices_post_types = Helper::get_accessible_post_types();\n\t\t\t$choices_post_types = \\array_map(\n\t\t\t\tfunction ( $post_type ) {\n\t\t\t\t\t$object = get_post_type_object( $post_type );\n\t\t\t\t\treturn $object->label;\n\t\t\t\t},\n\t\t\t\t$choices_post_types\n\t\t\t);\n\t\t}\n\n\t\treturn $choices_post_types;\n\t}\n\n\t\/**\n\t * Get all post types.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_any_post_types() {\n\n\t\t$post_types = self::choices_post_types();\n\t\tunset( $post_types['attachment'] );\n\n\t\treturn [ 'any' => esc_html__( 'Any', 'rank-math' ) ] + $post_types + [ 'comments' => esc_html( translate( 'Comments' ) ) ]; \/\/ phpcs:ignore\n\t}\n\n\t\/**\n\t * Get business types as choices.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  bool $none Add none option to list.\n\t * @return array\n\t *\/\n\tpublic static function choices_business_types( $none = false ) {\n\t\t$data = apply_filters(\n\t\t\t'rank_math\/json_ld\/business_types',\n\t\t\t[\n\t\t\t\t[\n\t\t\t\t\t'label' => 'Organization',\n\t\t\t\t\t'child' => [\n\t\t\t\t\t\t[ 'label' => 'Airline' ],\n\t\t\t\t\t\t[ 'label' => 'Consortium' ],\n\t\t\t\t\t\t[ 'label' => 'Corporation' ],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'label' => 'Educational Organization',\n\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t[ 'label' => 'College Or University' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Elementary School' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'High School' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Middle School' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Preschool' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'School' ],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[ 'label' => 'Funding Scheme' ],\n\t\t\t\t\t\t[ 'label' => 'Government Organization' ],\n\t\t\t\t\t\t[ 'label' => 'Library System' ],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'label' => 'Local Business',\n\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t[ 'label' => 'Animal Shelter' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Archive Organization' ],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Automotive Business',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Auto Body Shop' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Auto Dealer' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Auto Parts Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Auto Rental' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Auto Repair' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Auto Wash' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Gas Station' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Motorcycle Dealer' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Motorcycle Repair' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[ 'label' => 'Child Care' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Dry Cleaning Or Laundry' ],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Emergency Service',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Fire Station' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Hospital' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Police Station' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[ 'label' => 'Employment Agency' ],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Entertainment Business',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Adult Entertainment' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Amusement Park' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Art Gallery' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Casino' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Comedy Club' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Movie Theater' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Night Club' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Financial Service',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Accounting Service' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Automated Teller' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Bank Or CreditUnion' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Insurance Agency' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Food Establishment',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Bakery' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Bar Or Pub' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Brewery' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Cafe Or CoffeeShop' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Distillery' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Fast Food Restaurant' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'IceCream Shop' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Restaurant' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Winery' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Government Office',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Post Office' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Health And Beauty Business',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Beauty Salon' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Day Spa' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Hair Salon' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Health Club' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Nail Salon' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Tattoo Parlor' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Home And Construction Business',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Electrician' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'General Contractor' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'HVAC Business' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'House Painter' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Locksmith' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Moving Company' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Plumber' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Roofing Contractor' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[ 'label' => 'Internet Cafe' ],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Legal Service',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Notary' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[ 'label' => 'Library' ],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Lodging Business',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Bed And Breakfast' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Campground' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Hostel' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Hotel' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Motel' ],\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t'label' => 'Resort',\n\t\t\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Ski Resort' ],\n\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Medical Business',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Community Health' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Dentist' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Dermatology' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Diet Nutrition' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Emergency' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Geriatric' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Gynecologic' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Medical Clinic' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Optician' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Pharmacy' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Physician' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[ 'label' => 'Professional Service' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Radio Station' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Real Estate Agent' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Recycling Center' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Self Storage' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Shopping Center' ],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Sports Activity Location',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Bowling Alley' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Exercise Gym' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Golf Course' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Health Club' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Public Swimming Pool' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Ski Resort' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Sports Club' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Stadium Or Arena' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Tennis Complex' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t'label' => 'Store',\n\t\t\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Auto Parts Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Bike Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Book Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Clothing Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Computer Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Convenience Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Department Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Electronics Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Florist' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Furniture Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Garden Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Grocery Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Hardware Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Hobby Shop' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Home Goods Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Jewelry Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Liquor Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Mens Clothing Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Mobile Phone Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Movie Rental Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Music Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Office Equipment Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Outlet Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Pawn Shop' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Pet Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Shoe Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Sporting GoodsStore' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Tire Shop' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Toy Store' ],\n\t\t\t\t\t\t\t\t\t\t[ 'label' => 'Wholesale Store' ],\n\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t[ 'label' => 'Television Station' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Tourist Information Center' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Travel Agency' ],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'label' => 'Medical Organization',\n\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t[ 'label' => 'Diagnostic Lab' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Veterinary Care' ],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[ 'label' => 'NGO' ],\n\t\t\t\t\t\t[ 'label' => 'News Media Organization' ],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'label' => 'Performing Group',\n\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t[ 'label' => 'Dance Group' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Music Group' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Theater Group' ],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'label' => 'Project',\n\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t[ 'label' => 'Funding Agency' ],\n\t\t\t\t\t\t\t\t[ 'label' => 'Research Project' ],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t'label' => 'Sports Organization',\n\t\t\t\t\t\t\t'child' => [\n\t\t\t\t\t\t\t\t[ 'label' => 'Sports Team' ],\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t],\n\t\t\t\t\t\t[ 'label' => 'Workers Union' ],\n\t\t\t\t\t],\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t$business = [];\n\t\tif ( $none ) {\n\t\t\t$business['off'] = 'None';\n\t\t}\n\n\t\tforeach ( $data as $item ) {\n\t\t\t$business[ str_replace( ' ', '', $item['label'] ) ] = $item['label'];\n\n\t\t\tif ( isset( $item['child'] ) ) {\n\t\t\t\tself::indent_child_elements( $business, $item['child'] );\n\t\t\t}\n\t\t}\n\n\t\treturn $business;\n\t}\n\n\t\/**\n\t * Get Schema types as choices.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  bool   $none      Add none option to the list.\n\t * @param  string $post_type Post type.\n\t * @return array\n\t *\/\n\tpublic static function choices_rich_snippet_types( $none = false, $post_type = '' ) {\n\t\t$types = [\n\t\t\t'article'    => esc_html__( 'Article', 'rank-math' ),\n\t\t\t'book'       => esc_html__( 'Book', 'rank-math' ),\n\t\t\t'course'     => esc_html__( 'Course', 'rank-math' ),\n\t\t\t'event'      => esc_html__( 'Event', 'rank-math' ),\n\t\t\t'jobposting' => esc_html__( 'Job Posting', 'rank-math' ),\n\t\t\t'music'      => esc_html__( 'Music', 'rank-math' ),\n\t\t\t'product'    => esc_html__( 'Product', 'rank-math' ),\n\t\t\t'recipe'     => esc_html__( 'Recipe', 'rank-math' ),\n\t\t\t'restaurant' => esc_html__( 'Restaurant', 'rank-math' ),\n\t\t\t'video'      => esc_html__( 'Video', 'rank-math' ),\n\t\t\t'person'     => esc_html__( 'Person', 'rank-math' ),\n\t\t\t'service'    => esc_html__( 'Service', 'rank-math' ),\n\t\t\t'software'   => esc_html__( 'Software Application', 'rank-math' ),\n\t\t];\n\n\t\tif ( ! empty( self::get_review_posts() ) ) {\n\t\t\t$types['review'] = esc_html__( 'Review (Unsupported)', 'rank-math' );\n\t\t}\n\n\t\tif ( is_string( $none ) ) {\n\t\t\t$types = [ 'off' => $none ] + $types;\n\t\t}\n\n\t\t\/**\n\t\t * Allow developers to add\/remove Schema type choices.\n\t\t *\n\t\t * @param array  $types     Schema types.\n\t\t * @param string $post_type Post type.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/settings\/snippet\/types', $types, $post_type );\n\t}\n\n\t\/**\n\t * Get the redirection types.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_redirection_types() {\n\t\treturn [\n\t\t\t'301' => esc_html__( '301 Permanent Move', 'rank-math' ),\n\t\t\t'302' => esc_html__( '302 Temporary Move', 'rank-math' ),\n\t\t\t'307' => esc_html__( '307 Temporary Redirect', 'rank-math' ),\n\t\t\t'410' => esc_html__( '410 Content Deleted', 'rank-math' ),\n\t\t\t'451' => esc_html__( '451 Content Unavailable for Legal Reasons', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get comparison types.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_comparison_types() {\n\t\treturn [\n\t\t\t'exact'    => esc_html__( 'Exact', 'rank-math' ),\n\t\t\t'contains' => esc_html__( 'Contains', 'rank-math' ),\n\t\t\t'start'    => esc_html__( 'Starts With', 'rank-math' ),\n\t\t\t'end'      => esc_html__( 'End With', 'rank-math' ),\n\t\t\t'regex'    => esc_html__( 'Regex', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Get Post type icons.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_post_type_icons() {\n\t\t\/**\n\t\t * Allow developer to change post types icons.\n\t\t *\n\t\t * @param array $icons Array of available icons.\n\t\t *\/\n\t\treturn apply_filters(\n\t\t\t'rank_math\/post_type_icons',\n\t\t\t[\n\t\t\t\t'default'    => 'rm-icon rm-icon-post',\n\t\t\t\t'post'       => 'rm-icon rm-icon-post',\n\t\t\t\t'page'       => 'rm-icon rm-icon-page',\n\t\t\t\t'attachment' => 'rm-icon rm-icon-attachment',\n\t\t\t\t'product'    => 'rm-icon rm-icon-cart',\n\t\t\t\t'web-story'  => 'rm-icon rm-icon-stories',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Get Taxonomy icons.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_taxonomy_icons() {\n\t\t\/**\n\t\t * Allow developer to change taxonomies icons.\n\t\t *\n\t\t * @param array $icons Array of available icons.\n\t\t *\/\n\t\treturn apply_filters(\n\t\t\t'rank_math\/taxonomy_icons',\n\t\t\t[\n\t\t\t\t'default'     => 'rm-icon rm-icon-category',\n\t\t\t\t'category'    => 'rm-icon rm-icon-category',\n\t\t\t\t'post_tag'    => 'rm-icon rm-icon-tag',\n\t\t\t\t'product_cat' => 'rm-icon rm-icon-category',\n\t\t\t\t'product_tag' => 'rm-icon rm-icon-tag',\n\t\t\t\t'post_format' => 'rm-icon rm-icon-post-format',\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Function to get posts having review schema type selected.\n\t *\/\n\tpublic static function get_review_posts() {\n\t\tglobal $wpdb;\n\n\t\tstatic $posts = null;\n\n\t\tif ( true === boolval( get_option( 'rank_math_review_posts_converted' ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! is_null( $posts ) ) {\n\t\t\treturn $posts;\n\t\t}\n\n\t\t$posts = get_transient( 'rank_math_any_review_posts' );\n\t\tif ( false !== $posts ) {\n\t\t\treturn $posts;\n\t\t}\n\n\t\t$meta_query = new \\WP_Meta_Query(\n\t\t\t[\n\t\t\t\t'relation' => 'AND',\n\t\t\t\t[\n\t\t\t\t\t'key'   => 'rank_math_rich_snippet',\n\t\t\t\t\t'value' => 'review',\n\t\t\t\t],\n\t\t\t]\n\t\t);\n\n\t\t$meta_query = $meta_query->get_sql( 'post', $wpdb->posts, 'ID' );\n\t\t$posts      = DB_Helper::get_col( \"SELECT {$wpdb->posts}.ID FROM $wpdb->posts {$meta_query['join']} WHERE 1=1 {$meta_query['where']} AND ({$wpdb->posts}.post_status = 'publish')\" );\n\n\t\tif ( 0 === count( $posts ) ) {\n\t\t\tupdate_option( 'rank_math_review_posts_converted', true );\n\t\t\treturn false;\n\t\t}\n\n\t\tset_transient( 'rank_math_any_review_posts', $posts, DAY_IN_SECONDS );\n\n\t\treturn $posts;\n\t}\n\n\t\/**\n\t * Phones types for schema.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_phone_types() {\n\t\treturn [\n\t\t\t'customer support'    => esc_html__( 'Customer Service', 'rank-math' ),\n\t\t\t'technical support'   => esc_html__( 'Technical Support', 'rank-math' ),\n\t\t\t'billing support'     => esc_html__( 'Billing Support', 'rank-math' ),\n\t\t\t'bill payment'        => esc_html__( 'Bill Payment', 'rank-math' ),\n\t\t\t'sales'               => esc_html__( 'Sales', 'rank-math' ),\n\t\t\t'reservations'        => esc_html__( 'Reservations', 'rank-math' ),\n\t\t\t'credit card support' => esc_html__( 'Credit Card Support', 'rank-math' ),\n\t\t\t'emergency'           => esc_html__( 'Emergency', 'rank-math' ),\n\t\t\t'baggage tracking'    => esc_html__( 'Baggage Tracking', 'rank-math' ),\n\t\t\t'roadside assistance' => esc_html__( 'Roadside Assistance', 'rank-math' ),\n\t\t\t'package tracking'    => esc_html__( 'Package Tracking', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Additional Organization details for schema.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_additional_organization_info() {\n\t\treturn [\n\t\t\t'legalName'            => esc_html__( 'Legal Name', 'rank-math' ),\n\t\t\t'foundingDate'         => esc_html__( 'Founding Date', 'rank-math' ),\n\t\t\t'iso6523Code'          => esc_html__( 'ISO 6523 Code', 'rank-math' ),\n\t\t\t'duns'                 => esc_html__( 'DUNS', 'rank-math' ),\n\t\t\t'leiCode'              => esc_html__( 'LEI Code', 'rank-math' ),\n\t\t\t'naics'                => esc_html__( 'NAICS Code', 'rank-math' ),\n\t\t\t'globalLocationNumber' => esc_html__( 'Global Location Number', 'rank-math' ),\n\t\t\t'vatID'                => esc_html__( 'VAT ID', 'rank-math' ),\n\t\t\t'taxID'                => esc_html__( 'Tax ID', 'rank-math' ),\n\t\t\t'numberOfEmployees'    => esc_html__( 'Number of Employees', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Function to indent child business types..\n\t *\n\t * @param array $business Business types array.\n\t * @param array $item     Array of child data.\n\t * @param int   $level    Nesting level of the current iteration.\n\t *\/\n\tprivate static function indent_child_elements( &$business, $item, $level = 1 ) {\n\t\tforeach ( $item as $child ) {\n\t\t\t$business[ str_replace( ' ', '', $child['label'] ) ] = str_repeat( '&mdash; ', $level ) . $child['label'];\n\n\t\t\tif ( isset( $child['child'] ) ) {\n\t\t\t\tself::indent_child_elements( $business, $child['child'], ( $level + 1 ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Country.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function choices_contentai_countries() {\n\t\treturn [\n\t\t\t'all'      => esc_html__( 'Worldwide', 'rank-math' ),\n\t\t\t'ar_DZ'    => esc_html__( 'Algeria', 'rank-math' ),\n\t\t\t'es_AR'    => esc_html__( 'Argentina', 'rank-math' ),\n\t\t\t'hy_AM'    => esc_html__( 'Armenia', 'rank-math' ),\n\t\t\t'en_AU'    => esc_html__( 'Australia', 'rank-math' ),\n\t\t\t'de_AT'    => esc_html__( 'Austria', 'rank-math' ),\n\t\t\t'tr_AZ'    => esc_html__( 'Azerbaijan', 'rank-math' ),\n\t\t\t'ar_BH'    => esc_html__( 'Bahrain', 'rank-math' ),\n\t\t\t'en_BD'    => esc_html__( 'Bangladesh', 'rank-math' ),\n\t\t\t'ru_BY'    => esc_html__( 'Belarus', 'rank-math' ),\n\t\t\t'de_BE'    => esc_html__( 'Belgium', 'rank-math' ),\n\t\t\t'es_BO'    => esc_html__( 'Bolivia, Plurinational State Of', 'rank-math' ),\n\t\t\t'pt_BR'    => esc_html__( 'Brazil', 'rank-math' ),\n\t\t\t'bg_BG'    => esc_html__( 'Bulgaria', 'rank-math' ),\n\t\t\t'vi_KH'    => esc_html__( 'Cambodia', 'rank-math' ),\n\t\t\t'en_CA'    => esc_html__( 'Canada', 'rank-math' ),\n\t\t\t'es_CL'    => esc_html__( 'Chile', 'rank-math' ),\n\t\t\t'es_CO'    => esc_html__( 'Colombia', 'rank-math' ),\n\t\t\t'es_CR'    => esc_html__( 'Costa Rica', 'rank-math' ),\n\t\t\t'hr_HR'    => esc_html__( 'Croatia', 'rank-math' ),\n\t\t\t'el_CY'    => esc_html__( 'Cyprus', 'rank-math' ),\n\t\t\t'cs_CZ'    => esc_html__( 'Czechia', 'rank-math' ),\n\t\t\t'da_DK'    => esc_html__( 'Denmark', 'rank-math' ),\n\t\t\t'es_EC'    => esc_html__( 'Ecuador', 'rank-math' ),\n\t\t\t'ar_EG'    => esc_html__( 'Egypt', 'rank-math' ),\n\t\t\t'es_SV'    => esc_html__( 'El Salvador', 'rank-math' ),\n\t\t\t'et_EE'    => esc_html__( 'Estonia', 'rank-math' ),\n\t\t\t'fi_FI'    => esc_html__( 'Finland', 'rank-math' ),\n\t\t\t'fr_FR'    => esc_html__( 'France', 'rank-math' ),\n\t\t\t'de_DE'    => esc_html__( 'Germany', 'rank-math' ),\n\t\t\t'en_GH'    => esc_html__( 'Ghana', 'rank-math' ),\n\t\t\t'el_GR'    => esc_html__( 'Greece', 'rank-math' ),\n\t\t\t'es_GT'    => esc_html__( 'Guatemala', 'rank-math' ),\n\t\t\t'en_HK'    => esc_html__( 'Hong Kong', 'rank-math' ),\n\t\t\t'hu_HU'    => esc_html__( 'Hungary', 'rank-math' ),\n\t\t\t'hi_IN'    => esc_html__( 'India', 'rank-math' ),\n\t\t\t'id_ID'    => esc_html__( 'Indonesia', 'rank-math' ),\n\t\t\t'en_IE'    => esc_html__( 'Ireland', 'rank-math' ),\n\t\t\t'iw_IL'    => esc_html__( 'Israel', 'rank-math' ),\n\t\t\t'it_IT'    => esc_html__( 'Italy', 'rank-math' ),\n\t\t\t'ja_JP'    => esc_html__( 'Japan', 'rank-math' ),\n\t\t\t'ar_JO'    => esc_html__( 'Jordan', 'rank-math' ),\n\t\t\t'ru_KZ'    => esc_html__( 'Kazakhstan', 'rank-math' ),\n\t\t\t'en_KE'    => esc_html__( 'Kenya', 'rank-math' ),\n\t\t\t'ko_KR'    => esc_html__( 'Korea, Republic Of', 'rank-math' ),\n\t\t\t'lv_LV'    => esc_html__( 'Latvia', 'rank-math' ),\n\t\t\t'lt_LT'    => esc_html__( 'Lithuania', 'rank-math' ),\n\t\t\t'tr_MK'    => esc_html__( 'Macedonia, The Former Yugoslav Republic Of', 'rank-math' ),\n\t\t\t'en_MY'    => esc_html__( 'Malaysia', 'rank-math' ),\n\t\t\t'en_MT'    => esc_html__( 'Malta', 'rank-math' ),\n\t\t\t'es_MX'    => esc_html__( 'Mexico', 'rank-math' ),\n\t\t\t'ar_MA'    => esc_html__( 'Morocco', 'rank-math' ),\n\t\t\t'mnw_MM'   => esc_html__( 'Myanmar', 'rank-math' ),\n\t\t\t'nl_NL'    => esc_html__( 'Netherlands', 'rank-math' ),\n\t\t\t'en_NZ'    => esc_html__( 'New Zealand', 'rank-math' ),\n\t\t\t'es_NI'    => esc_html__( 'Nicaragua', 'rank-math' ),\n\t\t\t'en_NG'    => esc_html__( 'Nigeria', 'rank-math' ),\n\t\t\t'no_NO'    => esc_html__( 'Norway', 'rank-math' ),\n\t\t\t'en_PK'    => esc_html__( 'Pakistan', 'rank-math' ),\n\t\t\t'es_PY'    => esc_html__( 'Paraguay', 'rank-math' ),\n\t\t\t'es_PE'    => esc_html__( 'Peru', 'rank-math' ),\n\t\t\t'en_PH'    => esc_html__( 'Philippines', 'rank-math' ),\n\t\t\t'pl_PL'    => esc_html__( 'Poland', 'rank-math' ),\n\t\t\t'pt_PT'    => esc_html__( 'Portugal', 'rank-math' ),\n\t\t\t'ro_RO'    => esc_html__( 'Romania', 'rank-math' ),\n\t\t\t'ru_RU'    => esc_html__( 'Russian Federation', 'rank-math' ),\n\t\t\t'ar_SA'    => esc_html__( 'Saudi Arabia', 'rank-math' ),\n\t\t\t'fr_SN'    => esc_html__( 'Senegal', 'rank-math' ),\n\t\t\t'hr_RS'    => esc_html__( 'Serbia', 'rank-math' ),\n\t\t\t'en_SG'    => esc_html__( 'Singapore', 'rank-math' ),\n\t\t\t'sk_SK'    => esc_html__( 'Slovakia', 'rank-math' ),\n\t\t\t'sl_SI'    => esc_html__( 'Slovenia', 'rank-math' ),\n\t\t\t'en_ZA'    => esc_html__( 'South Africa', 'rank-math' ),\n\t\t\t'es_ES'    => esc_html__( 'Spain', 'rank-math' ),\n\t\t\t'en_LK'    => esc_html__( 'Sri Lanka', 'rank-math' ),\n\t\t\t'sv_SE'    => esc_html__( 'Sweden', 'rank-math' ),\n\t\t\t'de_CH'    => esc_html__( 'Switzerland', 'rank-math' ),\n\t\t\t'zh-TW_TW' => esc_html__( 'Taiwan', 'rank-math' ),\n\t\t\t'th_TH'    => esc_html__( 'Thailand', 'rank-math' ),\n\t\t\t'ar_TN'    => esc_html__( 'Tunisia', 'rank-math' ),\n\t\t\t'tr_TR'    => esc_html__( 'Turkey', 'rank-math' ),\n\t\t\t'ru_UA'    => esc_html__( 'Ukraine', 'rank-math' ),\n\t\t\t'ar_AE'    => esc_html__( 'United Arab Emirates', 'rank-math' ),\n\t\t\t'en_GB'    => esc_html__( 'United Kingdom', 'rank-math' ),\n\t\t\t'en_US'    => esc_html__( 'United States Of America', 'rank-math' ),\n\t\t\t'es_UY'    => esc_html__( 'Uruguay', 'rank-math' ),\n\t\t\t'es_VE'    => esc_html__( 'Venezuela, Bolivarian Republic Of', 'rank-math' ),\n\t\t\t'vi_VN'    => esc_html__( 'Viet Nam', 'rank-math' ),\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-schedule.php","ext":"php","size":5523,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Schedule helpers.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Schedule class.\n *\/\nclass Schedule {\n\n\t\/**\n\t * Schedule a recurring action\n\t *\n\t * @param int    $timestamp When the first instance of the job will run.\n\t * @param int    $interval_in_seconds How long to wait between runs.\n\t * @param string $hook The hook to trigger.\n\t * @param array  $args Arguments to pass when the hook triggers.\n\t * @param string $group The group to assign this job to.\n\t * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n\t * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n\t *\n\t * @return int The action ID. Zero if there was an error scheduling the action.\n\t *\/\n\tpublic static function recurring_action( $timestamp, $interval_in_seconds, $hook, $args = [], $group = '', $unique = false, $priority = 10 ) {\n\t\t$id = as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args, $group, $unique, $priority );\n\n\t\tif ( ! $id ) {\n\t\t\tself::notify(\n\t\t\t\tesc_html__( 'There was an issue scheduling the async action required for Analytics; if the problem persists, please contact our support team.', 'rank-math' ),\n\t\t\t\t'recurring'\n\t\t\t);\n\t\t}\n\n\t\treturn $id;\n\t}\n\n\t\/**\n\t * Schedule an action to run one time\n\t *\n\t * @param int    $timestamp When the job will run.\n\t * @param string $hook The hook to trigger.\n\t * @param array  $args Arguments to pass when the hook triggers.\n\t * @param string $group The group to assign this job to.\n\t * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n\t * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n\t *\n\t * @return int The action ID. Zero if there was an error scheduling the action.\n\t *\/\n\tpublic static function single_action( $timestamp, $hook, $args = [], $group = '', $unique = false, $priority = 10 ) {\n\t\t$id = as_schedule_single_action( $timestamp, $hook, $args, $group, $unique, $priority );\n\n\t\tif ( ! $id ) {\n\t\t\tself::notify(\n\t\t\t\tesc_html__( 'There was an issue scheduling a single action required for Analytics; if the problem persists, please contact our support team.', 'rank-math' ),\n\t\t\t\t'schedule'\n\t\t\t);\n\t\t}\n\n\t\treturn $id;\n\t}\n\n\t\/**\n\t * Cancel the next occurrence of a scheduled action.\n\t *\n\t * While only the next instance of a recurring or cron action is unscheduled by this method, that will also prevent\n\t * all future instances of that recurring or cron action from being run. Recurring and cron actions are scheduled in\n\t * a sequence instead of all being scheduled at once. Each successive occurrence of a recurring action is scheduled\n\t * only after the former action is run. If the next instance is never run, because it's unscheduled by this function,\n\t * then the following instance will never be scheduled (or exist), which is effectively the same as being unscheduled\n\t * by this method also.\n\t *\n\t * @param string $hook The hook that the job will trigger.\n\t * @param array  $args Args that would have been passed to the job.\n\t * @param string $group The group the job is assigned to.\n\t *\n\t * @return int|null The scheduled action ID if a scheduled action was found, or null if no matching action found.\n\t *\/\n\tpublic static function unschedule_action( $hook, $args = [], $group = '' ) {\n\t\t$id = as_unschedule_action( $hook, $args, $group );\n\n\t\tif ( ! $id ) {\n\t\t\tself::notify(\n\t\t\t\tesc_html__( 'There was an issue scheduling the recurring action required for Analytics; if the problem persists, please contact our support team.', 'rank-math' ),\n\t\t\t\t'unschedule'\n\t\t\t);\n\t\t}\n\n\t\treturn $id;\n\t}\n\n\t\/**\n\t * Enqueue an action to run one time, as soon as possible\n\t *\n\t * @param string $hook The hook to trigger.\n\t * @param array  $args Arguments to pass when the hook triggers.\n\t * @param string $group The group to assign this job to.\n\t * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n\t * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n\t *\n\t * @return int The action ID. Zero if there was an error scheduling the action.\n\t *\/\n\tpublic static function async_action( $hook, $args = [], $group = '', $unique = false, $priority = 10 ) {\n\t\t$id = as_enqueue_async_action( $hook, $args, $group, $unique, $priority );\n\n\t\tif ( ! $id ) {\n\t\t\tself::notify(\n\t\t\t\tesc_html__( 'There was an issue unscheduling a background action related to Analytics; if the problem persists, please contact our support team.', 'rank-math' ),\n\t\t\t\t'async'\n\t\t\t);\n\t\t}\n\n\t\treturn $id;\n\t}\n\n\t\/**\n\t * Notify\n\t *\n\t * @param string $message Message to display.\n\t * @param string $type Type of notification.\n\t *\/\n\tpublic static function notify( $message = '', $type = '' ) {\n\t\tHelper::add_notification(\n\t\t\t$message,\n\t\t\t[\n\t\t\t\t'type'   => 'error',\n\t\t\t\t'id'     => 'rank_math_action_scheduler_' . $type,\n\t\t\t\t'screen' => 'rank-math_page_rank-math-analytics',\n\t\t\t]\n\t\t);\n\t\trank_math()->notification->update_storage();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-taxonomy.php","ext":"php","size":5380,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Taxonomy helpers.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Taxonomy class.\n *\/\ntrait Taxonomy {\n\n\t\/**\n\t * Is term indexable.\n\t *\n\t * @param WP_Term $term Term to check.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_term_indexable( $term ) {\n\t\t$robots = self::is_term_meta_indexable( $term );\n\t\tif ( is_bool( $robots ) ) {\n\t\t\treturn $robots;\n\t\t}\n\n\t\t$robots = Helper::get_settings( 'titles.tax_' . $term->taxonomy . '_custom_robots' );\n\t\t$robots = false === $robots ? Helper::get_settings( 'titles.robots_global' ) : Helper::get_settings( 'titles.tax_' . $term->taxonomy . '_robots' );\n\n\t\treturn in_array( 'noindex', (array) $robots, true ) ? false : true;\n\t}\n\n\t\/**\n\t * Is term indexable by meta.\n\t *\n\t * @param WP_Term $term Term to check.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate static function is_term_meta_indexable( $term ) {\n\t\t$robots = Helper::get_term_meta( 'robots', $term, $term->taxonomy );\n\t\tif ( empty( $robots ) || ! is_array( $robots ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( in_array( 'index', $robots, true ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn in_array( 'noindex', $robots, true ) ? false : '';\n\t}\n\n\t\/**\n\t * Check if taxonomy is indexable.\n\t *\n\t * @param string $taxonomy Taxonomy to check.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_taxonomy_indexable( $taxonomy ) {\n\t\tif ( Helper::get_settings( 'titles.tax_' . $taxonomy . '_custom_robots' ) ) {\n\t\t\tif ( in_array( 'noindex', (array) Helper::get_settings( 'titles.tax_' . $taxonomy . '_robots' ), true ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn Helper::get_settings( 'sitemap.tax_' . $taxonomy . '_sitemap' );\n\t}\n\n\t\/**\n\t * Get the taxonomies that are public and not set to noindex.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array All the accessible taxonomies.\n\t *\/\n\tpublic static function get_accessible_taxonomies() {\n\t\tstatic $accessible_taxonomies;\n\n\t\tif ( isset( $accessible_taxonomies ) && did_action( 'wp_loaded' ) ) {\n\t\t\treturn $accessible_taxonomies;\n\t\t}\n\n\t\t$accessible_taxonomies = get_taxonomies( [ 'public' => true ], 'objects' );\n\t\t$accessible_taxonomies = self::filter_exclude_taxonomies( $accessible_taxonomies );\n\n\t\tif ( ! is_array( $accessible_taxonomies ) ) {\n\t\t\t$accessible_taxonomies = [];\n\t\t}\n\n\t\treturn $accessible_taxonomies;\n\t}\n\n\t\/**\n\t * Get accessible taxonomies.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_allowed_taxonomies() {\n\t\tstatic $rank_math_allowed_taxonomies;\n\n\t\tif ( isset( $rank_math_allowed_taxonomies ) ) {\n\t\t\treturn $rank_math_allowed_taxonomies;\n\t\t}\n\n\t\t$rank_math_allowed_taxonomies = [];\n\t\tforeach ( self::get_accessible_taxonomies() as $taxonomy => $object ) {\n\t\t\tif ( false === Helper::get_settings( 'titles.tax_' . $taxonomy . '_add_meta_box' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$rank_math_allowed_taxonomies[] = $taxonomy;\n\t\t}\n\n\t\treturn $rank_math_allowed_taxonomies;\n\t}\n\n\t\/**\n\t * Get taxonomies attached to a post type.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string  $post_type Post type to get taxonomy data for.\n\t * @param string  $output    (Optional) Output type can be `names`, `objects`, `choices`.\n\t * @param boolean $filter    (Optional) Whether to filter taxonomies.\n\t *\n\t * @return boolean|array\n\t *\/\n\tpublic static function get_object_taxonomies( $post_type, $output = 'choices', $filter = true ) {\n\t\tif ( 'names' === $output ) {\n\t\t\treturn get_object_taxonomies( $post_type );\n\t\t}\n\n\t\t$taxonomies = get_object_taxonomies( $post_type, 'objects' );\n\t\t$taxonomies = self::filter_exclude_taxonomies( $taxonomies, $filter );\n\n\t\tif ( 'objects' === $output ) {\n\t\t\treturn $taxonomies;\n\t\t}\n\n\t\treturn empty( $taxonomies ) ? false : [ 'off' => esc_html__( 'None', 'rank-math' ) ] + wp_list_pluck( $taxonomies, 'label', 'name' );\n\t}\n\n\t\/**\n\t * Filter taxonomies using\n\t *        `is_taxonomy_viewable` function\n\t *        'rank_math_excluded_taxonomies' filter\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param array|object $taxonomies Collection of taxonomies to filter.\n\t * @param boolean      $filter     (Optional) Whether to filter taxonomies.\n\t *\n\t * @return array|object\n\t *\/\n\tpublic static function filter_exclude_taxonomies( $taxonomies, $filter = true ) {\n\t\t$taxonomies = $filter ? array_filter( $taxonomies, [ __CLASS__, 'is_taxonomy_viewable' ] ) : $taxonomies;\n\n\t\t\/**\n\t\t * Filter: 'rank_math_excluded_taxonomies' - Allow changing the accessible taxonomies.\n\t\t *\n\t\t * @api array $taxonomies The public taxonomies.\n\t\t *\/\n\t\t$taxonomies = apply_filters( 'rank_math\/excluded_taxonomies', $taxonomies );\n\n\t\treturn $taxonomies;\n\t}\n\n\t\/**\n\t * Determine whether a taxonomy is viewable.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string|WP_Taxonomy $taxonomy Taxonomy name or object.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_taxonomy_viewable( $taxonomy ) {\n\t\tif ( is_scalar( $taxonomy ) ) {\n\t\t\t$taxonomy = get_taxonomy( $taxonomy );\n\t\t\tif ( ! $taxonomy ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tif ( isset( $taxonomy->name ) && 'wp_pattern_category' === $taxonomy->name ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/*\n\t\t * For categories and tags, we check for the 'public' parameter.\n\t\t * For others, we use the 'publicly_queryable' parameter.\n\t\t *\/\n\t\treturn $taxonomy->publicly_queryable || ( $taxonomy->_builtin && $taxonomy->public );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-post-type.php","ext":"php","size":4809,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Post_Type helpers.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Post Type class.\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\ntrait Post_Type {\n\n\t\/**\n\t * Check if post is indexable.\n\t *\n\t * @param int $post_id Post ID to check.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_post_indexable( $post_id ) {\n\t\tif ( true === self::is_post_excluded( $post_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$robots = self::is_post_meta_indexable( $post_id );\n\t\tif ( is_bool( $robots ) ) {\n\t\t\treturn $robots;\n\t\t}\n\n\t\t$post_type = get_post_type( $post_id );\n\t\t$robots    = Helper::get_settings( 'titles.pt_' . $post_type . '_custom_robots' );\n\t\t$robots    = false === $robots ? Helper::get_settings( 'titles.robots_global' ) : Helper::get_settings( 'titles.pt_' . $post_type . '_robots' );\n\n\t\treturn in_array( 'noindex', (array) $robots, true ) ? false : true;\n\t}\n\n\t\/**\n\t * Check if post is indexable by meta.\n\t *\n\t * @param int $post_id Post ID to check.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate static function is_post_meta_indexable( $post_id ) {\n\t\t$robots = Helper::get_post_meta( 'robots', $post_id );\n\t\tif ( empty( $robots ) || ! is_array( $robots ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif ( in_array( 'index', $robots, true ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn in_array( 'noindex', $robots, true ) ? false : '';\n\t}\n\n\t\/**\n\t * Check if post is explicitly excluded.\n\t *\n\t * @param  int $post_id Post ID to check.\n\t * @return bool\n\t *\/\n\tpublic static function is_post_excluded( $post_id ) {\n\t\tstatic $posts_to_exclude;\n\n\t\tif ( ! isset( $posts_to_exclude ) ) {\n\t\t\t$posts_to_exclude = wp_parse_id_list( Helper::get_settings( 'sitemap.exclude_posts' ) );\n\t\t\t$posts_to_exclude = apply_filters( 'rank_math\/sitemap\/posts_to_exclude', $posts_to_exclude );\n\t\t}\n\n\t\treturn in_array( $post_id, $posts_to_exclude, true );\n\t}\n\n\t\/**\n\t * Check if post type is indexable.\n\t *\n\t * @param  string $post_type Post type to check.\n\t * @return bool\n\t *\/\n\tpublic static function is_post_type_indexable( $post_type ) {\n\t\tif ( Helper::get_settings( 'titles.pt_' . $post_type . '_custom_robots' ) ) {\n\t\t\tif ( in_array( 'noindex', (array) Helper::get_settings( 'titles.pt_' . $post_type . '_robots' ), true ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn Helper::get_settings( 'sitemap.pt_' . $post_type . '_sitemap' );\n\t}\n\n\t\/**\n\t * Check if post type is accessible.\n\t *\n\t * @param  string $post_type Post type to check.\n\t * @return bool\n\t *\/\n\tpublic static function is_post_type_accessible( $post_type ) {\n\t\treturn in_array( $post_type, self::get_allowed_post_types(), true );\n\t}\n\n\t\/**\n\t * Get the post type label.\n\t *\n\t * @param  string $post_type Post type name.\n\t * @param  bool   $singular  Get singular label.\n\t * @return string|false\n\t *\/\n\tpublic static function get_post_type_label( $post_type, $singular = false ) {\n\t\t$object = get_post_type_object( $post_type );\n\t\tif ( ! $object ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn ! $singular ? $object->labels->name : $object->labels->singular_name;\n\t}\n\n\t\/**\n\t * Get post types that are public and not set to noindex.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array All the accessible post types.\n\t *\/\n\tpublic static function get_accessible_post_types() {\n\t\tstatic $accessible_post_types;\n\n\t\tif ( isset( $accessible_post_types ) && did_action( 'wp_loaded' ) ) {\n\t\t\treturn $accessible_post_types;\n\t\t}\n\n\t\t$accessible_post_types = get_post_types( [ 'public' => true ] );\n\t\t$accessible_post_types = array_filter( $accessible_post_types, 'is_post_type_viewable' );\n\n\t\t\/**\n\t\t * Changing the list of accessible post types.\n\t\t *\n\t\t * @api array $accessible_post_types The post types.\n\t\t *\/\n\t\t$accessible_post_types = apply_filters( 'rank_math\/excluded_post_types', $accessible_post_types );\n\n\t\tif ( ! is_array( $accessible_post_types ) ) {\n\t\t\t$accessible_post_types = [];\n\t\t}\n\n\t\treturn $accessible_post_types;\n\t}\n\n\t\/**\n\t * Get accessible post types.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_allowed_post_types() {\n\t\tstatic $rank_math_allowed_post_types;\n\n\t\tif ( isset( $rank_math_allowed_post_types ) ) {\n\t\t\treturn $rank_math_allowed_post_types;\n\t\t}\n\n\t\t$rank_math_allowed_post_types = [];\n\t\tforeach ( self::get_accessible_post_types() as $post_type ) {\n\t\t\tif ( false === apply_filters( 'rank_math\/metabox\/add_seo_metabox', Helper::get_settings( 'titles.pt_' . $post_type . '_add_meta_box', 'web-story' !== $post_type ) ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$rank_math_allowed_post_types[] = $post_type;\n\t\t}\n\n\t\treturn $rank_math_allowed_post_types;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-str.php","ext":"php","size":6362,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The String helpers.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\n\/**\n * Str class.\n *\/\nclass Str {\n\n\t\/**\n\t * Validates whether the passed variable is a empty string.\n\t *\n\t * @param mixed $variable The variable to validate.\n\t *\n\t * @return bool Whether or not the passed value is a non-empty string.\n\t *\/\n\tpublic static function is_empty( $variable ) {\n\t\treturn empty( $variable ) || ! is_string( $variable );\n\t}\n\n\t\/**\n\t * Validates whether the passed variable is a non-empty string.\n\t *\n\t * @param mixed $variable The variable to validate.\n\t *\n\t * @return bool Whether or not the passed value is a non-empty string.\n\t *\/\n\tpublic static function is_non_empty( $variable ) {\n\t\treturn is_string( $variable ) && '' !== $variable;\n\t}\n\n\t\/**\n\t * Check if the string contains the given value.\n\t *\n\t * @param string $needle   The sub-string to search for.\n\t * @param string $haystack The string to search.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function contains( $needle, $haystack ) {\n\t\treturn self::is_non_empty( $needle ) ? strpos( $haystack, $needle ) !== false : false;\n\t}\n\n\t\/**\n\t * Check if the string begins with the given value.\n\t *\n\t * @param string $needle   The sub-string to search for.\n\t * @param string $haystack The string to search.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function starts_with( $needle, $haystack ) {\n\t\treturn '' === $needle || substr( $haystack, 0, strlen( $needle ) ) === (string) $needle;\n\t}\n\n\t\/**\n\t * Check if the string end with the given value.\n\t *\n\t * @param string $needle   The sub-string to search for.\n\t * @param string $haystack The string to search.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function ends_with( $needle, $haystack ) {\n\t\treturn '' === $needle || substr( $haystack, -strlen( $needle ) ) === (string) $needle;\n\t}\n\n\t\/**\n\t * Check the string for desired comparison.\n\t *\n\t * @param string $needle     The sub-string to search for.\n\t * @param string $haystack   The string to search.\n\t * @param string $comparison The type of comparison.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function comparison( $needle, $haystack, $comparison = '' ) {\n\n\t\t$hash = [\n\t\t\t'regex'    => 'preg_match',\n\t\t\t'end'      => [ __CLASS__, 'ends_with' ],\n\t\t\t'start'    => [ __CLASS__, 'starts_with' ],\n\t\t\t'contains' => [ __CLASS__, 'contains' ],\n\t\t];\n\n\t\tif ( $comparison && isset( $hash[ $comparison ] ) ) {\n\t\t\treturn call_user_func( $hash[ $comparison ], $needle, $haystack );\n\t\t}\n\n\t\t\/\/ Exact.\n\t\treturn $needle === $haystack;\n\t}\n\n\t\/**\n\t * Convert string to array with defined seprator.\n\t *\n\t * @param string $str String to convert.\n\t * @param string $sep Seprator.\n\t *\n\t * @return bool|array\n\t *\/\n\tpublic static function to_arr( $str, $sep = ',' ) {\n\t\t$parts = explode( $sep, trim( $str ) );\n\n\t\treturn empty( $parts ) ? false : $parts;\n\t}\n\n\t\/**\n\t * Convert string to array, weed out empty elements and whitespaces.\n\t *\n\t * @param string $str         User-defined list.\n\t * @param string $sep_pattern Separator pattern for regex.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function to_arr_no_empty( $str, $sep_pattern = '\\r\\n|[\\r\\n]' ) {\n\t\t$array = empty( $str ) ? [] : preg_split( '\/' . $sep_pattern . '\/', $str, -1, PREG_SPLIT_NO_EMPTY );\n\t\t$array = array_filter( array_map( 'trim', $array ) );\n\n\t\treturn $array;\n\t}\n\n\t\/**\n\t * This function transforms the php.ini notation for numbers (like '2M') to an integer.\n\t *\n\t * @param string $size The size.\n\t *\n\t * @return int\n\t *\/\n\tpublic static function let_to_num( $size ) {\n\t\t$char = substr( $size, -1 );\n\t\t$ret  = substr( $size, 0, -1 );\n\n\t\t\/\/ @codingStandardsIgnoreStart\n\t\tswitch ( strtoupper( $char ) ) {\n\t\t\tcase 'P':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'T':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'G':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'M':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'K':\n\t\t\t\t$ret *= 1024;\n\t\t}\n\t\t\/\/ @codingStandardsIgnoreEnd\n\n\t\treturn $ret;\n\t}\n\n\t\/**\n\t * Convert a number to K, M, B, etc.\n\t *\n\t * @param int|double $number    Number which to convert to pretty string.\n\t * @param int        $precision Decimal places in the human-readable format.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function human_number( $number, $precision = 1 ) {\n\t\tif ( ! is_numeric( $number ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$negative = '';\n\t\tif ( abs( $number ) != $number ) { \/\/phpcs:ignore -- Loose comparison is needed here due to the negative value.\n\t\t\t$negative = '-';\n\t\t\t$number   = abs( $number );\n\t\t}\n\n\t\tif ( $number < 1000 ) {\n\t\t\treturn $negative ? -1 * $number : $number;\n\t\t}\n\n\t\t$unit  = intval( log( $number, 1000 ) );\n\t\t$units = [ '', 'K', 'M', 'B', 'T', 'Q' ];\n\n\t\tif ( array_key_exists( $unit, $units ) ) {\n\t\t\treturn sprintf( '%s%s%s', $negative, rtrim( number_format( $number \/ pow( 1000, $unit ), $precision ), '.0' ), $units[ $unit ] );\n\t\t}\n\n\t\treturn $number;\n\t}\n\n\t\/**\n\t * Truncate text for given length.\n\t *\n\t * @param {string} $str    Text to truncate.\n\t * @param {number} $length Length to truncate for.\n\t * @param {string} $append Append to the end if string is truncated.\n\t *\n\t * @return {string} Truncated text.\n\t *\/\n\tpublic static function truncate( $str, $length = 110, $append = '' ) {\n\t\t$str     = wp_strip_all_tags( $str, true );\n\t\t$strlen  = mb_strlen( $str );\n\t\t$excerpt = mb_substr( $str, 0, $length );\n\n\t\t\/\/ Remove part of an entity at the end.\n\t\t$excerpt = preg_replace( '\/&[^;\\s]{0,6}$\/', '', $excerpt );\n\t\tif ( $str !== $excerpt ) {\n\t\t\t$strrpos = function_exists( 'mb_strrpos' ) ? 'mb_strrpos' : 'strrpos';\n\t\t\t$excerpt = mb_substr( $str, 0, $strrpos( trim( $excerpt ), ' ' ) );\n\t\t}\n\n\t\tif ( $strlen > $length ) {\n\t\t\t$excerpt .= $append;\n\t\t}\n\n\t\treturn $excerpt;\n\t}\n\n\t\/**\n\t * Multibyte ucwords.\n\t *\n\t * @param string $value String to convert.\n\t *\/\n\tpublic static function mb_ucwords( $value ) {\n\t\tif ( ! function_exists( 'mb_convert_case' ) || ! function_exists( 'mb_detect_encoding' ) || mb_detect_encoding( $value ) !== 'UTF-8' ) {\n\t\t\treturn ucwords( $value );\n\t\t}\n\n\t\t$words   = preg_split( '\/([\\s]+)\/u', $value, -1, PREG_SPLIT_DELIM_CAPTURE );\n\t\t$ucwords = '';\n\t\tforeach ( $words as $word ) {\n\t\t\tif ( is_numeric( $word ) ) {\n\t\t\t\t$ucwords .= $word;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( isset( $word[0] ) ) {\n\t\t\t\t$ucwords .= preg_match( '\/[\\p{L}]\/u', $word[0] ) ? mb_strtoupper( $word[0], 'UTF-8' ) . mb_substr( $word, 1, mb_strlen( $word ), 'UTF-8' ) : $word;\n\t\t\t}\n\t\t}\n\n\t\treturn $ucwords;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-wordpress.php","ext":"php","size":22642,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The WordPress helpers.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Post;\nuse RankMath\\Term;\nuse RankMath\\User;\nuse RankMath\\Helper;\nuse RankMath\\Role_Manager\\Capability_Manager;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Security;\nuse stdClass;\nuse WP_Screen;\nuse WP_Error;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * WordPress class.\n *\/\ntrait WordPress {\n\n\t\/**\n\t * Wraps wp_safe_redirect to add header.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $location The path to redirect to.\n\t * @param int    $status   Status code to use.\n\t *\/\n\tpublic static function redirect( $location, $status = 302 ) {\n\t\twp_safe_redirect( $location, $status, 'Rank Math' );\n\t\texit;\n\t}\n\n\t\/**\n\t * Whether the current user has a specific capability.\n\t *\n\t * @codeCoverageIgnore\n\t * @see current_user_can()\n\t *\n\t * @param  string $capability Capability name.\n\t * @return boolean Whether the current user has the given capability.\n\t *\/\n\tpublic static function has_cap( $capability ) {\n\t\treturn current_user_can( 'rank_math_' . str_replace( '-', '_', $capability ) );\n\t}\n\n\t\/**\n\t * Get post meta value.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  string  $key           Internal key of the value to get (without prefix).\n\t * @param  integer $post_id       Post ID of the post to get the value for.\n\t * @param  string  $default_value Default value to use.\n\t * @return mixed\n\t *\/\n\tpublic static function get_post_meta( $key, $post_id = 0, $default_value = '' ) {\n\t\treturn Post::get_meta( $key, $post_id, $default_value );\n\t}\n\n\t\/**\n\t * Get term meta value.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  string $key           Internal key of the value to get (without prefix).\n\t * @param  mixed  $term          Term to get the meta value for either (string) term name, (int) term ID or (object) term.\n\t * @param  string $taxonomy      Name of the taxonomy to which the term is attached.\n\t * @param  string $default_value Default value to use.\n\t * @return mixed\n\t *\/\n\tpublic static function get_term_meta( $key, $term = 0, $taxonomy = '', $default_value = '' ) {\n\t\treturn Term::get_meta( $key, $term, $taxonomy, $default_value );\n\t}\n\n\t\/**\n\t * Get user meta value.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  string $key           Internal key of the value to get (without prefix).\n\t * @param  mixed  $user          User to get the meta value for either (int) user ID or (object) user.\n\t * @param  string $default_value Default value to use.\n\t * @return mixed\n\t *\/\n\tpublic static function get_user_meta( $key, $user = 0, $default_value = '' ) {\n\t\treturn User::get_meta( $key, $user, $default_value );\n\t}\n\n\t\/**\n\t * Get admin url.\n\t *\n\t * @param  string $page Page id.\n\t * @param  array  $args Pass arguments to query string.\n\t * @return string\n\t *\/\n\tpublic static function get_admin_url( $page = '', $args = [] ) {\n\t\t$page = $page ? 'rank-math-' . $page : 'rank-math';\n\t\t$args = wp_parse_args( $args, [ 'page' => $page ] );\n\n\t\treturn Security::add_query_arg_raw( $args, admin_url( 'admin.php' ) );\n\t}\n\n\t\/**\n\t * Get settings url.\n\t *\n\t * @param string $type Setting type.\n\t * @param string $page Page id.\n\t * @return string\n\t *\/\n\tpublic static function get_settings_url( $type, $page ) {\n\t\t$type = \"options-{$type}\";\n\t\t$page = Helper::is_react_enabled() ? \"&view=$page\" : \"#setting-panel-{$page}\";\n\n\t\treturn self::get_admin_url( $type . $page );\n\t}\n\n\t\/**\n\t * Get Rank Math Connect URL.\n\t *\n\t * @since 1.0.19\n\t * @return string\n\t *\/\n\tpublic static function get_connect_url() {\n\t\t$args = [\n\t\t\t'page' => 'rank-math',\n\t\t\t'view' => 'help',\n\t\t];\n\t\tif ( ! is_multisite() ) {\n\t\t\treturn Security::add_query_arg_raw( $args, admin_url( 'admin.php' ) );\n\t\t}\n\n\t\t\/\/ Makes sure the plugin functions are defined before trying to use them.\n\t\tif ( ! function_exists( 'is_plugin_active_for_network' ) ) {\n\t\t\trequire_once ABSPATH . '\/wp-admin\/includes\/plugin.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\treturn is_plugin_active_for_network( plugin_basename( RANK_MATH_FILE ) ) ?\n\t\t\tSecurity::add_query_arg_raw( $args, network_admin_url( 'admin.php' ) ) :\n\t\t\tSecurity::add_query_arg_raw( $args, admin_url( 'admin.php' ) );\n\t}\n\n\t\/**\n\t * Get Rank Math Dashboard url.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_dashboard_url() {\n\t\t$site_type     = get_transient( '_rank_math_site_type' );\n\t\t$business_type = [ 'news', 'business', 'webshop', 'otherbusiness' ];\n\n\t\tif ( in_array( $site_type, $business_type, true ) ) {\n\t\t\treturn self::get_settings_url( 'titles', 'local' );\n\t\t}\n\t\treturn admin_url( 'admin.php?page=rank-math&view=modules' );\n\t}\n\n\t\/**\n\t * Get active capabilities.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_roles_capabilities() {\n\t\t$data = [];\n\t\t$caps = Capability_Manager::get()->get_capabilities( true );\n\n\t\tforeach ( self::get_roles() as $slug => $role ) {\n\t\t\tself::get_role_capabilities( $slug, $caps, $data );\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get active capabilities for role.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $slug Role slug.\n\t * @param array  $caps Array of capabilities.\n\t * @param array  $data Data instance.\n\t *\/\n\tprivate static function get_role_capabilities( $slug, $caps, &$data ) {\n\t\t$role = get_role( $slug );\n\t\tif ( ! $role ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$slug = esc_attr( $slug );\n\t\tforeach ( $caps as $cap ) {\n\t\t\tif ( $role->has_cap( $cap ) ) {\n\t\t\t\t$data[ $slug ][] = $cap;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Set capabilities to role.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param array $roles Data.\n\t *\/\n\tpublic static function set_capabilities( $roles ) {\n\t\t$caps = Capability_Manager::get()->get_capabilities( true );\n\t\tforeach ( self::get_roles() as $slug => $role ) {\n\t\t\tself::set_role_capabilities( $slug, $caps, $roles );\n\t\t}\n\t}\n\n\t\/**\n\t * Set capabilities for role.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $slug  Role slug.\n\t * @param array  $caps  Array of capabilities.\n\t * @param array  $roles Data.\n\t *\/\n\tprivate static function set_role_capabilities( $slug, $caps, $roles ) {\n\t\t$role = get_role( $slug );\n\t\tif ( ! $role ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$roles[ $slug ] = isset( $roles[ $slug ] ) && is_array( $roles[ $slug ] ) ? array_flip( $roles[ $slug ] ) : [];\n\t\tforeach ( $caps as $cap ) {\n\t\t\t$func = isset( $roles[ $slug ], $roles[ $slug ][ $cap ] ) ? 'add_cap' : 'remove_cap';\n\t\t\t$role->$func( $cap );\n\t\t}\n\t}\n\n\t\/**\n\t * Schedules a rewrite flush to happen.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function schedule_flush_rewrite() {\n\t\tupdate_option( 'rank_math_flush_rewrite', 1 );\n\t}\n\n\t\/**\n\t * Get post thumbnail with fallback as\n\t *     1. Post thumbnail.\n\t *     2. First image in content.\n\t *     3. Facebook image if any\n\t *     4. Twitter image if any.\n\t *     5. Default open graph image set in option panel.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  int|WP_Post  $post_id Post ID or WP_Post object.\n\t * @param  string|array $size    Image size. Accepts any valid image size, or an array of width and height values in pixels.\n\t * @return false|array Returns an array (url, width, height, is_intermediate), or false, if no image is available.\n\t *\/\n\tpublic static function get_thumbnail_with_fallback( $post_id, $size = 'thumbnail' ) {\n\t\tif ( has_post_thumbnail( $post_id ) ) {\n\t\t\t$thumbnail_id = get_post_thumbnail_id( $post_id );\n\t\t\t$image        = (array) wp_get_attachment_image_src( $thumbnail_id, $size );\n\t\t\tif ( ! empty( array_filter( $image ) ) ) {\n\t\t\t\t$image['caption'] = $image ? get_post_meta( $thumbnail_id, '_wp_attachment_image_alt', true ) : '';\n\t\t\t}\n\n\t\t\treturn self::validate_image_data( $image );\n\t\t}\n\n\t\tpreg_match_all( '\/<img.+src=[\\'\"]([^\\'\"]+)[\\'\"].*>\/i', get_the_content(), $matches );\n\t\t$matches = array_filter( $matches );\n\t\tif ( ! empty( $matches ) ) {\n\t\t\treturn [ $matches[1][0], 200, 200 ];\n\t\t}\n\n\t\t$fb_image = Helper::get_post_meta( 'facebook_image_id', $post_id );\n\t\t$tw_image = Helper::get_post_meta( 'twitter_image_id', $post_id, Helper::get_settings( 'titles.open_graph_image_id' ) );\n\t\t$og_image = $fb_image ? $fb_image : $tw_image;\n\t\tif ( ! $og_image ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$image = wp_get_attachment_image_src( $og_image, $size );\n\t\tif ( empty( $image ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$image['caption'] = get_post_meta( $og_image, '_wp_attachment_image_alt', true );\n\t\treturn self::validate_image_data( $image );\n\t}\n\n\t\/**\n\t * Check if plugin is network active\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_plugin_active_for_network() {\n\t\tif ( ! is_multisite() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Makes sure the plugin is defined before trying to use it.\n\t\tif ( ! function_exists( 'is_plugin_active_for_network' ) ) {\n\t\t\trequire_once ABSPATH . '\/wp-admin\/includes\/plugin.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\tif ( ! is_plugin_active_for_network( plugin_basename( RANK_MATH_FILE ) ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Helper function to validate & format ISO 8601 duration.\n\t *\n\t * @param  string $iso8601 Duration which need to be converted to seconds.\n\t * @return string\n\t *\n\t * @since 1.0.21\n\t *\/\n\tpublic static function get_formatted_duration( $iso8601 ) {\n\t\t$end = substr( $iso8601, -1 );\n\t\tif ( ! in_array( $end, [ 'D', 'H', 'M', 'S' ], true ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t\/\/ The format starts with the letter P, for \"period\".\n\t\treturn ( ! Str::starts_with( 'P', $iso8601 ) ) ? 'PT' . $iso8601 : $iso8601;\n\t}\n\n\t\/**\n\t * Get robots default.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_robots_defaults() {\n\t\t$screen = function_exists( 'get_current_screen' ) ? get_current_screen() : new stdClass();\n\t\t$robots = Helper::get_settings( 'titles.robots_global', [] );\n\n\t\tif ( $screen instanceof WP_Screen ) {\n\t\t\tif ( in_array( $screen->base, [ 'post', 'edit' ], true ) && isset( $screen->post_type ) && Helper::get_settings( \"titles.pt_{$screen->post_type}_custom_robots\" ) ) {\n\t\t\t\t$robots = Helper::get_settings( \"titles.pt_{$screen->post_type}_robots\", [] );\n\t\t\t}\n\n\t\t\tif ( in_array( $screen->base, [ 'term', 'edit-tags' ], true ) && isset( $screen->taxonomy ) && Helper::get_settings( \"titles.tax_{$screen->taxonomy}_custom_robots\" ) ) {\n\t\t\t\t$robots = Helper::get_settings( \"titles.tax_{$screen->taxonomy}_robots\", [] );\n\t\t\t}\n\n\t\t\tif ( in_array( $screen->base, [ 'profile', 'user-edit' ], true ) && Helper::get_settings( 'titles.author_custom_robots' ) ) {\n\t\t\t\t$robots = Helper::get_settings( 'titles.author_robots', [] );\n\t\t\t}\n\t\t}\n\n\t\tif ( is_array( $robots ) && ! in_array( 'noindex', $robots, true ) ) {\n\t\t\t$robots[] = 'index';\n\t\t}\n\n\t\treturn $robots;\n\t}\n\n\t\/**\n\t * Get advanced robots default.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_advanced_robots_defaults() {\n\t\t$screen          = function_exists( 'get_current_screen' ) ? get_current_screen() : new stdClass();\n\t\t$advanced_robots = Helper::get_settings( 'titles.advanced_robots_global', [] );\n\n\t\tif ( $screen instanceof WP_Screen ) {\n\n\t\t\tif ( 'post' === $screen->base && Helper::get_settings( \"titles.pt_{$screen->post_type}_custom_robots\" ) ) {\n\t\t\t\t$advanced_robots = Helper::get_settings( \"titles.pt_{$screen->post_type}_advanced_robots\", [] );\n\t\t\t}\n\n\t\t\tif ( 'term' === $screen->base && Helper::get_settings( \"titles.tax_{$screen->taxonomy}_custom_robots\" ) ) {\n\t\t\t\t$advanced_robots = Helper::get_settings( \"titles.tax_{$screen->taxonomy}_advanced_robots\", [] );\n\t\t\t}\n\n\t\t\tif ( in_array( $screen->base, [ 'profile', 'user-edit' ], true ) && Helper::get_settings( 'titles.author_custom_robots' ) ) {\n\t\t\t\t$advanced_robots = Helper::get_settings( 'titles.author_advanced_robots', [] );\n\t\t\t}\n\t\t}\n\n\t\treturn $advanced_robots;\n\t}\n\n\t\/**\n\t * Convert timestamp and ISO to date.\n\t *\n\t * @param string  $value            Value to convert.\n\t * @param boolean $include_timezone Whether to include timezone.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function convert_date( $value, $include_timezone = false ) {\n\t\tif ( Str::contains( 'T', $value ) ) {\n\t\t\t$value = \\strtotime( $value );\n\t\t}\n\n\t\treturn $include_timezone ? date_i18n( 'Y-m-d H:i-T', $value ) : date_i18n( 'Y-m-d H:i', $value );\n\t}\n\n\t\/**\n\t * Helper function to convert ISO 8601 duration to seconds.\n\t * For example \"PT1H12M24S\" becomes 5064.\n\t *\n\t * @param string $iso8601 Duration which need to be converted to seconds.\n\t * @return int\n\t *\/\n\tpublic static function duration_to_seconds( $iso8601 ) {\n\t\t$end = substr( $iso8601, -1 );\n\t\tif ( ! in_array( $end, [ 'D', 'H', 'M', 'S' ], true ) ) {\n\t\t\t$iso8601 = $iso8601 . 'S';\n\t\t}\n\t\t$iso8601 = ! Str::starts_with( 'P', $iso8601 ) ? 'PT' . $iso8601 : $iso8601;\n\n\t\tpreg_match( '\/^P([0-9]+D|)?T?([0-9]+H|)?([0-9]+M|)?([0-9]+S|)?$\/', $iso8601, $matches );\n\t\tif ( empty( $matches ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn array_sum(\n\t\t\t[\n\t\t\t\tabsint( $matches[1] ) * DAY_IN_SECONDS,\n\t\t\t\tabsint( $matches[2] ) * HOUR_IN_SECONDS,\n\t\t\t\tabsint( $matches[3] ) * MINUTE_IN_SECONDS,\n\t\t\t\tabsint( $matches[4] ),\n\t\t\t]\n\t\t);\n\t}\n\n\t\/**\n\t * Id block editor enabled.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_block_editor() {\n\t\t$screen = function_exists( 'get_current_screen' ) ? get_current_screen() : false;\n\n\t\tif ( ! $screen instanceof WP_Screen ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( method_exists( $screen, 'is_block_editor' ) ) {\n\t\t\treturn $screen->is_block_editor();\n\t\t}\n\n\t\tif ( 'post' === $screen->base ) {\n\t\t\treturn self::use_block_editor_for_post_type( $screen->post_type );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Is site editor enabled.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_site_editor() {\n\t\tglobal $pagenow;\n\n\t\treturn $pagenow === 'site-editor.php';\n\t}\n\n\t\/**\n\t * Validate Image data. Remove empty values and add default height and width to image\n\t *\n\t * @param  array $image The Image data.\n\t * @return array Array of image data\n\t *\n\t * @since 1.0.64\n\t *\/\n\tprivate static function validate_image_data( $image ) {\n\t\t$image = array_filter( $image );\n\t\tif ( empty( $image ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$image[1] = isset( $image[1] ) ? $image[1] : 200;\n\t\t$image[2] = isset( $image[2] ) ? $image[2] : 200;\n\n\t\treturn $image;\n\t}\n\n\t\/**\n\t * Return whether a post type is compatible with the block editor.\n\t *\n\t * @param string $post_type The post type.\n\t *\n\t * @return bool Whether the post type can be edited with the block editor.\n\t *\/\n\tprivate static function use_block_editor_for_post_type( $post_type ) {\n\t\tif ( ! post_type_exists( $post_type ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! post_type_supports( $post_type, 'editor' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$post_type_object = get_post_type_object( $post_type );\n\t\tif ( $post_type_object && ! $post_type_object->show_in_rest ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/**\n\t\t * Filter whether a post is able to be edited in the block editor.\n\t\t *\n\t\t * @since 5.0.0\n\t\t *\n\t\t * @param bool   $use_block_editor  Whether the post type can be edited or not. Default true.\n\t\t * @param string $post_type         The post type being checked.\n\t\t *\/\n\t\treturn apply_filters( 'use_block_editor_for_post_type', true, $post_type );\n\t}\n\n\t\/**\n\t * Generate classes.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function classnames() {\n\t\t$args = func_get_args();\n\n\t\t$data = array_reduce(\n\t\t\t$args,\n\t\t\tfunction ( $carry, $arg ) {\n\t\t\t\tif ( is_array( $arg ) ) {\n\t\t\t\t\treturn array_merge( $carry, $arg );\n\t\t\t\t}\n\n\t\t\t\t$carry[] = $arg;\n\t\t\t\treturn $carry;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\n\t\t$classes = array_map(\n\t\t\tfunction ( $key, $value ) {\n\t\t\t\t$condition = $value;\n\t\t\t\t$return    = $key;\n\n\t\t\t\tif ( is_int( $key ) ) {\n\t\t\t\t\t$condition = null;\n\t\t\t\t\t$return    = $value;\n\t\t\t\t}\n\n\t\t\t\t$is_array             = is_array( $return );\n\t\t\t\t$is_object            = is_object( $return );\n\t\t\t\t$is_stringable_type   = ! $is_array && ! $is_object;\n\t\t\t\t$is_stringable_object = $is_object && method_exists( $return, '__toString' );\n\n\t\t\t\tif ( ! $is_stringable_type && ! $is_stringable_object ) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif ( is_null( $condition ) ) {\n\t\t\t\t\treturn $return;\n\t\t\t\t}\n\n\t\t\t\treturn $condition ? $return : null;\n\t\t\t},\n\t\t\tarray_keys( $data ),\n\t\t\tarray_values( $data )\n\t\t);\n\n\t\t$classes = array_filter( $classes );\n\n\t\treturn implode( ' ', $classes );\n\t}\n\n\t\/**\n\t * An helper function get the home_url without the WPML language parameter.\n\t *\n\t * @param string $path   Path relative to the home URL.\n\t * @param string $scheme Scheme to give the home URL context.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_home_url( $path = '', $scheme = null ) {\n\t\tSitepress::get()->remove_home_url_filter();\n\t\t$home_url = home_url( $path, $scheme );\n\t\tSitepress::get()->restore_home_url_filter();\n\n\t\treturn $home_url;\n\t}\n\n\t\/**\n\t * Get roles.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $output How to return roles.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_roles( $output = 'names' ) {\n\t\t$wp_roles = wp_roles();\n\n\t\tif ( 'names' !== $output ) {\n\t\t\treturn $wp_roles->roles;\n\t\t}\n\n\t\treturn $wp_roles->get_names();\n\t}\n\n\t\/**\n\t * Retrieves the sitename.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_site_name() {\n\t\treturn wp_strip_all_tags( get_bloginfo( 'name' ), true );\n\t}\n\n\t\/**\n\t * Get action from request.\n\t *\n\t * @return bool|string\n\t *\/\n\tpublic static function get_request_action() {\n\t\tif ( empty( $_REQUEST['action'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( '-1' === $_REQUEST['action'] && ! empty( $_REQUEST['action2'] ) ) {\n\t\t\t$_REQUEST['action'] = sanitize_key( $_REQUEST['action2'] );\n\t\t}\n\n\t\treturn sanitize_key( $_REQUEST['action'] );\n\t}\n\n\t\/**\n\t * Instantiates the WordPress filesystem for use.\n\t *\n\t * @return object\n\t *\/\n\tpublic static function get_filesystem() {\n\t\tglobal $wp_filesystem;\n\n\t\tif ( empty( $wp_filesystem ) ) {\n\t\t\tglobal $wp_file_descriptions;\n\t\t\trequire_once ABSPATH . '\/wp-admin\/includes\/file.php'; \/\/ @phpstan-ignore-line\n\t\t\tWP_Filesystem();\n\t\t}\n\n\t\treturn $wp_filesystem;\n\t}\n\n\t\/**\n\t * Get current post type.\n\t *\n\t * This function has some fallback strategies to get the current screen post type.\n\t *\n\t * @return string|bool\n\t *\/\n\tpublic static function get_post_type() {\n\t\tglobal $pagenow;\n\n\t\tif ( Helper::is_site_editor() ) {\n\t\t\treturn 'page';\n\t\t}\n\n\t\t$post_type = self::post_type_from_globals();\n\t\tif ( false !== $post_type ) {\n\t\t\treturn $post_type;\n\t\t}\n\n\t\t$post_type = self::post_type_from_request();\n\t\tif ( false !== $post_type ) {\n\t\t\treturn $post_type;\n\t\t}\n\n\t\treturn 'post-new.php' === $pagenow ? 'post' : false;\n\t}\n\n\t\/**\n\t * Get post type from global variables\n\t *\n\t * @return string|bool\n\t *\/\n\tprivate static function post_type_from_globals() {\n\t\tglobal $post, $typenow, $current_screen;\n\n\t\tif ( $post && $post->post_type ) {\n\t\t\treturn $post->post_type;\n\t\t}\n\n\t\tif ( $typenow ) {\n\t\t\treturn $typenow;\n\t\t}\n\n\t\tif ( $current_screen && $current_screen->post_type ) {\n\t\t\treturn $current_screen->post_type;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get post type from request variables\n\t *\n\t * @return string|bool\n\t *\/\n\tprivate static function post_type_from_request() {\n\n\t\tif ( $post_type = Param::request( 'post_type' ) ) { \/\/ phpcs:ignore\n\t\t\treturn sanitize_key( $post_type );\n\t\t}\n\n\t\tif ( $post_id = Param::request( 'post_ID', 0, FILTER_VALIDATE_INT ) ) { \/\/ phpcs:ignore\n\t\t\treturn get_post_type( $post_id );\n\t\t}\n\n\t\t\/\/ @codeCoverageIgnoreStart\n\t\tif ( $post = Param::get( 'post' ) ) { \/\/ phpcs:ignore\n\t\t\treturn get_post_type( $post );\n\t\t}\n\t\t\/\/ @codeCoverageIgnoreEnd\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Strip all shortcodes active or orphan.\n\t *\n\t * @param string $content Content to remove shortcodes from.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function strip_shortcodes( $content ) {\n\t\tif ( ! Str::contains( '[', $content ) ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t\/\/ Remove Caption shortcode.\n\t\t$content = \\preg_replace( '#\\s*\\[caption[^]]*\\].*?\\[\/caption\\]\\s*#is', '', $content );\n\n\t\treturn preg_replace( '~\\[\\\/?.*?\\]~s', '', $content );\n\t}\n\n\t\/**\n\t * Get the current time as a Unix timestamp (seconds since epoch).\n\t *\n\t * @return int The current Unix timestamp.\n\t *\/\n\tpublic static function get_current_time() {\n\t\treturn strtotime( current_time( 'mysql' ) );\n\t}\n\n\t\/**\n\t * Handles the upload process to allow .txt and .json file types in WordPress.\n\t *\n\t * This function hooks into 'upload_mimes' and 'wp_check_filetype_and_ext'\n\t * to permit the upload of plain text (.txt) and JSON (.json) files via the media uploader.\n\t * It ensures the correct MIME types and file extensions are accepted.\n\t *\n\t * @return array|WP_Error Array of upload results, including file URL, path, and type, or error information.\n\t *\/\n\tpublic static function handle_file_upload() {\n\t\t\/\/ Add upload hooks.\n\t\tadd_filter( 'upload_mimes', [ __CLASS__, 'allow_txt_upload' ] );\n\t\tadd_filter( 'wp_check_filetype_and_ext', [ __CLASS__, 'filetype_and_ext' ], 10, 3 );\n\n\t\tif ( isset( $_FILES['import-me'] ) ) {\n\t\t\t\/\/ Do the upload.\n\t\t\tif ( ! function_exists( 'wp_handle_upload' ) ) {\n\t\t\t\t$required_file = ABSPATH . 'wp-admin\/includes\/file.php';\n\t\t\t\tif ( file_exists( $required_file ) ) {\n\t\t\t\t\trequire_once $required_file; \/\/ @phpstan-ignore-line\n\t\t\t\t}\n\t\t\t}\n\t\t\t$file = wp_handle_upload( $_FILES['import-me'], [ 'test_form' => false ] );\n\t\t} else {\n\t\t\t$file = new WP_Error( 'missing_file', __( 'No file selected for upload.', 'rank-math' ) );\n\t\t}\n\n\t\t\/\/ Remove upload hooks.\n\t\tremove_filter( 'upload_mimes', [ __CLASS__, 'allow_txt_upload' ] );\n\t\tremove_filter( 'wp_check_filetype_and_ext', [ __CLASS__, 'filetype_and_ext' ], 10 );\n\n\t\treturn $file;\n\t}\n\n\t\/**\n\t * Allow txt & json file upload.\n\t *\n\t * @param array $types Mime types keyed by the file extension regex corresponding to those types.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function allow_txt_upload( $types ) {\n\t\t$types['json'] = 'application\/json';\n\t\t$types['txt']  = 'text\/plain';\n\n\t\treturn $types;\n\t}\n\n\t\/**\n\t * Filters the \"real\" file type of the given file.\n\t *\n\t * @param array  $types {\n\t *     Values for the extension, mime type, and corrected filename.\n\t *\n\t *     @type string|false $ext             File extension, or false if the file doesn't match a mime type.\n\t *     @type string|false $type            File mime type, or false if the file doesn't match a mime type.\n\t *     @type string|false $proper_filename File name with its correct extension, or false if it cannot be determined.\n\t * }\n\t * @param string $file                      Full path to the file.\n\t * @param string $filename                  The name of the file (may differ from $file due to\n\t *                                                $file being in a tmp directory).\n\t *\n\t * @return array\n\t *\/\n\tpublic static function filetype_and_ext( $types, $file, $filename ) {\n\t\tif ( false !== strpos( $filename, '.json' ) ) {\n\t\t\t$types['ext']  = 'json';\n\t\t\t$types['type'] = 'application\/json';\n\t\t} elseif ( false !== strpos( $filename, '.txt' ) ) {\n\t\t\t$types['ext']  = 'txt';\n\t\t\t$types['type'] = 'text\/plain';\n\t\t}\n\n\t\treturn $types;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-locale.php","ext":"php","size":945,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Locale helpers.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Locale class.\n *\/\nclass Locale {\n\n\t\/**\n\t * Get site language.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_site_language() {\n\t\treturn self::get_language( get_locale() );\n\t}\n\n\t\/**\n\t * Get the language part of a given locale, defaults to english when the $locale is empty.\n\t *\n\t * @param string $locale The locale to get the language of.\n\t *\n\t * @return string The language part of the locale.\n\t *\/\n\tpublic static function get_language( $locale = null ) {\n\t\t$language = 'en';\n\n\t\tif ( empty( $locale ) || ! is_string( $locale ) ) {\n\t\t\treturn $language;\n\t\t}\n\n\t\t$locale_parts = explode( '_', $locale );\n\n\t\tif ( ! empty( $locale_parts[0] ) ) {\n\t\t\t$language = $locale_parts[0];\n\t\t}\n\n\t\treturn $language;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-sitepress.php","ext":"php","size":4014,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Sitepress helpers.\n *\n * @since      1.0.40\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Sitepress class.\n *\/\nclass Sitepress {\n\n\t\/**\n\t * Has filter removed.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate $has_get_category = false;\n\n\t\/**\n\t * Has filter removed.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate $has_get_term = false;\n\n\t\/**\n\t * Has filter removed.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate $has_terms_clauses = false;\n\n\t\/**\n\t * Has filter removed.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate $has_get_terms_args = false;\n\n\t\/**\n\t * Has home_url filter removed.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate $has_home_url = false;\n\n\t\/**\n\t * Main instance\n\t *\n\t * Ensure only one instance is loaded or can be loaded.\n\t *\n\t * @return Sitepress\n\t *\/\n\tpublic static function get() {\n\t\tstatic $instance;\n\n\t\tif ( is_null( $instance ) && ! ( $instance instanceof Sitepress ) ) {\n\t\t\t$instance = new Sitepress();\n\t\t}\n\n\t\treturn $instance;\n\t}\n\n\t\/**\n\t * Remove term filters.\n\t *\/\n\tpublic function remove_term_filters() {\n\t\tif ( ! $this->is_active() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$sitepress = $this->get_var();\n\n\t\t$this->has_get_category   = remove_filter( 'category_link', [ $sitepress, 'category_link_adjust_id' ], 1 );\n\t\t$this->has_get_term       = remove_filter( 'get_term', [ $sitepress, 'get_term_adjust_id' ], 1 );\n\t\t$this->has_terms_clauses  = remove_filter( 'terms_clauses', [ $sitepress, 'terms_clauses' ] );\n\t\t$this->has_get_terms_args = remove_filter( 'get_terms_args', [ $sitepress, 'get_terms_args_filter' ] );\n\t}\n\n\t\/**\n\t * Restore term filters.\n\t *\/\n\tpublic function restore_term_filters() {\n\t\tif ( ! $this->is_active() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$sitepress = $this->get_var();\n\n\t\tif ( $this->has_get_category ) {\n\t\t\t$this->has_get_category = false;\n\t\t\tadd_filter( 'category_link', [ $sitepress, 'category_link_adjust_id' ], 1, 1 );\n\t\t}\n\n\t\tif ( $this->has_get_term ) {\n\t\t\t$this->has_get_term = false;\n\t\t\tadd_filter( 'get_term', [ $sitepress, 'get_term_adjust_id' ], 1, 1 );\n\t\t}\n\n\t\tif ( $this->has_terms_clauses ) {\n\t\t\t$this->has_terms_clauses = false;\n\t\t\tadd_filter( 'terms_clauses', [ $sitepress, 'terms_clauses' ], 10, 3 );\n\t\t}\n\n\t\tif ( $this->has_get_terms_args ) {\n\t\t\t$this->has_get_terms_args = false;\n\t\t\tadd_filter( 'get_terms_args', [ $sitepress, 'get_terms_args_filter' ], 10, 2 );\n\t\t}\n\t}\n\n\t\/**\n\t * Remove home_url filter.\n\t *\/\n\tpublic function remove_home_url_filter() {\n\t\tif ( ! $this->is_active() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tglobal $wpml_url_filters;\n\t\t$this->has_home_url = remove_filter( 'home_url', [ $wpml_url_filters, 'home_url_filter' ], -10 );\n\t}\n\n\t\/**\n\t * Restore home_url filter.\n\t *\/\n\tpublic function restore_home_url_filter() {\n\t\tif ( ! $this->is_active() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $this->has_home_url ) {\n\t\t\tglobal $wpml_url_filters;\n\t\t\t$this->has_home_url = false;\n\t\t\tadd_filter( 'home_url', [ $wpml_url_filters, 'home_url_filter' ], -10, 4 );\n\t\t}\n\t}\n\n\t\/**\n\t * Is plugin active.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic function is_active() {\n\t\treturn isset( $GLOBALS['sitepress'] );\n\t}\n\n\t\/**\n\t * Get sitepress global variable.\n\t *\n\t * @return object|null\n\t *\/\n\tpublic function get_var() {\n\t\treturn ! empty( $GLOBALS['sitepress'] ) ? $GLOBALS['sitepress'] : null;\n\t}\n\n\t\/**\n\t * Delete cached tax permalink.\n\t *\n\t * @param int    $term_id The term ID.\n\t * @param string $taxonomy The taxonomy name.\n\t * @return void\n\t *\/\n\tpublic function delete_cached_tax_permalink( $term_id, $taxonomy ) {\n\t\tif ( ! $this->is_active() ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp_cache_delete(\n\t\t\tmd5( wp_json_encode( [ $term_id, $taxonomy, false ] ) ),\n\t\t\t'icl_tax_permalink_filter'\n\t\t);\n\t}\n\n\t\/**\n\t * Is per domain negotiation type.\n\t *\n\t * @return string\n\t *\/\n\tpublic function is_per_domain() {\n\t\tif ( ! $this->is_active() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$sitepress = $this->get_var();\n\t\t$type      = (int) $sitepress->get_setting( 'language_negotiation_type', 0 );\n\n\t\tif ( absint( $type ) === 2 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-conditional.php","ext":"php","size":10682,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Conditional helpers.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Conditional class.\n *\/\ntrait Conditional {\n\n\t\/**\n\t * Check if whitelabel filter is active.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_whitelabel() {\n\t\t\/**\n\t\t * Enable whitelabel.\n\t\t *\n\t\t * @param bool $whitelabel Enable whitelabel.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/whitelabel', false );\n\t}\n\n\t\/**\n\t * Check if module is active.\n\t *\n\t * @param  string  $id               Module ID.\n\t * @param  boolean $check_registered Whether to check if module is among registered modules or not.\n\t * @return boolean\n\t *\/\n\tpublic static function is_module_active( $id, $check_registered = true ) {\n\t\t$active_modules = get_option( 'rank_math_modules', [] );\n\t\tif ( ! is_array( $active_modules ) || ( $check_registered && ! self::is_plugin_ready() ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn in_array( $id, $active_modules, true ) && ( ! $check_registered || array_key_exists( $id, rank_math()->manager->modules ) );\n\t}\n\n\t\/**\n\t * Check if Rank Math manager is ready.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_plugin_ready() {\n\t\treturn ( isset( rank_math()->manager ) && ! is_null( rank_math()->manager ) );\n\t}\n\n\t\/**\n\t * Checks if the plugin is configured.\n\t *\n\t * @param bool $value If this param is set, the option will be updated.\n\t * @return bool Return the option value if param is not set.\n\t *\/\n\tpublic static function is_configured( $value = null ) {\n\t\t$key = 'rank_math_is_configured';\n\t\tif ( is_null( $value ) ) {\n\t\t\t$value = get_option( $key );\n\t\t\treturn ! empty( $value );\n\t\t}\n\t\tHelper::schedule_flush_rewrite();\n\t\tupdate_option( $key, $value, false );\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Check if the site is connected to the Rank Math API.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_site_connected() {\n\t\t$registered = Admin_Helper::get_registration_data();\n\n\t\treturn false !== $registered && ! empty( $registered['connected'] ) && ! empty( $registered['api_key'] );\n\t}\n\n\t\/**\n\t * Check that the plugin is licensed properly.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_invalid_registration() {\n\t\tif ( defined( 'RANK_MATH_REGISTRATION_SKIP' ) && RANK_MATH_REGISTRATION_SKIP ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$is_skipped = Helper::is_plugin_active_for_network() ? get_blog_option( get_main_site_id(), 'rank_math_registration_skip' ) : get_option( 'rank_math_registration_skip' );\n\t\tif ( true === boolval( $is_skipped ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ! self::is_site_connected();\n\t}\n\n\t\/**\n\t * Check if author archives are indexable.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_author_archive_indexable() {\n\t\tif ( true === Helper::get_settings( 'titles.disable_author_archives' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( Helper::get_settings( 'titles.author_custom_robots' ) && in_array( 'noindex', (array) Helper::get_settings( 'titles.author_robots' ), true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Check if the AMP module is active.\n\t *\n\t * @since 1.0.24\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_amp_active() {\n\t\tif ( ! self::is_module_active( 'amp' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( function_exists( 'ampforwp_get_setting' ) && 'rank_math' === ampforwp_get_setting( 'ampforwp-seo-selection' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Check if editing the file is allowed.\n\t *\n\t * @since 1.0.32\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_edit_allowed() {\n\t\t\/**\n\t\t * Allow editing the robots.txt & htaccess data.\n\t\t *\n\t\t * @param bool $can_edit Can edit the robots & htacess data.\n\t\t *\/\n\t\treturn apply_filters(\n\t\t\t'rank_math\/can_edit_file',\n\t\t\t( ! defined( 'DISALLOW_FILE_EDIT' ) || ! DISALLOW_FILE_EDIT ) &&\n\t\t\t( ! defined( 'DISALLOW_FILE_MODS' ) || ! DISALLOW_FILE_MODS )\n\t\t);\n\t}\n\n\t\/**\n\t * Check whether to show SEO score.\n\t *\n\t * @since 1.0.32\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_score_enabled() {\n\t\t\/**\n\t\t * Enable SEO Score.\n\t\t *\n\t\t * @param bool $score_enabled Enable SEO Score.\n\t\t *\/\n\t\treturn apply_filters( 'rank_math\/show_score', true );\n\t}\n\n\t\/**\n\t * Is on elementor editor.\n\t *\n\t * @since 1.0.37\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_elementor_editor() {\n\t\treturn 'elementor' === Param::get( 'action' );\n\t}\n\n\t\/**\n\t * Is UX Builder (used in Flatsome theme).\n\t *\n\t * @since 1.0.60\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_ux_builder() {\n\t\treturn 'uxbuilder' === Param::get( 'app' ) && ! empty( Param::get( 'type' ) );\n\t}\n\n\t\/**\n\t * Is on Divi frontend editor.\n\t *\n\t * @since 1.0.63\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_divi_frontend_editor() {\n\t\treturn function_exists( 'et_core_is_fb_enabled' ) && et_core_is_fb_enabled();\n\t}\n\n\t\/**\n\t * Get current editor, or false if we're not editing.\n\t *\n\t * @since 1.0.67\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function get_current_editor() {\n\t\tif ( self::is_elementor_editor() ) {\n\t\t\treturn 'elementor';\n\t\t}\n\n\t\tif ( self::is_divi_frontend_editor() ) {\n\t\t\treturn 'divi';\n\t\t}\n\n\t\tif ( self::is_block_editor() && \\rank_math_is_gutenberg() ) {\n\t\t\treturn 'gutenberg';\n\t\t}\n\n\t\tif ( self::is_ux_builder() ) {\n\t\t\treturn 'uxbuilder';\n\t\t}\n\n\t\tif ( Admin_Helper::is_post_edit() ) {\n\t\t\treturn 'classic';\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Is Advanced Mode.\n\t *\n\t * @since 1.0.43\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_advanced_mode() {\n\t\treturn 'advanced' === apply_filters( 'rank_math\/setup_mode', Helper::get_settings( 'general.setup_mode', 'advanced' ) );\n\t}\n\n\t\/**\n\t * Is React Mode.\n\t *\n\t * @since 1.0.250\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_react_enabled() {\n\t\t$is_react_enabled = get_option( 'rank_math_react_settings_ui', 'on' );\n\t\treturn apply_filters( 'rank_math\/is_react_enabled', $is_react_enabled === 'on' );\n\t}\n\n\t\/**\n\t * Is Breadcrumbs Enabled.\n\t *\n\t * @since 1.0.64\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_breadcrumbs_enabled() {\n\t\treturn \\current_theme_supports( 'rank-math-breadcrumbs' ) || Helper::get_settings( 'general.breadcrumbs' );\n\t}\n\n\t\/**\n\t * Is Wizard page.\n\t *\n\t * @since 1.0.64\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_wizard() {\n\t\treturn ( filter_input( INPUT_GET, 'page' ) === 'rank-math-wizard' || filter_input( INPUT_POST, 'action' ) === 'rank_math_save_wizard' );\n\t}\n\n\t\/**\n\t * Is filesystem method direct.\n\t *\n\t * @since 1.0.71.1\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function is_filesystem_direct() {\n\t\tif ( ! function_exists( 'get_filesystem_method' ) ) {\n\t\t\trequire_once ABSPATH . '\/wp-admin\/includes\/file.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\n\t\treturn 'direct' === get_filesystem_method();\n\t}\n\n\t\/**\n\t * Is AJAX request\n\t *\n\t * @return bool Returns true when the page is loaded via ajax.\n\t *\/\n\tpublic static function is_ajax() {\n\t\treturn function_exists( 'wp_doing_ajax' ) ? wp_doing_ajax() : defined( 'DOING_AJAX' ) && DOING_AJAX;\n\t}\n\n\t\/**\n\t * Is CRON request\n\t *\n\t * @return bool Returns true when the page is loaded via cron.\n\t *\/\n\tpublic static function is_cron() {\n\t\treturn function_exists( 'wp_doing_cron' ) ? wp_doing_cron() : defined( 'DOING_CRON' ) && DOING_CRON;\n\t}\n\n\t\/**\n\t * Checks if WP-Cron is enabled and functional.\n\t *\n\t * @return bool True if WP-Cron is usable; false otherwise.\n\t *\/\n\tpublic static function is_cron_enabled() {\n\t\t\/\/ Check if WP-Cron is disabled in the wp-config.php file.\n\t\tif ( defined( 'DISABLE_WP_CRON' ) && DISABLE_WP_CRON ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Early bail if usable cron transient is set to true.\n\t\tif ( get_transient( 'rank_math_wp_cron_usable' ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ Attempt a loopback request to wp-cron.php to check if it is blocked by the server.\n\t\t$response = wp_remote_post(\n\t\t\tsite_url( 'wp-cron.php' ),\n\t\t\t[\n\t\t\t\t'timeout'   => 5,\n\t\t\t\t'blocking'  => true,\n\t\t\t\t'sslverify' => apply_filters( 'https_local_ssl_verify', true ),\n\t\t\t]\n\t\t);\n\n\t\tif ( is_wp_error( $response ) || wp_remote_retrieve_response_code( $response ) !== 200 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tset_transient( 'rank_math_wp_cron_usable', 1, HOUR_IN_SECONDS );\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Is auto-saving\n\t *\n\t * @return bool Returns true when the page is loaded for auto-saving.\n\t *\/\n\tpublic static function is_autosave() {\n\t\treturn defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE;\n\t}\n\n\t\/**\n\t * Is REST request\n\t *\n\t * @link https:\/\/wordpress.stackexchange.com\/questions\/221202\/does-something-like-is-rest-exist\/221289\n\t *\n\t * Case #1: After WP_REST_Request initialisation\n\t * Case #2: Support \"plain\" permalink settings\n\t * Case #3: It can happen that WP_Rewrite is not yet initialized,\n\t *          so do this (wp-settings.php)\n\t * Case #4: URL Path begins with wp-json\/ (your REST prefix)\n\t *          Also supports WP installations in subfolders\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_rest() {\n\t\tglobal $wp_rewrite;\n\n\t\t$prefix = rest_get_url_prefix();\n\t\tif (\n\t\t\t( defined( 'REST_REQUEST' ) && REST_REQUEST ) || \/\/ (#1)\n\t\t\t\/\/ phpcs:ignore= WordPress.Security.ValidatedSanitizedInput, WordPress.Security.NonceVerification -- Nonce verification is not needed here as this is only used to verify the imported file.\n\t\t\t( isset( $_GET['rest_route'] ) && 0 === strpos( trim( $_GET['rest_route'], '\\\\\/' ), $prefix, 0 ) ) \/\/ (#2)\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\t\/\/ (#3)\n\t\tif ( null === $wp_rewrite ) {\n\t\t\t$wp_rewrite = new \\WP_Rewrite();  \/\/phpcs:ignore\n\t\t}\n\n\t\t\/\/ (#4)\n\t\t$rest_url    = wp_parse_url( trailingslashit( rest_url() ) );\n\t\t$current_url = wp_parse_url( add_query_arg( [] ) );\n\n\t\tif ( ! isset( $current_url['path'] ) || ! isset( $rest_url['path'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn 0 === strpos( $current_url['path'], $rest_url['path'], 0 );\n\t}\n\n\t\/**\n\t * Check if the request is heartbeat.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_heartbeat() {\n\t\treturn 'heartbeat' === Param::post( 'action' );\n\t}\n\n\t\/**\n\t * Check if the request is from frontend.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_frontend() {\n\t\treturn ! is_admin();\n\t}\n\n\t\/**\n\t * Is WooCommerce Installed\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_woocommerce_active() {\n\t\t\/\/ @codeCoverageIgnoreStart\n\t\tif ( ! function_exists( 'is_plugin_active' ) ) {\n\t\t\tinclude_once ABSPATH . 'wp-admin\/includes\/plugin.php'; \/\/ @phpstan-ignore-line\n\t\t}\n\t\t\/\/ @codeCoverageIgnoreEnd\n\t\treturn is_plugin_active( 'woocommerce\/woocommerce.php' ) && function_exists( 'is_woocommerce' );\n\t}\n\n\t\/**\n\t * Is EDD Installed\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_edd_active() {\n\t\treturn class_exists( 'Easy_Digital_Downloads' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-analytics.php","ext":"php","size":1947,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Analytics helpers.\n *\n * @since      1.0.86.2\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\nuse RankMath\\Google\\Authentication;\nuse RankMath\\Google\\Console;\nuse RankMath\\Helpers\\Schedule;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Analytics class.\n *\/\ntrait Analytics {\n\n\t\/**\n\t * Can add Analytics Frontend stats.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function can_add_frontend_stats() {\n\t\treturn Authentication::is_authorized() &&\n\t\t\tConsole::is_console_connected() &&\n\t\t\tHelper::has_cap( 'analytics' ) &&\n\t\t\tapply_filters( 'rank_math\/analytics\/frontend_stats', Helper::get_settings( 'general.analytics_stats' ) );\n\t}\n\n\t\/**\n\t * Can add Index Status tab on Analytics page.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function can_add_index_status() {\n\t\t$profile = get_option( 'rank_math_google_analytic_profile', [] );\n\t\tif ( is_array( $profile ) && isset( $profile['enable_index_status'] ) ) {\n\t\t\treturn $profile['enable_index_status'];\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Schedule data fetch.\n\t *\n\t * @param int $fetch_gap The gap in days to fetch data.\n\t *\/\n\tpublic static function schedule_data_fetch( $fetch_gap = 3 ) {\n\t\t$task_name = 'rank_math\/analytics\/data_fetch';\n\n\t\t$action_id = Schedule::unschedule_action( $task_name );\n\n\t\t\/\/ Delete cancel ID.\n\t\tif ( $action_id ) {\n\t\t\tglobal $wpdb;\n\n\t\t\t$wpdb->delete(\n\t\t\t\t$wpdb->actionscheduler_actions,\n\t\t\t\t[\n\t\t\t\t\t'action_id' => $action_id,\n\t\t\t\t]\n\t\t\t);\n\n\t\t\t$wpdb->delete(\n\t\t\t\t$wpdb->actionscheduler_logs,\n\t\t\t\t[\n\t\t\t\t\t'action_id' => $action_id,\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\t$schedule_in_minute = wp_rand( 3, defined( 'RANK_MATH_PRO_FILE' ) ? 1380 : 4320 );\n\t\t$time_to_schedule   = ( strtotime( 'tomorrow' ) + ( $schedule_in_minute * MINUTE_IN_SECONDS ) );\n\n\t\tSchedule::recurring_action(\n\t\t\t$time_to_schedule,\n\t\t\tDAY_IN_SECONDS * $fetch_gap,\n\t\t\t$task_name,\n\t\t\t[],\n\t\t\t'rank-math'\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-schema.php","ext":"php","size":4002,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Schema helpers.\n *\n * @since      1.0.62\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Schema class.\n *\/\ntrait Schema {\n\t\/**\n\t * Function to get Default Schema type by post_type.\n\t *\n\t * @param int     $post_id      Post ID.\n\t * @param boolean $return_valid Whether to return valid schema type which can be used on the frontend.\n\t * @param boolean $sanitize     Return santized Schema type.\n\t *\n\t * @return string Default Schema Type.\n\t *\/\n\tpublic static function get_default_schema_type( $post_id, $return_valid = false, $sanitize = false ) {\n\t\tif ( metadata_exists( 'post', $post_id, 'rank_math_rich_snippet' ) || ! self::can_use_default_schema( $post_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$post_type = get_post_type( $post_id );\n\t\tif ( ! in_array( $post_type, Helper::get_accessible_post_types(), true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$schema = Helper::get_settings( \"titles.pt_{$post_type}_default_rich_snippet\" );\n\t\tif ( ! $schema ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( 'article' === $schema ) {\n\t\t\t\/**\n\t\t\t * Filter: Allow changing the default schema type.\n\t\t\t *\n\t\t\t * @param string $schema    Schema type.\n\t\t\t * @param string $post_type Post type.\n\t\t\t * @param int    $post_id   Post ID.\n\t\t\t *\/\n\t\t\t$schema = apply_filters(\n\t\t\t\t'rank_math\/schema\/default_type',\n\t\t\t\tHelper::get_settings( \"titles.pt_{$post_type}_default_article_type\" ),\n\t\t\t\t$post_type,\n\t\t\t\t$post_id\n\t\t\t);\n\t\t}\n\n\t\tif ( class_exists( 'WooCommerce' ) && 'product' === $post_type ) {\n\t\t\t$schema = 'WooCommerceProduct';\n\t\t}\n\n\t\tif ( class_exists( 'Easy_Digital_Downloads' ) && 'download' === $post_type ) {\n\t\t\t$schema = 'EDDProduct';\n\t\t}\n\n\t\tif ( $return_valid && ! in_array( $schema, [ 'Article', 'NewsArticle', 'BlogPosting', 'WooCommerceProduct', 'EDDProduct' ], true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $sanitize ? self::sanitize_schema_title( $schema ) : $schema;\n\t}\n\n\t\/**\n\t * Sanitize schema title.\n\t *\n\t * @param  string  $schema    Schema.\n\t * @param  boolean $translate Whether to return the translated string.\n\t * @return string\n\t *\/\n\tpublic static function sanitize_schema_title( $schema, $translate = true ) {\n\t\tif ( in_array( $schema, [ 'BlogPosting', 'NewsArticle' ], true ) ) {\n\t\t\treturn $translate ? esc_html__( 'Article', 'rank-math' ) : esc_html( 'Article' );\n\t\t}\n\n\t\tif ( 'WooCommerceProduct' === $schema ) {\n\t\t\treturn $translate ? esc_html__( 'WooCommerce Product', 'rank-math' ) : esc_html( 'WooCommerce Product' );\n\t\t}\n\n\t\tif ( 'EDDProduct' === $schema ) {\n\t\t\treturn $translate ? esc_html__( 'EDD Product', 'rank-math' ) : esc_html( 'EDD Product' );\n\t\t}\n\n\t\tif ( 'VideoObject' === $schema ) {\n\t\t\treturn $translate ? esc_html__( 'Video', 'rank-math' ) : esc_html( 'Video' );\n\t\t}\n\n\t\tif ( 'JobPosting' === $schema ) {\n\t\t\treturn $translate ? esc_html__( 'Job Posting', 'rank-math' ) : esc_html( 'Job Posting' );\n\t\t}\n\n\t\tif ( 'SoftwareApplication' === $schema ) {\n\t\t\treturn $translate ? esc_html__( 'Software Application', 'rank-math' ) : esc_html( 'Software Application' );\n\t\t}\n\n\t\tif ( 'MusicGroup' === $schema || 'MusicAlbum' === $schema ) {\n\t\t\treturn $translate ? esc_html__( 'Music', 'rank-math' ) : esc_html( 'Music' );\n\t\t}\n\n\t\treturn $schema;\n\t}\n\n\n\n\t\/**\n\t * Whether to use default schema.\n\t *\n\t * @param  int $post_id Post ID.\n\t * @return bool\n\t *\/\n\tpublic static function can_use_default_schema( $post_id ) {\n\t\t$pages = array_map(\n\t\t\t'absint',\n\t\t\tarray_filter(\n\t\t\t\t[\n\t\t\t\t\tHelper::get_settings( 'titles.local_seo_about_page' ),\n\t\t\t\t\tHelper::get_settings( 'titles.local_seo_contact_page' ),\n\t\t\t\t\tget_option( 'page_for_posts' ),\n\t\t\t\t]\n\t\t\t)\n\t\t);\n\n\t\treturn ! in_array( (int) $post_id, $pages, true );\n\t}\n\n\t\/**\n\t * Whether to use default Product schema on WooCommerce pages.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function can_use_default_product_schema() {\n\t\treturn apply_filters( 'rank_math\/schema\/use_default_product', true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-editor.php","ext":"php","size":765,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Editor helpers.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Editor class.\n *\/\nclass Editor {\n\t\/**\n\t * Can add editor.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function can_add_editor() {\n\t\treturn Helper::has_cap( 'onpage_general' ) ||\n\t\t\tHelper::has_cap( 'onpage_advanced' ) ||\n\t\t\tHelper::has_cap( 'onpage_snippet' ) ||\n\t\t\tHelper::has_cap( 'onpage_social' );\n\t}\n\n\t\/**\n\t * Add option to Lock Modified date in the editor.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function can_add_lock_modified_date() {\n\t\treturn apply_filters( 'rank_math\/lock_modified_date', true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-db.php","ext":"php","size":6023,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * DB helpers.\n *\n * @since      1.0.9\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Admin\\Database\\Database;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * DB class.\n *\/\nclass DB {\n\n\t\/**\n\t * Check and fix collation of table and columns.\n\t *\n\t * @param string $table         Table name (without prefix).\n\t * @param array  $columns       Columns.\n\t * @param string $set_collation Collation.\n\t *\/\n\tpublic static function check_collation( $table, $columns = 'all', $set_collation = null ) {\n\t\tglobal $wpdb;\n\t\t$changed_collations = 0;\n\n\t\t$prefixed = $wpdb->prefix . $table;\n\n\t\t$sql = \"SHOW TABLES LIKE '{$wpdb->prefix}%'\";\n\t\t$res = self::get_col( $sql );\n\t\tif ( ! in_array( $prefixed, $res, true ) ) {\n\t\t\treturn $changed_collations;\n\t\t}\n\n\t\t\/\/ Collation to set.\n\t\t$collate = $set_collation ? $set_collation : self::get_default_collation();\n\n\t\t$sql = \"SHOW CREATE TABLE `{$prefixed}`\";\n\t\t$res = self::get_row( $sql );\n\n\t\t$table_collate = $res->{'Create Table'};\n\n\t\t\/\/ Determine current collation value.\n\t\t$current_collate = '';\n\t\tif ( preg_match( '\/COLLATE=([a-zA-Z0-9_-]+)\/', $table_collate, $matches ) ) {\n\t\t\t$current_collate = $matches[1];\n\t\t}\n\n\t\t\/\/ If collation is not set or is incorrect, fix it.\n\t\tif ( ! $current_collate || $current_collate !== $collate ) {\n\t\t\t$sql = \"ALTER TABLE `{$prefixed}` COLLATE={$collate}\";\n\t\t\terror_log( sprintf( 'Rank Math: Changing collation of `%1$s` table from %2$s to %3$s. SQL: \"%4$s\"', $prefixed, $current_collate, $collate, $sql ) ); \/\/ phpcs:ignore\n\t\t\tself::query( $sql );\n\t\t\t++$changed_collations;\n\t\t}\n\n\t\t\/\/ Now handle columns if needed.\n\t\tif ( ! $columns ) {\n\t\t\treturn $changed_collations;\n\t\t}\n\n\t\t$sql = \"SHOW FULL COLUMNS FROM {$prefixed}\";\n\t\t$res = self::get_results( $sql, ARRAY_A );\n\t\tif ( ! $res ) {\n\t\t\treturn $changed_collations;\n\t\t}\n\n\t\t$columns = 'all' === $columns ? wp_list_pluck( $res, 'Field' ) : $columns;\n\n\t\tforeach ( $res as $col ) {\n\t\t\tif ( ! in_array( $col['Field'], $columns, true ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$current_collate = $col['Collation'];\n\t\t\tif ( ! $current_collate || $current_collate === $collate ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$null    = 'NO' === $col['Null'] ? 'NOT NULL' : 'NULL';\n\t\t\t$default = ! empty( $col['Default'] ) ? \"DEFAULT '{$col['Default']}'\" : '';\n\n\t\t\t$sql = \"ALTER TABLE `{$prefixed}` MODIFY `{$col['Field']}` {$col['Type']} COLLATE {$collate} {$null} {$default}\";\n\t\t\terror_log( sprintf( 'Rank Math: Changing collation of `%1$s`.`%2$s` column from %3$s to %4$s. SQL: \"%5$s\"', $prefixed, $col['Field'], $current_collate, $collate, $sql ) ); \/\/ phpcs:ignore\n\t\t\tself::query( $sql );\n\t\t\t++$changed_collations;\n\t\t}\n\n\t\treturn $changed_collations;\n\t}\n\n\t\/**\n\t * Get collation of a specific table.\n\t *\n\t * @param string $table Table name.\n\t * @return string\n\t *\/\n\tpublic static function get_table_collation( $table ) {\n\t\tglobal $wpdb;\n\n\t\t$sql = \"SHOW CREATE TABLE `{$wpdb->prefix}{$table}`\";\n\t\t$res = self::get_row( $sql );\n\n\t\tif ( ! $res ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$table_collate = $res->{'Create Table'};\n\n\t\t\/\/ Determine current collation value.\n\t\t$current_collate = '';\n\t\tif ( preg_match( '\/COLLATE=([a-zA-Z0-9_-]+)\/', $table_collate, $matches ) ) {\n\t\t\t$current_collate = $matches[1];\n\t\t}\n\n\t\treturn $current_collate;\n\t}\n\n\t\/**\n\t * Get default collation.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function get_default_collation() {\n\t\tif ( defined( 'DB_COLLATE' ) && DB_COLLATE ) {\n\t\t\treturn DB_COLLATE;\n\t\t}\n\n\t\t$posts_table_collation = self::get_table_collation( 'posts' );\n\t\tif ( $posts_table_collation ) {\n\t\t\treturn $posts_table_collation;\n\t\t}\n\n\t\treturn 'utf8mb4_unicode_ci';\n\t}\n\n\t\/**\n\t * Retrieve a Database instance by table name.\n\t *\n\t * @param string $table_name A Database instance id.\n\t *\n\t * @return Database Database object instance.\n\t *\/\n\tpublic static function query_builder( $table_name = '' ) {\n\t\treturn Database::table( $table_name );\n\t}\n\n\t\/**\n\t * Check if table exists in db or not.\n\t *\n\t * @param string $table_name Table name to check for existance.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function check_table_exists( $table_name ) {\n\t\tglobal $wpdb;\n\n\t\tif ( self::get_var( $wpdb->prepare( 'SHOW TABLES LIKE %s', $wpdb->esc_like( $wpdb->prefix . $table_name ) ) ) === $wpdb->prefix . $table_name ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if table has more rows than X.\n\t *\n\t * @since      1.1.16\n\t *\n\t * @param string $table_name Table name to check.\n\t * @param int    $limit      Number of rows to check against.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function table_size_exceeds( $table_name, $limit ) {\n\t\tglobal $wpdb;\n\n\t\t$check_table = self::query( \"SELECT 1 FROM {$table_name} LIMIT {$limit}, 1\" );\n\n\t\treturn ! empty( $check_table );\n\t}\n\n\t\/**\n\t * Get a single column from the database.\n\t *\n\t * @param string $query  The SQL query to run.\n\t * @param int    $index  The column index.\n\t *\/\n\tpublic static function get_col( $query = '', $index = 0 ) {\n\t\treturn self::query_builder()->get_col( $query, $index );\n\t}\n\n\t\/**\n\t * Get a single row from the database.\n\t *\n\t * @param string $query  The SQL query to run.\n\t * @param string $output The output to retrieve.\n\t * @param int    $index The row index to retrieve.\n\t *\/\n\tpublic static function get_row( $query = '', $output = OBJECT, $index = 0 ) {\n\t\treturn self::query_builder()->get_row( $query, $output, $index );\n\t}\n\n\t\/**\n\t * Get SQL query results.\n\t *\n\t * @param string $query SQL query to run.\n\t *\/\n\tpublic static function query( $query = '' ) {\n\t\treturn self::query_builder()->query( $query );\n\t}\n\n\t\/**\n\t * Get var query results.\n\t *\n\t * @param string $query SQL query to run.\n\t *\/\n\tpublic static function get_var( $query = '' ) {\n\t\treturn self::query_builder()->get_var( $query );\n\t}\n\n\t\/**\n\t * Get SQL query results.\n\t *\n\t * @param string $query  SQL query to run.\n\t * @param string $output Output format.\n\t *\/\n\tpublic static function get_results( $query = '', $output = OBJECT ) {\n\t\treturn self::query_builder()->get_results( $query, $output );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-content-ai.php","ext":"php","size":14035,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Content_AI helpers.\n *\n * @since      1.0.112\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\nuse RankMath\\Admin\\Admin_Helper;\nuse RankMath\\Helpers\\Str;\nuse WP_Error;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Content_AI class.\n *\/\ntrait Content_AI {\n\t\/**\n\t * Content AI Outputs key.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate static $output_key = 'rank_math_content_ai_outputs';\n\n\t\/**\n\t * Content AI Chats key.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate static $chat_key = 'rank_math_content_ai_chats';\n\n\t\/**\n\t * Content AI Recent Prompts key.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate static $recent_prompt_key = 'rank_math_content_ai_recent_prompts';\n\n\t\/**\n\t * Content AI Prompts key.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate static $prompt_key = 'rank_math_content_ai_prompts';\n\n\t\/**\n\t * Content AI Prompts key.\n\t *\n\t * @var boolean\n\t *\/\n\tprivate static $credits_key = 'rank_math_ca_credits';\n\n\t\/**\n\t * Get the Content AI Credits.\n\t *\n\t * @param bool $force_update Whether to send a request to API to get the new Credits value.\n\t * @param bool $return_error Whether to return error when request fails.\n\t *\/\n\tpublic static function get_content_ai_credits( $force_update = false, $return_error = false ) {\n\t\t$registered = Admin_Helper::get_registration_data();\n\t\tif ( empty( $registered ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$transient = 'rank_math_content_ai_requested';\n\t\t$credits   = self::get_credits();\n\t\tif ( ! $force_update || ( get_site_transient( $transient ) ) ) {\n\t\t\treturn $credits;\n\t\t}\n\n\t\tset_site_transient( $transient, true, 20 ); \/\/ Set transient for 20 seconds.\n\n\t\t$args = [\n\t\t\t'username'       => rawurlencode( $registered['username'] ),\n\t\t\t'api_key'        => rawurlencode( $registered['api_key'] ),\n\t\t\t'site_url'       => rawurlencode( self::get_home_url() ),\n\t\t\t'embedWallet'    => 'false',\n\t\t\t'plugin_version' => rawurlencode( rank_math()->version ),\n\t\t];\n\n\t\t$url = add_query_arg(\n\t\t\t$args,\n\t\t\tCONTENT_AI_URL . '\/sites\/wallet'\n\t\t);\n\n\t\t$response = wp_remote_get(\n\t\t\t$url,\n\t\t\t[\n\t\t\t\t'timeout' => 60,\n\t\t\t]\n\t\t);\n\n\t\t$response_code = wp_remote_retrieve_response_code( $response );\n\n\t\t$is_error = self::is_content_ai_error( $response, $response_code );\n\t\tif ( $is_error ) {\n\n\t\t\tif ( in_array( $is_error, [ 'domain_limit_reached', 'account_limit_reached' ], true ) ) {\n\t\t\t\t$credits = 0;\n\t\t\t\tself::update_credits( 0 );\n\t\t\t}\n\n\t\t\treturn ! $return_error ? $credits : [\n\t\t\t\t'credits' => $credits,\n\t\t\t\t'error'   => $is_error,\n\t\t\t];\n\t\t}\n\n\t\t$data = wp_remote_retrieve_body( $response );\n\t\tif ( empty( $data ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$data = json_decode( $data, true );\n\t\t$data = [\n\t\t\t'credits'      => intval( $data['availableCredits'] ?? 0 ),\n\t\t\t'plan'         => $data['plan'] ?? '',\n\t\t\t'refresh_date' => $data['nextResetDate'] ?? '',\n\t\t];\n\n\t\tself::update_credits( $data );\n\n\t\treturn $data['credits'];\n\t}\n\n\t\/**\n\t * Function to get Content AI Credits.\n\t *\n\t * @return int Credits data.\n\t *\/\n\tpublic static function get_credits() {\n\t\t$credits_data = get_option( self::$credits_key, [] );\n\t\treturn ! empty( $credits_data['credits'] ) ? $credits_data['credits'] : 0;\n\t}\n\n\t\/**\n\t * Function to get Content AI Plan.\n\t *\n\t * @return string Content AI Plan.\n\t *\/\n\tpublic static function get_content_ai_plan() {\n\t\t$credits_data = get_option( self::$credits_key, [] );\n\t\treturn ! empty( $credits_data['plan'] ) ? strtolower( $credits_data['plan'] ) : '';\n\t}\n\n\t\/**\n\t * Function to get Content AI Refresh date.\n\t *\n\t * @return int Content AI Refresh date.\n\t *\/\n\tpublic static function get_content_ai_refresh_date() {\n\t\t$credits_data = get_option( self::$credits_key, [] );\n\t\treturn ! empty( $credits_data['refresh_date'] ) ? $credits_data['refresh_date'] : '';\n\t}\n\n\t\/**\n\t * Function to update Content AI Credits.\n\t *\n\t * @param int $credits Credits data.\n\t *\/\n\tpublic static function update_credits( $credits ) {\n\t\tif ( is_array( $credits ) ) {\n\t\t\t$credits['refresh_date'] = ! empty( $credits['refresh_date'] ) && ! is_int( $credits['refresh_date'] ) ? strtotime( $credits['refresh_date'] ) : $credits['refresh_date'];\n\t\t\tupdate_option( self::$credits_key, $credits );\n\t\t\treturn;\n\t\t}\n\n\t\t$credits_data = get_option( self::$credits_key, [] );\n\t\tif ( ! is_array( $credits_data ) ) {\n\t\t\t$credits_data = [ 'credits' => $credits_data ];\n\t\t}\n\n\t\t$credits_data['credits'] = max( 0, $credits );\n\t\tupdate_option( self::$credits_key, $credits_data );\n\t}\n\n\t\/**\n\t * Function to get Default Schema type by post_type.\n\t *\n\t * @return string Default Schema Type.\n\t *\/\n\tpublic static function get_outputs() {\n\t\treturn get_option( self::$output_key, [] );\n\t}\n\n\t\/**\n\t * Function to get Default Schema type by post_type.\n\t *\n\t * @return array Default Schema Type.\n\t *\/\n\tpublic static function get_chats() {\n\t\treturn array_values( get_option( self::$chat_key, [] ) );\n\t}\n\n\t\/**\n\t * Function to get Recent prompts used in Content AI.\n\t *\/\n\tpublic static function get_recent_prompts() {\n\t\treturn get_option( self::$recent_prompt_key, [] );\n\t}\n\n\t\/**\n\t * Function to get prompts used in Content AI.\n\t *\/\n\tpublic static function get_prompts() {\n\t\treturn get_option( self::$prompt_key, [] );\n\t}\n\n\t\/**\n\t * Function to get Default Schema type by post_type.\n\t *\n\t * @return string Default Schema Type.\n\t *\/\n\tpublic static function delete_outputs() {\n\t\treturn delete_option( self::$output_key );\n\t}\n\n\t\/**\n\t * Function to get Default Schema type by post_type.\n\t *\n\t * @param string $endpoint API endpoint.\n\t * @param array  $output   API output.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function update_outputs( $endpoint, $output ) {\n\t\t$outputs = self::get_outputs();\n\n\t\t$output = array_map(\n\t\t\tfunction ( $item ) use ( $endpoint ) {\n\t\t\t\treturn [\n\t\t\t\t\t'key'    => $endpoint,\n\t\t\t\t\t'output' => $item,\n\t\t\t\t];\n\t\t\t},\n\t\t\t$output\n\t\t);\n\n\t\t$output  = isset( $output['faqs'] ) ? [ current( $output ) ] : $output;\n\t\t$outputs = array_merge( $output, $outputs );\n\t\t$outputs = array_slice( $outputs, 0, 50 );\n\t\tupdate_option( self::$output_key, $outputs, false );\n\n\t\treturn self::get_outputs();\n\t}\n\n\t\/**\n\t * Function to get Default Schema type by post_type.\n\t *\n\t * @param array   $answer          API endpoint.\n\t * @param array   $question        API output.\n\t * @param int     $session         Chat session.\n\t * @param boolean $is_new          Whether its a new chat.\n\t * @param boolean $is_regenerating Is regenerating the Chat message.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function update_chats( $answer, $question, $session = 0, $is_new = false, $is_regenerating = false ) {\n\t\t$chats = self::get_chats();\n\n\t\t$data = [\n\t\t\t[\n\t\t\t\t'role'    => 'assistant',\n\t\t\t\t'content' => $answer,\n\t\t\t],\n\t\t\t[\n\t\t\t\t'role'    => 'user',\n\t\t\t\t'content' => $question['content'],\n\t\t\t],\n\t\t];\n\n\t\tif ( $is_new ) {\n\t\t\tarray_unshift( $chats, $data );\n\t\t} else {\n\t\t\tif ( ! isset( $chats[ $session ] ) ) {\n\t\t\t\t$chats[ $session ] = [];\n\t\t\t}\n\n\t\t\tif ( $is_regenerating ) {\n\t\t\t\tunset( $chats[ $session ][0], $chats[ $session ][1] );\n\t\t\t}\n\n\t\t\t$chats[ $session ] = array_merge(\n\t\t\t\t$data,\n\t\t\t\t$chats[ $session ]\n\t\t\t);\n\t\t}\n\n\t\t$chats = array_slice( $chats, 0, 50 );\n\n\t\tupdate_option( self::$chat_key, array_values( $chats ), false );\n\t}\n\n\t\/**\n\t * Function to update the Recent prompts data.\n\t *\n\t * @param string $prompt Prompt name.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function update_recent_prompts( $prompt ) {\n\t\t$prompts = self::get_recent_prompts();\n\t\tarray_unshift( $prompts, $prompt );\n\t\t$prompts = array_slice( array_filter( array_unique( $prompts ) ), 0, 10 );\n\t\treturn update_option( self::$recent_prompt_key, $prompts, false );\n\t}\n\n\t\/**\n\t * Function to save the default prompts data.\n\t *\n\t * @param array $prompts Prompt data.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function save_default_prompts( $prompts ) {\n\t\t$saved_prompts  = self::get_prompts();\n\t\t$custom_prompts = ! is_array( $saved_prompts ) || ! empty( $saved_prompts['error'] ) ? [] : array_map(\n\t\t\tfunction ( $prompt ) {\n\t\t\t\treturn $prompt['PromptCategory'] === 'custom' ? $prompt : false;\n\t\t\t},\n\t\t\t$saved_prompts\n\t\t);\n\n\t\tif ( ! empty( $custom_prompts ) ) {\n\t\t\t$custom_prompts = array_values( array_filter( $custom_prompts ) );\n\t\t}\n\n\t\t$prompts = array_merge( $prompts, $custom_prompts );\n\t\tupdate_option( self::$prompt_key, $prompts );\n\n\t\treturn $prompts;\n\t}\n\n\t\/**\n\t * Function to update the prompts data.\n\t *\n\t * @param string $prompt Prompt name.\n\t *\n\t * @return boolean\n\t *\/\n\tpublic static function update_prompts( $prompt ) {\n\t\t$prompts = self::get_prompts();\n\n\t\t$prompts[] = $prompt;\n\t\tupdate_option( self::$prompt_key, $prompts, false );\n\n\t\treturn self::get_prompts();\n\t}\n\n\t\/**\n\t * Function to delete the prompts.\n\t *\n\t * @param string $prompt_name Prompt name.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function delete_prompt( $prompt_name ) {\n\t\t$prompts = self::get_prompts();\n\t\t$prompts = array_map(\n\t\t\tfunction ( $elem ) use ( $prompt_name ) {\n\t\t\t\treturn $elem['PromptName'] !== $prompt_name ? $elem : false;\n\t\t\t},\n\t\t\t$prompts\n\t\t);\n\n\t\tupdate_option( self::$prompt_key, array_filter( $prompts ), false );\n\n\t\treturn self::get_prompts();\n\t}\n\n\t\/**\n\t * Function to get Default Schema type by post_type.\n\t *\n\t * @param string $index Group index key.\n\t *\n\t * @return string Default Schema Type.\n\t *\/\n\tpublic static function delete_chats( $index ) {\n\t\t$chats = self::get_chats();\n\t\tunset( $chats[ $index ] );\n\n\t\treturn update_option( self::$chat_key, $chats, false );\n\t}\n\n\t\/**\n\t * Function to get default language based on the site language.\n\t *\n\t * @return string Default language.\n\t *\/\n\tpublic static function content_ai_default_language() {\n\t\t$locale    = get_locale();\n\t\t$languages = array_filter(\n\t\t\t[\n\t\t\t\t'Spanish'    => Str::starts_with( 'es_', $locale ),\n\t\t\t\t'French'     => Str::starts_with( 'fr_', $locale ),\n\t\t\t\t'German'     => 'de_DE_formal' === $locale,\n\t\t\t\t'Italian'    => Str::starts_with( 'it_', $locale ),\n\t\t\t\t'Dutch'      => Str::starts_with( 'de_', $locale ),\n\t\t\t\t'Portuguese' => Str::starts_with( 'pt_', $locale ),\n\t\t\t\t'Russian'    => Str::starts_with( 'ru_', $locale ),\n\t\t\t\t'Chinese'    => Str::starts_with( 'zh_', $locale ),\n\t\t\t\t'Korean'     => Str::starts_with( 'ko_', $locale ),\n\t\t\t\t'UK English' => 'en_GB' === $locale,\n\t\t\t\t'Japanese'   => 'ja' === $locale,\n\t\t\t\t'Bulgarian'  => 'bg_BG' === $locale,\n\t\t\t\t'Czech'      => 'cs_CZ' === $locale,\n\t\t\t\t'Danish'     => 'da_DK' === $locale,\n\t\t\t\t'Estonian'   => 'et' === $locale,\n\t\t\t\t'Finnish'    => 'fi' === $locale,\n\t\t\t\t'Greek'      => 'el' === $locale,\n\t\t\t\t'Hebrew'     => 'he_IL' === $locale,\n\t\t\t\t'Hungarian'  => 'hu_HU' === $locale,\n\t\t\t\t'Indonesian' => 'id_ID' === $locale,\n\t\t\t\t'Latvian'    => 'lv' === $locale,\n\t\t\t\t'Lithuanian' => 'lt_LT' === $locale,\n\t\t\t\t'Norwegian'  => in_array( $locale, [ 'nb_NO', 'nn_NO' ], true ),\n\t\t\t\t'Polish'     => 'pl_PL' === $locale,\n\t\t\t\t'Romanian'   => 'ro_RO' === $locale,\n\t\t\t\t'Slovak'     => 'sk_SK' === $locale,\n\t\t\t\t'Slovenian'  => 'sl_SI' === $locale,\n\t\t\t\t'Swedish'    => 'sv_SE' === $locale,\n\t\t\t]\n\t\t);\n\n\t\treturn ! empty( $languages ) ? current( array_keys( $languages ) ) : 'US English';\n\t}\n\n\t\/**\n\t * Function to get different error codes we get from the API\n\t *\n\t * @return array Array of error codes with messages.\n\t *\/\n\tpublic static function get_content_ai_errors() {\n\t\treturn [\n\t\t\t'not_connected'           => esc_html__( 'Please connect your account to use the Content AI.', 'rank-math' ),\n\t\t\t'plugin_update_required'  => esc_html__( 'Please update the Rank Math SEO plugin to the latest version to use this feature.', 'rank-math' ),\n\t\t\t'upgrade_required'        => esc_html__( 'This feature is only available for Content AI subscribers.', 'rank-math' ),\n\t\t\t'rate_limit_exceeded'     => esc_html__( 'Oops! Too many requests in a short time. Please try again after some time.', 'rank-math' ),\n\t\t\t'domain_limit_reached'    => esc_html__( 'You\\'ve used up all available credits for this domain.', 'rank-math' ),\n\t\t\t'account_limit_reached'   => esc_html__( 'You\\'ve used up all available credits from the connected account.', 'rank-math' ),\n\t\t\t'content_filter'          => esc_html__( 'Please revise the entered values in the fields as they are not secure. Make the required adjustments and try again.', 'rank-math' ),\n\t\t\t'api_content_filter'      => esc_html__( 'The output was stopped as it was identified as potentially unsafe by the content filter.', 'rank-math' ),\n\t\t\t'could_not_generate'      => esc_html__( 'Could not generate. Please try again later.', 'rank-math' ),\n\t\t\t'invalid_key'             => esc_html__( 'Invalid API key. Please check your API key or reconnect the site and try again.', 'rank-math' ),\n\t\t\t'invalid_input'           => esc_html__( 'The input provided is invalid. Please check the format and try again.', 'rank-math' ),\n\t\t\t'temporarily_unavailable' => esc_html__( 'The service is temporarily unavailable. Please try again later.', 'rank-math' ),\n\t\t\t'invalid_client'          => esc_html__( 'Unauthorized request. The client credentials are invalid.', 'rank-math' ),\n\t\t\t'no_results'              => esc_html__( 'No results found for the given query. Please modify your request and try again', 'rank-math' ),\n\t\t\t'not_enough_results'      => esc_html__( 'Insufficient results to complete the request. Please refine your query or reduce the requirements.', 'rank-math' ),\n\t\t\t'not_found'               => esc_html__( 'User wallet not found.', 'rank-math' ),\n\t\t];\n\t}\n\n\t\/**\n\t * Function to return the error message.\n\t *\n\t * @param array|WP_Error $response      API response.\n\t * @param int            $response_code API response code.\n\t *\/\n\tpublic static function is_content_ai_error( $response, $response_code ) {\n\t\t$data = wp_remote_retrieve_body( $response );\n\t\t$data = ! empty( $data ) ? json_decode( $data, true ) : [];\n\t\tif ( is_wp_error( $response ) || 200 !== $response_code || empty( $data ) ) {\n\t\t\treturn ! empty( $data['err_key'] ) ? $data['err_key'] : 'could_not_generate';\n\t\t}\n\n\t\treturn ! empty( $data['error'] ) ? $data['error']['code'] : false;\n\t}\n\n\t\/**\n\t * Whether to add Keyword Intent.\n\t *\/\n\tpublic static function should_determine_search_intent() {\n\t\treturn apply_filters( 'rank_math\/determine_search_intent', true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/helpers\/class-param.php","ext":"php","size":2444,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Helper class that provides easy access to accessing params from $_GET, $_POST and $_REQUEST.\n *\n * @since      1.0.0\n * @package    RankMath\n * @subpackage RankMath\\Helpers\n * @author     RankMath <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Helpers;\n\n\/**\n * Param class.\n *\/\nclass Param {\n\n\t\/**\n\t * Get field from query string.\n\t *\n\t * @param string $id            Field id to get.\n\t * @param mixed  $default_value Default value to return if field is not found.\n\t * @param int    $filter        The ID of the filter to apply.\n\t * @param int    $flag          The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function get( $id, $default_value = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn filter_has_var( INPUT_GET, $id ) ? filter_input( INPUT_GET, $id, $filter, $flag ) : $default_value;\n\t}\n\n\t\/**\n\t * Get field from FORM post.\n\t *\n\t * @param string $id            Field id to get.\n\t * @param mixed  $default_value Default value to return if field is not found.\n\t * @param int    $filter        The ID of the filter to apply.\n\t * @param int    $flag          The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function post( $id, $default_value = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn filter_has_var( INPUT_POST, $id ) ? filter_input( INPUT_POST, $id, $filter, $flag ) : $default_value;\n\t}\n\n\t\/**\n\t * Get field from request.\n\t *\n\t * @param string $id            Field id to get.\n\t * @param mixed  $default_value Default value to return if field is not found.\n\t * @param int    $filter        The ID of the filter to apply.\n\t * @param int    $flag          The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function request( $id, $default_value = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn isset( $_REQUEST[ $id ] ) ? filter_var( $_REQUEST[ $id ], $filter, $flag ) : $default_value;\n\t}\n\n\t\/**\n\t * Get field from FORM server.\n\t *\n\t * @param string $id            Field id to get.\n\t * @param mixed  $default_value Default value to return if field is not found.\n\t * @param int    $filter        The ID of the filter to apply.\n\t * @param int    $flag          The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function server( $id, $default_value = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn isset( $_SERVER[ $id ] ) ? filter_var( $_SERVER[ $id ], $filter, $flag ) : $default_value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-term.php","ext":"php","size":3111,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The Term Class\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse WP_Term;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Term class.\n *\/\nclass Term extends Metadata {\n\n\t\/**\n\t * Type of object metadata is for\n\t *\n\t * @var string\n\t *\/\n\tprotected $meta_type = 'term';\n\n\t\/**\n\t * Retrieve Term instance.\n\t *\n\t * @param mixed  $term     Term to get either (string) term name, (int) term ID or (object) term.\n\t * @param string $taxonomy Optional. Limit matched terms to those matching `$taxonomy`. Only used for\n\t *                         disambiguating potentially shared terms.\n\t * @return Term|false Term object, false otherwise.\n\t *\/\n\tpublic static function get( $term = 0, $taxonomy = null ) {\n\t\t$term = self::get_term_id( $term, $taxonomy );\n\t\tif ( empty( $term ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( isset( self::$objects[ $term ] ) && 'term' === self::$objects[ $term ]->meta_type ) {\n\t\t\treturn self::$objects[ $term ];\n\t\t}\n\n\t\t$_term                  = new self( WP_Term::get_instance( $term, $taxonomy ) );\n\t\t$_term->object_id       = $term;\n\t\tself::$objects[ $term ] = $_term;\n\n\t\treturn $_term;\n\t}\n\n\t\/**\n\t * Get term ID.\n\t *\n\t * @param mixed  $term     Term to get either (string) term name, (int) term ID or (object) term.\n\t * @param string $taxonomy Optional. Limit matched terms to those matching `$taxonomy`. Only used for\n\t *                         disambiguating potentially shared terms.\n\t *\/\n\tprivate static function get_term_id( $term = 0, $taxonomy = null ) {\n\t\tif ( is_string( $term ) ) {\n\t\t\t$term = get_term_by( 'slug', $term, $taxonomy );\n\t\t} elseif ( is_int( $term ) && 0 === absint( $term ) ) {\n\t\t\t$term = $GLOBALS['wp_query']->get_queried_object();\n\t\t}\n\n\t\tif ( is_object( $term ) && isset( $term->term_id ) ) {\n\t\t\treturn $term->term_id;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get term meta value.\n\t *\n\t * @param string $key           Meta key.\n\t * @param mixed  $term          Term name, term ID, or term object.\n\t * @param string $taxonomy      Optional. Limit matched terms to those matching `$taxonomy`. Only used for\n\t *                              disambiguating potentially shared terms.\n\t * @param string $default_value Default value to use when metadata does not exists.\n\t * @return mixed\n\t *\/\n\tpublic static function get_meta( $key, $term = 0, $taxonomy = null, $default_value = '' ) {\n\t\t$term = self::get( $term, $taxonomy );\n\n\t\tif ( is_null( $term ) || ! $term->is_found() ) {\n\t\t\treturn $default_value;\n\t\t}\n\n\t\treturn $term->get_metadata( $key, $default_value );\n\t}\n\n\t\/**\n\t * Check if the current query is for multiple terms (e.g. \/term-1,term-2\/).\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function is_multiple_terms_query() {\n\t\tglobal $wp_query;\n\n\t\tif ( ! is_tax() && ! is_tag() && ! is_category() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$term          = get_queried_object();\n\t\t$queried_terms = $wp_query->tax_query->queried_terms;\n\n\t\tif ( empty( $queried_terms[ $term->taxonomy ]['terms'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn count( $queried_terms[ $term->taxonomy ]['terms'] ) > 1;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-settings.php","ext":"php","size":3493,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The settings functionality of the plugin.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Sitepress;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Settings class.\n *\/\nclass Settings {\n\n\t\/**\n\t * Hold option data.\n\t *\n\t * @var array\n\t *\/\n\tprivate $keys = [];\n\n\t\/**\n\t * Options holder.\n\t *\n\t * @var array\n\t *\/\n\tprivate $options = null;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\tadd_action( 'init', [ $this, 'init' ] );\n\n\t\t$this->add_options( 'titles', 'rank-math-options-titles' );\n\t\t$this->add_options( 'general', 'rank-math-options-general' );\n\t\t$this->add_options( 'sitemap', 'rank-math-options-sitemap' );\n\t\t$this->add_options( 'instant_indexing', 'rank-math-options-instant-indexing' );\n\t}\n\n\t\/**\n\t * Init.\n\t *\/\n\tpublic function init() {\n\t\tif ( Sitepress::get()->is_active() ) {\n\t\t\t$this->reset();\n\t\t}\n\t}\n\n\t\/**\n\t * Add new option data.\n\t *\n\t * @param string $id  Unique id.\n\t * @param string $key Option key.\n\t *\/\n\tpublic function add_options( $id, $key ) {\n\t\tif ( ! empty( $id ) && ! empty( $key ) ) {\n\n\t\t\t$this->keys[ $id ] = $key;\n\n\t\t\t\/\/ Lazy-Load options.\n\t\t\tif ( ! is_null( $this->options ) ) {\n\t\t\t\t$options = get_option( $key, [] );\n\t\t\t\t$options = $this->normalize_it( $options );\n\n\t\t\t\t$this->options[ $id ] = $options;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Get settings keys.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_keys() {\n\t\treturn $this->keys;\n\t}\n\n\t\/**\n\t * Get Setting.\n\t *\n\t * @param  string $field_id      ID of field to get.\n\t * @param  mixed  $default_value (Optional) Default value.\n\t * @return mixed\n\t *\/\n\tpublic function get( $field_id = '', $default_value = false ) {\n\t\t$opts = $this->get_options();\n\t\t$ids  = explode( '.', $field_id );\n\n\t\tforeach ( $ids as $id ) {\n\t\t\tif ( is_null( $opts ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$opts = isset( $opts[ $id ] ) ? $opts[ $id ] : null;\n\t\t}\n\n\t\tif ( is_null( $opts ) ) {\n\t\t\treturn $default_value;\n\t\t}\n\n\t\treturn $opts;\n\t}\n\n\t\/**\n\t * Set value.\n\t *\n\t * @param string $group Setting group.\n\t * @param string $id    Setting id.\n\t * @param string $value Setting value.\n\t *\/\n\tpublic function set( $group, $id, $value ) {\n\t\t$this->options[ $group ][ $id ] = $value;\n\t}\n\n\t\/**\n\t * Get all settings.\n\t *\n\t * @return array\n\t *\/\n\tpublic function all() {\n\t\treturn $this->get_options();\n\t}\n\n\t\/**\n\t * Get all settings.\n\t *\n\t * @return array\n\t *\/\n\tpublic function all_raw() {\n\t\t$options = [];\n\t\tif ( ! empty( $this->keys ) ) {\n\t\t\tforeach ( $this->keys as $id => $key ) {\n\t\t\t\t$options[ $id ] = get_option( $key, [] );\n\t\t\t}\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\t\/**\n\t * Reset options\n\t *\/\n\tpublic function reset() {\n\t\t$this->options = null;\n\t\t$this->get_options();\n\t}\n\n\t\/**\n\t * Get options once for use throughout the plugin cycle.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_options() {\n\n\t\tif ( is_null( $this->options ) && ! empty( $this->keys ) ) {\n\n\t\t\t$options = [];\n\t\t\tforeach ( $this->keys as $id => $key ) {\n\t\t\t\t$options[ $id ] = get_option( $key, [] );\n\t\t\t}\n\n\t\t\t$this->options = $this->normalize_it( $options );\n\t\t}\n\n\t\treturn (array) $this->options;\n\t}\n\n\t\/**\n\t * Normalize option data\n\t *\n\t * @param mixed $options Array to normalize.\n\t * @return mixed\n\t *\/\n\tprivate function normalize_it( $options ) {\n\t\tforeach ( (array) $options as $key => $value ) {\n\t\t\t$options[ $key ] = is_array( $value ) ? $this->normalize_it( $value ) : Helper::normalize_data( $value );\n\t\t}\n\n\t\treturn $options;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-thumbnail-overlay.php","ext":"php","size":8081,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Thumbnails with overlays.\n *\n * @since      1.0.82\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Helpers\\Attachment;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Thumbnail_Overlay class.\n *\/\nclass Thumbnail_Overlay {\n\n\tuse Hooker;\n\n\t\/**\n\t * Image module to be used (gd or imagick).\n\t *\n\t * @var string\n\t *\/\n\tprivate $image_module = '';\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->image_module = extension_loaded( 'imagick' ) ? 'imagick' : 'gd';\n\n\t\t$this->action( 'wp_ajax_rank_math_overlay_thumb', 'generate_overlay_thumbnail' );\n\t\t$this->action( 'wp_ajax_nopriv_rank_math_overlay_thumb', 'generate_overlay_thumbnail' );\n\t}\n\n\t\/**\n\t * AJAX function to generate overlay image. Used in social thumbnails.\n\t *\/\n\tpublic function generate_overlay_thumbnail() {\n\t\t$thumbnail_id = Param::request( 'id', 0, FILTER_VALIDATE_INT );\n\t\t$type         = Param::request( 'type', 'play' );\n\t\t$secret       = Param::request( 'hash', '' );\n\t\tif ( ! $secret ) {\n\t\t\t$secret = Param::request( 'secret', '' );\n\t\t}\n\n\t\t$choices = Helper::choices_overlay_images();\n\t\tif ( ! isset( $choices[ $type ] ) ) {\n\t\t\tdie();\n\t\t}\n\t\t$overlay_image = $choices[ $type ]['path'];\n\t\t$image         = Attachment::get_scaled_image_path( $thumbnail_id, 'large' );\n\n\t\tif ( ! $this->is_secret_valid( $thumbnail_id, $type, $secret ) ) {\n\t\t\tdie();\n\t\t}\n\n\t\t\/\/ If 'large' thumbnail is not found, fall back to full size.\n\t\tif ( empty( $image ) ) {\n\t\t\t$image = Attachment::get_scaled_image_path( $thumbnail_id, 'full' );\n\t\t}\n\n\t\t$position = $choices[ $type ]['position'];\n\t\t$this->create_overlay_image( $image, $overlay_image, $position );\n\n\t\tdie();\n\t}\n\n\t\/**\n\t * Calculate margins for a GD resource based on position string.\n\t *\n\t * @param string   $position Position string.\n\t * @param resource $image    GD image resource identifier.\n\t * @param resource $stamp    GD image resource identifier.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_position_margins_gd( $position, $image, $stamp ) {\n\t\t$margins = [\n\t\t\t'middle_center' => [],\n\t\t];\n\n\t\t$margins['middle_center']['top']  = round( abs( imagesy( $image ) - imagesy( $stamp ) ) \/ 2 );\n\t\t$margins['middle_center']['left'] = round( abs( imagesx( $image ) - imagesx( $stamp ) ) \/ 2 );\n\n\t\t$default_margins = $margins['middle_center'];\n\t\t$margins         = $this->do_filter( 'social\/overlay_image_positions', $margins, $image, $stamp, 'gd' );\n\n\t\tif ( ! isset( $margins[ $position ] ) ) {\n\t\t\treturn $default_margins;\n\t\t}\n\n\t\treturn $margins[ $position ];\n\t}\n\n\t\/**\n\t * Calculate margins for an Imagick object based on position string.\n\t *\n\t * @param string $position Position string.\n\t * @param object $image    Imagick object.\n\t * @param object $stamp    Imagick object.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_position_margins_imagick( $position, $image, $stamp ) {\n\t\t$margins = [\n\t\t\t'middle_center' => [],\n\t\t];\n\n\t\t$margins['middle_center']['top']  = round( abs( $image->getImageHeight() - $stamp->getImageHeight() ) \/ 2 );\n\t\t$margins['middle_center']['left'] = round( abs( $image->getImageWidth() - $stamp->getImageWidth() ) \/ 2 );\n\n\t\t$default_margins = $margins['middle_center'];\n\t\t$margins         = $this->do_filter( 'social\/overlay_image_positions', $margins, $image, $stamp, 'imagick' );\n\n\t\tif ( ! isset( $margins[ $position ] ) ) {\n\t\t\treturn $default_margins;\n\t\t}\n\n\t\treturn $margins[ $position ];\n\t}\n\n\t\/**\n\t * Get correct imagecreatef based on image file.\n\t *\n\t * @param string $image_file Image file.\n\t *\n\t * @return string New generated image\n\t *\/\n\tprivate function get_imagecreatefrom_method( $image_file ) {\n\t\t$image_format = pathinfo( $image_file, PATHINFO_EXTENSION );\n\t\tif ( ! in_array( $image_format, [ 'jpg', 'jpeg', 'gif', 'png' ], true ) ) {\n\t\t\treturn '';\n\t\t}\n\t\tif ( 'jpg' === $image_format ) {\n\t\t\t$image_format = 'jpeg';\n\t\t}\n\n\t\treturn 'imagecreatefrom' . $image_format;\n\t}\n\n\t\/**\n\t * Create Overlay Image.\n\t *\n\t * @param string $image_file    The permalink generated for this post by WordPress.\n\t * @param string $overlay_image The ID of the post.\n\t * @param string $position      Image position.\n\t *\/\n\tprivate function create_overlay_image( $image_file, $overlay_image, $position ) {\n\t\twp_raise_memory_limit( 'image' );\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/social\/create_overlay_image' - Change the create_overlay_image arguments.\n\t\t *\/\n\t\t$args = $this->do_filter( 'social\/create_overlay_image', compact( 'image_file', 'overlay_image', 'position' ) );\n\t\textract( $args ); \/\/ phpcs:ignore\n\n\t\tif ( empty( $image_file ) || empty( $overlay_image ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$method = 'generate_image_' . $this->image_module;\n\t\t$this->$method( $image_file, $overlay_image, $position );\n\t\tdie();\n\t}\n\n\t\/**\n\t * Generate image using the GD module.\n\t *\n\t * @param string $image_file    The permalink generated for this post by WordPress.\n\t * @param string $overlay_image The ID of the post.\n\t * @param string $position      Image position.\n\t *\/\n\tprivate function generate_image_gd( $image_file, $overlay_image, $position ) {\n\t\t$imagecreatefrom         = $this->get_imagecreatefrom_method( $image_file );\n\t\t$overlay_imagecreatefrom = $this->get_imagecreatefrom_method( $overlay_image );\n\t\tif ( ! $imagecreatefrom || ! $overlay_imagecreatefrom ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$stamp = $overlay_imagecreatefrom( $overlay_image );\n\t\t$image = $imagecreatefrom( $image_file );\n\n\t\tif ( ! $image || ! $stamp ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$stamp_width  = imagesx( $stamp );\n\t\t$stamp_height = imagesy( $stamp );\n\n\t\t$img_width = imagesx( $image );\n\n\t\tif ( $stamp_width > $img_width ) {\n\t\t\t$stamp = imagescale( $stamp, $img_width );\n\t\t}\n\n\t\t$margins = $this->get_position_margins_gd( $position, $image, $stamp );\n\n\t\t\/\/ Copy the stamp image onto our photo using the margin offsets and the photo width to calculate positioning of the stamp.\n\t\timagecopy( $image, $stamp, $margins['left'], $margins['top'], 0, 0, $stamp_width, $stamp_height );\n\n\t\t\/\/ Output and free memory.\n\t\theader( 'Content-type: image\/png' );\n\t\timagepng( $image );\n\t\timagedestroy( $image );\n\t}\n\n\t\/**\n\t * Generate image using the Imagick module.\n\t *\n\t * @param string $image_file    The permalink generated for this post by WordPress.\n\t * @param string $overlay_image The ID of the post.\n\t * @param string $position      Image position.\n\t *\n\t * @return void\n\t *\/\n\tprivate function generate_image_imagick( $image_file, $overlay_image, $position ) {\n\t\ttry {\n\t\t\t$stamp = new \\Imagick( $overlay_image );\n\t\t\t$image = new \\Imagick( $image_file );\n\n\t\t\tif ( ! $image->valid() || ! $stamp->valid() || ! $image->getImageFormat() || ! $stamp->getImageFormat() ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t\/\/ Select the first frame to handle animated images properly.\n\t\t\tif ( is_callable( [ $stamp, 'setIteratorIndex' ] ) ) {\n\t\t\t\t$stamp->setIteratorIndex( 0 );\n\t\t\t}\n\t\t\tif ( is_callable( [ $image, 'setIteratorIndex' ] ) ) {\n\t\t\t\t$image->setIteratorIndex( 0 );\n\t\t\t}\n\t\t} catch ( \\Exception $e ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$stamp_width = $stamp->getImageWidth();\n\t\t$img_width   = $image->getImageWidth();\n\n\t\tif ( $stamp_width > $img_width ) {\n\t\t\t$stamp->resizeImage( $img_width, 0, \\Imagick::FILTER_LANCZOS, 1 );\n\t\t}\n\n\t\t$margins = $this->get_position_margins_imagick( $position, $image, $stamp );\n\n\t\t\/\/ Copy the stamp image onto our photo using the margin offsets and the photo width to calculate positioning of the stamp.\n\t\t$image->compositeImage( $stamp, \\Imagick::COMPOSITE_OVER, $margins['left'], $margins['top'] );\n\n\t\t\/\/ Output.\n\t\theader( 'Content-type: image\/png' );\n\t\techo $image->getImageBlob(); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\n\t\t\/\/ Free memory.\n\t\t$image->clear();\n\t\t$image->destroy();\n\n\t\t$stamp->clear();\n\t\t$stamp->destroy();\n\t}\n\n\t\/**\n\t * Check if secret key is valid.\n\t *\n\t * @param int    $id     The ID of the attachment.\n\t * @param string $type   Overlay type.\n\t * @param string $secret Secret key.\n\t *\n\t * @return boolean\n\t *\/\n\tprivate function is_secret_valid( $id, $type, $secret ) {\n\t\treturn md5( $id . $type . wp_salt( 'nonce' ) ) === $secret;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-replacer.php","ext":"php","size":8888,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Variable replacement functionality.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Paper\\Paper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Replacer class.\n *\/\nclass Replacer {\n\n\t\/**\n\t * Do not process the same string over and over again.\n\t *\n\t * @var array\n\t *\/\n\tpublic static $replacements_cache = [];\n\n\t\/**\n\t * Non-cacheable replacements.\n\t *\n\t * @var array\n\t *\/\n\tpublic static $non_cacheable_replacements;\n\n\t\/**\n\t * Default post data.\n\t *\n\t * @var array\n\t *\/\n\tpublic static $defaults = [\n\t\t'ID'            => '',\n\t\t'name'          => '',\n\t\t'post_author'   => '',\n\t\t'post_content'  => '',\n\t\t'post_date'     => '',\n\t\t'post_excerpt'  => '',\n\t\t'post_modified' => '',\n\t\t'post_title'    => '',\n\t\t'taxonomy'      => '',\n\t\t'term_id'       => '',\n\t\t'term404'       => '',\n\t\t'filename'      => '',\n\t];\n\n\t\/**\n\t * Arguments.\n\t *\n\t * @var object\n\t *\/\n\tpublic static $args;\n\n\t\/**\n\t * Process post content once.\n\t *\n\t * @var array\n\t *\/\n\tpublic static $content_processed = [];\n\n\t\/**\n\t * Exclude variables.\n\t *\n\t * @var array\n\t *\/\n\tpublic $exclude = [];\n\n\t\/**\n\t *  Replace `%variables%` with context-dependent value.\n\t *\n\t * @param string $variable The string containing the %variables%.\n\t * @param array  $args     Context object, can be post, taxonomy or term.\n\t * @param array  $exclude  Excluded variables won't be replaced.\n\t *\n\t * @return string\n\t *\/\n\tpublic function replace( $variable, $args = [], $exclude = [] ) {\n\t\t$variable = wp_strip_all_tags( $variable );\n\n\t\t\/\/ Bail early.\n\t\tif ( ! Str::contains( '%', $variable ) ) {\n\t\t\treturn $variable;\n\t\t}\n\n\t\tif ( Str::ends_with( ' %sep%', $variable ) ) {\n\t\t\t$variable = substr( $variable, 0, -5 );\n\t\t}\n\n\t\t$this->pre_replace( $args, $exclude );\n\t\t$replacements = $this->set_up_replacements( $variable );\n\n\t\t\/**\n\t\t * Filter: Allow customizing the replacements.\n\t\t *\n\t\t * @param array  $replacements The replacements.\n\t\t * @param object $args The object some of the replacement values might come from,\n\t\t *                    could be a post, taxonomy or term.\n\t\t *\/\n\t\t$replacements = apply_filters( 'rank_math\/replacements', $replacements, self::$args );\n\n\t\t\/\/ Do the replacements.\n\t\tif ( is_array( $replacements ) && [] !== $replacements ) {\n\t\t\t$variable = str_replace( array_keys( $replacements ), array_values( $replacements ), $variable );\n\t\t}\n\n\t\tif ( isset( $replacements['%sep%'] ) && Str::is_non_empty( $replacements['%sep%'] ) ) {\n\t\t\t$q_sep    = preg_quote( $replacements['%sep%'], '`' );\n\t\t\t$variable = preg_replace( '`' . $q_sep . '(?:\\s*' . $q_sep . ')*`u', $replacements['%sep%'], $variable );\n\t\t}\n\n\t\t\/\/ Remove excess whitespace.\n\t\treturn preg_replace( '[\\s\\s+]', ' ', $variable );\n\t}\n\n\t\/**\n\t * Run prior to replacement.\n\t *\n\t * @param array $args    Context object, can be post, taxonomy or term.\n\t * @param array $exclude Excluded variables won't be replaced.\n\t *\/\n\tprivate function pre_replace( $args, $exclude ) {\n\t\tif ( is_array( $exclude ) ) {\n\t\t\t$this->exclude = $exclude;\n\t\t}\n\n\t\tself::$args = (object) array_merge( self::$defaults, (array) $args );\n\t\t$this->process_content();\n\t}\n\n\t\/**\n\t * Process content only once, because it's expensive.\n\t *\n\t * @return void\n\t *\/\n\tprivate function process_content() {\n\t\tif ( ! isset( self::$content_processed[ self::$args->ID ]['post_content'] ) ) {\n\t\t\tself::$content_processed[ self::$args->ID ]['post_content'] = Paper::should_apply_shortcode() ? do_shortcode( self::$args->post_content ) : Helper::strip_shortcodes( self::$args->post_content );\n\t\t\tself::$content_processed[ self::$args->ID ]['post_excerpt'] = Paper::should_apply_shortcode() ? do_shortcode( self::$args->post_excerpt ) : Helper::strip_shortcodes( self::$args->post_excerpt );\n\t\t}\n\n\t\tself::$args->post_content = self::$content_processed[ self::$args->ID ]['post_content'];\n\t\tself::$args->post_excerpt = self::$content_processed[ self::$args->ID ]['post_excerpt'];\n\t}\n\n\t\/**\n\t * Get the replacements for the variables.\n\t *\n\t * @param string $variable String to parse for variables.\n\t *\n\t * @return array Retrieved replacements.\n\t *\/\n\tprivate function set_up_replacements( $variable ) {\n\t\tif ( $this->has_cache( $variable ) ) {\n\t\t\treturn $this->get_cache( $variable );\n\t\t}\n\n\t\t$replacements = [];\n\t\tif ( ! preg_match_all( '\/%(([a-z0-9_-]+)\\(([^)]*)\\)|[^\\s]+)%\/iu', $variable, $matches ) ) {\n\t\t\t$this->set_cache( $variable, $replacements );\n\t\t\treturn $replacements;\n\t\t}\n\n\t\tforeach ( $matches[1] as $index => $variable_id ) {\n\t\t\t$value = $this->get_variable_value( $matches, $index, $variable_id );\n\t\t\tif ( false !== $value ) {\n\t\t\t\t$replacements[ $matches[0][ $index ] ] = $value;\n\t\t\t}\n\n\t\t\tunset( $value );\n\t\t}\n\n\t\t$this->set_cache( $variable, $replacements );\n\t\treturn $replacements;\n\t}\n\n\t\/**\n\t * Get non-cacheable variables.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_non_cacheable_variables() {\n\t\tif ( ! is_null( self::$non_cacheable_replacements ) ) {\n\t\t\treturn self::$non_cacheable_replacements;\n\t\t}\n\n\t\t$non_cacheable = [];\n\t\tforeach ( rank_math()->variables->get_replacements() as $variable ) {\n\t\t\tif ( ! $variable->is_cacheable() ) {\n\t\t\t\t$non_cacheable[] = $variable->get_id();\n\t\t\t}\n\t\t}\n\n\t\t\/**\n\t\t * Filter: Allow changing the non-cacheable variables.\n\t\t *\n\t\t * @param array $non_cacheable The non-cacheable variable IDs.\n\t\t *\/\n\t\tself::$non_cacheable_replacements = apply_filters( 'rank_math\/replacements\/non_cacheable', $non_cacheable );\n\n\t\treturn self::$non_cacheable_replacements;\n\t}\n\n\t\/**\n\t * Check if we have cache for a string.\n\t *\n\t * @param string $variable String to check.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function has_cache( $variable ) {\n\t\treturn isset( self::$replacements_cache[ md5( $variable ) ] );\n\t}\n\n\t\/**\n\t * Get cache for a string. Handles non-cacheable variables.\n\t *\n\t * @param string $variable String to get cache for.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_cache( $variable ) {\n\t\t$non_cacheable = $this->get_non_cacheable_variables();\n\t\t$replacements  = self::$replacements_cache[ md5( $variable ) ];\n\t\tif ( empty( $non_cacheable ) ) {\n\t\t\treturn $replacements;\n\t\t}\n\n\t\tforeach ( $replacements as $key => $value ) {\n\t\t\t$id = explode( '(', trim( $key, '%' ) )[0];\n\t\t\tif ( ! in_array( $id, $non_cacheable, true ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$var_args = '';\n\t\t\t$parts    = explode( '(', trim( $key, '%)' ) );\n\t\t\tif ( isset( $parts[1] ) ) {\n\t\t\t\t$var_args = $this->normalize_args( $parts[1] );\n\t\t\t}\n\n\t\t\t$replacements[ $key ] = $this->get_variable_by_id( $id, $var_args )->run_callback( $var_args, self::$args );\n\t\t}\n\n\t\treturn $replacements;\n\t}\n\n\t\/**\n\t * Set cache for a string.\n\t *\n\t * @param string $variable String to set cache for.\n\t *\n\t * @param array  $cache  Cache to set.\n\t *\/\n\tprivate function set_cache( $variable, $cache ) {\n\t\tself::$replacements_cache[ md5( $variable ) ] = $cache;\n\t}\n\n\t\/**\n\t * Get variable value.\n\t *\n\t * @param array  $matches Regex matches found in the string.\n\t * @param int    $index   Index of the matched.\n\t * @param string $id      Variable id.\n\t *\n\t * @return mixed\n\t *\/\n\tprivate function get_variable_value( $matches, $index, $id ) {\n\t\t\/\/ Don't set up excluded replacements.\n\t\tif ( isset( $matches[0][ $index ] ) && in_array( $matches[0][ $index ], $this->exclude, true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$has_args = ! empty( $matches[2][ $index ] ) && ! empty( $matches[3][ $index ] );\n\t\t$id       = $has_args ? $matches[2][ $index ] : $id;\n\t\t$var_args = $has_args ? $this->normalize_args( $matches[3][ $index ] ) : [];\n\t\t$variable = $this->get_variable_by_id( $id, $var_args );\n\n\t\tif ( is_null( $variable ) ) {\n\t\t\treturn rank_math()->variables->remove_non_replaced ? '' : false;\n\t\t}\n\n\t\treturn $variable->run_callback( $var_args, self::$args );\n\t}\n\n\t\/**\n\t * Find variable.\n\t *\n\t * @param string $id   Variable id.\n\t * @param array  $args Array of arguments.\n\t *\n\t * @return Variable|null\n\t *\/\n\tprivate function get_variable_by_id( $id, $args ) {\n\t\tif ( ! isset( rank_math()->variables ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$replacements = rank_math()->variables->get_replacements();\n\t\tif ( isset( $replacements[ $id ] ) ) {\n\t\t\treturn $replacements[ $id ];\n\t\t}\n\n\t\tif ( ! empty( $args ) && isset( $replacements[ $id . '_args' ] ) ) {\n\t\t\treturn $replacements[ $id . '_args' ];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Convert arguments string to arguments array.\n\t *\n\t * @param  string $variable The string that needs to be converted.\n\t *\n\t * @return array\n\t *\/\n\tprivate function normalize_args( $variable ) {\n\t\t$variable = wp_specialchars_decode( $variable );\n\t\tif ( ! Str::contains( '=', $variable ) ) {\n\t\t\treturn $variable;\n\t\t}\n\n\t\treturn wp_parse_args( $variable, [] );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-advanced-variables.php","ext":"php","size":6961,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Advanced variable replacer.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Advanced_Variables class.\n *\/\nclass Advanced_Variables extends Author_Variables {\n\n\t\/**\n\t * Setup advanced variables.\n\t *\/\n\tpublic function setup_advanced_variables() {\n\t\t$post = $this->get_post();\n\n\t\t$this->register_replacement(\n\t\t\t'id',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post ID', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'ID of the current post\/page', 'rank-math' ),\n\t\t\t\t'variable'    => 'id',\n\t\t\t\t'example'     => ! empty( $post ) ? $post->ID : __( 'Post ID', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_id' ]\n\t\t);\n\n\t\t$keyword = $this->get_focus_keyword();\n\t\t$this->register_replacement(\n\t\t\t'focuskw',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Focus Keyword', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Focus Keyword of the current post', 'rank-math' ),\n\t\t\t\t'variable'    => 'focuskw',\n\t\t\t\t'example'     => \\is_null( $keyword ) ? '' : $keyword,\n\t\t\t],\n\t\t\t[ $this, 'get_focus_keyword' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'keywords',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Focus Keywords', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Focus Keywords of the current post', 'rank-math' ),\n\t\t\t\t'variable'    => 'keywords',\n\t\t\t\t'example'     => $this->get_focus_keywords(),\n\t\t\t],\n\t\t\t[ $this, 'get_focus_keywords' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'customfield',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Custom Field (advanced)', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Custom field value.', 'rank-math' ),\n\t\t\t\t'variable'    => 'customfield(field-name)',\n\t\t\t\t'example'     => esc_html__( 'Custom field value', 'rank-math' ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_customfield' ]\n\t\t);\n\n\t\t$this->setup_paging_variables();\n\t\t$this->setup_post_types_variables();\n\t}\n\n\t\/**\n\t * Setup paging variables.\n\t *\/\n\tprivate function setup_paging_variables() {\n\t\t$this->register_replacement(\n\t\t\t'page',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Page', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Page number with context (i.e. page 2 of 4). Only displayed on page 2 and above.', 'rank-math' ),\n\t\t\t\t'variable'    => 'page',\n\t\t\t\t'example'     => ' page 2 of 4',\n\t\t\t],\n\t\t\t[ $this, 'get_page' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'pagenumber',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Page Number', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current page number', 'rank-math' ),\n\t\t\t\t'variable'    => 'pagenumber',\n\t\t\t\t'example'     => '4',\n\t\t\t],\n\t\t\t[ $this, 'get_pagenumber' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'pagetotal',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Max Pages', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Max pages number', 'rank-math' ),\n\t\t\t\t'variable'    => 'pagetotal',\n\t\t\t\t'example'     => '4',\n\t\t\t],\n\t\t\t[ $this, 'get_pagetotal' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Setup post types variables.\n\t *\/\n\tprivate function setup_post_types_variables() {\n\t\t$this->register_replacement(\n\t\t\t'pt_single',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Type Name Singular', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Name of current post type (singular)', 'rank-math' ),\n\t\t\t\t'variable'    => 'pt_single',\n\t\t\t\t'example'     => esc_html__( 'Product', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_post_type_single' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'pt_plural',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Type Name Plural', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Name of current post type (plural)', 'rank-math' ),\n\t\t\t\t'variable'    => 'pt_plural',\n\t\t\t\t'example'     => esc_html__( 'Products', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_post_type_plural' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the numeric post ID.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_id() {\n\t\treturn ! empty( $this->args->ID ) ? $this->args->ID : null;\n\t}\n\n\t\/**\n\t * Get the focus keyword.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_focus_keyword() {\n\t\t$keywords = '';\n\t\tif ( ! empty( $this->args->ID ) ) {\n\t\t\t$keywords = get_post_meta( $this->args->ID, 'rank_math_focus_keyword', true );\n\t\t}\n\n\t\tif ( ! empty( $this->args->term_id ) ) {\n\t\t\t$keywords = get_term_meta( $this->args->term_id, 'rank_math_focus_keyword', true );\n\t\t}\n\n\t\t$keywords = explode( ',', $keywords );\n\t\tif ( '' !== $keywords[0] ) {\n\t\t\treturn $keywords[0];\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Get Focus keywords.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_focus_keywords() {\n\t\tif ( is_singular() || is_category() || is_tag() || is_tax() ) {\n\t\t\treturn Paper::get()->get_keywords();\n\t\t}\n\n\t\t$keywords = '';\n\t\tif ( ! empty( $this->args->ID ) ) {\n\t\t\t$keywords = get_post_meta( $this->args->ID, 'rank_math_focus_keyword', true );\n\t\t}\n\n\t\tif ( ! empty( $this->args->term_id ) ) {\n\t\t\t$keywords = get_term_meta( $this->args->term_id, 'rank_math_focus_keyword', true );\n\t\t}\n\n\t\treturn $keywords;\n\t}\n\n\t\/**\n\t * Get the current page number as a string (i.e. \"page 1 of 5\").\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_page() {\n\t\t$sep  = $this->get_sep();\n\t\t$max  = $this->determine_max_pages();\n\t\t$page = $this->determine_page_number();\n\n\t\tif ( $max > 1 && $page > 1 ) {\n\t\t\t\/* translators: %1$d: current page number, %2$d: max pages. *\/\n\t\t\treturn sprintf( $sep . ' ' . __( 'Page %1$d of %2$d', 'rank-math' ), $page, $max );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Get only the page number (without context).\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_pagenumber() {\n\t\t$page = $this->determine_page_number();\n\n\t\treturn $page > 0 ? (string) $page : null;\n\t}\n\n\t\/**\n\t * Get the max page number.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_pagetotal() {\n\t\t$max = $this->determine_max_pages();\n\n\t\treturn $max > 0 ? (string) $max : null;\n\t}\n\n\t\/**\n\t * Get a specific custom field value.\n\t *\n\t * @param  string $name The name of the custom field to retrieve.\n\t * @return string|null\n\t *\/\n\tpublic function get_customfield( $name ) {\n\t\tif ( Str::is_empty( $name ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ! empty( get_query_var( 'sitemap' ) ) && 'locations' !== get_query_var( 'sitemap' ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( is_author() ) {\n\t\t\treturn get_user_meta( $this->args->ID, $name, true );\n\t\t}\n\n\t\tif ( is_category() || is_tag() || is_tax() ) {\n\t\t\treturn get_term_meta( $this->args->term_id, $name, true );\n\t\t}\n\n\t\treturn is_singular() || ! empty( $this->args->post_type ) ? get_post_meta( $this->args->ID, $name, true ) : null;\n\t}\n\n\t\/**\n\t * Get the post type \"single\" label.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_post_type_single() {\n\t\t$name = $this->determine_post_type_label( 'single' );\n\n\t\treturn '' !== $name ? $name : null;\n\t}\n\n\t\/**\n\t * Get the post type \"plural\" label.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_post_type_plural() {\n\t\t$name = $this->determine_post_type_label( 'plural' );\n\n\t\treturn '' !== $name ? $name : null;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-post-variables.php","ext":"php","size":16993,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Post variable replacer.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Post;\nuse RankMath\\Paper\\Paper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Post_Variables class.\n *\/\nclass Post_Variables extends Advanced_Variables {\n\n\t\/**\n\t * Setup post variables.\n\t *\/\n\tpublic function setup_post_variables() {\n\t\t$this->args = (object) wp_parse_args( array_filter( (array) $this->get_post() ), $this->get_defaults() );\n\n\t\t$this->register_replacement(\n\t\t\t'title',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Title', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Title of the current post\/page', 'rank-math' ),\n\t\t\t\t'variable'    => 'title',\n\t\t\t\t'example'     => $this->get_title(),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_title' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'parent_title',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Title of parent page', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Title of the parent page of the current post\/page', 'rank-math' ),\n\t\t\t\t'variable'    => 'parent_title',\n\t\t\t\t'example'     => $this->get_parent_title(),\n\t\t\t],\n\t\t\t[ $this, 'get_parent_title' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'excerpt',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Excerpt', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Excerpt of the current post (or auto-generated if it does not exist)', 'rank-math' ),\n\t\t\t\t'variable'    => 'excerpt',\n\t\t\t\t'example'     => $this->get_excerpt(),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_excerpt' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'excerpt_only',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Excerpt', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Excerpt of the current post (without auto-generation)', 'rank-math' ),\n\t\t\t\t'variable'    => 'excerpt_only',\n\t\t\t\t'example'     => $this->is_post_edit && $this->args->post_excerpt ? $this->args->post_excerpt : esc_html__( 'Post Excerpt Only', 'rank-math' ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_excerpt_only' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'seo_title',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'SEO Title', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Custom or Generated SEO Title of the current post\/page', 'rank-math' ),\n\t\t\t\t'variable'    => 'seo_title',\n\t\t\t\t'example'     => $this->get_title(),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_seo_title' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'seo_description',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'SEO Description', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Custom or Generated SEO Description of the current post\/page', 'rank-math' ),\n\t\t\t\t'variable'    => 'seo_description',\n\t\t\t\t'example'     => $this->get_excerpt(),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_seo_description' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'url',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post URL', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'URL of the current post\/page', 'rank-math' ),\n\t\t\t\t'variable'    => 'url',\n\t\t\t\t'example'     => $this->get_url(),\n\t\t\t],\n\t\t\t[ $this, 'get_url' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'post_thumbnail',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Thumbnail', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current Post Thumbnail', 'rank-math' ),\n\t\t\t\t'variable'    => 'post_thumbnail',\n\t\t\t\t'example'     => $this->get_post_thumbnail(),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_post_thumbnail' ]\n\t\t);\n\n\t\t$this->setup_post_dates_variables();\n\t\t$this->setup_post_category_variables();\n\t\t$this->setup_post_tags_variables();\n\t}\n\n\t\/**\n\t * Setup post dates variables.\n\t *\/\n\tpublic function setup_post_dates_variables() {\n\t\t$this->register_replacement(\n\t\t\t'date',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Date Published', 'rank-math' ),\n\t\t\t\t'description' => wp_kses_post( __( 'Publication date of the current post\/page <strong>OR<\/strong> specified date on date archives', 'rank-math' ) ),\n\t\t\t\t'variable'    => 'date',\n\t\t\t\t'example'     => $this->is_post_edit ? get_the_date() : current_time( get_option( 'date_format' ) ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_date' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'modified',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Date Modified', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Last modification date of the current post\/page', 'rank-math' ),\n\t\t\t\t'variable'    => 'modified',\n\t\t\t\t'example'     => $this->is_post_edit ? get_the_modified_date() : current_time( get_option( 'date_format' ) ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_modified' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'date_args',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Date Published (advanced)', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Publish date with custom formatting pattern.', 'rank-math' ),\n\t\t\t\t'variable'    => 'date(F jS, Y)',\n\t\t\t\t'example'     => date_i18n( 'F jS, Y' ),\n\t\t\t],\n\t\t\t[ $this, 'get_date' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'modified_args',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Date Modified (advanced)', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Modified date with custom formatting pattern.', 'rank-math' ),\n\t\t\t\t'variable'    => 'modified(F jS, Y)',\n\t\t\t\t'example'     => date_i18n( 'F jS, Y' ),\n\t\t\t],\n\t\t\t[ $this, 'get_modified' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Setup post category variables.\n\t *\/\n\tpublic function setup_post_category_variables() {\n\t\t$category   = $this->get_category();\n\t\t$categories = $this->get_categories();\n\t\t$this->register_replacement(\n\t\t\t'category',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Category', 'rank-math' ),\n\t\t\t\t'description' => wp_kses_post( __( 'First category (alphabetically) associated to the current post <strong>OR<\/strong> current category on category archives', 'rank-math' ) ),\n\t\t\t\t'variable'    => 'category',\n\t\t\t\t'example'     => $category ? $category : esc_html__( 'Example Category', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_category' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'categories',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Categories', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Comma-separated list of categories associated to the current post', 'rank-math' ),\n\t\t\t\t'variable'    => 'categories',\n\t\t\t\t'example'     => $categories ? $categories : esc_html__( 'Example Category 1, Example Category 2', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_categories' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'categories_args',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Categories (advanced)', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Output list of categories associated to the current post, with customization options.', 'rank-math' ),\n\t\t\t\t'variable'    => 'categories(limit=3&separator= | &exclude=12,23)',\n\t\t\t\t'example'     => $categories ? $categories : esc_html__( 'Example Category 1, Example Category 2', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_categories' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'primary_taxonomy_terms',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Primary Terms', 'rank-math' ),\n\t\t\t\t'variable'    => 'primary_taxonomy_terms',\n\t\t\t\t'description' => esc_html__( 'Output list of terms from the primary taxonomy associated to the current post.', 'rank-math' ),\n\t\t\t\t'example'     => $this->get_primary_taxonomy_terms(),\n\t\t\t],\n\t\t\t[ $this, 'get_primary_taxonomy_terms' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Setup post tags variables.\n\t *\/\n\tpublic function setup_post_tags_variables() {\n\t\t$tag  = $this->get_tag();\n\t\t$tags = $this->get_tags();\n\t\t$this->register_replacement(\n\t\t\t'tag',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Tag', 'rank-math' ),\n\t\t\t\t'description' => wp_kses_post( __( 'First tag (alphabetically) associated to the current post <strong>OR<\/strong> current tag on tag archives', 'rank-math' ) ),\n\t\t\t\t'variable'    => 'tag',\n\t\t\t\t'example'     => $tag ? $tag : esc_html__( 'Example Tag', 'rank-math' ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_tag' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'tags',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Tags', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Comma-separated list of tags associated to the current post', 'rank-math' ),\n\t\t\t\t'variable'    => 'tags',\n\t\t\t\t'example'     => $tags ? $tags : esc_html__( 'Example Tag 1, Example Tag 2', 'rank-math' ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_tags' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'tags_args',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Tags (advanced)', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Output list of tags associated to the current post, with customization options.', 'rank-math' ),\n\t\t\t\t'variable'    => 'tags(limit=3&separator= | &exclude=12,23)',\n\t\t\t\t'example'     => $tags ? $tags : esc_html__( 'Example Tag 1 | Example Tag 2', 'rank-math' ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_tags' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the title of the post to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_title() {\n\t\t\/\/ Get post type name as Title.\n\t\tif ( is_post_type_archive() && ! Post::is_shop_page() ) {\n\t\t\t$post_type = $this->get_queried_post_type();\n\t\t\treturn get_post_type_object( $post_type )->labels->name;\n\t\t}\n\n\t\treturn Str::is_non_empty( $this->args->post_title ) ? stripslashes( $this->args->post_title ) : null;\n\t}\n\n\t\/**\n\t * Custom or Generated SEO Title\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_seo_title() {\n\t\tif ( is_singular() || is_category() || is_tag() || is_tax() ) {\n\t\t\treturn Paper::get()->get_title();\n\t\t}\n\n\t\t$object = $this->args;\n\n\t\t\/\/ Early Bail!\n\t\tif ( empty( $object ) || empty( $object->ID ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$title = Post::get_meta( 'title', $object->ID );\n\t\tif ( '' !== $title ) {\n\t\t\treturn $title;\n\t\t}\n\n\t\treturn Paper::get_from_options( \"pt_{$object->post_type}_title\", $object, '%title% %sep% %sitename%' );\n\t}\n\n\t\/**\n\t * Custom or Generated SEO Description\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_seo_description() {\n\t\tif ( is_singular() || is_category() || is_tag() || is_tax() ) {\n\t\t\treturn Paper::get()->get_description();\n\t\t}\n\n\t\t$object = $this->args;\n\n\t\t\/\/ Early Bail!\n\t\tif ( empty( $object ) || empty( $object->ID ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$description = Post::get_meta( 'description', $object->ID );\n\t\tif ( '' !== $description ) {\n\t\t\treturn $description;\n\t\t}\n\n\t\treturn Paper::get_from_options( \"pt_{$object->post_type}_description\", $object, '%excerpt%' );\n\t}\n\n\t\/**\n\t * Get the parent page title of the current page\/CPT to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_parent_title() {\n\t\t$on_screen  = is_singular() || is_admin();\n\t\t$has_parent = isset( $this->args->post_parent ) && 0 !== $this->args->post_parent;\n\n\t\treturn $on_screen && $has_parent ? get_the_title( $this->args->post_parent ) : null;\n\t}\n\n\t\/**\n\t * Get the post excerpt to use as a replacement. It will be auto-generated if it does not exist.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_excerpt() {\n\t\t$object = $this->args;\n\n\t\t\/\/ Early Bail!\n\t\tif ( empty( $object ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn ! empty( $object->post_excerpt ) ? wp_strip_all_tags( $object->post_excerpt ) : $this->get_post_content( $object );\n\t}\n\n\t\/**\n\t * Get the post excerpt to use as a replacement (without auto-generating).\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_excerpt_only() {\n\t\t$has = '' !== $this->args->post_excerpt && ! empty( $this->args->ID ) && ! post_password_required( $this->args->ID );\n\n\t\treturn $has ? wp_strip_all_tags( $this->args->post_excerpt ) : null;\n\t}\n\n\t\/**\n\t * Get the date of the post to use as a replacement.\n\t *\n\t * @param string $format (Optional) PHP date format.\n\t * @return string|null\n\t *\/\n\tpublic function get_date( $format = '' ) {\n\t\tif ( is_array( $format ) && empty( $format ) ) {\n\t\t\t$format = '';\n\t\t}\n\n\t\tif ( '' !== $this->args->post_date ) {\n\t\t\t$format = $format ? $format : get_option( 'date_format' );\n\t\t\treturn mysql2date( $format, $this->args->post_date, true );\n\t\t}\n\n\t\tif ( ! empty( get_query_var( 'day' ) ) ) {\n\t\t\treturn get_the_date( $format );\n\t\t}\n\n\t\t$replacement = single_month_title( ' ', false );\n\t\tif ( Str::is_non_empty( $replacement ) ) {\n\t\t\treturn $replacement;\n\t\t}\n\n\t\treturn ! empty( get_query_var( 'year' ) ) ? get_query_var( 'year' ) : null;\n\t}\n\n\t\/**\n\t * Get the post modified time to use as a replacement.\n\t *\n\t * @param string $format (Optional) PHP date format.\n\t * @return string|null\n\t *\/\n\tpublic function get_modified( $format = '' ) {\n\t\tif ( ! empty( $this->args->post_modified ) && ! empty( $this->args->post_date ) ) {\n\t\t\t$modified = strtotime( $this->args->post_date ) > strtotime( $this->args->post_modified ) ? $this->args->post_date : $this->args->post_modified;\n\t\t\t$format   = $format ? $format : get_option( 'date_format' );\n\t\t\treturn mysql2date( $format, $modified, true );\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Get the post category to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_category() {\n\t\tif ( ! empty( $this->args->ID ) ) {\n\t\t\t$cat = $this->get_terms( $this->args->ID, 'category', true );\n\t\t\tif ( '' !== $cat ) {\n\t\t\t\treturn $cat;\n\t\t\t}\n\t\t}\n\n\t\treturn ! empty( $this->args->cat_name ) ? $this->args->cat_name : null;\n\t}\n\n\t\/**\n\t * Get the comma-separate post categories to use as a replacement.\n\t *\n\t * @param array $args Array of arguments.\n\t * @return string|null\n\t *\/\n\tpublic function get_categories( $args = [] ) {\n\t\tif ( ! empty( $this->args->ID ) ) {\n\t\t\t$cat = $this->get_terms( $this->args->ID, 'category', false, $args );\n\t\t\tif ( '' !== $cat ) {\n\t\t\t\treturn $cat;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Get the current tag to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_tag() {\n\t\tif ( ! empty( $this->args->ID ) ) {\n\t\t\t$tags = $this->get_terms( $this->args->ID, 'post_tag', true );\n\t\t\tif ( '' !== $tags ) {\n\t\t\t\treturn $tags;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Get the current tags to use as a replacement.\n\t *\n\t * @param array $args Arguments for get_terms().\n\t * @return string|null\n\t *\/\n\tpublic function get_tags( $args = [] ) {\n\t\tif ( ! empty( $this->args->ID ) ) {\n\t\t\t$tags = $this->get_terms( $this->args->ID, 'post_tag', false, $args );\n\t\t\tif ( '' !== $tags ) {\n\t\t\t\treturn $tags;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Get the comma separated post terms.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_primary_taxonomy_terms() {\n\t\tif ( empty( $this->args->ID ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$post_type = get_post_type( $this->args->ID );\n\t\t$main_tax  = Helper::get_settings( \"titles.pt_{$post_type}_primary_taxonomy\" );\n\t\tif ( ! $main_tax ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$terms = wp_get_object_terms(\n\t\t\t$this->args->ID,\n\t\t\t$main_tax,\n\t\t\t[ 'fields' => 'names' ]\n\t\t);\n\n\t\tif ( is_wp_error( $terms ) || empty( $terms ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn implode( ', ', $terms );\n\t}\n\n\t\/**\n\t * Get the auto generated post content.\n\t *\n\t * @param array $post Post Object.\n\t * @return string|null\n\t *\/\n\tprivate function get_post_content( $post ) {\n\t\tif ( empty( $post->post_content ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$keywords     = Post::get_meta( 'focus_keyword', $post->ID );\n\t\t$post_content = Paper::should_apply_shortcode() ? do_shortcode( $post->post_content ) : $post->post_content;\n\t\t$post_content = \\preg_replace( '\/<!--[\\s\\S]*?-->\/iu', '', $post_content );\n\t\t$post_content = wpautop( Helper::strip_shortcodes( $post_content ) );\n\t\t$post_content = wp_kses( $post_content, [ 'p' => [] ] );\n\n\t\t\/\/ Remove empty paragraph tags.\n\t\t$post_content = preg_replace( '\/<p[^>]*>(\\s|&nbsp;)*<\\\/p>\/', '', $post_content );\n\n\t\t\/\/ 4. Paragraph with the focus keyword.\n\t\tif ( ! empty( $keywords ) ) {\n\t\t\t$primary_keyword = explode( ',', $keywords );\n\t\t\t$primary_keyword = trim( $primary_keyword[0] );\n\t\t\t$regex           = '\/<p>(.*' . str_replace( [ ',', ' ', '\/' ], [ '|', '.', '\\\/' ], $primary_keyword ) . '.*)<\\\/p>\/iu';\n\t\t\t\\preg_match_all( $regex, $post_content, $matches );\n\t\t\tif ( isset( $matches[1], $matches[1][0] ) ) {\n\t\t\t\treturn $matches[1][0];\n\t\t\t}\n\t\t}\n\n\t\t\/\/ 5. The First paragraph of the content.\n\t\t\\preg_match_all( '\/<p>(.*)<\\\/p>\/iu', $post_content, $matches );\n\t\treturn isset( $matches[1], $matches[1][0] ) ? $matches[1][0] : $post_content;\n\t}\n\n\t\/**\n\t * Default post data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_defaults() {\n\t\t$defaults = Replacer::$defaults;\n\n\t\tif ( $this->is_post_edit ) {\n\t\t\t$defaults['post_author']  = 'Author Name';\n\t\t\t$defaults['post_content'] = 'Post content';\n\t\t\t$defaults['post_title']   = 'Post Title';\n\t\t}\n\n\t\treturn $defaults;\n\t}\n\n\t\/**\n\t * Get the canonical URL to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_url() {\n\t\treturn Paper::get()->get_canonical() ? Paper::get()->get_canonical() : get_the_permalink( $this->args->ID );\n\t}\n\n\t\/**\n\t * Get the the post thumbnail to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_post_thumbnail() {\n\t\tif ( ! has_post_thumbnail( $this->args->ID ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$image = wp_get_attachment_image_src( get_post_thumbnail_id( $this->args->ID ), 'full' );\n\t\treturn ! empty( $image ) ? $image[0] : '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-author-variables.php","ext":"php","size":3309,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Author variable replacer.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Author_Variables class.\n *\/\nclass Author_Variables extends Term_Variables {\n\n\t\/**\n\t * Hold counter variable data.\n\t *\n\t * @var array\n\t *\/\n\tprotected $counters = [];\n\n\t\/**\n\t * Setup author variables.\n\t *\/\n\tpublic function setup_author_variables() {\n\t\tglobal $user_id;\n\t\tif ( ! Admin_Helper::is_user_edit() ) {\n\t\t\t$user_id = get_current_user_id();\n\t\t}\n\n\t\tif ( $this->is_post_edit ) {\n\t\t\t$post   = $this->get_post();\n\t\t\t$author = get_userdata( $post->post_author );\n\t\t}\n\n\t\t$this->register_replacement(\n\t\t\t'userid',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Author ID', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Author\\'s user ID of the current post, page or author archive.', 'rank-math' ),\n\t\t\t\t'variable'    => 'userid',\n\t\t\t\t'example'     => $this->is_post_edit ? $post->post_author : $user_id,\n\t\t\t],\n\t\t\t[ $this, 'get_userid' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'name',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Author', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Display author\\'s nicename of the current post, page or author archive.', 'rank-math' ),\n\t\t\t\t'variable'    => 'name',\n\t\t\t\t'example'     => $this->is_post_edit && $author ? $author->display_name : get_the_author_meta( 'display_name', $user_id ),\n\t\t\t],\n\t\t\t[ $this, 'get_name' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'post_author',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Post Author', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Display author\\'s nicename of the current post, page or author archive.', 'rank-math' ),\n\t\t\t\t'variable'    => 'post_author',\n\t\t\t\t'example'     => $this->is_post_edit && $author ? $author->display_name : get_the_author_meta( 'display_name', $user_id ),\n\t\t\t],\n\t\t\t[ $this, 'get_name' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'user_description',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Author Description', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Author\\'s biographical info of the current post, page or author archive.', 'rank-math' ),\n\t\t\t\t'variable'    => 'user_description',\n\t\t\t\t'example'     => get_the_author_meta( 'description', $user_id ),\n\t\t\t],\n\t\t\t[ $this, 'get_user_description' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the post author's user ID to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_userid() {\n\t\t$user_id = ! empty( $this->args->post_author ) ? $this->args->post_author : get_query_var( 'author' );\n\t\tif ( $user_id ) {\n\t\t\treturn $user_id;\n\t\t}\n\n\t\treturn get_query_var( 'bbp_user_id' );\n\t}\n\n\t\/**\n\t * Get the post author's \"nice name\" to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_name() {\n\t\t$user_id = $this->get_userid();\n\t\t$name    = get_the_author_meta( 'display_name', $user_id );\n\n\t\treturn '' !== $name ? $name : null;\n\t}\n\n\t\/**\n\t * Get the post author's user description to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_user_description() {\n\t\t$user_id     = $this->get_userid();\n\t\t$description = get_the_author_meta( 'description', $user_id );\n\n\t\treturn '' !== $description ? $description : null;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-cache.php","ext":"php","size":965,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Variable replacement base.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Cache class.\n *\/\nclass Cache extends Base {\n\n\t\/**\n\t * Cache holder.\n\t *\n\t * @var array\n\t *\/\n\tprivate $cache = [];\n\n\t\/**\n\t * Get from cache.\n\t *\n\t * @param string $id ID to get from cache.\n\t *\n\t * @return mixed\n\t *\/\n\tprotected function get_cache( $id ) {\n\t\treturn isset( $this->cache[ $id ] ) ? $this->cache[ $id ] : '';\n\t}\n\n\t\/**\n\t * In cache.\n\t *\n\t * @param string $id ID to get from cache.\n\t *\n\t * @return bool\n\t *\/\n\tprotected function in_cache( $id ) {\n\t\treturn isset( $this->cache[ $id ] );\n\t}\n\n\t\/**\n\t * Save into cache.\n\t *\n\t * @param string $id    ID to get from cache.\n\t * @param mixed  $value Value to save.\n\t *\/\n\tprotected function set_cache( $id, $value ) {\n\t\t$this->cache[ $id ] = $value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-base.php","ext":"php","size":8248,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Variable replacement base.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Post;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Base class.\n *\/\nclass Base {\n\n\tuse Hooker;\n\n\t\/**\n\t * Current post.\n\t *\n\t * @var object\n\t *\/\n\tpublic $post;\n\n\t\/**\n\t * Current args.\n\t *\n\t * @var object\n\t *\/\n\tpublic $args;\n\n\t\/**\n\t * Register variable replacements.\n\t *\n\t * @var array\n\t *\/\n\tprotected $replacements = [];\n\n\t\/**\n\t * Register variables\n\t *\n\t * For developers see rank_math_register_var_replacement().\n\t *\n\t * @param string $id        Uniquer ID of variable, for example custom.\n\t * @param array  $args      Array with additional name, description, variable and example values for the variable.\n\t * @param mixed  $callback  Replacement callback. Should return value, not output it.\n\t *\n\t * @return bool Replacement was registered successfully or not.\n\t *\/\n\tpublic function register_replacement( $id, $args = [], $callback = false ) {\n\t\tif ( ! $this->is_unique_id( $id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$variable = Variable::from( $id, $args );\n\t\t$variable->set_callback( $callback );\n\n\t\t$this->replacements[ $id ] = $variable;\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get a comma separated list of the post's terms.\n\t *\n\t * @param int    $id            ID of the post.\n\t * @param string $taxonomy      The taxonomy to get the terms from.\n\t * @param bool   $return_single Return the first term only.\n\t * @param array  $args          Array of arguments.\n\t * @param string $field         The term field to return.\n\t *\n\t * @return string Either a single term field or a comma delimited list of terms.\n\t *\/\n\tprotected function get_terms( $id, $taxonomy, $return_single = false, $args = [], $field = 'name' ) {\n\t\t$output = $this->get_queried_term_object();\n\t\tif ( '' === $output && ! empty( $id ) && ! empty( $taxonomy ) ) {\n\t\t\t$output = $this->get_the_terms( $id, $taxonomy, $return_single, $args, $field );\n\t\t}\n\n\t\t\/**\n\t\t * Filter: Allows changing the `%category%` and `%tag%` terms lists.\n\t\t *\n\t\t * @param string $output   The terms list, comma separated.\n\t\t * @param string $taxonomy The taxonomy of the terms.\n\t\t *\/\n\t\treturn $this->do_filter( 'vars\/terms', $output, $taxonomy );\n\t}\n\n\t\/**\n\t * Filter terms for exclude.\n\t *\n\t * @param array $terms   Terms to filter.\n\t * @param array $exclude Terms to exclude.\n\t *\n\t * @return array\n\t *\/\n\tprotected function filter_exclude( $terms, $exclude ) {\n\t\tif ( empty( $exclude ) ) {\n\t\t\treturn $terms;\n\t\t}\n\n\t\treturn array_filter(\n\t\t\t$terms,\n\t\t\tfunction ( $term ) use ( $exclude ) {\n\t\t\t\treturn in_array( $term->term_id, $exclude, true ) ? false : true;\n\t\t\t}\n\t\t);\n\t}\n\n\t\/**\n\t * Get the current post type.\n\t *\n\t * @return string Post type name.\n\t *\/\n\tprotected function get_queried_post_type() {\n\t\t$post_type = get_post_type();\n\t\tif ( false !== $post_type ) {\n\t\t\treturn $post_type;\n\t\t}\n\n\t\t$post_type = get_query_var( 'post_type' );\n\n\t\treturn is_array( $post_type ) ? reset( $post_type ) : $post_type;\n\t}\n\n\t\/**\n\t * Get post `object`.\n\t *\n\t * @return WP_Post\n\t *\/\n\tprotected function get_post() {\n\t\tif ( isset( $this->post ) ) {\n\t\t\treturn $this->post;\n\t\t}\n\n\t\t$this->post = get_post( Post::is_shop_page() ? Post::get_shop_page_id() : null );\n\n\t\tif ( is_null( $this->post ) ) {\n\t\t\t$posts      = get_posts(\n\t\t\t\t[\n\t\t\t\t\t'fields'         => 'id',\n\t\t\t\t\t'posts_per_page' => 1,\n\t\t\t\t\t'post_type'      => [ 'post', 'page' ],\n\t\t\t\t]\n\t\t\t);\n\t\t\t$this->post = isset( $posts[0] ) ? $posts[0] : null;\n\t\t}\n\n\t\tif ( is_null( $this->post ) ) {\n\t\t\t$this->post = new \\WP_Post(\n\t\t\t\t(object) [\n\t\t\t\t\t'ID'         => 0,\n\t\t\t\t\t'post_title' => __( 'Example Post title', 'rank-math' ),\n\t\t\t\t]\n\t\t\t);\n\t\t}\n\n\t\treturn $this->post;\n\t}\n\n\t\/**\n\t * Determine the page number of the current post\/page\/CPT.\n\t *\n\t * @return int|null\n\t *\/\n\tprotected function determine_page_number() {\n\t\t$page_number = is_singular() ? get_query_var( 'page' ) : get_query_var( 'paged' );\n\t\tif ( 0 === $page_number || '' === $page_number ) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn $page_number;\n\t}\n\n\t\/**\n\t * Determine the max num of pages of the current post\/page\/CPT.\n\t *\n\t * @return int|null\n\t *\/\n\tprotected function determine_max_pages() {\n\t\tglobal $wp_query, $post;\n\t\tif ( is_singular() && isset( $post->post_content ) ) {\n\t\t\treturn ( substr_count( $post->post_content, '<!--nextpage-->' ) + 1 );\n\t\t}\n\n\t\treturn empty( $wp_query->max_num_pages ) ? 1 : $wp_query->max_num_pages;\n\t}\n\n\t\/**\n\t * Get the appropriate post type label for the current request.\n\t *\n\t * @param string $request Requested label type, \"singular\" or \"plural\".\n\t *\n\t * @return string|null\n\t *\/\n\tprotected function determine_post_type_label( $request = 'single' ) {\n\t\t$post_type = $this->get_post_type();\n\t\tif ( empty( $post_type ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$object = get_post_type_object( $post_type );\n\n\t\tif ( 'single' === $request && isset( $object->labels->singular_name ) ) {\n\t\t\treturn $object->labels->singular_name;\n\t\t}\n\n\t\tif ( 'plural' === $request && isset( $object->labels->name ) ) {\n\t\t\treturn $object->labels->name;\n\t\t}\n\n\t\treturn $object->name;\n\t}\n\n\t\/**\n\t * Get post type for current quried object.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_post_type() {\n\t\t$post_type = $this->get_post_type_from_query();\n\t\treturn is_array( $post_type ) ? reset( $post_type ) : $post_type;\n\t}\n\n\t\/**\n\t * Get post type from query.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_post_type_from_query() {\n\t\tglobal $wp_query;\n\n\t\tif ( isset( $wp_query->query_vars['post_type'] ) && ( Str::is_non_empty( $wp_query->query_vars['post_type'] ) || ( is_array( $wp_query->query_vars['post_type'] ) && [] !== $wp_query->query_vars['post_type'] ) ) ) {\n\t\t\treturn $wp_query->query_vars['post_type'];\n\t\t}\n\n\t\tif ( isset( $this->args->post_type ) && Str::is_non_empty( $this->args->post_type ) ) {\n\t\t\treturn $this->args->post_type;\n\t\t}\n\n\t\treturn $wp_query->get_queried_object()->post_type;\n\t}\n\n\t\/**\n\t * Get the selected term, if we're on a taxonomy archive.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_queried_term_object() {\n\t\tif ( is_category() || is_tag() || is_tax() ) {\n\t\t\t$term = $GLOBALS['wp_query']->get_queried_object();\n\t\t\tif ( is_object( $term ) && isset( $term->name ) ) {\n\t\t\t\treturn $term->name;\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Get the post's terms.\n\t *\n\t * @param int    $id            ID of the post.\n\t * @param string $taxonomy      The taxonomy to get the terms from.\n\t * @param bool   $return_single Return the first term only.\n\t * @param array  $args          Array of arguments.\n\t * @param string $field         The term field to return.\n\t *\n\t * @return string Either a single term field or a comma delimited list of terms.\n\t *\/\n\tprivate function get_the_terms( $id, $taxonomy, $return_single = false, $args = [], $field = 'name' ) {\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\t[\n\t\t\t\t'limit'     => 99,\n\t\t\t\t'separator' => ', ',\n\t\t\t\t'exclude'   => [],\n\t\t\t]\n\t\t);\n\n\t\tif ( ! empty( $args['exclude'] ) ) {\n\t\t\t$args['exclude'] = array_map( 'intval', explode( ',', $args['exclude'] ) );\n\t\t}\n\n\t\t$terms = get_the_terms( $id, $taxonomy );\n\t\tif ( is_wp_error( $terms ) || empty( $terms ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tarray_splice( $terms, $args['limit'] );\n\t\t$output = [];\n\t\t$terms  = $this->filter_exclude( $terms, $args['exclude'] );\n\n\t\tif ( empty( $terms ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn $return_single ? $terms[0]->{$field} :\n\t\t\tjoin( $args['separator'], wp_list_pluck( $terms, $field ) );\n\t}\n\n\t\/**\n\t * Check if variable ID is valid and unique before further processing.\n\t *\n\t * @param string $id Variable ID.\n\t *\n\t * @return bool Whether the variable is valid or not.\n\t *\/\n\tprivate function is_unique_id( $id ) {\n\t\tif ( false === preg_match( '`^[A-Z0-9_-]+$`i', $id ) ) {\n\t\t\ttrigger_error( esc_html__( 'Variable names can only contain alphanumeric characters, underscores and dashes.', 'rank-math' ), E_USER_WARNING ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( isset( $this->replacements[ $id ] ) ) {\n\t\t\ttrigger_error( esc_html__( 'The variable has already been registered.', 'rank-math' ), E_USER_WARNING ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-variable.php","ext":"php","size":3974,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Variable model.\n *\n * Replace '%variables%' in strings based on context.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Variable class.\n *\/\nclass Variable {\n\n\t\/**\n\t * Required properties.\n\t *\n\t * @var array\n\t *\/\n\tprivate static $required = [ 'name', 'description', 'variable' ];\n\n\t\/**\n\t * The unique id.\n\t *\n\t * @var string\n\t *\/\n\tprotected $id;\n\n\t\/**\n\t * The name of the variabe.\n\t *\n\t * @var string\n\t *\/\n\tprotected $name;\n\n\t\/**\n\t * The description of the variable.\n\t *\n\t * @var string\n\t *\/\n\tprotected $description;\n\n\t\/**\n\t * The variable to use.\n\t *\n\t * @var string\n\t *\/\n\tprotected $variable;\n\n\t\/**\n\t * The example for the variable.\n\t *\n\t * @var string\n\t *\/\n\tprotected $example;\n\n\t\/**\n\t * The callback to get the replacement value.\n\t *\n\t * @var mixed\n\t *\/\n\tprotected $callback;\n\n\t\/**\n\t * The variable is cacheable or not.\n\t *\n\t * @var bool\n\t *\/\n\tprotected $cacheable = true;\n\n\t\/**\n\t * Create variable from array.\n\t *\n\t * @throws \\InvalidArgumentException If `$id` is empty.\n\t *\n\t * @param string $id   Unique id of variable.\n\t * @param array  $args Array of values.\n\t *\n\t * @return Variable\n\t *\/\n\tpublic static function from( $id, $args ) {\n\t\tif ( empty( $id ) ) {\n\t\t\tthrow new \\InvalidArgumentException( esc_html__( 'The $id variable is required.', 'rank-math' ) );\n\t\t}\n\n\t\t$variable          = new Variable();\n\t\t$variable->id      = $id;\n\t\t$variable->example = isset( $args['example'] ) ? $args['example'] : esc_html__( 'Example', 'rank-math' );\n\n\t\tforeach ( self::$required as $key ) {\n\t\t\tif ( ! isset( $args[ $key ] ) ) {\n\t\t\t\t\/* translators: variable name *\/\n\t\t\t\tthrow new \\InvalidArgumentException( sprintf( esc_html__( 'The $%1$s is required for variable %2$s.', 'rank-math' ), esc_html( $key ), esc_html( $id ) ) );\n\t\t\t}\n\n\t\t\t$variable->$key = $args[ $key ];\n\t\t}\n\n\t\tif ( isset( $args['nocache'] ) && $args['nocache'] ) {\n\t\t\t$variable->cacheable = false;\n\t\t}\n\n\t\treturn $variable;\n\t}\n\n\t\/**\n\t * Returns the id.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_id() {\n\t\treturn $this->id;\n\t}\n\n\t\/**\n\t * Returns the name.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_name() {\n\t\treturn $this->name;\n\t}\n\n\t\/**\n\t * Returns the description.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_description() {\n\t\treturn $this->description;\n\t}\n\n\t\/**\n\t * Returns the variable.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_variable() {\n\t\treturn $this->variable;\n\t}\n\n\t\/**\n\t * Returns the example.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_example() {\n\t\treturn $this->example;\n\t}\n\n\t\/**\n\t * Set example.\n\t *\n\t * @param string $example New example.\n\t *\/\n\tpublic function set_example( $example ) {\n\t\t$this->example = $example;\n\t}\n\n\t\/**\n\t * Set callback.\n\t *\n\t * @param mixed $callback New callback.\n\t *\/\n\tpublic function set_callback( $callback ) {\n\t\t$this->callback = $callback;\n\t}\n\n\t\/**\n\t * Run callback.\n\t *\n\t * @param array $var_args Array of arguments passed with variable.\n\t * @param array $args     The object some of the replacement values might come from,\n\t *                        could be a post, taxonomy or term.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function run_callback( $var_args, $args = [] ) {\n\t\trank_math()->variables->set_arguments( $args );\n\n\t\t$value = ! empty( $this->callback ) ? call_user_func( $this->callback, $var_args, $args ) :\n\t\t\tapply_filters( 'rank_math\/vars\/' . $this->get_id(), $var_args, $this );\n\n\t\trank_math()->variables->reset_arguments();\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Convert object to array.\n\t *\n\t * @return array Object as array.\n\t *\/\n\tpublic function to_array() {\n\t\t$arr = [];\n\t\tforeach ( [ 'name', 'description', 'variable', 'example' ] as $key ) {\n\t\t\t$arr[ $key ] = $this->$key;\n\t\t}\n\n\t\treturn $arr;\n\t}\n\n\t\/**\n\t * Returns the variable is cacheable or not.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_cacheable() {\n\t\treturn $this->cacheable;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-basic-variables.php","ext":"php","size":10562,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Basic variable replacer.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Basic_Variables class.\n *\/\nclass Basic_Variables extends Cache {\n\n\t\/**\n\t * Hold counter variable data.\n\t *\n\t * @var array\n\t *\/\n\tprotected $counters = [];\n\n\t\/**\n\t * Is on post edit screen.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $is_post_edit = false;\n\n\t\/**\n\t * Is on term edit screen.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $is_term_edit = false;\n\n\t\/**\n\t * Is on user edit screen.\n\t *\n\t * @var bool\n\t *\/\n\tprotected $is_user_edit = false;\n\n\t\/**\n\t * Setup basic variables.\n\t *\/\n\tpublic function setup_basic_variables() {\n\t\t$this->register_replacement(\n\t\t\t'sep',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Separator Character', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Separator character, as set in the Title Settings', 'rank-math' ),\n\t\t\t\t'variable'    => 'sep',\n\t\t\t\t'example'     => $this->get_sep(),\n\t\t\t],\n\t\t\t[ $this, 'get_sep' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'search_query',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Search Query', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Search query (only available on search results page)', 'rank-math' ),\n\t\t\t\t'variable'    => 'search_query',\n\t\t\t\t'example'     => esc_html__( 'example search', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_search_query' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'count',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Counter', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Starts at 1 and increments by 1.', 'rank-math' ),\n\t\t\t\t'variable'    => 'count(varname)',\n\t\t\t\t'example'     => '2',\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_count' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'filename',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'File Name', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'File Name of the attachment', 'rank-math' ),\n\t\t\t\t'variable'    => 'filename',\n\t\t\t\t'example'     => 'Sunrise at Maldives',\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_filename' ]\n\t\t);\n\n\t\t$this->setup_site_variables();\n\t\t$this->setup_date_variables();\n\t\t$this->setup_time_variables();\n\t\t$this->setup_organization_variables();\n\t}\n\n\t\/**\n\t * Setup site info variables.\n\t *\/\n\tprivate function setup_site_variables() {\n\t\t$this->register_replacement(\n\t\t\t'sitename',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Site Title', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Title of the site', 'rank-math' ),\n\t\t\t\t'variable'    => 'sitename',\n\t\t\t\t'example'     => $this->get_sitename(),\n\t\t\t],\n\t\t\t[ $this, 'get_sitename' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'sitedesc',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Site Description', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Description of the site', 'rank-math' ),\n\t\t\t\t'variable'    => 'sitedesc',\n\t\t\t\t'example'     => $this->get_sitedesc(),\n\t\t\t],\n\t\t\t[ $this, 'get_sitedesc' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Setup date variables.\n\t *\/\n\tprivate function setup_date_variables() {\n\t\t$this->register_replacement(\n\t\t\t'currentdate',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Current Date', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current server date', 'rank-math' ),\n\t\t\t\t'variable'    => 'currentdate',\n\t\t\t\t'example'     => $this->get_current_date(),\n\t\t\t],\n\t\t\t[ $this, 'get_current_date' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'currentday',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Current Day', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current server day', 'rank-math' ),\n\t\t\t\t'variable'    => 'currentday',\n\t\t\t\t'example'     => $this->get_current_day(),\n\t\t\t],\n\t\t\t[ $this, 'get_current_day' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'currentmonth',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Current Month', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current server month', 'rank-math' ),\n\t\t\t\t'variable'    => 'currentmonth',\n\t\t\t\t'example'     => $this->get_current_month(),\n\t\t\t],\n\t\t\t[ $this, 'get_current_month' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'currentyear',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Current Year', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current server year', 'rank-math' ),\n\t\t\t\t'variable'    => 'currentyear',\n\t\t\t\t'example'     => $this->get_current_year(),\n\t\t\t],\n\t\t\t[ $this, 'get_current_year' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Setup time variables.\n\t *\/\n\tprivate function setup_time_variables() {\n\t\t$this->register_replacement(\n\t\t\t'currenttime',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Current Time', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current server time', 'rank-math' ),\n\t\t\t\t'variable'    => 'currenttime',\n\t\t\t\t'example'     => $this->get_current_time(),\n\t\t\t],\n\t\t\t[ $this, 'get_current_time' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'currenttime_args',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Current Time (advanced)', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current server time with custom formatting pattern.', 'rank-math' ),\n\t\t\t\t'variable'    => 'currenttime(F jS, Y)',\n\t\t\t\t'example'     => $this->get_current_time( 'F jS, Y' ),\n\t\t\t],\n\t\t\t[ $this, 'get_current_time' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Setup site info variables.\n\t *\/\n\tprivate function setup_organization_variables() {\n\t\t$this->register_replacement(\n\t\t\t'org_name',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Organization Name', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'The Organization Name added in Local SEO Settings.', 'rank-math' ),\n\t\t\t\t'variable'    => 'org_name',\n\t\t\t\t'example'     => $this->get_org_name(),\n\t\t\t],\n\t\t\t[ $this, 'get_org_name' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'org_logo',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Organization Logo', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Organization Logo added in Local SEO Settings.', 'rank-math' ),\n\t\t\t\t'variable'    => 'org_logo',\n\t\t\t\t'example'     => $this->get_org_logo(),\n\t\t\t],\n\t\t\t[ $this, 'get_org_logo' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'org_url',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Organization URL', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Organization URL added in Local SEO Settings.', 'rank-math' ),\n\t\t\t\t'variable'    => 'org_url',\n\t\t\t\t'example'     => $this->get_org_url(),\n\t\t\t],\n\t\t\t[ $this, 'get_org_url' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the separator to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_sep() {\n\t\t$sep = $this->do_filter( 'settings\/title_separator', Helper::get_settings( 'titles.title_separator' ) );\n\n\t\treturn htmlentities( $sep, ENT_COMPAT, 'UTF-8', false );\n\t}\n\n\t\/**\n\t * Get the site name to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_sitename() {\n\t\tif ( $this->in_cache( 'sitename' ) ) {\n\t\t\treturn $this->get_cache( 'sitename' );\n\t\t}\n\n\t\t$sitename = wp_strip_all_tags( get_bloginfo( 'name' ), true );\n\t\tif ( '' !== $sitename ) {\n\t\t\t$this->set_cache( 'sitename', $sitename );\n\t\t}\n\n\t\treturn $sitename;\n\t}\n\n\t\/**\n\t * Get the site tag line to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_sitedesc() {\n\t\tif ( $this->in_cache( 'sitedesc' ) ) {\n\t\t\treturn $this->get_cache( 'sitedesc' );\n\t\t}\n\n\t\t$sitedesc = wp_strip_all_tags( get_bloginfo( 'description' ) );\n\t\tif ( '' !== $sitedesc ) {\n\t\t\t$this->set_cache( 'sitedesc', $sitedesc );\n\t\t}\n\n\t\treturn $sitedesc;\n\t}\n\n\t\/**\n\t * Get the current search query to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_search_query() {\n\t\tif ( $this->in_cache( 'search_query' ) ) {\n\t\t\treturn $this->get_cache( 'search_query' );\n\t\t}\n\n\t\t$search = get_search_query();\n\t\tif ( '' !== $search ) {\n\t\t\t$this->set_cache( 'search_query', $search );\n\t\t}\n\n\t\treturn $search;\n\t}\n\n\t\/**\n\t * Get the counter for the given variable.\n\t *\n\t * @param string $name The name of field.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_count( $name ) {\n\t\tif ( ! is_string( $name ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif ( ! isset( $this->counters[ $name ] ) ) {\n\t\t\t$this->counters[ $name ] = 0;\n\t\t}\n\n\t\treturn ++$this->counters[ $name ];\n\t}\n\n\t\/**\n\t * Get the filename of the attachment to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_filename() {\n\t\tif ( empty( $this->args->filename ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$name = \\pathinfo( $this->args->filename );\n\n\t\t\/\/ Remove size if embedded.\n\t\t$name = explode( '-', $name['filename'] );\n\t\tif ( Str::contains( 'x', end( $name ) ) ) {\n\t\t\tarray_pop( $name );\n\t\t}\n\n\t\t\/\/ Format filename.\n\t\t$name = join( ' ', $name );\n\t\t$name = trim( str_replace( '_', ' ', $name ) );\n\n\t\treturn '' !== $name ? $name : null;\n\t}\n\n\t\/**\n\t * Get the current time to use as a replacement.\n\t *\n\t * @param string $format (Optional) PHP date format.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_current_time( $format = '' ) {\n\t\t$format = $format ? $format : get_option( 'time_format' );\n\t\treturn $this->date_i18n( $format );\n\t}\n\n\t\/**\n\t * Get the current date to use as a replacement.\n\t *\n\t * @param string $format (Optional) PHP date format.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_current_date( $format = '' ) {\n\t\t$format = $format ? $format : get_option( 'date_format' );\n\t\treturn $this->date_i18n( $format );\n\t}\n\n\t\/**\n\t * Get the current day to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_current_day() {\n\t\treturn $this->date_i18n( 'j' );\n\t}\n\n\t\/**\n\t * Get the current month to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_current_month() {\n\t\treturn $this->date_i18n( 'F' );\n\t}\n\n\t\/**\n\t * Get the current year to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_current_year() {\n\t\treturn $this->date_i18n( 'Y' );\n\t}\n\n\t\/**\n\t * Get the Organization Name to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_org_name() {\n\t\treturn Helper::get_settings( 'titles.knowledgegraph_name', get_bloginfo( 'name' ) );\n\t}\n\n\t\/**\n\t * Get the Organization Logo to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_org_logo() {\n\t\treturn Helper::get_settings( 'titles.knowledgegraph_logo', '' );\n\t}\n\n\t\/**\n\t * Get the Organization URL to use as a replacement.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_org_url() {\n\t\treturn Helper::get_settings( 'titles.url', home_url() );\n\t}\n\n\t\/**\n\t * Return localized date.\n\t *\n\t * @param string $format (Optional) PHP date format.\n\t *\n\t * @return string\n\t *\/\n\tprivate function date_i18n( $format = '' ) {\n\t\t$key = 'date_i18n_' . sanitize_key( $format );\n\t\tif ( $this->in_cache( $key ) ) {\n\t\t\treturn $this->get_cache( $key );\n\t\t}\n\n\t\t$date = date_i18n( $format );\n\t\t$this->set_cache( $key, $date );\n\n\t\treturn $date;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-manager.php","ext":"php","size":6017,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Variable replacer.\n *\n * Replace '%variables%' in strings based on context.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\nuse RankMath\\Admin\\Admin_Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Manager class.\n *\/\nclass Manager extends Post_Variables {\n\n\t\/**\n\t * Removed non replaced variables.\n\t *\n\t * @var bool\n\t *\/\n\tpublic $remove_non_replaced = true;\n\n\t\/**\n\t * Is variable setup.\n\t *\n\t * @var bool\n\t *\/\n\tprivate $is_setup = false;\n\n\t\/**\n\t * Hold arguments.\n\t *\n\t * @var array\n\t *\/\n\tpublic $args = [];\n\n\t\/**\n\t * Hold arguments temporarily.\n\t *\n\t * @var array\n\t *\/\n\tprotected $tmp_args = [];\n\n\t\/**\n\t * Class constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$action   = is_admin() ? 'admin_enqueue_scripts' : 'wp';\n\t\t$priority = is_admin() ? 5 : 25;\n\t\t$this->action( $action, 'setup', $priority );\n\t}\n\n\t\/**\n\t * Should we setup variables or not.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function should_we_setup() {\n\t\tif ( Helper::is_ux_builder() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tglobal $wp_customize;\n\t\tif ( isset( $wp_customize ) || $this->is_setup ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$current_screen = \\function_exists( 'get_current_screen' ) ? get_current_screen() : false;\n\t\tif (\n\t\t\t$current_screen instanceof \\WP_Screen &&\n\t\t\t\\in_array( $current_screen->base, [ 'themes' ], true )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Set up replacement variables.\n\t *\/\n\tpublic function setup() {\n\t\tif ( ! $this->should_we_setup() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Variable setuped.\n\t\t$this->is_setup = true;\n\n\t\t\/\/ Internal variables.\n\t\t$current_screen = \\function_exists( 'get_current_screen' ) ? get_current_screen() : false;\n\t\tif ( $current_screen instanceof \\WP_Screen ) {\n\t\t\t$screen_base        = $current_screen->base;\n\t\t\t$this->is_post_edit = is_admin() && 'post' === $screen_base;\n\t\t\t$this->is_term_edit = is_admin() && 'term' === $screen_base;\n\t\t\t$this->is_user_edit = is_admin() && ( 'profile' === $screen_base || 'user-edit' === $screen_base );\n\t\t}\n\n\t\t\/**\n\t\t * Filter: strip variables which don't have a replacement.\n\t\t *\n\t\t * @param bool $final\n\t\t *\/\n\t\t$this->remove_non_replaced = $this->do_filter( 'vars\/remove_nonreplaced', true );\n\n\t\t\/\/ Setup internal variables.\n\t\t$this->setup_basic_variables();\n\t\t$this->setup_post_variables();\n\t\t$this->setup_term_variables();\n\t\t$this->setup_author_variables();\n\t\t$this->setup_advanced_variables();\n\n\t\t\/\/ Setup custom fields.\n\t\tif ( $this->is_post_edit || $this->is_term_edit || $this->is_user_edit ) {\n\t\t\tHelper::add_json( 'customFields', $this->get_custom_fields() );\n\t\t\tHelper::add_json( 'customTerms', $this->get_custom_taxonomies() );\n\t\t}\n\n\t\t\/**\n\t\t* Action: 'rank_math\/vars\/register_extra_replacements' - Allows adding extra variables.\n\t\t*\/\n\t\t$this->do_action( 'vars\/register_extra_replacements' );\n\t}\n\n\t\/**\n\t * Setup JSON for use in ui.\n\t *\/\n\tpublic function setup_json() {\n\t\t$json = [];\n\n\t\tforeach ( $this->replacements as $id => $variable ) {\n\t\t\t$json[ $id ] = $variable->to_array();\n\t\t}\n\n\t\tHelper::add_json( 'variables', $this->do_filter( 'vars\/replacements', $json ) );\n\t}\n\n\t\/**\n\t * Get replacements.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_replacements() {\n\t\treturn $this->replacements;\n\t}\n\n\t\/**\n\t * Set arguments.\n\t *\n\t * @param array $args The object some of the replacement values might come from,\n\t *                    could be a post, taxonomy or term.\n\t *\/\n\tpublic function set_arguments( $args = [] ) {\n\t\tif ( ! empty( $args ) ) {\n\t\t\t$this->tmp_args = $this->args;\n\t\t\t$this->args     = $args;\n\t\t}\n\t}\n\n\t\/**\n\t * Reset arguments.\n\t *\/\n\tpublic function reset_arguments() {\n\t\t$this->args = $this->tmp_args;\n\t}\n\n\t\/**\n\t * Get custom fields.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_custom_fields() {\n\t\t$metas = [];\n\n\t\tif ( $this->is_user_edit ) {\n\t\t\tglobal $user_id;\n\t\t\t$metas = get_metadata( 'user', $user_id );\n\t\t} elseif ( $this->is_post_edit ) {\n\t\t\t$metas = get_metadata( 'post', $this->args->ID );\n\t\t} elseif ( $this->is_term_edit ) {\n\t\t\t$term_id = Param::request( 'tag_ID', 0, FILTER_VALIDATE_INT );\n\t\t\t$metas   = get_metadata( 'term', $term_id );\n\t\t}\n\n\t\tif ( empty( $metas ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$json = [];\n\t\tforeach ( $metas as $meta_key => $meta_value ) {\n\t\t\tif ( Str::starts_with( '_', $meta_key ) || Str::starts_with( 'rank_math_', $meta_key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$json[ $meta_key ] = $meta_value[0];\n\t\t}\n\n\t\treturn $json;\n\t}\n\n\t\/**\n\t * Get custom taxonomies.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_custom_taxonomies() {\n\t\t$taxonomies = get_post_taxonomies( $this->args->ID );\n\t\tif ( empty( $taxonomies ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t$json = [];\n\t\tforeach ( $taxonomies as $taxonomy ) {\n\t\t\tif ( in_array( $taxonomy, [ 'category', 'post_tag' ], true ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$name = ucwords( str_replace( [ '_', '-' ], ' ', $taxonomy ) );\n\t\t\t\/* translators: Taxonomy name. *\/\n\t\t\t$title = sprintf( __( '%s Title', 'rank-math' ), $name );\n\t\t\t\/* translators: Taxonomy name. *\/\n\t\t\t$desc = sprintf( __( '%s Description', 'rank-math' ), $name );\n\n\t\t\t$this->register_replacement(\n\t\t\t\t\"term_{$taxonomy}\",\n\t\t\t\t[\n\t\t\t\t\t'name'        => $title,\n\t\t\t\t\t'description' => esc_html__( 'Custom Term title.', 'rank-math' ),\n\t\t\t\t\t'variable'    => \"customterm({$taxonomy})\",\n\t\t\t\t\t'example'     => $title,\n\t\t\t\t],\n\t\t\t\t[ $this, 'get_custom_term' ]\n\t\t\t);\n\n\t\t\t$this->register_replacement(\n\t\t\t\t\"term_{$taxonomy}_desc\",\n\t\t\t\t[\n\t\t\t\t\t'name'        => $desc,\n\t\t\t\t\t'description' => esc_html__( 'Custom Term description.', 'rank-math' ),\n\t\t\t\t\t'variable'    => \"customterm_desc({$taxonomy})\",\n\t\t\t\t\t'example'     => $desc,\n\t\t\t\t],\n\t\t\t\t[ $this, 'get_custom_term_desc' ]\n\t\t\t);\n\n\t\t\t$term      = $this->get_custom_term( $taxonomy );\n\t\t\t$term_desc = $this->get_custom_term_desc( $taxonomy );\n\n\t\t\t$json[ $taxonomy ]          = $term ? $term : $title;\n\t\t\t$json[ \"{$taxonomy}_desc\" ] = $term_desc ? $term_desc : $desc;\n\t\t}\n\n\t\treturn $json;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/replace-variables\/class-term-variables.php","ext":"php","size":3757,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Term variable replacer.\n *\n * @since      1.0.33\n * @package    RankMath\n * @subpackage RankMath\\Replace_Variables\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\Replace_Variables;\n\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Param;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Term_Variables class.\n *\/\nclass Term_Variables extends Basic_Variables {\n\n\t\/**\n\t * Setup term variables.\n\t *\/\n\tpublic function setup_term_variables() {\n\t\tif ( $this->is_term_edit ) {\n\t\t\t$tag_id     = Param::request( 'tag_ID', 0, FILTER_VALIDATE_INT );\n\t\t\t$term       = get_term( $tag_id, $GLOBALS['taxnow'], OBJECT );\n\t\t\t$this->args = $term;\n\t\t}\n\n\t\t$this->register_replacement(\n\t\t\t'term',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Current Term', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current term name', 'rank-math' ),\n\t\t\t\t'variable'    => 'term',\n\t\t\t\t'example'     => $this->is_term_edit ? $term->name : esc_html__( 'Example Term', 'rank-math' ),\n\t\t\t\t'nocache'     => true,\n\t\t\t],\n\t\t\t[ $this, 'get_term' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'term_description',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Term Description', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Current term description', 'rank-math' ),\n\t\t\t\t'variable'    => 'term_description',\n\t\t\t\t'example'     => $this->is_term_edit ? wp_strip_all_tags( term_description( $term ), true ) : esc_html__( 'Example Term Description', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_term_description' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'customterm',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Custom Term (advanced)', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Custom term value.', 'rank-math' ),\n\t\t\t\t'variable'    => 'customterm(taxonomy-name)',\n\t\t\t\t'example'     => esc_html__( 'Custom term value', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_custom_term' ]\n\t\t);\n\n\t\t$this->register_replacement(\n\t\t\t'customterm_desc',\n\t\t\t[\n\t\t\t\t'name'        => esc_html__( 'Custom Term description', 'rank-math' ),\n\t\t\t\t'description' => esc_html__( 'Custom Term description.', 'rank-math' ),\n\t\t\t\t'variable'    => 'customterm_desc(taxonomy-name)',\n\t\t\t\t'example'     => esc_html__( 'Custom Term description.', 'rank-math' ),\n\t\t\t],\n\t\t\t[ $this, 'get_custom_term_desc' ]\n\t\t);\n\t}\n\n\t\/**\n\t * Get the term name to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_term() {\n\t\tglobal $wp_query;\n\n\t\tif ( is_category() || is_tag() || is_tax() ) {\n\t\t\treturn $wp_query->queried_object->name;\n\t\t}\n\n\t\treturn ! empty( $this->args->taxonomy ) && ! empty( $this->args->name ) ? $this->args->name : null;\n\t}\n\n\t\/**\n\t * Get the term description to use as a replacement.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_term_description() {\n\t\tglobal $wp_query;\n\n\t\tif ( is_category() || is_tag() || is_tax() ) {\n\t\t\treturn $wp_query->queried_object->description;\n\t\t}\n\n\t\tif ( ! isset( $this->args->term_id ) || empty( $this->args->taxonomy ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$term_desc = get_term_field( 'description', $this->args->term_id, $this->args->taxonomy );\n\t\treturn '' !== $term_desc ? Str::truncate( $term_desc, 160 ) : null;\n\t}\n\n\t\/**\n\t * Get a custom taxonomy term to use as a replacement.\n\t *\n\t * @param string $taxonomy The name of the taxonomy.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_custom_term( $taxonomy ) {\n\t\treturn Str::is_non_empty( $taxonomy ) ? $this->get_terms( $this->args->ID, $taxonomy, true, [], 'name' ) : null;\n\t}\n\n\t\/**\n\t * Get a custom taxonomy term description to use as a replacement.\n\t *\n\t * @param string $taxonomy The name of the taxonomy.\n\t *\n\t * @return string|null\n\t *\/\n\tpublic function get_custom_term_desc( $taxonomy ) {\n\t\treturn Str::is_non_empty( $taxonomy ) ? $this->get_terms( $this->args->ID, $taxonomy, true, [], 'description' ) : null;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-data-encryption.php","ext":"php","size":4162,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * This class handles the encryption\/descryption of sensitive user data, like\n * the Rank Math API key.\n *\n * Credits to Felix Arntz @ https:\/\/felix-arntz.me\/\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * The Data Encryption class.\n *\/\nclass Data_Encryption {\n\n\t\/**\n\t * Enryption available or not.\n\t *\n\t * @var bool\n\t *\/\n\tprivate static $encryption_possible = null;\n\n\t\/**\n\t * Get encryption key.\n\t *\n\t * @return string Key.\n\t *\/\n\tpublic static function get_key() {\n\t\tif ( defined( 'RANK_MATH_ENCRYPTION_KEY' ) && '' !== RANK_MATH_ENCRYPTION_KEY ) {\n\t\t\treturn RANK_MATH_ENCRYPTION_KEY;\n\t\t}\n\n\t\tif ( defined( 'LOGGED_IN_KEY' ) && '' !== LOGGED_IN_KEY ) {\n\t\t\treturn LOGGED_IN_KEY;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Get salt.\n\t *\n\t * @return string Salt.\n\t *\/\n\tpublic static function get_salt() {\n\t\tif ( defined( 'RANK_MATH_ENCRYPTION_SALT' ) && '' !== RANK_MATH_ENCRYPTION_SALT ) {\n\t\t\treturn RANK_MATH_ENCRYPTION_SALT;\n\t\t}\n\n\t\tif ( defined( 'LOGGED_IN_SALT' ) && '' !== LOGGED_IN_SALT ) {\n\t\t\treturn LOGGED_IN_SALT;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Encrypt data.\n\t *\n\t * @param  mixed $value Original string.\n\t * @return string       Encrypted string.\n\t *\/\n\tpublic static function encrypt( $value ) {\n\t\tif ( ! self::is_available() ) {\n\t\t\treturn $value;\n\t\t}\n\n\t\t$method  = 'aes-256-ctr';\n\t\t$ciphers = openssl_get_cipher_methods();\n\t\tif ( ! in_array( $method, $ciphers, true ) ) {\n\t\t\t$method = $ciphers[0];\n\t\t}\n\n\t\t$ivlen = openssl_cipher_iv_length( $method );\n\t\t$iv    = openssl_random_pseudo_bytes( $ivlen );\n\n\t\t$raw_value = openssl_encrypt( $value . self::get_salt(), $method, self::get_key(), 0, $iv );\n\t\tif ( ! $raw_value ) {\n\t\t\treturn $value;\n\t\t}\n\n\t\treturn base64_encode( $iv . $raw_value );  \/\/ phpcs:ignore -- Verified as safe usage.\n\t}\n\n\t\/**\n\t * Decrypt string.\n\t *\n\t * @param  string $raw_value Encrypted string.\n\t * @return string            Decrypted string.\n\t *\/\n\tpublic static function decrypt( $raw_value ) {\n\t\tif ( ! self::is_available() ) {\n\t\t\treturn $raw_value;\n\t\t}\n\n\t\t$method  = 'aes-256-ctr';\n\t\t$ciphers = openssl_get_cipher_methods();\n\t\tif ( ! in_array( $method, $ciphers, true ) ) {\n\t\t\t$method = $ciphers[0];\n\t\t}\n\n\t\t$raw_value = base64_decode( $raw_value, true );  \/\/ phpcs:ignore -- Verified as safe usage.\n\n\t\t$ivlen = openssl_cipher_iv_length( $method );\n\t\t$iv    = substr( $raw_value, 0, $ivlen );\n\n\t\t$raw_value = substr( $raw_value, $ivlen );\n\n\t\tif ( ! $raw_value || strlen( $iv ) !== $ivlen ) {\n\t\t\treturn $raw_value;\n\t\t}\n\n\t\t$salt = self::get_salt();\n\n\t\t$value = openssl_decrypt( $raw_value, $method, self::get_key(), 0, $iv );\n\t\tif ( ! $value || substr( $value, - strlen( $salt ) ) !== $salt ) {\n\t\t\treturn $raw_value;\n\t\t}\n\n\t\treturn substr( $value, 0, - strlen( $salt ) );\n\t}\n\n\t\/**\n\t * Recursively encrypt array of strings.\n\t *\n\t * @param  mixed $data Original strings.\n\t * @return string       Encrypted strings.\n\t *\/\n\tpublic static function deep_encrypt( $data ) {\n\t\tif ( is_array( $data ) ) {\n\t\t\t$encrypted = [];\n\t\t\tforeach ( $data as $key => $value ) {\n\t\t\t\t$encrypted[ self::encrypt( $key ) ] = self::deep_encrypt( $value );\n\t\t\t}\n\n\t\t\treturn $encrypted;\n\t\t}\n\n\t\treturn self::encrypt( $data );\n\t}\n\n\t\/**\n\t * Recursively decrypt array of strings.\n\t *\n\t * @param  string $data Encrypted strings.\n\t * @return string       Decrypted strings.\n\t *\/\n\tpublic static function deep_decrypt( $data ) {\n\t\tif ( is_array( $data ) ) {\n\t\t\t$decrypted = [];\n\t\t\tforeach ( $data as $key => $value ) {\n\t\t\t\t$decrypted[ self::decrypt( $key ) ] = self::deep_decrypt( $value );\n\t\t\t}\n\n\t\t\treturn $decrypted;\n\t\t}\n\n\t\treturn self::decrypt( $data );\n\t}\n\n\t\/**\n\t * Check if OpenSSL is available and encryption is not disabled with filter.\n\t *\n\t * @return bool Whether encryption is possible or not.\n\t *\/\n\tpublic static function is_available() {\n\t\tstatic $encryption_possible;\n\t\tif ( null === $encryption_possible ) {\n\t\t\t$encryption_possible = extension_loaded( 'openssl' ) && apply_filters( 'rank_math\/admin\/sensitive_data_encryption', true ) && self::get_key() && self::get_salt();\n\t\t}\n\n\t\treturn (bool) $encryption_possible;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/class-kb.php","ext":"php","size":12238,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Knowledgebase links.\n *\n * This class defines all code necessary to run during the plugin's activation.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\Core\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * KB class.\n *\/\nclass KB {\n\n\t\/**\n\t * Hold links.\n\t *\n\t * @var array\n\t *\/\n\tprivate static $links = [\n\t\t\/\/ General.\n\t\t'seo-suite'                       => 'https:\/\/rankmath.com\/',\n\t\t'blog'                            => 'https:\/\/rankmath.com\/blog\/',\n\t\t'free-account'                    => 'https:\/\/rankmath.com\/my-account\/',\n\t\t'support'                         => 'https:\/\/rankmath.com\/support\/',\n\t\t'pro'                             => 'https:\/\/rankmath.com\/pricing\/',\n\t\t'changelog'                       => 'https:\/\/rankmath.com\/changelog\/',\n\t\t'changelog-free'                  => 'https:\/\/rankmath.com\/changelog\/free\/',\n\t\t'help-affiliate'                  => 'https:\/\/rankmath.com\/affiliates\/',\n\t\t'content-ai'                      => 'https:\/\/rankmath.com\/content-ai\/',\n\t\t'content-ai-pricing-tables'       => 'https:\/\/rankmath.com\/content-ai\/?#pricing-tables',\n\t\t'content-ai-restore-credits'      => 'https:\/\/rankmath.com\/kb\/how-to-restore-missing-content-ai-credits\/',\n\t\t'free-vs-pro'                     => 'https:\/\/rankmath.com\/free-vs-pro\/',\n\t\t'google-updates'                  => 'https:\/\/rankmath.com\/google-updates\/',\n\t\t'usage-policy'                    => 'https:\/\/rankmath.com\/usage-tracking\/',\n\t\t'logo'                            => 'https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/',\n\t\t'offer'                           => 'https:\/\/rankmath.com\/offer\/',\n\n\t\t\/\/ Knowledgebase.\n\t\t'knowledgebase'                   => 'https:\/\/rankmath.com\/kb\/',\n\t\t'how-to-setup'                    => 'https:\/\/rankmath.com\/kb\/how-to-setup\/',\n\t\t'how-to-setup-your-site'          => 'https:\/\/rankmath.com\/kb\/how-to-setup\/?#your-site',\n\t\t'seo-import'                      => 'https:\/\/rankmath.com\/kb\/how-to-setup\/?#import-data',\n\t\t'seo-tweaks'                      => 'https:\/\/rankmath.com\/kb\/how-to-setup\/?#optimization',\n\t\t'local-seo'                       => 'https:\/\/rankmath.com\/kb\/how-to-setup\/?#easy-and-advanced-mode',\n\t\t'general-settings'                => 'https:\/\/rankmath.com\/kb\/general-settings\/',\n\t\t'remove-category-base'            => 'https:\/\/rankmath.com\/kb\/general-settings\/?#strip-category-base',\n\t\t'link-settings'                   => 'https:\/\/rankmath.com\/kb\/general-settings\/?#links',\n\t\t'image-settings'                  => 'https:\/\/rankmath.com\/kb\/general-settings\/?#images',\n\t\t'breadcrumbs'                     => 'https:\/\/rankmath.com\/kb\/general-settings\/?#breadcrumbs',\n\t\t'webmaster-tools'                 => 'https:\/\/rankmath.com\/kb\/general-settings\/?#webmaster-tools',\n\t\t'edit-robotstxt'                  => 'https:\/\/rankmath.com\/kb\/general-settings\/?#edit-robotstxt',\n\t\t'robotstxt-tool'                  => 'https:\/\/rankmath.com\/tools\/robots-txt\/',\n\t\t'edit-htaccess'                   => 'https:\/\/rankmath.com\/kb\/general-settings\/?#edit-htaccess',\n\t\t'woocommerce-settings'            => 'https:\/\/rankmath.com\/kb\/general-settings\/?#woo-commerce',\n\t\t'404-monitor-settings'            => 'https:\/\/rankmath.com\/kb\/general-settings\/?#404-monitor',\n\t\t'redirections-settings'           => 'https:\/\/rankmath.com\/kb\/general-settings\/?#redirections',\n\t\t'analytics-settings'              => 'https:\/\/rankmath.com\/kb\/general-settings\/?#search-console',\n\t\t'other-settings'                  => 'https:\/\/rankmath.com\/kb\/general-settings\/?#others',\n\t\t'score-100'                       => 'https:\/\/rankmath.com\/kb\/score-100-in-tests\/',\n\t\t'content-length'                  => 'https:\/\/rankmath.com\/kb\/score-100-in-tests\/?#content-length',\n\t\t'toc'                             => 'https:\/\/rankmath.com\/kb\/score-100-in-tests\/?#content-length',\n\t\t'configure-sitemaps'              => 'https:\/\/rankmath.com\/kb\/configure-sitemaps\/',\n\t\t'sitemap-general'                 => 'https:\/\/rankmath.com\/kb\/configure-sitemaps\/?#general',\n\t\t'sitemap-post'                    => 'https:\/\/rankmath.com\/kb\/configure-sitemaps\/?#posts',\n\t\t'sitemap-page'                    => 'https:\/\/rankmath.com\/kb\/configure-sitemaps\/?#pages',\n\t\t'sitemap-media'                   => 'https:\/\/rankmath.com\/kb\/configure-sitemaps\/?#media',\n\t\t'sitemap-product'                 => 'https:\/\/rankmath.com\/kb\/configure-sitemaps\/?#products',\n\t\t'social-meta-settings'            => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#social-meta',\n\t\t'homepage-settings'               => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#homepage',\n\t\t'author-settings'                 => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#authors',\n\t\t'misc-settings'                   => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#misc-pages',\n\t\t'post-settings'                   => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#Posts',\n\t\t'page-settings'                   => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#pages',\n\t\t'media-settings'                  => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#media',\n\t\t'product-settings'                => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#products',\n\t\t'category-settings'               => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#categories',\n\t\t'tag-settings'                    => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#tags',\n\t\t'product-categories-settings'     => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#product-categories',\n\t\t'product-tags-settings'           => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/?#product-tags',\n\t\t'seo-email-reporting'             => 'https:\/\/rankmath.com\/kb\/seo-email-reporting\/',\n\t\t'email-reports-logo'              => 'https:\/\/rankmath.com\/kb\/seo-email-reporting\/#report-logo',\n\t\t'kb-seo-suite'                    => 'https:\/\/rankmath.com\/kb\/wordpress\/seo-suite\/',\n\t\t'kb-search'                       => 'https:\/\/rankmath.com\/kb\/wordpress\/seo-suite\/?ht-kb-search=1',\n\t\t'help-analytics'                  => 'https:\/\/rankmath.com\/kb\/analytics\/',\n\t\t'monitor-seo-performance'         => 'https:\/\/rankmath.com\/kb\/client-management\/#num-3-1-monitor-seo-performance-business',\n\t\t'top-5-winning-and-losing'        => 'https:\/\/rankmath.com\/kb\/analytics\/?#top-5-winning-and-losing-posts-pro',\n\t\t'using-ga4'                       => 'https:\/\/rankmath.com\/kb\/using-ga4\/',\n\t\t'local-seo-settings'              => 'https:\/\/rankmath.com\/kb\/local-seo\/',\n\t\t'kml-sitemap'                     => 'https:\/\/rankmath.com\/kb\/kml-sitemap\/',\n\t\t'news-sitemap'                    => 'https:\/\/rankmath.com\/kb\/news-sitemap\/',\n\t\t'role-manager'                    => 'https:\/\/rankmath.com\/kb\/role-manager\/',\n\t\t'seo-analysis'                    => 'https:\/\/rankmath.com\/kb\/seo-analysis\/',\n\t\t'competitor-analyzer'             => 'https:\/\/rankmath.com\/kb\/analyzing-competitors-seo-strategy\/',\n\t\t'requirements'                    => 'https:\/\/rankmath.com\/kb\/requirements\/',\n\t\t'video-sitemap'                   => 'https:\/\/rankmath.com\/kb\/video-sitemap\/',\n\t\t'rich-snippets'                   => 'https:\/\/rankmath.com\/kb\/rich-snippets\/',\n\t\t'podcast-settings'                => 'https:\/\/rankmath.com\/kb\/podcast-schema\/',\n\t\t'fix-404'                         => 'https:\/\/rankmath.com\/kb\/fix-404-errors\/',\n\t\t'titles-meta'                     => 'https:\/\/rankmath.com\/kb\/titles-and-meta\/',\n\t\t'version-control'                 => 'https:\/\/rankmath.com\/kb\/version-control\/',\n\t\t'tools'                           => 'https:\/\/rankmath.com\/kb\/rank-math-status-and-tools\/#database-tools',\n\t\t'status'                          => 'https:\/\/rankmath.com\/kb\/rank-math-status-and-tools\/#system-status',\n\t\t'headless-support'                => 'https:\/\/rankmath.com\/kb\/headless-support\/',\n\t\t'faq-schema-block'                => 'https:\/\/rankmath.com\/kb\/faq-schema-block\/',\n\t\t'404-monitor'                     => 'https:\/\/rankmath.com\/kb\/monitor-404-errors\/',\n\t\t'meta-box-social-tab'             => 'https:\/\/rankmath.com\/kb\/meta-box-social-tab\/',\n\t\t'instant-indexing'                => 'https:\/\/rankmath.com\/kb\/how-to-use-indexnow\/',\n\t\t'analytics-stats-bar'             => 'https:\/\/rankmath.com\/kb\/analytics-stats-bar\/',\n\t\t'content-ai-settings'             => 'https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/',\n\t\t'content-ai-links'                => 'https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/?#links',\n\t\t'content-ai-keywords'             => 'https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/?#keywords',\n\t\t'content-ai-credits-usage'        => 'https:\/\/rankmath.com\/kb\/content-ai-plans-and-credits\/',\n\t\t'free-account-benefits'           => 'https:\/\/rankmath.com\/kb\/free-account-benefits\/',\n\t\t'import-export-settings'          => 'https:\/\/rankmath.com\/kb\/import-export-settings\/',\n\t\t'location-data-shortcode'         => 'https:\/\/rankmath.com\/kb\/location-data-shortcode\/',\n\t\t'redirections'                    => 'https:\/\/rankmath.com\/kb\/setting-up-redirections\/',\n\t\t'about-and-mentions-schema'       => 'https:\/\/rankmath.com\/kb\/about-and-mentions-schema\/',\n\t\t'url-inspection-api'              => 'https:\/\/rankmath.com\/kb\/url-inspection-api-integration\/',\n\t\t'pillar-content-internal-linking' => 'https:\/\/rankmath.com\/kb\/pillar-content-internal-linking\/',\n\t\t'breadcrumbs-install'             => 'https:\/\/rankmath.com\/kb\/breadcrumbs\/?#add-breadcrumbs-theme',\n\t\t'change-seo-score-backlink'       => 'https:\/\/rankmath.com\/kb\/filters-hooks-api-developer\/?#change-seo-score-backlink',\n\t\t'unable-to-encrypt'               => 'https:\/\/rankmath.com\/kb\/fix-automatic-update-unavailable-for-this-plugin\/?#unable-to-encrypt',\n\t\t'google-verification-kb'          => 'https:\/\/rankmath.com\/kb\/google-site-verification\/',\n\t\t'bing-verification-kb'            => 'https:\/\/rankmath.com\/kb\/verify-your-site-with-bing-webmaster-tools\/',\n\t\t'baidu-verification-kb'           => 'https:\/\/rankmath.com\/kb\/baidu-webmaster-tools-verification\/',\n\t\t'yandex-verification-kb'          => 'https:\/\/rankmath.com\/kb\/verifying-your-domain-with-yandex\/',\n\t\t'norton-verification-kb'          => 'https:\/\/rankmath.com\/kb\/verify-site-with-norton-safe-web\/',\n\t\t'pinterest-verification-kb'       => 'https:\/\/rankmath.com\/kb\/pinterest-site-verification\/',\n\n\t\t\/\/ SEO Analysis.\n\t\t'analysis-site-tagline'           => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#site-tagline-test',\n\t\t'analysis-blog-public'            => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#blog-public-test',\n\t\t'analysis-permalink-structure'    => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#permalink-structure-test',\n\t\t'analysis-focus-keywords'         => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#focus-keywords-test',\n\t\t'analysis-post-titles'            => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#post-titles-missing-focus-keywords-test',\n\t\t'analysis-search-console'         => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#search-console-test',\n\t\t'analysis-sitemaps'               => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#sitemaps-test',\n\t\t'analysis-auto-update'            => 'https:\/\/rankmath.com\/kb\/seo-analysis\/?#priority',\n\n\t\t\/\/ Social Media.\n\t\t'yt-link'                         => 'http:\/\/youtube.com\/rankmath',\n\t\t'fb-group'                        => 'https:\/\/www.facebook.com\/groups\/rankmathseopluginwordpress\/',\n\n\t\t\/\/ Other.\n\t\t'google-article-schema'           => 'https:\/\/developers.google.com\/search\/docs\/data-types\/article\/?utm_campaign=Rank+Math',\n\t\t'create-facebook-app'             => 'https:\/\/www.youtube.com\/watch?utm_source=Plugin&utm_campaign=WP&v=-XME8Q25omQ&feature=youtu.be',\n\t];\n\n\t\/**\n\t * Echo the link.\n\t *\n\t * @param string $id Id of the link to get.\n\t * @param  string $medium Medium of the link to get.\n\t *\/\n\tpublic static function the( $id, $medium = '' ) {\n\t\techo self::get( $id, $medium ); \/\/ phpcs:ignore\n\t}\n\n\t\/**\n\t * Return the link.\n\t *\n\t * @param  string $id Id of the link to get.\n\t * @param  string $medium Medium of the link to get.\n\t * @return string\n\t *\/\n\tpublic static function get( $id, $medium = '' ) {\n\t\t$links = self::get_links();\n\t\t$url   = isset( $links[ $id ] ) ? $links[ $id ] : '#';\n\n\t\tif ( empty( $medium ) ) {\n\t\t\treturn $url;\n\t\t}\n\n\t\treturn add_query_arg(\n\t\t\t[\n\t\t\t\t'utm_source'   => 'Plugin',\n\t\t\t\t'utm_medium'   => rawurlencode( $medium ),\n\t\t\t\t'utm_campaign' => 'WP',\n\t\t\t],\n\t\t\t$url\n\t\t);\n\t}\n\n\t\/**\n\t * Get links.\n\t *\n\t * @return array\n\t *\/\n\tpublic static function get_links() {\n\t\treturn self::$links;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/opengraph\/class-slack.php","ext":"php","size":8633,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * This class handles the Slack sharing functionality.\n *\n * @since      1.0.76\n * @package    RankMath\n * @subpackage RankMath\\OpenGraph\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\OpenGraph;\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Slack class.\n *\/\nclass Slack extends OpenGraph {\n\n\t\/**\n\t * Network slug.\n\t *\n\t * @var string\n\t *\/\n\tpublic $network = 'slack';\n\n\t\/**\n\t * Enhanced data tag counter.\n\t *\n\t * @var int\n\t *\/\n\tprivate static $data_tag_count = 0;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'rank_math\/opengraph\/slack', 'enhanced_data', 20 );\n\n\t\tparent::__construct();\n\t}\n\n\t\/**\n\t * Outputs the Slack enhanced data.\n\t *\/\n\tpublic function enhanced_data() {\n\t\t$data = $this->get_enhanced_data();\n\n\t\tforeach ( $data as $key => $value ) {\n\t\t\tif ( empty( $value ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$this->enhanced_data_tag( $key, $value );\n\t\t}\n\t}\n\n\t\/**\n\t * Get Slack enhanced data tags for a key\/value pair.\n\t *\n\t * @param string $key   The key.\n\t * @param string $value The value.\n\t *\n\t * @return void\n\t *\/\n\tpublic function enhanced_data_tag( $key, $value ) {\n\t\t++self::$data_tag_count;\n\n\t\t$this->tag( sprintf( 'twitter:label%d', self::$data_tag_count ), $key );\n\t\t$this->tag( sprintf( 'twitter:data%d', self::$data_tag_count ), $value );\n\t}\n\n\t\/**\n\t * Get Slack data for the current page.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_enhanced_data() {\n\t\t$data = [];\n\n\t\tif ( $this->is_product() ) {\n\t\t\t$data = $this->get_product_data();\n\t\t} elseif ( $this->is_page() ) {\n\t\t\t$data = $this->get_page_data();\n\t\t} elseif ( $this->is_singular() ) {\n\t\t\t$data = $this->get_post_data();\n\t\t} elseif ( $this->is_term() ) {\n\t\t\t$data = $this->get_term_data();\n\t\t} elseif ( $this->is_author() ) {\n\t\t\t$data = $this->get_author_data();\n\t\t}\n\n\t\t$data = $this->do_filter( 'opengraph\/slack_enhanced_data', $data );\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Check if current page is a product.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_product() {\n\t\treturn $this->is_woo_product() || $this->is_edd_product();\n\t}\n\n\t\/**\n\t * Get product data.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_product_data() {\n\t\tif ( $this->is_woo_product() ) {\n\t\t\treturn $this->get_woo_product_data();\n\t\t}\n\n\t\treturn $this->get_edd_product_data();\n\t}\n\n\t\/**\n\t * Check if current page is a WooCommerce product.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_woo_product() {\n\t\treturn Helper::get_settings( 'titles.pt_product_slack_enhanced_sharing' ) && is_singular( 'product' ) && function_exists( 'wc_get_product' );\n\t}\n\n\t\/**\n\t * Check if current page is a EDD download.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_edd_product() {\n\t\treturn Helper::get_settings( 'titles.pt_download_slack_enhanced_sharing' ) && is_singular( 'download' ) && class_exists( 'Easy_Digital_Downloads' );\n\t}\n\n\t\/**\n\t * Check if current page is a post or a CPT.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_singular() {\n\t\treturn is_singular() && Helper::get_settings( sprintf( 'titles.pt_%s_slack_enhanced_sharing', get_post_type() ) );\n\t}\n\n\t\/**\n\t * Check if current page is a page.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_page() {\n\t\treturn Helper::get_settings( 'titles.pt_page_slack_enhanced_sharing' ) && is_singular( 'page' ) && ! is_front_page();\n\t}\n\n\t\/**\n\t * Check if current page is a term archive.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_term() {\n\t\tif ( is_category() || is_tag() || is_tax() ) {\n\t\t\t$object = get_queried_object();\n\t\t\treturn $object && Helper::get_settings( sprintf( 'titles.tax_%s_slack_enhanced_sharing', $object->taxonomy ) );\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if current page is an author archive.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_author() {\n\t\treturn Helper::get_settings( 'titles.author_slack_enhanced_sharing' ) && is_author();\n\t}\n\n\t\/**\n\t * Get Slack data for WooCommerce product.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_woo_product_data() {\n\t\tglobal $post;\n\n\t\t$data    = [];\n\t\t$product = \\wc_get_product( $post );\n\n\t\t$data[ __( 'Price', 'rank-math' ) ]        = $this->get_product_price( $product );\n\t\t$data[ __( 'Availability', 'rank-math' ) ] = $this->get_product_availability( $product );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get Slack data for EDD download.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_edd_product_data() {\n\t\tglobal $post;\n\n\t\t$data                               = [];\n\t\t$data[ __( 'Price', 'rank-math' ) ] = wp_strip_all_tags( \\edd_price( $post->ID, false ) );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get availability of product.\n\t *\n\t * @param object $product Product object.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_product_availability( $product ) {\n\t\t$product_availability = $product->get_availability();\n\n\t\t$availability_text = isset( $product_availability['availability'] ) ? $product_availability['availability'] : '';\n\n\t\tif ( ! $availability_text ) {\n\t\t\treturn __( 'In stock', 'rank-math' );\n\t\t}\n\n\t\treturn $availability_text;\n\t}\n\n\t\/**\n\t * Get price of WooCommerce product.\n\t * Gets price range for variable products.\n\t *\n\t * @param object $product Product object.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_product_price( $product ) {\n\t\t$price = wp_strip_all_tags( \\wc_price( $product->get_price() ) );\n\t\tif ( $product->is_type( 'variable' ) ) {\n\t\t\t$lowest  = \\wc_format_decimal( $product->get_variation_price( 'min', false ), \\wc_get_price_decimals() );\n\t\t\t$highest = \\wc_format_decimal( $product->get_variation_price( 'max', false ), \\wc_get_price_decimals() );\n\n\t\t\t$price = wp_strip_all_tags( \\wc_price( $lowest ) . ' - ' . \\wc_price( $highest ) );\n\t\t\tif ( $lowest === $highest ) {\n\t\t\t\t$price = wp_strip_all_tags( \\wc_price( $lowest ) );\n\t\t\t}\n\t\t}\n\n\t\treturn $price;\n\t}\n\n\t\/**\n\t * Get Slack data for post.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_post_data() {\n\t\tglobal $post;\n\n\t\t$data = [];\n\n\t\t$data[ __( 'Written by', 'rank-math' ) ]   = get_the_author();\n\t\t$data[ __( 'Time to read', 'rank-math' ) ] = $this->calculate_time_to_read( $post );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get Slack data for page.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_page_data() {\n\t\tglobal $post;\n\n\t\t$data                                      = [];\n\t\t$data[ __( 'Time to read', 'rank-math' ) ] = $this->calculate_time_to_read( $post );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Calculate the time to read for the post.\n\t *\n\t * @param object $post Post object.\n\t *\n\t * @return string\n\t *\/\n\tprivate function calculate_time_to_read( $post ) {\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/frontend\/time_to_read_content' - Change the text to calculate the time to read.\n\t\t *\/\n\t\t$content = $this->do_filter( 'frontend\/time_to_read_content', wp_strip_all_tags( $post->post_content ) );\n\n\t\t\/**\n\t\t * Filter: 'rank_math\/frontend\/time_to_read_wpm' - Change the words per minute to calculate the time to read.\n\t\t *\/\n\t\t$words_per_minute = absint( $this->do_filter( 'frontend\/time_to_read_wpm', 200 ) );\n\n\t\t$words   = preg_match_all( '\/\\p{L}+\/u', $content );\n\t\t$minutes = floor( $words \/ $words_per_minute );\n\n\t\tif ( $minutes > 0 ) {\n\t\t\treturn sprintf(\n\t\t\t\t\/* translators: %d: minutes *\/\n\t\t\t\t_n( '%d minute', '%d minutes', $minutes, 'rank-math' ),\n\t\t\t\t$minutes\n\t\t\t);\n\t\t}\n\n\t\treturn __( 'Less than a minute', 'rank-math' );\n\t}\n\n\t\/**\n\t * Get Slack data for term.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_term_data() {\n\t\tglobal $wp_query;\n\n\t\t$data = [];\n\n\t\t$term = $wp_query->get_queried_object();\n\t\tif ( ! $term ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$label            = __( 'Items', 'rank-math' );\n\t\t$post_type_object = get_post_type_object( get_post_type() );\n\t\tif ( is_object( $post_type_object ) && isset( $post_type_object->labels->name ) ) {\n\t\t\t$label = $post_type_object->labels->name;\n\t\t}\n\n\t\t$data[ $label ] = ( ! empty( $term->category_count ) ? $term->category_count : $term->count );\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get Slack data for author.\n\t *\n\t * @return array\n\t *\/\n\tprivate function get_author_data() {\n\t\tglobal $wp_query;\n\n\t\t$data = [];\n\n\t\t$author = $wp_query->get_queried_object();\n\t\tif ( ! $author || ! is_object( $author ) || ! isset( $author->ID ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t\/\/ Check with get_userdata() to avoid issues with guest authors.\n\t\t$userdata = get_userdata( $author->ID );\n\t\tif ( ! $userdata || ! is_object( $userdata ) || ! isset( $userdata->ID ) ) {\n\t\t\treturn $data;\n\t\t}\n\n\t\t$data[ __( 'Name', 'rank-math' ) ]  = $author->display_name;\n\t\t$data[ __( 'Posts', 'rank-math' ) ] = count_user_posts( $author->ID );\n\n\t\treturn $data;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/opengraph\/class-image.php","ext":"php","size":19394,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * This code adds the OpenGraph Image parser.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\OpenGraph\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\OpenGraph;\n\nuse RankMath\\Helper;\nuse RankMath\\Post;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Url;\nuse RankMath\\Helpers\\Attachment;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Image class.\n *\/\nclass Image {\n\n\tuse Hooker;\n\n\t\/**\n\t * Holds network slug.\n\t *\n\t * @var array\n\t *\/\n\tprivate $network;\n\n\t\/**\n\t * Holds the images that have been put out as OG image.\n\t *\n\t * @var array\n\t *\/\n\tprivate $images = [];\n\n\t\/**\n\t * Holds the OpenGraph instance.\n\t *\n\t * @var OpenGraph\n\t *\/\n\tprivate $opengraph;\n\n\t\/**\n\t * The parameters we have for Facebook images.\n\t *\n\t * @var array\n\t *\/\n\tprivate $usable_dimensions = [\n\t\t'min_width'  => 200,\n\t\t'max_width'  => 2000,\n\t\t'min_height' => 200,\n\t\t'max_height' => 2000,\n\t];\n\n\t\/**\n\t * The Constructor.\n\t *\n\t * @param string    $image     (Optional) The image URL.\n\t * @param OpenGraph $opengraph (Optional) The OpenGraph object..\n\t *\/\n\tpublic function __construct( $image = false, $opengraph = null ) {\n\t\t$this->opengraph = $opengraph;\n\t\t$this->network   = $opengraph->network;\n\n\t\t\/\/ If an image was not supplied or could not be added.\n\t\tif ( Str::is_non_empty( $image ) ) {\n\t\t\t$this->add_image_by_url( $image );\n\t\t}\n\n\t\tif ( ! post_password_required() ) {\n\t\t\t$this->set_images();\n\t\t}\n\t}\n\n\t\/**\n\t * Outputs the images.\n\t *\/\n\tpublic function show() {\n\t\tforeach ( $this->get_images() as $image => $image_meta ) {\n\t\t\t$this->image_tag( $image_meta );\n\t\t\t$this->image_meta( $image_meta );\n\t\t}\n\t}\n\n\t\/**\n\t * Return the images array.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_images() {\n\t\treturn $this->images;\n\t}\n\n\t\/**\n\t * Check whether we have images or not.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function has_images() {\n\t\treturn ! empty( $this->images );\n\t}\n\n\t\/**\n\t * Generate secret key for safer image URLs.\n\t *\n\t * @param int    $id   The attachment ID.\n\t * @param string $type Overlay type.\n\t *\/\n\tpublic function generate_secret( $id, $type ) {\n\t\treturn md5( $id . $type . wp_salt( 'nonce' ) );\n\t}\n\n\t\/**\n\t * Outputs an image tag based on whether it's https or not.\n\t *\n\t * @param array $image_meta Image metadata.\n\t *\/\n\tprivate function image_tag( $image_meta ) {\n\t\t$overlay  = $this->opengraph->get_overlay_image();\n\t\t$og_image = $image_meta['url'];\n\t\tif ( $overlay && ! empty( $image_meta['id'] ) ) {\n\t\t\t$secret   = $this->generate_secret( $image_meta['id'], $overlay );\n\t\t\t$og_image = admin_url( \"admin-ajax.php?action=rank_math_overlay_thumb&id={$image_meta['id']}&type={$overlay}&hash={$secret}\" );\n\t\t}\n\t\t$this->opengraph->tag( 'og:image', esc_url_raw( $og_image ) );\n\n\t\t\/\/ Add secure URL if detected. Not all services implement this, so the regular one also needs to be rendered.\n\t\tif ( Str::starts_with( 'https:\/\/', $og_image ) ) {\n\t\t\t$this->opengraph->tag( 'og:image:secure_url', esc_url_raw( $og_image ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Output the image metadata.\n\t *\n\t * @param array $image_meta Image meta data to output.\n\t *\/\n\tprivate function image_meta( $image_meta ) {\n\t\t$image_tags = [ 'width', 'height', 'alt', 'type' ];\n\t\tforeach ( $image_tags as $key ) {\n\t\t\tif ( ! empty( $image_meta[ $key ] ) ) {\n\t\t\t\t$this->opengraph->tag( 'og:image:' . $key, $image_meta[ $key ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Adds an image based on a given URL, and attempts to be smart about it.\n\t *\n\t * @param string $url The given URL.\n\t *\/\n\tpublic function add_image_by_url( $url ) {\n\t\tif ( empty( $url ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$attachment_id = Attachment::get_by_url( $url );\n\n\t\tif ( $attachment_id > 0 ) {\n\t\t\t$this->add_image_by_id( $attachment_id );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->add_image( [ 'url' => $url ] );\n\t}\n\n\t\/**\n\t * Adds an image to the list by attachment ID.\n\t *\n\t * @param int $attachment_id The attachment ID to add.\n\t *\/\n\tpublic function add_image_by_id( $attachment_id ) {\n\t\t$variations = $this->get_image_variations( $attachment_id );\n\n\t\t\/\/ If we are left without variations, there is no valid variation for this attachment.\n\t\tif ( empty( $variations ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ The variations are ordered so the first variations is by definition the best one.\n\t\t$attachment = $variations[0];\n\n\t\tif ( $attachment ) {\n\t\t\t\/\/ In the past `add_image` accepted an image url, so leave this for backwards compatibility.\n\t\t\tif ( Str::is_non_empty( $attachment ) ) {\n\t\t\t\t$attachment = [ 'url' => $attachment ];\n\t\t\t}\n\t\t\t$attachment['alt'] = Attachment::get_alt_tag( $attachment_id );\n\n\t\t\t$this->add_image( $attachment );\n\t\t}\n\t}\n\n\t\/**\n\t * Display an OpenGraph image tag.\n\t *\n\t * @param string $attachment Source URL to the image.\n\t *\/\n\tpublic function add_image( $attachment = '' ) {\n\t\t\/\/ In the past `add_image` accepted an image url, so leave this for backwards compatibility.\n\t\tif ( Str::is_non_empty( $attachment ) ) {\n\t\t\t$attachment = [ 'url' => $attachment ];\n\t\t}\n\n\t\t$validate_image = true;\n\t\t\/**\n\t\t * Allow changing the OpenGraph image.\n\t\t * The dynamic part of the hook name, $this->network, is the network slug (facebook, twitter).\n\t\t *\n\t\t * @param string $img The image we are about to add.\n\t\t *\/\n\t\t$filter_image_url = trim( $this->do_filter( \"opengraph\/{$this->network}\/image\", isset( $attachment['url'] ) ? $attachment['url'] : '' ) );\n\t\tif ( ! empty( $filter_image_url ) && ( empty( $attachment['url'] ) || $filter_image_url !== $attachment['url'] ) ) {\n\t\t\t$attachment     = [ 'url' => $filter_image_url ];\n\t\t\t$validate_image = false;\n\t\t}\n\n\t\t\/**\n\t\t * Secondary filter to allow changing the whole array.\n\t\t * The dynamic part of the hook name, $this->network, is the network slug (facebook, twitter).\n\t\t * This makes it possible to change the image ID too, to allow for image overlays.\n\t\t *\n\t\t * @param array $attachment The image we are about to add.\n\t\t *\/\n\t\t$attachment = $this->do_filter( \"opengraph\/{$this->network}\/image_array\", $attachment );\n\n\t\tif ( ! is_array( $attachment ) || empty( $attachment['url'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Validate image only when it is not added using the opengraph filter.\n\t\tif ( $validate_image ) {\n\t\t\t$attachment_url = explode( '?', $attachment['url'] );\n\t\t\tif ( ! empty( $attachment_url ) ) {\n\t\t\t\t$attachment['url'] = $attachment_url[0];\n\t\t\t}\n\n\t\t\t\/\/ If the URL ends in `.svg`, we need to return.\n\t\t\tif ( ! $this->is_valid_image_url( $attachment['url'] ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t$image_url = $attachment['url'];\n\t\tif ( empty( $image_url ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( Url::is_relative( $image_url ) ) {\n\t\t\t$image_url = Attachment::get_relative_path( $image_url );\n\t\t}\n\n\t\tif ( array_key_exists( $image_url, $this->images ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$attachment['url'] = $image_url;\n\n\t\tif ( empty( $attachment['alt'] ) && is_singular() ) {\n\t\t\t$attachment['alt'] = $this->get_attachment_alt();\n\t\t}\n\n\t\t$this->images[ $image_url ] = $attachment;\n\t}\n\n\t\/**\n\t * Get attachment alt with fallback\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_attachment_alt() {\n\t\tglobal $post;\n\n\t\t$focus_keywords = Helper::get_post_meta( 'focus_keyword', $post->ID );\n\t\tif ( ! empty( $focus_keywords ) ) {\n\t\t\t$focus_keywords = explode( ',', $focus_keywords );\n\t\t\treturn $focus_keywords[0];\n\t\t}\n\n\t\treturn get_the_title();\n\t}\n\n\t\/**\n\t * Check if page is front page or singular and call the corresponding functions.\n\t *\/\n\tprivate function set_images() {\n\t\t\/**\n\t\t * Allow developers to add images to the OpenGraph tags.\n\t\t *\n\t\t * The dynamic part of the hook name. $this->network, is the network slug.\n\t\t *\n\t\t * @param Image The current object.\n\t\t *\/\n\t\t$this->do_action( \"opengraph\/{$this->network}\/add_images\", $this );\n\n\t\tswitch ( true ) {\n\t\t\tcase is_front_page():\n\t\t\t\t$this->set_front_page_image();\n\t\t\t\tbreak;\n\t\t\tcase is_home():\n\t\t\t\t$this->set_posts_page_image();\n\t\t\t\tbreak;\n\t\t\tcase is_attachment():\n\t\t\t\t$this->set_attachment_page_image();\n\t\t\t\tbreak;\n\t\t\tcase is_singular() || Post::is_shop_page():\n\t\t\t\t$this->set_singular_image();\n\t\t\t\tbreak;\n\t\t\tcase is_post_type_archive():\n\t\t\t\t$this->set_archive_image();\n\t\t\t\tbreak;\n\t\t\tcase is_category():\n\t\t\tcase is_tag():\n\t\t\tcase is_tax():\n\t\t\t\t$this->set_taxonomy_image();\n\t\t\t\tbreak;\n\t\t\tcase is_author():\n\t\t\t\t$this->set_author_image();\n\t\t\t\tbreak;\n\t\t}\n\n\t\t\/**\n\t\t * Allow developers to add images to the OpenGraph tags.\n\t\t *\n\t\t * The dynamic part of the hook name. $this->network, is the network slug.\n\t\t *\n\t\t * @param Image The current object.\n\t\t *\/\n\t\t$this->do_action( \"opengraph\/{$this->network}\/add_additional_images\", $this );\n\n\t\t\/**\n\t\t * Passing a truthy value to the filter will effectively short-circuit the\n\t\t * set default image process.\n\t\t *\n\t\t * @param bool $return Short-circuit return value. Either false or true.\n\t\t *\/\n\t\tif ( false !== $this->do_filter( 'opengraph\/pre_set_default_image', false ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ If not, get default image.\n\t\t$image_id = Helper::get_settings( 'titles.open_graph_image_id' );\n\t\tif ( ! $this->has_images() ) {\n\t\t\tif ( $image_id > 0 ) {\n\t\t\t\t$this->add_image_by_id( $image_id );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$this->add_image(); \/\/ This allows \"opengraph\/{$this->network}\/image\" filter to be used even if no image is set.\n\t\t}\n\t}\n\n\t\/**\n\t * If the frontpage image exists, call `add_image`.\n\t *\n\t * @return void\n\t *\/\n\tprivate function set_front_page_image() {\n\t\t$this->set_user_defined_image();\n\n\t\tif ( $this->has_images() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ If no frontpage image is found, don't add anything.\n\t\tif ( $image_id = Helper::get_settings( 'titles.homepage_facebook_image_id' ) ) { \/\/ phpcs:ignore\n\t\t\t$this->add_image_by_id( $image_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Gets the user-defined image of the post.\n\t *\n\t * @param null|int $post_id The post ID to get the images for.\n\t *\/\n\tprivate function set_user_defined_image( $post_id = null ) {\n\t\tif ( null === $post_id ) {\n\t\t\t$post_id = get_queried_object_id();\n\t\t}\n\n\t\t$this->set_image_post_meta( $post_id );\n\n\t\tif ( $this->has_images() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->set_featured_image( $post_id );\n\t}\n\n\t\/**\n\t * If opengraph-image is set, call `add_image` and return true.\n\t *\n\t * @param int $post_id Optional post ID to use.\n\t *\/\n\tprivate function set_image_post_meta( $post_id = 0 ) {\n\t\tif ( empty( $post_id ) ) {\n\t\t\treturn;\n\t\t}\n\t\t$image_id = Helper::get_post_meta( \"{$this->opengraph->prefix}_image_id\", $post_id );\n\t\t$this->add_image_by_id( $image_id );\n\t}\n\n\t\/**\n\t * Retrieve the featured image.\n\t *\n\t * @param int $post_id The post ID.\n\t *\/\n\tprivate function set_featured_image( $post_id = null ) {\n\t\t\/**\n\t\t * Passing a truthy value to the filter will effectively short-circuit the\n\t\t * set featured image process.\n\t\t *\n\t\t * @param bool $return  Short-circuit return value. Either false or true.\n\t\t * @param int  $post_id Post ID for the current post.\n\t\t *\/\n\t\tif ( false !== $this->do_filter( 'opengraph\/pre_set_featured_image', false, $post_id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $post_id && has_post_thumbnail( $post_id ) ) {\n\t\t\t$attachment_id = get_post_thumbnail_id( $post_id );\n\t\t\t$this->add_image_by_id( $attachment_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the images of the posts page.\n\t *\/\n\tprivate function set_posts_page_image() {\n\t\t$post_id = get_option( 'page_for_posts' );\n\n\t\t$this->set_image_post_meta( $post_id );\n\n\t\tif ( $this->has_images() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->set_featured_image( $post_id );\n\t}\n\n\t\/**\n\t * If this is an attachment page, call `add_image` with the attachment.\n\t *\/\n\tprivate function set_attachment_page_image() {\n\t\t$post_id = get_queried_object_id();\n\t\tif ( wp_attachment_is_image( $post_id ) ) {\n\t\t\t$this->add_image_by_id( $post_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the images of the singular post.\n\t *\n\t * @param null|int $post_id The post ID to get the images for.\n\t *\/\n\tprivate function set_singular_image( $post_id = null ) {\n\t\t$is_shop_page = Post::is_shop_page();\n\t\tif ( $is_shop_page ) {\n\t\t\t$post_id = Post::get_shop_page_id();\n\t\t}\n\n\t\t$post_id = is_null( $post_id ) ? get_queried_object_id() : $post_id;\n\t\t$this->set_user_defined_image( $post_id );\n\n\t\tif ( $this->has_images() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/**\n\t\t * Passing a truthy value to the filter will effectively short-circuit the\n\t\t * set content image process.\n\t\t *\n\t\t * @param bool $return  Short-circuit return value. Either false or true.\n\t\t * @param int  $post_id Post ID for the current post.\n\t\t *\/\n\t\tif ( false !== $this->do_filter( 'opengraph\/pre_set_content_image', false, $post_id ) ) {\n\t\t\tif ( $is_shop_page ) {\n\t\t\t\t$this->set_archive_image();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\t\t$this->set_content_image( get_post( $post_id ) );\n\n\t\tif ( ! $this->has_images() && $is_shop_page ) {\n\t\t\t$this->set_archive_image();\n\t\t}\n\t}\n\n\t\/**\n\t * Adds the first usable attachment image from the post content.\n\t *\n\t * @param object $post The post object.\n\t *\/\n\tprivate function set_content_image( $post ) {\n\t\tif ( empty( $post ) || ! $post instanceof \\WP_Post ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$content = sanitize_post_field( 'post_content', $post->post_content, $post->ID );\n\n\t\t\/\/ Early bail!\n\t\tif ( '' === $content || false === Str::contains( '<img', $content ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$do_og_content_image_cache = $this->do_filter( 'opengraph\/content_image_cache', true );\n\t\tif ( $do_og_content_image_cache ) {\n\t\t\t$cache_key = 'rank_math_og_content_image';\n\t\t\t$cache     = get_post_meta( $post->ID, $cache_key, true );\n\t\t\t$check     = md5( $post->post_content );\n\t\t\tif ( ! empty( $cache ) && isset( $cache['check'] ) && $check === $cache['check'] ) {\n\t\t\t\tforeach ( $cache['images'] as $image ) {\n\t\t\t\t\tif ( is_int( $image ) ) {\n\t\t\t\t\t\t$this->add_image_by_id( $image );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$this->add_image( $image );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t$cache = [\n\t\t\t\t'check'  => $check,\n\t\t\t\t'images' => [],\n\t\t\t];\n\t\t}\n\n\t\t$images = [];\n\t\tif ( preg_match_all( '`<img [^>]+>`', $content, $matches ) ) {\n\t\t\tforeach ( $matches[0] as $img ) {\n\t\t\t\tif ( preg_match( '`src=([\"\\'])(.*?)\\1`', $img, $match ) ) {\n\t\t\t\t\tif ( isset( $match[2] ) ) {\n\t\t\t\t\t\t$images[] = $match[2];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$images = array_unique( $images );\n\t\tif ( empty( $images ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $images as $image ) {\n\n\t\t\t\/\/ If an image has been added, we're done.\n\t\t\tif ( $this->has_images() ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( Url::is_external( $image ) ) {\n\t\t\t\t$this->add_image( $image );\n\t\t\t} else {\n\t\t\t\t$attachment_id = Attachment::get_by_url( $image );\n\t\t\t\tif ( 0 === $attachment_id ) {\n\t\t\t\t\t$this->add_image( $image );\n\t\t\t\t\tif ( $do_og_content_image_cache ) {\n\t\t\t\t\t\t$cache['images'][] = $image;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$this->add_image_by_id( $attachment_id );\n\t\t\t\t\tif ( $do_og_content_image_cache ) {\n\t\t\t\t\t\t$cache['images'][] = $attachment_id;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( $do_og_content_image_cache ) {\n\t\t\tupdate_post_meta( $post->ID, $cache_key, $cache );\n\t\t}\n\t}\n\n\t\/**\n\t * Check if Author has an image and add this image.\n\t *\/\n\tprivate function set_author_image() {\n\t\t$image_id = Helper::get_user_meta( \"{$this->opengraph->prefix}_image_id\" );\n\t\t$this->add_image_by_id( $image_id );\n\t}\n\n\t\/**\n\t * Check if taxonomy has an image and add this image.\n\t *\/\n\tprivate function set_taxonomy_image() {\n\t\t$image_id = Helper::get_term_meta( \"{$this->opengraph->prefix}_image_id\" );\n\t\t$this->add_image_by_id( $image_id );\n\t}\n\n\t\/**\n\t * Check if archive has an image and add this image.\n\t *\/\n\tprivate function set_archive_image() {\n\t\t$post_type = get_query_var( 'post_type' );\n\t\t$post_type = is_array( $post_type ) ? reset( $post_type ) : $post_type;\n\t\t$image_id  = Helper::get_settings( \"titles.pt_{$post_type}_facebook_image_id\" );\n\t\t$this->add_image_by_id( $image_id );\n\t}\n\n\t\/**\n\t * Determines whether the passed URL is considered valid.\n\t *\n\t * @param string $url The URL to check.\n\t *\n\t * @return bool Whether or not the URL is a valid image.\n\t *\/\n\tprotected function is_valid_image_url( $url ) {\n\t\tif ( ! is_string( $url ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$check = wp_check_filetype( $url );\n\t\tif ( empty( $check['ext'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$extensions = [ 'jpeg', 'jpg', 'gif', 'png', 'webp', 'avif' ];\n\n\t\treturn in_array( $check['ext'], $extensions, true );\n\t}\n\n\t\/**\n\t * Returns the different image variations for consideration.\n\t *\n\t * @param int $attachment_id The attachment to return the variations for.\n\t *\n\t * @return array The different variations possible for this attachment ID.\n\t *\/\n\tpublic function get_variations( $attachment_id ) {\n\t\t$variations = [];\n\n\t\t\/**\n\t\t * Determines which image sizes we'll loop through to get an appropriate image.\n\t\t *\n\t\t * @param unsigned array - The array of image sizes to loop through.\n\t\t *\/\n\t\t$sizes = $this->do_filter( 'opengraph\/image_sizes', [ 'full', 'large', 'medium_large' ] );\n\n\t\tforeach ( $sizes as $size ) {\n\t\t\tif ( $variation = $this->get_attachment_image( $attachment_id, $size ) ) { \/\/ phpcs:ignore\n\t\t\t\tif ( $this->has_usable_dimensions( $variation ) ) {\n\t\t\t\t\t$variations[] = $variation;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $variations;\n\t}\n\n\t\/**\n\t * Validate Attachment image and return its variations.\n\t *\n\t * @param int $attachment_id The attachment to return the variations for.\n\t *\n\t * @return array The different variations possible for this attachment ID.\n\t *\/\n\tprivate function get_image_variations( $attachment_id ) {\n\t\t\/**\n\t\t * Allow plugins to change the blog in a multisite environment. This hook can be used by plugins that uses a global media library from the main site.\n\t\t *\/\n\t\t$this->do_action( 'opengraph\/pre_attachment_image_check', $attachment_id );\n\n\t\t\/**\n\t\t * Filter to change the attachment ID.\n\t\t *\n\t\t * @param int $attachment_id Attachment ID.\n\t\t *\/\n\t\t$attachment_id = $this->do_filter( 'opengraph\/attachment_id', $attachment_id );\n\t\tif ( ! wp_attachment_is_image( $attachment_id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$variations = $this->get_variations( $attachment_id );\n\n\t\t\/**\n\t\t * Allow plugins to reset the blog in a multisite environment. This hook can be used by plugins that utilize a global media library from the main site.\n\t\t *\/\n\t\t$this->do_action( 'opengraph\/post_attachment_image_check', $attachment_id );\n\n\t\treturn $variations;\n\t}\n\n\t\/**\n\t * Retrieve an image to represent an attachment.\n\t *\n\t * @param int          $attachment_id Image attachment ID.\n\t * @param string|array $size          Optional. Image size. Accepts any valid image size, or an array of width\n\t *                                    and height values in pixels (in that order). Default 'thumbnail'.\n\t * @return false|array\n\t *\/\n\tprivate function get_attachment_image( $attachment_id, $size = 'thumbnail' ) {\n\t\t$image = wp_get_attachment_image_src( $attachment_id, $size );\n\n\t\t\/\/ Early Bail!\n\t\tif ( ! $image ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlist( $src, $width, $height ) = $image;\n\n\t\treturn [\n\t\t\t'id'     => $attachment_id,\n\t\t\t'url'    => $src,\n\t\t\t'width'  => $width,\n\t\t\t'height' => $height,\n\t\t\t'type'   => get_post_mime_type( $attachment_id ),\n\t\t\t'alt'    => Attachment::get_alt_tag( $attachment_id ),\n\t\t];\n\t}\n\n\t\/**\n\t * Checks whether an img sizes up to the parameters.\n\t *\n\t * @param  array $dimensions The image values.\n\t * @return bool True if the image has usable measurements, false if not.\n\t *\/\n\tprivate function has_usable_dimensions( $dimensions ) {\n\t\tforeach ( [ 'width', 'height' ] as $param ) {\n\t\t\t$minimum = $this->usable_dimensions[ 'min_' . $param ];\n\t\t\t$maximum = $this->usable_dimensions[ 'max_' . $param ];\n\n\t\t\t$current = $dimensions[ $param ];\n\t\t\tif ( ( $current < $minimum ) || ( $current > $maximum ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/opengraph\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/opengraph\/class-facebook.php","ext":"php","size":8851,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * This code adds the Facebook metadata.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\OpenGraph\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nnamespace RankMath\\OpenGraph;\n\nuse RankMath\\Helper;\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Facebook class.\n *\/\nclass Facebook extends OpenGraph {\n\n\t\/**\n\t * Network slug.\n\t *\n\t * @var string\n\t *\/\n\tpublic $network = 'facebook';\n\n\t\/**\n\t * Metakey prefix.\n\t *\n\t * @var string\n\t *\/\n\tpublic $prefix = 'facebook';\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->hooks();\n\t\tadd_filter( 'jetpack_enable_open_graph', '__return_false' );\n\t\tparent::__construct();\n\t}\n\n\t\/**\n\t * Hooks.\n\t *\/\n\tprivate function hooks() {\n\t\tif ( isset( $GLOBALS['fb_ver'] ) || class_exists( 'Facebook_Loader', false ) ) {\n\t\t\t$this->filter( 'fb_meta_tags', 'facebook_filter', 10, 1 );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->filter( 'language_attributes', 'add_namespace', 15 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'locale', 1 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'type', 5 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'title', 10 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'description', 11 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'url', 12 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'site_name', 13 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'website', 14 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'site_owner', 20 );\n\t\t$this->action( 'rank_math\/opengraph\/facebook', 'image', 30 );\n\t}\n\n\t\/**\n\t * Filter the Facebook plugins metadata.\n\t *\n\t * @param  array $meta_tags The array to fix.\n\t * @return array\n\t *\/\n\tpublic function facebook_filter( $meta_tags ) {\n\t\t$meta_tags['http:\/\/ogp.me\/ns#type']  = $this->type( false );\n\t\t$meta_tags['http:\/\/ogp.me\/ns#title'] = $this->title( false );\n\n\t\t\/\/ Filter the locale too because the Facebook plugin locale code is not as good as ours.\n\t\t$meta_tags['http:\/\/ogp.me\/ns#locale'] = $this->locale( false );\n\n\t\t$desc = $this->description( false );\n\t\tif ( ! empty( $desc ) ) {\n\t\t\t$meta_tags['http:\/\/ogp.me\/ns#description'] = $desc;\n\t\t}\n\n\t\treturn $meta_tags;\n\t}\n\n\t\/**\n\t * Adds prefix attributes to the <html> tag.\n\t *\n\t * @param  string $input The input namespace string.\n\t * @return string\n\t *\/\n\tpublic function add_namespace( $input ) {\n\t\treturn $input . ' prefix=\"og: https:\/\/ogp.me\/ns#\"';\n\t}\n\n\t\/**\n\t * Output the locale, doing some conversions to make sure the proper Facebook locale is outputted.\n\t *\n\t * @see  http:\/\/www.facebook.com\/translations\/FacebookLocales.xml for the list of supported locales\n\t * @link https:\/\/developers.facebook.com\/docs\/reference\/opengraph\/object-type\/article\/\n\t *\n\t * @param bool $display Whether to echo or return the locale.\n\t * @return string\n\t *\/\n\tpublic function locale( $display = true ) {\n\t\t$locale = get_locale();\n\t\t$locale = Facebook_Locale::sanitize( $locale );\n\t\t$locale = Facebook_Locale::validate( $locale );\n\n\t\tif ( $display ) {\n\t\t\t$this->tag( 'og:locale', $locale );\n\t\t}\n\n\t\treturn $locale;\n\t}\n\n\t\/**\n\t * Output the OpenGraph type.\n\t *\n\t * @link https:\/\/developers.facebook.com\/docs\/reference\/opengraph\/object-type\/object\/\n\t *\n\t * @param bool $display Whether to echo or return the type.\n\t * @return string\n\t *\/\n\tpublic function type( $display = true ) {\n\t\t$type = $this->get_type();\n\n\t\tif ( is_singular() ) {\n\t\t\tif ( 'article' === $type && ! is_front_page() ) {\n\t\t\t\t$this->action( 'rank_math\/opengraph\/facebook', 'article_author', 15 );\n\t\t\t\t$this->action( 'rank_math\/opengraph\/facebook', 'tags', 16 );\n\t\t\t\t$this->action( 'rank_math\/opengraph\/facebook', 'category', 17 );\n\t\t\t}\n\t\t\t$this->action( 'rank_math\/opengraph\/facebook', 'publish_date', 19 );\n\t\t}\n\n\t\t\/**\n\t\t * Allow changing the OpenGraph type of the page.\n\t\t *\n\t\t * @param string $type The OpenGraph type string.\n\t\t *\/\n\t\t$type = $this->do_filter( 'opengraph\/type', $type );\n\n\t\tif ( Str::is_non_empty( $type ) && $display ) {\n\t\t\t$this->tag( 'og:type', $type );\n\t\t}\n\n\t\treturn $type;\n\t}\n\n\t\/**\n\t * Get type.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_type() {\n\t\tif ( is_front_page() || is_home() ) {\n\t\t\treturn 'website';\n\t\t}\n\n\t\tif ( is_author() ) {\n\t\t\treturn 'profile';\n\t\t}\n\n\t\treturn $this->is_product() ? 'product' : 'article';\n\t}\n\n\t\/**\n\t * Outputs the SEO title as OpenGraph title.\n\t *\n\t * @copyright Copyright (C) 2008-2019, Yoast BV\n\t * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n\t *\n\t * @link https:\/\/developers.facebook.com\/docs\/reference\/opengraph\/object-type\/article\/\n\t *\n\t * @param bool $display Whether or not to echo the output.\n\t *\n\t * @return string\n\t *\/\n\tpublic function title( $display = true ) {\n\t\t$title = trim( $this->get_title() );\n\t\tif ( $display ) {\n\t\t\t$this->tag( 'og:title', $title );\n\t\t}\n\n\t\treturn $title;\n\t}\n\n\t\/**\n\t * Output the OpenGraph description, specific OG description first, if not, grab the meta description.\n\t *\n\t * @param bool $display Whether to echo or return the description.\n\t * @return string\n\t *\/\n\tpublic function description( $display = true ) {\n\t\t$desc = trim( $this->get_description() );\n\t\tif ( $display ) {\n\t\t\t$this->tag( 'og:description', $desc );\n\t\t}\n\n\t\treturn $desc;\n\t}\n\n\t\/**\n\t * Output the canonical URL for the OpenGraph URL.\n\t *\n\t * @link https:\/\/developers.facebook.com\/docs\/reference\/opengraph\/object-type\/article\/\n\t *\/\n\tpublic function url() {\n\t\t\/**\n\t\t * Filter the OpenGraph URL.\n\t\t *\/\n\t\t$url = $this->do_filter( 'opengraph\/url', esc_url( Paper::get()->get_canonical() ) );\n\t\t$this->tag( 'og:url', $url );\n\t}\n\n\t\/**\n\t * Output the site name straight from the blog info.\n\t *\/\n\tpublic function site_name() {\n\t\t$this->tag( 'og:site_name', Helper::get_settings( 'titles.website_name', get_bloginfo( 'name' ) ) );\n\t}\n\n\t\/**\n\t * Outputs the websites FB page.\n\t *\n\t * @link https:\/\/developers.facebook.com\/blog\/post\/2013\/06\/19\/platform-updates--new-open-graph-tags-for-media-publishers-and-more\/\n\t * @link https:\/\/developers.facebook.com\/docs\/reference\/opengraph\/object-type\/article\/\n\t *\/\n\tpublic function website() {\n\t\t$site = Helper::get_settings( 'titles.social_url_facebook' );\n\t\tif ( 'article' === $this->type( false ) && '' !== $site ) {\n\t\t\t$this->tag( 'article:publisher', $site );\n\t\t}\n\t}\n\n\t\/**\n\t * Outputs the site owner.\n\t *\n\t * @link https:\/\/developers.facebook.com\/docs\/reference\/opengraph\/object-type\/article\/\n\t *\/\n\tpublic function site_owner() {\n\t\t$app_id = Helper::get_settings( 'titles.facebook_app_id' );\n\t\tif ( 0 !== absint( $app_id ) ) {\n\t\t\t$this->tag( 'fb:app_id', $app_id );\n\t\t\treturn;\n\t\t}\n\n\t\t$admins = Helper::get_settings( 'titles.facebook_admin_id' );\n\t\tif ( '' !== trim( $admins ) ) {\n\t\t\t$this->tag( 'fb:admins', $admins );\n\t\t\treturn;\n\t\t}\n\t}\n\n\t\/**\n\t * Create new Image class and get the images to set the `og:image`.\n\t *\n\t * @param string|bool $image Optional. Image URL.\n\t *\/\n\tpublic function image( $image = false ) {\n\t\t$images = new Image( $image, $this );\n\t\t$images->show();\n\t}\n\n\t\/**\n\t * Outputs the authors FB page.\n\t *\n\t * @link https:\/\/developers.facebook.com\/blog\/post\/2013\/06\/19\/platform-updates--new-open-graph-tags-for-media-publishers-and-more\/\n\t * @link https:\/\/developers.facebook.com\/docs\/reference\/opengraph\/object-type\/article\/\n\t *\/\n\tpublic function article_author() {\n\t\t$this->tag( 'article:author', $this->get_author() );\n\t}\n\n\t\/**\n\t * Output the article tags as `article:tag` tags.\n\t *\/\n\tpublic function tags() {\n\t\t$tags = get_the_tags();\n\t\tif ( is_wp_error( $tags ) || empty( $tags ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $tags as $tag ) {\n\t\t\t$this->tag( 'article:tag', $tag->name );\n\t\t}\n\t}\n\n\t\/**\n\t * Output the article category as an `article:section` tag.\n\t *\/\n\tpublic function category() {\n\t\t$terms = get_the_category();\n\t\tif ( empty( $terms ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ We can only show one section here, so we take the first one.\n\t\t$this->tag( 'article:section', $terms[0]->name );\n\t}\n\n\t\/**\n\t * Output the article publish and last modification date.\n\t *\/\n\tpublic function publish_date() {\n\t\t$post = get_post();\n\t\t$pub  = mysql2date( DATE_W3C, $post->post_date, false );\n\t\t$mod  = mysql2date( DATE_W3C, $post->post_modified, false );\n\n\t\tif ( strtotime( $mod ) > strtotime( $pub ) ) {\n\t\t\t$this->tag( 'og:updated_time', $mod );\n\t\t}\n\t}\n\n\t\/**\n\t * Get author.\n\t *\n\t * @return string\n\t *\/\n\tprivate function get_author() {\n\t\t$author = Helper::get_user_meta( 'facebook_author', $GLOBALS['post']->post_author );\n\t\tif ( $author ) {\n\t\t\treturn $author;\n\t\t}\n\n\t\t$author = get_user_meta( $GLOBALS['post']->post_author, 'facebook', true );\n\t\tif ( $author ) {\n\t\t\treturn $author;\n\t\t}\n\n\t\treturn Helper::get_settings( 'titles.facebook_author_urls' );\n\t}\n\n\t\/**\n\t * Is WooCommerce product\n\t *\n\t * @return bool\n\t *\/\n\tprivate function is_product() {\n\t\treturn function_exists( 'is_woocommerce' ) && function_exists( 'is_product' ) && is_product();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/opengraph\/class-opengraph.php","ext":"php","size":5176,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Add the OpenGraph tags to the header.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\OpenGraph\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\OpenGraph;\n\nuse RankMath\\Post;\nuse RankMath\\Term;\nuse RankMath\\User;\nuse RankMath\\Helper;\nuse RankMath\\Paper\\Paper;\nuse RankMath\\Traits\\Hooker;\nuse RankMath\\Helpers\\Str;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * OpenGraph class.\n *\/\nclass OpenGraph {\n\n\tuse Hooker;\n\n\t\/**\n\t * Holds network slug.\n\t *\n\t * @var string\n\t *\/\n\tpublic $network = '';\n\n\t\/**\n\t * Hold meta_key prefix.\n\t *\n\t * @var string\n\t *\/\n\tpublic $prefix = '';\n\n\t\/**\n\t * Schema type.\n\t *\n\t * @var bool|string\n\t *\/\n\tprotected $schema = false;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t$this->action( 'rank_math\/head', 'output_tags', 30 );\n\t}\n\n\t\/**\n\t * Main OpenGraph output.\n\t *\/\n\tpublic function output_tags() {\n\t\twp_reset_query(); \/\/phpcs:ignore\n\n\t\t\/**\n\t\t * Hook to add all OpenGraph metadata\n\t\t *\n\t\t * The dynamic part of the hook name. $this->network, is the network slug.\n\t\t *\n\t\t * @param OpenGraph $this The current opengraph network object.\n\t\t *\/\n\t\t$this->do_action( \"opengraph\/{$this->network}\", $this );\n\t}\n\n\t\/**\n\t * Get title\n\t *\n\t * @return bool|string\n\t *\/\n\tpublic function get_title() {\n\t\t$title = $this->title();\n\t\tif ( $title && Helper::get_settings( 'titles.capitalize_titles' ) ) {\n\t\t\t$title = Str::mb_ucwords( $title );\n\t\t}\n\n\t\treturn $title ? $title : Paper::get()->get_title();\n\t}\n\n\t\/**\n\t * Get title.\n\t *\n\t * @return string\n\t *\/\n\tprivate function title() {\n\t\t$key = $this->prefix . '_title';\n\n\t\tif ( Post::is_simple_page() ) {\n\t\t\treturn Post::get_meta( $key, Post::get_page_id() );\n\t\t}\n\n\t\tif ( is_front_page() ) {\n\t\t\treturn Helper::replace_vars( Helper::get_settings( 'titles.homepage_facebook_title' ) );\n\t\t}\n\n\t\tif ( is_category() || is_tax() || is_tag() ) {\n\t\t\treturn Term::get_meta( $key );\n\t\t}\n\n\t\treturn is_author() ? User::get_meta( $key ) : false;\n\t}\n\n\t\/**\n\t * Get description.\n\t *\n\t * @return bool|string\n\t *\/\n\tpublic function get_description() {\n\t\t$desc = false;\n\t\t$key  = $this->prefix . '_description';\n\n\t\tif ( Post::is_simple_page() ) {\n\t\t\t$desc = Post::get_meta( $key, Post::get_page_id() );\n\t\t\t$desc = '' !== $desc ? $desc : $this->fallback_description( 'get_the_excerpt' );\n\t\t} elseif ( is_front_page() ) {\n\t\t\t$desc = Helper::replace_vars( Helper::get_settings( 'titles.homepage_facebook_description' ) );\n\t\t} elseif ( is_category() || is_tag() || is_tax() ) {\n\t\t\t$desc = Term::get_meta( $key );\n\t\t\t$desc = '' !== $desc ? $desc : $this->fallback_description( 'term_description' );\n\t\t} elseif ( is_author() ) {\n\t\t\t$desc = User::get_meta( $key );\n\t\t}\n\n\t\treturn $desc ? $desc : $this->fallback_description();\n\t}\n\n\t\/**\n\t * Get a fallback description.\n\t *\n\t * @param string $callback Function name to call.\n\t *\n\t * @return string\n\t *\/\n\tprotected function fallback_description( $callback = false ) {\n\t\t$desc = Paper::get()->get_description();\n\t\tif ( '' === $desc && $callback ) {\n\t\t\t$desc = $callback();\n\t\t}\n\n\t\treturn $desc;\n\t}\n\n\t\/**\n\t * Internal function to output social meta tags.\n\t *\n\t * @param string $property Property attribute value.\n\t * @param string $content  Content attribute value.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function tag( $property, $content ) {\n\t\t$og_property = str_replace( ':', '_', $property );\n\t\t\/**\n\t\t * Allow developers to change the content of specific social meta tags.\n\t\t *\n\t\t * The dynamic part of the hook name. $this->network, is the network slug\n\t\t * and $og_property, is the property which we are outputting.\n\t\t *\n\t\t * @param string $content The content of the property.\n\t\t *\/\n\t\t$content = $this->do_filter( \"opengraph\/{$this->network}\/$og_property\", $content );\n\t\tif ( empty( $content ) || ! is_scalar( $content ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$tag           = 'facebook' === $this->network ? 'property' : 'name';\n\t\t$escaped_value = esc_attr( $content );\n\t\tif ( false !== filter_var( $content, FILTER_VALIDATE_URL ) ) {\n\t\t\t$escaped_value = esc_url_raw( $content );\n\t\t}\n\t\tprintf( '<meta %1$s=\"%2$s\" content=\"%3$s\" \/>' . \"\\n\", esc_attr( $tag ), esc_attr( $property ), $escaped_value ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped -- $escaped_value is escaped above.\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get Overlay Image URL\n\t *\n\t * @param string $network The social network.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_overlay_image( $network = 'facebook' ) {\n\t\tif ( is_singular() ) {\n\t\t\treturn Helper::get_post_meta( \"{$network}_enable_image_overlay\" ) ? Helper::get_post_meta( \"{$network}_image_overlay\", '', 'play' ) : '';\n\t\t}\n\t\tif ( is_category() || is_tag() || is_tax() ) {\n\t\t\treturn Helper::get_term_meta( \"{$network}_enable_image_overlay\" ) ? Helper::get_term_meta( \"{$network}_image_overlay\", 0, '', 'play' ) : '';\n\t\t}\n\n\t\tif ( is_author() ) {\n\t\t\treturn Helper::get_user_meta( \"{$network}_enable_image_overlay\" ) ? Helper::get_user_meta( \"{$network}_image_overlay\", 0, 'play' ) : '';\n\t\t}\n\n\t\treturn '';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/opengraph\/class-facebook-locale.php","ext":"php","size":6138,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Facebook locale data.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\OpenGraph\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\OpenGraph;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Facebook class.\n *\/\nclass Facebook_Locale {\n\n\t\/**\n\t * Supported locales\n\t *\n\t * @link https:\/\/developers.facebook.com\/docs\/messenger-platform\/messenger-profile\/supported-locales\/\n\t *\n\t * @var array\n\t *\/\n\tconst FACEBOOK_LOCALES = [\n\t\t'af_ZA', \/\/ Afrikaans.\n\t\t'ak_GH', \/\/ Akan.\n\t\t'am_ET', \/\/ Amharic.\n\t\t'ar_AR', \/\/ Arabic.\n\t\t'as_IN', \/\/ Assamese.\n\t\t'ay_BO', \/\/ Aymara.\n\t\t'az_AZ', \/\/ Azerbaijani.\n\t\t'be_BY', \/\/ Belarusian.\n\t\t'bg_BG', \/\/ Bulgarian.\n\t\t'bp_IN', \/\/ Bhojpuri.\n\t\t'bn_IN', \/\/ Bengali.\n\t\t'br_FR', \/\/ Breton.\n\t\t'bs_BA', \/\/ Bosnian.\n\t\t'ca_ES', \/\/ Catalan.\n\t\t'cb_IQ', \/\/ Sorani Kurdish.\n\t\t'ck_US', \/\/ Cherokee.\n\t\t'co_FR', \/\/ Corsican.\n\t\t'cs_CZ', \/\/ Czech.\n\t\t'cx_PH', \/\/ Cebuano.\n\t\t'cy_GB', \/\/ Welsh.\n\t\t'da_DK', \/\/ Danish.\n\t\t'de_DE', \/\/ German.\n\t\t'el_GR', \/\/ Greek.\n\t\t'en_GB', \/\/ English (UK).\n\t\t'en_PI', \/\/ English (Pirate).\n\t\t'en_UD', \/\/ English (Upside Down).\n\t\t'en_US', \/\/ English (US).\n\t\t'em_ZM',\n\t\t'eo_EO', \/\/ Esperanto.\n\t\t'es_ES', \/\/ Spanish (Spain).\n\t\t'es_LA', \/\/ Spanish.\n\t\t'es_MX', \/\/ Spanish (Mexico).\n\t\t'et_EE', \/\/ Estonian.\n\t\t'eu_ES', \/\/ Basque.\n\t\t'fa_IR', \/\/ Persian.\n\t\t'fb_LT', \/\/ Leet Speak.\n\t\t'ff_NG', \/\/ Fulah.\n\t\t'fi_FI', \/\/ Finnish.\n\t\t'fo_FO', \/\/ Faroese.\n\t\t'fr_CA', \/\/ French (Canada).\n\t\t'fr_FR', \/\/ French (France).\n\t\t'fy_NL', \/\/ Frisian.\n\t\t'ga_IE', \/\/ Irish.\n\t\t'gl_ES', \/\/ Galician.\n\t\t'gn_PY', \/\/ Guarani.\n\t\t'gu_IN', \/\/ Gujarati.\n\t\t'gx_GR', \/\/ Classical Greek.\n\t\t'ha_NG', \/\/ Hausa.\n\t\t'he_IL', \/\/ Hebrew.\n\t\t'hi_IN', \/\/ Hindi.\n\t\t'hr_HR', \/\/ Croatian.\n\t\t'hu_HU', \/\/ Hungarian.\n\t\t'ht_HT', \/\/ Haitian Creole.\n\t\t'hy_AM', \/\/ Armenian.\n\t\t'id_ID', \/\/ Indonesian.\n\t\t'ig_NG', \/\/ Igbo.\n\t\t'is_IS', \/\/ Icelandic.\n\t\t'it_IT', \/\/ Italian.\n\t\t'ik_US',\n\t\t'iu_CA',\n\t\t'ja_JP', \/\/ Japanese.\n\t\t'ja_KS', \/\/ Japanese (Kansai).\n\t\t'jv_ID', \/\/ Javanese.\n\t\t'ka_GE', \/\/ Georgian.\n\t\t'kk_KZ', \/\/ Kazakh.\n\t\t'km_KH', \/\/ Khmer.\n\t\t'kn_IN', \/\/ Kannada.\n\t\t'ko_KR', \/\/ Korean.\n\t\t'ks_IN', \/\/ Kashmiri.\n\t\t'ku_TR', \/\/ Kurdish (Kurmanji).\n\t\t'ky_KG', \/\/ Kyrgyz.\n\t\t'la_VA', \/\/ Latin.\n\t\t'lg_UG', \/\/ Ganda.\n\t\t'li_NL', \/\/ Limburgish.\n\t\t'ln_CD', \/\/ Lingala.\n\t\t'lo_LA', \/\/ Lao.\n\t\t'lt_LT', \/\/ Lithuanian.\n\t\t'lv_LV', \/\/ Latvian.\n\t\t'mg_MG', \/\/ Malagasy.\n\t\t'mi_NZ', \/\/ Maori.\n\t\t'mk_MK', \/\/ Macedonian.\n\t\t'ml_IN', \/\/ Malayalam.\n\t\t'mn_MN', \/\/ Mongolian.\n\t\t'mr_IN', \/\/ Marathi.\n\t\t'ms_MY', \/\/ Malay.\n\t\t'mt_MT', \/\/ Maltese.\n\t\t'my_MM', \/\/ Burmese.\n\t\t'nb_NO', \/\/ Norwegian (bokmal).\n\t\t'nd_ZW', \/\/ Ndebele.\n\t\t'ne_NP', \/\/ Nepali.\n\t\t'nl_BE', \/\/ Dutch (Belgie).\n\t\t'nl_NL', \/\/ Dutch.\n\t\t'nn_NO', \/\/ Norwegian (nynorsk).\n\t\t'nr_ZA', \/\/ Southern Ndebele.\n\t\t'ns_ZA', \/\/ Northern Sotho.\n\t\t'ny_MW', \/\/ Chewa.\n\t\t'om_ET', \/\/ Oromo.\n\t\t'or_IN', \/\/ Oriya.\n\t\t'pa_IN', \/\/ Punjabi.\n\t\t'pl_PL', \/\/ Polish.\n\t\t'ps_AF', \/\/ Pashto.\n\t\t'pt_BR', \/\/ Portuguese (Brazil).\n\t\t'pt_PT', \/\/ Portuguese (Portugal).\n\t\t'qc_GT', \/\/ Quich\u00e9.\n\t\t'qu_PE', \/\/ Quechua.\n\t\t'qr_GR',\n\t\t'qz_MM', \/\/ Burmese (Zawgyi).\n\t\t'rm_CH', \/\/ Romansh.\n\t\t'ro_RO', \/\/ Romanian.\n\t\t'ru_RU', \/\/ Russian.\n\t\t'rw_RW', \/\/ Kinyarwanda.\n\t\t'sa_IN', \/\/ Sanskrit.\n\t\t'sc_IT', \/\/ Sardinian.\n\t\t'se_NO', \/\/ Northern Sami.\n\t\t'si_LK', \/\/ Sinhala.\n\t\t'su_ID', \/\/ Sundanese.\n\t\t'sk_SK', \/\/ Slovak.\n\t\t'sl_SI', \/\/ Slovenian.\n\t\t'sn_ZW', \/\/ Shona.\n\t\t'so_SO', \/\/ Somali.\n\t\t'sq_AL', \/\/ Albanian.\n\t\t'sr_RS', \/\/ Serbian.\n\t\t'ss_SZ', \/\/ Swazi.\n\t\t'st_ZA', \/\/ Southern Sotho.\n\t\t'sv_SE', \/\/ Swedish.\n\t\t'sw_KE', \/\/ Swahili.\n\t\t'sy_SY', \/\/ Syriac.\n\t\t'sz_PL', \/\/ Silesian.\n\t\t'ta_IN', \/\/ Tamil.\n\t\t'te_IN', \/\/ Telugu.\n\t\t'tg_TJ', \/\/ Tajik.\n\t\t'th_TH', \/\/ Thai.\n\t\t'tk_TM', \/\/ Turkmen.\n\t\t'tl_PH', \/\/ Filipino.\n\t\t'tl_ST', \/\/ Klingon.\n\t\t'tn_BW', \/\/ Tswana.\n\t\t'tr_TR', \/\/ Turkish.\n\t\t'ts_ZA', \/\/ Tsonga.\n\t\t'tt_RU', \/\/ Tatar.\n\t\t'tz_MA', \/\/ Tamazight.\n\t\t'uk_UA', \/\/ Ukrainian.\n\t\t'ur_PK', \/\/ Urdu.\n\t\t'uz_UZ', \/\/ Uzbek.\n\t\t've_ZA', \/\/ Venda.\n\t\t'vi_VN', \/\/ Vietnamese.\n\t\t'wo_SN', \/\/ Wolof.\n\t\t'xh_ZA', \/\/ Xhosa.\n\t\t'yi_DE', \/\/ Yiddish.\n\t\t'yo_NG', \/\/ Yoruba.\n\t\t'zh_CN', \/\/ Simplified Chinese (China).\n\t\t'zh_HK', \/\/ Traditional Chinese (Hong Kong).\n\t\t'zh_TW', \/\/ Traditional Chinese (Taiwan).\n\t\t'zu_ZA', \/\/ Zulu.\n\t\t'zz_TR', \/\/ Zazaki.\n\t];\n\n\t\/**\n\t * Catch some weird locales served out by WP that are not easily doubled up.\n\t *\n\t * @param string $locale Current site locale.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function sanitize( $locale ) {\n\t\t$fix_locales = [\n\t\t\t'ca' => 'ca_ES',\n\t\t\t'en' => 'en_US',\n\t\t\t'el' => 'el_GR',\n\t\t\t'et' => 'et_EE',\n\t\t\t'ja' => 'ja_JP',\n\t\t\t'sq' => 'sq_AL',\n\t\t\t'uk' => 'uk_UA',\n\t\t\t'vi' => 'vi_VN',\n\t\t\t'zh' => 'zh_CN',\n\t\t\t'te' => 'te_IN',\n\t\t\t'ur' => 'ur_PK',\n\t\t\t'cy' => 'cy_GB',\n\t\t\t'eu' => 'eu_ES',\n\t\t\t'th' => 'th_TH',\n\t\t\t'af' => 'af_ZA',\n\t\t\t'hy' => 'hy_AM',\n\t\t\t'gu' => 'gu_IN',\n\t\t\t'kn' => 'kn_IN',\n\t\t\t'mr' => 'mr_IN',\n\t\t\t'kk' => 'kk_KZ',\n\t\t\t'lv' => 'lv_LV',\n\t\t\t'sw' => 'sw_KE',\n\t\t\t'tl' => 'tl_PH',\n\t\t\t'ps' => 'ps_AF',\n\t\t\t'as' => 'as_IN',\n\t\t];\n\n\t\tif ( isset( $fix_locales[ $locale ] ) ) {\n\t\t\t$locale = $fix_locales[ $locale ];\n\t\t}\n\n\t\t\/\/ Convert locales like \"es\" to \"es_ES\", in case that works for the given locale (sometimes it does).\n\t\tif ( 2 === strlen( $locale ) ) {\n\t\t\t$locale = self::join( $locale );\n\t\t}\n\n\t\treturn $locale;\n\t}\n\n\t\/**\n\t * Validate with locales FB supports.\n\t *\n\t * Check to see if the locale is a valid FB one, if not, use en_US as a fallback.\n\t *\n\t * @param string $locale Current site locale.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function validate( $locale ) {\n\t\tif ( in_array( $locale, self::FACEBOOK_LOCALES, true ) ) {\n\t\t\treturn $locale;\n\t\t}\n\n\t\t$locale = self::join( substr( $locale, 0, 2 ) );\n\n\t\treturn in_array( $locale, self::FACEBOOK_LOCALES, true ) ? $locale : 'en_US';\n\t}\n\n\t\/**\n\t * Join locale to make full locale.\n\t *\n\t * @param string $locale Locale to join.\n\t *\n\t * @return string\n\t *\/\n\tprivate static function join( $locale ) {\n\t\treturn strtolower( $locale ) . '_' . strtoupper( $locale );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/opengraph\/class-twitter.php","ext":"php","size":7968,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Twitter cards functionality.\n *\n * @since      0.9.0\n * @package    RankMath\n * @subpackage RankMath\\OpenGraph\n * @author     Rank Math <support@rankmath.com>\n *\n * @copyright Copyright (C) 2008-2019, Yoast BV\n * The following code is a derivative work of the code from the Yoast(https:\/\/github.com\/Yoast\/wordpress-seo\/), which is licensed under GPL v3.\n *\/\n\nnamespace RankMath\\OpenGraph;\n\nuse RankMath\\Helper;\nuse RankMath\\Post;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Helpers\\Arr;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Twitter class.\n *\/\nclass Twitter extends OpenGraph {\n\n\t\/**\n\t * Network slug.\n\t *\n\t * @var string\n\t *\/\n\tpublic $network = 'twitter';\n\n\t\/**\n\t * Metakey prefix.\n\t *\n\t * @var string\n\t *\/\n\tpublic $prefix = 'twitter';\n\n\t\/**\n\t * Hold site info for twitter card.\n\t *\n\t * @var string\n\t *\/\n\tprivate $site = null;\n\n\t\/**\n\t * Will hold the Twitter card type being created\n\t *\n\t * @var string\n\t *\/\n\tprivate $type;\n\n\t\/**\n\t * The Constructor.\n\t *\/\n\tpublic function __construct() {\n\t\t\/**\n\t\t * Allow changing the Twitter Card type as output in the Twitter card.\n\t\t *\n\t\t * @param string $type\n\t\t *\/\n\t\tif ( false === $this->do_filter( 'opengraph\/twitter_card', true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action( 'rank_math\/opengraph\/twitter', 'use_facebook', 1 );\n\t\t$this->action( 'rank_math\/opengraph\/twitter', 'type', 5 );\n\t\t$this->action( 'rank_math\/opengraph\/twitter', 'title', 10 );\n\t\t$this->action( 'rank_math\/opengraph\/twitter', 'description', 11 );\n\t\t$this->action( 'rank_math\/opengraph\/twitter', 'website', 14 );\n\n\t\tif ( ! post_password_required() ) {\n\t\t\t$this->action( 'rank_math\/opengraph\/twitter', 'image', 30 );\n\t\t}\n\n\t\tif ( is_singular() ) {\n\t\t\t$this->action( 'rank_math\/opengraph\/twitter', 'article_author', 15 );\n\t\t}\n\n\t\tparent::__construct();\n\t}\n\n\t\/**\n\t * Set `use_facebook` variable.\n\t *\/\n\tpublic function use_facebook() {\n\t\t$use_facebook = ( is_category() || is_tag() || is_tax() ) ? Helper::get_term_meta( 'twitter_use_facebook', 0, null, true ) :\n\t\t\tHelper::get_post_meta( 'twitter_use_facebook', Post::is_shop_page() ? Post::get_shop_page_id() : 0, true );\n\n\t\tif ( $use_facebook ) {\n\t\t\t$this->prefix = 'facebook';\n\t\t}\n\t}\n\n\t\/**\n\t * Display the Twitter card type.\n\t *\n\t * This defaults to summary but can be filtered using the <code>rank_math_twitter_card_type<\/code> filter.\n\t *\/\n\tpublic function type() {\n\t\t$this->determine_card_type();\n\t\t$this->sanitize_card_type();\n\n\t\t$this->tag( 'twitter:card', $this->type );\n\n\t\t$remove_tags = false;\n\t\tif ( is_singular() && ! is_front_page() && in_array( $this->type, [ 'app', 'player' ], true ) ) {\n\t\t\t$remove_tags = 'app' === $this->type;\n\t\t\t$this->action( 'rank_math\/opengraph\/twitter', $this->type, 15 );\n\t\t}\n\n\t\t$remove_tags = is_date() && in_array( $this->type, [ 'summary', 'summary_large_image' ], true );\n\t\tif ( $remove_tags ) {\n\t\t\t$this->remove_tags();\n\t\t}\n\t}\n\n\t\/**\n\t * Output App card.\n\t *\/\n\tpublic function app() {\n\n\t\t$this->tag( 'twitter:description', Helper::get_post_meta( 'twitter_app_description' ) );\n\t\t$this->tag( 'twitter:app:country', Helper::get_post_meta( 'twitter_app_country' ) );\n\n\t\t\/\/ iPhone.\n\t\t$this->tag( 'twitter:app:name:iphone', Helper::get_post_meta( 'twitter_app_iphone_name' ) );\n\t\t$this->tag( 'twitter:app:id:iphone', Helper::get_post_meta( 'twitter_app_iphone_id' ) );\n\t\t$this->tag( 'twitter:app:url:iphone', Helper::get_post_meta( 'twitter_app_iphone_url' ) );\n\n\t\t\/\/ iPad.\n\t\t$this->tag( 'twitter:app:name:ipad', Helper::get_post_meta( 'twitter_app_ipad_name' ) );\n\t\t$this->tag( 'twitter:app:id:ipad', Helper::get_post_meta( 'twitter_app_ipad_id' ) );\n\t\t$this->tag( 'twitter:app:url:ipad', Helper::get_post_meta( 'twitter_app_ipad_url' ) );\n\n\t\t\/\/ Google Play.\n\t\t$this->tag( 'twitter:app:name:googleplay', Helper::get_post_meta( 'twitter_app_googleplay_name' ) );\n\t\t$this->tag( 'twitter:app:id:googleplay', Helper::get_post_meta( 'twitter_app_googleplay_id' ) );\n\t\t$this->tag( 'twitter:app:url:googleplay', Helper::get_post_meta( 'twitter_app_googleplay_url' ) );\n\t}\n\n\t\/**\n\t * Output player card.\n\t *\/\n\tpublic function player() {\n\t\t$this->tag( 'twitter:player', Helper::get_post_meta( 'twitter_player_url' ) );\n\n\t\t$size = Helper::get_post_meta( 'twitter_player_size' );\n\t\tif ( $size ) {\n\t\t\t$size = Arr::from_string( $size, 'x' );\n\t\t\tif ( isset( $size[1] ) ) {\n\t\t\t\t$twitter_meta['twitter:player:width']  = (int) $size[0];\n\t\t\t\t$twitter_meta['twitter:player:height'] = (int) $size[1];\n\t\t\t}\n\t\t}\n\t\t$this->tag( 'twitter:player:stream', Helper::get_post_meta( 'twitter_player_stream' ) );\n\t\t$this->tag( 'twitter:player:stream:content_type', Helper::get_post_meta( 'twitter_player_stream_ctype' ) );\n\t}\n\n\t\/**\n\t * Output the title.\n\t *\/\n\tpublic function title() {\n\t\t$this->tag( 'twitter:title', trim( $this->get_title() ) );\n\t}\n\n\t\/**\n\t * Output the description.\n\t *\/\n\tpublic function description() {\n\t\t$this->tag( 'twitter:description', trim( $this->get_description() ) );\n\t}\n\n\t\/**\n\t * Output the Twitter account for the site.\n\t *\/\n\tpublic function website() {\n\t\t$this->site = Helper::get_settings( 'titles.twitter_author_names' );\n\t\tif ( Str::is_non_empty( $this->site ) ) {\n\t\t\t$this->tag( 'twitter:site', '@' . $this->site );\n\t\t}\n\t}\n\n\t\/**\n\t * Output the image for Twitter.\n\t *\n\t * Only used when OpenGraph is inactive or Summary Large Image card is chosen.\n\t *\/\n\tpublic function image() {\n\t\t$images = new Image( false, $this );\n\t\tforeach ( $images->get_images() as $image_url => $image_meta ) {\n\t\t\t$overlay = $this->get_overlay_image( $this->prefix );\n\t\t\tif ( $overlay && ! empty( $image_meta['id'] ) ) {\n\t\t\t\t$secret    = $images->generate_secret( $image_meta['id'], $overlay );\n\t\t\t\t$image_url = admin_url( \"admin-ajax.php?action=rank_math_overlay_thumb&id={$image_meta['id']}&type={$overlay}&hash={$secret}\" );\n\t\t\t}\n\n\t\t\t$this->tag( 'twitter:image', esc_url_raw( $image_url ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Outputs the authors twitter handle.\n\t *\/\n\tpublic function article_author() {\n\t\t$author = Helper::get_user_meta( 'twitter_author', $GLOBALS['post']->post_author );\n\t\t$author = $author ? $author : get_user_meta( $GLOBALS['post']->post_author, 'twitter', true );\n\t\t$author = $this->get_twitter_id( ltrim( trim( $author ), '@' ) );\n\n\t\tif ( Str::is_non_empty( $author ) ) {\n\t\t\t$this->tag( 'twitter:creator', '@' . $author );\n\t\t} elseif ( Str::is_non_empty( $this->site ) ) {\n\t\t\t$this->tag( 'twitter:creator', '@' . $this->site );\n\t\t}\n\t}\n\n\t\/**\n\t * Determines the twitter card type for the current page\n\t *\/\n\tprivate function determine_card_type() {\n\t\t$this->type = Helper::get_post_meta( 'twitter_card_type' );\n\t\t$this->type = $this->type ? $this->type : Helper::get_settings( 'titles.twitter_card_type' );\n\n\t\t\/**\n\t\t * Allow changing the Twitter Card type as output in the Twitter card.\n\t\t *\n\t\t * @param string $this->type\n\t\t *\/\n\t\t$this->type = $this->do_filter( 'opengraph\/twitter\/card_type', $this->type );\n\t}\n\n\t\/**\n\t * Determines whether the card type is of a type currently allowed by Twitter\n\t *\n\t * @link https:\/\/dev.twitter.com\/cards\/types\n\t *\/\n\tprivate function sanitize_card_type() {\n\t\tif ( ! in_array( $this->type, [ 'summary', 'summary_large_image', 'app', 'player' ], true ) ) {\n\t\t\t$this->type = 'summary';\n\t\t}\n\t}\n\n\t\/**\n\t * Checks if the given ID is actually an ID or a URL and if URL, distills the ID from it.\n\t *\n\t * Solves issues with filters returning URLs and theme's\/other plugins also adding a user meta\n\t * twitter field which expects URL rather than an ID (which is what we expect).\n\t *\n\t * @param string $id Twitter ID or URL.\n\t *\n\t * @return string|bool Twitter ID or false if it failed to get a valid Twitter ID.\n\t *\/\n\tprivate function get_twitter_id( $id ) {\n\t\tif ( preg_match( '`([A-Za-z0-9_]{1,25})$`', $id, $match ) ) {\n\t\t\treturn $match[1];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Remove archive tags.\n\t *\/\n\tprivate function remove_tags() {\n\t\t$this->remove_action( 'rank_math\/opengraph\/twitter', 'title', 10 );\n\t\t$this->remove_action( 'rank_math\/opengraph\/twitter', 'description', 11 );\n\t\t$this->remove_action( 'rank_math\/opengraph\/twitter', 'image', 30 );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.239.php","ext":"php","size":1705,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.239.\n *\n * @since      1.0.239\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\KB;\nuse RankMath\\Helper;\nuse RankMath\\Helpers\\Str;\nuse RankMath\\Google\\Analytics;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Displays an admin notice to users with a Universal Analytics (UA) property, informing them to update to Google Analytics 4 (GA4).\n *\/\nfunction rank_math_1_0_239_force_to_connect_ga4() {\n\tif ( ! Analytics::is_analytics_connected() ) {\n\t\treturn;\n\t}\n\n\t$analytics = get_option( 'rank_math_google_analytic_options' );\n\n\tif ( ! isset( $analytics['property_id'] ) || ! Str::starts_with( 'UA-', $analytics['property_id'] ) ) {\n\t\treturn;\n\t}\n\n\tHelper::add_notification(\n\t\tsprintf(\n\t\t\t\/\/ Translators: placeholders are opening and closing tags for connect analytics setting and using ga4 property doc.\n\t\t\t__( 'Universal Analytics (UA) is no longer supported. Please connect your Google Analytics GA4 account by navigating to %1$sGeneral Settings \u2192 Analytics%2$s. For more details, refer to this guide: %3$sHow to Use Google Analytics 4 (GA4) Property with Rank Math%4$s.', 'rank-math' ),\n\t\t\t'<a href=\"' . esc_url( Helper::get_admin_url( 'options-general#setting-panel-analytics' ) ) . '\">',\n\t\t\t'<\/a>',\n\t\t\t'<a href=\"' . KB::get( 'using-ga4', 'Analytics GA4 KB' ) . '\" target=\"_blank\">',\n\t\t\t'<\/a>'\n\t\t),\n\t\t[\n\t\t\t'id'      => 'upgrade-ua-to-ga4',\n\t\t\t'type'    => 'error',\n\t\t\t'classes' => 'is-dismissible',\n\t\t]\n\t);\n}\n\nrank_math_1_0_239_force_to_connect_ga4();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.201.php","ext":"php","size":1277,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.201\n *\n * @since      1.0.201\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Add default values for the new Content AI settings.\n *\/\nfunction rank_math_1_0_201_content_ai_settings() {\n\t$all_opts                       = rank_math()->settings->all_raw();\n\t$general                        = $all_opts['general'];\n\t$general['content_ai_country']  = 'all';\n\t$general['content_ai_tone']     = 'Formal';\n\t$general['content_ai_audience'] = 'General Audience';\n\t$general['content_ai_language'] = Helper::content_ai_default_language();\n\n\tHelper::update_all_settings( $general, null, null );\n\trank_math()->settings->reset();\n\n\t\/\/ Update credits to array format. This is needed in case the call to credits endpoint on server fails for some reason.\n\tHelper::update_credits( get_option( 'rank_math_ca_credits' ) );\n\n\t\/\/ Fetch credits, plan & refresh date.\n\tif ( Helper::is_site_connected() ) {\n\t\tHelper::get_content_ai_credits( true );\n\t}\n}\nrank_math_1_0_201_content_ai_settings();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.104.php","ext":"php","size":842,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.104\n *\n * @since      1.0.104\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Update TOC block settings on existing sites.\n *\/\nfunction rank_math_1_0_104_toc_block_settings() {\n\t$all_opts                        = rank_math()->settings->all_raw();\n\t$general                         = $all_opts['general'];\n\t$general['toc_block_title']      = 'Table of Contents';\n\t$general['toc_block_list_style'] = 'ul';\n\n\tHelper::update_all_settings( $general, null, null );\n\trank_math()->settings->reset();\n}\nrank_math_1_0_104_toc_block_settings();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.107.3.php","ext":"php","size":831,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.107.3\n *\n * @since      1.0.107.3\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Replace %searchphrase% variable to %search_query%\n *\/\nfunction rank_math_1_0_107_3_replace_search_variable() {\n\t$all_opts = rank_math()->settings->all_raw();\n\t$titles   = $all_opts['titles'];\n\n\t$titles['search_title'] = str_replace( '%searchphrase%', '%search_query%', $titles['search_title'] );\n\n\tRankMath\\Helper::update_all_settings( null, $titles, null );\n\trank_math()->settings->reset();\n}\nrank_math_1_0_107_3_replace_search_variable();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.86.php","ext":"php","size":771,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.86\n *\n * @since      1.0.86\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Update Analytics Stats on existing sites.\n *\/\nfunction rank_math_1_0_86_update_analytics_stats() {\n\t$all_opts                   = rank_math()->settings->all_raw();\n\t$general                    = $all_opts['general'];\n\t$general['analytics_stats'] = 'on';\n\n\tHelper::update_all_settings( $general, null, null );\n\trank_math()->settings->reset();\n}\nrank_math_1_0_86_update_analytics_stats();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.201.1.php","ext":"php","size":591,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.201.1\n *\n * @since      1.0.201.1\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Remove the schedule event used to update the prompts.\n *\/\nfunction rank_math_1_0_201_1_remove_prompt_event() {\n\twp_clear_scheduled_hook( 'rank_math\/content-ai\/update_prompts' );\n}\nrank_math_1_0_201_1_remove_prompt_event();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.250.php","ext":"php","size":980,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.250\n *\n * @since      1.0.250\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Update LLMS Post types on existing sites.\n *\/\nfunction rank_math_1_0_250_update_llms_post_types() {\n\t$post_types = Helper::get_accessible_post_types();\n\tif ( isset( $post_types['attachment'] ) ) {\n\t\tunset( $post_types['attachment'] );\n\t}\n\n\tif ( empty( $post_types ) ) {\n\t\treturn;\n\t}\n\n\t$all_opts                   = rank_math()->settings->all_raw();\n\t$general                    = $all_opts['general'];\n\t$general['llms_post_types'] = array_keys( $post_types );\n\n\tHelper::update_all_settings( $general, null, null );\n\trank_math()->settings->reset();\n}\nrank_math_1_0_250_update_llms_post_types();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.103.1.php","ext":"php","size":826,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.103.1\n *\n * @since      1.0.103.1\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Enable author sitemap.\n *\/\nfunction rank_math_1_0_103_1_update_html_sitemap() {\n\t$all_opts         = rank_math()->settings->all_raw();\n\t$sitemap_settings = $all_opts['sitemap'];\n\tif ( isset( $sitemap_settings['authors_sitemap'] ) ) {\n\t\treturn;\n\t}\n\n\t$sitemap_settings['authors_sitemap'] = 'on';\n\n\tHelper::update_all_settings( null, null, $sitemap_settings );\n\trank_math()->settings->reset();\n}\nrank_math_1_0_103_1_update_html_sitemap();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.84.php","ext":"php","size":2272,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.84\n *\n * @since      1.0.84\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Start the scheduled URL Inspections if Analytics module is enabled.\n *\/\nfunction rank_math_1_0_84_init_url_inspections() {\n\t$active_modules = get_option( 'rank_math_modules', [] );\n\tif ( ! is_array( $active_modules ) || ! in_array( 'analytics', $active_modules, true ) ) {\n\t\treturn;\n\t}\n\n\t\/\/ Start first fetch in 15 minutes.\n\t$start = time() + ( 15 * MINUTE_IN_SECONDS );\n\tas_schedule_single_action( $start, 'rank_math\/analytics\/workflow', [ 'inspections', 0, null, null ], 'rank-math' );\n}\n\nrank_math_1_0_84_init_url_inspections();\n\n\/**\n * Fix collations for the Analytics tables.\n *\/\nfunction rank_math_1_0_84_check_analytics_collations() {\n\t$tables = [\n\t\t'rank_math_analytics_ga',\n\t\t'rank_math_analytics_gsc',\n\t\t'rank_math_analytics_keyword_manager',\n\t];\n\n\t$objects_coll = \\RankMath\\Helpers\\DB::get_table_collation( 'rank_math_analytics_objects' );\n\tforeach ( $tables as $table ) {\n\t\t\\RankMath\\Helpers\\DB::check_collation( $table, 'all', $objects_coll );\n\t}\n}\n\n\/**\n * Run collation fixer on multisite or simple install.\n *\n * @return void\n *\/\nfunction rank_math_1_0_84_check_collations() {\n\tif ( is_multisite() ) {\n\t\tforeach ( get_sites() as $site ) {\n\t\t\tswitch_to_blog( $site->blog_id );\n\t\t\trank_math_1_0_84_check_analytics_collations();\n\t\t\trestore_current_blog();\n\t\t}\n\n\t\treturn;\n\t}\n\n\trank_math_1_0_84_check_analytics_collations();\n}\n\nrank_math_1_0_84_check_collations();\n\n\/**\n * Enable the Index Status tab by default.\n *\/\nfunction rank_math_1_0_84_update_analytics_options() {\n\t$active_modules = get_option( 'rank_math_modules', [] );\n\tif ( ! is_array( $active_modules ) || ! in_array( 'analytics', $active_modules, true ) ) {\n\t\treturn;\n\t}\n\n\t$options = get_option( 'rank_math_google_analytic_profile' );\n\tif ( ! is_array( $options ) ) {\n\t\treturn;\n\t}\n\n\t$options['enable_index_status'] = true;\n\tupdate_option( 'rank_math_google_analytic_profile', $options );\n}\n\nrank_math_1_0_84_update_analytics_options();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.238.php","ext":"php","size":754,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.238.\n *\n * @since      1.0.238\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Flush rewrite rules.\n *\/\nfunction rank_math_1_0_238_flush_rules() {\n\tif (\n\t\tHelper::is_woocommerce_active() &&\n\t\tHelper::is_module_active( 'woocommerce' ) && (\n\t\tHelper::get_settings( 'general.wc_remove_category_base' ) ||\n\t\tHelper::get_settings( 'general.wc_remove_category_parent_slugs' ) )\n\t) {\n\t\tflush_rewrite_rules( true );\n\t}\n}\n\nrank_math_1_0_238_flush_rules();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.202.php","ext":"php","size":912,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.202.\n *\n * @since      1.0.202\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Convert English Language stored in Content AI settings to US English.\n *\/\nfunction rank_math_1_0_202_content_ai_convert_english_language() {\n\t$all_opts = rank_math()->settings->all_raw();\n\t$general  = $all_opts['general'];\n\tif ( ! empty( $general['content_ai_language'] ) && 'English' === $general['content_ai_language'] ) {\n\t\t$general['content_ai_language'] = 'US English';\n\t}\n\n\tHelper::update_all_settings( $general, null, null );\n\trank_math()->settings->reset();\n}\nrank_math_1_0_202_content_ai_convert_english_language();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.211.php","ext":"php","size":641,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.211.\n *\n * @since      1.0.211\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Add value in options table to show a notification in Dashboard menu on existing setup.\n *\/\nfunction rank_math_1_0_211_content_ai_store_notification_option() {\n\tupdate_option( 'rank_math_view_modules', true, false );\n}\nrank_math_1_0_211_content_ai_store_notification_option();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.98.php","ext":"php","size":1979,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.98\n *\n * @since      1.0.98\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Get a group's ID based on its name\/slug.\n *\n * @param string $slug The string name of a group.\n *\n * @return int The group's ID, if it exists or is created, or 0 if it does not exist and is not created.\n *\/\nfunction rank_math_1_0_98_as_get_group_id( $slug ) {\n\tif ( empty( $slug ) ) {\n\t\treturn 0;\n\t}\n\n\tglobal $wpdb;\n\t$table    = $wpdb->prefix . 'actionscheduler_groups';\n\t$group_id = (int) $wpdb->get_var( $wpdb->prepare( \"SELECT group_id FROM {$table} WHERE slug=%s\", $slug ) );\n\n\treturn $group_id;\n}\n\n\/**\n * Fix Action Scheduler groups.\n *\/\nfunction rank_math_1_0_98_fix_as_groups() {\n\t$workflow_group_id    = rank_math_1_0_98_as_get_group_id( 'workflow' );\n\t$inspections_group_id = rank_math_1_0_98_as_get_group_id( 'rank_math\/analytics\/get_inspections_data' );\n\t$rank_math_group_id   = rank_math_1_0_98_as_get_group_id( 'rank-math' );\n\n\tif ( 0 === $rank_math_group_id ) {\n\t\treturn;\n\t}\n\n\t\/\/ In the actions table, update the group_id for all actions in the 'workflow' & 'rank_math\/analytics\/get_inspections_data' groups to the 'rank-math' group.\n\tglobal $wpdb;\n\t$actions_table = $wpdb->prefix . 'actionscheduler_actions';\n\t$wpdb->query( $wpdb->prepare( \"UPDATE {$actions_table} SET group_id=%d WHERE group_id=%d OR group_id=%d\", $rank_math_group_id, $workflow_group_id, $inspections_group_id ) );\n\n\t\/\/ Delete the 'workflow' & 'rank_math\/analytics\/get_inspections_data' groups.\n\t$groups_table = $wpdb->prefix . 'actionscheduler_groups';\n\t$wpdb->query( $wpdb->prepare( \"DELETE FROM {$groups_table} WHERE group_id=%d OR group_id=%d\", $workflow_group_id, $inspections_group_id ) );\n}\n\nrank_math_1_0_98_fix_as_groups();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.251.php","ext":"php","size":620,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.251\n *\n * @since      1.0.251\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Update code needed to support React migration.\n *\/\nfunction rank_math_1_0_251_migrate_react_settings() {\n\t\\RankMath\\Status\\Backup::create_backup();\n\tupdate_option( 'rank_math_react_settings_ui', 'on', false );\n}\nrank_math_1_0_251_migrate_react_settings();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.110.php","ext":"php","size":859,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.110\n *\n * @since      1.0.110\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\nuse RankMath\\Helper;\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Update the deprecated schema type Attorney and used it as LegalService.\n *\/\nfunction rank_math_1_0_110_update_local_business_type() {\n\t$all_opts = rank_math()->settings->all_raw();\n\t$titles   = $all_opts['titles'];\n\n\tif ( 'Attorney' !== $titles['local_business_type'] ) {\n\t\treturn;\n\t}\n\n\t$titles['local_business_type'] = 'LegalService';\n\n\tHelper::update_all_settings( null, $titles, null );\n\trank_math()->settings->reset();\n}\nrank_math_1_0_110_update_local_business_type();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.89.php","ext":"php","size":928,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.89\n *\n * @since      1.0.89\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Convert keywords used in Content AI to lower case on existing sites.\n *\/\nfunction rank_math_1_0_89_update_contentai_data() {\n\t$data = get_option( 'rank_math_ca_data' );\n\tif ( empty( $data ) ) {\n\t\treturn;\n\t}\n\n\tforeach ( $data as $country => $keywords ) {\n\t\tif ( empty( $keywords ) ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t$ret = [];\n\t\tforeach ( $keywords as $key => $keyword ) {\n\t\t\t$ret[ mb_strtolower( $key ) ] = $keyword;\n\t\t}\n\n\t\tif ( ! empty( $ret ) ) {\n\t\t\t$data[ $country ] = $ret;\n\t\t}\n\t}\n\n\tupdate_option( 'rank_math_ca_data', $data );\n}\n\nrank_math_1_0_89_update_contentai_data();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.232.php","ext":"php","size":676,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.232.\n *\n * @since      1.0.232\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Add indexes to the internal links table (target_post_id column).\n *\/\nfunction rank_math_1_0_232_internal_links_table_indexes() {\n\tglobal $wpdb;\n\n\t$wpdb->query( \"ALTER TABLE {$wpdb->prefix}rank_math_internal_links ADD INDEX target_post_id (target_post_id)\" );\n}\nrank_math_1_0_232_internal_links_table_indexes();\n"},{"base":"plugins","rel":"seo-by-rank-math\/includes\/updates\/update-1.0.237.php","ext":"php","size":793,"mtime":1757324689,"type":"text","content":"<?php \/\/phpcs:ignore WordPress.Files.FileName.NotHyphenatedLowercase -- This filename format is intentionally used to match the plugin version.\n\/**\n * The Updates routine for version 1.0.237.\n *\n * @since      1.0.237\n * @package    RankMath\n * @subpackage RankMath\\Updates\n * @author     Rank Math <support@rankmath.com>\n *\/\n\ndefined( 'ABSPATH' ) || exit;\n\n\/**\n * Alter the redirections table structure.\n *\/\nfunction rank_math_1_0_237_update_redirection_structure() {\n\t\/\/ Early Bail if redirections table doesn't exist.\n\tif ( ! \\RankMath\\Helpers\\DB::check_table_exists( 'rank_math_redirections' ) ) {\n\t\treturn;\n\t}\n\n\tglobal $wpdb;\n\t$wpdb->query( \"ALTER TABLE {$wpdb->prefix}rank_math_redirections MODIFY COLUMN sources LONGTEXT NOT NULL\" );\n}\nrank_math_1_0_237_update_redirection_structure();\n"},{"base":"plugins","rel":"seo-by-rank-math\/uninstall.php","ext":"php","size":3591,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Fired when the plugin is uninstalled.\n *\n * When populating this file, consider the following flow\n * of control:\n *\n * - This method should be static\n * - Check if the $_REQUEST content actually is the plugin name\n * - Run an admin referrer check to make sure it goes through authentication\n * - Verify the output of $_GET makes sense\n * - Repeat with other user roles. Best directly by using the links\/query string parameters.\n * - Repeat things for multisite. Once for a single site in the network, once sitewide.\n *\n * This file may be updated more in future version of the Boilerplate; however, this is the\n * general skeleton and outline for how the file should work.\n *\n * @link    https:\/\/rankmath.com\n * @since   0.9.0\n * @package RANK_MATH\n *\/\n\n\/\/ If uninstall not called from WordPress, then exit.\nif ( ! defined( 'WP_UNINSTALL_PLUGIN' ) ) {\n\texit;\n}\n\n\/\/ Clear scheduled tasks.\nif ( class_exists( 'ActionScheduler_QueueRunner' ) ) {\n\tActionScheduler_QueueRunner::instance()->unhook_dispatch_async_request();\n}\nif ( class_exists( 'ActionScheduler_DBStore' ) ) {\n\tActionScheduler_DBStore::instance()->cancel_actions_by_group( 'rank-math' );\n}\n\n\/\/ Set rank_math_clear_data_on_uninstall to TRUE to delete all data on uninstall.\nif ( true === apply_filters( 'rank_math_clear_data_on_uninstall', false ) ) {\n\n\tif ( ! is_multisite() ) {\n\t\trank_math_remove_data();\n\t\treturn;\n\t}\n\n\tglobal $wpdb;\n\n\t$blog_ids = $wpdb->get_col( \"SELECT blog_id FROM $wpdb->blogs WHERE archived = '0' AND spam = '0' AND deleted = '0'\" );\n\tif ( ! empty( $blog_ids ) ) {\n\t\tforeach ( $blog_ids as $site_id ) {\n\t\t\tswitch_to_blog( $site_id );\n\t\t\trank_math_remove_data();\n\t\t\trestore_current_blog();\n\t\t}\n\t}\n}\n\n\/**\n * Removes ALL plugin data\n *\n * @since 1.0.35\n *\/\nfunction rank_math_remove_data() {\n\t\/\/ Delete all options.\n\trank_math_delete_options();\n\n\t\/\/ Delete meta for post, user and term.\n\trank_math_delete_meta( 'post' );\n\trank_math_delete_meta( 'user' );\n\trank_math_delete_meta( 'term' );\n\n\t\/\/ Drop Tables.\n\trank_math_drop_table( '404_logs' );\n\trank_math_drop_table( 'redirections' );\n\trank_math_drop_table( 'redirections_cache' );\n\trank_math_drop_table( 'internal_links' );\n\trank_math_drop_table( 'internal_meta' );\n\trank_math_drop_table( 'analytics_gsc' );\n\trank_math_drop_table( 'analytics_objects' );\n\trank_math_drop_table( 'analytics_inspections' );\n\n\t\/\/ Remove Capabilities.\n\t\/**\n\t * PSR-4 Autoload.\n\t *\/\n\tinclude __DIR__ . '\/vendor\/autoload.php';\n\n\t\\RankMath\\Role_Manager\\Capability_Manager::get()->remove_capabilities();\n\n\t\/\/ Clear any cached data that has been removed.\n\twp_cache_flush();\n}\n\n\/**\n * Delete options.\n *\n * @return void\n *\/\nfunction rank_math_delete_options() {\n\tglobal $wpdb;\n\n\t$where = $wpdb->prepare( 'WHERE option_name LIKE %s OR option_name LIKE %s', '%' . $wpdb->esc_like( 'rank-math' ) . '%', '%' . $wpdb->esc_like( 'rank_math' ) . '%' );\n\t$wpdb->query( \"DELETE FROM {$wpdb->prefix}options {$where}\" ); \/\/ phpcs:ignore\n}\n\n\/**\n * Delete post meta.\n *\n * @param string $table Table name.\n * @return void\n *\/\nfunction rank_math_delete_meta( $table = 'post' ) {\n\tglobal $wpdb;\n\n\t$where = $wpdb->prepare( 'WHERE meta_key LIKE %s OR meta_key LIKE %s', '%' . $wpdb->esc_like( 'rank-math' ) . '%', '%' . $wpdb->esc_like( 'rank_math' ) . '%' );\n\t$wpdb->query( \"DELETE FROM {$wpdb->prefix}{$table}meta {$where}\" ); \/\/ phpcs:ignore\n}\n\n\/**\n * Drop table from database\n *\n * @param string $name Name of table.\n * @return void\n *\/\nfunction rank_math_drop_table( $name ) {\n\tglobal $wpdb;\n\n\t$wpdb->query( \"DROP TABLE IF EXISTS {$wpdb->prefix}rank_math_{$name}\" ); \/\/ phpcs:ignore\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/readme.txt","ext":"txt","size":25636,"mtime":1757324689,"type":"text","content":"=== Rank Math SEO \u2013 AI SEO Tools to Dominate SEO Rankings ===\nContributors: rankmath\nPlugin link: https:\/\/rankmath.com\/?utm_source=LP&utm_campaign=WP\nTags: seo, WordPress SEO, google search console, schema, redirection, \nTested up to: 6.8\nRequires at least: 6.3\nRequires PHP: 7.4\nStable tag: 1.0.252.1\nLicense: GPLv3 or later\nLicense URI: https:\/\/www.gnu.org\/licenses\/gpl-3.0.txt\n\nRank Math SEO is the best WordPress SEO plugin with the features of many SEO and AI SEO tools in a single package to help multiply your SEO traffic.\n\n== Description ==\n\n### Rank Math SEO \u2013 Best SEO Plugin for WordPress ###\n**1st WordPress SEO Plugin to use AI (Artificial Intelligence)** \ud83e\uddbe\n\u2605\u2605\u2605\u2605\u2605<br>\n\n**SEO is the most consistent source of traffic for any website.** We created <a href=\"https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/?utm_source=LP&utm_campaign=WP\" target=\"_blank\">**Rank Math, a WordPress SEO plugin**<\/a> with AI SEO features better than ChatGPT, to help every website owner get access to the SEO tools they need to improve their SEO and attract more traffic to their website.\n## <a href=\"https:\/\/demo.rankmath.com\/wp-admin\/admin.php?page=rank-math-wizard\" target=\"_blank\">Try The FREE Demo of Rank Math<\/a> ##\n\n[youtube https:\/\/www.youtube.com\/watch?v=NgeaqIy2OB0]\n\n<a href=\"https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/?utm_source=LP&utm_campaign=WP#features\" target=\"_blank\">Features<\/a> | <a href=\"https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/?utm_source=LP&utm_campaign=WP#reasons\" target=\"_blank\">Why Choose Rank Math?<\/a> | <a href=\"https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/?utm_source=LP&utm_campaign=WP#comparison\" target=\"_blank\">Compare<\/a> | <a href=\"https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/?utm_source=LP&utm_campaign=WP#screenshots\" target=\"_blank\">Screenshots<\/a> | <a href=\"https:\/\/rankmath.com\/wordpress\/plugin\/seo-suite\/?utm_source=LP&utm_campaign=WP#benefits\" target=\"_blank\">Benefits<\/a>\n\nSEO might be the best and most **consistent source of traffic** for one's website, but it's not without its quirks. The constant process of optimizing your posts for SEO can sometimes take more time than actually writing the content. **If you always feel you can do more on the SEO** front for your website but don't have the time, then **Rank Math SEO is what you're looking for.**\n\nIts host of **intelligent features** brings top SEO capabilities in your hands that were previously out of reach. The **smart automation** features give you the **power of an entire SEO team** with just a few clicks. A **well-thought-out design, powerful features, and years of development** make Rank Math a game-changing SEO plugin that will level the SEO playing field in your favor to help increase traffic.\n\n### Exclusive Content AI. Write Highly Optimized SEO Content ###\n\n[youtube https:\/\/www.youtube.com\/watch?v=tm_dhgbIWow]\n\n\u279c Use AI SEO to write better than ChatGPT\n\u279c Dynamic Suggestions\n\u279c Intelligent Recommendations\n\u279c Intelligent Questions (With Schema Markup)\n\u279c Smart Link Suggestions\n\u279c Extra Keyword Info\n\u279c Related Keywords\n\u279c Full Control via Role Manager\n\n### Rank Math beats all of its competitors, hands down. ###\n\nSee the features that are exclusive to the Rank Math plugin and understand why Rank Math is the **Best SEO Plugin for WordPress**.\n\n* **Setup Wizard (Easy to follow)**\nRank Math practically configures itself. Rank Math features a [step-by-step installation and configuration wizard](https:\/\/rankmath.com\/kb\/how-to-setup\/?utm_source=LP&utm_campaign=WP) that sets up SEO for WordPress perfectly.\n\n* **Google Schema Markup aka Rich Snippets Integrated**\nConfiguring Google Schema Markup, aka Rich Snippets, is now easy, thanks to Rank Math. With support for [16+ types of Schema Markups, aka Rich Snippets, including the Rating Schema,](https:\/\/rankmath.com\/kb\/rich-snippets\/?utm_source=LP&utm_campaign=WP#schema-types-offers-by-rank-math) you'll be able to optimize your posts in just a few clicks. \n\n* **Optimize Unlimited Keywords**\nUnlike other plugins, Rank Math lets you optimize your posts for **unlimited focus keywords** per post. 5 by default. Increase by adding this [filter](https:\/\/rankmath.com\/kb\/filters-hooks-api-developer\/#unlimited-keywords).\n\n* **Content AI**\nRank Math is the FIRST & ONLY SEO plugin that uses AI to help you write content. Your personal AI Assistant for creating SEO-friendly content. Our Content AI takes all the hassle out of writing. It ensures that the content you write is great not only for your visitors but for search engines (SEO) as well. [Learn how to use Content AI for writing SEO-optimized content that ranks](https:\/\/rankmath.com\/kb\/how-to-use-content-ai\/).\n\n* **Google Search Console Integration**\nRank Math saves you a ton of time by integrating with Google Search Console and displaying important information about your website right inside WordPress.\n\n* **Google Keyword Ranking**\nWith the Rank Math plugin, you can track your keyword rankings on Google.\n\n* **Google Analytics Integration**\nRank Math offers a one-click solution to install Google Analytics script without pasting anything manually anywhere. You can also exclude the Logged-in users.\n\n* **Optimal Settings Pre-Selected**\nConfiguring an SEO plugin takes time and can be confusing. Rank Math saves you the trouble with its optimal default settings, which are ideal for most websites and, if needed, can be changed.\n\n* **LSI Keyword Tool Integrated**\nRank Math's integrated LSI keyword tool gives you multiple keyword variations of your focus keyword, which helps you attract more traffic to your posts. A free account is needed.\n\n* **Advanced SEO Analysis Tool**\nWith just a single click, Rank Math can perform an SEO analysis for your website.\n\n* **30 Detailed SEO Tests**\nRank Math is designed to ultimately supercharge your website's SEO with its 30 detailed SEO tests. A free account is needed.\n\n* **Module Based System**\nRank Math has been designed with a module-based system, each of which can be enabled or disabled as per your needs, giving you extra speed and control.\n\n* **Smart Redirection Manager**\nRank Math's built-in smart redirection manager will help you create, manage, delete, enable, or disable redirects at scale.\n\n* **Local Business SEO**\nRank Math is designed to be used by global and local websites alike. With its local SEO features, local sites can stand out in search engine results like Google's and attract more traffic.\n\n* **SEO Optimized Breadcrumbs**\nRank Math can display SEO-optimized Breadcrumbs on all websites, even if the theme doesn't support Schema.org coding.\n\n* **404 Monitor**\nRank Math has a built-in 404 error monitor that helps you find and resolve 404 errors for a better user experience.\n\n* **Deep Content Analysis Tests**\nOn-page SEO is no longer a mystery with Rank Math's deep content analysis and precise recommendations.\n\n* **Internal Linking Suggestions**\nRank Math intelligently suggests other posts from your website for internal linking from your current posts, improving the chances of ranking higher in the SERPs.\n\n* **Role Manager**\nEven if you have multiple employees managing your website, you can precisely control what each of them has access to in Rank Math with its role manager.\n\n* **Multisite Ready**\nWhether you run a single WordPress website or an entire network of sites \u2013 we are ready for you. Rank Math fully supports the WordPress Multiuser project (WPMU).\n\n* **It has lightweight code compared to slow-loading in other SEO plugins.**\nEven with significantly more features than other plugins, Rank Math loads amazingly fast and keeps your website fast.\n\n### Why is Rank Math such a game-changer? ###\n\n* **Auto Configuration** \u2014 All you have to do is set a few options, and Rank Math will configure itself ideally for your website.\n\n* **Super Fast SEO Plugin** \u2014 Even after packing so many features, Rank Math has a negligible load on your server, thus making it one of the fastest SEO plugins for WordPress.\n\n* **Automatic Keyword Suggestions from Google** \u2014 Get keyword suggestions from Google as you start typing letters in the focus keyword field of Rank Math.\n\n* **New SEO Analyzer** \u2014 Rank Math's built-in SEO analysis will give you SEO recommendations that you'd typically spend hundreds of dollars to get.\n\n* **[Elementor SEO](https:\/\/rankmath.com\/blog\/elementor-seo\/)** \u2013 Deep integration with the Elementor Page builder. Now, you don\u2019t need to go back and forth between tabs to configure your page\u2019s SEO. Everything related to SEO for Elementor can be configured in the visual editor.\n\n* **[Divi SEO](https:\/\/rankmath.com\/blog\/divi-seo\/)** \u2013 One-of-a-kind integration with the Divi Page Builder and theme. Handle everything related to SEO from the page editor screen without jumping back to the default editor. This helps you optimize your website for SEO in real-time.\n\n* **Page Builder SEO** \u2013 The Rank Math plugin's content analysis works perfectly with popular page builders and themes like Oxygen Builder, WPBakery, Avada, Astra, Kadence, Themify, Beaver Builder, Page Builder Framework, Schema theme, Flothemes, OceanWP, etc.\n\n* **Image SEO** \u2013 With Rank Math's perfect solution to add ALT & Title tags on the fly, to optimize images, showing inside the content, and that too for FREE, there is no reason to choose any other SEO solution that does not provide all the essential SEO features.\n\n* **[WooCommerce SEO](https:\/\/rankmath.com\/blog\/woocommerce-seo\/)** \u2013 Optimizing your store products is easier with Rank Math. SEO Meta tags and Schema are automatically added but can be customized with total control. Rank Math has the most advanced SEO for WooCommerce.\n\n* **Google AMP SEO** \u2013 Accelerated Mobile Pages must be prepared for search engines. What better way to do that than letting Rank Math use your regular SEO details and optimizing AMPs based on that data?\n\n* **bbPress & BuddyPress SEO** \u2013 User-generated content in bbPress\/BuddyPress is optimized correctly, and Rank Math handles all the necessary SEO aspects. Q&A Schema is added to bbPress topics along with other essential meta tags.\n\n* **Quick Edit SEO Details** \u2013 Go through many posts\/pages quickly by ensuring they are optimized for search engines. Quickly edit multiple SEO fields at once using Rank Math.\n\n* **[Instant Indexing for Google](https:\/\/rankmath.com\/blog\/google-indexing-api\/)** \u2013 Instantly getting indexed by Google used to be reserved for huge brands and large websites. Not anymore. Just about anyone can take advantage of Google\u2019s Instant Indexing feature using Rank Math.\n\n* **Translation Plugins Support** \u2014 Rank Math works flawlessly with the top translation plugins like WPML, TranslatePress, Weglot, Polylang (not entirely compatible yet), etc., making it a perfect companion.\n\n* **XML Sitemap** \u2013 The Rank Math plugin comes with a fast-loading Sitemap feature that works with different post types, including custom ones, and provides deep control. One can also generate a Locations KML file via a filter for Local Sitemap, & a WooCommerce Sitemap.\n\n* **1-Click Import From Yoast** \u2014 With a single click of your mouse, Rank Math can import all your settings from Yoast SEO & Yoast SEO Premium to itself. The transfer is instant, and you don't lose any SERP rankings as a result.\n\n* **1-Click Import From AIO SEO** \u2014 Rank Math can also import all your settings from AIO SEO & All in One SEO Pack Pro in a single click. The transfer is instant, and you don't lose any SERP rankings as a result.\n\n* **1-Click Import From All in One Schema, SEOPress, and Redirection** \u2014Rank Math allows seamless migration of settings from plugins like All In One Schema Rich Snippets, SEOPress (including Pro), and Redirection with just a single click, ensuring no loss of rankings or data during the transfer.\n\n### Who Can Benefit From Rank Math? ###\n\n#### Rank Math Plugin is perfect for: ####\n\u2714 Bloggers\n\u2714 eCommerce Store Owners\n\u2714 Niche Sites\n\u2714 Businesses\n\u2714 Local Businesses\n\u2714 Startups\n\u2714 The Real Estate\n\u2714 Artists & Photographers\n\u2714 The Solution Offerer\n\u2714 Directories\n\u2714 Vloggers (Video Bloggers)\n\u2714 Or any WordPress Website\n\n### Take a sneak peek into Rank Math\u2019s features ###\n\n#### Detailed Setup Tutorial ####\n[youtube https:\/\/www.youtube.com\/watch?v=cQLvCBVev3I]\n\n### BIG Publications are Raving About Rank Math ###\n**<a href=\"https:\/\/rankmath.com\/reviews\/\" target=\"_blank\">Rank Math Reviews<\/a>**\n\n[youtube https:\/\/www.youtube.com\/watch?v=cFI_jRVOQZk]\n\n[youtube https:\/\/www.youtube.com\/watch?v=rkZRtRizyUw]\n\n<a href=\"https:\/\/www.matthewwoodward.co.uk\/seo\/reviews\/rank-math\/?utm_campaign=Rank+Math\" target=\"_blank\">Rank Math Review \u2013 Why I Ditched Yoast For Rank Math<\/a>\n\n<a href=\"https:\/\/www.producthunt.com\/posts\/rank-math-seo\/?utm_campaign=Rank+Math\" target=\"_blank\">Rank Math on Product Hunt<\/a>\n\n<a href=\"https:\/\/www.suganthan.com\/blog\/rank-math-seo-plugin-review-from-an-seo-guy\/?utm_campaign=Rank+Math\" target=\"_blank\">Rank Math Plugin Review from an SEO Consultant<\/a>\n\nand many more\n\n\n## Check RANK MATH PRO WHICH MAKES SEO EASIER & FASTER  ##\n[youtube https:\/\/www.youtube.com\/watch?v=fq8Dnl09W5g]\n\n## <a href=\"https:\/\/rankmath.com\/free-vs-pro\/\" target=\"_blank\">Rank Math FREE VS PRO COMPARISON<\/a> ##\n\n## UNIQUE FEATURES OF Rank Math PRO ##\n\n**Google Analytics & Search Console Integration (The only SEO plugin that provides it)**\n\u2714 Integrated Google Analytics, AdSense & Search Console Data\n\u2714 Analyze the SEO Performance of Each Post & Page\n\u2714 See Top Winning\/Losing Posts & Keywords\n\u2714 Keep Track of Position History\n\u2714 Rank Tracker for Important Keywords\n\n**Schema aka Structured Data aka Rich Snippets. The BEST Schema Generator Available Online**\n\u2714 20+ Pre-defined Schema types (more than any other plugin) \u2013 \n\u2714 Import Schema from Other Websites\n\u2714 Advanced Schema Builder [Advanced SEOs can use this to create any complex Schema Markup]\n\u2714 Schema Templates for Automation\n\u2714 Conditional Schema Markup\n\u2714 Multiple Location Schema On Any Page (using the Shortcode)\n\n**Automation At Its BEST**\n\u2714 Automated Image SEO\n\u2714 Advanced Filtering for Images [https:\/\/i.rankmath.com\/zAUHHP]\n\u2714 Watermark Your images\n\u2714 Advanced Post filtering\n\u2714 Bulk Actions [index, noindex, redirect, etc.]\n\u2714 Quick Edit SEO Details\n\u2714 <a href=\"https:\/\/www.youtube.com\/watch?v=qW_h4cVE1O8\" targe=\"_blank\">Bulk Import SEO Meta Details Using CSV file<\/a>\n\u2714 Auto Detect Videos and Generate Schema Markup for Them\n\u2714 Auto Fetch Thumbnail, Duration of YouTube & Vimeo Videos\n\u2714 Automatically Flush Facebook Thumbnails\n\u2714 Open External Links in New Tabs\n\u2714 Nofollow External Links\n\u2714 `Noindex` Paginated, Archive, Search Result Pages\n\u2714 Instant Indexing for Bing & Yandex [Also Google using our <a href=\"https:\/\/rankmath.com\/blog\/google-indexing-api\/\" target=\"_blank\">Instant Indexing Plugin<\/a>]\n\n**WooCommerce SEO**\n\u2714 Automatic Schema for WooCommerce Products\n\u2714 Advanced Open Graph Tags for WooCommerce Products\n\u2714 Automatic NoIndex Hidden Products\n\u2714 Remove WooCommerce Product and Category Base\n\u2714 Add Custom Brands to Products\n\u2714 Add Global Identifier Schema Like GTIN\/MPN \u2013 Even to Variations\n\n**MANY MORE FEATURES**\n\u2714 PREMIUM 24x7x365 Dedicated Support Managers\n\u2714 MOST COMPETITIVE PRICING EVER!\n\n**<a href=\"https:\/\/rankmath.com\/pricing\/\" target=\"_blank\">CHEK ALL THE PREMIUM FEATURES AND PRICING HERE<\/a>**\n\n\n## CONNECT WITH THE TEAM AND SEO EXPERTS ##\n\n**<a href=\"https:\/\/www.facebook.com\/groups\/rankmathseopluginwordpress\/?utm_campaign=Rank+Math\" target=\"_blank\">JOIN FACEBOOK GROUP COMMUNITY<\/a>**: The purpose of this Facebook group is to have a collective place where the community can help each other, and we can get some feedback to improve Rank Math as well. Joining the group is also a great way to connect with like-minded people and share your SEO experience.\n\n= Branding Guideline =\nRank Math\u00ae SEO is a registered trademark. Please use the following format when mentioning the Rank Math plugin anywhere.\n* Rank Math [correct]\n* RankMath [incorrect]\n* Rankmath [incorrect]\n* rankmath [incorrect]\n* rankMath [incorrect]\n\n= Getting Started: =\n**<a href=\"https:\/\/rankmath.com\/kb\/how-to-setup\/?utm_source=LP&utm_campaign=WP\" target=\"_blank\">1. How to Setup Rank Math:<\/a>** Once you install Rank Math for the first time, you will be greeted with the Setup Wizard, which is discussed in detail here.\n\n**<a href=\"https:\/\/rankmath.com\/kb\/wordpress\/seo-suite\/?utm_source=LP&utm_campaign=WP\" target=\"_blank\">2. User Documentation:<\/a>** Although Rank Math is already easy to set up, we've put together tutorials, guides, and some knowledge bases to help you set up and get started with Rank Math.\n\n**<a href=\"https:\/\/translate.wordpress.org\/projects\/wp-plugins\/seo-by-rank-math\/?utm_campaign=Rank+Math\" target=\"_blank\">3. Contribute (Sharing is caring):<\/a>** If you are one of those caring hearts that want to help, please check the following resources:\n* [Rank Math's GitHub repository](https:\/\/github.com\/RankMath\/seo-by-rank-math\/) \u2013 Includes all the uncompressed files.\n* [Content Analyzer Code Files](https:\/\/github.com\/rankmath\/content-analyzer) \u2013 Includes all supplementary uncompressed files.\n* [Translation](https:\/\/translate.wordpress.org\/projects\/wp-plugins\/seo-by-rank-math\/) \u2013 If you want to translate the plugin into your local language.\n\n**<a href=\"https:\/\/support.rankmath.com\/?utm_source=LP&utm_campaign=WP\" target=\"_blank\">4. Support Ticket Forum:<\/a>** Our dedicated forum is where you can get support for any issues you face with Rank Math. In the forum, we'll also try to answer some SEO queries. User experience is important to us, and we aim to answer all the forum queries promptly.\n\n**[5. Frequently Asked Questions:](#faq-header)** Here, we\u2019ve answered the most commonly asked questions about Rank Math. The questions are related to features, pricing, and others.\n\n== Installation ==\n\n1. Visit `Plugins > Add New`\n2. Search for `Rank Math`\n3. Install Rank Math once it appears\n4. Activate Rank Math from your Plugins page.\n5. Go to \"after activation\" below.\n\n= Manually =\n\n1. Upload the `seo-by-rank-math` folder to the `\/wp-content\/plugins\/` directory\n2. Activate the Rank Math plugin through the 'Plugins' menu in WordPress\n3. Go to \"after activation\" below.\n\n= After Activation =\n\n1. You should see the Rank Math setup wizard. \n2. Go through the setup wizard and set up the plugin for your site. \n3. You\u2019re done! \n\n== Frequently Asked Questions ==\n\n= Can I transfer my SEO & Redirection settings from another plugin to Rank Math? =\nAbsolutely. Rank Math has a built-in feature to import SEO settings from popular SEO plugins like Yoast SEO, Yoast SEO Premium, AIO SEO Pack, All In One Schema Rich Snippets, and Redirection. Once you install Rank Math and run the setup wizard, you'll see a dedicated step where you'll get to import all your SEO settings to Rank Math.\n\n= What themes does Rank Math support? =\nRank Math has been tested with many WordPress themes and supports all major WordPress themes. Since we follow WordPress plugin development guidelines, you can rest assured that Rank Math will work perfectly, no matter your theme. If you've installed Rank Math and are facing issues, it might not be because of theme incompatibility. Please contact the support team by opening a support ticket in our support forum, and we will fix it for you.\n\n= What plugins is Rank Math compatible with? =\nRank Math has been designed using WordPress' strict plugin development guidelines and, therefore, is compatible with most plugins. However, you might get unexpected results if you use another SEO plugin that performs any of the functions that Rank Math does. We recommend that you disable or delete other SEO plugins for best results.\n\n= Will my website slow down if I Install Rank Math? =\nNo. Rank Math's code has been created and optimized for maximum performance. That is why using Rank Math on your website will not slow down your website. On the contrary, your website will perform better than ever with Rank Math, as it does the job of multiple plugins. Once you remove the unnecessary plugins from your website, your website's performance is sure to get better.\n\n= Is creating a Rank Math account needed to use the plugin? =\nNot at all. Creating a FREE Rank Math account is needed only to utilize our API, which allows you get automatic keyword suggestions from Google and run SEO Site Analysis inside WordPress. <a href=\"https:\/\/rankmath.com\/kb\/free-account-benefits\/\" target=\"_blank\">You can read more about that here.<\/a>\n\n= Will you set up Rank Math on my website? =\nRank Math is pretty easy to set up on your website. Apart from detailed instructions on installing Rank Math on our website, we've built a user-friendly setup wizard that will help you set up and configure Rank Math ideally for your website. If you face any issues even after using the setup wizard, please get in touch with the support team by sending an email to support@rankmath.com\n\n= Do I have to remove other SEO plugins if I install Rank Math? =\nThat is recommended. Rank Math is designed to be an all-in-one SEO plugin that handles everything SEO-related. If you use other SEO plugins with Rank Math on your website, not only will the performance of your website be negatively affected, but both plugins working together can produce unexpected SEO results.\n\n= I already use an SEO plugin. Can I use Rank Math on top of that plugin? =\nYou can, but we do not recommend it. Rank Math has all the functionalities you need in an SEO plugin. You can do that if you still prefer using another plugin for a specific feature. However, we recommend that you turn off that functionality of Rank Math to avoid potential conflicts\/issues.\n\n= Will I lose my rankings if I switch to Rank Math? =\nNo, you won't. When you install Rank Math, it will seamlessly import your settings from your current SEO plugin. Once the process is complete, the search engines won't notice a change on your website.\n\nIf you set up Rank Math from scratch, your search engine rankings will depend on how you configure it. But please be advised that Google and other search engines prefer good, helpful content over anything else.\n\n= Can I use Rank Math on a WordPress.com website? =\nYes, as the plugin is provided through WordPress.org, it is available on WordPress.com as well. However, you might be required to opt for the business plan on WordPress.com.\n\nGoogle is almost never willing to index all the pages and images available on a site. The number of pages and images that get indexed is based on the site's reputation and the quality of the content, among others.\n\n= I have further questions; how do I contact you? =\nPlease drop us an email at support@rankmath.com, and we will be more than happy to assist you.\n\n== Screenshots ==\n\n1. Exclusive AI Assistant for creating content that ranks.\n2. Fully integrated with the Gutenberg, aka Block Editor.\n3. Optimize Content without any hassle and work with the Classic Editor.\n4. Analyze your website's SEO with one click and fix the issues.\n5. Simple Setup Wizard with 1-Click Importer.\n6. Support for 15+ Rich Snippet types.\n7. No need to pay for any service when you can track keyword ranking changes from our own Search Console.\n8. Comes with in-built options for social media optimization.\n9. Rank Math Comes with a 404 monitor and an easy-to-use Redirection Manager.\n10. Ground-breaking Integration with Elementor Page Builder.\n11. Powerful XML Sitemap.\n12. Role Manager gives you full control. Useful for multi-author sites.\n13. Rank Math Comes with 15+ FREE modules.\n\n== Changelog ==\n\n= 1.0.252 [Aug 28, 2025] =\n- Added: Option to enable\/disable [Usage Tracking](https:\/\/rankmath.com\/kb\/usage-tracking\/) (disabled by default). Enabling this option would help us prioritize development of features that matter the most to you and to identify & resolve issues quickly.\n- Improved: Updated the endpoint used for [Generating Image Alt Text with Content AI](https:\/\/rankmath.com\/kb\/generate-alt-text-with-content-ai\/). Now, Content AI generates more accurate alt texts for your images.\n- Improved: Security of the plugin's Bulk Update SEO Data feature and the endpoint for retrieving the featured image ID to prevent potential exploitation by users with edit-page access, thanks to Abu Hurayra & Patchstack for responsibly disclosing the issue\n- Fixed: Extra space in [SERP Preview description](https:\/\/rankmath.com\/kb\/general-tab\/#the-preview-section) when text ends with an HTML tag\n- Fixed: [Post Titles Missing Focus Keywords test in SEO Analysis](https:\/\/rankmath.com\/kb\/seo-analysis\/#post-titles-missing-focus-keywords-test) was not working correctly when `&` is included in the Focus Keyword\n- Fixed: [Time to Read in Enhanced Slack Sharing](https:\/\/rankmath.com\/kb\/slack-enhanced-sharing\/#enhanced-sharing) was not accounting for shortcodes in content\n- Fixed: Untranslated strings on the Scheduled Actions page when the WooCommerce plugin is active\n- Fixed: Localized data from the plugin was included in the REST output\n- Fixed: [Rewrite Titles](https:\/\/rankmath.com\/kb\/titles-and-meta\/#rewrite-titles) option was always showing in Block themes even when not needed\n- Fixed: Incompatibility with LiteSpeed Cache plugin when Rewrite Titles option is enabled\n\n= 1.0.252.1 [Aug 29, 2025] =\n- Fixed: Incompatibility with the Inline CSS when the [Slack Enhanced Sharing option](https:\/\/rankmath.com\/kb\/titles-and-meta\/#pages-slack-enhanced-sharing) is enabled\n\nFull changelog can be found here - **[Rank Math changelog](https:\/\/rankmath.com\/changelog\/?utm_source=Plugin&utm_medium=Changelog&utm_campaign=WP)**\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/bootstrap.php","ext":"php","size":1915,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Bootstraps the CMB2 process\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\n\n\/**\n * Function to encapsulate the CMB2 bootstrap process.\n *\n * @since  2.2.0\n * @return void\n *\/\nfunction cmb2_bootstrap() {\n\n\tif ( is_admin() ) {\n\t\t\/**\n\t\t * Fires on the admin side when CMB2 is included\/loaded.\n\t\t *\n\t\t * In most cases, this should be used to add metaboxes. See example-functions.php\n\t\t *\/\n\t\tdo_action( 'cmb2_admin_init' );\n\t}\n\n\t\/**\n\t * Fires when CMB2 is included\/loaded\n\t *\n\t * Can be used to add metaboxes if needed on the front-end or WP-API (or the front and backend).\n\t *\/\n\tdo_action( 'cmb2_init' );\n\n\t\/**\n\t * For back-compat. Does the dirty-work of instantiating all the\n\t * CMB2 instances for the cmb2_meta_boxes filter\n\t *\n\t * @since  2.0.2\n\t *\/\n\t$cmb_config_arrays = apply_filters( 'cmb2_meta_boxes', array() );\n\tforeach ( (array) $cmb_config_arrays as $cmb_config ) {\n\t\tnew CMB2( $cmb_config );\n\t}\n\n\t\/**\n\t * Fires after all CMB2 instances are created\n\t *\/\n\tdo_action( 'cmb2_init_before_hookup' );\n\n\t\/**\n\t * Get all created metaboxes, and instantiate CMB2_Hookup\n\t * on metaboxes which require it.\n\t *\n\t * @since  2.0.2\n\t *\/\n\tforeach ( CMB2_Boxes::get_all() as $cmb ) {\n\n\t\t\/**\n\t\t * Initiates the box \"hookup\" into WordPress.\n\t\t *\n\t\t * Unless the 'hookup' box property is `false`, the box will be hooked in as\n\t\t * a post\/user\/comment\/option\/term box.\n\t\t *\n\t\t * And if the 'show_in_rest' box property is set, the box will be hooked\n\t\t * into the CMB2 REST API.\n\t\t *\n\t\t * The dynamic portion of the hook name, $cmb->cmb_id, is the box id.\n\t\t *\n\t\t * @since 2.2.6\n\t\t *\n\t\t * @param array $cmb The CMB2 object to hookup.\n\t\t *\/\n\t\tdo_action( \"cmb2_init_hookup_{$cmb->cmb_id}\", $cmb );\n\t}\n\n\t\/**\n\t * Fires after CMB2 initiation process has been completed\n\t *\/\n\tdo_action( 'cmb2_after_init' );\n}\n\n\/* End. That's it, folks! *\/\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Field.php","ext":"php","size":46861,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 field objects\n *\n * @since  1.1.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\n * @method string _id()\n * @method string type()\n * @method mixed fields()\n *\/\nclass CMB2_Field extends CMB2_Base {\n\n\t\/**\n\t * The object properties name.\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tprotected $properties_name = 'args';\n\n\t\/**\n\t * Field arguments\n\t *\n\t * @var   mixed\n\t * @since 1.1.0\n\t *\/\n\tpublic $args = array();\n\n\t\/**\n\t * Field group object or false (if no group)\n\t *\n\t * @var   mixed\n\t * @since 1.1.0\n\t *\/\n\tpublic $group = false;\n\n\t\/**\n\t * Field meta value\n\t *\n\t * @var   mixed\n\t * @since 1.1.0\n\t *\/\n\tpublic $value = null;\n\n\t\/**\n\t * Field meta value\n\t *\n\t * @var   mixed\n\t * @since 1.1.0\n\t *\/\n\tpublic $escaped_value = null;\n\n\t\/**\n\t * Grouped Field's current numeric index during the save process\n\t *\n\t * @var   mixed\n\t * @since 2.0.0\n\t *\/\n\tpublic $index = 0;\n\n\t\/**\n\t * Array of field options\n\t *\n\t * @var   array\n\t * @since 2.0.0\n\t *\/\n\tprotected $field_options = array();\n\n\t\/**\n\t * Array of provided field text strings\n\t *\n\t * @var   array\n\t * @since 2.0.0\n\t *\/\n\tprotected $strings;\n\n\t\/**\n\t * The field's render context. In most cases, 'edit', but can be 'display'.\n\t *\n\t * @var   string\n\t * @since 2.2.2\n\t *\/\n\tpublic $render_context = 'edit';\n\n\t\/**\n\t * All CMB2_Field callable field arguments.\n\t * Can be used to determine if a field argument is callable.\n\t *\n\t * @var array\n\t *\/\n\tpublic static $callable_fields = array(\n\t\t'default_cb',\n\t\t'classes_cb',\n\t\t'options_cb',\n\t\t'text_cb',\n\t\t'label_cb',\n\t\t'render_row_cb',\n\t\t'display_cb',\n\t\t'before_group',\n\t\t'before_group_row',\n\t\t'before_row',\n\t\t'before',\n\t\t'before_field',\n\t\t'after_field',\n\t\t'after',\n\t\t'after_row',\n\t\t'after_group_row',\n\t\t'after_group',\n\t);\n\n\t\/**\n\t * Represents a unique hash representing this field.\n\t *\n\t * @since  2.2.4\n\t *\n\t * @var string\n\t *\/\n\tprotected $hash_id = '';\n\n\t\/**\n\t * Constructs our field object\n\t *\n\t * @since 1.1.0\n\t * @param array $args Field arguments.\n\t *\/\n\tpublic function __construct( $args ) {\n\n\t\tif ( ! empty( $args['group_field'] ) ) {\n\t\t\t$this->group       = $args['group_field'];\n\t\t\t$this->object_id   = $this->group->object_id;\n\t\t\t$this->object_type = $this->group->object_type;\n\t\t\t$this->cmb_id      = $this->group->cmb_id;\n\t\t} else {\n\t\t\t$this->object_id   = isset( $args['object_id'] ) && '_' !== $args['object_id'] ? $args['object_id'] : 0;\n\t\t\t$this->object_type = isset( $args['object_type'] ) ? $args['object_type'] : 'post';\n\n\t\t\tif ( isset( $args['cmb_id'] ) ) {\n\t\t\t\t$this->cmb_id = $args['cmb_id'];\n\t\t\t}\n\t\t}\n\n\t\t$this->args = $this->_set_field_defaults( $args['field_args'] );\n\n\t\tif ( $this->object_id ) {\n\t\t\t$this->value = $this->get_data();\n\t\t}\n\t}\n\n\t\/**\n\t * Non-existent methods fallback to checking for field arguments of the same name\n\t *\n\t * @since  1.1.0\n\t * @param  string $name     Method name.\n\t * @param  array  $arguments Array of passed-in arguments.\n\t * @return mixed             Value of field argument\n\t *\/\n\tpublic function __call( $name, $arguments ) {\n\t\tif ( 'string' === $name ) {\n\t\t\treturn call_user_func_array( array( $this, 'get_string' ), $arguments );\n\t\t}\n\n\t\t$key = isset( $arguments[0] ) ? $arguments[0] : '';\n\t\treturn $this->args( $name, $key );\n\t}\n\n\t\/**\n\t * Retrieves the field id\n\t *\n\t * @since  1.1.0\n\t * @param  boolean $raw Whether to retrieve pre-modidifed id.\n\t * @return string       Field id\n\t *\/\n\tpublic function id( $raw = false ) {\n\t\t$id = $raw ? '_id' : 'id';\n\t\treturn $this->args( $id );\n\t}\n\n\t\/**\n\t * Get a field argument\n\t *\n\t * @since  1.1.0\n\t * @param  string $key  Argument to check.\n\t * @param  string $_key Sub argument to check.\n\t * @return mixed        Argument value or false if non-existent\n\t *\/\n\tpublic function args( $key = '', $_key = '' ) {\n\t\t$arg = $this->_data( 'args', $key );\n\n\t\tif ( in_array( $key, array( 'default', 'default_cb' ), true ) ) {\n\n\t\t\t$arg = $this->get_default();\n\n\t\t} elseif ( $_key ) {\n\n\t\t\t$arg = isset( $arg[ $_key ] ) ? $arg[ $_key ] : false;\n\t\t}\n\n\t\treturn $arg;\n\t}\n\n\t\/**\n\t * Retrieve a portion of a field property\n\t *\n\t * @since  1.1.0\n\t * @param  string $var Field property to check.\n\t * @param  string $key Field property array key to check.\n\t * @return mixed        Queried property value or false\n\t *\/\n\tpublic function _data( $var, $key = '' ) {\n\t\t$vars = $this->{$var};\n\t\tif ( $key ) {\n\t\t\treturn array_key_exists( $key, $vars ) ? $vars[ $key ] : false;\n\t\t}\n\t\treturn $vars;\n\t}\n\n\t\/**\n\t * Get Field's value\n\t *\n\t * @since  1.1.0\n\t * @param  string $key If value is an array, is used to get array key->value.\n\t * @return mixed       Field value or false if non-existent\n\t *\/\n\tpublic function value( $key = '' ) {\n\t\treturn $this->_data( 'value', $key );\n\t}\n\n\t\/**\n\t * Retrieves metadata\/option data\n\t *\n\t * @since  1.0.1\n\t * @param  string $field_id Meta key\/Option array key.\n\t * @param  array  $args     Override arguments.\n\t * @return mixed            Meta\/Option value\n\t *\/\n\tpublic function get_data( $field_id = '', $args = array() ) {\n\t\tif ( $field_id ) {\n\t\t\t$args['field_id'] = $field_id;\n\t\t} elseif ( $this->group ) {\n\t\t\t$args['field_id'] = $this->group->id();\n\t\t}\n\n\t\t$a = $this->data_args( $args );\n\n\t\t\/**\n\t\t * Filter whether to override getting of meta value.\n\t\t * Returning a non 'cmb2_field_no_override_val' value\n\t\t * will effectively short-circuit the value retrieval.\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\n\t\t * @param mixed $value     The value get_metadata() should\n\t\t *                         return - a single metadata value,\n\t\t *                         or an array of values.\n\t\t *\n\t\t * @param int   $object_id Object ID.\n\t\t *\n\t\t * @param array $args {\n\t\t *     An array of arguments for retrieving data\n\t\t *\n\t\t *     @type string $type     The current object type\n\t\t *     @type int    $id       The current object ID\n\t\t *     @type string $field_id The ID of the field being requested\n\t\t *     @type bool   $repeat   Whether current field is repeatable\n\t\t *     @type bool   $single   Whether current field is a single database row\n\t\t * }\n\t\t *\n\t\t * @param CMB2_Field object $field This field object\n\t\t *\/\n\t\t$data = apply_filters( 'cmb2_override_meta_value', 'cmb2_field_no_override_val', $this->object_id, $a, $this );\n\n\t\t\/**\n\t\t * Filter and parameters are documented for 'cmb2_override_meta_value' filter (above).\n\t\t *\n\t\t * The dynamic portion of the hook, $field_id, refers to the current\n\t\t * field id paramater. Returning a non 'cmb2_field_no_override_val' value\n\t\t * will effectively short-circuit the value retrieval.\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\/\n\t\t$data = apply_filters( \"cmb2_override_{$a['field_id']}_meta_value\", $data, $this->object_id, $a, $this );\n\n\t\t\/\/ If no override, get value normally.\n\t\tif ( 'cmb2_field_no_override_val' === $data ) {\n\t\t\t$data = 'options-page' === $a['type']\n\t\t\t\t? cmb2_options( $a['id'] )->get( $a['field_id'] )\n\t\t\t\t: get_metadata( $a['type'], $a['id'], $a['field_id'], ( $a['single'] || $a['repeat'] ) );\n\t\t}\n\n\t\tif ( $this->group ) {\n\n\t\t\t$data = is_array( $data ) && isset( $data[ $this->group->index ][ $this->args( '_id' ) ] )\n\t\t\t\t? $data[ $this->group->index ][ $this->args( '_id' ) ]\n\t\t\t\t: false;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Updates metadata\/option data.\n\t *\n\t * @since  1.0.1\n\t * @param  mixed $new_value Value to update data with.\n\t * @param  bool  $single    Whether data is an array (add_metadata).\n\t * @return mixed\n\t *\/\n\tpublic function update_data( $new_value, $single = true ) {\n\t\t$a = $this->data_args( array(\n\t\t\t'single' => $single,\n\t\t) );\n\n\t\t$a['value'] = $a['repeat'] ? array_values( $new_value ) : $new_value;\n\n\t\t\/**\n\t\t * Filter whether to override saving of meta value.\n\t\t * Returning a non-null value will effectively short-circuit the function.\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\n\t\t * @param null|bool $check  Whether to allow updating metadata for the given type.\n\t\t *\n\t\t * @param array $args {\n\t\t *     Array of data about current field including:\n\t\t *\n\t\t *     @type string $value    The value to set\n\t\t *     @type string $type     The current object type\n\t\t *     @type int    $id       The current object ID\n\t\t *     @type string $field_id The ID of the field being updated\n\t\t *     @type bool   $repeat   Whether current field is repeatable\n\t\t *     @type bool   $single   Whether current field is a single database row\n\t\t * }\n\t\t *\n\t\t * @param array $field_args All field arguments\n\t\t *\n\t\t * @param CMB2_Field object $field This field object\n\t\t *\/\n\t\t$override = apply_filters( 'cmb2_override_meta_save', null, $a, $this->args(), $this );\n\n\t\t\/**\n\t\t * Filter and parameters are documented for 'cmb2_override_meta_save' filter (above).\n\t\t *\n\t\t * The dynamic portion of the hook, $a['field_id'], refers to the current\n\t\t * field id paramater. Returning a non-null value\n\t\t * will effectively short-circuit the function.\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\/\n\t\t$override = apply_filters( \"cmb2_override_{$a['field_id']}_meta_save\", $override, $a, $this->args(), $this );\n\n\t\t\/\/ If override, return that.\n\t\tif ( null !== $override ) {\n\t\t\treturn $override;\n\t\t}\n\n\t\t\/\/ Options page handling (or temp data store).\n\t\tif ( 'options-page' === $a['type'] || empty( $a['id'] ) ) {\n\t\t\treturn cmb2_options( $a['id'] )->update( $a['field_id'], $a['value'], false, $a['single'] );\n\t\t}\n\n\t\t\/\/ Add metadata if not single.\n\t\tif ( ! $a['single'] ) {\n\t\t\treturn add_metadata( $a['type'], $a['id'], $a['field_id'], $a['value'], false );\n\t\t}\n\n\t\t\/\/ Delete meta if we have an empty array.\n\t\tif ( is_array( $a['value'] ) && empty( $a['value'] ) ) {\n\t\t\treturn delete_metadata( $a['type'], $a['id'], $a['field_id'], $this->value );\n\t\t}\n\n\t\t\/\/ Update metadata.\n\t\treturn update_metadata( $a['type'], $a['id'], $a['field_id'], $a['value'] );\n\t}\n\n\t\/**\n\t * Removes\/updates metadata\/option data.\n\t *\n\t * @since  1.0.1\n\t * @param  string $old Old value.\n\t * @return mixed\n\t *\/\n\tpublic function remove_data( $old = '' ) {\n\t\t$a = $this->data_args( array(\n\t\t\t'old' => $old,\n\t\t) );\n\n\t\t\/**\n\t\t * Filter whether to override removing of meta value.\n\t\t * Returning a non-null value will effectively short-circuit the function.\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\n\t\t * @param null|bool $delete Whether to allow metadata deletion of the given type.\n\t\t * @param array $args       Array of data about current field including:\n\t\t *                              'type'     : Current object type\n\t\t *                              'id'       : Current object ID\n\t\t *                              'field_id' : Current Field ID\n\t\t *                              'repeat'   : Whether current field is repeatable\n\t\t *                              'single'   : Whether to save as a\n\t\t *                                           single meta value\n\t\t * @param array $field_args All field arguments\n\t\t * @param CMB2_Field object $field This field object\n\t\t *\/\n\t\t$override = apply_filters( 'cmb2_override_meta_remove', null, $a, $this->args(), $this );\n\n\t\t\/**\n\t\t * Filter whether to override removing of meta value.\n\t\t *\n\t\t * The dynamic portion of the hook, $a['field_id'], refers to the current\n\t\t * field id paramater. Returning a non-null value\n\t\t * will effectively short-circuit the function.\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\n\t\t * @param null|bool $delete Whether to allow metadata deletion of the given type.\n\t\t * @param array $args       Array of data about current field including:\n\t\t *                              'type'     : Current object type\n\t\t *                              'id'       : Current object ID\n\t\t *                              'field_id' : Current Field ID\n\t\t *                              'repeat'   : Whether current field is repeatable\n\t\t *                              'single'   : Whether to save as a\n\t\t *                                           single meta value\n\t\t * @param array $field_args All field arguments\n\t\t * @param CMB2_Field object $field This field object\n\t\t *\/\n\t\t$override = apply_filters( \"cmb2_override_{$a['field_id']}_meta_remove\", $override, $a, $this->args(), $this );\n\n\t\t\/\/ If no override, remove as usual.\n\t\tif ( null !== $override ) {\n\t\t\treturn $override;\n\t\t} \/\/ End if.\n\t\t\/\/ Option page handling.\n\t\telseif ( 'options-page' === $a['type'] || empty( $a['id'] ) ) {\n\t\t\treturn cmb2_options( $a['id'] )->remove( $a['field_id'] );\n\t\t}\n\n\t\t\/\/ Remove metadata.\n\t\treturn delete_metadata( $a['type'], $a['id'], $a['field_id'], $old );\n\t}\n\n\t\/**\n\t * Data variables for get\/set data methods\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments.\n\t * @return array       Updated arguments\n\t *\/\n\tpublic function data_args( $args = array() ) {\n\t\t$args = wp_parse_args( $args, array(\n\t\t\t'type'     => $this->object_type,\n\t\t\t'id'       => $this->object_id,\n\t\t\t'field_id' => $this->id( true ),\n\t\t\t'repeat'   => $this->args( 'repeatable' ),\n\t\t\t'single'   => ! $this->args( 'multiple' ),\n\t\t) );\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Checks if field has a registered sanitization callback\n\t *\n\t * @since  1.0.1\n\t * @param  mixed $meta_value Meta value.\n\t * @return mixed             Possibly sanitized meta value\n\t *\/\n\tpublic function sanitization_cb( $meta_value ) {\n\n\t\tif ( $this->args( 'repeatable' ) && is_array( $meta_value ) ) {\n\t\t\t\/\/ Remove empties.\n\t\t\t$meta_value = array_filter( $meta_value );\n\t\t}\n\n\t\t\/\/ Check if the field has a registered validation callback.\n\t\t$cb = $this->maybe_callback( 'sanitization_cb' );\n\t\tif ( false === $cb ) {\n\t\t\t\/\/ If requesting NO validation, return meta value.\n\t\t\treturn $meta_value;\n\t\t} elseif ( $cb ) {\n\t\t\t\/\/ Ok, callback is good, let's run it.\n\t\t\treturn call_user_func( $cb, $meta_value, $this->args(), $this );\n\t\t}\n\n\t\t$sanitizer = new CMB2_Sanitize( $this, $meta_value );\n\t\t$field_type = $this->type();\n\n\t\t\/**\n\t\t * Filter the value before it is saved.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_type, refers to the field type.\n\t\t *\n\t\t * Passing a non-null value to the filter will short-circuit saving\n\t\t * the field value, saving the passed value instead.\n\t\t *\n\t\t * @param bool|mixed $override_value Sanitization\/Validation override value to return.\n\t\t *                                   Default: null. false to skip it.\n\t\t * @param mixed      $value      The value to be saved to this field.\n\t\t * @param int        $object_id  The ID of the object where the value will be saved\n\t\t * @param array      $field_args The current field's arguments\n\t\t * @param object     $sanitizer  This `CMB2_Sanitize` object\n\t\t *\/\n\t\t$override_value = apply_filters( \"cmb2_sanitize_{$field_type}\", null, $sanitizer->value, $this->object_id, $this->args(), $sanitizer );\n\n\t\tif ( null !== $override_value ) {\n\t\t\treturn $override_value;\n\t\t}\n\n\t\t\/\/ Sanitization via 'CMB2_Sanitize'.\n\t\treturn $sanitizer->{$field_type}();\n\t}\n\n\t\/**\n\t * Process $_POST data to save this field's value\n\t *\n\t * @since  2.0.3\n\t * @param  array $data_to_save $_POST data to check.\n\t * @return array|int|bool                Result of save, false on failure\n\t *\/\n\tpublic function save_field_from_data( array $data_to_save ) {\n\t\t$this->data_to_save = $data_to_save;\n\n\t\t$meta_value = isset( $this->data_to_save[ $this->id( true ) ] )\n\t\t\t? $this->data_to_save[ $this->id( true ) ]\n\t\t\t: null;\n\n\t\treturn $this->save_field( $meta_value );\n\t}\n\n\t\/**\n\t * Sanitize\/store a value to this field\n\t *\n\t * @since  2.0.0\n\t * @param  array $meta_value Desired value to sanitize\/store.\n\t * @return array|int|bool              Result of save. false on failure\n\t *\/\n\tpublic function save_field( $meta_value ) {\n\n\t\t$updated   = false;\n\t\t$action    = '';\n\t\t$new_value = $this->sanitization_cb( $meta_value );\n\n\t\tif ( ! $this->args( 'save_field' ) ) {\n\n\t\t\t\/\/ Nothing to see here.\n\t\t\t$action = 'disabled';\n\n\t\t} elseif ( $this->args( 'multiple' ) && ! $this->args( 'repeatable' ) && ! $this->group ) {\n\n\t\t\t$this->remove_data();\n\t\t\t$count = 0;\n\n\t\t\tif ( ! empty( $new_value ) ) {\n\t\t\t\tforeach ( $new_value as $add_new ) {\n\t\t\t\t\tif ( $this->update_data( $add_new, false ) ) {\n\t\t\t\t\t\t$count++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$updated = $count ? $count : false;\n\t\t\t$action  = 'repeatable';\n\n\t\t} elseif ( ! CMB2_Utils::isempty( $new_value ) && $new_value !== $this->get_data() ) {\n\t\t\t$updated = $this->update_data( $new_value );\n\t\t\t$action  = 'updated';\n\t\t} elseif ( CMB2_Utils::isempty( $new_value ) ) {\n\t\t\t$updated = $this->remove_data();\n\t\t\t$action  = 'removed';\n\t\t}\n\n\t\tif ( $updated ) {\n\t\t\t$this->value = $this->get_data();\n\t\t\t$this->escaped_value = null;\n\t\t}\n\n\t\t$field_id = $this->id( true );\n\n\t\t\/**\n\t\t * Hooks after save field action.\n\t\t *\n\t\t * @since 2.2.0\n\t\t *\n\t\t * @param string            $field_id the current field id paramater.\n\t\t * @param bool              $updated  Whether the metadata update action occurred.\n\t\t * @param string            $action   Action performed. Could be \"repeatable\", \"updated\", or \"removed\".\n\t\t * @param CMB2_Field object $field    This field object\n\t\t *\/\n\t\tdo_action( 'cmb2_save_field', $field_id, $updated, $action, $this );\n\n\t\t\/**\n\t\t * Hooks after save field action.\n\t\t *\n\t\t * The dynamic portion of the hook, $field_id, refers to the\n\t\t * current field id paramater.\n\t\t *\n\t\t * @since 2.2.0\n\t\t *\n\t\t * @param bool              $updated Whether the metadata update action occurred.\n\t\t * @param string            $action  Action performed. Could be \"repeatable\", \"updated\", or \"removed\".\n\t\t * @param CMB2_Field object $field   This field object\n\t\t *\/\n\t\tdo_action( \"cmb2_save_field_{$field_id}\", $updated, $action, $this );\n\n\t\treturn $updated;\n\t}\n\n\t\/**\n\t * Determine if current type is exempt from escaping\n\t *\n\t * @since  1.1.0\n\t * @return bool  True if exempt\n\t *\/\n\tpublic function escaping_exception() {\n\t\t\/\/ These types cannot be escaped.\n\t\treturn in_array( $this->type(), array(\n\t\t\t'file_list',\n\t\t\t'multicheck',\n\t\t\t'text_datetime_timestamp_timezone',\n\t\t) );\n\t}\n\n\t\/**\n\t * Determine if current type cannot be repeatable\n\t *\n\t * @since  1.1.0\n\t * @param  string $type Field type to check.\n\t * @return bool         True if type cannot be repeatable\n\t *\/\n\tpublic function repeatable_exception( $type ) {\n\t\t\/\/ These types cannot be repeatable.\n\t\t$internal_fields = array(\n\t\t\t\/\/ Use file_list instead.\n\t\t\t'file'                             => 1,\n\t\t\t'radio'                            => 1,\n\t\t\t'title'                            => 1,\n\t\t\t'wysiwyg'                          => 1,\n\t\t\t'checkbox'                         => 1,\n\t\t\t'radio_inline'                     => 1,\n\t\t\t'taxonomy_radio'                   => 1,\n\t\t\t'taxonomy_radio_inline'            => 1,\n\t\t\t'taxonomy_radio_hierarchical'      => 1,\n\t\t\t'taxonomy_select'                  => 1,\n\t\t\t'taxonomy_select_hierarchical'     => 1,\n\t\t\t'taxonomy_multicheck'              => 1,\n\t\t\t'taxonomy_multicheck_inline'       => 1,\n\t\t\t'taxonomy_multicheck_hierarchical' => 1,\n\t\t);\n\n\t\t\/**\n\t\t * Filter field types that are non-repeatable.\n\t\t *\n\t\t * Note that this does *not* allow overriding the default non-repeatable types.\n\t\t *\n\t\t * @since 2.1.1\n\t\t *\n\t\t * @param array $fields Array of fields designated as non-repeatable. Note that the field names are *keys*,\n\t\t *                      and not values. The value can be anything, because it is meaningless. Example:\n\t\t *                      array( 'my_custom_field' => 1 )\n\t\t *\/\n\t\t$all_fields = array_merge( apply_filters( 'cmb2_non_repeatable_fields', array() ), $internal_fields );\n\t\treturn isset( $all_fields[ $type ] );\n\t}\n\n\t\/**\n\t * Determine if current type has its own defaults field-arguments method.\n\t *\n\t * @since  2.2.6\n\t * @param  string $type Field type to check.\n\t * @return bool         True if has own method.\n\t *\/\n\tpublic function has_args_method( $type ) {\n\n\t\t\/\/ These types have their own arguments parser.\n\t\t$type_methods = array(\n\t\t\t'group'   => 'set_field_defaults_group',\n\t\t\t'wysiwyg' => 'set_field_defaults_wysiwyg',\n\t\t);\n\n\t\tif ( isset( $type_methods[ $type ] ) ) {\n\t\t\treturn $type_methods[ $type ];\n\t\t}\n\n\t\t$all_or_nothing_types = array_flip( apply_filters( 'cmb2_all_or_nothing_types', array(\n\t\t\t'select',\n\t\t\t'radio',\n\t\t\t'radio_inline',\n\t\t\t'taxonomy_select',\n\t\t\t'taxonomy_select_hierarchical',\n\t\t\t'taxonomy_radio',\n\t\t\t'taxonomy_radio_inline',\n\t\t\t'taxonomy_radio_hierarchical',\n\t\t), $this ) );\n\n\t\tif ( isset( $all_or_nothing_types[ $type ] ) ) {\n\t\t\treturn 'set_field_defaults_all_or_nothing_types';\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Escape the value before output. Defaults to 'esc_attr()'\n\t *\n\t * @since  1.0.1\n\t * @param  callable|string $func       Escaping function (if not esc_attr()).\n\t * @param  mixed           $meta_value Meta value.\n\t * @return mixed                Final value.\n\t *\/\n\tpublic function escaped_value( $func = 'esc_attr', $meta_value = '' ) {\n\n\t\tif ( null !== $this->escaped_value ) {\n\t\t\treturn $this->escaped_value;\n\t\t}\n\n\t\t$meta_value = $meta_value ? $meta_value : $this->value();\n\n\t\t\/\/ Check if the field has a registered escaping callback.\n\t\tif ( $cb = $this->maybe_callback( 'escape_cb' ) ) {\n\t\t\t\/\/ Ok, callback is good, let's run it.\n\t\t\treturn call_user_func( $cb, $meta_value, $this->args(), $this );\n\t\t}\n\n\t\t$field_type = $this->type();\n\n\t\t\/**\n\t\t * Filter the value for escaping before it is ouput.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_type, refers to the field type.\n\t\t *\n\t\t * Passing a non-null value to the filter will short-circuit the built-in\n\t\t * escaping for this field.\n\t\t *\n\t\t * @param bool|mixed $override_value Escaping override value to return.\n\t\t *                                   Default: null. false to skip it.\n\t\t * @param mixed      $meta_value The value to be output.\n\t\t * @param array      $field_args The current field's arguments.\n\t\t * @param object     $field      This `CMB2_Field` object.\n\t\t *\/\n\t\t$esc = apply_filters( \"cmb2_types_esc_{$field_type}\", null, $meta_value, $this->args(), $this );\n\t\tif ( null !== $esc ) {\n\t\t\treturn $esc;\n\t\t}\n\n\t\tif ( false === $cb || $this->escaping_exception() ) {\n\t\t\t\/\/ If requesting NO escaping, return meta value.\n\t\t\treturn $this->val_or_default( $meta_value );\n\t\t}\n\n\t\t\/\/ escaping function passed in?\n\t\t$func       = $func ? $func : 'esc_attr';\n\t\t$meta_value = $this->val_or_default( $meta_value );\n\n\t\tif ( is_array( $meta_value ) ) {\n\t\t\tforeach ( $meta_value as $key => $value ) {\n\t\t\t\t$meta_value[ $key ] = call_user_func( $func, $value );\n\t\t\t}\n\t\t} else {\n\t\t\t$meta_value = call_user_func( $func, $meta_value );\n\t\t}\n\n\t\t$this->escaped_value = $meta_value;\n\t\treturn $this->escaped_value;\n\t}\n\n\t\/**\n\t * Return non-empty value or field default if value IS empty\n\t *\n\t * @since  2.0.0\n\t * @param  mixed $meta_value Field value.\n\t * @return mixed             Field value, or default value\n\t *\/\n\tpublic function val_or_default( $meta_value ) {\n\t\treturn ! CMB2_Utils::isempty( $meta_value ) ? $meta_value : $this->get_default();\n\t}\n\n\t\/**\n\t * Offset a time value based on timezone\n\t *\n\t * @since  1.0.0\n\t * @return string Offset time string\n\t *\/\n\tpublic function field_timezone_offset() {\n\t\treturn CMB2_Utils::timezone_offset( $this->field_timezone() );\n\t}\n\n\t\/**\n\t * Return timezone string\n\t *\n\t * @since  1.0.0\n\t * @return string Timezone string\n\t *\/\n\tpublic function field_timezone() {\n\t\t$value = '';\n\n\t\t\/\/ Is timezone arg set?\n\t\tif ( $this->args( 'timezone' ) ) {\n\t\t\t$value = $this->args( 'timezone' );\n\t\t} \/\/ End if.\n\t\t\/\/ Is there another meta key with a timezone stored as its value we should use?\n\t\telseif ( $this->args( 'timezone_meta_key' ) ) {\n\t\t\t$value = $this->get_data( $this->args( 'timezone_meta_key' ) );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Format the timestamp field value based on the field date\/time format arg\n\t *\n\t * @since  2.0.0\n\t * @param  int    $meta_value Timestamp.\n\t * @param  string $format     Either date_format or time_format.\n\t * @return string             Formatted date\n\t *\/\n\tpublic function format_timestamp( $meta_value, $format = 'date_format' ) {\n\t\treturn date( stripslashes( $this->args( $format ) ), $meta_value );\n\t}\n\n\t\/**\n\t * Return a formatted timestamp for a field\n\t *\n\t * @since  2.0.0\n\t * @param  string     $format     Either date_format or time_format.\n\t * @param  string|int $meta_value Optional meta value to check.\n\t * @return string             Formatted date\n\t *\/\n\tpublic function get_timestamp_format( $format = 'date_format', $meta_value = 0 ) {\n\t\t$meta_value = $meta_value ? $meta_value : $this->escaped_value();\n\t\tif ( empty( $meta_value ) ) {\n\t\t\t$meta_value = $this->get_default();\n\t\t}\n\n\t\t$meta_value = CMB2_Utils::make_valid_time_stamp( $meta_value );\n\t\tif ( empty( $meta_value ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn is_array( $meta_value )\n\t\t\t? array_map( array( $this, 'format_timestamp' ), $meta_value, $format )\n\t\t\t: $this->format_timestamp( $meta_value, $format );\n\t}\n\n\t\/**\n\t * Get timestamp from text date\n\t *\n\t * @since  2.2.0\n\t * @param  string $value Date value.\n\t * @return mixed         Unix timestamp representing the date.\n\t *\/\n\tpublic function get_timestamp_from_value( $value ) {\n\t\t$timestamp = CMB2_Utils::get_timestamp_from_value( $value, $this->args( 'date_format' ) );\n\t\tif ( empty( $timestamp ) && CMB2_Utils::is_valid_date( $value ) ) {\n\t\t\t$timestamp = CMB2_Utils::make_valid_time_stamp( $value );\n\t\t}\n\n\t\treturn $timestamp;\n\t}\n\n\t\/**\n\t * Get field render callback and Render the field row\n\t *\n\t * @since 1.0.0\n\t *\/\n\tpublic function render_field() {\n\t\t$this->render_context = 'edit';\n\n\t\t$this->peform_param_callback( 'render_row_cb' );\n\n\t\t\/\/ For chaining.\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Default field render callback\n\t *\n\t * @since 2.1.1\n\t *\/\n\tpublic function render_field_callback() {\n\n\t\t\/\/ If field is requesting to not be shown on the front-end.\n\t\tif ( ! is_admin() && ! $this->args( 'on_front' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ If field is requesting to be conditionally shown.\n\t\tif ( ! $this->should_show() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$field_type = $this->type();\n\n\t\t\/**\n\t\t * Hook before field row begins.\n\t\t *\n\t\t * @param CMB2_Field $field The current field object.\n\t\t *\/\n\t\tdo_action( 'cmb2_before_field_row', $this );\n\n\t\t\/**\n\t\t * Hook before field row begins.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_type, refers to the field type.\n\t\t *\n\t\t * @param CMB2_Field $field The current field object.\n\t\t *\/\n\t\tdo_action( \"cmb2_before_{$field_type}_field_row\", $this );\n\n\t\t$this->peform_param_callback( 'before_row' );\n\n\t\tprintf( \"<div class=\\\"cmb-row %s\\\" data-fieldtype=\\\"%s\\\">\\n\", $this->row_classes(), $field_type );\n\n\t\tif ( ! $this->args( 'show_names' ) ) {\n\t\t\techo \"\\n\\t<div class=\\\"cmb-td\\\">\\n\";\n\n\t\t\t$this->peform_param_callback( 'label_cb' );\n\n\t\t} else {\n\n\t\t\tif ( $this->get_param_callback_result( 'label_cb' ) ) {\n\t\t\t\techo '<div class=\"cmb-th\">', $this->peform_param_callback( 'label_cb' ), '<\/div>';\n\t\t\t}\n\n\t\t\techo \"\\n\\t<div class=\\\"cmb-td\\\">\\n\";\n\t\t}\n\n\t\t$this->peform_param_callback( 'before' );\n\n\t\t$types = new CMB2_Types( $this );\n\t\t$types->render();\n\n\t\t$this->peform_param_callback( 'after' );\n\n\t\techo \"\\n\\t<\/div>\\n<\/div>\";\n\n\t\t$this->peform_param_callback( 'after_row' );\n\n\t\t\/**\n\t\t * Hook after field row ends.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_type, refers to the field type.\n\t\t *\n\t\t * @param CMB2_Field $field The current field object.\n\t\t *\/\n\t\tdo_action( \"cmb2_after_{$field_type}_field_row\", $this );\n\n\t\t\/**\n\t\t * Hook after field row ends.\n\t\t *\n\t\t * @param CMB2_Field $field The current field object.\n\t\t *\/\n\t\tdo_action( 'cmb2_after_field_row', $this );\n\n\t\t\/\/ For chaining.\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * The default label_cb callback (if not a title field)\n\t *\n\t * @since  2.1.1\n\t * @return string Label html markup.\n\t *\/\n\tpublic function label() {\n\t\tif ( ! $this->args( 'name' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$style = ! $this->args( 'show_names' ) ? ' style=\"display:none;\"' : '';\n\n\t\treturn sprintf( \"\\n\" . '<label%1$s for=\"%2$s\">%3$s<\/label>' . \"\\n\", $style, $this->id(), $this->args( 'name' ) );\n\t}\n\n\t\/**\n\t * Defines the classes for the current CMB2 field row\n\t *\n\t * @since  2.0.0\n\t * @return string Space concatenated list of classes\n\t *\/\n\tpublic function row_classes() {\n\n\t\t$classes = array();\n\n\t\t\/**\n\t\t * By default, 'text_url' and 'text' fields get table-like styling\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\n\t\t * @param array $field_types The types of fields which should get the 'table-layout' class\n\t\t *\/\n\t\t$repeat_table_rows_types = apply_filters( 'cmb2_repeat_table_row_types', array(\n\t\t\t'text_url',\n\t\t\t'text',\n\t\t) );\n\n\t\t$conditional_classes = array(\n\t\t\t'cmb-type-' . str_replace( '_', '-', sanitize_html_class( $this->type() ) ) => true,\n\t\t\t'cmb2-id-' . str_replace( '_', '-', sanitize_html_class( $this->id() ) )    => true,\n\t\t\t'cmb-repeat'             => $this->args( 'repeatable' ),\n\t\t\t'cmb-repeat-group-field' => $this->group,\n\t\t\t'cmb-inline'             => $this->args( 'inline' ),\n\t\t\t'table-layout'           => 'edit' === $this->render_context && in_array( $this->type(), $repeat_table_rows_types ),\n\t\t);\n\n\t\tforeach ( $conditional_classes as $class => $condition ) {\n\t\t\tif ( $condition ) {\n\t\t\t\t$classes[] = $class;\n\t\t\t}\n\t\t}\n\n\t\tif ( $added_classes = $this->args( 'classes' ) ) {\n\t\t\t$added_classes = is_array( $added_classes ) ? implode( ' ', $added_classes ) : (string) $added_classes;\n\t\t} elseif ( $added_classes = $this->get_param_callback_result( 'classes_cb' ) ) {\n\t\t\t$added_classes = is_array( $added_classes ) ? implode( ' ', $added_classes ) : (string) $added_classes;\n\t\t}\n\n\t\tif ( $added_classes ) {\n\t\t\t$classes[] = esc_attr( $added_classes );\n\t\t}\n\n\t\t\/**\n\t\t * Globally filter row classes\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\n\t\t * @param string            $classes Space-separated list of row classes\n\t\t * @param CMB2_Field object $field   This field object\n\t\t *\/\n\t\treturn apply_filters( 'cmb2_row_classes', implode( ' ', $classes ), $this );\n\t}\n\n\t\/**\n\t * Get field display callback and render the display value in the column.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tpublic function render_column() {\n\t\t$this->render_context = 'display';\n\n\t\t$this->peform_param_callback( 'display_cb' );\n\n\t\t\/\/ For chaining.\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * The method to fetch the value for this field for the REST API.\n\t *\n\t * @since 2.5.0\n\t *\/\n\tpublic function get_rest_value() {\n\t\t$field_type = $this->type();\n\t\t$field_id   = $this->id( true );\n\n\t\tif ( $cb = $this->maybe_callback( 'rest_value_cb' ) ) {\n\t\t\tadd_filter( \"cmb2_get_rest_value_for_{$field_id}\", $cb, 99 );\n\t\t}\n\n\t\t$value = $this->get_data();\n\n\t\t\/**\n\t\t * Filter the value before it is sent to the REST request.\n\t\t *\n\t\t * @since 2.5.0\n\t\t *\n\t\t * @param mixed      $value The value from CMB2_Field::get_data()\n\t\t * @param CMB2_Field $field This field object.\n\t\t *\/\n\t\t$value = apply_filters( 'cmb2_get_rest_value', $value, $this );\n\n\t\t\/**\n\t\t * Filter the value before it is sent to the REST request.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_type, refers to the field type.\n\t\t *\n\t\t * @since 2.5.0\n\t\t *\n\t\t * @param mixed      $value The value from CMB2_Field::get_data()\n\t\t * @param CMB2_Field $field This field object.\n\t\t *\/\n\t\t$value = apply_filters( \"cmb2_get_rest_value_{$field_type}\", $value, $this );\n\n\t\t\/**\n\t\t * Filter the value before it is sent to the REST request.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_id, refers to the field id.\n\t\t *\n\t\t * @since 2.5.0\n\t\t *\n\t\t * @param mixed      $value The value from CMB2_Field::get_data()\n\t\t * @param CMB2_Field $field This field object.\n\t\t *\/\n\t\treturn apply_filters( \"cmb2_get_rest_value_for_{$field_id}\", $value, $this );\n\t}\n\n\t\/**\n\t * Get a field object for a supporting field. (e.g. file field)\n\t *\n\t * @since  2.7.0\n\t *\n\t * @return CMB2_Field|bool Supporting field object, if supported.\n\t *\/\n\tpublic function get_supporting_field() {\n\t\t$suffix = $this->args( 'has_supporting_data' );\n\t\tif ( empty( $suffix ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $this->get_field_clone( array(\n\t\t\t'id' => $this->_id( '', false ) . $suffix,\n\t\t\t'sanitization_cb' => false,\n\t\t) );\n\t}\n\n\t\/**\n\t * Default callback to outputs field value in a display format.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tpublic function display_value_callback() {\n\t\t\/\/ If field is requesting to be conditionally shown.\n\t\tif ( ! $this->should_show() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$display = new CMB2_Field_Display( $this );\n\t\t$field_type = $this->type();\n\n\t\t\/**\n\t\t * A filter to bypass the default display.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_type, refers to the field type.\n\t\t *\n\t\t * Passing a non-null value to the filter will short-circuit the default display.\n\t\t *\n\t\t * @param bool|mixed         $pre_output Default null value.\n\t\t * @param CMB2_Field         $field      This field object.\n\t\t * @param CMB2_Field_Display $display    The `CMB2_Field_Display` object.\n\t\t *\/\n\t\t$pre_output = apply_filters( \"cmb2_pre_field_display_{$field_type}\", null, $this, $display );\n\n\t\tif ( null !== $pre_output ) {\n\t\t\techo $pre_output;\n\t\t\treturn;\n\t\t}\n\n\t\t$this->peform_param_callback( 'before_display_wrap' );\n\n\t\tprintf( \"<div class=\\\"cmb-column %s\\\" data-fieldtype=\\\"%s\\\">\\n\", $this->row_classes(), $field_type );\n\n\t\t$this->peform_param_callback( 'before_display' );\n\n\t\tCMB2_Field_Display::get( $this )->display();\n\n\t\t$this->peform_param_callback( 'after_display' );\n\n\t\techo \"\\n<\/div>\";\n\n\t\t$this->peform_param_callback( 'after_display_wrap' );\n\n\t\t\/\/ For chaining.\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Replaces a hash key - {#} - with the repeatable index\n\t *\n\t * @since  1.2.0\n\t * @param  string $value Value to update.\n\t * @return string        Updated value\n\t *\/\n\tpublic function replace_hash( $value ) {\n\t\t\/\/ Replace hash with 1 based count.\n\t\treturn str_replace( '{#}', ( $this->index + 1 ), $value );\n\t}\n\n\t\/**\n\t * Retrieve text parameter from field's text array (if it has one), or use fallback text\n\t * For back-compatibility, falls back to checking the options array.\n\t *\n\t * @since  2.2.2\n\t * @param  string $text_key Key in field's text array.\n\t * @param  string $fallback Fallback text.\n\t * @return string            Text\n\t *\/\n\tpublic function get_string( $text_key, $fallback ) {\n\t\t\/\/ If null, populate with our field strings values.\n\t\tif ( null === $this->strings ) {\n\t\t\t$this->strings = (array) $this->args['text'];\n\n\t\t\tif ( is_callable( $this->args['text_cb'] ) ) {\n\t\t\t\t$strings = call_user_func( $this->args['text_cb'], $this );\n\n\t\t\t\tif ( $strings && is_array( $strings ) ) {\n\t\t\t\t\t$this->strings += $strings;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\/\/ If we have that string value, send it back.\n\t\tif ( isset( $this->strings[ $text_key ] ) ) {\n\t\t\treturn $this->strings[ $text_key ];\n\t\t}\n\n\t\t\/\/ Check options for back-compat.\n\t\t$string = $this->options( $text_key );\n\n\t\treturn $string ? $string : $fallback;\n\t}\n\n\t\/**\n\t * Retrieve options args.\n\t *\n\t * @since  2.0.0\n\t * @param  string $key Specific option to retrieve.\n\t * @return array|mixed Array of options or specific option.\n\t *\/\n\tpublic function options( $key = '' ) {\n\t\tif ( empty( $this->field_options ) ) {\n\t\t\t$this->set_options();\n\t\t}\n\n\t\tif ( $key ) {\n\t\t\treturn array_key_exists( $key, $this->field_options ) ? $this->field_options[ $key ] : false;\n\t\t}\n\n\t\treturn $this->field_options;\n\t}\n\n\t\/**\n\t * Generates\/sets options args. Calls options_cb if it exists.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @return array Array of options\n\t *\/\n\tpublic function set_options() {\n\t\t$this->field_options = (array) $this->args['options'];\n\n\t\tif ( is_callable( $this->args['options_cb'] ) ) {\n\t\t\t$options = call_user_func( $this->args['options_cb'], $this );\n\n\t\t\tif ( $options && is_array( $options ) ) {\n\t\t\t\t$this->field_options = $options + $this->field_options;\n\t\t\t}\n\t\t}\n\n\t\treturn $this->field_options;\n\t}\n\n\t\/**\n\t * Store JS dependencies as part of the field args.\n\t *\n\t * @since 2.2.0\n\t * @param array $dependencies Dependies to register for this field.\n\t *\/\n\tpublic function add_js_dependencies( $dependencies = array() ) {\n\t\tforeach ( (array) $dependencies as $dependency ) {\n\t\t\t$this->args['js_dependencies'][ $dependency ] = $dependency;\n\t\t}\n\n\t\tCMB2_JS::add_dependencies( $dependencies );\n\t}\n\n\t\/**\n\t * Send field data to JS.\n\t *\n\t * @since 2.2.0\n\t *\/\n\tpublic function register_js_data() {\n\t\tif ( $this->group ) {\n\t\t\tCMB2_JS::add_field_data( $this->group );\n\t\t}\n\n\t\treturn CMB2_JS::add_field_data( $this );\n\t}\n\n\t\/**\n\t * Get an array of some of the field data to be used in the Javascript.\n\t *\n\t * @since  2.2.4\n\t *\n\t * @return array\n\t *\/\n\tpublic function js_data() {\n\t\treturn array(\n\t\t\t'label'     => $this->args( 'name' ),\n\t\t\t'id'        => $this->id( true ),\n\t\t\t'type'      => $this->type(),\n\t\t\t'hash'      => $this->hash_id(),\n\t\t\t'box'       => $this->cmb_id,\n\t\t\t'id_attr'   => $this->id(),\n\t\t\t'name_attr' => $this->args( '_name' ),\n\t\t\t'default'   => $this->get_default(),\n\t\t\t'group'     => $this->group_id(),\n\t\t\t'index'     => $this->group ? $this->group->index : null,\n\t\t);\n\t}\n\n\t\/**\n\t * Returns a unique hash representing this field.\n\t *\n\t * @since  2.2.4\n\t *\n\t * @return string\n\t *\/\n\tpublic function hash_id() {\n\t\tif ( '' === $this->hash_id ) {\n\t\t\t$this->hash_id = CMB2_Utils::generate_hash( $this->cmb_id . '||' . $this->id() );\n\t\t}\n\n\t\treturn $this->hash_id;\n\t}\n\n\t\/**\n\t * Gets the id of the group field if this field is part of a group.\n\t *\n\t * @since  2.2.4\n\t *\n\t * @return string\n\t *\/\n\tpublic function group_id() {\n\t\treturn $this->group ? $this->group->id( true ) : '';\n\t}\n\n\t\/**\n\t * Get CMB2_Field default value, either from default param or default_cb param.\n\t *\n\t * @since  0.2.2\n\t *\n\t * @return mixed  Default field value\n\t *\/\n\tpublic function get_default() {\n\t\t$default = $this->args['default'];\n\n\t\tif ( null !== $default ) {\n\t\t\treturn apply_filters( 'cmb2_default_filter', $default, $this );\n\t\t}\n\n\t\t$param = is_callable( $this->args['default_cb'] ) ? 'default_cb' : 'default';\n\t\t$default = $this->args['default'] = $this->get_param_callback_result( $param );\n\n\t\t\/\/ Allow a filter override of the default value.\n\t\treturn apply_filters( 'cmb2_default_filter', $this->args['default'], $this );\n\t}\n\n\t\/**\n\t * Fills in empty field parameters with defaults\n\t *\n\t * @since 1.1.0\n\t *\n\t * @param  array $args Field config array.\n\t * @return array        Modified field config array.\n\t *\/\n\tpublic function _set_field_defaults( $args ) {\n\t\t$defaults = $this->get_default_field_args( $args );\n\n\t\t\/**\n\t\t * Filter the CMB2 Field defaults.\n\t\t *\n\t\t * @since 2.6.0\n\t\t * @param array             $defaults Metabox field config array defaults.\n\t\t * @param string            $id       Field id for the current field to allow for selective filtering.\n\t\t * @param string            $type     Field type for the current field to allow for selective filtering.\n\t\t * @param CMB2_Field object $field    This field object.\n\t\t *\/\n\t\t$defaults = apply_filters( 'cmb2_field_defaults', $defaults, $args['id'], $args['type'], $this );\n\n\t\t\/\/ Set up blank or default values for empty ones.\n\t\t$args = wp_parse_args( $args, $defaults );\n\n\t\t\/**\n\t\t * Filtering the CMB2 Field arguments once merged with the defaults, but before further processing.\n\t\t *\n\t\t * @since 2.6.0\n\t\t * @param array             $args  Metabox field config array defaults.\n\t\t * @param CMB2_Field object $field This field object.\n\t\t *\/\n\t\t$args = apply_filters( 'cmb2_field_arguments_raw', $args, $this );\n\n\t\t\/*\n\t\t * Deprecated usage:\n\t\t *\n\t\t * 'std' -- use 'default' (no longer works)\n\t\t * 'row_classes' -- use 'class', or 'class_cb'\n\t\t * 'default' -- as callback (use default_cb)\n\t\t *\/\n\t\t$args = $this->convert_deprecated_params( $args );\n\n\t\t$args['repeatable'] = $args['repeatable'] && ! $this->repeatable_exception( $args['type'] );\n\t\t$args['inline']     = $args['inline'] || false !== stripos( $args['type'], '_inline' );\n\t\t$args['_id']        = $args['id'];\n\t\t$args['_name']      = $args['id'];\n\n\t\tif ( $method = $this->has_args_method( $args['type'] ) ) {\n\t\t\t$args = $this->{$method}( $args );\n\t\t}\n\n\t\tif ( $this->group ) {\n\t\t\t$args = $this->set_group_sub_field_defaults( $args );\n\t\t}\n\n\t\t$with_supporting = array(\n\t\t\t\/\/ CMB2_Sanitize::_save_file_id_value()\/CMB2_Sanitize::_get_group_file_value_array().\n\t\t\t'file' => '_id',\n\t\t\t\/\/ See CMB2_Sanitize::_save_utc_value().\n\t\t\t'text_datetime_timestamp_timezone' => '_utc',\n\t\t);\n\n\t\t$args['has_supporting_data'] = isset( $with_supporting[ $args['type'] ] )\n\t\t\t? $with_supporting[ $args['type'] ]\n\t\t\t: false;\n\n\t\t\/\/ Repeatable fields require jQuery sortable library.\n\t\tif ( ! empty( $args['repeatable'] ) ) {\n\t\t\tCMB2_JS::add_dependencies( 'jquery-ui-sortable' );\n\t\t}\n\n\t\t\/**\n\t\t * Filter the CMB2 Field arguments after processing.\n\t\t *\n\t\t * @since 2.6.0\n\t\t * @param array             $args  Metabox field config array after processing.\n\t\t * @param CMB2_Field object $field This field object.\n\t\t *\/\n\t\treturn apply_filters( 'cmb2_field_arguments', $args, $this );\n\t}\n\n\t\/**\n\t * Sets default arguments for the group field types.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param  array $args Field config array.\n\t * @return array        Modified field config array.\n\t *\/\n\tprotected function set_field_defaults_group( $args ) {\n\t\t$args['options'] = wp_parse_args( $args['options'], array(\n\t\t\t'add_button'     => esc_html__( 'Add Group', 'cmb2' ),\n\t\t\t'remove_button'  => esc_html__( 'Remove Group', 'cmb2' ),\n\t\t\t'remove_confirm' => '',\n\t\t) );\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Sets default arguments for the wysiwyg field types.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param  array $args Field config array.\n\t * @return array        Modified field config array.\n\t *\/\n\tprotected function set_field_defaults_wysiwyg( $args ) {\n\t\t$args['id'] = strtolower( str_ireplace( '-', '_', $args['id'] ) );\n\t\t$args['options']['textarea_name'] = $args['_name'];\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Sets default arguments for the all-or-nothing field types.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param  array $args Field config array.\n\t * @return array        Modified field config array.\n\t *\/\n\tprotected function set_field_defaults_all_or_nothing_types( $args ) {\n\t\t$args['show_option_none'] = isset( $args['show_option_none'] ) ? $args['show_option_none'] : null;\n\t\t$args['show_option_none'] = true === $args['show_option_none'] ? esc_html__( 'None', 'cmb2' ) : $args['show_option_none'];\n\n\t\tif ( null === $args['show_option_none'] ) {\n\t\t\t$off_by_default = in_array( $args['type'], array( 'select', 'radio', 'radio_inline' ), true );\n\t\t\t$args['show_option_none'] = $off_by_default ? false : esc_html__( 'None', 'cmb2' );\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Sets default arguments for group sub-fields.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param  array $args Field config array.\n\t * @return array        Modified field config array.\n\t *\/\n\tprotected function set_group_sub_field_defaults( $args ) {\n\t\t$args['id']    = $this->group->args( 'id' ) . '_' . $this->group->index . '_' . $args['id'];\n\t\t$args['_name'] = $this->group->args( 'id' ) . '[' . $this->group->index . '][' . $args['_name'] . ']';\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Gets the default arguments for all fields.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param  array $args Field config array.\n\t * @return array        Field defaults.\n\t *\/\n\tprotected function get_default_field_args( $args ) {\n\t\t$type = isset( $args['type'] ) ? $args['type'] : '';\n\n\t\treturn array(\n\t\t\t'type'              => $type,\n\t\t\t'name'              => '',\n\t\t\t'desc'              => '',\n\t\t\t'before'            => '',\n\t\t\t'after'             => '',\n\t\t\t'options'           => array(),\n\t\t\t'options_cb'        => '',\n\t\t\t'text'              => array(),\n\t\t\t'text_cb'           => '',\n\t\t\t'attributes'        => array(),\n\t\t\t'protocols'         => null,\n\t\t\t'default'           => null,\n\t\t\t'default_cb'        => '',\n\t\t\t'classes'           => null,\n\t\t\t'classes_cb'        => '',\n\t\t\t'select_all_button' => true,\n\t\t\t'multiple'          => false,\n\t\t\t'repeatable'        => 'group' === $type,\n\t\t\t'inline'            => false,\n\t\t\t'on_front'          => true,\n\t\t\t'show_names'        => true,\n\t\t\t'save_field'        => true, \/\/ Will not save if false.\n\t\t\t'date_format'       => 'm\\\/d\\\/Y',\n\t\t\t'time_format'       => 'h:i A',\n\t\t\t'description'       => isset( $args['desc'] ) ? $args['desc'] : '',\n\t\t\t'preview_size'      => 'file' === $type ? array( 350, 350 ) : array( 50, 50 ),\n\t\t\t'render_row_cb'     => array( $this, 'render_field_callback' ),\n\t\t\t'display_cb'        => array( $this, 'display_value_callback' ),\n\t\t\t'label_cb'          => 'title' !== $type ? array( $this, 'label' ) : '',\n\t\t\t'column'            => false,\n\t\t\t'js_dependencies'   => array(),\n\t\t\t'show_in_rest'      => null,\n\t\t\t'char_counter'      => false,\n\t\t\t'char_max'          => false,\n\t\t\t'char_max_enforce'  => false,\n\t\t);\n\t}\n\n\t\/**\n\t * Get default field arguments specific to this CMB2 object.\n\t *\n\t * @since  2.2.0\n\t * @param  array      $field_args  Metabox field config array.\n\t * @param  CMB2_Field $field_group (optional) CMB2_Field object (group parent).\n\t * @return array                   Array of field arguments.\n\t *\/\n\tprotected function get_default_args( $field_args, $field_group = null ) {\n\t\t$args = parent::get_default_args( array(), $this->group );\n\n\t\tif ( isset( $field_args['field_args'] ) ) {\n\t\t\t$args = wp_parse_args( $field_args, $args );\n\t\t} else {\n\t\t\t$args['field_args'] = wp_parse_args( $field_args, $this->args );\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Returns a cloned version of this field object, but with\n\t * modified\/overridden field arguments.\n\t *\n\t * @since  2.2.2\n\t * @param  array $field_args Array of field arguments, or entire array of\n\t *                           arguments for CMB2_Field.\n\t *\n\t * @return CMB2_Field         The new CMB2_Field instance.\n\t *\/\n\tpublic function get_field_clone( $field_args ) {\n\t\treturn $this->get_new_field( $field_args );\n\t}\n\n\t\/**\n\t * Returns the CMB2 instance this field is registered to.\n\t *\n\t * @since  2.2.2\n\t *\n\t * @return CMB2|WP_Error If new CMB2_Field is called without cmb_id arg, returns error.\n\t *\/\n\tpublic function get_cmb() {\n\t\tif ( ! $this->cmb_id ) {\n\t\t\treturn new WP_Error( 'no_cmb_id', esc_html__( 'Sorry, this field does not have a cmb_id specified.', 'cmb2' ) );\n\t\t}\n\n\t\treturn cmb2_get_metabox( $this->cmb_id, $this->object_id, $this->object_type );\n\t}\n\n\t\/**\n\t * Converts deprecated field parameters to the current\/proper parameter, and throws a deprecation notice.\n\t *\n\t * @since  2.2.3\n\t * @param  array $args Metabox field config array.\n\t * @return array       Modified field config array.\n\t *\/\n\tprotected function convert_deprecated_params( $args ) {\n\n\t\tif ( isset( $args['row_classes'] ) ) {\n\n\t\t\t\/\/ We'll let this one be.\n\t\t\t\/\/ $this->deprecated_param( __CLASS__ . '::__construct()', '2.2.3', self::DEPRECATED_PARAM, 'row_classes', 'classes' );\n\t\t\t\/\/ row_classes param could be a callback. This is definitely deprecated.\n\t\t\tif ( is_callable( $args['row_classes'] ) ) {\n\n\t\t\t\t$this->deprecated_param( __CLASS__ . '::__construct()', '2.2.3', self::DEPRECATED_CB_PARAM, 'row_classes', 'classes_cb' );\n\n\t\t\t\t$args['classes_cb'] = $args['row_classes'];\n\t\t\t\t$args['classes'] = null;\n\t\t\t} else {\n\n\t\t\t\t$args['classes'] = $args['row_classes'];\n\t\t\t}\n\n\t\t\tunset( $args['row_classes'] );\n\t\t}\n\n\t\t\/\/ default param can be passed a callback as well.\n\t\tif ( is_callable( $args['default'] ) ) {\n\n\t\t\t$this->deprecated_param( __CLASS__ . '::__construct()', '2.2.3', self::DEPRECATED_CB_PARAM, 'default', 'default_cb' );\n\n\t\t\t$args['default_cb'] = $args['default'];\n\t\t\t$args['default'] = null;\n\t\t}\n\n\t\t\/\/ options param can be passed a callback as well.\n\t\tif ( is_callable( $args['options'] ) ) {\n\n\t\t\t$this->deprecated_param( __CLASS__ . '::__construct()', '2.2.3', self::DEPRECATED_CB_PARAM, 'options', 'options_cb' );\n\n\t\t\t$args['options_cb'] = $args['options'];\n\t\t\t$args['options'] = array();\n\t\t}\n\n\t\treturn $args;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Ajax.php","ext":"php","size":9257,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * CMB2 ajax methods\n * (i.e. a lot of work to get oEmbeds to work with non-post objects)\n *\n * @since  0.9.5\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n *\/\nclass CMB2_Ajax {\n\n\t\/\/ Whether to hijack the oembed cache system.\n\tprotected $hijack      = false;\n\tprotected $object_id   = 0;\n\tprotected $embed_args  = array();\n\tprotected $object_type = 'post';\n\tprotected $ajax_update = false;\n\n\t\/**\n\t * Instance of this class.\n\t *\n\t * @since 2.2.2\n\t * @var object\n\t *\/\n\tprotected static $instance;\n\n\t\/**\n\t * Get the singleton instance of this class.\n\t *\n\t * @since 2.2.2\n\t * @return CMB2_Ajax\n\t *\/\n\tpublic static function get_instance() {\n\t\tif ( ! ( self::$instance instanceof self ) ) {\n\t\t\tself::$instance = new self();\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.0\n\t *\/\n\tprotected function __construct() {\n\t\tadd_action( 'wp_ajax_cmb2_oembed_handler', array( $this, 'oembed_handler' ) );\n\t\tadd_action( 'wp_ajax_nopriv_cmb2_oembed_handler', array( $this, 'oembed_handler' ) );\n\t\t\/\/ Need to occasionally clean stale oembed cache data from the option value.\n\t\tadd_action( 'cmb2_save_options-page_fields', array( __CLASS__, 'clean_stale_options_page_oembeds' ) );\n\t}\n\n\t\/**\n\t * Handles our oEmbed ajax request\n\t *\n\t * @since  0.9.5\n\t * @return mixed oEmbed embed code | fallback | error message\n\t *\/\n\tpublic function oembed_handler() {\n\n\t\t\/\/ Verify our nonce.\n\t\tif ( ! ( isset( $_REQUEST['cmb2_ajax_nonce'], $_REQUEST['oembed_url'] ) && wp_verify_nonce( $_REQUEST['cmb2_ajax_nonce'], 'ajax_nonce' ) ) ) {\n\t\t\tdie();\n\t\t}\n\n\t\t\/\/ Sanitize our search string.\n\t\t$oembed_string = sanitize_text_field( $_REQUEST['oembed_url'] );\n\n\t\t\/\/ Send back error if empty.\n\t\tif ( empty( $oembed_string ) ) {\n\t\t\twp_send_json_error( '<p class=\"ui-state-error-text\">' . esc_html__( 'Please Try Again', 'cmb2' ) . '<\/p>' );\n\t\t}\n\n\t\t\/\/ Set width of embed.\n\t\t$embed_width = isset( $_REQUEST['oembed_width'] ) && intval( $_REQUEST['oembed_width'] ) < 640 ? intval( $_REQUEST['oembed_width'] ) : '640';\n\n\t\t\/\/ Set url.\n\t\t$oembed_url = esc_url( $oembed_string );\n\n\t\t\/\/ Set args.\n\t\t$embed_args = array(\n\t\t\t'width' => $embed_width,\n\t\t);\n\n\t\t$this->ajax_update = true;\n\n\t\t\/\/ Get embed code (or fallback link).\n\t\t$html = $this->get_oembed( array(\n\t\t\t'url'         => $oembed_url,\n\t\t\t'object_id'   => $_REQUEST['object_id'],\n\t\t\t'object_type' => isset( $_REQUEST['object_type'] ) ? $_REQUEST['object_type'] : 'post',\n\t\t\t'oembed_args' => $embed_args,\n\t\t\t'field_id'    => $_REQUEST['field_id'],\n\t\t) );\n\n\t\twp_send_json_success( $html );\n\t}\n\n\t\/**\n\t * Retrieves oEmbed from url\/object ID\n\t *\n\t * @since  0.9.5\n\t * @param  array $args Arguments for method.\n\t * @return mixed HTML markup with embed or fallback.\n\t *\/\n\tpublic function get_oembed_no_edit( $args ) {\n\t\tglobal $wp_embed;\n\n\t\t$oembed_url = esc_url( $args['url'] );\n\n\t\t\/\/ Sanitize object_id.\n\t\t$this->object_id = is_numeric( $args['object_id'] ) ? absint( $args['object_id'] ) : sanitize_text_field( $args['object_id'] );\n\n\t\t$args = wp_parse_args( $args, array(\n\t\t\t'object_type' => 'post',\n\t\t\t'oembed_args' => array(),\n\t\t\t'field_id'    => false,\n\t\t\t'wp_error'    => false,\n\t\t) );\n\n\t\t$this->embed_args =& $args;\n\n\t\t\/*\n\t\t * Set the post_ID so oEmbed won't fail\n\t\t * wp-includes\/class-wp-embed.php, WP_Embed::shortcode()\n\t\t *\/\n\t\t$wp_embed->post_ID = $this->object_id;\n\n\t\t\/\/ Special scenario if NOT a post object.\n\t\tif ( isset( $args['object_type'] ) && 'post' != $args['object_type'] ) {\n\n\t\t\tif ( 'options-page' == $args['object_type'] ) {\n\n\t\t\t\t\/\/ Bogus id to pass some numeric checks. Issue with a VERY large WP install?\n\t\t\t\t$wp_embed->post_ID = 1987645321;\n\t\t\t}\n\n\t\t\t\/\/ Ok, we need to hijack the oembed cache system.\n\t\t\t$this->hijack = true;\n\t\t\t$this->object_type = $args['object_type'];\n\n\t\t\t\/\/ Gets ombed cache from our object's meta (vs postmeta).\n\t\t\tadd_filter( 'get_post_metadata', array( $this, 'hijack_oembed_cache_get' ), 10, 3 );\n\n\t\t\t\/\/ Sets ombed cache in our object's meta (vs postmeta).\n\t\t\tadd_filter( 'update_post_metadata', array( $this, 'hijack_oembed_cache_set' ), 10, 4 );\n\n\t\t}\n\n\t\t$embed_args = '';\n\n\t\tforeach ( $args['oembed_args'] as $key => $val ) {\n\t\t\t$embed_args .= \" $key=\\\"$val\\\"\";\n\t\t}\n\n\t\t\/\/ Ping WordPress for an embed.\n\t\t$embed = $wp_embed->run_shortcode( '[embed' . $embed_args . ']' . $oembed_url . '[\/embed]' );\n\n\t\t\/\/ Fallback that WordPress creates when no oEmbed was found.\n\t\t$fallback = $wp_embed->maybe_make_link( $oembed_url );\n\n\t\treturn compact( 'embed', 'fallback', 'args' );\n\t}\n\n\t\/**\n\t * Retrieves oEmbed from url\/object ID\n\t *\n\t * @since  0.9.5\n\t * @param  array $args Arguments for method.\n\t * @return string HTML markup with embed or fallback.\n\t *\/\n\tpublic function get_oembed( $args ) {\n\t\t$oembed = $this->get_oembed_no_edit( $args );\n\n\t\t\/\/ Send back our embed.\n\t\tif ( $oembed['embed'] && $oembed['embed'] != $oembed['fallback'] ) {\n\t\t\treturn '<div class=\"cmb2-oembed embed-status\">' . $oembed['embed'] . '<p class=\"cmb2-remove-wrapper\"><a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"' . $oembed['args']['field_id'] . '\">' . esc_html__( 'Remove Embed', 'cmb2' ) . '<\/a><\/p><\/div>';\n\t\t}\n\n\t\t\/\/ Otherwise, send back error info that no oEmbeds were found.\n\t\treturn sprintf(\n\t\t\t'<p class=\"ui-state-error-text\">%s<\/p>',\n\t\t\tsprintf(\n\t\t\t\t\/* translators: 1: results for. 2: link to codex.wordpress.org\/Embeds *\/\n\t\t\t\tesc_html__( 'No oEmbed Results Found for %1$s. View more info at %2$s.', 'cmb2' ),\n\t\t\t\t$oembed['fallback'],\n\t\t\t\t'<a href=\"https:\/\/wordpress.org\/support\/article\/embeds\/\" target=\"_blank\">codex.wordpress.org\/Embeds<\/a>'\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Hijacks retrieving of cached oEmbed.\n\t * Returns cached data from relevant object metadata (vs postmeta)\n\t *\n\t * @since  0.9.5\n\t * @param  boolean $check     Whether to retrieve postmeta or override.\n\t * @param  int     $object_id Object ID.\n\t * @param  string  $meta_key  Object metakey.\n\t * @return mixed              Object's oEmbed cached data.\n\t *\/\n\tpublic function hijack_oembed_cache_get( $check, $object_id, $meta_key ) {\n\t\tif ( ! $this->hijack || ( $this->object_id != $object_id && 1987645321 !== $object_id ) ) {\n\t\t\treturn $check;\n\t\t}\n\n\t\tif ( $this->ajax_update ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $this->cache_action( $meta_key );\n\t}\n\n\t\/**\n\t * Hijacks saving of cached oEmbed.\n\t * Saves cached data to relevant object metadata (vs postmeta)\n\t *\n\t * @since  0.9.5\n\t * @param  boolean $check      Whether to continue setting postmeta.\n\t * @param  int     $object_id  Object ID to get postmeta from.\n\t * @param  string  $meta_key   Postmeta's key.\n\t * @param  mixed   $meta_value Value of the postmeta to be saved.\n\t * @return boolean             Whether to continue setting.\n\t *\/\n\tpublic function hijack_oembed_cache_set( $check, $object_id, $meta_key, $meta_value ) {\n\n\t\tif (\n\t\t\t! $this->hijack\n\t\t\t|| ( $this->object_id != $object_id && 1987645321 !== $object_id )\n\t\t\t\/\/ Only want to hijack oembed meta values.\n\t\t\t|| 0 !== strpos( $meta_key, '_oembed_' )\n\t\t) {\n\t\t\treturn $check;\n\t\t}\n\n\t\t$this->cache_action( $meta_key, $meta_value );\n\n\t\t\/\/ Anything other than `null` to cancel saving to postmeta.\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Gets\/updates the cached oEmbed value from\/to relevant object metadata (vs postmeta).\n\t *\n\t * @since 1.3.0\n\t *\n\t * @param string $meta_key Postmeta's key.\n\t * @return mixed\n\t *\/\n\tprotected function cache_action( $meta_key ) {\n\t\t$func_args = func_get_args();\n\t\t$action    = isset( $func_args[1] ) ? 'update' : 'get';\n\n\t\tif ( 'options-page' === $this->object_type ) {\n\n\t\t\t$args = array( $meta_key );\n\n\t\t\tif ( 'update' === $action ) {\n\t\t\t\t$args[] = $func_args[1];\n\t\t\t\t$args[] = true;\n\t\t\t}\n\n\t\t\t\/\/ Cache the result to our options.\n\t\t\t$status = call_user_func_array( array( cmb2_options( $this->object_id ), $action ), $args );\n\t\t} else {\n\n\t\t\t$args = array( $this->object_type, $this->object_id, $meta_key );\n\t\t\t$args[] = 'update' === $action ? $func_args[1] : true;\n\n\t\t\t\/\/ Cache the result to our metadata.\n\t\t\t$status = call_user_func_array( $action . '_metadata', $args );\n\t\t}\n\n\t\treturn $status;\n\t}\n\n\t\/**\n\t * Hooks in when options-page data is saved to clean stale\n\t * oembed cache data from the option value.\n\t *\n\t * @since  2.2.0\n\t * @param  string $option_key The options-page option key.\n\t * @return void\n\t *\/\n\tpublic static function clean_stale_options_page_oembeds( $option_key ) {\n\t\t$options = cmb2_options( $option_key )->get_options();\n\t\t$modified = false;\n\t\tif ( is_array( $options ) ) {\n\n\t\t\t$ttl = apply_filters( 'oembed_ttl', DAY_IN_SECONDS, '', array(), 0 );\n\t\t\t$now = time();\n\n\t\t\tforeach ( $options as $key => $value ) {\n\t\t\t\t\/\/ Check for cached oembed data.\n\t\t\t\tif ( 0 === strpos( $key, '_oembed_time_' ) ) {\n\t\t\t\t\t$cached_recently = ( $now - $value ) < $ttl;\n\n\t\t\t\t\tif ( ! $cached_recently ) {\n\t\t\t\t\t\t$modified = true;\n\t\t\t\t\t\t\/\/ Remove the the cached ttl expiration, and the cached oembed value.\n\t\t\t\t\t\tunset( $options[ $key ] );\n\t\t\t\t\t\tunset( $options[ str_replace( '_oembed_time_', '_oembed_', $key ) ] );\n\t\t\t\t\t}\n\t\t\t\t} \/\/ End if.\n\t\t\t\t\/\/ Remove the cached unknown values.\n\t\t\t\telseif ( '{{unknown}}' === $value ) {\n\t\t\t\t\t$modified = true;\n\t\t\t\t\tunset( $options[ $key ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Update the option and remove stale cache data.\n\t\tif ( $modified ) {\n\t\t\t$updated = cmb2_options( $option_key )->set( $options );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Show_Filters.php","ext":"php","size":4474,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Show On Filters\n * Use the 'cmb2_show_on' filter to further refine the conditions\n * under which a metabox is displayed.\n * Below you can limit it by ID and page template\n *\n * All methods in this class are automatically filtered\n *\n * @since  1.0.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Show_Filters {\n\n\t\/**\n\t * Get Show_on key. backwards compatible w\/ 'key' indexes\n\t *\n\t * @since  2.0.0\n\t *\n\t * @param  array $meta_box_args Metabox config array.\n\t *\n\t * @return mixed                show_on key or false\n\t *\/\n\tprivate static function get_show_on_key( $meta_box_args ) {\n\t\t$show_on = isset( $meta_box_args['show_on'] ) ? (array) $meta_box_args['show_on'] : false;\n\t\tif ( $show_on && is_array( $show_on ) ) {\n\n\t\t\tif ( array_key_exists( 'key', $show_on ) ) {\n\t\t\t\treturn $show_on['key'];\n\t\t\t}\n\n\t\t\t$keys = array_keys( $show_on );\n\t\t\treturn $keys[0];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Get Show_on value. backwards compatible w\/ 'value' indexes\n\t *\n\t * @since  2.0.0\n\t *\n\t * @param  array $meta_box_args Metabox config array.\n\t *\n\t * @return mixed                show_on value or false\n\t *\/\n\tprivate static function get_show_on_value( $meta_box_args ) {\n\t\t$show_on = isset( $meta_box_args['show_on'] ) ? (array) $meta_box_args['show_on'] : false;\n\n\t\tif ( $show_on && is_array( $show_on ) ) {\n\n\t\t\tif ( array_key_exists( 'value', $show_on ) ) {\n\t\t\t\treturn $show_on['value'];\n\t\t\t}\n\n\t\t\t$keys = array_keys( $show_on );\n\n\t\t\treturn $show_on[ $keys[0] ];\n\t\t}\n\n\t\treturn array();\n\t}\n\n\t\/**\n\t * Add metaboxes for an specific ID\n\t *\n\t * @since  1.0.0\n\t * @param  bool  $display       To display or not.\n\t * @param  array $meta_box_args Metabox config array.\n\t * @param  CMB2  $cmb           The CMB2 instance.\n\t * @return bool                 Whether to display this metabox on the current page.\n\t *\/\n\tpublic static function check_id( $display, $meta_box_args, $cmb ) {\n\n\t\t$key = self::get_show_on_key( $meta_box_args );\n\t\tif ( ! $key || 'id' !== $key ) {\n\t\t\treturn $display;\n\t\t}\n\n\t\t$object_id = is_admin() ? $cmb->object_id() : get_the_ID();\n\n\t\tif ( ! $object_id ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ If current page id is in the included array, display the metabox.\n\t\treturn in_array( $object_id, (array) self::get_show_on_value( $meta_box_args ) );\n\t}\n\n\t\/**\n\t * Add metaboxes for an specific Page Template\n\t *\n\t * @since  1.0.0\n\t * @param  bool  $display       To display or not.\n\t * @param  array $meta_box_args Metabox config array.\n\t * @param  CMB2  $cmb           CMB2 object.\n\t * @return bool            Whether to display this metabox on the current page.\n\t *\/\n\tpublic static function check_page_template( $display, $meta_box_args, $cmb ) {\n\n\t\t$key = self::get_show_on_key( $meta_box_args );\n\t\tif ( ! $key || 'page-template' !== $key ) {\n\t\t\treturn $display;\n\t\t}\n\n\t\t$object_id = $cmb->object_id();\n\n\t\tif ( ! $object_id || 'post' !== $cmb->object_type() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Get current template.\n\t\t$current_template = get_post_meta( $object_id, '_wp_page_template', true );\n\n\t\t\/\/ See if there's a match.\n\t\tif ( $current_template && in_array( $current_template, (array) self::get_show_on_value( $meta_box_args ) ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Only show options-page metaboxes on their options page (but only enforce on the admin side)\n\t *\n\t * @since  1.0.0\n\t * @param  bool  $display  To display or not.\n\t * @param  array $meta_box_args Metabox config array.\n\t * @return bool            Whether to display this metabox on the current page.\n\t *\/\n\tpublic static function check_admin_page( $display, $meta_box_args ) {\n\n\t\t$key = self::get_show_on_key( $meta_box_args );\n\t\t\/\/ check if this is a 'options-page' metabox.\n\t\tif ( ! $key || 'options-page' !== $key ) {\n\t\t\treturn $display;\n\t\t}\n\n\t\t\/\/ Enforce 'show_on' filter in the admin.\n\t\tif ( is_admin() ) {\n\n\t\t\t\/\/ If there is no 'page' query var, our filter isn't applicable.\n\t\t\tif ( ! isset( $_GET['page'] ) ) {\n\t\t\t\treturn $display;\n\t\t\t}\n\n\t\t\t$show_on = self::get_show_on_value( $meta_box_args );\n\n\t\t\tif ( empty( $show_on ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif ( is_array( $show_on ) ) {\n\t\t\t\tforeach ( $show_on as $page ) {\n\t\t\t\t\tif ( $_GET['page'] == $page ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( $_GET['page'] == $show_on ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t\/\/ Allow options-page metaboxes to be displayed anywhere on the front-end.\n\t\treturn true;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Hookup.php","ext":"php","size":28099,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Handles hooking CMB2 forms\/metaboxes into the post\/attachement\/user screens\n * and handles hooking in and saving those fields.\n *\n * @since  2.0.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Hookup extends CMB2_Hookup_Base {\n\n\t\/**\n\t * Only allow JS registration once\n\t *\n\t * @var   bool\n\t * @since 2.0.7\n\t *\/\n\tprotected static $js_registration_done = false;\n\n\t\/**\n\t * Only allow CSS registration once\n\t *\n\t * @var   bool\n\t * @since 2.0.7\n\t *\/\n\tprotected static $css_registration_done = false;\n\n\t\/**\n\t * CMB taxonomies array for term meta\n\t *\n\t * @var   array\n\t * @since 2.2.0\n\t *\/\n\tprotected $taxonomies = array();\n\n\t\/**\n\t * Custom field columns.\n\t *\n\t * @var   array\n\t * @since 2.2.2\n\t *\/\n\tprotected $columns = array();\n\n\t\/**\n\t * Array of CMB2_Options_Hookup instances if options page metabox.\n\t *\n\t * @var   CMB2_Options_Hookup[]|null\n\t * @since 2.2.5\n\t *\/\n\tprotected $options_hookup = null;\n\n\t\/**\n\t * A functionalized constructor, used for the hookup action callbacks.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @param  CMB2 $cmb The CMB2 object to hookup.\n\t *\n\t * @return CMB2_Hookup_Base $hookup The hookup object.\n\t *\/\n\tpublic static function maybe_init_and_hookup( CMB2 $cmb ) {\n\t\tif ( $cmb->prop( 'hookup' ) ) {\n\n\t\t\t$hookup = new self( $cmb );\n\n\t\t\t\/\/ Hook in the hookup... how meta.\n\t\t\treturn $hookup->universal_hooks();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic function universal_hooks() {\n\t\tforeach ( get_class_methods( 'CMB2_Show_Filters' ) as $filter ) {\n\t\t\tadd_filter( 'cmb2_show_on', array( 'CMB2_Show_Filters', $filter ), 10, 3 );\n\t\t}\n\n\t\tif ( is_admin() ) {\n\t\t\t\/\/ Register our scripts and styles for cmb.\n\t\t\t$this->once( 'admin_enqueue_scripts', array( __CLASS__, 'register_scripts' ), 8 );\n\t\t\t$this->once( 'admin_enqueue_scripts', array( $this, 'do_scripts' ) );\n\n\t\t\t$this->maybe_enqueue_column_display_styles();\n\n\t\t\tswitch ( $this->object_type ) {\n\t\t\t\tcase 'post':\n\t\t\t\t\treturn $this->post_hooks();\n\t\t\t\tcase 'comment':\n\t\t\t\t\treturn $this->comment_hooks();\n\t\t\t\tcase 'user':\n\t\t\t\t\treturn $this->user_hooks();\n\t\t\t\tcase 'term':\n\t\t\t\t\treturn $this->term_hooks();\n\t\t\t\tcase 'options-page':\n\t\t\t\t\treturn $this->options_page_hooks();\n\n\t\t\t}\n\t\t}\n\n\t\tdo_action( 'cmb2_init_hooks', $this );\n\n\t\treturn $this;\n\t}\n\n\tpublic function post_hooks() {\n\n\t\t\/\/ Fetch the context we set in our call.\n\t\t$context = $this->cmb->prop( 'context' ) ? $this->cmb->prop( 'context' ) : 'normal';\n\n\t\t\/\/ Call the proper hook based on the context provided.\n\t\tswitch ( $context ) {\n\n\t\t\tcase 'form_top':\n\t\t\t\tadd_action( 'edit_form_top', array( $this, 'add_context_metaboxes' ) );\n\t\t\t\tbreak;\n\n\t\t\tcase 'before_permalink':\n\t\t\t\tadd_action( 'edit_form_before_permalink', array( $this, 'add_context_metaboxes' ) );\n\t\t\t\tbreak;\n\n\t\t\tcase 'after_title':\n\t\t\t\tadd_action( 'edit_form_after_title', array( $this, 'add_context_metaboxes' ) );\n\t\t\t\tbreak;\n\n\t\t\tcase 'after_editor':\n\t\t\t\tadd_action( 'edit_form_after_editor', array( $this, 'add_context_metaboxes' ) );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tadd_action( 'add_meta_boxes', array( $this, 'add_metaboxes' ) );\n\t\t}\n\n\t\tadd_action( 'add_meta_boxes', array( $this, 'remove_default_tax_metaboxes' ) );\n\t\tadd_action( 'add_attachment', array( $this, 'save_post' ) );\n\t\tadd_action( 'edit_attachment', array( $this, 'save_post' ) );\n\t\tadd_action( 'save_post', array( $this, 'save_post' ), 10, 2 );\n\n\t\tif ( $this->cmb->has_columns ) {\n\t\t\tforeach ( $this->cmb->box_types() as $post_type ) {\n\t\t\t\tadd_filter( \"manage_{$post_type}_posts_columns\", array( $this, 'register_column_headers' ) );\n\t\t\t\tadd_action( \"manage_{$post_type}_posts_custom_column\", array( $this, 'column_display' ), 10, 2 );\n\t\t\t\tadd_filter( \"manage_edit-{$post_type}_sortable_columns\", array( $this, 'columns_sortable' ) );\n\t\t\t\tadd_action( 'pre_get_posts', array( $this, 'columns_sortable_orderby' ) );\n\t\t\t}\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\tpublic function comment_hooks() {\n\t\tadd_action( 'add_meta_boxes_comment', array( $this, 'add_metaboxes' ) );\n\t\tadd_action( 'edit_comment', array( $this, 'save_comment' ) );\n\n\t\tif ( $this->cmb->has_columns ) {\n\t\t\tadd_filter( 'manage_edit-comments_columns', array( $this, 'register_column_headers' ) );\n\t\t\tadd_action( 'manage_comments_custom_column', array( $this, 'column_display' ), 10, 3 );\n\t\t\tadd_filter( 'manage_edit-comments_sortable_columns', array( $this, 'columns_sortable' ) );\n\t\t\tadd_action( 'pre_get_posts', array( $this, 'columns_sortable_orderby' ) );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\tpublic function user_hooks() {\n\t\t$priority = $this->get_priority();\n\n\t\tadd_action( 'show_user_profile', array( $this, 'user_metabox' ), $priority );\n\t\tadd_action( 'edit_user_profile', array( $this, 'user_metabox' ), $priority );\n\t\tadd_action( 'user_new_form', array( $this, 'user_new_metabox' ), $priority );\n\n\t\tadd_action( 'personal_options_update', array( $this, 'save_user' ) );\n\t\tadd_action( 'edit_user_profile_update', array( $this, 'save_user' ) );\n\t\tadd_action( 'user_register', array( $this, 'save_user' ) );\n\n\t\tif ( $this->cmb->has_columns ) {\n\t\t\tadd_filter( 'manage_users_columns', array( $this, 'register_column_headers' ) );\n\t\t\tadd_filter( 'manage_users_custom_column', array( $this, 'return_column_display' ), 10, 3 );\n\t\t\tadd_filter( 'manage_users_sortable_columns', array( $this, 'columns_sortable' ) );\n\t\t\tadd_action( 'pre_get_posts', array( $this, 'columns_sortable_orderby' ) );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\tpublic function term_hooks() {\n\t\tif ( ! function_exists( 'get_term_meta' ) ) {\n\t\t\twp_die( esc_html__( 'Term Metadata is a WordPress 4.4+ feature. Please upgrade your WordPress install.', 'cmb2' ) );\n\t\t}\n\n\t\tif ( ! $this->cmb->prop( 'taxonomies' ) ) {\n\t\t\twp_die( esc_html__( 'Term metaboxes configuration requires a \"taxonomies\" parameter.', 'cmb2' ) );\n\t\t}\n\n\t\t$this->taxonomies = (array) $this->cmb->prop( 'taxonomies' );\n\t\t$show_on_term_add = $this->cmb->prop( 'new_term_section' );\n\t\t$priority         = $this->get_priority( 8 );\n\n\t\tforeach ( $this->taxonomies as $taxonomy ) {\n\t\t\t\/\/ Display our form data.\n\t\t\tadd_action( \"{$taxonomy}_edit_form\", array( $this, 'term_metabox' ), $priority, 2 );\n\n\t\t\t$show_on_add = is_array( $show_on_term_add )\n\t\t\t\t? in_array( $taxonomy, $show_on_term_add )\n\t\t\t\t: (bool) $show_on_term_add;\n\n\t\t\t\/**\n\t\t\t * Filter to determine if the term's fields should show in the \"Add term\" section.\n\t\t\t *\n\t\t\t * The dynamic portion of the hook name, $cmb_id, is the metabox id.\n\t\t\t *\n\t\t\t * @param bool   $show_on_add Default is the value of the new_term_section cmb parameter.\n\t\t\t * @param object $cmb         The CMB2 instance\n\t\t\t *\/\n\t\t\t$show_on_add = apply_filters( \"cmb2_show_on_term_add_form_{$this->cmb->cmb_id}\", $show_on_add, $this->cmb );\n\n\t\t\t\/\/ Display form in add-new section (unless specified not to).\n\t\t\tif ( $show_on_add ) {\n\t\t\t\tadd_action( \"{$taxonomy}_add_form_fields\", array( $this, 'term_metabox' ), $priority, 2 );\n\t\t\t}\n\n\t\t\tif ( $this->cmb->has_columns ) {\n\t\t\t\tadd_filter( \"manage_edit-{$taxonomy}_columns\", array( $this, 'register_column_headers' ) );\n\t\t\t\tadd_filter( \"manage_{$taxonomy}_custom_column\", array( $this, 'return_column_display' ), 10, 3 );\n\t\t\t\tadd_filter( \"manage_edit-{$taxonomy}_sortable_columns\", array( $this, 'columns_sortable' ) );\n\t\t\t\tadd_action( 'pre_get_posts', array( $this, 'columns_sortable_orderby' ) );\n\t\t\t}\n\t\t}\n\n\t\tadd_action( 'created_term', array( $this, 'save_term' ), 10, 3 );\n\t\tadd_action( 'edited_terms', array( $this, 'save_term' ), 10, 2 );\n\t\tadd_action( 'delete_term', array( $this, 'delete_term' ), 10, 3 );\n\n\t\treturn $this;\n\t}\n\n\tpublic function options_page_hooks() {\n\t\t$option_keys = $this->cmb->options_page_keys();\n\n\t\tif ( ! empty( $option_keys ) ) {\n\t\t\tforeach ( $option_keys as $option_key ) {\n\t\t\t\t$this->options_hookup[ $option_key ] = new CMB2_Options_Hookup( $this->cmb, $option_key );\n\t\t\t\t$this->options_hookup[ $option_key ]->hooks();\n\t\t\t}\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Registers styles for CMB2\n\t *\n\t * @since 2.0.7\n\t *\/\n\tprotected static function register_styles() {\n\t\tif ( self::$css_registration_done ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Only use minified files if SCRIPT_DEBUG is off.\n\t\t$min   = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';\n\t\t$front = is_admin() ? '' : '-front';\n\t\t$rtl   = is_rtl() ? '-rtl' : '';\n\n\t\t\/**\n\t\t * Filters the registered style dependencies for the cmb2 stylesheet.\n\t\t *\n\t\t * @param array $dependencies The registered style dependencies for the cmb2 stylesheet.\n\t\t *\/\n\t\t$dependencies = apply_filters( 'cmb2_style_dependencies', array() );\n\t\twp_register_style( 'cmb2-styles', CMB2_Utils::url( \"css\/cmb2{$front}{$rtl}{$min}.css\" ), $dependencies );\n\t\twp_register_style( 'cmb2-display-styles', CMB2_Utils::url( \"css\/cmb2-display{$rtl}{$min}.css\" ), $dependencies );\n\n\t\tself::$css_registration_done = true;\n\t}\n\n\t\/**\n\t * Registers scripts for CMB2\n\t *\n\t * @since  2.0.7\n\t *\/\n\tprotected static function register_js() {\n\t\tif ( self::$js_registration_done ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$hook = is_admin() ? 'admin_footer' : 'wp_footer';\n\t\tadd_action( $hook, array( 'CMB2_JS', 'enqueue' ), 8 );\n\n\t\tself::$js_registration_done = true;\n\t}\n\n\t\/**\n\t * Registers scripts and styles for CMB2\n\t *\n\t * @since  1.0.0\n\t *\/\n\tpublic static function register_scripts() {\n\t\tself::register_styles();\n\t\tself::register_js();\n\t}\n\n\t\/**\n\t * Enqueues scripts and styles for CMB2 in admin_head.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param string $hook Current hook for the admin page.\n\t *\/\n\tpublic function do_scripts( $hook ) {\n\t\t$should_pre_enqueue = in_array( $hook, array(\n\t\t\t'post.php',\n\t\t\t'post-new.php',\n\t\t\t'page-new.php',\n\t\t\t'page.php',\n\t\t\t'comment.php',\n\t\t\t'edit-tags.php',\n\t\t\t'term.php',\n\t\t\t'user-new.php',\n\t\t\t'profile.php',\n\t\t\t'user-edit.php',\n\t\t), true );\n\n\t\t\/**\n\t\t * Filter to determine if CMB2 should be pre-enqueued on the current page.\n\t\t *\n\t\t * `show_form_for_type` will have us covered if we miss something here, but may be a\n\t\t * flash of unstyled content.\n\t\t *\n\t\t * @param bool   $should_pre_enqueue Whether CMB2 should be pre-enqueued on the current page.\n\t\t * @param string $hook               The current hook for the admin page.\n\t\t * @param object $cmb                The CMB2 object.\n\t\t *\/\n\t\t$should_pre_enqueue = apply_filters( 'cmb2_should_pre_enqueue', $should_pre_enqueue, $hook, $this );\n\n\t\t\/\/ only pre-enqueue our scripts\/styles on the proper pages\n\t\t\/\/ show_form_for_type will have us covered if we miss something here.\n\t\tif ( $should_pre_enqueue ) {\n\t\t\tif ( $this->cmb->prop( 'cmb_styles' ) ) {\n\t\t\t\tself::enqueue_cmb_css();\n\t\t\t}\n\t\t\tif ( $this->cmb->prop( 'enqueue_js' ) ) {\n\t\t\t\tself::enqueue_cmb_js();\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Register the CMB2 field column headers.\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param array $columns Array of columns available for the admin page.\n\t *\/\n\tpublic function register_column_headers( $columns ) {\n\t\tforeach ( $this->cmb->prop( 'fields' ) as $field ) {\n\t\t\tif ( empty( $field['column'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$column = $field['column'];\n\n\t\t\tif ( false === $column['position'] ) {\n\t\t\t\t$columns[ $field['id'] ] = $column['name'];\n\t\t\t} else {\n\t\t\t\t$before = array_slice( $columns, 0, absint( $column['position'] ) );\n\t\t\t\t$before[ $field['id'] ] = $column['name'];\n\t\t\t\t$columns = $before + $columns;\n\t\t\t}\n\n\t\t\t$column['field'] = $field;\n\t\t\t$this->columns[ $field['id'] ] = $column;\n\t\t}\n\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * The CMB2 field column display output.\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param string $column_name Current column name.\n\t * @param mixed  $object_id Current object ID.\n\t *\/\n\tpublic function column_display( $column_name, $object_id ) {\n\t\tif ( isset( $this->columns[ $column_name ] ) ) {\n\t\t\t$field = new CMB2_Field( array(\n\t\t\t\t'field_args'  => $this->columns[ $column_name ]['field'],\n\t\t\t\t'object_type' => $this->object_type,\n\t\t\t\t'object_id'   => $this->cmb->object_id( $object_id ),\n\t\t\t\t'cmb_id'      => $this->cmb->cmb_id,\n\t\t\t) );\n\n\t\t\t$this->cmb->get_field( $field )->render_column();\n\t\t}\n\t}\n\n\t\/**\n\t * Returns the columns sortable array.\n\t *\n\t * @since 2.6.1\n\t *\n\t * @param array $columns An array of sortable columns.\n\t *\n\t * @return array $columns An array of sortable columns with CMB2 columns.\n\t *\/\n\tpublic function columns_sortable( $columns ) {\n\t\tforeach ( $this->cmb->prop( 'fields' ) as $field ) {\n\t\t\tif ( ! empty( $field['column'] ) && empty( $field['column']['disable_sortable'] ) ) {\n\t\t\t\t$columns[ $field['id'] ] = $field['id'];\n\t\t\t}\n\t\t}\n\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Return the query object to order by custom columns if selected\n\t *\n\t * @since 2.6.1\n\t *\n\t * @param object $query Object query from WordPress\n\t *\n\t * @return void\n\t *\/\n\tpublic function columns_sortable_orderby( $query ) {\n\t\tif ( ! is_admin() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$orderby = $query->get( 'orderby' );\n\n\t\tforeach ( $this->cmb->prop( 'fields' ) as $field ) {\n\t\t\tif (\n\t\t\t\tempty( $field['column'] )\n\t\t\t\t|| ! empty( $field['column']['disable_sortable'] )\n\t\t\t\t|| $field['id'] !== $orderby\n\t\t\t) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$query->set( 'meta_key', $field['id'] );\n\n\t\t\t$type = $field['type'];\n\n\t\t\tif ( ! empty( $field['attributes']['type'] ) ) {\n\t\t\t\tswitch ( $field['attributes']['type'] ) {\n\t\t\t\t\tcase 'number':\n\t\t\t\t\tcase 'date':\n\t\t\t\t\t\t$type = $field['attributes']['type'];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'range':\n\t\t\t\t\t\t$type = 'number';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tswitch ( $type ) {\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'text_date_timestamp':\n\t\t\t\tcase 'text_datetime_timestamp':\n\t\t\t\tcase 'text_money':\n\t\t\t\t\t$query->set( 'orderby', 'meta_value_num' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text_time':\n\t\t\t\t\t$query->set( 'orderby', 'meta_value_time' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text_date':\n\t\t\t\t\t$query->set( 'orderby', 'meta_value_date' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$query->set( 'orderby', 'meta_value' );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Returns the column display.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tpublic function return_column_display( $empty, $custom_column, $object_id ) {\n\t\tob_start();\n\t\t$this->column_display( $custom_column, $object_id );\n\t\t$column = ob_get_clean();\n\n\t\treturn $column ? $column : $empty;\n\t}\n\n\t\/**\n\t * Output the CMB2 box\/fields in an alternate context (not in a standard metabox area).\n\t *\n\t * @since 2.2.4\n\t *\/\n\tpublic function add_context_metaboxes() {\n\n\t\tif ( ! $this->show_on() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$page = get_current_screen()->id;\n\n\t\tforeach ( $this->cmb->box_types() as $object_type ) {\n\t\t\t$screen = convert_to_screen( $object_type );\n\n\t\t\t\/\/ If we're on the right post-type\/object...\n\t\t\tif ( isset( $screen->id ) && $screen->id === $page ) {\n\n\t\t\t\t\/\/ Show the box.\n\t\t\t\t$this->output_context_metabox();\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Output the CMB2 box\/fields in an alternate context (not in a standard metabox area).\n\t *\n\t * @since 2.2.4\n\t *\/\n\tpublic function output_context_metabox() {\n\t\t$title = $this->cmb->prop( 'title' );\n\n\t\t\/*\n\t\t * To keep from outputting the open\/close markup, do not include\n\t\t * a 'title' property in your metabox registration array.\n\t\t *\n\t\t * To output the fields 'naked' (without a postbox wrapper\/style), then\n\t\t * add a `'remove_box_wrap' => true` to your metabox registration array.\n\t\t *\/\n\t\t$add_wrap = ! empty( $title ) || ! $this->cmb->prop( 'remove_box_wrap' );\n\t\t$add_handle = $add_wrap && ! empty( $title );\n\n\t\t\/\/ Open the context-box wrap.\n\t\t$this->context_box_title_markup_open( $add_handle );\n\n\t\t\/\/ Show the form fields.\n\t\t$this->cmb->show_form();\n\n\t\t\/\/ Close the context-box wrap.\n\t\t$this->context_box_title_markup_close( $add_handle );\n\t}\n\n\t\/**\n\t * Output the opening markup for a context box.\n\t *\n\t * @since 2.2.4\n\t * @param bool $add_handle Whether to add the metabox handle and opening div for .inside.\n\t *\/\n\tpublic function context_box_title_markup_open( $add_handle = true ) {\n\t\t$cmb_id = $this->cmb->cmb_id;\n\t\t$title  = $this->cmb->prop( 'title' );\n\t\t$screen = get_current_screen();\n\t\t$page   = $screen->id;\n\t\t$is_55  = CMB2_Utils::wp_at_least( '5.5' );\n\n\t\tadd_filter( \"postbox_classes_{$page}_{$cmb_id}\", array( $this, 'postbox_classes' ) );\n\n\t\t$hidden_class = '';\n\n\t\tif ( $is_55 ) {\n\n\t\t\t\/\/ get_hidden_meta_boxes() doesn't apply in the block editor.\n\t\t\t$is_hidden = ! $screen->is_block_editor() && in_array( $cmb_id, get_hidden_meta_boxes( $screen ), true );\n\n\t\t\t$hidden_class = $is_hidden\n\t\t\t\t? ' hide-if-js'\n\t\t\t\t: '';\n\t\t}\n\n\t\t$toggle_button = sprintf(\n\t\t\t'<button type=\"button\" class=\"handlediv button-link\" aria-expanded=\"true\"><span class=\"screen-reader-text\">%s<\/span><span class=\"toggle-indicator\" aria-hidden=\"true\"><\/span><\/button>',\n\t\t\t\/* translators: %s: name of CMB2 box (panel) *\/\n\t\t\tsprintf( __( 'Toggle panel: %s' ), $title )\n\t\t);\n\t\t$title_tag = '<h2 class=\"hndle\"><span>' . esc_attr( $title ) . '<\/span><\/h2>' . \"\\n\";\n\n\t\techo '<div id=\"' . $cmb_id . '\" class=\"' . postbox_classes( $cmb_id, $page ) . $hidden_class . '\">' . \"\\n\";\n\n\t\tif ( $add_handle ) {\n\n\t\t\tif ( $is_55 ) {\n\t\t\t\techo '<div class=\"postbox-header\">';\n\t\t\t\techo $title_tag;\n\n\t\t\t\techo '<div class=\"handle-actions hide-if-no-js\">';\n\t\t\t\techo $toggle_button;\n\t\t\t\techo '<\/div>';\n\n\t\t\t\techo '<\/div>' . \"\\n\";\n\n\t\t\t} else {\n\t\t\t\techo $toggle_button;\n\t\t\t\techo $title_tag;\n\t\t\t}\n\n\t\t\techo '<div class=\"inside\">' . \"\\n\";\n\t\t}\n\t}\n\n\t\/**\n\t * Output the closing markup for a context box.\n\t *\n\t * @since 2.2.4\n\t * @param bool $add_inside_close Whether to add closing div for .inside.\n\t *\/\n\tpublic function context_box_title_markup_close( $add_inside_close = true ) {\n\n\t\t\/\/ Load the closing divs for a title box.\n\t\tif ( $add_inside_close ) {\n\t\t\techo '<\/div>' . \"\\n\"; \/\/ .inside\n\t\t}\n\n\t\techo '<\/div>' . \"\\n\"; \/\/ .context-box\n\t}\n\n\t\/**\n\t * Add metaboxes (to 'post' or 'comment' object types)\n\t *\n\t * @since 1.0.0\n\t *\/\n\tpublic function add_metaboxes() {\n\n\t\tif ( ! $this->show_on() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/*\n\t\t * To keep from registering an actual post-screen metabox,\n\t\t * omit the 'title' property from the metabox registration array.\n\t\t *\n\t\t * (WordPress will not display metaboxes without titles anyway)\n\t\t *\n\t\t * This is a good solution if you want to handle outputting your\n\t\t * metaboxes\/fields elsewhere in the post-screen.\n\t\t *\/\n\t\tif ( ! $this->cmb->prop( 'title' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$page = get_current_screen()->id;\n\t\tadd_filter( \"postbox_classes_{$page}_{$this->cmb->cmb_id}\", array( $this, 'postbox_classes' ) );\n\n\t\tforeach ( $this->cmb->box_types() as $object_type ) {\n\t\t\tadd_meta_box(\n\t\t\t\t$this->cmb->cmb_id,\n\t\t\t\t$this->cmb->prop( 'title' ),\n\t\t\t\tarray( $this, 'metabox_callback' ),\n\t\t\t\t$object_type,\n\t\t\t\t$this->cmb->prop( 'context' ),\n\t\t\t\t$this->cmb->prop( 'priority' ),\n\t\t\t\t$this->cmb->prop( 'mb_callback_args' )\n\t\t\t);\n\t\t}\n\t}\n\n\t\/**\n\t * Remove the specified default taxonomy metaboxes for a post-type.\n\t *\n\t * @since 2.2.3\n\t *\n\t *\/\n\tpublic function remove_default_tax_metaboxes() {\n\t\t$to_remove = array_filter( (array) $this->cmb->tax_metaboxes_to_remove, 'taxonomy_exists' );\n\t\tif ( empty( $to_remove ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->cmb->box_types() as $post_type ) {\n\t\t\tforeach ( $to_remove as $taxonomy ) {\n\t\t\t\t$mb_id = is_taxonomy_hierarchical( $taxonomy ) ? \"{$taxonomy}div\" : \"tagsdiv-{$taxonomy}\";\n\t\t\t\tremove_meta_box( $mb_id, $post_type, 'side' );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Modify metabox postbox classes.\n\t *\n\t * @since 2.2.4\n\t * @param  array $classes Array of classes.\n\t * @return array           Modified array of classes\n\t *\/\n\tpublic function postbox_classes( $classes ) {\n\t\tif ( $this->cmb->prop( 'closed' ) && ! in_array( 'closed', $classes ) ) {\n\t\t\t$classes[] = 'closed';\n\t\t}\n\n\t\tif ( $this->cmb->is_alternate_context_box() ) {\n\t\t\t$classes = $this->alternate_context_postbox_classes( $classes );\n\t\t} else {\n\t\t\t$classes[] = 'cmb2-postbox';\n\t\t}\n\n\t\treturn $classes;\n\t}\n\n\t\/**\n\t * Modify metabox altnernate context postbox classes.\n\t *\n\t * @since 2.2.4\n\t * @param  array $classes Array of classes.\n\t * @return array           Modified array of classes\n\t *\/\n\tprotected function alternate_context_postbox_classes( $classes ) {\n\t\t$classes[] = 'context-box';\n\t\t$classes[] = 'context-' . $this->cmb->prop( 'context' ) . '-box';\n\n\t\tif ( in_array( $this->cmb->cmb_id, get_hidden_meta_boxes( get_current_screen() ) ) ) {\n\t\t\t$classes[] = 'hide-if-js';\n\t\t}\n\n\t\t$add_wrap = $this->cmb->prop( 'title' ) || ! $this->cmb->prop( 'remove_box_wrap' );\n\n\t\tif ( $add_wrap ) {\n\t\t\t$classes[] = 'cmb2-postbox postbox';\n\t\t} else {\n\t\t\t$classes[] = 'cmb2-no-box-wrap';\n\t\t}\n\n\t\treturn $classes;\n\t}\n\n\t\/**\n\t * Display metaboxes for a post or comment object.\n\t *\n\t * @since  1.0.0\n\t *\/\n\tpublic function metabox_callback() {\n\t\t$object_id = 'comment' === $this->object_type ? get_comment_ID() : get_the_ID();\n\t\t$this->cmb->show_form( $object_id, $this->object_type );\n\t}\n\n\t\/**\n\t * Display metaboxes for new user page.\n\t *\n\t * @since 1.0.0\n\t *\n\t * @param mixed $section User section metabox.\n\t *\/\n\tpublic function user_new_metabox( $section ) {\n\t\tif ( $section === $this->cmb->prop( 'new_user_section' ) ) {\n\t\t\t$object_id = $this->cmb->object_id();\n\t\t\t$this->cmb->object_id( isset( $_REQUEST['user_id'] ) ? $_REQUEST['user_id'] : $object_id );\n\t\t\t$this->user_metabox();\n\t\t}\n\t}\n\n\t\/**\n\t * Display metaboxes for a user object.\n\t *\n\t * @since  1.0.0\n\t *\/\n\tpublic function user_metabox() {\n\t\t$this->show_form_for_type( 'user' );\n\t}\n\n\t\/**\n\t * Display metaboxes for a taxonomy term object.\n\t *\n\t * @since  2.2.0\n\t *\/\n\tpublic function term_metabox() {\n\t\t$this->show_form_for_type( 'term' );\n\t}\n\n\t\/**\n\t * Display metaboxes for an object type.\n\t *\n\t * @since 2.2.0\n\t * @param  string $type Object type.\n\t * @return void\n\t *\/\n\tpublic function show_form_for_type( $type ) {\n\t\tif ( $type != $this->object_type ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! $this->show_on() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( $this->cmb->prop( 'cmb_styles' ) ) {\n\t\t\tself::enqueue_cmb_css();\n\t\t}\n\t\tif ( $this->cmb->prop( 'enqueue_js' ) ) {\n\t\t\tself::enqueue_cmb_js();\n\t\t}\n\n\t\t$this->cmb->show_form( 0, $type );\n\t}\n\n\t\/**\n\t * Determines if metabox should be shown in current context.\n\t *\n\t * @since 2.0.0\n\t * @return bool Whether metabox should be added\/shown.\n\t *\/\n\tpublic function show_on() {\n\t\t\/\/ If metabox is requesting to be conditionally shown.\n\t\t$show = $this->cmb->should_show();\n\n\t\t\/**\n\t\t * Filter to determine if metabox should show. Default is true.\n\t\t *\n\t\t * @param array  $show          Default is true, show the metabox.\n\t\t * @param mixed  $meta_box_args Array of the metabox arguments.\n\t\t * @param mixed  $cmb           The CMB2 instance.\n\t\t *\/\n\t\t$show = (bool) apply_filters( 'cmb2_show_on', $show, $this->cmb->meta_box, $this->cmb );\n\n\t\treturn $show;\n\t}\n\n\t\/**\n\t * Get the CMB priority property set to numeric hook priority.\n\t *\n\t * @since 2.2.0\n\t *\n\t * @param integer $default Default display hook priority.\n\t * @return integer          Hook priority.\n\t *\/\n\tpublic function get_priority( $default = 10 ) {\n\t\t$priority = $this->cmb->prop( 'priority' );\n\n\t\tif ( ! is_numeric( $priority ) ) {\n\t\t\tswitch ( $priority ) {\n\n\t\t\t\tcase 'high':\n\t\t\t\t\t$priority = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'low':\n\t\t\t\t\t$priority = 20;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$priority = $default;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $priority;\n\t}\n\n\t\/**\n\t * Save data from post metabox\n\t *\n\t * @since 1.0.0\n\t * @param  int   $post_id Post ID.\n\t * @param  mixed $post    Post object.\n\t * @return void\n\t *\/\n\tpublic function save_post( $post_id, $post = false ) {\n\n\t\t$post_type = $post ? $post->post_type : get_post_type( $post_id );\n\n\t\t$do_not_pass_go = (\n\t\t\t! $this->can_save( $post_type )\n\t\t\t\/\/ Check user editing permissions.\n\t\t\t|| ( 'page' === $post_type && ! current_user_can( 'edit_page', $post_id ) )\n\t\t\t|| ! current_user_can( 'edit_post', $post_id )\n\t\t);\n\n\t\tif ( $do_not_pass_go ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->cmb->save_fields( $post_id, 'post', $_POST );\n\t}\n\n\t\/**\n\t * Save data from comment metabox.\n\t *\n\t * @since 2.0.9\n\t * @param  int $comment_id Comment ID.\n\t * @return void\n\t *\/\n\tpublic function save_comment( $comment_id ) {\n\n\t\t$can_edit = current_user_can( 'moderate_comments', $comment_id );\n\n\t\tif ( $this->can_save( get_comment_type( $comment_id ) ) && $can_edit ) {\n\t\t\t$this->cmb->save_fields( $comment_id, 'comment', $_POST );\n\t\t}\n\t}\n\n\t\/**\n\t * Save data from user fields.\n\t *\n\t * @since 1.0.x\n\t * @param  int $user_id User ID.\n\t * @return void\n\t *\/\n\tpublic function save_user( $user_id ) {\n\t\t\/\/ check permissions.\n\t\tif ( $this->can_save( 'user' ) ) {\n\t\t\t$this->cmb->save_fields( $user_id, 'user', $_POST );\n\t\t}\n\t}\n\n\t\/**\n\t * Save data from term fields\n\t *\n\t * @since 2.2.0\n\t * @param int    $term_id  Term ID.\n\t * @param int    $tt_id    Term Taxonomy ID.\n\t * @param string $taxonomy Taxonomy.\n\t * @return void\n\t *\/\n\tpublic function save_term( $term_id, $tt_id, $taxonomy = '' ) {\n\t\t$taxonomy = $taxonomy ? $taxonomy : $tt_id;\n\n\t\t\/\/ check permissions.\n\t\tif ( $this->taxonomy_can_save( $taxonomy ) && $this->can_save( 'term' ) ) {\n\t\t\t$this->cmb->save_fields( $term_id, 'term', $_POST );\n\t\t}\n\t}\n\n\t\/**\n\t * Delete term meta when a term is deleted.\n\t *\n\t * @since 2.2.0\n\t * @param  int    $term_id  Term ID.\n\t * @param  int    $tt_id    Term Taxonomy ID.\n\t * @param  string $taxonomy Taxonomy.\n\t * @return void\n\t *\/\n\tpublic function delete_term( $term_id, $tt_id, $taxonomy = '' ) {\n\t\tif ( $this->taxonomy_can_save( $taxonomy ) ) {\n\n\t\t\t$data_to_delete = array();\n\t\t\tforeach ( $this->cmb->prop( 'fields' ) as $field ) {\n\t\t\t\t$data_to_delete[ $field['id'] ] = '';\n\t\t\t}\n\n\t\t\t$this->cmb->save_fields( $term_id, 'term', $data_to_delete );\n\t\t}\n\t}\n\n\t\/**\n\t * Determines if the current object is able to be saved.\n\t *\n\t * @since  2.0.9\n\t * @param  string $type Current object type.\n\t * @return bool         Whether object can be saved.\n\t *\/\n\tpublic function can_save( $type = '' ) {\n\n\t\t$can_save = (\n\t\t\t$this->cmb->prop( 'save_fields' )\n\t\t\t\/\/ check nonce.\n\t\t\t&& isset( $_POST[ $this->cmb->nonce() ] )\n\t\t\t&& wp_verify_nonce( $_POST[ $this->cmb->nonce() ], $this->cmb->nonce() )\n\t\t\t\/\/ check if autosave.\n\t\t\t&& ! ( defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE )\n\t\t\t\/\/ get the metabox types & compare it to this type.\n\t\t\t&& ( $type && in_array( $type, $this->cmb->box_types() ) )\n\t\t\t\/\/ Don't do updates during a switch-to-blog instance.\n\t\t\t&& ! ( is_multisite() && ms_is_switched() )\n\t\t);\n\n\t\t\/**\n\t\t * Filter to determine if metabox is allowed to save.\n\t\t *\n\t\t * @param bool   $can_save Whether the current metabox can save.\n\t\t * @param object $cmb      The CMB2 instance.\n\t\t *\/\n\t\treturn apply_filters( 'cmb2_can_save', $can_save, $this->cmb );\n\t}\n\n\t\/**\n\t * Determine if taxonomy of term being modified is cmb2-editable.\n\t *\n\t * @since 2.2.0\n\t *\n\t * @param string $taxonomy Taxonomy of term being modified.\n\t * @return bool             Whether taxonomy is editable.\n\t *\/\n\tpublic function taxonomy_can_save( $taxonomy ) {\n\t\tif ( empty( $this->taxonomies ) || ! in_array( $taxonomy, $this->taxonomies ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$taxonomy_object = get_taxonomy( $taxonomy );\n\t\t\/\/ Can the user edit this term?\n\t\tif ( ! isset( $taxonomy_object->cap ) || ! current_user_can( $taxonomy_object->cap->edit_terms ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Enqueues the 'cmb2-display-styles' if the conditions match (has columns, on the right page, etc).\n\t *\n\t * @since  2.2.2.1\n\t *\/\n\tprotected function maybe_enqueue_column_display_styles() {\n\t\tglobal $pagenow;\n\t\tif (\n\t\t\t$pagenow\n\t\t\t&& $this->cmb->has_columns\n\t\t\t&& $this->cmb->prop( 'cmb_styles' )\n\t\t\t&& in_array( $pagenow, array( 'edit.php', 'users.php', 'edit-comments.php', 'edit-tags.php' ), 1 )\n\t\t\t) {\n\t\t\tself::enqueue_cmb_css( 'cmb2-display-styles' );\n\t\t}\n\t}\n\n\t\/**\n\t * Includes CMB2 styles.\n\t *\n\t * @since 2.0.0\n\t *\n\t * @param string $handle CSS handle.\n\t * @return mixed\n\t *\/\n\tpublic static function enqueue_cmb_css( $handle = 'cmb2-styles' ) {\n\n\t\t\/**\n\t\t * Filter to determine if CMB2'S css should be enqueued.\n\t\t *\n\t\t * @param bool $enqueue_css Default is true.\n\t\t *\/\n\t\tif ( ! apply_filters( 'cmb2_enqueue_css', true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tself::register_styles();\n\n\t\t\/*\n\t\t * White list the options as this method can be used as a hook callback\n\t\t * and have a different argument passed.\n\t\t *\/\n\t\treturn wp_enqueue_style( 'cmb2-display-styles' === $handle ? $handle : 'cmb2-styles' );\n\t}\n\n\t\/**\n\t * Includes CMB2 JS.\n\t *\n\t * @since  2.0.0\n\t *\/\n\tpublic static function enqueue_cmb_js() {\n\n\t\t\/**\n\t\t * Filter to determine if CMB2'S JS should be enqueued.\n\t\t *\n\t\t * @param bool $enqueue_js Default is true.\n\t\t *\/\n\t\tif ( ! apply_filters( 'cmb2_enqueue_js', true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tself::register_js();\n\t\treturn true;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Types.php","ext":"php","size":21410,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB field type objects\n *\n * @since  1.0.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Types {\n\n\t\/**\n\t * An iterator value for repeatable fields\n\t *\n\t * @var   integer\n\t * @since 1.0.0\n\t *\/\n\tpublic $iterator = 0;\n\n\t\/**\n\t * Current CMB2_Field field object\n\t *\n\t * @var   CMB2_Field object\n\t * @since 1.0.0\n\t *\/\n\tpublic $field;\n\n\t\/**\n\t * Current CMB2_Type_Base object\n\t *\n\t * @var   CMB2_Type_Base object\n\t * @since 2.2.2\n\t *\/\n\tpublic $type = null;\n\n\tpublic function __construct( CMB2_Field $field ) {\n\t\t$this->field = $field;\n\t}\n\n\t\/**\n\t * Default fallback. Allows rendering fields via \"cmb2_render_$fieldtype\" hook\n\t *\n\t * @since 1.0.0\n\t * @param string $fieldtype Non-existent field type name\n\t * @param array  $arguments All arguments passed to the method\n\t *\/\n\tpublic function __call( $fieldtype, $arguments ) {\n\n\t\t\/\/ Check for methods to be proxied to the CMB2_Type_Base object.\n\t\tif ( $exists = $this->maybe_proxy_method( $fieldtype, $arguments ) ) {\n\t\t\treturn $exists['value'];\n\t\t}\n\n\t\t\/\/ Check for custom field type class.\n\t\tif ( $object = $this->maybe_custom_field_object( $fieldtype, $arguments ) ) {\n\t\t\treturn $object->render();\n\t\t}\n\n\t\t\/**\n\t\t * Pass non-existent field types through an action.\n\t\t *\n\t\t * The dynamic portion of the hook name, $fieldtype, refers to the field type.\n\t\t *\n\t\t * @param array  $field              The passed in `CMB2_Field` object\n\t\t * @param mixed  $escaped_value      The value of this field escaped.\n\t\t *                                   It defaults to `sanitize_text_field`.\n\t\t *                                   If you need the unescaped value, you can access it\n\t\t *                                   via `$field->value()`\n\t\t * @param int    $object_id          The ID of the current object\n\t\t * @param string $object_type        The type of object you are working with.\n\t\t *                                   Most commonly, `post` (this applies to all post-types),\n\t\t *                                   but could also be `comment`, `user` or `options-page`.\n\t\t * @param object $field_type_object  This `CMB2_Types` object\n\t\t *\/\n\t\tdo_action( \"cmb2_render_{$fieldtype}\", $this->field, $this->field->escaped_value(), $this->field->object_id, $this->field->object_type, $this );\n\t}\n\n\t\/**\n\t * Render a field (and handle repeatable)\n\t *\n\t * @since  1.1.0\n\t *\/\n\tpublic function render() {\n\t\tif ( $this->field->args( 'repeatable' ) ) {\n\t\t\t$this->render_repeatable_field();\n\t\t} else {\n\t\t\t$this->_render();\n\t\t}\n\t}\n\n\t\/**\n\t * Render a field type\n\t *\n\t * @since  1.1.0\n\t *\/\n\tprotected function _render() {\n\t\t$this->field->peform_param_callback( 'before_field' );\n\t\techo $this->{$this->field->type()}();\n\t\t$this->field->peform_param_callback( 'after_field' );\n\t}\n\n\t\/**\n\t * Proxies the method call to the CMB2_Type_Base object, if it exists, otherwise returns a default fallback value.\n\t *\n\t * @since  2.2.2\n\t *\n\t * @param  string $method  Method to call on the CMB2_Type_Base object.\n\t * @param  mixed  $default Default fallback value if method is not found.\n\t * @param  array  $args    Optional arguments to pass to proxy method.\n\t *\n\t * @return mixed           Results from called method.\n\t *\/\n\tprotected function proxy_method( $method, $default, $args = array() ) {\n\t\tif ( ! is_object( $this->type ) ) {\n\t\t\t$this->guess_type_object( $method );\n\t\t}\n\n\t\tif ( is_object( $this->type ) && method_exists( $this->type, $method ) ) {\n\n\t\t\treturn empty( $args )\n\t\t\t\t? $this->type->$method()\n\t\t\t\t: call_user_func_array( array( $this->type, $method ), $args );\n\t\t}\n\n\t\treturn $default;\n\t}\n\n\t\/**\n\t * If no CMB2_Types::$type object is initiated when a proxy method is called, it means\n\t * it's a custom field type (which SHOULD be instantiating a Type), but let's try and\n\t * guess the type object for them and instantiate it.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param string $method  Method attempting to be called on the CMB2_Type_Base object.\n\t * @return bool\n\t *\/\n\tprotected function guess_type_object( $method ) {\n\t\t$fieldtype = $this->field->type();\n\n\t\t\/\/ Try to \"guess\" the Type object based on the method requested.\n\t\tswitch ( $method ) {\n\t\t\tcase 'select_option':\n\t\t\tcase 'list_input':\n\t\t\tcase 'list_input_checkbox':\n\t\t\tcase 'concat_items':\n\t\t\t\t$this->get_new_render_type( $fieldtype, 'CMB2_Type_Select' );\n\t\t\t\tbreak;\n\t\t\tcase 'is_valid_img_ext':\n\t\t\tcase 'img_status_output':\n\t\t\tcase 'file_status_output':\n\t\t\t\t$this->get_new_render_type( $fieldtype, 'CMB2_Type_File_Base' );\n\t\t\t\tbreak;\n\t\t\tcase 'parse_picker_options':\n\t\t\t\t$this->get_new_render_type( $fieldtype, 'CMB2_Type_Text_Date' );\n\t\t\t\tbreak;\n\t\t\tcase 'get_object_terms':\n\t\t\tcase 'get_terms':\n\t\t\t\t$this->get_new_render_type( $fieldtype, 'CMB2_Type_Taxonomy_Multicheck' );\n\t\t\t\tbreak;\n\t\t\tcase 'date_args':\n\t\t\tcase 'time_args':\n\t\t\t\t$this->get_new_render_type( $fieldtype, 'CMB2_Type_Text_Datetime_Timestamp' );\n\t\t\t\tbreak;\n\t\t\tcase 'parse_args':\n\t\t\t\t$this->get_new_render_type( $fieldtype, 'CMB2_Type_Text' );\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn null !== $this->type;\n\t}\n\n\t\/**\n\t * Check for methods to be proxied to the CMB2_Type_Base object.\n\t *\n\t * @since  2.2.4\n\t * @param  string $method    The possible method to proxy.\n\t * @param  array  $arguments All arguments passed to the method.\n\t * @return bool|array        False if not proxied, else array with 'value' key being the return of the method.\n\t *\/\n\tpublic function maybe_proxy_method( $method, $arguments ) {\n\t\t$exists = false;\n\n\t\t$proxied = array(\n\t\t\t'get_object_terms'     => array(),\n\t\t\t'is_valid_img_ext'     => false,\n\t\t\t'parse_args'           => array(),\n\t\t\t'concat_items'         => '',\n\t\t\t'select_option'        => '',\n\t\t\t'list_input'           => '',\n\t\t\t'list_input_checkbox'  => '',\n\t\t\t'img_status_output'    => '',\n\t\t\t'file_status_output'   => '',\n\t\t\t'parse_picker_options' => array(),\n\t\t);\n\t\tif ( isset( $proxied[ $method ] ) ) {\n\t\t\t$exists = array(\n\t\t\t\t\/\/ Ok, proxy the method call to the CMB2_Type_Base object.\n\t\t\t\t'value' => $this->proxy_method( $method, $proxied[ $method ], $arguments ),\n\t\t\t);\n\t\t}\n\n\t\treturn $exists;\n\t}\n\n\t\/**\n\t * Checks for a custom field CMB2_Type_Base class to use for rendering.\n\t *\n\t * @since 2.2.4\n\t *\n\t * @param string $fieldtype Non-existent field type name.\n\t * @param array  $args      Optional field arguments.\n\t *\n\t * @return bool|CMB2_Type_Base Type object if custom field is an object, false if field was added with\n\t *                             `cmb2_render_{$field_type}` action.\n\t * @throws Exception if custom field type class does not extend CMB2_Type_Base.\n\t *\/\n\tpublic function maybe_custom_field_object( $fieldtype, $args = array() ) {\n\t\tif ( $render_class_name = $this->get_render_type_class( $fieldtype ) ) {\n\t\t\t$this->type = new $render_class_name( $this, $args );\n\n\t\t\tif ( ! ( $this->type instanceof CMB2_Type_Base ) ) {\n\t\t\t\tthrow new Exception( __( 'Custom CMB2 field type classes must extend CMB2_Type_Base.', 'cmb2' ) );\n\t\t\t}\n\n\t\t\treturn $this->type;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Gets the render type CMB2_Type_Base object to use for rendering the field.\n\t *\n\t * @since  2.2.4\n\t * @param  string $fieldtype         The type of field being rendered.\n\t * @param  string $render_class_name The default field type class to use. Defaults to null.\n\t * @param  array  $args              Optional arguments to pass to type class.\n\t * @param  mixed  $additional        Optional additional argument to pass to type class.\n\t * @return CMB2_Type_Base            Type object.\n\t *\/\n\tpublic function get_new_render_type( $fieldtype, $render_class_name = null, $args = array(), $additional = '' ) {\n\t\t$render_class_name = $this->get_render_type_class( $fieldtype, $render_class_name );\n\t\t$this->type = new $render_class_name( $this, $args, $additional );\n\n\t\treturn $this->type;\n\t}\n\n\t\/**\n\t * Checks for the render type class to use for rendering the field.\n\t *\n\t * @since  2.2.4\n\t * @param  string $fieldtype         The type of field being rendered.\n\t * @param  string $render_class_name The default field type class to use. Defaults to null.\n\t * @return string                    The field type class to use.\n\t *\/\n\tpublic function get_render_type_class( $fieldtype, $render_class_name = null ) {\n\t\t$render_class_name = $this->field->args( 'render_class' ) ? $this->field->args( 'render_class' ) : $render_class_name;\n\n\t\tif ( has_action( \"cmb2_render_class_{$fieldtype}\" ) ) {\n\n\t\t\t\/**\n\t\t\t * Filters the custom field type class used for rendering the field. Class is required to extend CMB2_Type_Base.\n\t\t\t *\n\t\t\t * The dynamic portion of the hook name, $fieldtype, refers to the (custom) field type.\n\t\t\t *\n\t\t\t * @since 2.2.4\n\t\t\t *\n\t\t\t * @param string $render_class_name The custom field type class to use. Default null.\n\t\t\t * @param object $field_type_object This `CMB2_Types` object.\n\t\t\t *\/\n\t\t\t$render_class_name = apply_filters( \"cmb2_render_class_{$fieldtype}\", $render_class_name, $this );\n\t\t}\n\n\t\treturn $render_class_name && class_exists( $render_class_name ) ? $render_class_name : false;\n\t}\n\n\t\/**\n\t * Retrieve text parameter from field's options array (if it has one), or use fallback text\n\t *\n\t * @since 2.0.0\n\t * @param  string $text_key Key in field's options array.\n\t * @param  string $fallback Fallback text.\n\t * @return string\n\t *\/\n\tpublic function _text( $text_key, $fallback = '' ) {\n\t\treturn $this->field->get_string( $text_key, $fallback );\n\t}\n\n\t\/**\n\t * Determine a file's extension\n\t *\n\t * @since  1.0.0\n\t * @param  string $file File url\n\t * @return string|false File extension or false\n\t *\/\n\tpublic function get_file_ext( $file ) {\n\t\treturn CMB2_Utils::get_file_ext( $file );\n\t}\n\n\t\/**\n\t * Get the file name from a url\n\t *\n\t * @since  2.0.0\n\t * @param  string $value File url or path\n\t * @return string        File name\n\t *\/\n\tpublic function get_file_name_from_path( $value ) {\n\t\treturn CMB2_Utils::get_file_name_from_path( $value );\n\t}\n\n\t\/**\n\t * Combines attributes into a string for a form element\n\t *\n\t * @since  1.1.0\n\t * @param  array $attrs        Attributes to concatenate\n\t * @param  array $attr_exclude Attributes that should NOT be concatenated\n\t * @return string               String of attributes for form element\n\t *\/\n\tpublic function concat_attrs( $attrs, $attr_exclude = array() ) {\n\t\treturn CMB2_Utils::concat_attrs( $attrs, $attr_exclude );\n\t}\n\n\t\/**\n\t * Generates repeatable field table markup\n\t *\n\t * @since  1.0.0\n\t *\/\n\tpublic function render_repeatable_field() {\n\t\t$table_id = $this->field->id() . '_repeat';\n\n\t\t$this->_desc( true, true, true );\n\t\t?>\n\n\t\t<div id=\"<?php echo $table_id; ?>\" class=\"cmb-repeat-table cmb-nested\">\n\t\t\t<div class=\"cmb-tbody cmb-field-list\">\n\t\t\t\t<?php $this->repeatable_rows(); ?>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<p class=\"cmb-add-row\">\n\t\t\t<button type=\"button\" data-selector=\"<?php echo $table_id; ?>\" class=\"cmb-add-row-button button-secondary\"><?php echo esc_html( $this->_text( 'add_row_text', esc_html__( 'Add Row', 'cmb2' ) ) ); ?><\/button>\n\t\t<\/p>\n\n\t\t<?php\n\t\t\/\/ reset iterator\n\t\t$this->iterator = 0;\n\t}\n\n\t\/**\n\t * Generates repeatable field rows\n\t *\n\t * @since  1.1.0\n\t *\/\n\tpublic function repeatable_rows() {\n\t\t$meta_value = array_filter( (array) $this->field->escaped_value() );\n\t\t\/\/ check for default content\n\t\t$default    = $this->field->get_default();\n\n\t\t\/\/ check for saved data\n\t\tif ( ! empty( $meta_value ) ) {\n\t\t\t$meta_value = is_array( $meta_value ) ? array_filter( $meta_value ) : $meta_value;\n\t\t\t$meta_value = ! empty( $meta_value ) ? $meta_value : $default;\n\t\t} else {\n\t\t\t$meta_value = $default;\n\t\t}\n\n\t\t\/\/ Loop value array and add a row\n\t\tif ( ! empty( $meta_value ) ) {\n\t\t\tforeach ( (array) $meta_value as $val ) {\n\t\t\t\t$this->field->escaped_value = $val;\n\t\t\t\t$this->repeat_row();\n\t\t\t\t$this->iterator++;\n\t\t\t}\n\t\t} else {\n\n\t\t\t\/\/ If value is empty (including empty array), then clear the value.\n\t\t\t$this->field->escaped_value = $this->field->value = null;\n\n\t\t\t\/\/ Otherwise add one row\n\t\t\t$this->repeat_row();\n\t\t}\n\n\t\t\/\/ Then add an empty row\n\t\t$this->field->escaped_value = $default;\n\t\t$this->iterator = $this->iterator ? $this->iterator : 1;\n\t\t$this->repeat_row( 'empty-row hidden' );\n\t}\n\n\t\/**\n\t * Generates a repeatable row's markup\n\t *\n\t * @since 1.1.0\n\t * @param string $classes Repeatable table row's class\n\t *\/\n\tprotected function repeat_row( $classes = 'cmb-repeat-row' ) {\n\t\t$classes = explode( ' ', $classes );\n\t\t$classes = array_map( 'sanitize_html_class', $classes );\n\t\t?>\n\n\t\t<div class=\"cmb-row <?php echo esc_attr( implode( ' ', $classes ) ); ?>\">\n\t\t\t<div class=\"cmb-td\">\n\t\t\t\t<?php $this->_render(); ?>\n\t\t\t<\/div>\n\t\t\t<div class=\"cmb-td cmb-remove-row\">\n\t\t\t\t<button type=\"button\" class=\"button-secondary cmb-remove-row-button\" title=\"<?php echo esc_attr( $this->_text( 'remove_row_button_title', esc_html__( 'Remove Row', 'cmb2' ) ) ); ?>\"><?php echo esc_html( $this->_text( 'remove_row_text', esc_html__( 'Remove', 'cmb2' ) ) ); ?><\/button>\n\t\t\t<\/div>\n\t\t<\/div>\n\n\t\t<?php\n\t}\n\n\t\/**\n\t * Generates description markup.\n\t *\n\t * @since 1.0.0\n\t * @param bool $paragraph    Paragraph tag or span.\n\t * @param bool $echo         Whether to echo description or only return it.\n\t * @param bool $repeat_group Whether to repeat the group.\n\t * @return string Field's description markup.\n\t *\/\n\tpublic function _desc( $paragraph = false, $echo = false, $repeat_group = false ) {\n\t\t\/\/ Prevent description from printing multiple times for repeatable fields\n\t\tif ( ! $repeat_group && ( $this->field->args( 'repeatable' ) || $this->iterator > 0 ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$desc = $this->field->args( 'description' );\n\n\t\tif ( ! $desc ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$tag = $paragraph ? 'p' : 'span';\n\t\t$desc = sprintf( \"\\n\" . '<%1$s class=\"cmb2-metabox-description\">%2$s<\/%1$s>' . \"\\n\", $tag, $desc );\n\n\t\tif ( $echo ) {\n\t\t\techo $desc;\n\t\t}\n\n\t\treturn $desc;\n\t}\n\n\t\/**\n\t * Generate field name attribute\n\t *\n\t * @since  1.1.0\n\t * @param  string $suffix For multi-part fields\n\t * @return string          Name attribute\n\t *\/\n\tpublic function _name( $suffix = '' ) {\n\t\treturn $this->field->args( '_name' ) . ( $this->field->args( 'repeatable' ) ? '[' . $this->iterator . ']' : '' ) . $suffix;\n\t}\n\n\t\/**\n\t * Generate field id attribute\n\t *\n\t * @since  1.1.0\n\t * @param  string $suffix                     For multi-part fields\n\t * @param  bool   $append_repeatable_iterator Whether to append the iterator attribue if the field is repeatable.\n\t * @return string                             Id attribute\n\t *\/\n\tpublic function _id( $suffix = '', $append_repeatable_iterator = true ) {\n\t\t$id = $this->field->id() . $suffix . ( $this->field->args( 'repeatable' ) ? '_' . $this->iterator : '' );\n\n\t\tif ( $append_repeatable_iterator && $this->field->args( 'repeatable' ) ) {\n\t\t\t$id .= '\" data-iterator=\"' . $this->iterator;\n\t\t}\n\n\t\treturn $id;\n\t}\n\n\t\/**\n\t * Handles outputting an 'input' element\n\t *\n\t * @since  1.1.0\n\t * @param  array  $args Override arguments\n\t * @param  string $type Field type\n\t * @return string       Form input element\n\t *\/\n\tpublic function input( $args = array(), $type = __FUNCTION__ ) {\n\t\treturn $this->get_new_render_type( 'text', 'CMB2_Type_Text', $args, $type )->render();\n\t}\n\n\t\/**\n\t * Handles outputting an 'textarea' element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @return string       Form textarea element\n\t *\/\n\tpublic function textarea( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Textarea', $args )->render();\n\t}\n\n\t\/**\n\t * Begin Field Types\n\t *\/\n\n\tpublic function text() {\n\t\treturn $this->input();\n\t}\n\n\tpublic function hidden() {\n\t\t$args = array(\n\t\t\t'type'  => 'hidden',\n\t\t\t'desc'  => '',\n\t\t\t'class' => 'cmb2-hidden',\n\t\t);\n\t\tif ( $this->field->group ) {\n\t\t\t$args['data-groupid'] = $this->field->group->id();\n\t\t\t$args['data-iterator'] = $this->iterator;\n\t\t}\n\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text', $args, 'input' )->render();\n\t}\n\n\tpublic function text_small() {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text', array(\n\t\t\t'class' => 'cmb2-text-small',\n\t\t\t'desc'  => $this->_desc(),\n\t\t), 'input' )->render();\n\t}\n\n\tpublic function text_medium() {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text', array(\n\t\t\t'class' => 'cmb2-text-medium',\n\t\t\t'desc'  => $this->_desc(),\n\t\t), 'input' )->render();\n\t}\n\n\tpublic function text_email() {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text', array(\n\t\t\t'class' => 'cmb2-text-email cmb2-text-medium',\n\t\t\t'type'  => 'email',\n\t\t), 'input' )->render();\n\t}\n\n\tpublic function text_url() {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text', array(\n\t\t\t'class' => 'cmb2-text-url cmb2-text-medium regular-text',\n\t\t\t'value' => $this->field->escaped_value( 'esc_url' ),\n\t\t), 'input' )->render();\n\t}\n\n\tpublic function text_money() {\n\t\t$input = $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text', array(\n\t\t\t'class' => 'cmb2-text-money',\n\t\t\t'desc'  => $this->_desc(),\n\t\t), 'input' )->render();\n\t\treturn ( ! $this->field->get_param_callback_result( 'before_field' ) ? '$ ' : ' ' ) . $input;\n\t}\n\n\tpublic function textarea_small() {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Textarea', array(\n\t\t\t'class' => 'cmb2-textarea-small',\n\t\t\t'rows'  => 4,\n\t\t) )->render();\n\t}\n\n\tpublic function textarea_code( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Textarea_Code', $args )->render();\n\t}\n\n\tpublic function wysiwyg( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Wysiwyg', $args )->render();\n\t}\n\n\tpublic function text_date( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text_Date', $args )->render();\n\t}\n\n\t\/\/ Alias for text_date\n\tpublic function text_date_timestamp( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text_Date', $args )->render();\n\t}\n\n\tpublic function text_time( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text_Time', $args )->render();\n\t}\n\n\tpublic function text_datetime_timestamp( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text_Datetime_Timestamp', $args )->render();\n\t}\n\n\tpublic function text_datetime_timestamp_timezone( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Text_Datetime_Timestamp_Timezone', $args )->render();\n\t}\n\n\tpublic function select_timezone( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Select_Timezone', $args )->render();\n\t}\n\n\tpublic function colorpicker( $args = array(), $meta_value = '' ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Colorpicker', $args, $meta_value )->render();\n\t}\n\n\tpublic function title( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Title', $args )->render();\n\t}\n\n\tpublic function select( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Select', $args )->render();\n\t}\n\n\tpublic function taxonomy_select( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Taxonomy_Select', $args )->render();\n\t}\n\n\tpublic function taxonomy_select_hierarchical( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Taxonomy_Select_Hierarchical', $args )->render();\n\t}\n\n\tpublic function radio( $args = array(), $type = __FUNCTION__ ) {\n\t\treturn $this->get_new_render_type( $type, 'CMB2_Type_Radio', $args, $type )->render();\n\t}\n\n\tpublic function radio_inline( $args = array() ) {\n\t\treturn $this->radio( $args, __FUNCTION__ );\n\t}\n\n\tpublic function multicheck( $type = 'checkbox' ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Multicheck', array(), $type )->render();\n\t}\n\n\tpublic function multicheck_inline() {\n\t\treturn $this->multicheck( 'multicheck_inline' );\n\t}\n\n\tpublic function checkbox( $args = array(), $is_checked = null ) {\n\t\t\/\/ Avoid get_new_render_type since we need a different default for the 3rd argument than ''.\n\t\t$render_class_name = $this->get_render_type_class( __FUNCTION__, 'CMB2_Type_Checkbox' );\n\t\t$this->type = new $render_class_name( $this, $args, $is_checked );\n\t\treturn $this->type->render();\n\t}\n\n\tpublic function taxonomy_radio( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Taxonomy_Radio', $args )->render();\n\t}\n\n\tpublic function taxonomy_radio_hierarchical( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Taxonomy_Radio_Hierarchical', $args )->render();\n\t}\n\n\tpublic function taxonomy_radio_inline( $args = array() ) {\n\t\treturn $this->taxonomy_radio( $args );\n\t}\n\n\tpublic function taxonomy_multicheck( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Taxonomy_Multicheck', $args )->render();\n\t}\n\n\tpublic function taxonomy_multicheck_hierarchical( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Taxonomy_Multicheck_Hierarchical', $args )->render();\n\t}\n\n\tpublic function taxonomy_multicheck_inline( $args = array() ) {\n\t\treturn $this->taxonomy_multicheck( $args );\n\t}\n\n\tpublic function oembed( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_Oembed', $args )->render();\n\t}\n\n\tpublic function file_list( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_File_List', $args )->render();\n\t}\n\n\tpublic function file( $args = array() ) {\n\t\treturn $this->get_new_render_type( __FUNCTION__, 'CMB2_Type_File', $args )->render();\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Boxes.php","ext":"php","size":3236,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * A CMB2 object instance registry for storing every CMB2 instance.\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Boxes {\n\n\t\/**\n\t * Array of all metabox objects.\n\t *\n\t * @since 2.0.0\n\t * @var array\n\t *\/\n\tprotected static $cmb2_instances = array();\n\n\t\/**\n\t * Add a CMB2 instance object to the registry.\n\t *\n\t * @since 1.X.X\n\t *\n\t * @param CMB2 $cmb_instance CMB2 instance.\n\t *\/\n\tpublic static function add( CMB2 $cmb_instance ) {\n\t\tself::$cmb2_instances[ $cmb_instance->cmb_id ] = $cmb_instance;\n\t}\n\n\t\/**\n\t * Remove a CMB2 instance object from the registry.\n\t *\n\t * @since 1.X.X\n\t *\n\t * @param string $cmb_id A CMB2 instance id.\n\t *\/\n\tpublic static function remove( $cmb_id ) {\n\t\tif ( array_key_exists( $cmb_id, self::$cmb2_instances ) ) {\n\t\t\tunset( self::$cmb2_instances[ $cmb_id ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Retrieve a CMB2 instance by cmb id.\n\t *\n\t * @since 1.X.X\n\t *\n\t * @param string $cmb_id A CMB2 instance id.\n\t *\n\t * @return CMB2|bool False or CMB2 object instance.\n\t *\/\n\tpublic static function get( $cmb_id ) {\n\t\tif ( empty( self::$cmb2_instances ) || empty( self::$cmb2_instances[ $cmb_id ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn self::$cmb2_instances[ $cmb_id ];\n\t}\n\n\t\/**\n\t * Retrieve all CMB2 instances registered.\n\t *\n\t * @since  1.X.X\n\t * @return CMB2[] Array of all registered cmb2 instances.\n\t *\/\n\tpublic static function get_all() {\n\t\treturn self::$cmb2_instances;\n\t}\n\n\t\/**\n\t * Retrieve all CMB2 instances that have the specified property set.\n\t *\n\t * @since  2.4.0\n\t * @param  string $property Property name.\n\t * @param  mixed  $compare  (Optional) The value to compare.\n\t * @return CMB2[]           Array of matching cmb2 instances.\n\t *\/\n\tpublic static function get_by( $property, $compare = 'nocompare' ) {\n\t\t$boxes = array();\n\n\t\tforeach ( self::$cmb2_instances as $cmb_id => $cmb ) {\n\t\t\t$prop = $cmb->prop( $property );\n\n\t\t\tif ( 'nocompare' === $compare ) {\n\t\t\t\tif ( ! empty( $prop ) ) {\n\t\t\t\t\t$boxes[ $cmb_id ] = $cmb;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( $compare === $prop ) {\n\t\t\t\t$boxes[ $cmb_id ] = $cmb;\n\t\t\t}\n\t\t}\n\n\t\treturn $boxes;\n\t}\n\n\t\/**\n\t * Retrieve all CMB2 instances as long as they do not include the ignored property.\n\t *\n\t * @since  2.4.0\n\t * @param  string $property  Property name.\n\t * @param  mixed  $to_ignore The value to ignore.\n\t * @return CMB2[]            Array of matching cmb2 instances.\n\t *\/\n\tpublic static function filter_by( $property, $to_ignore = null ) {\n\t\t$boxes = array();\n\n\t\tforeach ( self::$cmb2_instances as $cmb_id => $cmb ) {\n\n\t\t\tif ( $to_ignore === $cmb->prop( $property ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$boxes[ $cmb_id ] = $cmb;\n\t\t}\n\n\t\treturn $boxes;\n\t}\n\n\t\/**\n\t * Deprecated and left for back-compatibility. The original `get_by_property`\n\t * method was misnamed and never actually used by CMB2 core.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $property  Property name.\n\t * @param  mixed  $to_ignore The value to ignore.\n\t * @return CMB2[]            Array of matching cmb2 instances.\n\t *\/\n\tpublic static function get_by_property( $property, $to_ignore = null ) {\n\t\t_deprecated_function( __METHOD__, '2.4.0', 'CMB2_Boxes::filter_by()' );\n\t\treturn self::filter_by( $property );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Utils.php","ext":"php","size":22200,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 Utilities\n *\n * @since  1.1.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Utils {\n\n\t\/**\n\t * The WordPress ABSPATH constant.\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tprotected static $ABSPATH = ABSPATH;\n\n\t\/**\n\t * The url which is used to load local resources.\n\t *\n\t * @var   string\n\t * @since 2.0.0\n\t *\/\n\tprotected static $url = '';\n\n\t\/**\n\t * Utility method that attempts to get an attachment's ID by it's url\n\t *\n\t * @since  1.0.0\n\t * @param  string $img_url Attachment url.\n\t * @return int|false            Attachment ID or false\n\t *\/\n\tpublic static function image_id_from_url( $img_url ) {\n\t\t$attachment_id = 0;\n\t\t$dir = wp_upload_dir();\n\n\t\t\/\/ Is URL in uploads directory?\n\t\tif ( false === strpos( $img_url, $dir['baseurl'] . '\/' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$file = basename( $img_url );\n\n\t\t$query_args = array(\n\t\t\t'post_type'   => 'attachment',\n\t\t\t'post_status' => 'inherit',\n\t\t\t'fields'      => 'ids',\n\t\t\t'meta_query'  => array(\n\t\t\t\tarray(\n\t\t\t\t\t'value'   => $file,\n\t\t\t\t\t'compare' => 'LIKE',\n\t\t\t\t\t'key'     => '_wp_attachment_metadata',\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\t$query = new WP_Query( $query_args );\n\n\t\tif ( $query->have_posts() ) {\n\n\t\t\tforeach ( $query->posts as $post_id ) {\n\t\t\t\t$meta = wp_get_attachment_metadata( $post_id );\n\t\t\t\t$original_file       = basename( $meta['file'] );\n\t\t\t\t$cropped_image_files = isset( $meta['sizes'] ) ? wp_list_pluck( $meta['sizes'], 'file' ) : array();\n\t\t\t\tif ( $original_file === $file || in_array( $file, $cropped_image_files ) ) {\n\t\t\t\t\t$attachment_id = $post_id;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn 0 === $attachment_id ? false : $attachment_id;\n\t}\n\n\t\/**\n\t * Utility method to get a combined list of default and custom registered image sizes\n\t *\n\t * @since  2.2.4\n\t * @link   http:\/\/core.trac.wordpress.org\/ticket\/18947\n\t * @global array $_wp_additional_image_sizes\n\t * @return array The image sizes\n\t *\/\n\tpublic static function get_available_image_sizes() {\n\t\tglobal $_wp_additional_image_sizes;\n\n\t\t$default_image_sizes = array( 'thumbnail', 'medium', 'large' );\n\t\tforeach ( $default_image_sizes as $size ) {\n\t\t\t$image_sizes[ $size ] = array(\n\t\t\t\t'height' => intval( get_option( \"{$size}_size_h\" ) ),\n\t\t\t\t'width'  => intval( get_option( \"{$size}_size_w\" ) ),\n\t\t\t\t'crop'   => get_option( \"{$size}_crop\" ) ? get_option( \"{$size}_crop\" ) : false,\n\t\t\t);\n\t\t}\n\n\t\tif ( isset( $_wp_additional_image_sizes ) && count( $_wp_additional_image_sizes ) ) {\n\t\t\t$image_sizes = array_merge( $image_sizes, $_wp_additional_image_sizes );\n\t\t}\n\n\t\treturn $image_sizes;\n\t}\n\n\t\/**\n\t * Utility method to return the closest named size from an array of values\n\t *\n\t * Based off of WordPress's image_get_intermediate_size()\n\t * If the size matches an existing size then it will be used. If there is no\n\t * direct match, then the nearest image size larger than the specified size\n\t * will be used. If nothing is found, then the function will return false.\n\t * Uses get_available_image_sizes() to get all available sizes.\n\t *\n\t * @since  2.2.4\n\t * @param  array|string $size Image size. Accepts an array of width and height (in that order).\n\t * @return false|string       Named image size e.g. 'thumbnail'\n\t *\/\n\tpublic static function get_named_size( $size ) {\n\t\t$data = array();\n\n\t\t\/\/ Find the best match when '$size' is an array.\n\t\tif ( is_array( $size ) ) {\n\t\t\t$image_sizes = self::get_available_image_sizes();\n\t\t\t$candidates = array();\n\n\t\t\tforeach ( $image_sizes as $_size => $data ) {\n\n\t\t\t\t\/\/ If there's an exact match to an existing image size, short circuit.\n\t\t\t\tif ( $data['width'] == $size[0] && $data['height'] == $size[1] ) {\n\t\t\t\t\t$candidates[ $data['width'] * $data['height'] ] = array( $_size, $data );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t\/\/ If it's not an exact match, consider larger sizes with the same aspect ratio.\n\t\t\t\tif ( $data['width'] >= $size[0] && $data['height'] >= $size[1] ) {\n\n\t\t\t\t\t\/**\n\t\t\t\t\t * To test for varying crops, we constrain the dimensions of the larger image\n\t\t\t\t\t * to the dimensions of the smaller image and see if they match.\n\t\t\t\t\t *\/\n\t\t\t\t\tif ( $data['width'] > $size[0] ) {\n\t\t\t\t\t\t$constrained_size = wp_constrain_dimensions( $data['width'], $data['height'], $size[0] );\n\t\t\t\t\t\t$expected_size = array( $size[0], $size[1] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$constrained_size = wp_constrain_dimensions( $size[0], $size[1], $data['width'] );\n\t\t\t\t\t\t$expected_size = array( $data['width'], $data['height'] );\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/ If the image dimensions are within 1px of the expected size, we consider it a match.\n\t\t\t\t\t$matched = ( abs( $constrained_size[0] - $expected_size[0] ) <= 1 && abs( $constrained_size[1] - $expected_size[1] ) <= 1 );\n\n\t\t\t\t\tif ( $matched ) {\n\t\t\t\t\t\t$candidates[ $data['width'] * $data['height'] ] = array( $_size, $data );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! empty( $candidates ) ) {\n\t\t\t\t\/\/ Sort the array by size if we have more than one candidate.\n\t\t\t\tif ( 1 < count( $candidates ) ) {\n\t\t\t\t\tksort( $candidates );\n\t\t\t\t}\n\n\t\t\t\t$data = array_shift( $candidates );\n\t\t\t\t$data = $data[0];\n\t\t\t} elseif ( ! empty( $image_sizes['thumbnail'] ) && $image_sizes['thumbnail']['width'] >= $size[0] && $image_sizes['thumbnail']['width'] >= $size[1] ) {\n\t\t\t\t\/*\n\t\t\t\t * When the size requested is smaller than the thumbnail dimensions, we\n\t\t\t\t * fall back to the thumbnail size.\n\t\t\t\t *\/\n\t\t\t\t$data = 'thumbnail';\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} elseif ( ! empty( $image_sizes[ $size ] ) ) {\n\t\t\t$data = $size;\n\t\t}\/\/ End if.\n\n\t\t\/\/ If we still don't have a match at this point, return false.\n\t\tif ( empty( $data ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Utility method that returns time string offset by timezone\n\t *\n\t * @since  1.0.0\n\t * @param  string $tzstring Time string.\n\t * @return string           Offset time string\n\t *\/\n\tpublic static function timezone_offset( $tzstring ) {\n\t\t$tz_offset = 0;\n\n\t\tif ( ! empty( $tzstring ) && is_string( $tzstring ) ) {\n\t\t\tif ( 'UTC' === substr( $tzstring, 0, 3 ) ) {\n\t\t\t\t$tzstring = str_replace( array( ':15', ':30', ':45' ), array( '.25', '.5', '.75' ), $tzstring );\n\t\t\t\treturn intval( floatval( substr( $tzstring, 3 ) ) * HOUR_IN_SECONDS );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t$date_time_zone_selected = new DateTimeZone( $tzstring );\n\t\t\t\t$tz_offset = timezone_offset_get( $date_time_zone_selected, date_create() );\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\tself::log_if_debug( __METHOD__, __LINE__, $e->getMessage() );\n\t\t\t}\n\t\t}\n\n\t\treturn $tz_offset;\n\t}\n\n\t\/**\n\t * Utility method that returns a timezone string representing the default timezone for the site.\n\t *\n\t * Roughly copied from WordPress, as get_option('timezone_string') will return\n\t * an empty string if no value has been set on the options page.\n\t * A timezone string is required by the wp_timezone_choice() used by the\n\t * select_timezone field.\n\t *\n\t * @since  1.0.0\n\t * @return string Timezone string\n\t *\/\n\tpublic static function timezone_string() {\n\t\t$current_offset = get_option( 'gmt_offset' );\n\t\t$tzstring       = get_option( 'timezone_string' );\n\n\t\t\/\/ Remove old Etc mappings. Fallback to gmt_offset.\n\t\tif ( false !== strpos( $tzstring, 'Etc\/GMT' ) ) {\n\t\t\t$tzstring = '';\n\t\t}\n\n\t\tif ( empty( $tzstring ) ) { \/\/ Create a UTC+- zone if no timezone string exists.\n\t\t\tif ( 0 == $current_offset ) {\n\t\t\t\t$tzstring = 'UTC+0';\n\t\t\t} elseif ( $current_offset < 0 ) {\n\t\t\t\t$tzstring = 'UTC' . $current_offset;\n\t\t\t} else {\n\t\t\t\t$tzstring = 'UTC+' . $current_offset;\n\t\t\t}\n\t\t}\n\n\t\treturn $tzstring;\n\t}\n\n\t\/**\n\t * Returns a unix timestamp, first checking if value already is a timestamp.\n\t *\n\t * @since  2.0.0\n\t * @param  string|int $string Possible timestamp string.\n\t * @return int Time stamp.\n\t *\/\n\tpublic static function make_valid_time_stamp( $string ) {\n\t\tif ( ! $string ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$valid = self::is_valid_time_stamp( $string );\n\t\tif ( $valid ) {\n\t\t\t$timestamp  = (int) $string;\n\t\t\t$length     = strlen( (string) $timestamp );\n\t\t\t$unixlength = strlen( (string) time() );\n\t\t\t$diff       = $length - $unixlength;\n\n\t\t\t\/\/ If value is larger than a unix timestamp, we need to round to the\n\t\t\t\/\/ nearest unix timestamp (in seconds).\n\t\t\tif ( $diff > 0 ) {\n\t\t\t\t$divider   = (int) '1' . str_repeat( '0', $diff );\n\t\t\t\t$timestamp = round( $timestamp \/ $divider );\n\t\t\t}\n\t\t} else {\n\t\t\t$timestamp = @strtotime( (string) $string );\n\t\t}\n\n\t\treturn $timestamp;\n\t}\n\n\t\/**\n\t * Determine if a value is a valid date.\n\t *\n\t * @since  2.9.1\n\t * @param  mixed $date Value to check.\n\t * @return boolean     Whether value is a valid date\n\t *\/\n\tpublic static function is_valid_date( $date ) {\n\t\treturn ( is_string( $date ) && @strtotime( $date ) )\n\t\t\t|| self::is_valid_time_stamp( $date );\n\t}\n\n\t\/**\n\t * Determine if a value is a valid timestamp\n\t *\n\t * @since  2.0.0\n\t * @param  mixed $timestamp Value to check.\n\t * @return boolean           Whether value is a valid timestamp\n\t *\/\n\tpublic static function is_valid_time_stamp( $timestamp ) {\n\t\treturn (string) (int) $timestamp === (string) $timestamp\n\t\t\t&& $timestamp <= PHP_INT_MAX\n\t\t\t&& $timestamp >= ~PHP_INT_MAX;\n\t}\n\n\t\/**\n\t * Checks if a value is 'empty'. Still accepts 0.\n\t *\n\t * @since  2.0.0\n\t * @param  mixed $value Value to check.\n\t * @return bool         True or false\n\t *\/\n\tpublic static function isempty( $value ) {\n\t\treturn null === $value || '' === $value || false === $value || array() === $value;\n\t}\n\n\t\/**\n\t * Checks if a value is not 'empty'. 0 doesn't count as empty.\n\t *\n\t * @since  2.2.2\n\t * @param  mixed $value Value to check.\n\t * @return bool         True or false\n\t *\/\n\tpublic static function notempty( $value ) {\n\t\treturn null !== $value && '' !== $value && false !== $value && array() !== $value;\n\t}\n\n\t\/**\n\t * Filters out empty values (not including 0).\n\t *\n\t * @since  2.2.2\n\t * @param  mixed $value Value to check.\n\t * @return array True or false.\n\t *\/\n\tpublic static function filter_empty( $value ) {\n\t\treturn array_filter( $value, array( __CLASS__, 'notempty' ) );\n\t}\n\n\t\/**\n\t * Insert a single array item inside another array at a set position\n\t *\n\t * @since  2.0.2\n\t * @param  array $array    Array to modify. Is passed by reference, and no return is needed. Passed by reference.\n\t * @param  array $new      New array to insert.\n\t * @param  int   $position Position in the main array to insert the new array.\n\t *\/\n\tpublic static function array_insert( &$array, $new, $position ) {\n\t\t$before = array_slice( $array, 0, $position - 1 );\n\t\t$after  = array_diff_key( $array, $before );\n\t\t$array  = array_merge( $before, $new, $after );\n\t}\n\n\t\/**\n\t * Defines the url which is used to load local resources.\n\t * This may need to be filtered for local Window installations.\n\t * If resources do not load, please check the wiki for details.\n\t *\n\t * @since  1.0.1\n\t *\n\t * @param string $path URL path.\n\t * @return string URL to CMB2 resources\n\t *\/\n\tpublic static function url( $path = '' ) {\n\t\tif ( self::$url ) {\n\t\t\treturn self::$url . $path;\n\t\t}\n\n\t\t$cmb2_url = self::get_url_from_dir( cmb2_dir() );\n\n\t\t\/**\n\t\t * Filter the CMB location url.\n\t\t *\n\t\t * @param string $cmb2_url Currently registered url.\n\t\t *\/\n\t\tself::$url = trailingslashit( apply_filters( 'cmb2_meta_box_url', $cmb2_url, CMB2_VERSION ) );\n\n\t\treturn self::$url . $path;\n\t}\n\n\t\/**\n\t * Converts a system path to a URL\n\t *\n\t * @since  2.2.2\n\t * @param  string $dir Directory path to convert.\n\t * @return string      Converted URL.\n\t *\/\n\tpublic static function get_url_from_dir( $dir ) {\n\t\t$dir = self::normalize_path( $dir );\n\n\t\t\/\/ Let's test if We are in the plugins or mu-plugins dir.\n\t\t$test_dir = trailingslashit( $dir ) . 'unneeded.php';\n\t\tif (\n\t\t\t0 === strpos( $test_dir, self::normalize_path( WPMU_PLUGIN_DIR ) )\n\t\t\t|| 0 === strpos( $test_dir, self::normalize_path( WP_PLUGIN_DIR ) )\n\t\t) {\n\t\t\t\/\/ Ok, then use plugins_url, as it is more reliable.\n\t\t\treturn trailingslashit( plugins_url( '', $test_dir ) );\n\t\t}\n\n\t\t\/\/ Ok, now let's test if we are in the theme dir.\n\t\t$theme_root = self::normalize_path( get_theme_root() );\n\t\tif ( 0 === strpos( $dir, $theme_root ) ) {\n\t\t\t\/\/ Ok, then use get_theme_root_uri.\n\t\t\treturn set_url_scheme(\n\t\t\t\ttrailingslashit(\n\t\t\t\t\tstr_replace(\n\t\t\t\t\t\tuntrailingslashit( $theme_root ),\n\t\t\t\t\t\tuntrailingslashit( get_theme_root_uri() ),\n\t\t\t\t\t\t$dir\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t\/\/ Check to see if it's anywhere in the root directory.\n\t\t$site_dir = self::get_normalized_abspath();\n\t\t$site_url = trailingslashit( is_multisite() ? network_site_url() : site_url() );\n\n\t\t$url = str_replace(\n\t\t\tarray( $site_dir, WP_PLUGIN_DIR ),\n\t\t\tarray( $site_url, WP_PLUGIN_URL ),\n\t\t\t$dir\n\t\t);\n\n\t\treturn set_url_scheme( $url );\n\t}\n\n\t\/**\n\t * Get the normalized absolute path defined by WordPress.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @return string  Normalized absolute path.\n\t *\/\n\tprotected static function get_normalized_abspath() {\n\t\treturn self::normalize_path( self::$ABSPATH );\n\t}\n\n\t\/**\n\t * `wp_normalize_path` wrapper for back-compat. Normalize a filesystem path.\n\t *\n\t * On windows systems, replaces backslashes with forward slashes\n\t * and forces upper-case drive letters.\n\t * Allows for two leading slashes for Windows network shares, but\n\t * ensures that all other duplicate slashes are reduced to a single.\n\t *\n\t * @since 2.2.0\n\t *\n\t * @param string $path Path to normalize.\n\t * @return string Normalized path.\n\t *\/\n\tprotected static function normalize_path( $path ) {\n\t\tif ( function_exists( 'wp_normalize_path' ) ) {\n\t\t\treturn wp_normalize_path( $path );\n\t\t}\n\n\t\t\/\/ Replace newer WP's version of wp_normalize_path.\n\t\t$path = str_replace( '\\\\', '\/', $path );\n\t\t$path = preg_replace( '|(?<=.)\/+|', '\/', $path );\n\t\tif ( ':' === substr( $path, 1, 1 ) ) {\n\t\t\t$path = ucfirst( $path );\n\t\t}\n\n\t\treturn $path;\n\t}\n\n\t\/**\n\t * Get timestamp from text date\n\t *\n\t * @since  2.2.0\n\t * @param  string $value       Date value.\n\t * @param  string $date_format Expected date format.\n\t * @return mixed               Unix timestamp representing the date.\n\t *\/\n\tpublic static function get_timestamp_from_value( $value, $date_format ) {\n\t\t$date_object = date_create_from_format( $date_format, $value );\n\t\treturn $date_object ? $date_object->setTime( 0, 0, 0 )->getTimeStamp() : strtotime( $value );\n\t}\n\n\t\/**\n\t * Takes a php date() format string and returns a string formatted to suit for the date\/time pickers\n\t * It will work only with the following subset of date() options:\n\t *\n\t * Formats: d, l, j, z, m, F, n, y, and Y.\n\t *\n\t * A slight effort is made to deal with escaped characters.\n\t *\n\t * Other options are ignored, because they would either bring compatibility problems between PHP and JS, or\n\t * bring even more translation troubles.\n\t *\n\t * @since 2.2.0\n\t * @param string $format PHP date format.\n\t * @return string reformatted string\n\t *\/\n\tpublic static function php_to_js_dateformat( $format ) {\n\n\t\t\/\/ order is relevant here, since the replacement will be done sequentially.\n\t\t$supported_options = array(\n\t\t\t'd'   => 'dd',  \/\/ Day, leading 0.\n\t\t\t'j'   => 'd',   \/\/ Day, no 0.\n\t\t\t'z'   => 'o',   \/\/ Day of the year, no leading zeroes.\n\t\t\t\/\/ 'D' => 'D',   \/\/ Day name short, not sure how it'll work with translations.\n\t\t\t'l '  => 'DD ',  \/\/ Day name full, idem before.\n\t\t\t'l, ' => 'DD, ',  \/\/ Day name full, idem before.\n\t\t\t'm'   => 'mm',  \/\/ Month of the year, leading 0.\n\t\t\t'n'   => 'm',   \/\/ Month of the year, no leading 0.\n\t\t\t\/\/ 'M' => 'M',   \/\/ Month, Short name.\n\t\t\t'F '  => 'MM ',  \/\/ Month, full name.\n\t\t\t'F, ' => 'MM, ',  \/\/ Month, full name.\n\t\t\t'y'   => 'y',   \/\/ Year, two digit.\n\t\t\t'Y'   => 'yy',  \/\/ Year, full.\n\t\t\t'H'   => 'HH',  \/\/ Hour with leading 0 (24 hour).\n\t\t\t'G'   => 'H',   \/\/ Hour with no leading 0 (24 hour).\n\t\t\t'h'   => 'hh',  \/\/ Hour with leading 0 (12 hour).\n\t\t\t'g'   => 'h',   \/\/ Hour with no leading 0 (12 hour).\n\t\t\t'i'   => 'mm',  \/\/ Minute with leading 0.\n\t\t\t's'   => 'ss',  \/\/ Second with leading 0.\n\t\t\t'a'   => 'tt',  \/\/ am\/pm.\n\t\t\t'A'   => 'TT', \/\/ AM\/PM.\n\t\t);\n\n\t\tforeach ( $supported_options as $php => $js ) {\n\t\t\t\/\/ replaces every instance of a supported option, but skips escaped characters.\n\t\t\t$format = preg_replace( \"~(?<!\\\\\\\\)$php~\", $js, $format );\n\t\t}\n\n\t\t$supported_options = array(\n\t\t\t'l' => 'DD',  \/\/ Day name full, idem before.\n\t\t\t'F' => 'MM',  \/\/ Month, full name.\n\t\t);\n\n\t\tif ( isset( $supported_options[ $format ] ) ) {\n\t\t\t$format = $supported_options[ $format ];\n\t\t}\n\n\t\t$format = preg_replace_callback( '~(?:\\\\\\.)+~', array( __CLASS__, 'wrap_escaped_chars' ), $format );\n\n\t\treturn $format;\n\t}\n\n\t\/**\n\t * Get a DateTime object from a value.\n\t *\n\t * @since 2.11.0\n\t *\n\t * @param string $value The value to convert to a DateTime object.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic static function get_datetime_from_value( $value ) {\n\t\treturn is_serialized( $value )\n\t\t\t\/\/ Ok, we need to unserialize the value\n\t\t\t\/\/ -- allows back-compat for older field values with serialized DateTime objects.\n\t\t\t? self::unserialize_datetime( $value )\n\t\t\t\/\/ Handle new json formatted values.\n\t\t\t: self::json_to_datetime( $value );\n\t}\n\n\t\/**\n\t * Unserialize a datetime value string.\n\t *\n\t * This is a back-compat method for older field values with serialized DateTime objects.\n\t *\n\t * @since 2.11.0\n\t *\n\t * @param string $date_value The serialized datetime value.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic static function unserialize_datetime( $date_value ) {\n\t\t$datetime = @unserialize( trim( $date_value ), array( 'allowed_classes' => array( 'DateTime' ) ) );\n\n\t\treturn $datetime && $datetime instanceof DateTime ? $datetime : null;\n\t}\n\n\t\/**\n\t * Convert a json datetime value string to a DateTime object.\n\t *\n\t * @since 2.11.0\n\t *\n\t * @param string $json_string The json value string.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic static function json_to_datetime( $json_string ) {\n\t\tif ( ! is_string( $json_string ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t$json = json_decode( $json_string );\n\n\t\t\/\/ Check if json decode was successful\n\t\tif ( json_last_error() !== JSON_ERROR_NONE ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t\/\/ If so, convert to DateTime object.\n\t\treturn self::unserialize_datetime( str_replace(\n\t\t\t'stdClass',\n\t\t\t'DateTime',\n\t\t\tserialize( $json )\n\t\t) );\n\t}\n\n\t\/**\n\t * Helper function for CMB_Utils::php_to_js_dateformat().\n\t *\n\t * @since  2.2.0\n\t * @param  string $value Value to wrap\/escape.\n\t * @return string Modified value\n\t *\/\n\tpublic static function wrap_escaped_chars( $value ) {\n\t\treturn '&#39;' . str_replace( '\\\\', '', $value[0] ) . '&#39;';\n\t}\n\n\t\/**\n\t * Send to debug.log if WP_DEBUG is defined and true\n\t *\n\t * @since  2.2.0\n\t *\n\t * @param  string $function Function name.\n\t * @param  int    $line     Line number.\n\t * @param  mixed  $msg      Message to output.\n\t * @param  mixed  $debug    Variable to print_r.\n\t *\/\n\tpublic static function log_if_debug( $function, $line, $msg, $debug = null ) {\n\t\tif ( defined( 'WP_DEBUG' ) && WP_DEBUG ) {\n\t\t\terror_log( \"In $function, $line:\" . print_r( $msg, true ) . ( $debug ? print_r( $debug, true ) : '' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Determine a file's extension\n\t *\n\t * @since  1.0.0\n\t * @param  string $file File url.\n\t * @return string|false       File extension or false\n\t *\/\n\tpublic static function get_file_ext( $file ) {\n\t\t$parsed = parse_url( $file, PHP_URL_PATH );\n\t\treturn $parsed ? strtolower( pathinfo( $parsed, PATHINFO_EXTENSION ) ) : false;\n\t}\n\n\t\/**\n\t * Get the file name from a url\n\t *\n\t * @since  2.0.0\n\t * @param  string $value File url or path.\n\t * @return string        File name\n\t *\/\n\tpublic static function get_file_name_from_path( $value ) {\n\t\t$parts = explode( '\/', $value );\n\t\treturn is_array( $parts ) ? end( $parts ) : $value;\n\t}\n\n\t\/**\n\t * Check if WP version is at least $version.\n\t *\n\t * @since  2.2.2\n\t * @param  string $version WP version string to compare.\n\t * @return bool            Result of comparison check.\n\t *\/\n\tpublic static function wp_at_least( $version ) {\n\t\treturn version_compare( get_bloginfo( 'version' ), $version, '>=' );\n\t}\n\n\t\/**\n\t * Combines attributes into a string for a form element.\n\t *\n\t * @since  1.1.0\n\t * @param  array $attrs        Attributes to concatenate.\n\t * @param  array $attr_exclude Attributes that should NOT be concatenated.\n\t * @return string              String of attributes for form element.\n\t *\/\n\tpublic static function concat_attrs( $attrs, $attr_exclude = array() ) {\n\t\t$attr_exclude[] = 'rendered';\n\t\t$attr_exclude[] = 'js_dependencies';\n\n\t\t$attributes = '';\n\t\tforeach ( $attrs as $attr => $val ) {\n\t\t\t$excluded = in_array( $attr, (array) $attr_exclude, true );\n\t\t\t$empty    = false === $val && 'value' !== $attr;\n\t\t\tif ( ! $excluded && ! $empty ) {\n\t\t\t\t$val = is_array( $val ) ? implode( ',', $val ) : $val;\n\n\t\t\t\t\/\/ if data attribute, use single quote wraps, else double.\n\t\t\t\t$quotes = self::is_data_attribute( $attr ) ? \"'\" : '\"';\n\t\t\t\t$attributes .= sprintf( ' %1$s=%3$s%2$s%3$s', $attr, $val, $quotes );\n\t\t\t}\n\t\t}\n\t\treturn $attributes;\n\t}\n\n\t\/**\n\t * Check if given attribute is a data attribute.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @param string $att HTML attribute.\n\t * @return boolean\n\t *\/\n\tpublic static function is_data_attribute( $att ) {\n\t\treturn 0 === stripos( $att, 'data-' );\n\t}\n\n\t\/**\n\t * Ensures value is an array.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed $value   Value to ensure is array.\n\t * @param  array $default Default array. Defaults to empty array.\n\t *\n\t * @return array          The array.\n\t *\/\n\tpublic static function ensure_array( $value, $default = array() ) {\n\t\tif ( empty( $value ) ) {\n\t\t\treturn $default;\n\t\t}\n\n\t\tif ( is_array( $value ) || is_object( $value ) ) {\n\t\t\treturn (array) $value;\n\t\t}\n\n\t\t\/\/ Not sure anything would be non-scalar that is not an array or object?\n\t\tif ( ! is_scalar( $value ) ) {\n\t\t\treturn $default;\n\t\t}\n\n\t\treturn (array) $value;\n\t}\n\n\t\/**\n\t * If number is numeric, normalize it with floatval or intval, depending on if decimal is found.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @param mixed $value Value to normalize (if numeric).\n\t * @return mixed         Possibly normalized value.\n\t *\/\n\tpublic static function normalize_if_numeric( $value ) {\n\t\tif ( is_numeric( $value ) ) {\n\t\t\t$value = false !== strpos( $value, '.' ) ? floatval( $value ) : intval( $value );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Generates a 12 character unique hash from a string.\n\t *\n\t * @since  2.4.0\n\t *\n\t * @param string $string String to create a hash from.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function generate_hash( $string ) {\n\t\treturn substr( base_convert( md5( $string ), 16, 32 ), 0, 12 );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Hookup_Base.php","ext":"php","size":2634,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Base class for hooking CMB2 into WordPress.\n *\n * @since  2.2.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\n * @property-read string $object_type\n * @property-read CMB2   $cmb\n *\/\nabstract class CMB2_Hookup_Base {\n\n\t\/**\n\t * CMB2 object.\n\t *\n\t * @var   CMB2 object\n\t * @since 2.0.2\n\t *\/\n\tprotected $cmb;\n\n\t\/**\n\t * The object type we are performing the hookup for\n\t *\n\t * @var   string\n\t * @since 2.0.9\n\t *\/\n\tprotected $object_type = 'post';\n\n\t\/**\n\t * A functionalized constructor, used for the hookup action callbacks.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @throws Exception Failed implementation.\n\t *\n\t * @param  CMB2 $cmb The CMB2 object to hookup.\n\t *\/\n\tpublic static function maybe_init_and_hookup( CMB2 $cmb ) {\n\t\tthrow new Exception( sprintf( esc_html__( '%1$s should be implemented by the extended class.', 'cmb2' ), __FUNCTION__ ) );\n\t}\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.0.0\n\t * @param CMB2 $cmb The CMB2 object to hookup.\n\t *\/\n\tpublic function __construct( CMB2 $cmb ) {\n\t\t$this->cmb = $cmb;\n\t\t$this->object_type = $this->cmb->mb_object_type();\n\t}\n\n\tabstract public function universal_hooks();\n\n\t\/**\n\t * Ensures WordPress hook only gets fired once per object.\n\t *\n\t * @since  2.0.0\n\t * @param string   $action        The name of the filter to hook the $hook callback to.\n\t * @param callback $hook          The callback to be run when the filter is applied.\n\t * @param integer  $priority      Order the functions are executed.\n\t * @param int      $accepted_args The number of arguments the function accepts.\n\t *\/\n\tpublic function once( $action, $hook, $priority = 10, $accepted_args = 1 ) {\n\t\tstatic $hooks_completed = array();\n\n\t\t$args = func_get_args();\n\n\t\t\/\/ Get object hash.. This bypasses issues with serializing closures.\n\t\tif ( is_object( $hook ) ) {\n\t\t\t$args[1] = spl_object_hash( $args[1] );\n\t\t} elseif ( is_array( $hook ) && is_object( $hook[0] ) ) {\n\t\t\t$args[1][0] = spl_object_hash( $hook[0] );\n\t\t}\n\n\t\t$key = md5( serialize( $args ) );\n\n\t\tif ( ! isset( $hooks_completed[ $key ] ) ) {\n\t\t\t$hooks_completed[ $key ] = 1;\n\t\t\tadd_filter( $action, $hook, $priority, $accepted_args );\n\t\t}\n\t}\n\n\t\/**\n\t * Magic getter for our object.\n\t *\n\t * @param string $field Property to return.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t *\/\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'object_type':\n\t\t\tcase 'cmb':\n\t\t\t\treturn $this->{$field};\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s property: %2$s', 'cmb2' ), __CLASS__, $field ) );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Field_Display.php","ext":"php","size":12626,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 field display base.\n *\n * @since 2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Field_Display {\n\n\t\/**\n\t * A CMB field object\n\t *\n\t * @var   CMB2_Field object\n\t * @since 2.2.2\n\t *\/\n\tpublic $field;\n\n\t\/**\n\t * The CMB field object's value.\n\t *\n\t * @var   mixed\n\t * @since 2.2.2\n\t *\/\n\tpublic $value;\n\n\t\/**\n\t * Get the corresponding display class for the field type.\n\t *\n\t * @since  2.2.2\n\t * @param  CMB2_Field $field Requested field type.\n\t * @return CMB2_Field_Display\n\t *\/\n\tpublic static function get( CMB2_Field $field ) {\n\t\t$fieldtype          = $field->type();\n\t\t$display_class_name = $field->args( 'display_class' );\n\n\t\tif ( empty( $display_class_name ) ) {\n\t\t\tswitch ( $fieldtype ) {\n\t\t\t\tcase 'text_url':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Text_Url';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text_money':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Text_Money';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'colorpicker':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Colorpicker';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'checkbox':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Checkbox';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'wysiwyg':\n\t\t\t\tcase 'textarea_small':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Textarea';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'textarea_code':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Textarea_Code';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text_time':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Text_Time';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text_date':\n\t\t\t\tcase 'text_date_timestamp':\n\t\t\t\tcase 'text_datetime_timestamp':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Text_Date';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'text_datetime_timestamp_timezone':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Text_Date_Timezone';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'select':\n\t\t\t\tcase 'radio':\n\t\t\t\tcase 'radio_inline':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Select';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'multicheck':\n\t\t\t\tcase 'multicheck_inline':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Multicheck';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'taxonomy_radio':\n\t\t\t\tcase 'taxonomy_radio_inline':\n\t\t\t\tcase 'taxonomy_select':\n\t\t\t\tcase 'taxonomy_select_hierarchical':\n\t\t\t\tcase 'taxonomy_radio_hierarchical':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Taxonomy_Radio';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'taxonomy_multicheck':\n\t\t\t\tcase 'taxonomy_multicheck_inline':\n\t\t\t\tcase 'taxonomy_multicheck_hierarchical':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_Taxonomy_Multicheck';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_File';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'file_list':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_File_List';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'oembed':\n\t\t\t\t\t$display_class_name = 'CMB2_Display_oEmbed';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$display_class_name = __CLASS__;\n\t\t\t\t\tbreak;\n\t\t\t}\/\/ End switch.\n\t\t}\n\n\t\tif ( has_action( \"cmb2_display_class_{$fieldtype}\" ) ) {\n\n\t\t\t\/**\n\t\t\t * Filters the custom field display class used for displaying the field. Class is required to extend CMB2_Type_Base.\n\t\t\t *\n\t\t\t * The dynamic portion of the hook name, $fieldtype, refers to the (custom) field type.\n\t\t\t *\n\t\t\t * @since 2.2.4\n\t\t\t *\n\t\t\t * @param string $display_class_name The custom field display class to use.\n\t\t\t * @param object $field              The `CMB2_Field` object.\n\t\t\t *\/\n\t\t\t$display_class_name = apply_filters( \"cmb2_display_class_{$fieldtype}\", $display_class_name, $field );\n\t\t}\n\n\t\treturn new $display_class_name( $field );\n\t}\n\n\t\/**\n\t * Setup our class vars\n\t *\n\t * @since 2.2.2\n\t * @param CMB2_Field $field A CMB2 field object.\n\t *\/\n\tpublic function __construct( CMB2_Field $field ) {\n\t\t$this->field = $field;\n\t\t$this->value = $this->field->value;\n\t}\n\n\t\/**\n\t * Catchall method if field's 'display_cb' is NOT defined, or field type does\n\t * not have a corresponding display method\n\t *\n\t * @since 2.2.2\n\t *\/\n\tpublic function display() {\n\t\t\/\/ If repeatable.\n\t\tif ( $this->field->args( 'repeatable' ) ) {\n\n\t\t\t\/\/ And has a repeatable value.\n\t\t\tif ( is_array( $this->field->value ) ) {\n\n\t\t\t\t\/\/ Then loop and output.\n\t\t\t\techo '<ul class=\"cmb2-' . esc_attr( sanitize_html_class( str_replace( '_', '-', $this->field->type() ) ) ) . '\">';\n\t\t\t\tforeach ( $this->field->value as $val ) {\n\t\t\t\t\t$this->value = $val;\n\t\t\t\t\techo '<li>', $this->_display(), '<\/li>';\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t\techo '<\/ul>';\n\t\t\t}\n\t\t} else {\n\t\t\t$this->_display();\n\t\t}\n\t}\n\n\t\/**\n\t * Default fallback display method.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\tprint_r( $this->value );\n\t}\n}\n\nclass CMB2_Display_Text_Url extends CMB2_Field_Display {\n\t\/**\n\t * Display url value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\techo make_clickable( esc_url( $this->value ) );\n\t}\n}\n\nclass CMB2_Display_Text_Money extends CMB2_Field_Display {\n\t\/**\n\t * Display text_money value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\t$this->value = $this->value ? $this->value : '0';\n\t\techo ( ! $this->field->get_param_callback_result( 'before_field' ) ? '$' : ' ' ), $this->value;\n\t}\n}\n\nclass CMB2_Display_Colorpicker extends CMB2_Field_Display {\n\t\/**\n\t * Display color picker value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\techo '<span class=\"cmb2-colorpicker-swatch\"><span style=\"background-color:', esc_attr( $this->value ), '\"><\/span> ', esc_html( $this->value ), '<\/span>';\n\t}\n}\n\nclass CMB2_Display_Checkbox extends CMB2_Field_Display {\n\t\/**\n\t * Display multicheck value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\techo $this->value === 'on' ? 'on' : 'off';\n\t}\n}\n\nclass CMB2_Display_Select extends CMB2_Field_Display {\n\t\/**\n\t * Display select value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\t$options = $this->field->options();\n\n\t\t$fallback = $this->field->args( 'show_option_none' );\n\t\tif ( ! $fallback && isset( $options[''] ) ) {\n\t\t\t$fallback = $options[''];\n\t\t}\n\t\tif ( ! $this->value && $fallback ) {\n\t\t\techo $fallback;\n\t\t} elseif ( isset( $options[ $this->value ] ) ) {\n\t\t\techo $options[ $this->value ];\n\t\t} else {\n\t\t\techo esc_attr( $this->value );\n\t\t}\n\t}\n}\n\nclass CMB2_Display_Multicheck extends CMB2_Field_Display {\n\t\/**\n\t * Display multicheck value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\tif ( empty( $this->value ) || ! is_array( $this->value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$options = $this->field->options();\n\n\t\t$output = array();\n\t\tforeach ( $this->value as $val ) {\n\t\t\tif ( isset( $options[ $val ] ) ) {\n\t\t\t\t$output[] = $options[ $val ];\n\t\t\t} else {\n\t\t\t\t$output[] = esc_attr( $val );\n\t\t\t}\n\t\t}\n\n\t\techo implode( ', ', $output );\n\t}\n}\n\nclass CMB2_Display_Textarea extends CMB2_Field_Display {\n\t\/**\n\t * Display textarea value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\techo wpautop( wp_kses_post( $this->value ) );\n\t}\n}\n\nclass CMB2_Display_Textarea_Code extends CMB2_Field_Display {\n\t\/**\n\t * Display textarea_code value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\techo '<xmp class=\"cmb2-code\">' . print_r( $this->value, true ) . '<\/xmp>';\n\t}\n}\n\nclass CMB2_Display_Text_Time extends CMB2_Field_Display {\n\t\/**\n\t * Display text_time value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\techo $this->field->get_timestamp_format( 'time_format', $this->value );\n\t}\n}\n\nclass CMB2_Display_Text_Date extends CMB2_Field_Display {\n\t\/**\n\t * Display text_date value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\techo $this->field->get_timestamp_format( 'date_format', $this->value );\n\t}\n}\n\nclass CMB2_Display_Text_Date_Timezone extends CMB2_Field_Display {\n\t\/**\n\t * Display text_datetime_timestamp_timezone value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\tif ( empty( $this->value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$datetime = CMB2_Utils::get_datetime_from_value( $this->value );\n\t\tif ( ! $datetime || ! $datetime instanceof DateTime ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$date     = $datetime->format( stripslashes( $this->field->args( 'date_format' ) ) );\n\t\t$time     = $datetime->format( stripslashes( $this->field->args( 'time_format' ) ) );\n\t\t$timezone = $datetime->getTimezone()->getName();\n\n\t\techo $date;\n\t\tif ( $time ) {\n\t\t\techo ' ' . $time;\n\t\t}\n\t\tif ( $timezone ) {\n\t\t\techo ', ' . $timezone;\n\t\t}\n\t}\n}\n\nclass CMB2_Display_Taxonomy_Radio extends CMB2_Field_Display {\n\t\/**\n\t * Display single taxonomy value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\t$taxonomy = $this->field->args( 'taxonomy' );\n\t\t$types    = new CMB2_Types( $this->field );\n\t\t$type     = $types->get_new_render_type( $this->field->type(), 'CMB2_Type_Taxonomy_Radio' );\n\t\t$terms    = $type->get_object_terms();\n\t\t$term     = false;\n\n\t\tif ( is_wp_error( $terms ) || empty( $terms ) && ( $default = $this->field->get_default() ) ) {\n\t\t\t$term = get_term_by( 'slug', $default, $taxonomy );\n\t\t} elseif ( ! empty( $terms ) ) {\n\t\t\t$term = $terms[ key( $terms ) ];\n\t\t}\n\n\t\tif ( $term ) {\n\t\t\t$link = get_edit_term_link( $term->term_id, $taxonomy );\n\t\t\techo '<a href=\"', esc_url( $link ), '\">', esc_html( $term->name ), '<\/a>';\n\t\t}\n\t}\n}\n\nclass CMB2_Display_Taxonomy_Multicheck extends CMB2_Field_Display {\n\t\/**\n\t * Display taxonomy values.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\t$taxonomy = $this->field->args( 'taxonomy' );\n\t\t$types    = new CMB2_Types( $this->field );\n\t\t$type     = $types->get_new_render_type( $this->field->type(), 'CMB2_Type_Taxonomy_Multicheck' );\n\t\t$terms    = $type->get_object_terms();\n\n\t\tif ( is_wp_error( $terms ) || empty( $terms ) && ( $default = $this->field->get_default() ) ) {\n\t\t\t$terms = array();\n\t\t\tif ( is_array( $default ) ) {\n\t\t\t\tforeach ( $default as $slug ) {\n\t\t\t\t\t$terms[] = get_term_by( 'slug', $slug, $taxonomy );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$terms[] = get_term_by( 'slug', $default, $taxonomy );\n\t\t\t}\n\t\t}\n\n\t\tif ( is_array( $terms ) ) {\n\n\t\t\t$links = array();\n\t\t\tforeach ( $terms as $term ) {\n\t\t\t\t$link = get_edit_term_link( $term->term_id, $taxonomy );\n\t\t\t\t$links[] = '<a href=\"' . esc_url( $link ) . '\">' . esc_html( $term->name ) . '<\/a>';\n\t\t\t}\n\t\t\t\/\/ Then loop and output.\n\t\t\techo '<div class=\"cmb2-taxonomy-terms-', esc_attr( sanitize_html_class( $taxonomy ) ), '\">';\n\t\t\techo implode( ', ', $links );\n\t\t\techo '<\/div>';\n\t\t}\n\t}\n}\n\nclass CMB2_Display_File extends CMB2_Field_Display {\n\t\/**\n\t * Display file value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\tif ( empty( $this->value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->value = esc_url_raw( $this->value );\n\n\t\t$types = new CMB2_Types( $this->field );\n\t\t$type  = $types->get_new_render_type( $this->field->type(), 'CMB2_Type_File_Base' );\n\n\t\t$id = $this->field->get_field_clone( array(\n\t\t\t'id' => $this->field->_id( '', false ) . '_id',\n\t\t) )->escaped_value( 'absint' );\n\n\t\t$this->file_output( $this->value, $id, $type );\n\t}\n\n\tprotected function file_output( $url_value, $id, CMB2_Type_File_Base $field_type ) {\n\t\t\/\/ If there is no ID saved yet, try to get it from the url.\n\t\tif ( $url_value && ! $id ) {\n\t\t\t$id = CMB2_Utils::image_id_from_url( esc_url_raw( $url_value ) );\n\t\t}\n\n\t\tif ( $field_type->is_valid_img_ext( $url_value ) ) {\n\t\t\t$img_size = $this->field->args( 'preview_size' );\n\n\t\t\tif ( $id ) {\n\t\t\t\t$image = wp_get_attachment_image( $id, $img_size, null, array(\n\t\t\t\t\t'class' => 'cmb-image-display',\n\t\t\t\t) );\n\t\t\t} else {\n\t\t\t\t$size = is_array( $img_size ) ? $img_size[0] : 200;\n\t\t\t\t$image = '<img class=\"cmb-image-display\" style=\"max-width: ' . absint( $size ) . 'px; width: 100%; height: auto;\" src=\"' . esc_url( $url_value ) . '\" alt=\"\" \/>';\n\t\t\t}\n\n\t\t\techo $image;\n\n\t\t} else {\n\n\t\t\tprintf( '<div class=\"file-status\"><span>%1$s <strong><a href=\"%2$s\">%3$s<\/a><\/strong><\/span><\/div>',\n\t\t\t\tesc_html( $field_type->_text( 'file_text', __( 'File:', 'cmb2' ) ) ),\n\t\t\t\tesc_url( $url_value ),\n\t\t\t\tesc_html( CMB2_Utils::get_file_name_from_path( $url_value ) )\n\t\t\t);\n\n\t\t}\n\t}\n}\n\nclass CMB2_Display_File_List extends CMB2_Display_File {\n\t\/**\n\t * Display file_list value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\tif ( empty( $this->value ) || ! is_array( $this->value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$types = new CMB2_Types( $this->field );\n\t\t$type  = $types->get_new_render_type( $this->field->type(), 'CMB2_Type_File_Base' );\n\n\t\techo '<ul class=\"cmb2-display-file-list\">';\n\t\tforeach ( $this->value as $id => $fullurl ) {\n\t\t\techo '<li>', $this->file_output( esc_url_raw( $fullurl ), $id, $type ), '<\/li>';\n\t\t}\n\t\techo '<\/ul>';\n\t}\n}\n\nclass CMB2_Display_oEmbed extends CMB2_Field_Display {\n\t\/**\n\t * Display oembed value.\n\t *\n\t * @since 2.2.2\n\t *\/\n\tprotected function _display() {\n\t\tif ( ! $this->value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcmb2_do_oembed( array(\n\t\t\t'url'         => $this->value,\n\t\t\t'object_id'   => $this->field->object_id,\n\t\t\t'object_type' => $this->field->object_type,\n\t\t\t'oembed_args' => array(\n\t\t\t\t'width' => '300',\n\t\t\t),\n\t\t\t'field_id'    => $this->field->id(),\n\t\t) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Sanitize.php","ext":"php","size":17523,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 field sanitization\n *\n * @since  0.0.4\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\n * @method string _id()\n *\/\nclass CMB2_Sanitize {\n\n\t\/**\n\t * A CMB field object\n\t *\n\t * @var CMB2_Field object\n\t *\/\n\tpublic $field;\n\n\t\/**\n\t * Field's value\n\t *\n\t * @var mixed\n\t *\/\n\tpublic $value;\n\n\t\/**\n\t * Setup our class vars\n\t *\n\t * @since 1.1.0\n\t * @param CMB2_Field $field A CMB2 field object.\n\t * @param mixed      $value Field value.\n\t *\/\n\tpublic function __construct( CMB2_Field $field, $value ) {\n\t\t$this->field = $field;\n\t\t$this->value = $value;\n\t}\n\n\t\/**\n\t * Catchall method if field's 'sanitization_cb' is NOT defined,\n\t * or field type does not have a corresponding validation method.\n\t *\n\t * @since  1.0.0\n\t *\n\t * @param  string $name      Non-existent method name.\n\t * @param  array  $arguments All arguments passed to the method.\n\t * @return mixed\n\t *\/\n\tpublic function __call( $name, $arguments ) {\n\t\treturn $this->default_sanitization();\n\t}\n\n\t\/**\n\t * Default fallback sanitization method. Applies filters.\n\t *\n\t * @since  1.0.2\n\t *\/\n\tpublic function default_sanitization() {\n\t\t$field_type = $this->field->type();\n\n\t\t\/**\n\t\t * This exists for back-compatibility, but validation\n\t\t * is not what happens here.\n\t\t *\n\t\t * @deprecated See documentation for \"cmb2_sanitize_{$field_type}\".\n\t\t *\/\n\t\tif ( function_exists( 'apply_filters_deprecated' ) ) {\n\t\t\t$override_value = apply_filters_deprecated( \"cmb2_validate_{$field_type}\", array( null, $this->value, $this->field->object_id, $this->field->args(), $this ), '2.0.0', \"cmb2_sanitize_{$field_type}\" );\n\t\t} else {\n\t\t\t$override_value = apply_filters( \"cmb2_validate_{$field_type}\", null, $this->value, $this->field->object_id, $this->field->args(), $this );\n\t\t}\n\n\t\tif ( null !== $override_value ) {\n\t\t\treturn $override_value;\n\t\t}\n\n\t\t$sanitized_value = '';\n\t\tswitch ( $field_type ) {\n\t\t\tcase 'wysiwyg':\n\t\t\tcase 'textarea_small':\n\t\t\tcase 'oembed':\n\t\t\t\t$sanitized_value = $this->textarea();\n\t\t\t\tbreak;\n\t\t\tcase 'taxonomy_select':\n\t\t\tcase 'taxonomy_select_hierarchical':\n\t\t\tcase 'taxonomy_radio':\n\t\t\tcase 'taxonomy_radio_inline':\n\t\t\tcase 'taxonomy_radio_hierarchical':\n\t\t\tcase 'taxonomy_multicheck':\n\t\t\tcase 'taxonomy_multicheck_hierarchical':\n\t\t\tcase 'taxonomy_multicheck_inline':\n\t\t\t\t$sanitized_value = $this->taxonomy();\n\t\t\t\tbreak;\n\t\t\tcase 'multicheck':\n\t\t\tcase 'multicheck_inline':\n\t\t\tcase 'file_list':\n\t\t\tcase 'group':\n\t\t\t\t\/\/ no filtering\n\t\t\t\t$sanitized_value = $this->value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t\/\/ Handle repeatable fields array\n\t\t\t\t\/\/ We'll fallback to 'sanitize_text_field'\n\t\t\t\t$sanitized_value = $this->_default_sanitization();\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $this->_is_empty_array( $sanitized_value ) ? '' : $sanitized_value;\n\t}\n\n\t\/**\n\t * Default sanitization method, sanitize_text_field. Checks if value is array.\n\t *\n\t * @since  2.2.4\n\t * @return mixed  Sanitized value.\n\t *\/\n\tprotected function _default_sanitization() {\n\t\t\/\/ Handle repeatable fields array.\n\t\treturn is_array( $this->value ) ? array_map( 'sanitize_text_field', $this->value ) : sanitize_text_field( $this->value );\n\t}\n\n\t\/**\n\t * Sets the object terms to the object (if not options-page) and optionally returns the sanitized term values.\n\t *\n\t * @since  2.2.4\n\t * @return mixed  Blank value, or sanitized term values if \"cmb2_return_taxonomy_values_{$cmb_id}\" is true.\n\t *\/\n\tpublic function taxonomy() {\n\t\t$sanitized_value = '';\n\n\t\tif ( ! $this->field->args( 'taxonomy' ) ) {\n\t\t\tCMB2_Utils::log_if_debug( __METHOD__, __LINE__, \"{$this->field->type()} {$this->field->_id( '', false )} is missing the 'taxonomy' parameter.\" );\n\t\t} else {\n\n\t\t\tif ( in_array( $this->field->object_type, array( 'options-page', 'term' ), true ) ) {\n\t\t\t\t$return_values = true;\n\t\t\t} else {\n\t\t\t\twp_set_object_terms( $this->field->object_id, $this->value, $this->field->args( 'taxonomy' ) );\n\t\t\t\t$return_values = false;\n\t\t\t}\n\n\t\t\t$cmb_id = $this->field->cmb_id;\n\n\t\t\t\/**\n\t\t\t * Filter whether 'taxonomy_*' fields should return their value when being sanitized.\n\t\t\t *\n\t\t\t * By default, these fields do not return a value as we do not want them stored to meta\n\t\t\t * (as they are stored as terms). This allows overriding that and is used by CMB2::get_sanitized_values().\n\t\t\t *\n\t\t\t * The dynamic portion of the hook, $cmb_id, refers to the this field's CMB2 box id.\n\t\t\t *\n\t\t\t * @since 2.2.4\n\t\t\t *\n\t\t\t * @param bool          $return_values By default, this is only true for 'options-page' boxes. To enable:\n\t\t\t *                                     `add_filter( \"cmb2_return_taxonomy_values_{$cmb_id}\", '__return_true' );`\n\t\t\t * @param CMB2_Sanitize $sanitizer This object.\n\t\t\t *\/\n\t\t\tif ( apply_filters( \"cmb2_return_taxonomy_values_{$cmb_id}\", $return_values, $this ) ) {\n\t\t\t\t$sanitized_value = $this->_default_sanitization();\n\t\t\t}\n\t\t}\n\n\t\treturn $sanitized_value;\n\t}\n\n\t\/**\n\t * Simple checkbox validation\n\t *\n\t * @since  1.0.1\n\t * @return string|false 'on' or false\n\t *\/\n\tpublic function checkbox() {\n\t\treturn $this->value === 'on' ? 'on' : false;\n\t}\n\n\t\/**\n\t * Validate url in a meta value.\n\t *\n\t * @since  1.0.1\n\t * @return string        Empty string or escaped url\n\t *\/\n\tpublic function text_url() {\n\t\t$protocols = $this->field->args( 'protocols' );\n\t\t$default   = $this->field->get_default();\n\n\t\t\/\/ for repeatable.\n\t\tif ( is_array( $this->value ) ) {\n\t\t\tforeach ( $this->value as $key => $val ) {\n\t\t\t\t$this->value[ $key ] = self::sanitize_and_secure_url( $val, $protocols, $default );\n\t\t\t}\n\t\t} else {\n\t\t\t$this->value = self::sanitize_and_secure_url( $this->value, $protocols, $default );\n\t\t}\n\n\t\treturn $this->value;\n\t}\n\n\tpublic function colorpicker() {\n\t\t\/\/ for repeatable.\n\t\tif ( is_array( $this->value ) ) {\n\t\t\t$check = $this->value;\n\t\t\t$this->value = array();\n\t\t\tforeach ( $check as $key => $val ) {\n\t\t\t\tif ( $val && '#' != $val ) {\n\t\t\t\t\t$this->value[ $key ] = esc_attr( $val );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$this->value = ! $this->value || '#' == $this->value ? '' : esc_attr( $this->value );\n\t\t}\n\t\treturn $this->value;\n\t}\n\n\t\/**\n\t * Validate email in a meta value\n\t *\n\t * @since  1.0.1\n\t * @return string       Empty string or sanitized email\n\t *\/\n\tpublic function text_email() {\n\t\t\/\/ for repeatable.\n\t\tif ( is_array( $this->value ) ) {\n\t\t\tforeach ( $this->value as $key => $val ) {\n\t\t\t\t$val = trim( $val );\n\t\t\t\t$this->value[ $key ] = is_email( $val ) ? $val : '';\n\t\t\t}\n\t\t} else {\n\t\t\t$this->value = trim( $this->value );\n\t\t\t$this->value = is_email( $this->value ) ? $this->value : '';\n\t\t}\n\n\t\treturn $this->value;\n\t}\n\n\t\/**\n\t * Validate money in a meta value\n\t *\n\t * @since  1.0.1\n\t * @return string Empty string or sanitized money value\n\t *\/\n\tpublic function text_money() {\n\t\tif ( ! $this->value ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tglobal $wp_locale;\n\n\t\t$search = array( $wp_locale->number_format['thousands_sep'], $wp_locale->number_format['decimal_point'] );\n\t\t$replace = array( '', '.' );\n\n\t\t\/\/ Strip slashes. Example: 2\\'180.00.\n\t\t\/\/ See https:\/\/github.com\/CMB2\/CMB2\/issues\/1014.\n\t\t$this->value = wp_unslash( $this->value );\n\n\t\t\/\/ for repeatable.\n\t\tif ( is_array( $this->value ) ) {\n\t\t\tforeach ( $this->value as $key => $val ) {\n\t\t\t\tif ( $val ) {\n\t\t\t\t\t$this->value[ $key ] = number_format_i18n( (float) str_ireplace( $search, $replace, $val ), 2 );\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t$this->value = number_format_i18n( (float) str_ireplace( $search, $replace, $this->value ), 2 );\n\t\t}\n\n\t\treturn $this->value;\n\t}\n\n\t\/**\n\t * Converts text date to timestamp\n\t *\n\t * @since  1.0.2\n\t * @return string Timestring\n\t *\/\n\tpublic function text_date_timestamp() {\n\t\t\/\/ date_create_from_format if there is a slash in the value.\n\t\t$this->value = wp_unslash( $this->value );\n\n\t\treturn is_array( $this->value )\n\t\t\t? array_map( array( $this->field, 'get_timestamp_from_value' ), $this->value )\n\t\t\t: $this->field->get_timestamp_from_value( $this->value );\n\t}\n\n\t\/**\n\t * Datetime to timestamp\n\t *\n\t * @since  1.0.1\n\t *\n\t * @param bool $repeat Whether or not to repeat.\n\t * @return string|array Timestring\n\t *\/\n\tpublic function text_datetime_timestamp( $repeat = false ) {\n\t\t\/\/ date_create_from_format if there is a slash in the value.\n\t\t$this->value = wp_unslash( $this->value );\n\n\t\tif ( $this->is_empty_value() ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$repeat_value = $this->_check_repeat( __FUNCTION__, $repeat );\n\t\tif ( false !== $repeat_value ) {\n\t\t\treturn $repeat_value;\n\t\t}\n\n\t\t\/\/ Account for timestamp values passed through REST API.\n\t\tif ( $this->is_valid_date_value() ) {\n\n\t\t\t$this->value = CMB2_Utils::make_valid_time_stamp( $this->value );\n\n\t\t} elseif ( isset( $this->value['date'], $this->value['time'] ) ) {\n\t\t\t$this->value = $this->field->get_timestamp_from_value( $this->value['date'] . ' ' . $this->value['time'] );\n\t\t}\n\n\t\tif ( $tz_offset = $this->field->field_timezone_offset() ) {\n\t\t\t$this->value += (int) $tz_offset;\n\t\t}\n\n\t\treturn $this->value;\n\t}\n\n\t\/**\n\t * Datetime to timestamp with timezone\n\t *\n\t * @since  1.0.1\n\t *\n\t * @param bool $repeat Whether or not to repeat.\n\t * @return string       Timestring\n\t *\/\n\tpublic function text_datetime_timestamp_timezone( $repeat = false ) {\n\t\tstatic $utc_values = array();\n\n\t\tif ( $this->is_empty_value() ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t\/\/ date_create_from_format if there is a slash in the value.\n\t\t$this->value = wp_unslash( $this->value );\n\n\t\t$utc_key = $this->field->_id( '', false ) . '_utc';\n\n\t\t$repeat_value = $this->_check_repeat( __FUNCTION__, $repeat );\n\t\tif ( false !== $repeat_value ) {\n\t\t\tif ( ! empty( $utc_values[ $utc_key ] ) ) {\n\t\t\t\t$this->_save_utc_value( $utc_key, $utc_values[ $utc_key ] );\n\t\t\t\tunset( $utc_values[ $utc_key ] );\n\t\t\t}\n\n\t\t\treturn $repeat_value;\n\t\t}\n\n\t\t$tzstring = null;\n\n\t\tif ( is_array( $this->value ) && array_key_exists( 'timezone', $this->value ) ) {\n\t\t\t$tzstring = $this->value['timezone'];\n\t\t}\n\n\t\tif ( empty( $tzstring ) ) {\n\t\t\t$tzstring = CMB2_Utils::timezone_string();\n\t\t}\n\n\t\t$offset = CMB2_Utils::timezone_offset( $tzstring );\n\n\t\tif ( 'UTC' === substr( $tzstring, 0, 3 ) ) {\n\t\t\t$tzstring = timezone_name_from_abbr( '', $offset, 0 );\n\t\t\t\/**\n\t\t\t * The timezone_name_from_abbr() returns false if not found based on offset.\n\t\t\t * Since there are currently some invalid timezones in wp_timezone_dropdown(),\n\t\t\t * fallback to an offset of 0 (UTC+0)\n\t\t\t * https:\/\/core.trac.wordpress.org\/ticket\/29205\n\t\t\t *\/\n\t\t\t$tzstring = false !== $tzstring ? $tzstring : timezone_name_from_abbr( '', 0, 0 );\n\t\t}\n\n\t\t$full_format = $this->field->args['date_format'] . ' ' . $this->field->args['time_format'];\n\n\t\ttry {\n\t\t\t$datetime = null;\n\n\t\t\tif ( is_array( $this->value ) ) {\n\n\t\t\t\t$full_date = $this->value['date'] . ' ' . $this->value['time'];\n\t\t\t\t$datetime = date_create_from_format( $full_format, $full_date );\n\n\t\t\t} elseif ( $this->is_valid_date_value() ) {\n\n\t\t\t\t$timestamp = CMB2_Utils::make_valid_time_stamp( $this->value );\n\t\t\t\tif ( $timestamp ) {\n\t\t\t\t\t$datetime = new DateTime();\n\t\t\t\t\t$datetime->setTimestamp( $timestamp );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( ! is_object( $datetime ) ) {\n\t\t\t\t$this->value = $utc_stamp = '';\n\t\t\t} else {\n\t\t\t\t$datetime->setTimezone( new DateTimeZone( $tzstring ) );\n\t\t\t\t$utc_stamp   = date_timestamp_get( $datetime ) - $offset;\n\t\t\t\t$this->value = json_encode( $datetime );\n\t\t\t}\n\n\t\t\tif ( $this->field->group ) {\n\t\t\t\t$this->value = array(\n\t\t\t\t\t'supporting_field_value' => $utc_stamp,\n\t\t\t\t\t'supporting_field_id'    => $utc_key,\n\t\t\t\t\t'value'                  => $this->value,\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t\/\/ Save the utc timestamp supporting field.\n\t\t\t\tif ( $repeat ) {\n\t\t\t\t\t$utc_values[ $utc_key ][] = $utc_stamp;\n\t\t\t\t} else {\n\t\t\t\t\t$this->_save_utc_value( $utc_key, $utc_stamp );\n\t\t\t\t}\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t$this->value = '';\n\t\t\tCMB2_Utils::log_if_debug( __METHOD__, __LINE__, $e->getMessage() );\n\t\t}\n\n\t\treturn $this->value;\n\t}\n\n\t\/**\n\t * Sanitize textareas and wysiwyg fields\n\t *\n\t * @since  1.0.1\n\t * @return string       Sanitized data\n\t *\/\n\tpublic function textarea() {\n\t\treturn is_array( $this->value ) ? array_map( 'wp_kses_post', $this->value ) : wp_kses_post( $this->value );\n\t}\n\n\t\/**\n\t * Sanitize code textareas\n\t *\n\t * @since  1.0.2\n\t *\n\t * @param bool $repeat Whether or not to repeat.\n\t * @return string       Sanitized data\n\t *\/\n\tpublic function textarea_code( $repeat = false ) {\n\t\t$repeat_value = $this->_check_repeat( __FUNCTION__, $repeat );\n\t\tif ( false !== $repeat_value ) {\n\t\t\treturn $repeat_value;\n\t\t}\n\n\t\treturn htmlspecialchars_decode( stripslashes( $this->value ), ENT_COMPAT );\n\t}\n\n\t\/**\n\t * Handles saving of attachment post ID and sanitizing file url\n\t *\n\t * @since  1.1.0\n\t * @return string        Sanitized url\n\t *\/\n\tpublic function file() {\n\t\t$file_id_key = $this->field->_id( '', false ) . '_id';\n\n\t\tif ( $this->field->group ) {\n\t\t\t\/\/ Return an array with url\/id if saving a group field.\n\t\t\t$this->value = $this->_get_group_file_value_array( $file_id_key );\n\t\t} else {\n\t\t\t$this->_save_file_id_value( $file_id_key );\n\t\t\t$this->text_url();\n\t\t}\n\n\t\treturn $this->value;\n\t}\n\n\t\/**\n\t * Gets the values for the `file` field type from the data being saved.\n\t *\n\t * @since  2.2.0\n\t *\n\t * @param mixed $id_key ID key to use.\n\t * @return array\n\t *\/\n\tpublic function _get_group_file_value_array( $id_key ) {\n\t\t$alldata = $this->field->group->data_to_save;\n\t\t$base_id = $this->field->group->_id( '', false );\n\t\t$i       = $this->field->group->index;\n\n\t\t\/\/ Check group $alldata data.\n\t\t$id_val = isset( $alldata[ $base_id ][ $i ][ $id_key ] )\n\t\t\t? absint( $alldata[ $base_id ][ $i ][ $id_key ] )\n\t\t\t: '';\n\n\t\t\/\/ We don't want to save 0 to the DB for file fields.\n\t\tif ( 0 === $id_val ) {\n\t\t\t$id_val = '';\n\t\t}\n\n\t\treturn array(\n\t\t\t'value' => $this->text_url(),\n\t\t\t'supporting_field_value' => $id_val,\n\t\t\t'supporting_field_id'    => $id_key,\n\t\t);\n\t}\n\n\t\/**\n\t * Peforms saving of `file` attachement's ID\n\t *\n\t * @since  1.1.0\n\t *\n\t * @param mixed $file_id_key ID key to use.\n\t * @return mixed\n\t *\/\n\tpublic function _save_file_id_value( $file_id_key ) {\n\t\t$id_field = $this->_new_supporting_field( $file_id_key );\n\n\t\t\/\/ Check standard data_to_save data.\n\t\t$id_val = isset( $this->field->data_to_save[ $file_id_key ] )\n\t\t\t? $this->field->data_to_save[ $file_id_key ]\n\t\t\t: null;\n\n\t\t\/\/ If there is no ID saved yet, try to get it from the url.\n\t\tif ( $this->value && ! $id_val ) {\n\t\t\t$id_val = CMB2_Utils::image_id_from_url( $this->value );\n\n\t\t\t\/\/ If there is an ID but user emptied the input value, remove the ID.\n\t\t} elseif ( ! $this->value && $id_val ) {\n\t\t\t$id_val = null;\n\t\t}\n\n\t\treturn $id_field->save_field( $id_val );\n\t}\n\n\t\/**\n\t * Peforms saving of `text_datetime_timestamp_timezone` utc timestamp\n\t *\n\t * @since  2.2.0\n\t *\n\t * @param mixed $utc_key   UTC key.\n\t * @param mixed $utc_stamp UTC timestamp.\n\t * @return mixed\n\t *\/\n\tpublic function _save_utc_value( $utc_key, $utc_stamp ) {\n\t\treturn $this->_new_supporting_field( $utc_key )->save_field( $utc_stamp );\n\t}\n\n\t\/**\n\t * Returns a new, supporting, CMB2_Field object based on a new field id.\n\t *\n\t * @since  2.2.0\n\t *\n\t * @param mixed $new_field_id New field ID.\n\t * @return CMB2_Field\n\t *\/\n\tpublic function _new_supporting_field( $new_field_id ) {\n\t\treturn $this->field->get_field_clone( array(\n\t\t\t'id' => $new_field_id,\n\t\t\t'sanitization_cb' => false,\n\t\t) );\n\t}\n\n\t\/**\n\t * If repeating, loop through and re-apply sanitization method\n\t *\n\t * @since  1.1.0\n\t * @param  string $method Class method.\n\t * @param  bool   $repeat Whether repeating or not.\n\t * @return mixed          Sanitized value\n\t *\/\n\tpublic function _check_repeat( $method, $repeat ) {\n\t\tif ( $repeat || ! $this->field->args( 'repeatable' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$values_array = $this->value;\n\n\t\t$new_value = array();\n\t\tforeach ( $values_array as $iterator => $this->value ) {\n\t\t\tif ( $this->value ) {\n\t\t\t\t$val = $this->$method( true );\n\t\t\t\tif ( ! empty( $val ) ) {\n\t\t\t\t\t$new_value[] = $val;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$this->value = $new_value;\n\n\t\treturn empty( $this->value ) ? null : $this->value;\n\t}\n\n\t\/**\n\t * Determine if passed value is an empty array\n\t *\n\t * @since  2.0.6\n\t * @param  mixed $to_check Value to check.\n\t * @return boolean         Whether value is an array that's empty\n\t *\/\n\tpublic function _is_empty_array( $to_check ) {\n\t\tif ( is_array( $to_check ) ) {\n\t\t\t$cleaned_up = array_filter( $to_check );\n\t\t\treturn empty( $cleaned_up );\n\t\t}\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Sanitize a URL. Make the default scheme HTTPS.\n\t *\n\t * @since  2.10.0\n\t * @param  string  $value     Unescaped URL.\n\t * @param  array   $protocols Allowed protocols for URL.\n\t * @param  string  $default   Default value if no URL found.\n\t * @return string             escaped URL.\n\t *\/\n\tpublic static function sanitize_and_secure_url( $url, $protocols = null, $default = null ) {\n\t\tif ( empty( $url ) ) {\n\t\t\treturn $default;\n\t\t}\n\n\t\t$orig_scheme = parse_url( $url, PHP_URL_SCHEME );\n\t\t$url         = esc_url_raw( $url, $protocols );\n\n\t\t\/\/ If original url has no scheme...\n\t\tif ( null === $orig_scheme ) {\n\n\t\t\t\/\/ Let's make sure the added scheme is https.\n\t\t\t$url = set_url_scheme( $url, 'https' );\n\t\t}\n\n\t\treturn $url;\n\t}\n\n\t\/**\n\t * Check if the current field's value is empty.\n\t *\n\t * @since  2.9.1\n\t *\n\t * @return boolean Wether value is empty.\n\t *\/\n\tpublic function is_empty_value() {\n\t\tif ( empty( $this->value ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( is_array( $this->value ) ) {\n\t\t\t$test = array_filter( $this->value );\n\t\t\tif ( empty( $test ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Check if the current field's value is a valid date value.\n\t *\n\t * @since  2.9.1\n\t *\n\t * @return boolean Wether value is a valid date value.\n\t *\/\n\tpublic function is_valid_date_value() {\n\t\treturn is_scalar( $this->value ) && CMB2_Utils::is_valid_date( $this->value );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Options.php","ext":"php","size":6192,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 Utility classes for handling multi-dimensional array data for options\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\n\n\/**\n * Retrieves an instance of CMB2_Option based on the option key\n *\n * @package   CMB2\n * @author    CMB2 team\n *\/\nclass CMB2_Options {\n\t\/**\n\t * Array of all CMB2_Option instances\n\t *\n\t * @var   array\n\t * @since 1.0.0\n\t *\/\n\tprotected static $option_sets = array();\n\n\tpublic static function get( $option_key ) {\n\n\t\tif ( empty( self::$option_sets ) || empty( self::$option_sets[ $option_key ] ) ) {\n\t\t\tself::$option_sets[ $option_key ] = new CMB2_Option( $option_key );\n\t\t}\n\n\t\treturn self::$option_sets[ $option_key ];\n\t}\n}\n\n\/**\n * Handles getting\/setting of values to an option array\n * for a specific option key\n *\n * @package   CMB2\n * @author    CMB2 team\n *\/\nclass CMB2_Option {\n\n\t\/**\n\t * Options array\n\t *\n\t * @var array\n\t *\/\n\tprotected $options = array();\n\n\t\/**\n\t * Current option key\n\t *\n\t * @var string\n\t *\/\n\tprotected $key = '';\n\n\t\/**\n\t * Initiate option object\n\t *\n\t * @param string $option_key Option key where data will be saved.\n\t *                           Leave empty for temporary data store.\n\t * @since 2.0.0\n\t *\/\n\tpublic function __construct( $option_key = '' ) {\n\t\t$this->key = ! empty( $option_key ) ? $option_key : '';\n\t}\n\n\t\/**\n\t * Delete the option from the db\n\t *\n\t * @since  2.0.0\n\t * @return mixed Delete success or failure\n\t *\/\n\tpublic function delete_option() {\n\t\t$deleted = $this->key ? delete_option( $this->key ) : true;\n\t\t$this->options = $deleted ? array() : $this->options;\n\t\treturn $this->options;\n\t}\n\n\t\/**\n\t * Removes an option from an option array\n\t *\n\t * @since  1.0.1\n\t * @param string $field_id Option array field key.\n\t * @param bool   $resave Whether or not to resave.\n\t * @return array             Modified options\n\t *\/\n\tpublic function remove( $field_id, $resave = false ) {\n\n\t\t$this->get_options();\n\n\t\tif ( isset( $this->options[ $field_id ] ) ) {\n\t\t\tunset( $this->options[ $field_id ] );\n\t\t}\n\n\t\tif ( $resave ) {\n\t\t\t$this->set();\n\t\t}\n\n\t\treturn $this->options;\n\t}\n\n\t\/**\n\t * Retrieves an option from an option array\n\t *\n\t * @since  1.0.1\n\t * @param string $field_id Option array field key.\n\t * @param mixed  $default  Fallback value for the option.\n\t * @return array             Requested field or default\n\t *\/\n\tpublic function get( $field_id, $default = false ) {\n\t\t$opts = $this->get_options();\n\n\t\tif ( 'all' == $field_id ) {\n\t\t\treturn $opts;\n\t\t} elseif ( array_key_exists( $field_id, $opts ) ) {\n\t\t\treturn false !== $opts[ $field_id ] ? $opts[ $field_id ] : $default;\n\t\t}\n\n\t\treturn $default;\n\t}\n\n\t\/**\n\t * Updates Option data\n\t *\n\t * @since  1.0.1\n\t * @param string $field_id Option array field key.\n\t * @param mixed  $value    Value to update data with.\n\t * @param bool   $resave   Whether to re-save the data.\n\t * @param bool   $single   Whether data should not be an array.\n\t * @return boolean Return status of update.\n\t *\/\n\tpublic function update( $field_id, $value = '', $resave = false, $single = true ) {\n\t\t$this->get_options();\n\n\t\tif ( true !== $field_id ) {\n\n\t\t\tif ( ! $single ) {\n\t\t\t\t\/\/ If multiple, add to array.\n\t\t\t\t$this->options[ $field_id ][] = $value;\n\t\t\t} else {\n\t\t\t\t$this->options[ $field_id ] = $value;\n\t\t\t}\n\t\t}\n\n\t\tif ( $resave || true === $field_id ) {\n\t\t\treturn $this->set();\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Saves the option array\n\t * Needs to be run after finished using remove\/update_option\n\t *\n\t * @uses apply_filters() Calls 'cmb2_override_option_save_{$this->key}' hook\n\t * to allow overwriting the option value to be stored.\n\t *\n\t * @since  1.0.1\n\t * @param  array $options Optional options to override.\n\t * @return bool           Success\/Failure\n\t *\/\n\tpublic function set( $options = array() ) {\n\t\tif ( ! empty( $options ) || empty( $options ) && empty( $this->key ) ) {\n\t\t\t$this->options = $options;\n\t\t}\n\n\t\t$this->options = wp_unslash( $this->options ); \/\/ get rid of those evil magic quotes.\n\n\t\tif ( empty( $this->key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$test_save = apply_filters( \"cmb2_override_option_save_{$this->key}\", 'cmb2_no_override_option_save', $this->options, $this );\n\n\t\tif ( 'cmb2_no_override_option_save' !== $test_save ) {\n\t\t\t\/\/ If override, do not proceed to update the option, just return result.\n\t\t\treturn $test_save;\n\t\t}\n\n\t\t\/**\n\t\t * Whether to auto-load the option when WordPress starts up.\n\t\t *\n\t\t * The dynamic portion of the hook name, $this->key, refers to the option key.\n\t\t *\n\t\t * @since 2.4.0\n\t\t *\n\t\t * @param bool        $autoload   Whether to load the option when WordPress starts up.\n\t\t * @param CMB2_Option $cmb_option This object.\n\t\t *\/\n\t\t$autoload = apply_filters( \"cmb2_should_autoload_{$this->key}\", true, $this );\n\n\t\treturn update_option(\n\t\t\t$this->key,\n\t\t\t$this->options,\n\t\t\t! $autoload || 'no' === $autoload ? false : true\n\t\t);\n\t}\n\n\t\/**\n\t * Retrieve option value based on name of option.\n\t *\n\t * @uses apply_filters() Calls 'cmb2_override_option_get_{$this->key}' hook to allow\n\t * overwriting the option value to be retrieved.\n\t *\n\t * @since  1.0.1\n\t * @param  mixed $default Optional. Default value to return if the option does not exist.\n\t * @return mixed          Value set for the option.\n\t *\/\n\tpublic function get_options( $default = null ) {\n\t\tif ( empty( $this->options ) && ! empty( $this->key ) ) {\n\n\t\t\t$test_get = apply_filters( \"cmb2_override_option_get_{$this->key}\", 'cmb2_no_override_option_get', $default, $this );\n\n\t\t\tif ( 'cmb2_no_override_option_get' !== $test_get ) {\n\t\t\t\t$this->options = $test_get;\n\t\t\t} else {\n\t\t\t\t\/\/ If no override, get the option.\n\t\t\t\t$this->options = get_option( $this->key, $default );\n\t\t\t}\n\t\t}\n\n\t\t$this->options = (array) $this->options;\n\n\t\treturn $this->options;\n\t}\n\n\t\/**\n\t * Magic getter for our object.\n\t *\n\t * @since 2.6.0\n\t *\n\t * @param string $field Requested property.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t *\/\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'options':\n\t\t\tcase 'key':\n\t\t\t\treturn $this->{$field};\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s property: %2$s', 'cmb2' ), __CLASS__, $field ) );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2.php","ext":"php","size":54331,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 - The core metabox object\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\n * @property-read string $cmb_id\n * @property-read array $meta_box\n * @property-read array $updated\n * @property-read bool  $has_columns\n * @property-read array $tax_metaboxes_to_remove\n *\/\n\n\/**\n * The main CMB2 object for storing box data\/properties.\n *\/\nclass CMB2 extends CMB2_Base {\n\n\t\/**\n\t * Supported CMB2 object types\n\t *\n\t * @var array\n\t * @since 2.11.0\n\t *\/\n\tprotected $core_object_types = array( 'post', 'user', 'comment', 'term', 'options-page' );\n\n\t\/**\n\t * The object properties name.\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tprotected $properties_name = 'meta_box';\n\n\t\/**\n\t * Metabox Config array\n\t *\n\t * @var   array\n\t * @since 0.9.0\n\t *\/\n\tprotected $meta_box = array();\n\n\t\/**\n\t * Type of object registered for metabox. (e.g., post, user, or comment)\n\t *\n\t * @var   string\n\t * @since 1.0.0\n\t *\/\n\tprotected $mb_object_type = null;\n\n\t\/**\n\t * List of fields that are changed\/updated on save\n\t *\n\t * @var   array\n\t * @since 1.1.0\n\t *\/\n\tprotected $updated = array();\n\n\t\/**\n\t * Metabox Defaults\n\t *\n\t * @var   array\n\t * @since 1.0.1\n\t *\/\n\tprotected $mb_defaults = array(\n\t\t'id'                      => '',\n\t\t'title'                   => '',\n\t\t\/\/ Post type slug, or 'user', 'term', 'comment', or 'options-page'.\n\t\t'object_types'            => array(),\n\n\t\t\/**\n\t\t * The context within the screen where the boxes should display. Available contexts vary\n\t\t * from screen to screen. Post edit screen contexts include 'normal', 'side', and 'advanced'.\n\t\t *\n\t\t * For placement in locations outside of a metabox, other options include:\n\t\t * 'form_top', 'before_permalink', 'after_title', 'after_editor'\n\t\t *\n\t\t * Comments screen contexts include 'normal' and 'side'. Default is 'normal'.\n\t\t *\/\n\t\t'context'                 => 'normal',\n\t\t'priority'                => 'high', \/\/ Or 10 for options pages.\n\t\t'show_names'              => true, \/\/ Show field names on the left.\n\t\t'show_on_cb'              => null, \/\/ Callback to determine if metabox should display.\n\t\t'show_on'                 => array(), \/\/ Post IDs or page templates to display this metabox. overrides 'show_on_cb'.\n\t\t'cmb_styles'              => true, \/\/ Include CMB2 stylesheet.\n\t\t'enqueue_js'              => true, \/\/ Include CMB2 JS.\n\t\t'fields'                  => array(),\n\n\t\t\/**\n\t\t * Handles hooking CMB2 forms\/metaboxes into the post\/attachement\/user\/options-page screens\n\t\t * and handles hooking in and saving those fields.\n\t\t *\/\n\t\t'hookup'                  => true,\n\t\t'save_fields'             => true, \/\/ Will not save during hookup if false.\n\t\t'closed'                  => false, \/\/ Default metabox to being closed.\n\t\t'taxonomies'              => array(),\n\t\t'new_user_section'        => 'add-new-user', \/\/ or 'add-existing-user'.\n\t\t'new_term_section'        => true,\n\t\t'show_in_rest'            => false,\n\t\t'classes'                 => null, \/\/ Optionally add classes to the CMB2 wrapper.\n\t\t'classes_cb'              => '', \/\/ Optionally add classes to the CMB2 wrapper (via a callback).\n\n\t\t\/*\n\t\t * The following parameter is for post alternate-context metaboxes only.\n\t\t *\n\t\t * To output the fields 'naked' (without a postbox wrapper\/style), then\n\t\t * add a `'remove_box_wrap' => true` to your metabox registration array.\n\t\t *\/\n\t\t'remove_box_wrap'         => false,\n\n\t\t\/*\n\t\t * The following parameter is any additional arguments passed as $callback_args\n\t\t * to add_meta_box, if\/when applicable.\n\t\t *\n\t\t * CMB2 does not use these arguments in the add_meta_box callback, however, these args\n\t\t * are parsed for certain special properties, like determining Gutenberg\/block-editor\n\t\t * compatibility.\n\t\t *\n\t\t * Examples:\n\t\t *\n\t\t * - Make sure default editor is used as metabox is not compatible with block editor\n\t\t *      [ '__block_editor_compatible_meta_box' => false\/true ]\n\t\t *\n\t\t * - Or declare this box exists for backwards compatibility\n\t\t *      [ '__back_compat_meta_box' => false ]\n\t\t *\n\t\t * More: https:\/\/wordpress.org\/gutenberg\/handbook\/extensibility\/meta-box\/\n\t\t *\/\n\t\t'mb_callback_args'        => null,\n\n\t\t\/*\n\t\t * The following parameters are for options-page metaboxes,\n\t\t * and several are passed along to add_menu_page()\/add_submenu_page()\n\t\t *\/\n\n\t\t\/\/ 'menu_title'           => null, \/\/ Falls back to 'title' (above). Do not define here so we can set a fallback.\n\t\t'message_cb'              => '', \/\/ Optionally define the options-save message (via a callback).\n\t\t'option_key'              => '', \/\/ The actual option key and admin menu page slug.\n\t\t'parent_slug'             => '', \/\/ Used as first param in add_submenu_page().\n\t\t'capability'              => 'manage_options', \/\/ Cap required to view options-page.\n\t\t'icon_url'                => '', \/\/ Menu icon. Only applicable if 'parent_slug' is left empty.\n\t\t'position'                => null, \/\/ Menu position. Only applicable if 'parent_slug' is left empty.\n\n\t\t'admin_menu_hook'         => 'admin_menu', \/\/ Alternately 'network_admin_menu' to add network-level options page.\n\t\t'display_cb'              => false, \/\/ Override the options-page form output (CMB2_Hookup::options_page_output()).\n\t\t'save_button'             => '', \/\/ The text for the options-page save button. Defaults to 'Save'.\n\t\t'disable_settings_errors' => false, \/\/ On settings pages (not options-general.php sub-pages), allows disabling.\n\t\t'tab_group'               => '', \/\/ Tab-group identifier, enables options page tab navigation.\n\t\t\/\/ 'tab_title'            => null, \/\/ Falls back to 'title' (above). Do not define here so we can set a fallback.\n\t\t\/\/ 'autoload'             => true, \/\/ Defaults to true, the options-page option will be autloaded.\n\t);\n\n\t\/**\n\t * Metabox field objects\n\t *\n\t * @var   array\n\t * @since 2.0.3\n\t *\/\n\tprotected $fields = array();\n\n\t\/**\n\t * An array of hidden fields to output at the end of the form\n\t *\n\t * @var   array\n\t * @since 2.0.0\n\t *\/\n\tprotected $hidden_fields = array();\n\n\t\/**\n\t * Array of key => value data for saving. Likely $_POST data.\n\t *\n\t * @var   string\n\t * @since 2.0.0\n\t *\/\n\tprotected $generated_nonce = '';\n\n\t\/**\n\t * Whether there are fields to be shown in columns. Set in CMB2::add_field().\n\t *\n\t * @var   bool\n\t * @since 2.2.2\n\t *\/\n\tprotected $has_columns = false;\n\n\t\/**\n\t * If taxonomy field is requesting to remove_default, we store the taxonomy here.\n\t *\n\t * @var   array\n\t * @since 2.2.3\n\t *\/\n\tprotected $tax_metaboxes_to_remove = array();\n\n\t\/**\n\t * Get started\n\t *\n\t * @since 0.4.0\n\t * @param array   $config    Metabox config array.\n\t * @param integer $object_id Optional object id.\n\t *\/\n\tpublic function __construct( $config, $object_id = 0 ) {\n\n\t\tif ( empty( $config['id'] ) ) {\n\t\t\twp_die( esc_html__( 'Metabox configuration is required to have an ID parameter.', 'cmb2' ) );\n\t\t}\n\n\t\t$this->cmb_id = $config['id'];\n\t\t$this->meta_box = wp_parse_args( $config, $this->mb_defaults );\n\t\t$this->meta_box['fields'] = array();\n\n\t\t\/\/ Ensures object_types is an array.\n\t\t$this->set_prop( 'object_types', $this->box_types() );\n\t\t$this->object_id( $object_id );\n\n\t\tif ( $this->is_options_page_mb() ) {\n\n\t\t\t\/\/ Check initial priority.\n\t\t\tif ( empty( $config['priority'] ) ) {\n\n\t\t\t\t\/\/ If not explicitly defined, Reset the priority to 10\n\t\t\t\t\/\/ Fixes https:\/\/github.com\/CMB2\/CMB2\/issues\/1410.\n\t\t\t\t$this->meta_box['priority'] = 10;\n\t\t\t}\n\n\t\t\t$this->init_options_mb();\n\t\t}\n\n\t\t$this->mb_object_type();\n\n\t\tif ( ! empty( $config['fields'] ) && is_array( $config['fields'] ) ) {\n\t\t\t$this->add_fields( $config['fields'] );\n\t\t}\n\n\t\tCMB2_Boxes::add( $this );\n\n\t\t\/**\n\t\t * Hook during initiation of CMB2 object\n\t\t *\n\t\t * The dynamic portion of the hook name, $this->cmb_id, is this meta_box id.\n\t\t *\n\t\t * @param array $cmb This CMB2 object\n\t\t *\/\n\t\tdo_action( \"cmb2_init_{$this->cmb_id}\", $this );\n\n\t\t\/\/ Hook in the hookup... how meta.\n\t\tadd_action( \"cmb2_init_hookup_{$this->cmb_id}\", array( 'CMB2_Hookup', 'maybe_init_and_hookup' ) );\n\n\t\t\/\/ Hook in the rest api functionality.\n\t\tadd_action( \"cmb2_init_hookup_{$this->cmb_id}\", array( 'CMB2_REST', 'maybe_init_and_hookup' ) );\n\t}\n\n\t\/**\n\t * Loops through and displays fields\n\t *\n\t * @since 1.0.0\n\t * @param int    $object_id   Object ID.\n\t * @param string $object_type Type of object being saved. (e.g., post, user, or comment).\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function show_form( $object_id = 0, $object_type = '' ) {\n\t\t$this->render_form_open( $object_id, $object_type );\n\n\t\tforeach ( $this->prop( 'fields' ) as $field_args ) {\n\t\t\t$this->render_field( $field_args );\n\t\t}\n\n\t\treturn $this->render_form_close( $object_id, $object_type );\n\t}\n\n\t\/**\n\t * Outputs the opening form markup and runs corresponding hooks:\n\t * 'cmb2_before_form' and \"cmb2_before_{$object_type}_form_{$this->cmb_id}\"\n\t *\n\t * @since  2.2.0\n\t * @param  integer $object_id   Object ID.\n\t * @param  string  $object_type Object type.\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function render_form_open( $object_id = 0, $object_type = '' ) {\n\t\t$object_type = $this->object_type( $object_type );\n\t\t$object_id = $this->object_id( $object_id );\n\n\t\techo \"\\n<!-- Begin CMB2 Fields -->\\n\";\n\n\t\t$this->nonce_field();\n\n\t\t\/**\n\t\t * Hook before form table begins\n\t\t *\n\t\t * @param array  $cmb_id      The current box ID.\n\t\t * @param int    $object_id   The ID of the current object.\n\t\t * @param string $object_type The type of object you are working with.\n\t\t *                            Usually `post` (this applies to all post-types).\n\t\t *                            Could also be `comment`, `user` or `options-page`.\n\t\t * @param array  $cmb         This CMB2 object.\n\t\t *\/\n\t\tdo_action( 'cmb2_before_form', $this->cmb_id, $object_id, $object_type, $this );\n\n\t\t\/**\n\t\t * Hook before form table begins\n\t\t *\n\t\t * The first dynamic portion of the hook name, $object_type, is the type of object\n\t\t * you are working with. Usually `post` (this applies to all post-types).\n\t\t * Could also be `comment`, `user` or `options-page`.\n\t\t *\n\t\t * The second dynamic portion of the hook name, $this->cmb_id, is the meta_box id.\n\t\t *\n\t\t * @param array  $cmb_id      The current box ID\n\t\t * @param int    $object_id   The ID of the current object\n\t\t * @param array  $cmb         This CMB2 object\n\t\t *\/\n\t\tdo_action( \"cmb2_before_{$object_type}_form_{$this->cmb_id}\", $object_id, $this );\n\n\t\techo '<div class=\"', esc_attr( $this->box_classes() ), '\"><div id=\"cmb2-metabox-', sanitize_html_class( $this->cmb_id ), '\" class=\"cmb2-metabox cmb-field-list\">';\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Defines the classes for the CMB2 form\/wrap.\n\t *\n\t * @since  2.0.0\n\t * @return string Space concatenated list of classes\n\t *\/\n\tpublic function box_classes() {\n\n\t\t$classes = array( 'cmb2-wrap', 'form-table' );\n\n\t\t\/\/ Use the callback to fetch classes.\n\t\tif ( $added_classes = $this->get_param_callback_result( 'classes_cb' ) ) {\n\t\t\t$added_classes = is_array( $added_classes ) ? $added_classes : array( $added_classes );\n\t\t\t$classes = array_merge( $classes, $added_classes );\n\t\t}\n\n\t\tif ( $added_classes = $this->prop( 'classes' ) ) {\n\t\t\t$added_classes = is_array( $added_classes ) ? $added_classes : array( $added_classes );\n\t\t\t$classes = array_merge( $classes, $added_classes );\n\t\t}\n\n\t\t\/**\n\t\t * Add our context classes for non-standard metaboxes.\n\t\t *\n\t\t * @since 2.2.4\n\t\t *\/\n\t\tif ( $this->is_alternate_context_box() ) {\n\t\t\t$context = array();\n\n\t\t\t\/\/ Include custom class if requesting no title.\n\t\t\tif ( ! $this->prop( 'title' ) && ! $this->prop( 'remove_box_wrap' ) ) {\n\t\t\t\t$context[] = 'cmb2-context-wrap-no-title';\n\t\t\t}\n\n\t\t\t\/\/ Include a generic context wrapper.\n\t\t\t$context[] = 'cmb2-context-wrap';\n\n\t\t\t\/\/ Include a context-type based context wrapper.\n\t\t\t$context[] = 'cmb2-context-wrap-' . $this->prop( 'context' );\n\n\t\t\t\/\/ Include an ID based context wrapper as well.\n\t\t\t$context[] = 'cmb2-context-wrap-' . $this->prop( 'id' );\n\n\t\t\t\/\/ And merge all the classes back into the array.\n\t\t\t$classes = array_merge( $classes, $context );\n\t\t}\n\n\t\t\/**\n\t\t * Globally filter box wrap classes\n\t\t *\n\t\t * @since 2.2.2\n\t\t *\n\t\t * @param string $classes Array of classes for the cmb2-wrap.\n\t\t * @param CMB2   $cmb     This CMB2 object.\n\t\t *\/\n\t\t$classes = apply_filters( 'cmb2_wrap_classes', $classes, $this );\n\n\t\t$split = array();\n\t\tforeach ( array_filter( $classes ) as $class ) {\n\t\t\tforeach ( explode( ' ', $class ) as $_class ) {\n\t\t\t\t\/\/ Clean up & sanitize.\n\t\t\t\t$split[] = sanitize_html_class( strip_tags( $_class ) );\n\t\t\t}\n\t\t}\n\t\t$classes = $split;\n\n\t\t\/\/ Remove any duplicates.\n\t\t$classes = array_unique( $classes );\n\n\t\t\/\/ Make it a string.\n\t\treturn implode( ' ', $classes );\n\t}\n\n\t\/**\n\t * Outputs the closing form markup and runs corresponding hooks:\n\t * 'cmb2_after_form' and \"cmb2_after_{$object_type}_form_{$this->cmb_id}\"\n\t *\n\t * @since  2.2.0\n\t * @param  integer $object_id   Object ID.\n\t * @param  string  $object_type Object type.\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function render_form_close( $object_id = 0, $object_type = '' ) {\n\t\t$object_type = $this->object_type( $object_type );\n\t\t$object_id = $this->object_id( $object_id );\n\n\t\techo '<\/div><\/div>';\n\n\t\t$this->render_hidden_fields();\n\n\t\t\/**\n\t\t * Hook after form form has been rendered\n\t\t *\n\t\t * The dynamic portion of the hook name, $this->cmb_id, is the meta_box id.\n\t\t *\n\t\t * The first dynamic portion of the hook name, $object_type, is the type of object\n\t\t * you are working with. Usually `post` (this applies to all post-types).\n\t\t * Could also be `comment`, `user` or `options-page`.\n\t\t *\n\t\t * @param int    $object_id   The ID of the current object\n\t\t * @param array  $cmb         This CMB2 object\n\t\t *\/\n\t\tdo_action( \"cmb2_after_{$object_type}_form_{$this->cmb_id}\", $object_id, $this );\n\n\t\t\/**\n\t\t * Hook after form form has been rendered\n\t\t *\n\t\t * @param array  $cmb_id      The current box ID.\n\t\t * @param int    $object_id   The ID of the current object.\n\t\t * @param string $object_type The type of object you are working with.\n\t\t *                            Usually `post` (this applies to all post-types).\n\t\t *                            Could also be `comment`, `user` or `options-page`.\n\t\t * @param array  $cmb         This CMB2 object.\n\t\t *\/\n\t\tdo_action( 'cmb2_after_form', $this->cmb_id, $object_id, $object_type, $this );\n\n\t\techo \"\\n<!-- End CMB2 Fields -->\\n\";\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Renders a field based on the field type\n\t *\n\t * @since  2.2.0\n\t * @param  array $field_args A field configuration array.\n\t * @return mixed CMB2_Field object if successful.\n\t *\/\n\tpublic function render_field( $field_args ) {\n\t\t$field_args['context'] = $this->prop( 'context' );\n\n\t\tif ( 'group' === $field_args['type'] ) {\n\n\t\t\tif ( ! isset( $field_args['show_names'] ) ) {\n\t\t\t\t$field_args['show_names'] = $this->prop( 'show_names' );\n\t\t\t}\n\t\t\t$field = $this->render_group( $field_args );\n\n\t\t} elseif ( 'hidden' === $field_args['type'] && $this->get_field( $field_args )->should_show() ) {\n\t\t\t\/\/ Save rendering for after the metabox.\n\t\t\t$field = $this->add_hidden_field( $field_args );\n\n\t\t} else {\n\n\t\t\t$field_args['show_names'] = $this->prop( 'show_names' );\n\n\t\t\t\/\/ Render default fields.\n\t\t\t$field = $this->get_field( $field_args )->render_field();\n\t\t}\n\n\t\treturn $field;\n\t}\n\n\t\/**\n\t * Render a group of fields.\n\t *\n\t * @param array|CMB2_Field $args Array of field arguments for a group field parent or the group parent field.\n\t * @return CMB2_Field|null Group field object.\n\t *\/\n\tpublic function render_group( $args ) {\n\t\t$field_group = false;\n\n\t\tif ( $args instanceof CMB2_Field ) {\n\t\t\t$field_group = 'group' === $args->type() ? $args : false;\n\t\t} elseif ( isset( $args['id'], $args['fields'] ) && is_array( $args['fields'] ) ) {\n\t\t\t$field_group = $this->get_field( $args );\n\t\t}\n\n\t\tif ( ! $field_group ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$field_group->render_context = 'edit';\n\t\t$field_group->peform_param_callback( 'render_row_cb' );\n\n\t\treturn $field_group;\n\t}\n\n\t\/**\n\t * The default callback to render a group of fields.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @param  array      $field_args  Array of field arguments for the group field parent.\n\t * @param  CMB2_Field $field_group The CMB2_Field group object.\n\t *\n\t * @return CMB2_Field|null Group field object.\n\t *\/\n\tpublic function render_group_callback( $field_args, $field_group ) {\n\n\t\t\/\/ If field is requesting to be conditionally shown.\n\t\tif ( ! $field_group || ! $field_group->should_show() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$field_group->index = 0;\n\n\t\t$field_group->peform_param_callback( 'before_group' );\n\n\t\t$desc      = $field_group->args( 'description' );\n\t\t$label     = $field_group->args( 'name' );\n\t\t$group_val = (array) $field_group->value();\n\n\t\techo '<div class=\"cmb-row cmb-repeat-group-wrap ', esc_attr( $field_group->row_classes() ), '\" data-fieldtype=\"group\"><div class=\"cmb-td\"><div data-groupid=\"', esc_attr( $field_group->id() ), '\" id=\"', esc_attr( $field_group->id() ), '_repeat\" ', $this->group_wrap_attributes( $field_group ), '>';\n\n\t\tif ( $desc || $label ) {\n\t\t\t$class = $desc ? ' cmb-group-description' : '';\n\t\t\techo '<div class=\"cmb-row', $class, '\"><div class=\"cmb-th\">';\n\t\t\tif ( $label ) {\n\t\t\t\techo '<h2 class=\"cmb-group-name\">', $label, '<\/h2>';\n\t\t\t}\n\t\t\tif ( $desc ) {\n\t\t\t\techo '<p class=\"cmb2-metabox-description\">', $desc, '<\/p>';\n\t\t\t}\n\t\t\techo '<\/div><\/div>';\n\t\t}\n\n\t\tif ( ! empty( $group_val ) ) {\n\t\t\tforeach ( $group_val as $group_key => $field_id ) {\n\t\t\t\t$this->render_group_row( $field_group );\n\t\t\t\t$field_group->index++;\n\t\t\t}\n\t\t} else {\n\t\t\t$this->render_group_row( $field_group );\n\t\t}\n\n\t\tif ( $field_group->args( 'repeatable' ) ) {\n\t\t\techo '<div class=\"cmb-row\"><div class=\"cmb-td\"><p class=\"cmb-add-row\"><button type=\"button\" data-selector=\"', esc_attr( $field_group->id() ), '_repeat\" data-grouptitle=\"', esc_attr( $field_group->options( 'group_title' ) ), '\" class=\"cmb-add-group-row button-secondary\">', $field_group->options( 'add_button' ), '<\/button><\/p><\/div><\/div>';\n\t\t}\n\n\t\techo '<\/div><\/div><\/div>';\n\n\t\t$field_group->peform_param_callback( 'after_group' );\n\n\t\treturn $field_group;\n\t}\n\n\t\/**\n\t * Get the group wrap attributes, which are passed through a filter.\n\t *\n\t * @since  2.2.3\n\t * @param  CMB2_Field $field_group The group CMB2_Field object.\n\t * @return string                  The attributes string.\n\t *\/\n\tpublic function group_wrap_attributes( $field_group ) {\n\t\t$classes = 'cmb-nested cmb-field-list cmb-repeatable-group';\n\t\t$classes .= $field_group->options( 'sortable' ) ? ' sortable' : ' non-sortable';\n\t\t$classes .= $field_group->args( 'repeatable' ) ? ' repeatable' : ' non-repeatable';\n\n\t\t$group_wrap_attributes = array(\n\t\t\t'class' => $classes,\n\t\t\t'style' => 'width:100%;',\n\t\t);\n\n\t\t\/**\n\t\t * Allow for adding additional HTML attributes to a group wrapper.\n\t\t *\n\t\t * The attributes will be an array of key => value pairs for each attribute.\n\t\t *\n\t\t * @since 2.2.2\n\t\t *\n\t\t * @param string     $group_wrap_attributes Current attributes array.\n\t\t * @param CMB2_Field $field_group           The group CMB2_Field object.\n\t\t *\/\n\t\t$group_wrap_attributes = apply_filters( 'cmb2_group_wrap_attributes', $group_wrap_attributes, $field_group );\n\n\t\t$atts = array();\n\t\tforeach ( $group_wrap_attributes as $att => $att_value ) {\n\t\t\tif ( ! CMB2_Utils::is_data_attribute( $att ) ) {\n\t\t\t\t$att_value = htmlspecialchars( $att_value, ENT_COMPAT );\n\t\t\t}\n\n\t\t\t$atts[ sanitize_html_class( $att ) ] = sanitize_text_field( $att_value );\n\t\t}\n\n\t\treturn CMB2_Utils::concat_attrs( $atts );\n\t}\n\n\t\/**\n\t * Render a repeatable group row\n\t *\n\t * @since  1.0.2\n\t * @param  CMB2_Field $field_group     CMB2_Field group field object.\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function render_group_row( $field_group ) {\n\n\t\t$field_group->peform_param_callback( 'before_group_row' );\n\t\t$closed_class     = $field_group->options( 'closed' ) ? ' closed' : '';\n\t\t$confirm_deletion = $field_group->options( 'remove_confirm' );\n\t\t$confirm_deletion = ! empty( $confirm_deletion ) ? $confirm_deletion : '';\n\n\t\techo '\n\t\t<div id=\"cmb-group-', $field_group->id(), '-', $field_group->index, '\" class=\"postbox cmb-row cmb-repeatable-grouping', $closed_class, '\" data-iterator=\"', $field_group->index, '\">';\n\n\t\tif ( $field_group->args( 'repeatable' ) ) {\n\t\t\techo '<button type=\"button\" data-selector=\"', $field_group->id(), '_repeat\" data-confirm=\"', esc_attr( $confirm_deletion ), '\" class=\"dashicons-before dashicons-no-alt cmb-remove-group-row\" title=\"', esc_attr( $field_group->options( 'remove_button' ) ), '\"><\/button>';\n\t\t}\n\n\t\t\techo '\n\t\t\t<div class=\"cmbhandle\" title=\"' , esc_attr__( 'Click to toggle', 'cmb2' ), '\"><br><\/div>\n\t\t\t<h3 class=\"cmb-group-title cmbhandle-title\"><span>', $field_group->replace_hash( $field_group->options( 'group_title' ) ), '<\/span><\/h3>\n\n\t\t\t<div class=\"inside cmb-td cmb-nested cmb-field-list\">';\n\t\t\t\t\/\/ Loop and render repeatable group fields.\n\t\tforeach ( array_values( $field_group->args( 'fields' ) ) as $field_args ) {\n\t\t\tif ( 'hidden' === $field_args['type'] ) {\n\n\t\t\t\t\/\/ Save rendering for after the metabox.\n\t\t\t\t$this->add_hidden_field( $field_args, $field_group );\n\n\t\t\t} else {\n\n\t\t\t\t$field_args['show_names'] = $field_group->args( 'show_names' );\n\t\t\t\t$field_args['context']    = $field_group->args( 'context' );\n\n\t\t\t\t$this->get_field( $field_args, $field_group )->render_field();\n\t\t\t}\n\t\t}\n\n\t\tif ( $field_group->args( 'repeatable' ) ) {\n\t\t\techo '\n\t\t\t\t\t<div class=\"cmb-row cmb-remove-field-row\">\n\t\t\t\t\t\t<div class=\"cmb-remove-row\">\n\t\t\t\t\t\t\t<button type=\"button\" data-selector=\"', $field_group->id(), '_repeat\" data-confirm=\"', esc_attr( $confirm_deletion ), '\" class=\"cmb-remove-group-row cmb-remove-group-row-button alignright button-secondary\">', $field_group->options( 'remove_button' ), '<\/button>\n\t\t\t\t\t\t<\/div>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t';\n\t\t}\n\t\t\techo '\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t';\n\n\t\t$field_group->peform_param_callback( 'after_group_row' );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Add a hidden field to the list of hidden fields to be rendered later.\n\t *\n\t * @since 2.0.0\n\t *\n\t * @param array           $field_args  Array of field arguments to be passed to CMB2_Field.\n\t * @param CMB2_Field|null $field_group CMB2_Field group field object.\n\t * @return CMB2_Field\n\t *\/\n\tpublic function add_hidden_field( $field_args, $field_group = null ) {\n\t\tif ( isset( $field_args['field_args'] ) ) {\n\t\t\t\/\/ For back-compatibility.\n\t\t\t$field = new CMB2_Field( $field_args );\n\t\t} else {\n\t\t\t$field = $this->get_new_field( $field_args, $field_group );\n\t\t}\n\n\t\t$types = new CMB2_Types( $field );\n\n\t\tif ( $field_group ) {\n\t\t\t$types->iterator = $field_group->index;\n\t\t}\n\n\t\t$this->hidden_fields[] = $types;\n\n\t\treturn $field;\n\t}\n\n\t\/**\n\t * Loop through and output hidden fields\n\t *\n\t * @since  2.0.0\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function render_hidden_fields() {\n\t\tif ( ! empty( $this->hidden_fields ) ) {\n\t\t\tforeach ( $this->hidden_fields as $hidden ) {\n\t\t\t\t$hidden->render();\n\t\t\t}\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Returns array of sanitized field values (without saving them)\n\t *\n\t * @since  2.0.3\n\t * @param  array $data_to_sanitize Array of field_id => value data for sanitizing (likely $_POST data).\n\t * @return mixed\n\t *\/\n\tpublic function get_sanitized_values( array $data_to_sanitize ) {\n\t\t$this->data_to_save = $data_to_sanitize;\n\t\t$stored_id          = $this->object_id();\n\n\t\t\/\/ We do this So CMB will sanitize our data for us, but not save it.\n\t\t$this->object_id( '_' );\n\n\t\t\/\/ Ensure temp. data store is empty.\n\t\tcmb2_options( 0 )->set();\n\n\t\t\/\/ We want to get any taxonomy values back.\n\t\tadd_filter( \"cmb2_return_taxonomy_values_{$this->cmb_id}\", '__return_true' );\n\n\t\t\/\/ Process\/save fields.\n\t\t$this->process_fields();\n\n\t\t\/\/ Put things back the way they were.\n\t\tremove_filter( \"cmb2_return_taxonomy_values_{$this->cmb_id}\", '__return_true' );\n\n\t\t\/\/ Get data from temp. data store.\n\t\t$sanitized_values = cmb2_options( 0 )->get_options();\n\n\t\t\/\/ Empty out temp. data store again.\n\t\tcmb2_options( 0 )->set();\n\n\t\t\/\/ Reset the object id.\n\t\t$this->object_id( $stored_id );\n\n\t\treturn $sanitized_values;\n\t}\n\n\t\/**\n\t * Loops through and saves field data\n\t *\n\t * @since  1.0.0\n\t * @param  int    $object_id    Object ID.\n\t * @param  string $object_type  Type of object being saved. (e.g., post, user, or comment).\n\t * @param  array  $data_to_save Array of key => value data for saving. Likely $_POST data.\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function save_fields( $object_id = 0, $object_type = '', $data_to_save = array() ) {\n\n\t\t\/\/ Fall-back to $_POST data.\n\t\t$this->data_to_save = ! empty( $data_to_save ) ? $data_to_save : $_POST;\n\t\t$object_id = $this->object_id( $object_id );\n\t\t$object_type = $this->object_type( $object_type );\n\n\t\t$this->process_fields();\n\n\t\t\/\/ If options page, save the updated options.\n\t\tif ( 'options-page' === $object_type ) {\n\t\t\tcmb2_options( $object_id )->set();\n\t\t}\n\n\t\treturn $this->after_save();\n\t}\n\n\t\/**\n\t * Process and save form fields\n\t *\n\t * @since  2.0.0\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function process_fields() {\n\n\t\t$this->pre_process();\n\n\t\t\/\/ Remove the show_on properties so saving works.\n\t\t$this->prop( 'show_on', array() );\n\n\t\t\/\/ save field ids of those that are updated.\n\t\t$this->updated = array();\n\n\t\tforeach ( $this->prop( 'fields' ) as $field_args ) {\n\t\t\t$this->process_field( $field_args );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Process and save a field\n\t *\n\t * @since  2.0.0\n\t * @param  array $field_args Array of field arguments.\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function process_field( $field_args ) {\n\n\t\tswitch ( $field_args['type'] ) {\n\n\t\t\tcase 'group':\n\t\t\t\tif ( $this->save_group( $field_args ) ) {\n\t\t\t\t\t$this->updated[] = $field_args['id'];\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'title':\n\t\t\t\t\/\/ Don't process title fields.\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t$field = $this->get_new_field( $field_args );\n\n\t\t\t\tif ( $field->save_field_from_data( $this->data_to_save ) ) {\n\t\t\t\t\t$this->updated[] = $field->id();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Fires the \"cmb2_{$object_type}_process_fields_{$cmb_id}\" action hook.\n\t *\n\t * @since 2.2.2\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function pre_process() {\n\t\t$object_type = $this->object_type();\n\n\t\t\/**\n\t\t * Fires before fields have been processed\/saved.\n\t\t *\n\t\t * The dynamic portion of the hook name, $object_type, refers to the\n\t\t * metabox\/form's object type\n\t\t *    Usually `post` (this applies to all post-types).\n\t\t *    Could also be `comment`, `user` or `options-page`.\n\t\t *\n\t\t * The dynamic portion of the hook name, $this->cmb_id, is the meta_box id.\n\t\t *\n\t\t * @param array $cmb       This CMB2 object\n\t\t * @param int   $object_id The ID of the current object\n\t\t *\/\n\t\tdo_action( \"cmb2_{$object_type}_process_fields_{$this->cmb_id}\", $this, $this->object_id() );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Fires the \"cmb2_save_{$object_type}_fields\" and\n\t * \"cmb2_save_{$object_type}_fields_{$cmb_id}\" action hooks.\n\t *\n\t * @since  2.x.x\n\t *\n\t * @return CMB2\n\t *\/\n\tpublic function after_save() {\n\t\t$object_type = $this->object_type();\n\t\t$object_id   = $this->object_id();\n\n\t\t\/**\n\t\t * Fires after all fields have been saved.\n\t\t *\n\t\t * The dynamic portion of the hook name, $object_type, refers to the metabox\/form's object type\n\t\t * Usually `post` (this applies to all post-types).\n\t\t * Could also be `comment`, `user` or `options-page`.\n\t\t *\n\t\t * @param int    $object_id   The ID of the current object\n\t\t * @param array  $cmb_id      The current box ID\n\t\t * @param string $updated     Array of field ids that were updated.\n\t\t *                            Will only include field ids that had values change.\n\t\t * @param array  $cmb         This CMB2 object\n\t\t *\/\n\t\tdo_action( \"cmb2_save_{$object_type}_fields\", $object_id, $this->cmb_id, $this->updated, $this );\n\n\t\t\/**\n\t\t * Fires after all fields have been saved.\n\t\t *\n\t\t * The dynamic portion of the hook name, $this->cmb_id, is the meta_box id.\n\t\t *\n\t\t * The dynamic portion of the hook name, $object_type, refers to the metabox\/form's object type\n\t\t * Usually `post` (this applies to all post-types).\n\t\t * Could also be `comment`, `user` or `options-page`.\n\t\t *\n\t\t * @param int    $object_id   The ID of the current object\n\t\t * @param string $updated     Array of field ids that were updated.\n\t\t *                            Will only include field ids that had values change.\n\t\t * @param array  $cmb         This CMB2 object\n\t\t *\/\n\t\tdo_action( \"cmb2_save_{$object_type}_fields_{$this->cmb_id}\", $object_id, $this->updated, $this );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Save a repeatable group\n\t *\n\t * @since  1.x.x\n\t * @param  array $args Field arguments array.\n\t * @return mixed        Return of CMB2_Field::update_data().\n\t *\/\n\tpublic function save_group( $args ) {\n\t\tif ( ! isset( $args['id'], $args['fields'] ) || ! is_array( $args['fields'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn $this->save_group_field( $this->get_new_field( $args ) );\n\t}\n\n\t\/**\n\t * Save a repeatable group\n\t *\n\t * @since  1.x.x\n\t * @param  CMB2_Field $field_group CMB2_Field group field object.\n\t * @return mixed                   Return of CMB2_Field::update_data().\n\t *\/\n\tpublic function save_group_field( $field_group ) {\n\t\t$base_id = $field_group->id();\n\n\t\tif ( ! isset( $this->data_to_save[ $base_id ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$old = $field_group->get_data();\n\t\t\/\/ Check if group field has sanitization_cb.\n\t\t$group_vals = $field_group->sanitization_cb( $this->data_to_save[ $base_id ] );\n\t\t$saved      = array();\n\n\t\t$field_group->index = 0;\n\t\t$field_group->data_to_save = $this->data_to_save;\n\n\t\tforeach ( array_values( $field_group->fields() ) as $field_args ) {\n\t\t\tif ( 'title' === $field_args['type'] ) {\n\t\t\t\t\/\/ Don't process title fields.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$field  = $this->get_new_field( $field_args, $field_group );\n\t\t\t$sub_id = $field->id( true );\n\t\t\tif ( empty( $saved[ $field_group->index ] ) ) {\n\t\t\t\t$saved[ $field_group->index ] = array();\n\t\t\t}\n\n\t\t\tforeach ( (array) $group_vals as $field_group->index => $post_vals ) {\n\n\t\t\t\t\/\/ Get value.\n\t\t\t\t$new_val = isset( $group_vals[ $field_group->index ][ $sub_id ] )\n\t\t\t\t\t? $group_vals[ $field_group->index ][ $sub_id ]\n\t\t\t\t\t: false;\n\n\t\t\t\t\/\/ Sanitize.\n\t\t\t\t$new_val = $field->sanitization_cb( $new_val );\n\n\t\t\t\tif ( is_array( $new_val ) && $field->args( 'has_supporting_data' ) ) {\n\t\t\t\t\tif ( $field->args( 'repeatable' ) ) {\n\t\t\t\t\t\t$_new_val = array();\n\t\t\t\t\t\tforeach ( $new_val as $group_index => $grouped_data ) {\n\t\t\t\t\t\t\t\/\/ Add the supporting data to the $saved array stack.\n\t\t\t\t\t\t\t$saved[ $field_group->index ][ $grouped_data['supporting_field_id'] ][] = $grouped_data['supporting_field_value'];\n\t\t\t\t\t\t\t\/\/ Reset var to the actual value.\n\t\t\t\t\t\t\t$_new_val[ $group_index ] = $grouped_data['value'];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$new_val = $_new_val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\/\/ Add the supporting data to the $saved array stack.\n\t\t\t\t\t\t$saved[ $field_group->index ][ $new_val['supporting_field_id'] ] = $new_val['supporting_field_value'];\n\t\t\t\t\t\t\/\/ Reset var to the actual value.\n\t\t\t\t\t\t$new_val = $new_val['value'];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t\/\/ Get old value.\n\t\t\t\t$old_val = is_array( $old ) && isset( $old[ $field_group->index ][ $sub_id ] )\n\t\t\t\t\t? $old[ $field_group->index ][ $sub_id ]\n\t\t\t\t\t: false;\n\n\t\t\t\t$is_updated = ( ! CMB2_Utils::isempty( $new_val ) && $new_val !== $old_val );\n\t\t\t\t$is_removed = ( CMB2_Utils::isempty( $new_val ) && ! CMB2_Utils::isempty( $old_val ) );\n\n\t\t\t\t\/\/ Compare values and add to `$updated` array.\n\t\t\t\tif ( $is_updated || $is_removed ) {\n\t\t\t\t\t$this->updated[] = $base_id . '::' . $field_group->index . '::' . $sub_id;\n\t\t\t\t}\n\n\t\t\t\t\/\/ Add to `$saved` array.\n\t\t\t\t$saved[ $field_group->index ][ $sub_id ] = $new_val;\n\n\t\t\t}\/\/ End foreach.\n\n\t\t\t$saved[ $field_group->index ] = CMB2_Utils::filter_empty( $saved[ $field_group->index ] );\n\t\t}\/\/ End foreach.\n\n\t\t$saved = CMB2_Utils::filter_empty( $saved );\n\n\t\treturn $field_group->update_data( $saved, true );\n\t}\n\n\t\/**\n\t * Get object id from global space if no id is provided\n\t *\n\t * @since  1.0.0\n\t * @param  integer|string $object_id Object ID.\n\t * @return integer|string $object_id Object ID.\n\t *\/\n\tpublic function object_id( $object_id = 0 ) {\n\t\tglobal $pagenow;\n\n\t\tif ( $object_id ) {\n\t\t\t$this->object_id = $object_id;\n\t\t\treturn $this->object_id;\n\t\t}\n\n\t\tif ( $this->object_id ) {\n\t\t\treturn $this->object_id;\n\t\t}\n\n\t\t\/\/ Try to get our object ID from the global space.\n\t\tswitch ( $this->object_type() ) {\n\t\t\tcase 'user':\n\t\t\t\t$object_id = isset( $_REQUEST['user_id'] ) ? sanitize_text_field( wp_unslash( $_REQUEST['user_id'] ) ) : $object_id;\n\t\t\t\t$object_id = ! $object_id && 'user-new.php' !== $pagenow && isset( $GLOBALS['user_ID'] ) ? $GLOBALS['user_ID'] : $object_id;\n\t\t\t\tbreak;\n\n\t\t\tcase 'comment':\n\t\t\t\t$object_id = isset( $_REQUEST['c'] ) ? sanitize_text_field( wp_unslash( $_REQUEST['c'] ) ) : $object_id;\n\t\t\t\t$object_id = ! $object_id && isset( $GLOBALS['comments']->comment_ID ) ? $GLOBALS['comments']->comment_ID : $object_id;\n\t\t\t\tbreak;\n\n\t\t\tcase 'term':\n\t\t\t\t$object_id = isset( $_REQUEST['tag_ID'] ) ? sanitize_text_field( wp_unslash( $_REQUEST['tag_ID'] ) ) : $object_id;\n\t\t\t\tbreak;\n\n\t\t\tcase 'options-page':\n\t\t\t\t$key = $this->doing_options_page();\n\t\t\t\tif ( ! empty( $key ) ) {\n\t\t\t\t\t$object_id = $key;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t$object_id = isset( $GLOBALS['post']->ID ) ? $GLOBALS['post']->ID : $object_id;\n\t\t\t\t$object_id = isset( $_REQUEST['post'] ) ? sanitize_text_field( wp_unslash( $_REQUEST['post'] ) ) : $object_id;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t\/**\n\t\t * Filter the object id.\n\t\t *\n\t\t * @since 2.11.0\n\t\t *\n\t\t * @param  integer|string $object_id Object ID.\n\t\t * @param  CMB2           $cmb       This CMB2 object.\n\t\t *\/\n\t\t$object_id = apply_filters( 'cmb2_set_object_id', $object_id, $this );\n\n\t\t\/\/ reset to id or 0.\n\t\t$this->object_id = ! empty( $object_id ) ? $object_id : 0;\n\n\t\treturn $this->object_id;\n\t}\n\n\t\/**\n\t * Sets the $object_type based on metabox settings\n\t *\n\t * @since  1.0.0\n\t * @return string Object type.\n\t *\/\n\tpublic function mb_object_type() {\n\t\tif ( null !== $this->mb_object_type ) {\n\t\t\treturn $this->mb_object_type;\n\t\t}\n\n\t\t$found_type = '';\n\n\t\tif ( $this->is_options_page_mb() ) {\n\t\t\t$found_type = 'options-page';\n\t\t} else {\n\t\t\t$registered_types = $this->box_types();\n\n\t\t\t\/\/ if it's an array of one, extract it.\n\t\t\tif ( 1 === count( $registered_types ) ) {\n\t\t\t\t$last = end( $registered_types );\n\t\t\t\tif ( is_string( $last ) ) {\n\t\t\t\t\t$found_type = $last;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$current_object_type = $this->current_object_type();\n\t\t\t\tif ( in_array( $current_object_type, $registered_types, true ) ) {\n\t\t\t\t\t$found_type = $current_object_type;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\/\/ Get our object type.\n\t\t$mb_object_type = $this->is_supported_core_object_type( $found_type )\n\t\t\t? $found_type\n\t\t\t: 'post';\n\n\t\t\/**\n\t\t * Filter the metabox object type.\n\t\t *\n\t\t * @since 2.11.0\n\t\t *\n\t\t * @param string $mb_object_type The metabox object type.\n\t\t * @param string $found_type     The found object type.\n\t\t * @param CMB2   $cmb            This CMB2 object.\n\t\t *\/\n\t\t$this->mb_object_type = apply_filters( 'cmb2_set_box_object_type', $mb_object_type, $found_type, $this );\n\n\t\treturn $this->mb_object_type;\n\t}\n\n\t\/**\n\t * Gets the box 'object_types' array based on box settings.\n\t *\n\t * @since  2.2.3\n\t * @param  array $fallback Fallback value.\n\t *\n\t * @return array Object types.\n\t *\/\n\tpublic function box_types( $fallback = array() ) {\n\t\treturn CMB2_Utils::ensure_array( $this->prop( 'object_types' ), $fallback );\n\t}\n\n\t\/**\n\t * Check if given object_type(s) matches any of the registered object types or\n\t * taxonomies for this box.\n\t *\n\t * @since  2.7.0\n\t * @param  string|array $object_types The object type(s) to check.\n\t * @param  array        $fallback     Fallback object_types value.\n\t *\n\t * @return bool Whether given object type(s) are registered to this box.\n\t *\/\n\tpublic function is_box_type( $object_types = array(), $fallback = array() ) {\n\t\t$object_types = (array) $object_types;\n\t\t$box_types    = $this->box_types( $fallback );\n\n\t\tif ( in_array( 'term', $box_types, true ) ) {\n\t\t\t$taxonomies = CMB2_Utils::ensure_array( $this->prop( 'taxonomies' ) );\n\t\t\t$box_types = array_merge( $box_types, $taxonomies );\n\t\t}\n\n\t\t$found = array_intersect( $object_types, $box_types );\n\n\t\treturn ! empty( $found );\n\t}\n\n\t\/**\n\t * Initates the object types and option key for an options page metabox.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @return void\n\t *\/\n\tpublic function init_options_mb() {\n\t\t$keys  = $this->options_page_keys();\n\t\t$types = $this->box_types();\n\n\t\tif ( empty( $keys ) ) {\n\t\t\t$keys = '';\n\t\t\t$types = $this->deinit_options_mb( $types );\n\t\t} else {\n\n\t\t\t\/\/ Make sure 'options-page' is one of the object types.\n\t\t\t$types[] = 'options-page';\n\t\t}\n\n\t\t\/\/ Set\/Reset the option_key property.\n\t\t$this->set_prop( 'option_key', $keys );\n\n\t\t\/\/ Reset the object types.\n\t\t$this->set_prop( 'object_types', array_unique( $types ) );\n\t}\n\n\t\/**\n\t * If object-page initiation failed, remove traces options page setup.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @param array $types Array of types.\n\t * @return array\n\t *\/\n\tprotected function deinit_options_mb( $types ) {\n\t\tif ( isset( $this->meta_box['show_on']['key'] ) && 'options-page' === $this->meta_box['show_on']['key'] ) {\n\t\t\tunset( $this->meta_box['show_on']['key'] );\n\t\t}\n\n\t\tif ( array_key_exists( 'options-page', $this->meta_box['show_on'] ) ) {\n\t\t\tunset( $this->meta_box['show_on']['options-page'] );\n\t\t}\n\n\t\t$index = array_search( 'options-page', $types );\n\n\t\tif ( false !== $index ) {\n\t\t\tunset( $types[ $index ] );\n\t\t}\n\n\t\treturn $types;\n\t}\n\n\t\/**\n\t * Determines if metabox is for an options page\n\t *\n\t * @since  1.0.1\n\t * @return boolean True\/False.\n\t *\/\n\tpublic function is_options_page_mb() {\n\t\treturn (\n\t\t\t\/\/ 'show_on' values checked for back-compatibility.\n\t\t\t$this->is_old_school_options_page_mb()\n\t\t\t|| in_array( 'options-page', $this->box_types() )\n\t\t);\n\t}\n\n\t\/**\n\t * Determines if metabox uses old-schoold options page config.\n\t *\n\t * @since  2.2.5\n\t * @return boolean True\/False.\n\t *\/\n\tpublic function is_old_school_options_page_mb() {\n\t\treturn (\n\t\t\t\/\/ 'show_on' values checked for back-compatibility.\n\t\t\tisset( $this->meta_box['show_on']['key'] ) && 'options-page' === $this->meta_box['show_on']['key']\n\t\t\t|| array_key_exists( 'options-page', $this->meta_box['show_on'] )\n\t\t);\n\t}\n\n\t\/**\n\t * Determine if we are on an options page (or saving the options page).\n\t *\n\t * @since  2.2.5\n\t *\n\t * @return bool\n\t *\/\n\tpublic function doing_options_page() {\n\t\t$found_key = false;\n\t\t$keys = $this->options_page_keys();\n\n\t\tif ( empty( $keys ) ) {\n\t\t\treturn $found_key;\n\t\t}\n\n\t\tif ( ! empty( $_GET['page'] ) && in_array( $_GET['page'], $keys ) ) {\n\t\t\t$found_key = $_GET['page'];\n\t\t}\n\n\t\tif ( ! empty( $_POST['action'] ) && in_array( $_POST['action'], $keys ) ) {\n\t\t\t$found_key = $_POST['action'];\n\t\t}\n\n\t\treturn $found_key ? $found_key : false;\n\t}\n\n\t\/**\n\t * Get the options page key.\n\t *\n\t * @since  2.2.5\n\t * @return string|array\n\t *\/\n\tpublic function options_page_keys() {\n\t\t$key = '';\n\t\tif ( ! $this->is_options_page_mb() ) {\n\t\t\treturn $key;\n\t\t}\n\n\t\t$values = null;\n\t\tif ( ! empty( $this->meta_box['show_on']['value'] ) ) {\n\t\t\t$values = $this->meta_box['show_on']['value'];\n\t\t} elseif ( ! empty( $this->meta_box['show_on']['options-page'] ) ) {\n\t\t\t$values = $this->meta_box['show_on']['options-page'];\n\t\t} elseif ( $this->prop( 'option_key' ) ) {\n\t\t\t$values = $this->prop( 'option_key' );\n\t\t}\n\n\t\tif ( $values ) {\n\t\t\t$key = $values;\n\t\t}\n\n\t\tif ( ! is_array( $key ) ) {\n\t\t\t$key = array( $key );\n\t\t}\n\n\t\treturn $key;\n\t}\n\n\t\/**\n\t * Returns the object type\n\t *\n\t * @since  1.0.0\n\t * @param string $object_type Type of object being saved. (e.g., post, user, or comment). Optional.\n\t * @return string Object type.\n\t *\/\n\tpublic function object_type( $object_type = '' ) {\n\t\tif ( $object_type ) {\n\t\t\t$this->object_type = $object_type;\n\t\t\treturn $this->object_type;\n\t\t}\n\n\t\tif ( $this->object_type ) {\n\t\t\treturn $this->object_type;\n\t\t}\n\n\t\t$this->object_type = $this->current_object_type();\n\n\t\treturn $this->object_type;\n\t}\n\n\t\/**\n\t * Get the object type for the current page, based on the $pagenow global.\n\t *\n\t * @since  2.2.2\n\t * @return string  Page object type name.\n\t *\/\n\tpublic function current_object_type() {\n\t\tglobal $pagenow;\n\t\t$type = 'post';\n\n\t\tif ( in_array( $pagenow, array( 'user-edit.php', 'profile.php', 'user-new.php' ), true ) ) {\n\t\t\t$type = 'user';\n\t\t}\n\n\t\tif ( in_array( $pagenow, array( 'edit-comments.php', 'comment.php' ), true ) ) {\n\t\t\t$type = 'comment';\n\t\t}\n\n\t\tif ( in_array( $pagenow, array( 'edit-tags.php', 'term.php' ), true ) ) {\n\t\t\t$type = 'term';\n\t\t}\n\n\t\tif ( defined( 'DOING_AJAX' ) && isset( $_POST['action'] ) && 'add-tag' === $_POST['action'] ) {\n\t\t\t$type = 'term';\n\t\t}\n\n\t\tif (\n\t\t\tin_array( $pagenow, array( 'admin.php', 'admin-post.php' ), true )\n\t\t\t&& $this->doing_options_page()\n\t\t) {\n\t\t\t$type = 'options-page';\n\t\t}\n\n\t\treturn $type;\n\t}\n\n\t\/**\n\t * Set metabox property.\n\t *\n\t * @since  2.2.2\n\t * @param  string $property Metabox config property to retrieve.\n\t * @param  mixed  $value    Value to set if no value found.\n\t * @return mixed            Metabox config property value or false.\n\t *\/\n\tpublic function set_prop( $property, $value ) {\n\t\t$this->meta_box[ $property ] = $value;\n\n\t\treturn $this->prop( $property );\n\t}\n\n\t\/**\n\t * Get metabox property and optionally set a fallback\n\t *\n\t * @since  2.0.0\n\t * @param  string $property Metabox config property to retrieve.\n\t * @param  mixed  $fallback Fallback value to set if no value found.\n\t * @return mixed            Metabox config property value or false.\n\t *\/\n\tpublic function prop( $property, $fallback = null ) {\n\t\tif ( array_key_exists( $property, $this->meta_box ) ) {\n\t\t\treturn $this->meta_box[ $property ];\n\t\t} elseif ( $fallback ) {\n\t\t\treturn $this->meta_box[ $property ] = $fallback;\n\t\t}\n\t}\n\n\t\/**\n\t * Get a field object\n\t *\n\t * @since  2.0.3\n\t * @param  string|array|CMB2_Field $field        Metabox field id or field config array or CMB2_Field object.\n\t * @param  CMB2_Field|null         $field_group  (optional) CMB2_Field object (group parent).\n\t * @param  bool                    $reset_cached (optional) Reset the internal cache for this field object.\n\t *                                               Use sparingly.\n\t *\n\t * @return CMB2_Field|false                     CMB2_Field object (or false).\n\t *\/\n\tpublic function get_field( $field, $field_group = null, $reset_cached = false ) {\n\t\tif ( $field instanceof CMB2_Field ) {\n\t\t\treturn $field;\n\t\t}\n\n\t\t$field_id = is_string( $field ) ? $field : $field['id'];\n\n\t\t$parent_field_id = ! empty( $field_group ) ? $field_group->id() : '';\n\t\t$ids = $this->get_field_ids( $field_id, $parent_field_id );\n\n\t\tif ( ! $ids ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlist( $field_id, $sub_field_id ) = $ids;\n\n\t\t$index = $field_id . ( $sub_field_id ? '|' . $sub_field_id : '' ) . ( $field_group ? '|' . $field_group->index : '' );\n\n\t\tif ( array_key_exists( $index, $this->fields ) && ! $reset_cached ) {\n\t\t\treturn $this->fields[ $index ];\n\t\t}\n\n\t\t$this->fields[ $index ] = new CMB2_Field( $this->get_field_args( $field_id, $field, $sub_field_id, $field_group ) );\n\n\t\treturn $this->fields[ $index ];\n\t}\n\n\t\/**\n\t * Handles determining which type of arguments to pass to CMB2_Field\n\t *\n\t * @since  2.0.7\n\t * @param  mixed           $field_id     Field (or group field) ID.\n\t * @param  mixed           $field_args   Array of field arguments.\n\t * @param  mixed           $sub_field_id Sub field ID (if field_group exists).\n\t * @param  CMB2_Field|null $field_group  If a sub-field, will be the parent group CMB2_Field object.\n\t * @return array                         Array of CMB2_Field arguments.\n\t *\/\n\tpublic function get_field_args( $field_id, $field_args, $sub_field_id, $field_group ) {\n\n\t\t\/\/ Check if group is passed and if fields were added in the old-school fields array.\n\t\tif ( $field_group && ( $sub_field_id || 0 === $sub_field_id ) ) {\n\n\t\t\t\/\/ Update the fields array w\/ any modified properties inherited from the group field.\n\t\t\t$this->meta_box['fields'][ $field_id ]['fields'][ $sub_field_id ] = $field_args;\n\n\t\t\treturn $this->get_default_args( $field_args, $field_group );\n\t\t}\n\n\t\tif ( is_array( $field_args ) ) {\n\t\t\t$this->meta_box['fields'][ $field_id ] = array_merge( $field_args, $this->meta_box['fields'][ $field_id ] );\n\t\t}\n\n\t\treturn $this->get_default_args( $this->meta_box['fields'][ $field_id ] );\n\t}\n\n\t\/**\n\t * Get default field arguments specific to this CMB2 object.\n\t *\n\t * @since  2.2.0\n\t * @param  array      $field_args  Metabox field config array.\n\t * @param  CMB2_Field $field_group (optional) CMB2_Field object (group parent).\n\t * @return array                   Array of field arguments.\n\t *\/\n\tprotected function get_default_args( $field_args, $field_group = null ) {\n\t\tif ( $field_group ) {\n\t\t\t$args = array(\n\t\t\t\t'field_args'  => $field_args,\n\t\t\t\t'group_field' => $field_group,\n\t\t\t);\n\t\t} else {\n\t\t\t$args = array(\n\t\t\t\t'field_args'  => $field_args,\n\t\t\t\t'object_type' => $this->object_type(),\n\t\t\t\t'object_id'   => $this->object_id(),\n\t\t\t\t'cmb_id'      => $this->cmb_id,\n\t\t\t);\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * When fields are added in the old-school way, intitate them as they should be\n\t *\n\t * @since 2.1.0\n\t * @param array $fields          Array of fields to add.\n\t * @param mixed $parent_field_id Parent field id or null.\n\t *\n\t * @return CMB2\n\t *\/\n\tprotected function add_fields( $fields, $parent_field_id = null ) {\n\t\tforeach ( $fields as $field ) {\n\n\t\t\t$sub_fields = false;\n\t\t\tif ( array_key_exists( 'fields', $field ) ) {\n\t\t\t\t$sub_fields = $field['fields'];\n\t\t\t\tunset( $field['fields'] );\n\t\t\t}\n\n\t\t\t$field_id = $parent_field_id\n\t\t\t\t? $this->add_group_field( $parent_field_id, $field )\n\t\t\t\t: $this->add_field( $field );\n\n\t\t\tif ( $sub_fields ) {\n\t\t\t\t$this->add_fields( $sub_fields, $field_id );\n\t\t\t}\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Add a field to the metabox\n\t *\n\t * @since  2.0.0\n\t * @param  array $field    Metabox field config array.\n\t * @param  int   $position (optional) Position of metabox. 1 for first, etc.\n\t * @return string|false    Field id or false.\n\t *\/\n\tpublic function add_field( array $field, $position = 0 ) {\n\t\tif ( ! array_key_exists( 'id', $field ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$this->_add_field_to_array(\n\t\t\t$field,\n\t\t\t$this->meta_box['fields'],\n\t\t\t$position\n\t\t);\n\n\t\treturn $field['id'];\n\t}\n\n\t\/**\n\t * Add a field to a group\n\t *\n\t * @since  2.0.0\n\t * @param  string $parent_field_id The field id of the group field to add the field.\n\t * @param  array  $field           Metabox field config array.\n\t * @param  int    $position        (optional) Position of metabox. 1 for first, etc.\n\t * @return mixed                   Array of parent\/field ids or false.\n\t *\/\n\tpublic function add_group_field( $parent_field_id, array $field, $position = 0 ) {\n\t\tif ( ! array_key_exists( $parent_field_id, $this->meta_box['fields'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$parent_field = $this->meta_box['fields'][ $parent_field_id ];\n\n\t\tif ( 'group' !== $parent_field['type'] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! isset( $parent_field['fields'] ) ) {\n\t\t\t$this->meta_box['fields'][ $parent_field_id ]['fields'] = array();\n\t\t}\n\n\t\t$this->_add_field_to_array(\n\t\t\t$field,\n\t\t\t$this->meta_box['fields'][ $parent_field_id ]['fields'],\n\t\t\t$position\n\t\t);\n\n\t\treturn array( $parent_field_id, $field['id'] );\n\t}\n\n\t\/**\n\t * Perform some field-type-specific initiation actions.\n\t *\n\t * @since  2.7.0\n\t * @param  array $field Metabox field config array.\n\t * @return void\n\t *\/\n\tprotected function field_actions( $field ) {\n\t\t$field = CMB2_Hookup_Field::init( $field, $this );\n\n\t\tif ( isset( $field['column'] ) && false !== $field['column'] ) {\n\t\t\t$field = $this->define_field_column( $field );\n\t\t}\n\n\t\tif ( isset( $field['taxonomy'] ) && ! empty( $field['remove_default'] ) ) {\n\t\t\t$this->tax_metaboxes_to_remove[ $field['taxonomy'] ] = $field['taxonomy'];\n\t\t}\n\n\t\treturn $field;\n\t}\n\n\t\/**\n\t * Defines a field's column if requesting to be show in admin columns.\n\t *\n\t * @since  2.2.3\n\t * @param  array $field Metabox field config array.\n\t * @return array         Modified metabox field config array.\n\t *\/\n\tprotected function define_field_column( array $field ) {\n\t\t$this->has_columns = true;\n\n\t\t$column = is_array( $field['column'] ) ? $field['column'] : array();\n\n\t\t$field['column'] = wp_parse_args( $column, array(\n\t\t\t'name'     => isset( $field['name'] ) ? $field['name'] : '',\n\t\t\t'position' => false,\n\t\t) );\n\n\t\treturn $field;\n\t}\n\n\t\/**\n\t * Add a field array to a fields array in desired position\n\t *\n\t * @since 2.0.2\n\t * @param array   $field    Metabox field config array.\n\t * @param array   $fields   Array (passed by reference) to append the field (array) to.\n\t * @param integer $position Optionally specify a position in the array to be inserted.\n\t *\/\n\tprotected function _add_field_to_array( $field, &$fields, $position = 0 ) {\n\t\t$field = $this->field_actions( $field );\n\n\t\tif ( $position ) {\n\t\t\tCMB2_Utils::array_insert( $fields, array( $field['id'] => $field ), $position );\n\t\t} else {\n\t\t\t$fields[ $field['id'] ] = $field;\n\t\t}\n\t}\n\n\t\/**\n\t * Remove a field from the metabox\n\t *\n\t * @since 2.0.0\n\t * @param  string $field_id        The field id of the field to remove.\n\t * @param  string $parent_field_id (optional) The field id of the group field to remove field from.\n\t * @return bool                    True if field was removed.\n\t *\/\n\tpublic function remove_field( $field_id, $parent_field_id = '' ) {\n\t\t$ids = $this->get_field_ids( $field_id, $parent_field_id );\n\n\t\tif ( ! $ids ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlist( $field_id, $sub_field_id ) = $ids;\n\n\t\tunset( $this->fields[ implode( '', $ids ) ] );\n\n\t\tif ( ! $sub_field_id ) {\n\t\t\tunset( $this->meta_box['fields'][ $field_id ] );\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( isset( $this->fields[ $field_id ]->args['fields'][ $sub_field_id ] ) ) {\n\t\t\tunset( $this->fields[ $field_id ]->args['fields'][ $sub_field_id ] );\n\t\t}\n\t\tif ( isset( $this->meta_box['fields'][ $field_id ]['fields'][ $sub_field_id ] ) ) {\n\t\t\tunset( $this->meta_box['fields'][ $field_id ]['fields'][ $sub_field_id ] );\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Update or add a property to a field\n\t *\n\t * @since  2.0.0\n\t * @param  string $field_id        Field id.\n\t * @param  string $property        Field property to set\/update.\n\t * @param  mixed  $value           Value to set the field property.\n\t * @param  string $parent_field_id (optional) The field id of the group field to remove field from.\n\t * @return mixed                   Field id. Strict compare to false, as success can return a falsey value (like 0).\n\t *\/\n\tpublic function update_field_property( $field_id, $property, $value, $parent_field_id = '' ) {\n\t\t$ids = $this->get_field_ids( $field_id, $parent_field_id );\n\n\t\tif ( ! $ids ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlist( $field_id, $sub_field_id ) = $ids;\n\n\t\tif ( ! $sub_field_id ) {\n\t\t\t$this->meta_box['fields'][ $field_id ][ $property ] = $value;\n\t\t\treturn $field_id;\n\t\t}\n\n\t\t$this->meta_box['fields'][ $field_id ]['fields'][ $sub_field_id ][ $property ] = $value;\n\t\treturn $field_id;\n\t}\n\n\t\/**\n\t * Check if field ids match a field and return the index\/field id\n\t *\n\t * @since  2.0.2\n\t * @param  string $field_id        Field id.\n\t * @param  string $parent_field_id (optional) Parent field id.\n\t * @return mixed                    Array of field\/parent ids, or false.\n\t *\/\n\tpublic function get_field_ids( $field_id, $parent_field_id = '' ) {\n\t\t$sub_field_id = $parent_field_id ? $field_id : '';\n\t\t$field_id     = $parent_field_id ? $parent_field_id : $field_id;\n\t\t$fields       =& $this->meta_box['fields'];\n\n\t\tif ( ! array_key_exists( $field_id, $fields ) ) {\n\t\t\t$field_id = $this->search_old_school_array( $field_id, $fields );\n\t\t}\n\n\t\tif ( false === $field_id ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! $sub_field_id ) {\n\t\t\treturn array( $field_id, $sub_field_id );\n\t\t}\n\n\t\tif ( 'group' !== $fields[ $field_id ]['type'] ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! array_key_exists( $sub_field_id, $fields[ $field_id ]['fields'] ) ) {\n\t\t\t$sub_field_id = $this->search_old_school_array( $sub_field_id, $fields[ $field_id ]['fields'] );\n\t\t}\n\n\t\treturn false === $sub_field_id ? false : array( $field_id, $sub_field_id );\n\t}\n\n\t\/**\n\t * When using the old array filter, it is unlikely field array indexes will be the field id.\n\t *\n\t * @since  2.0.2\n\t * @param  string $field_id The field id.\n\t * @param  array  $fields   Array of fields to search.\n\t * @return mixed            Field index or false.\n\t *\/\n\tpublic function search_old_school_array( $field_id, $fields ) {\n\t\t$ids = wp_list_pluck( $fields, 'id' );\n\t\t$index = array_search( $field_id, $ids );\n\t\treturn false !== $index ? $index : false;\n\t}\n\n\t\/**\n\t * Handles metabox property callbacks, and passes this $cmb object as property.\n\t *\n\t * @since 2.2.3\n\t * @param  callable $cb                The callback method\/function\/closure.\n\t * @param  mixed    $additional_params Any additoinal parameters which should be passed to the callback.\n\t * @return mixed                       Return of the callback function.\n\t *\/\n\tpublic function do_callback( $cb, $additional_params = null ) {\n\t\treturn call_user_func( $cb, $this, $additional_params );\n\t}\n\n\t\/**\n\t * Generate a unique nonce field for each registered meta_box\n\t *\n\t * @since  2.0.0\n\t * @return void\n\t *\/\n\tpublic function nonce_field() {\n\t\twp_nonce_field( $this->nonce(), $this->nonce(), false, true );\n\t}\n\n\t\/**\n\t * Generate a unique nonce for each registered meta_box\n\t *\n\t * @since  2.0.0\n\t * @return string unique nonce string.\n\t *\/\n\tpublic function nonce() {\n\t\tif ( ! $this->generated_nonce ) {\n\t\t\t$this->generated_nonce = sanitize_html_class( 'nonce_' . basename( __FILE__ ) . $this->cmb_id );\n\t\t}\n\n\t\treturn $this->generated_nonce;\n\t}\n\n\t\/**\n\t * Checks if field-saving updated any fields.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @return bool\n\t *\/\n\tpublic function was_updated() {\n\t\treturn ! empty( $this->updated );\n\t}\n\n\t\/**\n\t * Whether this box is an \"alternate context\" box. This means the box has a 'context' property defined as:\n\t * 'form_top', 'before_permalink', 'after_title', or 'after_editor'.\n\t *\n\t * @since  2.2.4\n\t * @return bool\n\t *\/\n\tpublic function is_alternate_context_box() {\n\t\treturn $this->prop( 'context' ) && in_array( $this->prop( 'context' ), array( 'form_top', 'before_permalink', 'after_title', 'after_editor' ), true );\n\t}\n\n\t\/**\n\t * Whether given object type is one of the core supported object types.\n\t *\n\t * @since  2.11.0\n\t * @return bool\n\t *\/\n\tpublic function is_supported_core_object_type( $object_type ) {\n\t\treturn in_array( $object_type, $this->core_object_types, true );\n\t}\n\n\t\/**\n\t * Magic getter for our object.\n\t *\n\t * @param  string $property Object property.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t *\/\n\tpublic function __get( $property ) {\n\t\tswitch ( $property ) {\n\t\t\tcase 'updated':\n\t\t\tcase 'has_columns':\n\t\t\tcase 'tax_metaboxes_to_remove':\n\t\t\tcase 'core_object_types':\n\t\t\t\treturn $this->{$property};\n\t\t\tdefault:\n\t\t\t\treturn parent::__get( $property );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/rest-api\/CMB2_REST_Controller_Boxes.php","ext":"php","size":7631,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 objects\/boxes endpoint for WordPres REST API.\n * Allows access to boxes configuration data.\n *\n * @todo  Add better documentation.\n * @todo  Research proper schema.\n *\n * @since 2.2.3\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_REST_Controller_Boxes extends CMB2_REST_Controller {\n\n\t\/**\n\t * The base of this controller's route.\n\t *\n\t * @var string\n\t *\/\n\tprotected $rest_base = 'boxes';\n\n\t\/**\n\t * The combined $namespace and $rest_base for these routes.\n\t *\n\t * @var string\n\t *\/\n\tprotected $namespace_base = '';\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.3\n\t *\/\n\tpublic function __construct( WP_REST_Server $wp_rest_server ) {\n\t\t$this->namespace_base = $this->namespace . '\/' . $this->rest_base;\n\t\tparent::__construct( $wp_rest_server );\n\t}\n\n\t\/**\n\t * Register the routes for the objects of the controller.\n\t *\n\t * @since 2.2.3\n\t *\/\n\tpublic function register_routes() {\n\t\t$args = array(\n\t\t\t'_embed' => array(\n\t\t\t\t'description' => __( 'Includes the registered fields for the box in the response.', 'cmb2' ),\n\t\t\t),\n\t\t);\n\n\t\t\/\/ @todo determine what belongs in the context param.\n\t\t\/\/ $args['context'] = $this->get_context_param();\n\t\t\/\/ $args['context']['required'] = false;\n\t\t\/\/ $args['context']['default'] = 'view';\n\t\t\/\/ $args['context']['enum'] = array( 'view', 'embed' );\n\t\t\/\/ Returns all boxes data.\n\t\tregister_rest_route( $this->namespace, '\/' . $this->rest_base, array(\n\t\t\tarray(\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\t\t\t\t'args'                => $args,\n\t\t\t),\n\t\t\t'schema' => array( $this, 'get_item_schema' ),\n\t\t) );\n\n\t\t$args['_rendered'] = array(\n\t\t\t'description' => __( 'Includes the fully rendered attributes, \\'form_open\\', \\'form_close\\', as well as the enqueued \\'js_dependencies\\' script handles, and \\'css_dependencies\\' stylesheet handles.', 'cmb2' ),\n\t\t);\n\n\t\t\/\/ Returns specific box's data.\n\t\tregister_rest_route( $this->namespace, '\/' . $this->rest_base . '\/(?P<cmb_id>[\\w-]+)', array(\n\t\t\tarray(\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'permission_callback' => array( $this, 'get_item_permissions_check' ),\n\t\t\t\t'callback'            => array( $this, 'get_item' ),\n\t\t\t\t'args'                => $args,\n\t\t\t),\n\t\t\t'schema' => array( $this, 'get_item_schema' ),\n\t\t) );\n\t}\n\n\t\/**\n\t * Check if a given request has access to get boxes.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_items_permissions_check( $request ) {\n\t\t$this->initiate_request( $request, __FUNCTION__ );\n\n\t\t\/**\n\t\t * By default, no special permissions needed.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool   $can_access Whether this CMB2 endpoint can be accessed.\n\t\t * @param object $controller This CMB2_REST_Controller object.\n\t\t *\/\n\t\treturn apply_filters( 'cmb2_api_get_boxes_permissions_check', true, $this );\n\t}\n\n\t\/**\n\t * Get all public CMB2 boxes.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function get_items( $request ) {\n\t\t$this->initiate_request( $request, 'boxes_read' );\n\n\t\t$boxes = CMB2_REST::get_all();\n\t\tif ( empty( $boxes ) ) {\n\t\t\treturn new WP_Error( 'cmb2_rest_no_boxes', __( 'No boxes found.', 'cmb2' ), array(\n\t\t\t\t'status' => 403,\n\t\t\t) );\n\t\t}\n\n\t\t$boxes_data = array();\n\n\t\t\/\/ Loop and prepare boxes data.\n\t\tforeach ( $boxes as $this->rest_box ) {\n\t\t\tif (\n\t\t\t\t\/\/ Make sure this box can be read\n\t\t\t\t$this->rest_box->rest_read\n\t\t\t\t\/\/ And make sure current user can view this box.\n\t\t\t\t&& $this->get_item_permissions_check_filter( $this->request )\n\t\t\t) {\n\t\t\t\t$boxes_data[] = $this->server->response_to_data(\n\t\t\t\t\t$this->get_rest_box(),\n\t\t\t\t\tisset( $this->request['_embed'] )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn $this->prepare_item( $boxes_data );\n\t}\n\n\t\/**\n\t * Check if a given request has access to a box.\n\t * By default, no special permissions needed, but filtering return value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full details about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_item_permissions_check( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'box_read' );\n\n\t\treturn $this->get_item_permissions_check_filter();\n\t}\n\n\t\/**\n\t * Check by filter if a given request has access to a box.\n\t * By default, no special permissions needed, but filtering return value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  bool $can_access Whether the current request has access to view the box by default.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_item_permissions_check_filter( $can_access = true ) {\n\t\t\/**\n\t\t * By default, no special permissions needed.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool   $can_access Whether this CMB2 endpoint can be accessed.\n\t\t * @param object $controller This CMB2_REST_Controller object.\n\t\t *\/\n\t\treturn $this->maybe_hook_callback_and_apply_filters( 'cmb2_api_get_box_permissions_check', $can_access );\n\t}\n\n\t\/**\n\t * Get one CMB2 box from the collection.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function get_item( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'box_read' );\n\n\t\tif ( is_wp_error( $this->rest_box ) ) {\n\t\t\treturn $this->rest_box;\n\t\t}\n\n\t\treturn $this->prepare_item( $this->get_rest_box() );\n\t}\n\n\t\/**\n\t * Get a CMB2 box prepared for REST\n\t *\n\t * @since 2.2.3\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_rest_box() {\n\t\t$cmb = $this->rest_box->cmb;\n\n\t\t$boxes_data = $cmb->meta_box;\n\n\t\tif ( isset( $this->request['_rendered'] ) && $this->namespace_base !== ltrim( CMB2_REST_Controller::get_intial_route(), '\/' ) ) {\n\t\t\t$boxes_data['form_open'] = $this->get_cb_results( array( $cmb, 'render_form_open' ) );\n\t\t\t$boxes_data['form_close'] = $this->get_cb_results( array( $cmb, 'render_form_close' ) );\n\n\t\t\tglobal $wp_scripts, $wp_styles;\n\t\t\t$before_css = $wp_styles->queue;\n\t\t\t$before_js = $wp_scripts->queue;\n\n\t\t\tCMB2_JS::enqueue();\n\n\t\t\t$boxes_data['js_dependencies'] = array_values( array_diff( $wp_scripts->queue, $before_js ) );\n\t\t\t$boxes_data['css_dependencies'] = array_values( array_diff( $wp_styles->queue, $before_css ) );\n\t\t}\n\n\t\t\/\/ TODO: look into 'embed' parameter.\n\t\t\/\/ http:\/\/demo.wp-api.org\/wp-json\/wp\/v2\/posts?_embed\n\t\tunset( $boxes_data['fields'] );\n\t\t\/\/ Handle callable properties.\n\t\tunset( $boxes_data['show_on_cb'] );\n\n\t\t$response = rest_ensure_response( $boxes_data );\n\n\t\t$response->add_links( $this->prepare_links( $cmb ) );\n\n\t\treturn $response;\n\t}\n\n\t\/**\n\t * Return an array of contextual links for box\/boxes.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  CMB2_REST $cmb CMB2_REST object to build links from.\n\t *\n\t * @return array          Array of links\n\t *\/\n\tprotected function prepare_links( $cmb ) {\n\t\t$boxbase      = $this->namespace_base . '\/' . $cmb->cmb_id;\n\t\t$query_string = $this->get_query_string();\n\n\t\treturn array(\n\t\t\t\/\/ Standard Link Relations -- http:\/\/v2.wp-api.org\/extending\/linking\/\n\t\t\t'self' => array(\n\t\t\t\t'href' => rest_url( $boxbase . $query_string ),\n\t\t\t),\n\t\t\t'collection' => array(\n\t\t\t\t'href' => rest_url( $this->namespace_base . $query_string ),\n\t\t\t),\n\t\t\t\/\/ Custom Link Relations -- http:\/\/v2.wp-api.org\/extending\/linking\/\n\t\t\t\/\/ TODO URL should document relationship.\n\t\t\t'https:\/\/cmb2.io\/fields' => array(\n\t\t\t\t'href' => rest_url( trailingslashit( $boxbase ) . 'fields' . $query_string ),\n\t\t\t\t'embeddable' => true,\n\t\t\t),\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/rest-api\/CMB2_REST.php","ext":"php","size":23487,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Handles hooking CMB2 objects\/fields into the WordPres REST API\n * which can allow fields to be read and\/or updated.\n *\n * @since  2.2.3\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\n * @property-read read_fields Array of readable field objects.\n * @property-read edit_fields Array of editable field objects.\n * @property-read rest_read   Whether CMB2 object is readable via the rest api.\n * @property-read rest_edit   Whether CMB2 object is editable via the rest api.\n *\/\nclass CMB2_REST extends CMB2_Hookup_Base {\n\n\t\/**\n\t * The current CMB2 REST endpoint version\n\t *\n\t * @var string\n\t * @since 2.2.3\n\t *\/\n\tconst VERSION = '1';\n\n\t\/**\n\t * The CMB2 REST base namespace (v should always be followed by $version)\n\t *\n\t * @var string\n\t * @since 2.2.3\n\t *\/\n\tconst NAME_SPACE = 'cmb2\/v1';\n\n\t\/**\n\t * @var   CMB2 object\n\t * @since 2.2.3\n\t *\/\n\tpublic $cmb;\n\n\t\/**\n\t * @var   CMB2_REST[] objects\n\t * @since 2.2.3\n\t *\/\n\tprotected static $boxes = array();\n\n\t\/**\n\t * @var   array Array of cmb ids for each type.\n\t * @since 2.2.3\n\t *\/\n\tprotected static $type_boxes = array(\n\t\t'post' => array(),\n\t\t'user' => array(),\n\t\t'comment' => array(),\n\t\t'term' => array(),\n\t);\n\n\t\/**\n\t * Array of readable field objects.\n\t *\n\t * @var   CMB2_Field[]\n\t * @since 2.2.3\n\t *\/\n\tprotected $read_fields = array();\n\n\t\/**\n\t * Array of editable field objects.\n\t *\n\t * @var   CMB2_Field[]\n\t * @since 2.2.3\n\t *\/\n\tprotected $edit_fields = array();\n\n\t\/**\n\t * Whether CMB2 object is readable via the rest api.\n\t *\n\t * @var boolean\n\t *\/\n\tprotected $rest_read = false;\n\n\t\/**\n\t * Whether CMB2 object is editable via the rest api.\n\t *\n\t * @var boolean\n\t *\/\n\tprotected $rest_edit = false;\n\n\t\/**\n\t * A functionalized constructor, used for the hookup action callbacks.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @param  CMB2 $cmb The CMB2 object to hookup\n\t *\n\t * @return CMB2_Hookup_Base $hookup The hookup object.\n\t *\/\n\tpublic static function maybe_init_and_hookup( CMB2 $cmb ) {\n\t\tif ( $cmb->prop( 'show_in_rest' ) && function_exists( 'rest_get_server' ) ) {\n\n\t\t\t$hookup = new self( $cmb );\n\n\t\t\treturn $hookup->universal_hooks();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param CMB2 $cmb The CMB2 object to be registered for the API.\n\t *\/\n\tpublic function __construct( CMB2 $cmb ) {\n\t\t$this->cmb = $cmb;\n\t\tself::$boxes[ $cmb->cmb_id ] = $this;\n\n\t\t$show_value = $this->cmb->prop( 'show_in_rest' );\n\n\t\t$this->rest_read = self::is_readable( $show_value );\n\t\t$this->rest_edit = self::is_editable( $show_value );\n\t}\n\n\t\/**\n\t * Hooks to register on frontend and backend.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @return void\n\t *\/\n\tpublic function universal_hooks() {\n\t\t\/\/ hook up the CMB rest endpoint classes\n\t\t$this->once( 'rest_api_init', array( __CLASS__, 'init_routes' ), 0 );\n\n\t\tif ( function_exists( 'register_rest_field' ) ) {\n\t\t\t$this->once( 'rest_api_init', array( __CLASS__, 'register_cmb2_fields' ), 50 );\n\t\t}\n\n\t\t$this->declare_read_edit_fields();\n\n\t\tadd_filter( 'is_protected_meta', array( $this, 'is_protected_meta' ), 10, 3 );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Initiate the CMB2 Boxes and Fields routes\n\t *\n\t * @since  2.2.3\n\t *\n\t * @return void\n\t *\/\n\tpublic static function init_routes() {\n\t\t$wp_rest_server = rest_get_server();\n\n\t\t$boxes_controller = new CMB2_REST_Controller_Boxes( $wp_rest_server );\n\t\t$boxes_controller->register_routes();\n\n\t\t$fields_controller = new CMB2_REST_Controller_Fields( $wp_rest_server );\n\t\t$fields_controller->register_routes();\n\t}\n\n\t\/**\n\t * Loop through REST boxes and call register_rest_field for each object type.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @return void\n\t *\/\n\tpublic static function register_cmb2_fields() {\n\t\t$alltypes = $taxonomies = array();\n\n\t\tforeach ( self::$boxes as $cmb_id => $rest_box ) {\n\n\t\t\t\/\/ Hook box specific filter callbacks.\n\t\t\t$callback = $rest_box->cmb->prop( 'register_rest_field_cb' );\n\t\t\tif ( is_callable( $callback ) ) {\n\t\t\t\tcall_user_func( $callback, $rest_box );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$types = array_flip( $rest_box->cmb->box_types( array( 'post' ) ) );\n\n\t\t\tif ( isset( $types['user'] ) ) {\n\t\t\t\tunset( $types['user'] );\n\t\t\t\tself::$type_boxes['user'][ $cmb_id ] = $cmb_id;\n\t\t\t}\n\n\t\t\tif ( isset( $types['comment'] ) ) {\n\t\t\t\tunset( $types['comment'] );\n\t\t\t\tself::$type_boxes['comment'][ $cmb_id ] = $cmb_id;\n\t\t\t}\n\n\t\t\tif ( isset( $types['term'] ) ) {\n\t\t\t\tunset( $types['term'] );\n\n\t\t\t\t$taxonomies = array_merge(\n\t\t\t\t\t$taxonomies,\n\t\t\t\t\tCMB2_Utils::ensure_array( $rest_box->cmb->prop( 'taxonomies' ) )\n\t\t\t\t);\n\n\t\t\t\tself::$type_boxes['term'][ $cmb_id ] = $cmb_id;\n\t\t\t}\n\n\t\t\tif ( ! empty( $types ) ) {\n\t\t\t\t$alltypes = array_merge( $alltypes, array_flip( $types ) );\n\t\t\t\tself::$type_boxes['post'][ $cmb_id ] = $cmb_id;\n\t\t\t}\n\t\t}\n\n\t\t$alltypes = array_unique( $alltypes );\n\n\t\tif ( ! empty( $alltypes ) ) {\n\t\t\tself::register_rest_field( $alltypes, 'post' );\n\t\t}\n\n\t\tif ( ! empty( self::$type_boxes['user'] ) ) {\n\t\t\tself::register_rest_field( 'user', 'user' );\n\t\t}\n\n\t\tif ( ! empty( self::$type_boxes['comment'] ) ) {\n\t\t\tself::register_rest_field( 'comment', 'comment' );\n\t\t}\n\n\t\tif ( ! empty( self::$type_boxes['term'] ) ) {\n\t\t\tself::register_rest_field( $taxonomies, 'term' );\n\t\t}\n\t}\n\n\t\/**\n\t * Wrapper for register_rest_field.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param string|array $object_types Object(s) the field is being registered\n\t *                                   to, \"post\"|\"term\"|\"comment\" etc.\n\t * @param string       $object_types       Canonical object type for callbacks.\n\t *\n\t * @return void\n\t *\/\n\tprotected static function register_rest_field( $object_types, $object_type ) {\n\t\tregister_rest_field( $object_types, 'cmb2', array(\n\t\t\t'get_callback'    => array( __CLASS__, \"get_{$object_type}_rest_values\" ),\n\t\t\t'update_callback' => array( __CLASS__, \"update_{$object_type}_rest_values\" ),\n\t\t\t'schema'          => null, \/\/ @todo add schema\n\t\t) );\n\t}\n\n\t\/**\n\t * Setup readable and editable fields.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @return void\n\t *\/\n\tprotected function declare_read_edit_fields() {\n\t\tforeach ( $this->cmb->prop( 'fields' ) as $field ) {\n\t\t\t$show_in_rest = isset( $field['show_in_rest'] ) ? $field['show_in_rest'] : null;\n\n\t\t\tif ( false === $show_in_rest ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( $this->can_read( $show_in_rest ) ) {\n\t\t\t\t$this->read_fields[] = $field['id'];\n\t\t\t}\n\n\t\t\tif ( $this->can_edit( $show_in_rest ) ) {\n\t\t\t\t$this->edit_fields[] = $field['id'];\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Determines if a field is readable based on it's show_in_rest value\n\t * and the box's show_in_rest value.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  bool $show_in_rest Field's show_in_rest value. Default null.\n\t *\n\t * @return bool               Whether field is readable.\n\t *\/\n\tprotected function can_read( $show_in_rest ) {\n\t\t\/\/ if 'null', then use default box value.\n\t\tif ( null === $show_in_rest ) {\n\t\t\treturn $this->rest_read;\n\t\t}\n\n\t\t\/\/ Else check if the value represents readable.\n\t\treturn self::is_readable( $show_in_rest );\n\t}\n\n\t\/**\n\t * Determines if a field is editable based on it's show_in_rest value\n\t * and the box's show_in_rest value.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  bool $show_in_rest Field's show_in_rest value. Default null.\n\t *\n\t * @return bool               Whether field is editable.\n\t *\/\n\tprotected function can_edit( $show_in_rest ) {\n\t\t\/\/ if 'null', then use default box value.\n\t\tif ( null === $show_in_rest ) {\n\t\t\treturn $this->rest_edit;\n\t\t}\n\n\t\t\/\/ Else check if the value represents editable.\n\t\treturn self::is_editable( $show_in_rest );\n\t}\n\n\t\/**\n\t * Handler for getting post custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  array           $object      The object data from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function get_post_rest_values( $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::get_rest_values( $object, $request, $object_type, 'post' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for getting user custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  array           $object      The object data from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function get_user_rest_values( $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::get_rest_values( $object, $request, $object_type, 'user' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for getting comment custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  array           $object      The object data from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function get_comment_rest_values( $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::get_rest_values( $object, $request, $object_type, 'comment' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for getting term custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  array           $object      The object data from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return mixed\n\t *\/\n\tpublic static function get_term_rest_values( $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::get_rest_values( $object, $request, $object_type, 'term' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for getting custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  array           $object           The object data from the response\n\t * @param  WP_REST_Request $request          Current request\n\t * @param  string          $object_type      The request object type\n\t * @param  string          $main_object_type The cmb main object type\n\t *\n\t * @return mixed\n\t *\/\n\tprotected static function get_rest_values( $object, $request, $object_type, $main_object_type = 'post' ) {\n\t\tif ( ! isset( $object['id'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$values = array();\n\n\t\tif ( ! empty( self::$type_boxes[ $main_object_type ] ) ) {\n\t\t\tforeach ( self::$type_boxes[ $main_object_type ] as $cmb_id ) {\n\t\t\t\t$rest_box = self::$boxes[ $cmb_id ];\n\n\t\t\t\tif ( ! $rest_box->cmb->is_box_type( $object_type ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$result = self::get_box_rest_values( $rest_box, $object['id'], $main_object_type );\n\t\t\t\tif ( ! empty( $result ) ) {\n\t\t\t\t\tif ( empty( $values[ $cmb_id ] ) ) {\n\t\t\t\t\t\t$values[ $cmb_id ] = $result;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t$values[ $cmb_id ] = array_merge( $values[ $cmb_id ], $result );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $values;\n\t}\n\n\t\/**\n\t * Get box rest values.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  CMB2_REST $rest_box         The CMB2_REST object.\n\t * @param  integer   $object_id        The object ID.\n\t * @param  string    $main_object_type The object type (post, user, term, etc)\n\t *\n\t * @return array                       Array of box rest values.\n\t *\/\n\tpublic static function get_box_rest_values( $rest_box, $object_id = 0, $main_object_type = 'post' ) {\n\n\t\t$rest_box->cmb->object_id( $object_id );\n\t\t$rest_box->cmb->object_type( $main_object_type );\n\n\t\t$values = array();\n\n\t\tforeach ( $rest_box->read_fields as $field_id ) {\n\t\t\t$field = $rest_box->cmb->get_field( $field_id );\n\t\t\t$field->object_id( $object_id );\n\t\t\t$field->object_type( $main_object_type );\n\n\t\t\t$values[ $field->id( true ) ] = $field->get_rest_value();\n\n\t\t\tif ( $field->args( 'has_supporting_data' ) ) {\n\t\t\t\t$field = $field->get_supporting_field();\n\t\t\t\t$values[ $field->id( true ) ] = $field->get_rest_value();\n\t\t\t}\n\t\t}\n\n\t\treturn $values;\n\t}\n\n\t\/**\n\t * Handler for updating post custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed           $values      The value of the field\n\t * @param  object          $object      The object from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function update_post_rest_values( $values, $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::update_rest_values( $values, $object, $request, $object_type, 'post' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for updating user custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed           $values      The value of the field\n\t * @param  object          $object      The object from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function update_user_rest_values( $values, $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::update_rest_values( $values, $object, $request, $object_type, 'user' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for updating comment custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed           $values      The value of the field\n\t * @param  object          $object      The object from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function update_comment_rest_values( $values, $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::update_rest_values( $values, $object, $request, $object_type, 'comment' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for updating term custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed           $values      The value of the field\n\t * @param  object          $object      The object from the response\n\t * @param  string          $field_name  Name of field\n\t * @param  WP_REST_Request $request     Current request\n\t * @param  string          $object_type The request object type\n\t *\n\t * @return bool|int\n\t *\/\n\tpublic static function update_term_rest_values( $values, $object, $field_name, $request, $object_type ) {\n\t\tif ( 'cmb2' === $field_name ) {\n\t\t\treturn self::update_rest_values( $values, $object, $request, $object_type, 'term' );\n\t\t}\n\t}\n\n\t\/**\n\t * Handler for updating custom field data.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed           $values           The value of the field\n\t * @param  object          $object           The object from the response\n\t * @param  WP_REST_Request $request          Current request\n\t * @param  string          $object_type      The request object type\n\t * @param  string          $main_object_type The cmb main object type\n\t *\n\t * @return bool|int\n\t *\/\n\tprotected static function update_rest_values( $values, $object, $request, $object_type, $main_object_type = 'post' ) {\n\t\tif ( empty( $values ) || ! is_array( $values ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$object_id = self::get_object_id( $object, $main_object_type );\n\n\t\tif ( ! $object_id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$updated = array();\n\n\t\tif ( ! empty( self::$type_boxes[ $main_object_type ] ) ) {\n\t\t\tforeach ( self::$type_boxes[ $main_object_type ] as $cmb_id ) {\n\t\t\t\t$result = self::santize_box_rest_values( $values, self::$boxes[ $cmb_id ], $object_id, $main_object_type );\n\t\t\t\tif ( ! empty( $result ) ) {\n\t\t\t\t\t$updated[ $cmb_id ] = $result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $updated;\n\t}\n\n\t\/**\n\t * Updates box rest values.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  array     $values           Array of values.\n\t * @param  CMB2_REST $rest_box         The CMB2_REST object.\n\t * @param  integer   $object_id        The object ID.\n\t * @param  string    $main_object_type The object type (post, user, term, etc)\n\t *\n\t * @return mixed|bool                  Array of updated statuses if successful.\n\t *\/\n\tpublic static function santize_box_rest_values( $values, $rest_box, $object_id = 0, $main_object_type = 'post' ) {\n\n\t\tif ( ! array_key_exists( $rest_box->cmb->cmb_id, $values ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$rest_box->cmb->object_id( $object_id );\n\t\t$rest_box->cmb->object_type( $main_object_type );\n\n\t\treturn $rest_box->sanitize_box_values( $values );\n\t}\n\n\t\/**\n\t * Loop through box fields and sanitize the values.\n\t *\n\t * @since  2.2.o\n\t *\n\t * @param  array $values Array of values being provided.\n\t * @return array           Array of updated\/sanitized values.\n\t *\/\n\tpublic function sanitize_box_values( array $values ) {\n\t\t$updated = array();\n\n\t\t$this->cmb->pre_process();\n\n\t\tforeach ( $this->edit_fields as $field_id ) {\n\t\t\t$updated[ $field_id ] = $this->sanitize_field_value( $values, $field_id );\n\t\t}\n\n\t\t$this->cmb->after_save();\n\n\t\treturn $updated;\n\t}\n\n\t\/**\n\t * Handles returning a sanitized field value.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  array  $values   Array of values being provided.\n\t * @param  string $field_id The id of the field to update.\n\t *\n\t * @return mixed             The results of saving\/sanitizing a field value.\n\t *\/\n\tprotected function sanitize_field_value( array $values, $field_id ) {\n\t\tif ( ! array_key_exists( $field_id, $values[ $this->cmb->cmb_id ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$field = $this->cmb->get_field( $field_id );\n\n\t\tif ( 'title' == $field->type() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$field->object_id( $this->cmb->object_id() );\n\t\t$field->object_type( $this->cmb->object_type() );\n\n\t\tif ( 'group' == $field->type() ) {\n\t\t\treturn $this->sanitize_group_value( $values, $field );\n\t\t}\n\n\t\treturn $field->save_field( $values[ $this->cmb->cmb_id ][ $field_id ] );\n\t}\n\n\t\/**\n\t * Handles returning a sanitized group field value.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  array      $values Array of values being provided.\n\t * @param  CMB2_Field $field  CMB2_Field object.\n\t *\n\t * @return mixed               The results of saving\/sanitizing the group field value.\n\t *\/\n\tprotected function sanitize_group_value( array $values, CMB2_Field $field ) {\n\t\t$fields = $field->fields();\n\t\tif ( empty( $fields ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->cmb->data_to_save[ $field->_id( '', false ) ] = $values[ $this->cmb->cmb_id ][ $field->_id( '', false ) ];\n\n\t\treturn $this->cmb->save_group_field( $field );\n\t}\n\n\t\/**\n\t * Filter whether a meta key is protected.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param bool   $protected Whether the key is protected. Default false.\n\t * @param string $meta_key  Meta key.\n\t * @param string $meta_type Meta type.\n\t *\/\n\tpublic function is_protected_meta( $protected, $meta_key, $meta_type ) {\n\t\tif ( $this->field_can_edit( $meta_key ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $protected;\n\t}\n\n\t\/**\n\t * Get the object ID for the given object\/type.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed  $object      The object to get the ID for.\n\t * @param  string $object_type The object type we are looking for.\n\t *\n\t * @return int                 The object ID if found.\n\t *\/\n\tpublic static function get_object_id( $object, $object_type = 'post' ) {\n\t\tswitch ( $object_type ) {\n\t\t\tcase 'user':\n\t\t\tcase 'post':\n\t\t\t\tif ( isset( $object->ID ) ) {\n\t\t\t\t\treturn intval( $object->ID );\n\t\t\t\t}\n\t\t\tcase 'comment':\n\t\t\t\tif ( isset( $object->comment_ID ) ) {\n\t\t\t\t\treturn intval( $object->comment_ID );\n\t\t\t\t}\n\t\t\tcase 'term':\n\t\t\t\tif ( is_array( $object ) && isset( $object['term_id'] ) ) {\n\t\t\t\t\treturn intval( $object['term_id'] );\n\t\t\t\t} elseif ( isset( $object->term_id ) ) {\n\t\t\t\t\treturn intval( $object->term_id );\n\t\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Checks if a given field can be read.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string|CMB2_Field $field_id      Field ID or CMB2_Field object.\n\t * @param  boolean           $return_object Whether to return the Field object.\n\t *\n\t * @return mixed                            False if field can't be read or true|CMB2_Field object.\n\t *\/\n\tpublic function field_can_read( $field_id, $return_object = false ) {\n\t\treturn $this->field_can( 'read_fields', $field_id, $return_object );\n\t}\n\n\t\/**\n\t * Checks if a given field can be edited.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string|CMB2_Field $field_id      Field ID or CMB2_Field object.\n\t * @param  boolean           $return_object Whether to return the Field object.\n\t *\n\t * @return mixed                            False if field can't be edited or true|CMB2_Field object.\n\t *\/\n\tpublic function field_can_edit( $field_id, $return_object = false ) {\n\t\treturn $this->field_can( 'edit_fields', $field_id, $return_object );\n\t}\n\n\t\/**\n\t * Checks if a given field can be read or edited.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string            $type          Whether we are checking for read or edit fields.\n\t * @param  string|CMB2_Field $field_id      Field ID or CMB2_Field object.\n\t * @param  boolean           $return_object Whether to return the Field object.\n\t *\n\t * @return mixed                            False if field can't be read or edited or true|CMB2_Field object.\n\t *\/\n\tprotected function field_can( $type, $field_id, $return_object = false ) {\n\t\tif ( ! in_array( $field_id instanceof CMB2_Field ? $field_id->id() : $field_id, $this->{$type}, true ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn $return_object ? $this->cmb->get_field( $field_id ) : true;\n\t}\n\n\t\/**\n\t * Get a CMB2_REST instance object from the registry by a CMB2 id.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $cmb_id CMB2 config id\n\t *\n\t * @return CMB2_REST|false The CMB2_REST object or false.\n\t *\/\n\tpublic static function get_rest_box( $cmb_id ) {\n\t\treturn isset( self::$boxes[ $cmb_id ] ) ? self::$boxes[ $cmb_id ] : false;\n\t}\n\n\t\/**\n\t * Remove a CMB2_REST instance object from the registry.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param string $cmb_id A CMB2 instance id.\n\t *\/\n\tpublic static function remove( $cmb_id ) {\n\t\tif ( array_key_exists( $cmb_id, self::$boxes ) ) {\n\t\t\tunset( self::$boxes[ $cmb_id ] );\n\t\t}\n\t}\n\n\t\/**\n\t * Retrieve all CMB2_REST instances from the registry.\n\t *\n\t * @since  2.2.3\n\t * @return CMB2[] Array of all registered CMB2_REST instances.\n\t *\/\n\tpublic static function get_all() {\n\t\treturn self::$boxes;\n\t}\n\n\t\/**\n\t * Checks if given value is readable.\n\t *\n\t * Value is considered readable if it is not empty and if it does not match the editable blacklist.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed $value Value to check.\n\t *\n\t * @return boolean       Whether value is considered readable.\n\t *\/\n\tpublic static function is_readable( $value ) {\n\t\treturn ! empty( $value ) && ! in_array( $value, array(\n\t\t\tWP_REST_Server::CREATABLE,\n\t\t\tWP_REST_Server::EDITABLE,\n\t\t\tWP_REST_Server::DELETABLE,\n\t\t), true );\n\t}\n\n\t\/**\n\t * Checks if given value is editable.\n\t *\n\t * Value is considered editable if matches the editable whitelist.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed $value Value to check.\n\t *\n\t * @return boolean       Whether value is considered editable.\n\t *\/\n\tpublic static function is_editable( $value ) {\n\t\treturn in_array( $value, array(\n\t\t\tWP_REST_Server::EDITABLE,\n\t\t\tWP_REST_Server::ALLMETHODS,\n\t\t), true );\n\t}\n\n\t\/**\n\t * Magic getter for our object.\n\t *\n\t * @param string $field\n\t * @throws Exception Throws an exception if the field is invalid.\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'read_fields':\n\t\t\tcase 'edit_fields':\n\t\t\tcase 'rest_read':\n\t\t\tcase 'rest_edit':\n\t\t\t\treturn $this->{$field};\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( 'Invalid ' . __CLASS__ . ' property: ' . $field );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/rest-api\/CMB2_REST_Controller.php","ext":"php","size":11165,"mtime":1757324689,"type":"text","content":"<?php\nif ( ! class_exists( 'WP_REST_Controller' ) ) {\n\t\/\/ Shim the WP_REST_Controller class if wp-api plugin not installed, & not in core.\n\trequire_once cmb2_dir( 'includes\/shim\/WP_REST_Controller.php' );\n}\n\n\/**\n * Creates CMB2 objects\/fields endpoint for WordPres REST API.\n * Allows access to fields registered to a specific post type and more.\n *\n * @todo  Add better documentation.\n * @todo  Research proper schema.\n *\n * @since 2.2.3\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nabstract class CMB2_REST_Controller extends WP_REST_Controller {\n\n\t\/**\n\t * The namespace of this controller's route.\n\t *\n\t * @var string\n\t *\/\n\tprotected $namespace = CMB2_REST::NAME_SPACE;\n\n\t\/**\n\t * The base of this controller's route.\n\t *\n\t * @var string\n\t *\/\n\tprotected $rest_base;\n\n\t\/**\n\t * The current request object\n\t *\n\t * @var WP_REST_Request $request\n\t * @since 2.2.3\n\t *\/\n\tpublic $request;\n\n\t\/**\n\t * The current server object\n\t *\n\t * @var WP_REST_Server $server\n\t * @since 2.2.3\n\t *\/\n\tpublic $server;\n\n\t\/**\n\t * Box object id\n\t *\n\t * @var   mixed\n\t * @since 2.2.3\n\t *\/\n\tpublic $object_id = null;\n\n\t\/**\n\t * Box object type\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tpublic $object_type = '';\n\n\t\/**\n\t * CMB2 Instance\n\t *\n\t * @var CMB2_REST\n\t *\/\n\tprotected $rest_box;\n\n\t\/**\n\t * CMB2_Field Instance\n\t *\n\t * @var CMB2_Field\n\t *\/\n\tprotected $field;\n\n\t\/**\n\t * The initial route\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tprotected static $route = '';\n\n\t\/**\n\t * Defines which endpoint the initial request is.\n\t *\n\t * @var string $request_type\n\t * @since 2.2.3\n\t *\/\n\tprotected static $request_type = '';\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.3\n\t *\/\n\tpublic function __construct( WP_REST_Server $wp_rest_server ) {\n\t\t$this->server = $wp_rest_server;\n\t}\n\n\t\/**\n\t * A wrapper for `apply_filters` which checks for box\/field properties to hook to the filter.\n\t *\n\t * Checks if a CMB object callback property exists, and if it does,\n\t * hook it to the permissions filter.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $filter         The name of the filter to apply.\n\t * @param  bool   $default_access The default access for this request.\n\t *\n\t * @return void\n\t *\/\n\tpublic function maybe_hook_callback_and_apply_filters( $filter, $default_access ) {\n\t\tif ( ! $this->rest_box && $this->request->get_param( 'cmb_id' ) ) {\n\t\t\t$this->rest_box = CMB2_REST::get_rest_box( $this->request->get_param( 'cmb_id' ) );\n\t\t}\n\n\t\t$default_access = $this->maybe_hook_registered_callback( $filter, $default_access );\n\n\t\t\/**\n\t\t * Apply the permissions check filter.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool   $default_access Whether this CMB2 endpoint can be accessed.\n\t\t * @param object $controller     This CMB2_REST_Controller object.\n\t\t *\/\n\t\t$default_access = apply_filters( $filter, $default_access, $this );\n\n\t\t$this->maybe_unhook_registered_callback( $filter );\n\n\t\treturn $default_access;\n\t}\n\n\t\/**\n\t * Checks if the CMB2 box has any registered callback parameters for the given filter.\n\t *\n\t * The registered handlers will have a property name which matches the filter, except:\n\t * - The 'cmb2_api' prefix will be removed\n\t * - A '_cb' suffix will be added (to stay inline with other '*_cb' parameters).\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $filter      The filter name.\n\t * @param  bool   $default_val The default filter value.\n\t *\n\t * @return bool                The possibly-modified filter value (if the '*_cb' param is non-callable).\n\t *\/\n\tpublic function maybe_hook_registered_callback( $filter, $default_val ) {\n\t\tif ( ! $this->rest_box || is_wp_error( $this->rest_box ) ) {\n\t\t\treturn $default_val;\n\t\t}\n\n\t\t\/\/ Hook box specific filter callbacks.\n\t\t$val = $this->rest_box->cmb->maybe_hook_parameter( $filter, $default_val );\n\t\tif ( null !== $val ) {\n\t\t\t$default_val = $val;\n\t\t}\n\n\t\treturn $default_val;\n\t}\n\n\t\/**\n\t * Unhooks any CMB2 box registered callback parameters for the given filter.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $filter The filter name.\n\t *\n\t * @return void\n\t *\/\n\tpublic function maybe_unhook_registered_callback( $filter ) {\n\t\tif ( ! $this->rest_box || is_wp_error( $this->rest_box ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Unhook box specific filter callbacks.\n\t\t$this->rest_box->cmb->maybe_hook_parameter( $filter, null, 'remove_filter' );\n\t}\n\n\t\/**\n\t * Prepare a CMB2 object for serialization\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  mixed $data\n\t * @return array $data\n\t *\/\n\tpublic function prepare_item( $data ) {\n\t\treturn $this->prepare_item_for_response( $data, $this->request );\n\t}\n\n\t\/**\n\t * Output buffers a callback and returns the results.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed $cb Callable function\/method.\n\t * @return mixed     Results of output buffer after calling function\/method.\n\t *\/\n\tpublic function get_cb_results( $cb ) {\n\t\t$args = func_get_args();\n\t\tarray_shift( $args ); \/\/ ignore $cb\n\t\tob_start();\n\t\tcall_user_func_array( $cb, $args );\n\n\t\treturn ob_get_clean();\n\t}\n\n\t\/**\n\t * Prepare the CMB2 item for the REST response.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  mixed           $item     WordPress representation of the item.\n\t * @param  WP_REST_Request $request  Request object.\n\t * @return WP_REST_Response $response\n\t *\/\n\tpublic function prepare_item_for_response( $data, $request = null ) {\n\t\t$data = $this->filter_response_by_context( $data, $this->request['context'] );\n\n\t\t\/**\n\t\t * Filter the prepared CMB2 item response.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param mixed  $data           Prepared data\n\t\t * @param object $request        The WP_REST_Request object\n\t\t * @param object $cmb2_endpoints This endpoints object\n\t\t *\/\n\t\treturn apply_filters( 'cmb2_rest_prepare', rest_ensure_response( $data ), $this->request, $this );\n\t}\n\n\t\/**\n\t * Initiates the request property and the rest_box property if box is readable.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  WP_REST_Request $request      Request object.\n\t * @param  string          $request_type A description of the type of request being made.\n\t *\n\t * @return void\n\t *\/\n\tprotected function initiate_rest_read_box( $request, $request_type ) {\n\t\t$this->initiate_rest_box( $request, $request_type );\n\n\t\tif ( ! is_wp_error( $this->rest_box ) && ! $this->rest_box->rest_read ) {\n\t\t\t$this->rest_box = new WP_Error( 'cmb2_rest_no_read_error', __( 'This box does not have read permissions.', 'cmb2' ), array(\n\t\t\t\t'status' => 403,\n\t\t\t) );\n\t\t}\n\t}\n\n\t\/**\n\t * Initiates the request property and the rest_box property if box is writeable.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  WP_REST_Request $request      Request object.\n\t * @param  string          $request_type A description of the type of request being made.\n\t *\n\t * @return void\n\t *\/\n\tprotected function initiate_rest_edit_box( $request, $request_type ) {\n\t\t$this->initiate_rest_box( $request, $request_type );\n\n\t\tif ( ! is_wp_error( $this->rest_box ) && ! $this->rest_box->rest_edit ) {\n\t\t\t$this->rest_box = new WP_Error( 'cmb2_rest_no_write_error', __( 'This box does not have write permissions.', 'cmb2' ), array(\n\t\t\t\t'status' => 403,\n\t\t\t) );\n\t\t}\n\t}\n\n\t\/**\n\t * Initiates the request property and the rest_box property.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  WP_REST_Request $request      Request object.\n\t * @param  string          $request_type A description of the type of request being made.\n\t *\n\t * @return void\n\t *\/\n\tprotected function initiate_rest_box( $request, $request_type ) {\n\t\t$this->initiate_request( $request, $request_type );\n\n\t\t$this->rest_box = CMB2_REST::get_rest_box( $this->request->get_param( 'cmb_id' ) );\n\n\t\tif ( ! $this->rest_box ) {\n\n\t\t\t$this->rest_box = new WP_Error( 'cmb2_rest_box_not_found_error', __( 'No box found by that id. A box needs to be registered with the \"show_in_rest\" parameter configured.', 'cmb2' ), array(\n\t\t\t\t'status' => 403,\n\t\t\t) );\n\n\t\t} else {\n\n\t\t\tif ( isset( $this->request['object_id'] ) ) {\n\t\t\t\t$this->rest_box->cmb->object_id( sanitize_text_field( $this->request['object_id'] ) );\n\t\t\t}\n\n\t\t\tif ( isset( $this->request['object_type'] ) ) {\n\t\t\t\t$this->rest_box->cmb->object_type( sanitize_text_field( $this->request['object_type'] ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Initiates the request property and sets up the initial static properties.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  WP_REST_Request $request      Request object.\n\t * @param  string          $request_type A description of the type of request being made.\n\t *\n\t * @return void\n\t *\/\n\tpublic function initiate_request( $request, $request_type ) {\n\t\t$this->request = $request;\n\n\t\tif ( ! isset( $this->request['context'] ) || empty( $this->request['context'] ) ) {\n\t\t\t$this->request['context'] = 'view';\n\t\t}\n\n\t\tif ( ! self::$request_type ) {\n\t\t\tself::$request_type = $request_type;\n\t\t}\n\n\t\tif ( ! self::$route ) {\n\t\t\tself::$route = $this->request->get_route();\n\t\t}\n\t}\n\n\t\/**\n\t * Useful when getting `_embed`-ed items\n\t *\n\t * @since  2.2.3\n\t *\n\t * @return string  Initial requested type.\n\t *\/\n\tpublic static function get_intial_request_type() {\n\t\treturn self::$request_type;\n\t}\n\n\t\/**\n\t * Useful when getting `_embed`-ed items\n\t *\n\t * @since  2.2.3\n\t *\n\t * @return string  Initial requested route.\n\t *\/\n\tpublic static function get_intial_route() {\n\t\treturn self::$route;\n\t}\n\n\t\/**\n\t * Get CMB2 fields schema, conforming to JSON Schema\n\t *\n\t * @since 2.2.3\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_item_schema() {\n\t\t$schema = array(\n\t\t\t'$schema'              => 'http:\/\/json-schema.org\/draft-04\/schema#',\n\t\t\t'title'                => 'CMB2',\n\t\t\t'type'                 => 'object',\n\t\t\t'properties'           => array(\n\t\t\t\t'description' => array(\n\t\t\t\t\t'description' => __( 'A human-readable description of the object.', 'cmb2' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t'context'     => array(\n\t\t\t\t\t\t'view',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t'name' => array(\n\t\t\t\t\t'description' => __( 'The id for the object.', 'cmb2' ),\n\t\t\t\t\t'type'        => 'integer',\n\t\t\t\t\t'context'     => array(\n\t\t\t\t\t\t'view',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\t'name' => array(\n\t\t\t\t\t'description' => __( 'The title for the object.', 'cmb2' ),\n\t\t\t\t\t'type'        => 'string',\n\t\t\t\t\t'context'     => array(\n\t\t\t\t\t\t'view',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\treturn $this->add_additional_fields_schema( $schema );\n\t}\n\n\t\/**\n\t * Return an array of contextual links for endpoint\/object\n\t *\n\t * @link http:\/\/v2.wp-api.org\/extending\/linking\/\n\t * @link http:\/\/www.iana.org\/assignments\/link-relations\/link-relations.xhtml\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  mixed $object Object to build links from.\n\t *\n\t * @return array          Array of links\n\t *\/\n\tabstract protected function prepare_links( $object );\n\n\t\/**\n\t * Get whitelisted query strings from URL for appending to link URLS.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @return string URL query stringl\n\t *\/\n\tpublic function get_query_string() {\n\t\t$defaults = array(\n\t\t\t'object_id'   => 0,\n\t\t\t'object_type' => '',\n\t\t\t'_rendered'   => '',\n\t\t\t\/\/ '_embed'      => '',\n\t\t);\n\n\t\t$query_string = '';\n\n\t\tforeach ( $defaults as $key => $value ) {\n\t\t\tif ( isset( $this->request[ $key ] ) ) {\n\t\t\t\t$query_string .= $query_string ? '&' : '?';\n\t\t\t\t$query_string .= $key;\n\t\t\t\tif ( $value = sanitize_text_field( $this->request[ $key ] ) ) {\n\t\t\t\t\t$query_string .= '=' . $value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $query_string;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/rest-api\/CMB2_REST_Controller_Fields.php","ext":"php","size":16326,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 objects\/fields endpoint for WordPres REST API.\n * Allows access to fields registered to a specific box.\n *\n * @todo  Add better documentation.\n * @todo  Research proper schema.\n *\n * @since 2.2.3\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_REST_Controller_Fields extends CMB2_REST_Controller_Boxes {\n\n\t\/**\n\t * Register the routes for the objects of the controller.\n\t *\n\t * @since 2.2.3\n\t *\/\n\tpublic function register_routes() {\n\t\t$args = array(\n\t\t\t'_embed' => array(\n\t\t\t\t'description' => __( 'Includes the box object which the fields are registered to in the response.', 'cmb2' ),\n\t\t\t),\n\t\t\t'_rendered' => array(\n\t\t\t\t'description' => __( 'When the \\'_rendered\\' argument is passed, the renderable field attributes will be returned fully rendered. By default, the names of the callback handers for the renderable attributes will be returned.', 'cmb2' ),\n\t\t\t),\n\t\t\t'object_id' => array(\n\t\t\t\t'description' => __( 'To view or modify the field\\'s value, the \\'object_id\\' and \\'object_type\\' arguments are required.', 'cmb2' ),\n\t\t\t),\n\t\t\t'object_type' => array(\n\t\t\t\t'description' => __( 'To view or modify the field\\'s value, the \\'object_id\\' and \\'object_type\\' arguments are required.', 'cmb2' ),\n\t\t\t),\n\t\t);\n\n\t\t\/\/ Returns specific box's fields.\n\t\tregister_rest_route( $this->namespace, '\/' . $this->rest_base . '\/(?P<cmb_id>[\\w-]+)\/fields\/', array(\n\t\t\tarray(\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'permission_callback' => array( $this, 'get_items_permissions_check' ),\n\t\t\t\t'callback'            => array( $this, 'get_items' ),\n\t\t\t\t'args'                => $args,\n\t\t\t),\n\t\t\t'schema' => array( $this, 'get_item_schema' ),\n\t\t) );\n\n\t\t$delete_args = $args;\n\t\t$delete_args['object_id']['required'] = true;\n\t\t$delete_args['object_type']['required'] = true;\n\n\t\t\/\/ Returns specific field data.\n\t\tregister_rest_route( $this->namespace, '\/' . $this->rest_base . '\/(?P<cmb_id>[\\w-]+)\/fields\/(?P<field_id>[\\w-]+)', array(\n\t\t\tarray(\n\t\t\t\t'methods'             => WP_REST_Server::READABLE,\n\t\t\t\t'permission_callback' => array( $this, 'get_item_permissions_check' ),\n\t\t\t\t'callback'            => array( $this, 'get_item' ),\n\t\t\t\t'args'                => $args,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'methods'             => WP_REST_Server::EDITABLE,\n\t\t\t\t'permission_callback' => array( $this, 'update_item_permissions_check' ),\n\t\t\t\t'callback'            => array( $this, 'update_item' ),\n\t\t\t\t'args'                => $this->get_endpoint_args_for_item_schema( WP_REST_Server::EDITABLE ),\n\t\t\t\t'args'                => $args,\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'methods'             => WP_REST_Server::DELETABLE,\n\t\t\t\t'permission_callback' => array( $this, 'delete_item_permissions_check' ),\n\t\t\t\t'callback'            => array( $this, 'delete_item' ),\n\t\t\t\t'args'                => $delete_args,\n\t\t\t),\n\t\t\t'schema' => array( $this, 'get_item_schema' ),\n\t\t) );\n\t}\n\n\t\/**\n\t * Check if a given request has access to get fields.\n\t * By default, no special permissions needed, but filtering return value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_items_permissions_check( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'fields_read' );\n\t\t$can_access = true;\n\n\t\t\/**\n\t\t * By default, no special permissions needed.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool   $can_access Whether this CMB2 endpoint can be accessed.\n\t\t * @param object $controller This CMB2_REST_Controller object.\n\t\t *\/\n\t\treturn $this->maybe_hook_callback_and_apply_filters( 'cmb2_api_get_fields_permissions_check', $can_access );\n\t}\n\n\t\/**\n\t * Get all public CMB2 box fields.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function get_items( $request ) {\n\t\tif ( ! $this->rest_box ) {\n\t\t\t$this->initiate_rest_read_box( $request, 'fields_read' );\n\t\t}\n\n\t\tif ( is_wp_error( $this->rest_box ) ) {\n\t\t\treturn $this->rest_box;\n\t\t}\n\n\t\t$fields = array();\n\t\tforeach ( $this->rest_box->cmb->prop( 'fields', array() ) as $field ) {\n\n\t\t\t\/\/ Make sure this field can be read.\n\t\t\t$this->field = $this->rest_box->field_can_read( $field['id'], true );\n\n\t\t\t\/\/ And make sure current user can view this box.\n\t\t\tif ( $this->field && $this->get_item_permissions_check_filter() ) {\n\t\t\t\t$fields[ $field['id'] ] = $this->server->response_to_data(\n\t\t\t\t\t$this->prepare_field_response(),\n\t\t\t\t\tisset( $this->request['_embed'] )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn $this->prepare_item( $fields );\n\t}\n\n\t\/**\n\t * Check if a given request has access to a field.\n\t * By default, no special permissions needed, but filtering return value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full details about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_item_permissions_check( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'field_read' );\n\t\tif ( ! is_wp_error( $this->rest_box ) ) {\n\t\t\t$this->field = $this->rest_box->field_can_read( $this->request->get_param( 'field_id' ), true );\n\t\t}\n\n\t\treturn $this->get_item_permissions_check_filter();\n\t}\n\n\t\/**\n\t * Check by filter if a given request has access to a field.\n\t * By default, no special permissions needed, but filtering return value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  bool $can_access Whether the current request has access to view the field by default.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_item_permissions_check_filter( $can_access = true ) {\n\t\t\/**\n\t\t * By default, no special permissions needed.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool   $can_access Whether this CMB2 endpoint can be accessed.\n\t\t * @param object $controller This CMB2_REST_Controller object.\n\t\t *\/\n\t\treturn $this->maybe_hook_callback_and_apply_filters( 'cmb2_api_get_field_permissions_check', $can_access );\n\t}\n\n\t\/**\n\t * Get one CMB2 field from the collection.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function get_item( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'field_read' );\n\n\t\tif ( is_wp_error( $this->rest_box ) ) {\n\t\t\treturn $this->rest_box;\n\t\t}\n\n\t\treturn $this->prepare_read_field( $this->request->get_param( 'field_id' ) );\n\t}\n\n\t\/**\n\t * Check if a given request has access to update a field value.\n\t * By default, requires 'edit_others_posts' capability, but filtering return value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full details about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function update_item_permissions_check( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'field_value_update' );\n\t\tif ( ! is_wp_error( $this->rest_box ) ) {\n\t\t\t$this->field = $this->rest_box->field_can_edit( $this->request->get_param( 'field_id' ), true );\n\t\t}\n\n\t\t$can_update = current_user_can( 'edit_others_posts' );\n\n\t\t\/**\n\t\t * By default, 'edit_others_posts' is required capability.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool   $can_update Whether this CMB2 endpoint can be accessed.\n\t\t * @param object $controller This CMB2_REST_Controller object.\n\t\t *\/\n\t\treturn $this->maybe_hook_callback_and_apply_filters( 'cmb2_api_update_field_value_permissions_check', $can_update );\n\t}\n\n\t\/**\n\t * Update CMB2 field value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function update_item( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'field_value_update' );\n\n\t\tif ( ! $this->request['value'] ) {\n\t\t\treturn new WP_Error( 'cmb2_rest_update_field_error', __( 'CMB2 Field value cannot be updated without the value parameter specified.', 'cmb2' ), array(\n\t\t\t\t'status' => 400,\n\t\t\t) );\n\t\t}\n\n\t\treturn $this->modify_field_value( 'updated' );\n\t}\n\n\t\/**\n\t * Check if a given request has access to delete a field value.\n\t * By default, requires 'delete_others_posts' capability, but filtering return value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full details about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function delete_item_permissions_check( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'field_value_delete' );\n\t\tif ( ! is_wp_error( $this->rest_box ) ) {\n\t\t\t$this->field = $this->rest_box->field_can_edit( $this->request->get_param( 'field_id' ), true );\n\t\t}\n\n\t\t$can_delete = current_user_can( 'delete_others_posts' );\n\n\t\t\/**\n\t\t * By default, 'delete_others_posts' is required capability.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool   $can_delete Whether this CMB2 endpoint can be accessed.\n\t\t * @param object $controller This CMB2_REST_Controller object.\n\t\t *\/\n\t\treturn $this->maybe_hook_callback_and_apply_filters( 'cmb2_api_delete_field_value_permissions_check', $can_delete );\n\t}\n\n\t\/**\n\t * Delete CMB2 field value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function delete_item( $request ) {\n\t\t$this->initiate_rest_read_box( $request, 'field_value_delete' );\n\n\t\treturn $this->modify_field_value( 'deleted' );\n\t}\n\n\t\/**\n\t * Modify CMB2 field value.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  string $activity The modification activity (updated or deleted).\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function modify_field_value( $activity ) {\n\n\t\tif ( ! $this->request['object_id'] || ! $this->request['object_type'] ) {\n\t\t\treturn new WP_Error( 'cmb2_rest_modify_field_value_error', __( 'CMB2 Field value cannot be modified without the object_id and object_type parameters specified.', 'cmb2' ), array(\n\t\t\t\t'status' => 400,\n\t\t\t) );\n\t\t}\n\n\t\tif ( is_wp_error( $this->rest_box ) ) {\n\t\t\treturn $this->rest_box;\n\t\t}\n\n\t\t$this->field = $this->rest_box->field_can_edit(\n\t\t\t$this->field ? $this->field : $this->request->get_param( 'field_id' ),\n\t\t\ttrue\n\t\t);\n\n\t\tif ( ! $this->field ) {\n\t\t\treturn new WP_Error( 'cmb2_rest_no_field_by_id_error', __( 'No field found by that id.', 'cmb2' ), array(\n\t\t\t\t'status' => 403,\n\t\t\t) );\n\t\t}\n\n\t\t$this->field->args[ \"value_{$activity}\" ] = (bool) 'deleted' === $activity\n\t\t\t? $this->field->remove_data()\n\t\t\t: $this->field->save_field( $this->request['value'] );\n\n\t\t\/\/ If options page, save the $activity options\n\t\tif ( 'options-page' == $this->request['object_type'] ) {\n\t\t\t$this->field->args[ \"value_{$activity}\" ] = cmb2_options( $this->request['object_id'] )->set();\n\t\t}\n\n\t\treturn $this->prepare_read_field( $this->field );\n\t}\n\n\t\/**\n\t * Get a response object for a specific field ID.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  string\\CMB2_Field Field id or Field object.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function prepare_read_field( $field ) {\n\t\t$this->field = $this->rest_box->field_can_read( $field, true );\n\n\t\tif ( ! $this->field ) {\n\t\t\treturn new WP_Error( 'cmb2_rest_no_field_by_id_error', __( 'No field found by that id.', 'cmb2' ), array(\n\t\t\t\t'status' => 403,\n\t\t\t) );\n\t\t}\n\n\t\treturn $this->prepare_item( $this->prepare_field_response() );\n\t}\n\n\t\/**\n\t * Get a specific field response.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param  CMB2_Field Field object.\n\t * @return array      Response array.\n\t *\/\n\tpublic function prepare_field_response() {\n\t\t$field_data = $this->prepare_field_data( $this->field );\n\t\t$response = rest_ensure_response( $field_data );\n\n\t\t$response->add_links( $this->prepare_links( $this->field ) );\n\n\t\treturn $response;\n\t}\n\n\t\/**\n\t * Prepare the field data array for JSON.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  CMB2_Field $field field object.\n\t *\n\t * @return array             Array of field data.\n\t *\/\n\tprotected function prepare_field_data( CMB2_Field $field ) {\n\t\t$field_data = array();\n\t\t$params_to_ignore = array( 'show_in_rest', 'options' );\n\t\t$params_to_rename = array(\n\t\t\t'label_cb' => 'label',\n\t\t\t'options_cb' => 'options',\n\t\t);\n\n\t\t\/\/ Run this first so the js_dependencies arg is populated.\n\t\t$rendered = ( $cb = $field->maybe_callback( 'render_row_cb' ) )\n\t\t\t\/\/ Ok, callback is good, let's run it.\n\t\t\t? $this->get_cb_results( $cb, $field->args(), $field )\n\t\t\t: false;\n\n\t\t$field_args = $field->args();\n\n\t\tforeach ( $field_args as $key => $value ) {\n\t\t\tif ( in_array( $key, $params_to_ignore, true ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( 'options_cb' === $key ) {\n\t\t\t\t$value = $field->options();\n\t\t\t} elseif ( in_array( $key, CMB2_Field::$callable_fields, true ) ) {\n\n\t\t\t\tif ( isset( $this->request['_rendered'] ) ) {\n\t\t\t\t\t$value = $key === 'render_row_cb' ? $rendered : $field->get_param_callback_result( $key );\n\t\t\t\t} elseif ( is_array( $value ) ) {\n\t\t\t\t\t\/\/ We need to rewrite callbacks as string as they will cause\n\t\t\t\t\t\/\/ JSON recursion errors.\n\t\t\t\t\t$class = is_string( $value[0] ) ? $value[0] : get_class( $value[0] );\n\t\t\t\t\t$value = $class . '::' . $value[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$key = isset( $params_to_rename[ $key ] ) ? $params_to_rename[ $key ] : $key;\n\n\t\t\tif ( empty( $value ) || is_scalar( $value ) || is_array( $value ) ) {\n\t\t\t\t$field_data[ $key ] = $value;\n\t\t\t} else {\n\t\t\t\t$field_data[ $key ] = sprintf( __( 'Value Error for %s', 'cmb2' ), $key );\n\t\t\t}\n\t\t}\n\n\t\tif ( $field->args( 'has_supporting_data' ) ) {\n\t\t\t$field_data = $this->get_supporting_data( $field_data, $field );\n\t\t}\n\n\t\tif ( $this->request['object_id'] && $this->request['object_type'] ) {\n\t\t\t$field_data['value'] = $field->get_rest_value();\n\t\t}\n\n\t\treturn $field_data;\n\t}\n\n\t\/**\n\t * Gets field supporting data (field id and value).\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  CMB2_Field $field      Field object.\n\t * @param  array      $field_data Array of field data.\n\t *\n\t * @return array                  Array of field data.\n\t *\/\n\tpublic function get_supporting_data( $field_data, $field ) {\n\n\t\t\/\/ Reset placement of this property.\n\t\tunset( $field_data['has_supporting_data'] );\n\t\t$field_data['has_supporting_data'] = true;\n\n\t\t$field = $field->get_supporting_field();\n\t\t$field_data['supporting_data'] = array(\n\t\t\t'id' => $field->_id( '', false ),\n\t\t);\n\n\t\tif ( $this->request['object_id'] && $this->request['object_type'] ) {\n\t\t\t$field_data['supporting_data']['value'] = $field->get_rest_value();\n\t\t}\n\n\t\treturn $field_data;\n\t}\n\n\t\/**\n\t * Return an array of contextual links for field\/fields.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  CMB2_Field $field Field object to build links from.\n\t *\n\t * @return array             Array of links\n\t *\/\n\tprotected function prepare_links( $field ) {\n\t\t$boxbase      = $this->namespace_base . '\/' . $this->rest_box->cmb->cmb_id;\n\t\t$query_string = $this->get_query_string();\n\n\t\t$links = array(\n\t\t\t'self' => array(\n\t\t\t\t'href' => rest_url( trailingslashit( $boxbase ) . 'fields\/' . $field->_id( '', false ) . $query_string ),\n\t\t\t),\n\t\t\t'collection' => array(\n\t\t\t\t'href' => rest_url( trailingslashit( $boxbase ) . 'fields' . $query_string ),\n\t\t\t),\n\t\t\t'up' => array(\n\t\t\t\t'embeddable' => true,\n\t\t\t\t'href' => rest_url( $boxbase . $query_string ),\n\t\t\t),\n\t\t);\n\n\t\treturn $links;\n\t}\n\n\t\/**\n\t * Checks if the CMB2 box or field has any registered callback parameters for the given filter.\n\t *\n\t * The registered handlers will have a property name which matches the filter, except:\n\t * - The 'cmb2_api' prefix will be removed\n\t * - A '_cb' suffix will be added (to stay inline with other '*_cb' parameters).\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $filter      The filter name.\n\t * @param  bool   $default_val The default filter value.\n\t *\n\t * @return bool                The possibly-modified filter value (if the _cb param is a non-callable).\n\t *\/\n\tpublic function maybe_hook_registered_callback( $filter, $default_val ) {\n\t\t$default_val = parent::maybe_hook_registered_callback( $filter, $default_val );\n\n\t\tif ( $this->field ) {\n\n\t\t\t\/\/ Hook field specific filter callbacks.\n\t\t\t$val = $this->field->maybe_hook_parameter( $filter, $default_val );\n\t\t\tif ( null !== $val ) {\n\t\t\t\t$default_val = $val;\n\t\t\t}\n\t\t}\n\n\t\treturn $default_val;\n\t}\n\n\t\/**\n\t * Unhooks any CMB2 box or field registered callback parameters for the given filter.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $filter The filter name.\n\t *\n\t * @return void\n\t *\/\n\tpublic function maybe_unhook_registered_callback( $filter ) {\n\t\tparent::maybe_unhook_registered_callback( $filter );\n\n\t\tif ( $this->field ) {\n\t\t\t\/\/ Unhook field specific filter callbacks.\n\t\t\t$this->field->maybe_hook_parameter( $filter, null, 'remove_filter' );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/index.php","ext":"php","size":27,"mtime":1757324689,"type":"text","content":"<?php\n\/\/ Silence is golden\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Base.php","ext":"php","size":15452,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 Base - Base object functionality.\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\n * @property-read $args        The objects array of properties\/arguments.\n * @property-read $meta_box    The objects array of properties\/arguments.\n * @property-read $properties  The objects array of properties\/arguments.\n * @property-read $cmb_id      Current CMB2 instance ID\n * @property-read $object_id   Object ID\n * @property-read $object_type Type of object being handled. (e.g., post, user, comment, or term)\n *\/\nabstract class CMB2_Base {\n\n\t\/**\n\t * Current CMB2 instance ID\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tprotected $cmb_id = '';\n\n\t\/**\n\t * The object properties name.\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tprotected $properties_name = 'meta_box';\n\n\t\/**\n\t * Object ID\n\t *\n\t * @var   mixed\n\t * @since 2.2.3\n\t *\/\n\tprotected $object_id = 0;\n\n\t\/**\n\t * Type of object being handled. (e.g., post, user, comment, or term)\n\t *\n\t * @var   string\n\t * @since 2.2.3\n\t *\/\n\tprotected $object_type = '';\n\n\t\/**\n\t * Array of key => value data for saving. Likely $_POST data.\n\t *\n\t * @var   array\n\t * @since 2.2.3\n\t *\/\n\tpublic $data_to_save = array();\n\n\t\/**\n\t * Array of field param callback results\n\t *\n\t * @var   array\n\t * @since 2.0.0\n\t *\/\n\tprotected $callback_results = array();\n\n\t\/**\n\t * The deprecated_param method deprecated param message signature.\n\t *\/\n\tconst DEPRECATED_PARAM = 1;\n\n\t\/**\n\t * The deprecated_param method deprecated callback param message signature.\n\t *\/\n\tconst DEPRECATED_CB_PARAM = 2;\n\n\t\/**\n\t * Get started\n\t *\n\t * @since 2.2.3\n\t * @param array $args Object properties array.\n\t *\/\n\tpublic function __construct( $args = array() ) {\n\t\tif ( ! empty( $args ) ) {\n\t\t\tforeach ( array(\n\t\t\t\t'cmb_id',\n\t\t\t\t'properties_name',\n\t\t\t\t'object_id',\n\t\t\t\t'object_type',\n\t\t\t\t'data_to_save',\n\t\t\t) as $object_prop ) {\n\t\t\t\tif ( isset( $args[ $object_prop ] ) ) {\n\t\t\t\t\t$this->{$object_prop} = $args[ $object_prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Returns the object ID\n\t *\n\t * @since  2.2.3\n\t * @param  integer $object_id Object ID.\n\t * @return integer Object ID\n\t *\/\n\tpublic function object_id( $object_id = 0 ) {\n\t\tif ( $object_id ) {\n\t\t\t$this->object_id = $object_id;\n\t\t}\n\n\t\treturn $this->object_id;\n\t}\n\n\t\/**\n\t * Returns the object type\n\t *\n\t * @since  2.2.3\n\t * @param  string $object_type Object Type.\n\t * @return string Object type\n\t *\/\n\tpublic function object_type( $object_type = '' ) {\n\t\tif ( $object_type ) {\n\t\t\t$this->object_type = $object_type;\n\t\t}\n\n\t\treturn $this->object_type;\n\t}\n\n\t\/**\n\t * Get the object type for the current page, based on the $pagenow global.\n\t *\n\t * @since  2.2.2\n\t * @return string  Page object type name.\n\t *\/\n\tpublic function current_object_type() {\n\t\tglobal $pagenow;\n\t\t$type = 'post';\n\n\t\tif ( in_array( $pagenow, array( 'user-edit.php', 'profile.php', 'user-new.php' ), true ) ) {\n\t\t\t$type = 'user';\n\t\t}\n\n\t\tif ( in_array( $pagenow, array( 'edit-comments.php', 'comment.php' ), true ) ) {\n\t\t\t$type = 'comment';\n\t\t}\n\n\t\tif ( in_array( $pagenow, array( 'edit-tags.php', 'term.php' ), true ) ) {\n\t\t\t$type = 'term';\n\t\t}\n\n\t\treturn $type;\n\t}\n\n\t\/**\n\t * Set object property.\n\t *\n\t * @since  2.2.2\n\t * @param  string $property Metabox config property to retrieve.\n\t * @param  mixed  $value    Value to set if no value found.\n\t * @return mixed            Metabox config property value or false.\n\t *\/\n\tpublic function set_prop( $property, $value ) {\n\t\t$this->{$this->properties_name}[ $property ] = $value;\n\n\t\treturn $this->prop( $property );\n\t}\n\n\t\/**\n\t * Get object property and optionally set a fallback\n\t *\n\t * @since  2.0.0\n\t * @param  string $property Metabox config property to retrieve.\n\t * @param  mixed  $fallback Fallback value to set if no value found.\n\t * @return mixed            Metabox config property value or false\n\t *\/\n\tpublic function prop( $property, $fallback = null ) {\n\t\tif ( array_key_exists( $property, $this->{$this->properties_name} ) ) {\n\t\t\treturn $this->{$this->properties_name}[ $property ];\n\t\t} elseif ( $fallback ) {\n\t\t\treturn $this->{$this->properties_name}[ $property ] = $fallback;\n\t\t}\n\t}\n\n\t\/**\n\t * Get default field arguments specific to this CMB2 object.\n\t *\n\t * @since  2.2.0\n\t * @param  array      $field_args  Metabox field config array.\n\t * @param  CMB2_Field $field_group (optional) CMB2_Field object (group parent).\n\t * @return array                   Array of field arguments.\n\t *\/\n\tprotected function get_default_args( $field_args, $field_group = null ) {\n\t\tif ( $field_group ) {\n\t\t\t$args = array(\n\t\t\t\t'field_args'  => $field_args,\n\t\t\t\t'group_field' => $field_group,\n\t\t\t);\n\t\t} else {\n\t\t\t$args = array(\n\t\t\t\t'field_args'  => $field_args,\n\t\t\t\t'object_type' => $this->object_type(),\n\t\t\t\t'object_id'   => $this->object_id(),\n\t\t\t\t'cmb_id'      => $this->cmb_id,\n\t\t\t);\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Get a new field object specific to this CMB2 object.\n\t *\n\t * @since  2.2.0\n\t * @param  array      $field_args  Metabox field config array.\n\t * @param  CMB2_Field $field_group (optional) CMB2_Field object (group parent).\n\t * @return CMB2_Field CMB2_Field object\n\t *\/\n\tprotected function get_new_field( $field_args, $field_group = null ) {\n\t\treturn new CMB2_Field( $this->get_default_args( $field_args, $field_group ) );\n\t}\n\n\t\/**\n\t * Determine whether this cmb object should show, based on the 'show_on_cb' callback.\n\t *\n\t * @since 2.0.9\n\t *\n\t * @return bool Whether this cmb should be shown.\n\t *\/\n\tpublic function should_show() {\n\t\t\/\/ Default to showing this cmb\n\t\t$show = true;\n\n\t\t\/\/ Use the callback to determine showing the cmb, if it exists.\n\t\tif ( is_callable( $this->prop( 'show_on_cb' ) ) ) {\n\t\t\t$show = (bool) call_user_func( $this->prop( 'show_on_cb' ), $this );\n\t\t}\n\n\t\treturn $show;\n\t}\n\n\t\/**\n\t * Displays the results of the param callbacks.\n\t *\n\t * @since 2.0.0\n\t * @param string $param Field parameter.\n\t *\/\n\tpublic function peform_param_callback( $param ) {\n\t\techo $this->get_param_callback_result( $param );\n\t}\n\n\t\/**\n\t * Store results of the param callbacks for continual access\n\t *\n\t * @since  2.0.0\n\t * @param  string $param Field parameter.\n\t * @return mixed         Results of param\/param callback\n\t *\/\n\tpublic function get_param_callback_result( $param ) {\n\n\t\t\/\/ If we've already retrieved this param's value.\n\t\tif ( array_key_exists( $param, $this->callback_results ) ) {\n\n\t\t\t\/\/ Send it back.\n\t\t\treturn $this->callback_results[ $param ];\n\t\t}\n\n\t\t\/\/ Check if parameter has registered a callback.\n\t\tif ( $cb = $this->maybe_callback( $param ) ) {\n\n\t\t\t\/\/ Ok, callback is good, let's run it and store the result.\n\t\t\tob_start();\n\t\t\t$returned = $this->do_callback( $cb );\n\n\t\t\t\/\/ Grab the result from the output buffer and store it.\n\t\t\t$echoed = ob_get_clean();\n\n\t\t\t\/\/ This checks if the user returned or echoed their callback.\n\t\t\t\/\/ Defaults to using the echoed value.\n\t\t\t$this->callback_results[ $param ] = $echoed ? $echoed : $returned;\n\n\t\t} else {\n\n\t\t\t\/\/ Otherwise just get whatever is there.\n\t\t\t$this->callback_results[ $param ] = isset( $this->{$this->properties_name}[ $param ] ) ? $this->{$this->properties_name}[ $param ] : false;\n\t\t}\n\n\t\treturn $this->callback_results[ $param ];\n\t}\n\n\t\/**\n\t * Unset the cached results of the param callback.\n\t *\n\t * @since  2.2.6\n\t * @param  string $param Field parameter.\n\t * @return CMB2_Base\n\t *\/\n\tpublic function unset_param_callback_cache( $param ) {\n\t\tif ( isset( $this->callback_results[ $param ] ) ) {\n\t\t\tunset( $this->callback_results[ $param ] );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Handles the parameter callbacks, and passes this object as parameter.\n\t *\n\t * @since  2.2.3\n\t * @param  callable $cb                The callback method\/function\/closure.\n\t * @param  mixed    $additional_params Any additoinal parameters which should be passed to the callback.\n\t * @return mixed                       Return of the callback function.\n\t *\/\n\tprotected function do_callback( $cb, $additional_params = null ) {\n\t\treturn call_user_func( $cb, $this->{$this->properties_name}, $this, $additional_params );\n\t}\n\n\t\/**\n\t * Checks if field has a callback value\n\t *\n\t * @since  1.0.1\n\t * @param  string $cb Callback string.\n\t * @return mixed      NULL, false for NO validation, or $cb string if it exists.\n\t *\/\n\tpublic function maybe_callback( $cb ) {\n\t\t$args = $this->{$this->properties_name};\n\t\tif ( ! isset( $args[ $cb ] ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\t\/\/ Check if requesting explicitly false.\n\t\t$cb = false !== $args[ $cb ] && 'false' !== $args[ $cb ] ? $args[ $cb ] : false;\n\n\t\t\/\/ If requesting NO validation, return false.\n\t\tif ( ! $cb ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( is_callable( $cb ) ) {\n\t\t\treturn $cb;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Checks if this object has parameter corresponding to the given filter\n\t * which is callable. If so, it registers the callback, and if not,\n\t * converts the maybe-modified $val to a boolean for return.\n\t *\n\t * The registered handlers will have a parameter name which matches the filter, except:\n\t * - The 'cmb2_api' prefix will be removed\n\t * - A '_cb' suffix will be added (to stay inline with other '*_cb' parameters).\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  string $hook_name     The hook name.\n\t * @param  bool   $val           The default value.\n\t * @param  string $hook_function The hook function. Default: 'add_filter'.\n\t *\n\t * @return null|bool             Null if hook is registered, or bool for value.\n\t *\/\n\tpublic function maybe_hook_parameter( $hook_name, $val = null, $hook_function = 'add_filter' ) {\n\n\t\t\/\/ Remove filter prefix, add param suffix.\n\t\t$parameter = substr( $hook_name, strlen( 'cmb2_api_' ) ) . '_cb';\n\n\t\treturn self::maybe_hook(\n\t\t\t$this->prop( $parameter, $val ),\n\t\t\t$hook_name,\n\t\t\t$hook_function\n\t\t);\n\t}\n\n\t\/**\n\t * Checks if given value is callable, and registers the callback.\n\t * If is non-callable, converts the $val to a boolean for return.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  bool   $val           The default value.\n\t * @param  string $hook_name     The hook name.\n\t * @param  string $hook_function The hook function.\n\t *\n\t * @return null|bool         Null if hook is registered, or bool for value.\n\t *\/\n\tpublic static function maybe_hook( $val, $hook_name, $hook_function ) {\n\t\tif ( is_callable( $val ) ) {\n\t\t\tcall_user_func( $hook_function, $hook_name, $val, 10, 2 );\n\t\t\treturn null;\n\t\t}\n\n\t\t\/\/ Cast to bool.\n\t\treturn ! ! $val;\n\t}\n\n\t\/**\n\t * Mark a param as deprecated and inform when it has been used.\n\t *\n\t * There is a default WordPress hook deprecated_argument_run that will be called\n\t * that can be used to get the backtrace up to what file and function used the\n\t * deprecated argument.\n\t *\n\t * The current behavior is to trigger a user error if WP_DEBUG is true.\n\t *\n\t * @since 2.2.3\n\t *\n\t * @param string $function The function that was called.\n\t * @param string $version  The version of CMB2 that deprecated the argument used.\n\t * @param string $message  Optional. A message regarding the change, or numeric\n\t *                         key to generate message from additional arguments.\n\t *                         Default null.\n\t *\/\n\tprotected function deprecated_param( $function, $version, $message = null ) {\n\n\t\t$args = func_get_args();\n\n\t\tif ( is_numeric( $message ) ) {\n\n\t\t\tswitch ( $message ) {\n\n\t\t\t\tcase self::DEPRECATED_PARAM:\n\t\t\t\t\t$message = sprintf( __( 'The \"%1$s\" field parameter has been deprecated in favor of the \"%2$s\" parameter.', 'cmb2' ), $args[3], $args[4] );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase self::DEPRECATED_CB_PARAM:\n\t\t\t\t\t$message = sprintf( __( 'Using the \"%1$s\" field parameter as a callback has been deprecated in favor of the \"%2$s\" parameter.', 'cmb2' ), $args[3], $args[4] );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t$message = null;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t\/**\n\t\t * Fires when a deprecated argument is called. This is a WP core action.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param string $function The function that was called.\n\t\t * @param string $message  A message regarding the change.\n\t\t * @param string $version  The version of CMB2 that deprecated the argument used.\n\t\t *\/\n\t\tdo_action( 'deprecated_argument_run', $function, $message, $version );\n\n\t\t\/**\n\t\t * Filters whether to trigger an error for deprecated arguments. This is a WP core filter.\n\t\t *\n\t\t * @since 2.2.3\n\t\t *\n\t\t * @param bool $trigger Whether to trigger the error for deprecated arguments. Default true.\n\t\t *\/\n\t\tif ( defined( 'WP_DEBUG' ) && WP_DEBUG && apply_filters( 'deprecated_argument_trigger_error', true ) ) {\n\t\t\tif ( function_exists( '__' ) ) {\n\t\t\t\tif ( ! is_null( $message ) ) {\n\t\t\t\t\ttrigger_error( sprintf( __( '%1$s was called with a parameter that is <strong>deprecated<\/strong> since version %2$s! %3$s', 'cmb2' ), $function, $version, $message ) );\n\t\t\t\t} else {\n\t\t\t\t\ttrigger_error( sprintf( __( '%1$s was called with a parameter that is <strong>deprecated<\/strong> since version %2$s with no alternative available.', 'cmb2' ), $function, $version ) );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( ! is_null( $message ) ) {\n\t\t\t\t\ttrigger_error( sprintf( '%1$s was called with a parameter that is <strong>deprecated<\/strong> since version %2$s! %3$s', $function, $version, $message ) );\n\t\t\t\t} else {\n\t\t\t\t\ttrigger_error( sprintf( '%1$s was called with a parameter that is <strong>deprecated<\/strong> since version %2$s with no alternative available.', $function, $version ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t\/**\n\t * Magic getter for our object.\n\t *\n\t * @param string $field Requested property.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t *\/\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'args':\n\t\t\tcase 'meta_box':\n\t\t\t\tif ( $field === $this->properties_name ) {\n\t\t\t\t\treturn $this->{$this->properties_name};\n\t\t\t\t}\n\t\t\tcase 'properties':\n\t\t\t\treturn $this->{$this->properties_name};\n\t\t\tcase 'cmb_id':\n\t\t\tcase 'object_id':\n\t\t\tcase 'object_type':\n\t\t\t\treturn $this->{$field};\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s property: %2$s', 'cmb2' ), __CLASS__, $field ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Allows overloading the object with methods... Whooaaa oooh it's magic, y'knoooow.\n\t *\n\t * @since 1.0.0\n\t * @throws Exception Invalid method exception.\n\t *\n\t * @param string $method Non-existent method.\n\t * @param array  $args   All arguments passed to the method.\n\t * @return mixed\n\t *\/\n\tpublic function __call( $method, $args ) {\n\t\t$object_class = strtolower( get_class( $this ) );\n\n\t\tif ( ! has_filter( \"{$object_class}_inherit_{$method}\" ) ) {\n\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s method: %2$s', 'cmb2' ), get_class( $this ), $method ) );\n\t\t}\n\n\t\tarray_unshift( $args, $this );\n\n\t\t\/**\n\t\t * Allows overloading the object (CMB2 or CMB2_Field) with additional capabilities\n\t\t * by registering hook callbacks.\n\t\t *\n\t\t * The first dynamic portion of the hook name, $object_class, refers to the object class,\n\t\t * either cmb2 or cmb2_field.\n\t\t *\n\t\t * The second dynamic portion of the hook name, $method, is the non-existent method being\n\t\t * called on the object. To avoid possible future methods encroaching on your hooks,\n\t\t * use a unique method (aka, $cmb->prefix_my_method()).\n\t\t *\n\t\t * When registering your callback, you will need to ensure that you register the correct\n\t\t * number of `$accepted_args`, accounting for this object instance being the first argument.\n\t\t *\n\t\t * @param array $args The arguments to be passed to the hook.\n\t\t *                    The first argument will always be this object instance.\n\t\t *\/\n\t\treturn apply_filters_ref_array( \"{$object_class}_inherit_{$method}\", $args );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/shim\/WP_REST_Controller.php","ext":"php","size":15838,"mtime":1757324689,"type":"text","content":"<?php\n\n\nabstract class WP_REST_Controller {\n\n\t\/**\n\t * The namespace of this controller's route.\n\t *\n\t * @var string\n\t *\/\n\tprotected $namespace;\n\n\t\/**\n\t * The base of this controller's route.\n\t *\n\t * @var string\n\t *\/\n\tprotected $rest_base;\n\n\t\/**\n\t * Register the routes for the objects of the controller.\n\t *\/\n\tpublic function register_routes() {\n\t\t\/* translators: %s: register_routes() *\/\n\t\t_doing_it_wrong( 'WP_REST_Controller::register_routes', sprintf( __( \"Method '%s' must be overridden.\" ), __METHOD__ ), '4.7' );\n\t}\n\n\t\/**\n\t * Check if a given request has access to get items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Get a collection of items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function get_items( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Check if a given request has access to get a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function get_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Get one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function get_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Check if a given request has access to create items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function create_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Create one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function create_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Check if a given request has access to update a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function update_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Update one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function update_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Check if a given request has access to delete a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t *\/\n\tpublic function delete_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Delete one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t *\/\n\tpublic function delete_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Prepare the item for create or update operation.\n\t *\n\t * @param WP_REST_Request $request Request object.\n\t * @return WP_Error|object $prepared_item\n\t *\/\n\tprotected function prepare_item_for_database( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Prepare the item for the REST response.\n\t *\n\t * @param mixed           $item WordPress representation of the item.\n\t * @param WP_REST_Request $request Request object.\n\t * @return WP_REST_Response $response\n\t *\/\n\tpublic function prepare_item_for_response( $item, $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t\/**\n\t * Prepare a response for inserting into a collection.\n\t *\n\t * @param WP_REST_Response $response Response object.\n\t * @return array Response data, ready for insertion into collection data.\n\t *\/\n\tpublic function prepare_response_for_collection( $response ) {\n\t\tif ( ! ( $response instanceof WP_REST_Response ) ) {\n\t\t\treturn $response;\n\t\t}\n\n\t\t$data = (array) $response->get_data();\n\t\t$server = rest_get_server();\n\n\t\tif ( method_exists( $server, 'get_compact_response_links' ) ) {\n\t\t\t$links = call_user_func( array( $server, 'get_compact_response_links' ), $response );\n\t\t} else {\n\t\t\t$links = call_user_func( array( $server, 'get_response_links' ), $response );\n\t\t}\n\n\t\tif ( ! empty( $links ) ) {\n\t\t\t$data['_links'] = $links;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Filter a response based on the context defined in the schema.\n\t *\n\t * @param array  $data\n\t * @param string $context\n\t * @return array\n\t *\/\n\tpublic function filter_response_by_context( $data, $context ) {\n\n\t\t$schema = $this->get_item_schema();\n\t\tforeach ( $data as $key => $value ) {\n\t\t\tif ( empty( $schema['properties'][ $key ] ) || empty( $schema['properties'][ $key ]['context'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! in_array( $context, $schema['properties'][ $key ]['context'] ) ) {\n\t\t\t\tunset( $data[ $key ] );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( 'object' === $schema['properties'][ $key ]['type'] && ! empty( $schema['properties'][ $key ]['properties'] ) ) {\n\t\t\t\tforeach ( $schema['properties'][ $key ]['properties'] as $attribute => $details ) {\n\t\t\t\t\tif ( empty( $details['context'] ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! in_array( $context, $details['context'] ) ) {\n\t\t\t\t\t\tif ( isset( $data[ $key ][ $attribute ] ) ) {\n\t\t\t\t\t\t\tunset( $data[ $key ][ $attribute ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Get the item's schema, conforming to JSON Schema.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_item_schema() {\n\t\treturn $this->add_additional_fields_schema( array() );\n\t}\n\n\t\/**\n\t * Get the item's schema for display \/ public consumption purposes.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_public_item_schema() {\n\n\t\t$schema = $this->get_item_schema();\n\n\t\tforeach ( $schema['properties'] as &$property ) {\n\t\t\tif ( isset( $property['arg_options'] ) ) {\n\t\t\t\tunset( $property['arg_options'] );\n\t\t\t}\n\t\t}\n\n\t\treturn $schema;\n\t}\n\n\t\/**\n\t * Get the query params for collections.\n\t *\n\t * @return array\n\t *\/\n\tpublic function get_collection_params() {\n\t\treturn array(\n\t\t\t'context'                => $this->get_context_param(),\n\t\t\t'page'                   => array(\n\t\t\t\t'description'        => __( 'Current page of the collection.' ),\n\t\t\t\t'type'               => 'integer',\n\t\t\t\t'default'            => 1,\n\t\t\t\t'sanitize_callback'  => 'absint',\n\t\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t\t\t'minimum'            => 1,\n\t\t\t),\n\t\t\t'per_page'               => array(\n\t\t\t\t'description'        => __( 'Maximum number of items to be returned in result set.' ),\n\t\t\t\t'type'               => 'integer',\n\t\t\t\t'default'            => 10,\n\t\t\t\t'minimum'            => 1,\n\t\t\t\t'maximum'            => 100,\n\t\t\t\t'sanitize_callback'  => 'absint',\n\t\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t\t),\n\t\t\t'search'                 => array(\n\t\t\t\t'description'        => __( 'Limit results to those matching a string.' ),\n\t\t\t\t'type'               => 'string',\n\t\t\t\t'sanitize_callback'  => 'sanitize_text_field',\n\t\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t\t),\n\t\t);\n\t}\n\n\t\/**\n\t * Get the magical context param.\n\t *\n\t * Ensures consistent description between endpoints, and populates enum from schema.\n\t *\n\t * @param array $args\n\t * @return array\n\t *\/\n\tpublic function get_context_param( $args = array() ) {\n\t\t$param_details = array(\n\t\t\t'description'        => __( 'Scope under which the request is made; determines fields present in response.' ),\n\t\t\t'type'               => 'string',\n\t\t\t'sanitize_callback'  => 'sanitize_key',\n\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t);\n\t\t$schema = $this->get_item_schema();\n\t\tif ( empty( $schema['properties'] ) ) {\n\t\t\treturn array_merge( $param_details, $args );\n\t\t}\n\t\t$contexts = array();\n\t\tforeach ( $schema['properties'] as $attributes ) {\n\t\t\tif ( ! empty( $attributes['context'] ) ) {\n\t\t\t\t$contexts = array_merge( $contexts, $attributes['context'] );\n\t\t\t}\n\t\t}\n\t\tif ( ! empty( $contexts ) ) {\n\t\t\t$param_details['enum'] = array_unique( $contexts );\n\t\t\trsort( $param_details['enum'] );\n\t\t}\n\t\treturn array_merge( $param_details, $args );\n\t}\n\n\t\/**\n\t * Add the values from additional fields to a data object.\n\t *\n\t * @param array           $object\n\t * @param WP_REST_Request $request\n\t * @return array modified object with additional fields.\n\t *\/\n\tprotected function add_additional_fields_to_object( $object, $request ) {\n\n\t\t$additional_fields = $this->get_additional_fields();\n\n\t\tforeach ( $additional_fields as $field_name => $field_options ) {\n\n\t\t\tif ( ! $field_options['get_callback'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$object[ $field_name ] = call_user_func( $field_options['get_callback'], $object, $field_name, $request, $this->get_object_type() );\n\t\t}\n\n\t\treturn $object;\n\t}\n\n\t\/**\n\t * Update the values of additional fields added to a data object.\n\t *\n\t * @param array           $object\n\t * @param WP_REST_Request $request\n\t *\/\n\tprotected function update_additional_fields_for_object( $object, $request ) {\n\n\t\t$additional_fields = $this->get_additional_fields();\n\n\t\tforeach ( $additional_fields as $field_name => $field_options ) {\n\n\t\t\tif ( ! $field_options['update_callback'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t\/\/ Don't run the update callbacks if the data wasn't passed in the request.\n\t\t\tif ( ! isset( $request[ $field_name ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcall_user_func( $field_options['update_callback'], $request[ $field_name ], $object, $field_name, $request, $this->get_object_type() );\n\t\t}\n\t}\n\n\t\/**\n\t * Add the schema from additional fields to an schema array.\n\t *\n\t * The type of object is inferred from the passed schema.\n\t *\n\t * @param array $schema Schema array.\n\t *\/\n\tprotected function add_additional_fields_schema( $schema ) {\n\t\tif ( empty( $schema['title'] ) ) {\n\t\t\treturn $schema;\n\t\t}\n\n\t\t\/**\n\t\t * Can't use $this->get_object_type otherwise we cause an inf loop.\n\t\t *\/\n\t\t$object_type = $schema['title'];\n\n\t\t$additional_fields = $this->get_additional_fields( $object_type );\n\n\t\tforeach ( $additional_fields as $field_name => $field_options ) {\n\t\t\tif ( ! $field_options['schema'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$schema['properties'][ $field_name ] = $field_options['schema'];\n\t\t}\n\n\t\treturn $schema;\n\t}\n\n\t\/**\n\t * Get all the registered additional fields for a given object-type.\n\t *\n\t * @param  string $object_type\n\t * @return array\n\t *\/\n\tprotected function get_additional_fields( $object_type = null ) {\n\n\t\tif ( ! $object_type ) {\n\t\t\t$object_type = $this->get_object_type();\n\t\t}\n\n\t\tif ( ! $object_type ) {\n\t\t\treturn array();\n\t\t}\n\n\t\tglobal $wp_rest_additional_fields;\n\n\t\tif ( ! $wp_rest_additional_fields || ! isset( $wp_rest_additional_fields[ $object_type ] ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\treturn $wp_rest_additional_fields[ $object_type ];\n\t}\n\n\t\/**\n\t * Get the object type this controller is responsible for managing.\n\t *\n\t * @return string\n\t *\/\n\tprotected function get_object_type() {\n\t\t$schema = $this->get_item_schema();\n\n\t\tif ( ! $schema || ! isset( $schema['title'] ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn $schema['title'];\n\t}\n\n\t\/**\n\t * Get an array of endpoint arguments from the item schema for the controller.\n\t *\n\t * @param string $method HTTP method of the request. The arguments\n\t *                       for `CREATABLE` requests are checked for required\n\t *                       values and may fall-back to a given default, this\n\t *                       is not done on `EDITABLE` requests. Default is\n\t *                       WP_REST_Server::CREATABLE.\n\t * @return array $endpoint_args\n\t *\/\n\tpublic function get_endpoint_args_for_item_schema( $method = WP_REST_Server::CREATABLE ) {\n\n\t\t$schema                = $this->get_item_schema();\n\t\t$schema_properties     = ! empty( $schema['properties'] ) ? $schema['properties'] : array();\n\t\t$endpoint_args = array();\n\n\t\tforeach ( $schema_properties as $field_id => $params ) {\n\n\t\t\t\/\/ Arguments specified as `readonly` are not allowed to be set.\n\t\t\tif ( ! empty( $params['readonly'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$endpoint_args[ $field_id ] = array(\n\t\t\t\t'validate_callback' => 'rest_validate_request_arg',\n\t\t\t\t'sanitize_callback' => 'rest_sanitize_request_arg',\n\t\t\t);\n\n\t\t\tif ( isset( $params['description'] ) ) {\n\t\t\t\t$endpoint_args[ $field_id ]['description'] = $params['description'];\n\t\t\t}\n\n\t\t\tif ( WP_REST_Server::CREATABLE === $method && isset( $params['default'] ) ) {\n\t\t\t\t$endpoint_args[ $field_id ]['default'] = $params['default'];\n\t\t\t}\n\n\t\t\tif ( WP_REST_Server::CREATABLE === $method && ! empty( $params['required'] ) ) {\n\t\t\t\t$endpoint_args[ $field_id ]['required'] = true;\n\t\t\t}\n\n\t\t\tforeach ( array( 'type', 'format', 'enum' ) as $schema_prop ) {\n\t\t\t\tif ( isset( $params[ $schema_prop ] ) ) {\n\t\t\t\t\t$endpoint_args[ $field_id ][ $schema_prop ] = $params[ $schema_prop ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\/\/ Merge in any options provided by the schema property.\n\t\t\tif ( isset( $params['arg_options'] ) ) {\n\n\t\t\t\t\/\/ Only use required \/ default from arg_options on CREATABLE endpoints.\n\t\t\t\tif ( WP_REST_Server::CREATABLE !== $method ) {\n\t\t\t\t\t$params['arg_options'] = array_diff_key( $params['arg_options'], array(\n\t\t\t\t\t\t'required' => '',\n\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t) );\n\t\t\t\t}\n\n\t\t\t\t$endpoint_args[ $field_id ] = array_merge( $endpoint_args[ $field_id ], $params['arg_options'] );\n\t\t\t}\n\t\t}\/\/ End foreach().\n\n\t\treturn $endpoint_args;\n\t}\n\n\t\/**\n\t * Retrieves post data given a post ID or post object.\n\t *\n\t * This is a subset of the functionality of the `get_post()` function, with\n\t * the additional functionality of having `the_post` action done on the\n\t * resultant post object. This is done so that plugins may manipulate the\n\t * post that is used in the REST API.\n\t *\n\t * @see get_post()\n\t * @global WP_Query $wp_query\n\t *\n\t * @param int|WP_Post $post Post ID or post object. Defaults to global $post.\n\t * @return WP_Post|null A `WP_Post` object when successful.\n\t *\/\n\tpublic function get_post( $post ) {\n\t\t$post_obj = get_post( $post );\n\n\t\t\/**\n\t\t * Filter the post.\n\t\t *\n\t\t * Allows plugins to filter the post object as returned by `\\WP_REST_Controller::get_post()`.\n\t\t *\n\t\t * @param WP_Post|null $post_obj  The post object as returned by `get_post()`.\n\t\t * @param int|WP_Post  $post      The original value used to obtain the post object.\n\t\t *\/\n\t\t$post = apply_filters( 'rest_the_post', $post_obj, $post );\n\n\t\treturn $post;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_File.php","ext":"php","size":5540,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB file field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_File extends CMB2_Type_File_Base {\n\n\t\/**\n\t * Handles outputting an 'file' field\n\t *\n\t * @param  array $args Override arguments.\n\t * @return string      Form input element\n\t *\/\n\tpublic function render( $args = array() ) {\n\t\t$args    = empty( $args ) ? $this->args : $args;\n\t\t$field   = $this->field;\n\t\t$options = (array) $field->options();\n\n\t\t$a = $this->args = $this->parse_args( 'file', array(\n\t\t\t'class'           => 'cmb2-upload-file regular-text',\n\t\t\t'id'              => $this->_id(),\n\t\t\t'name'            => $this->_name(),\n\t\t\t'value'           => $field->escaped_value(),\n\t\t\t'id_value'        => null,\n\t\t\t'desc'            => $this->_desc( true ),\n\t\t\t'size'            => 45,\n\t\t\t'js_dependencies' => 'media-editor',\n\t\t\t'preview_size'    => $field->args( 'preview_size' ),\n\t\t\t'query_args'      => $field->args( 'query_args' ),\n\n\t\t\t\/\/ if options array and 'url' => false, then hide the url field.\n\t\t\t'type'            => array_key_exists( 'url', $options ) && false === $options['url']\n\t\t\t\t? 'hidden'\n\t\t\t\t: 'text',\n\t\t), $args );\n\n\t\t\/\/ get an array of image size meta data, fallback to 'large'.\n\t\t$this->args['img_size_data'] = $img_size_data = parent::get_image_size_data(\n\t\t\t$a['preview_size'],\n\t\t\t'large'\n\t\t);\n\n\t\t$output = '';\n\n\t\t$output .= parent::render( array(\n\t\t\t'type'             => $a['type'],\n\t\t\t'class'            => $a['class'],\n\t\t\t'value'            => $a['value'],\n\t\t\t'id'               => $a['id'],\n\t\t\t'name'             => $a['name'],\n\t\t\t'size'             => $a['size'],\n\t\t\t'desc'             => '',\n\t\t\t'data-previewsize' => sprintf( '[%d,%d]', $img_size_data['width'], $img_size_data['height'] ),\n\t\t\t'data-sizename'    => $img_size_data['name'],\n\t\t\t'data-queryargs'   => ! empty( $a['query_args'] ) ? json_encode( $a['query_args'] ) : '',\n\t\t\t'js_dependencies'  => $a['js_dependencies'],\n\t\t) );\n\n\t\t\/\/ Now remove the data-iterator attribute if it exists.\n\t\t\/\/ (Possible if being used within a custom field)\n\t\t\/\/ This is not elegant, but compensates for CMB2_Types::_id\n\t\t\/\/ automagically & inelegantly adding the data-iterator attribute.\n\t\t\/\/ Single responsibility principle? pffft.\n\t\t$parts            = explode( '\"', $this->args['id'] );\n\t\t$this->args['id'] = $parts[0];\n\n\t\t$output .= sprintf(\n\t\t\t'<input class=\"cmb2-upload-button button-secondary\" type=\"button\" value=\"%1$s\" \/>',\n\t\t\tesc_attr( $this->_text( 'add_upload_file_text', esc_html__( 'Add or Upload File', 'cmb2' ) ) )\n\t\t);\n\n\t\t$output .= $a['desc'];\n\t\t$output .= $this->get_id_field_output();\n\n\t\t$output .= '<div id=\"' . esc_attr( $field->id() ) . '-status\" class=\"cmb2-media-status\">';\n\t\tif ( ! empty( $a['value'] ) ) {\n\t\t\t$output .= $this->get_file_preview_output();\n\t\t}\n\t\t$output .= '<\/div>';\n\n\t\treturn $this->rendered( $output );\n\t}\n\n\t\/**\n\t * Return attempted file preview output for a provided file.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_file_preview_output() {\n\t\tif ( ! $this->is_valid_img_ext( $this->args['value'] ) ) {\n\n\t\t\treturn $this->file_status_output( array(\n\t\t\t\t'value'     => $this->args['value'],\n\t\t\t\t'tag'       => 'div',\n\t\t\t\t'cached_id' => $this->args['id'],\n\t\t\t) );\n\t\t}\n\n\t\tif ( $this->args['id_value'] ) {\n\t\t\t$image = wp_get_attachment_image( $this->args['id_value'], $this->args['preview_size'], null, array(\n\t\t\t\t'class' => 'cmb-file-field-image',\n\t\t\t) );\n\t\t} else {\n\t\t\t$image = '<img style=\"max-width: ' . absint( $this->args['img_size_data']['width'] ) . 'px; width: 100%;\" src=\"' . esc_url( $this->args['value'] ) . '\" class=\"cmb-file-field-image\" alt=\"\" \/>';\n\t\t}\n\n\t\treturn $this->img_status_output( array(\n\t\t\t'image'     => $image,\n\t\t\t'tag'       => 'div',\n\t\t\t'cached_id' => $this->args['id'],\n\t\t) );\n\t}\n\n\t\/**\n\t * Return field ID output as a hidden field.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_id_field_output() {\n\t\t$field = $this->field;\n\n\t\t\/*\n\t\t * A little bit of magic (tsk tsk) replacing the $this->types->field object,\n\t\t * So that the render function is using the proper field object.\n\t\t *\/\n\t\t$this->types->field = $this->get_id_field();\n\n\t\t$output = parent::render( array(\n\t\t\t'type'  => 'hidden',\n\t\t\t'class' => 'cmb2-upload-file-id',\n\t\t\t'value' => $this->types->field->value,\n\t\t\t'desc'  => '',\n\t\t) );\n\n\t\t\/\/ We need to put the original field object back\n\t\t\/\/ or other fields in a custom field will be broken.\n\t\t$this->types->field = $field;\n\n\t\treturn $output;\n\t}\n\n\t\/**\n\t * Return field ID data.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @return mixed\n\t *\/\n\tpublic function get_id_field() {\n\n\t\t\/\/ reset field args for attachment id.\n\t\t$args = array(\n\t\t\t\/\/ if we're looking at a file in a group, we need to get the non-prefixed id.\n\t\t\t'id' => ( $this->field->group ? $this->field->args( '_id' ) : $this->args['id'] ) . '_id',\n\t\t\t'disable_hash_data_attribute' => true,\n\t\t);\n\n\t\t\/\/ and get new field object\n\t\t\/\/ (need to set it to the types field property).\n\t\t$id_field = $this->field->get_field_clone( $args );\n\n\t\t$id_value = absint( null !== $this->args['id_value'] ? $this->args['id_value'] : $id_field->escaped_value() );\n\n\t\t\/\/ we don't want to output \"0\" as a value.\n\t\tif ( ! $id_value ) {\n\t\t\t$id_value = '';\n\t\t}\n\n\t\t\/\/ if there is no id saved yet, try to get it from the url.\n\t\tif ( $this->args['value'] && ! $id_value ) {\n\t\t\t$id_value = CMB2_Utils::image_id_from_url( esc_url_raw( $this->args['value'] ) );\n\t\t}\n\n\t\t$id_field->value = $id_value;\n\n\t\treturn $id_field;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Text_Datetime_Timestamp.php","ext":"php","size":2390,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB text_datetime_timestamp field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Text_Datetime_Timestamp extends CMB2_Type_Picker_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$value = $field->escaped_value();\n\t\tif ( empty( $value ) ) {\n\t\t\t$value = $field->get_default();\n\t\t}\n\n\t\t$args = wp_parse_args( $this->args, array(\n\t\t\t'value'      => $value,\n\t\t\t'desc'       => $this->_desc(),\n\t\t\t'datepicker' => array(),\n\t\t\t'timepicker' => array(),\n\t\t) );\n\n\t\tif ( empty( $args['value'] ) ) {\n\t\t\t$args['value'] = $value;\n\t\t\t\/\/ This will be used if there is a select_timezone set for this field\n\t\t\t$tz_offset = $field->field_timezone_offset();\n\t\t\tif ( ! empty( $tz_offset ) ) {\n\t\t\t\t$args['value'] -= $tz_offset;\n\t\t\t}\n\t\t}\n\n\t\t$has_good_value = ! empty( $args['value'] ) && ! is_array( $args['value'] );\n\n\t\t$date_input = parent::render( $this->date_args( $args, $has_good_value ) );\n\t\t$time_input = parent::render( $this->time_args( $args, $has_good_value ) );\n\n\t\treturn $this->rendered( $date_input . \"\\n\" . $time_input );\n\t}\n\n\tpublic function date_args( $args, $has_good_value ) {\n\t\t$date_args = wp_parse_args( $args['datepicker'], array(\n\t\t\t'class' => 'cmb2-text-small cmb2-datepicker',\n\t\t\t'name'  => $this->_name( '[date]' ),\n\t\t\t'id'    => $this->_id( '_date' ),\n\t\t\t'value' => $has_good_value ? $this->field->get_timestamp_format( 'date_format', $args['value'] ) : '',\n\t\t\t'desc'  => '',\n\t\t) );\n\n\t\t$date_args['rendered'] = true;\n\n\t\t\/\/ Let's get the date-format, and set it up as a data attr for the field.\n\t\treturn $this->parse_picker_options( 'date', $date_args );\n\t}\n\n\tpublic function time_args( $args, $has_good_value ) {\n\t\t$time_args = wp_parse_args( $args['timepicker'], array(\n\t\t\t'class' => 'cmb2-timepicker text-time',\n\t\t\t'name'  => $this->_name( '[time]' ),\n\t\t\t'id'    => $this->_id( '_time' ),\n\t\t\t'value' => $has_good_value ? $this->field->get_timestamp_format( 'time_format', $args['value'] ) : '',\n\t\t\t'desc'  => $args['desc'],\n\t\t\t'js_dependencies' => array( 'jquery-ui-core', 'jquery-ui-datepicker', 'jquery-ui-datetimepicker' ),\n\t\t) );\n\n\t\t$time_args['rendered'] = true;\n\n\t\t\/\/ Let's get the time-format, and set it up as a data attr for the field.\n\t\treturn $this->parse_picker_options( 'time', $time_args );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Text_Date.php","ext":"php","size":736,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB text_date field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Text_Date extends CMB2_Type_Picker_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$args = $this->parse_args( 'text_date', array(\n\t\t\t'class'           => 'cmb2-text-small cmb2-datepicker',\n\t\t\t'value'           => $this->field->get_timestamp_format(),\n\t\t\t'desc'            => $this->_desc(),\n\t\t\t'js_dependencies' => array( 'jquery-ui-core', 'jquery-ui-datepicker' ),\n\t\t) );\n\n\t\tif ( false === strpos( $args['class'], 'timepicker' ) ) {\n\t\t\t$this->parse_picker_options( 'date' );\n\t\t}\n\n\t\treturn parent::render( $args );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Select.php","ext":"php","size":671,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB select field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Select extends CMB2_Type_Multi_Base {\n\n\tpublic function render() {\n\t\t$a = $this->parse_args( 'select', array(\n\t\t\t'class'   => 'cmb2_select',\n\t\t\t'name'    => $this->_name(),\n\t\t\t'id'      => $this->_id(),\n\t\t\t'desc'    => $this->_desc( true ),\n\t\t\t'options' => $this->concat_items(),\n\t\t) );\n\n\t\t$attrs = $this->concat_attrs( $a, array( 'desc', 'options' ) );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<select%s>%s<\/select>%s', $attrs, $a['options'], $a['desc'] )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Taxonomy_Base.php","ext":"php","size":4767,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB Taxonomy base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nabstract class CMB2_Type_Taxonomy_Base extends CMB2_Type_Multi_Base {\n\n\t\/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @var integer|null\n\t *\/\n\tprotected $parent = null;\n\n\t\/**\n\t * Checks if we can get a post object, and if so, uses `get_the_terms` which utilizes caching.\n\t *\n\t * @since  1.0.2\n\t * @return mixed Array of terms on success\n\t *\/\n\tpublic function get_object_terms() {\n\t\tswitch ( $this->field->object_type ) {\n\t\t\tcase 'options-page':\n\t\t\tcase 'term':\n\t\t\t\treturn $this->options_terms();\n\t\t\tcase 'post':\n\t\t\t\t\/\/ WP caches internally so it's better to use\n\t\t\t\treturn get_the_terms( $this->field->object_id, $this->field->args( 'taxonomy' ) );\n\n\t\t\tdefault:\n\t\t\t\treturn $this->non_post_object_terms();\n\t\t}\n\t}\n\n\t\/**\n\t * Gets the term objects for the terms stored via options boxes.\n\t *\n\t * @since  2.2.4\n\t * @return mixed Array of terms on success\n\t *\/\n\tpublic function options_terms() {\n\t\tif ( empty( $this->field->value ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t$terms = (array) $this->field->value;\n\n\t\tforeach ( $terms as $index => $term ) {\n\t\t\t$terms[ $index ] = get_term_by( 'slug', $term, $this->field->args( 'taxonomy' ) );\n\t\t}\n\n\t\treturn $terms;\n\t}\n\n\t\/**\n\t * For non-post objects, wraps the call to wp_get_object_terms with transient caching.\n\t *\n\t * @since  2.2.4\n\t * @return mixed Array of terms on success\n\t *\/\n\tpublic function non_post_object_terms() {\n\t\t$object_id = $this->field->object_id;\n\t\t$taxonomy = $this->field->args( 'taxonomy' );\n\n\t\t$cache_key = \"cmb-cache-{$taxonomy}-{$object_id}\";\n\n\t\t\/\/ Check cache\n\t\t$cached = get_transient( $cache_key );\n\n\t\tif ( ! $cached ) {\n\t\t\t$cached = wp_get_object_terms( $object_id, $taxonomy );\n\t\t\t\/\/ Do our own (minimal) caching. Long enough for a page-load.\n\t\t\tset_transient( $cache_key, $cached, 60 );\n\t\t}\n\n\t\treturn $cached;\n\t}\n\n\t\/**\n\t * Wrapper for `get_terms` to account for changes in WP 4.6 where taxonomy is expected\n\t * as part of the arguments.\n\t *\n\t * @since  2.2.2\n\t * @return mixed Array of terms on success\n\t *\/\n\tpublic function get_terms() {\n\t\t$args = array(\n\t\t\t'taxonomy'   => $this->field->args( 'taxonomy' ),\n\t\t\t'hide_empty' => false,\n\t\t);\n\n\t\tif ( null !== $this->parent ) {\n\t\t\t$args['parent'] = $this->parent;\n\t\t}\n\n\t\t$args = wp_parse_args( $this->field->prop( 'query_args', array() ), $args );\n\n\t\treturn CMB2_Utils::wp_at_least( '4.5.0' )\n\t\t\t? get_terms( $args )\n\t\t\t: get_terms( $this->field->args( 'taxonomy' ), http_build_query( $args ) );\n\t}\n\n\tprotected function no_terms_result( $error, $tag = 'li' ) {\n\t\tif ( is_wp_error( $error ) ) {\n\t\t\t$message = $error->get_error_message();\n\t\t\t$data = 'data-error=\"' . esc_attr( $error->get_error_code() ) . '\"';\n\t\t} else {\n\t\t\t$message = $this->_text( 'no_terms_text', esc_html__( 'No terms', 'cmb2' ) );\n\t\t\t$data = '';\n\t\t}\n\n\t\t$this->field->args['select_all_button'] = false;\n\n\t\treturn sprintf( '<%3$s><label %1$s>%2$s<\/label><\/%3$s>', $data, esc_html( $message ), $tag );\n\t}\n\n\tpublic function get_object_term_or_default() {\n\t\t$saved_terms = $this->get_object_terms();\n\n\t\treturn is_wp_error( $saved_terms ) || empty( $saved_terms )\n\t\t\t? $this->field->get_default()\n\t\t\t: array_shift( $saved_terms )->slug;\n\t}\n\n\t\/**\n\t * Takes a list of all tax terms and outputs.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @param  array  $all_terms   Array of all terms.\n\t * @param  array|string $saved Array of terms set to the object, or single term slug.\n\t *\n\t * @return string              List of terms.\n\t *\/\n\tprotected function loop_terms( $all_terms, $saved_terms ) {\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Build children hierarchy.\n\t *\n\t * @param  object       $parent_term The parent term object.\n\t * @param  array|string $saved       Array of terms set to the object, or single term slug.\n\t *\n\t * @return string                    List of terms.\n\t *\/\n\tprotected function build_children( $parent_term, $saved ) {\n\t\tif ( empty( $parent_term->term_id ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$this->parent = $parent_term->term_id;\n\n\t\t$terms   = $this->get_terms();\n\t\t$options = '';\n\n\t\tif ( ! empty( $terms ) && is_array( $terms ) ) {\n\t\t\t$options .= $this->child_option_output( $terms, $saved );\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\t\/**\n\t * Build child terms output.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @param  array        $terms Array of child terms.\n\t * @param  array|string $saved Array of terms set to the object, or single term slug.\n\t *\n\t * @return string              Child option output.\n\t *\/\n\tpublic function child_option_output( $terms, $saved ) {\n\t\t$output = '<li class=\"cmb2-indented-hierarchy\"><ul>';\n\t\t$output .= $this->loop_terms( $terms, $saved );\n\t\t$output .= '<\/ul><\/li>';\n\n\t\treturn $output;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Taxonomy_Select_Hierarchical.php","ext":"php","size":1516,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB taxonomy_select_hierarchical field type\n *\n * @since  2.6.1\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Taxonomy_Select_Hierarchical extends CMB2_Type_Taxonomy_Select {\n\n\t\/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @var integer\n\t *\/\n\tprotected $parent = 0;\n\n\t\/**\n\t * Child loop depth.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @var integer\n\t *\/\n\tprotected $level = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->select( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_select_hierarchical' )\n\t\t);\n\t}\n\n\tpublic function select_option( $args = array() ) {\n\t\tif ( $this->level > 0 ) {\n\t\t\t$args['label'] = str_repeat( '&nbsp;&nbsp;&nbsp;&nbsp;', $this->level ) . $args['label'];\n\t\t}\n\t\t$option = parent::select_option( $args );\n\t\t$children = $this->build_children( $this->current_term, $this->saved_term );\n\n\t\tif ( ! empty( $children ) ) {\n\t\t\t$option .= $children;\n\t\t}\n\n\t\treturn $option;\n\t}\n\n\t\/**\n\t * Build children hierarchy.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @param  array        $terms Array of child terms.\n\t * @param  array|string $saved Array of terms set to the object, or single term slug.\n\t *\n\t * @return string              Child option output.\n\t *\/\n\tpublic function child_option_output( $terms, $saved ) {\n\t\t$this->level++;\n\t\t$output = $this->loop_terms( $terms, $saved );\n\t\t$this->level--;\n\n\t\treturn $output;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Wysiwyg.php","ext":"php","size":3344,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB wysiwyg field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\n * @method string _id()\n * @method string _desc()\n *\/\nclass CMB2_Type_Wysiwyg extends CMB2_Type_Textarea {\n\n\t\/**\n\t * Handles outputting a 'wysiwyg' element\n\t * @since  1.1.0\n\t * @return string Form wysiwyg element\n\t *\/\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\t\t$a = $this->parse_args( 'wysiwyg', array(\n\t\t\t'id'      => $this->_id( '', false ),\n\t\t\t'value'   => $field->escaped_value( 'stripslashes' ),\n\t\t\t'desc'    => $this->_desc( true ),\n\t\t\t'options' => $field->options(),\n\t\t) );\n\n\t\tif ( ! $field->group ) {\n\n\t\t\t$a = $this->maybe_update_attributes_for_char_counter( $a );\n\n\t\t\tif ( $this->has_counter ) {\n\t\t\t\t$a['options']['editor_class'] = ! empty( $a['options']['editor_class'] )\n\t\t\t\t\t? $a['options']['editor_class'] . ' cmb2-count-chars'\n\t\t\t\t\t: 'cmb2-count-chars';\n\t\t\t}\n\n\t\t\treturn $this->rendered( $this->get_wp_editor( $a ) . $a['desc'] );\n\t\t}\n\n\t\t\/\/ Character counter not currently working for grouped WYSIWYG\n\t\t$this->field->args['char_counter'] = false;\n\n\t\t\/\/ wysiwyg fields in a group need some special handling.\n\t\t$field->add_js_dependencies( array( 'wp-util', 'cmb2-wysiwyg' ) );\n\n\t\t\/\/ Hook in our template-output to the footer.\n\t\tadd_action( is_admin() ? 'admin_footer' : 'wp_footer', array( $this, 'add_wysiwyg_template_for_group' ) );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<div class=\"cmb2-wysiwyg-wrap\">%s', parent::render( array(\n\t\t\t\t'class'         => 'cmb2_textarea cmb2-wysiwyg-placeholder',\n\t\t\t\t'data-groupid'  => $field->group->id(),\n\t\t\t\t'data-iterator' => $field->group->index,\n\t\t\t\t'data-fieldid'  => $field->id( true ),\n\t\t\t\t'desc'          => '<\/div>' . $this->_desc( true ),\n\t\t\t) ) )\n\t\t);\n\t}\n\n\tprotected function get_wp_editor( $args ) {\n\t\tob_start();\n\t\twp_editor( $args['value'], $args['id'], $args['options'] );\n\t\treturn ob_get_clean();\n\t}\n\n\tpublic function add_wysiwyg_template_for_group() {\n\t\t$group_id = $this->field->group->id();\n\t\t$field_id = $this->field->id( true );\n\t\t$hash     = $this->field->hash_id();\n\t\t$options  = $this->field->options();\n\t\t$options['textarea_name'] = 'cmb2_n_' . $group_id . $field_id;\n\n\t\t\/\/ Initate the editor with special id\/value\/name so we can retrieve the options in JS.\n\t\t$editor = $this->get_wp_editor( array(\n\t\t\t'value'   => 'cmb2_v_' . $group_id . $field_id,\n\t\t\t'id'      => 'cmb2_i_' . $group_id . $field_id,\n\t\t\t'options' => $options,\n\t\t) );\n\n\t\t\/\/ Then replace the special id\/value\/name with underscore placeholders.\n\t\t$editor = str_replace( array(\n\t\t\t'cmb2_n_' . $group_id . $field_id,\n\t\t\t'cmb2_v_' . $group_id . $field_id,\n\t\t\t'cmb2_i_' . $group_id . $field_id,\n\t\t\t), array(\n\t\t\t'{{ data.name }}',\n\t\t\t'{{{ data.value }}}',\n\t\t\t'{{ data.id }}',\n\t\t), $editor );\n\n\t\t\/\/ And put the editor instance in a JS template wrapper.\n\t\techo '<script type=\"text\/template\" id=\"tmpl-cmb2-wysiwyg-' . $group_id . '-' . $field_id . '\">';\n\t\t\/\/ Need to wrap the template in a wrapper div w\/ specific data attributes which will be used when adding\/removing rows.\n\t\techo '<div class=\"cmb2-wysiwyg-inner-wrap\" data-iterator=\"{{ data.iterator }}\" data-groupid=\"' . $group_id . '\" data-id=\"' . $field_id . '\" data-hash=\"' . $hash . '\">' . $editor . '<\/div>';\n\t\techo '<\/script>';\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Radio.php","ext":"php","size":1052,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB radio field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Radio extends CMB2_Type_Multi_Base {\n\n\t\/**\n\t * The type of radio field\n\t *\n\t * @var string\n\t *\/\n\tpublic $type = 'radio';\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types\n\t * @param array      $args\n\t *\/\n\tpublic function __construct( CMB2_Types $types, $args = array(), $type = '' ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->type = $type ? $type : $this->type;\n\t}\n\n\tpublic function render() {\n\t\t$args = $this->parse_args( $this->type, array(\n\t\t\t'class'   => 'cmb2-radio-list cmb2-list',\n\t\t\t'options' => $this->concat_items( array(\n\t\t\t\t'label'  => 'test',\n\t\t\t\t'method' => 'list_input',\n\t\t\t) ),\n\t\t\t'desc' => $this->_desc( true ),\n\t\t) );\n\n\t\treturn $this->rendered( $this->ul( $args ) );\n\t}\n\n\tprotected function ul( $a ) {\n\t\treturn sprintf( '<ul class=\"%s\">%s<\/ul>%s', $a['class'], $a['options'], $a['desc'] );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Taxonomy_Select.php","ext":"php","size":2311,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB taxonomy_select field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Taxonomy_Select extends CMB2_Type_Taxonomy_Base {\n\n\t\/**\n\t * Current Term Object.\n\t *\n\t * @since 2.6.1\n\t *\n\t * @var   null|WP_Term\n\t *\/\n\tpublic $current_term = null;\n\n\t\/**\n\t * Saved Term Object.\n\t *\n\t * @since 2.6.1\n\t *\n\t * @var   null|WP_Term\n\t *\/\n\tpublic $saved_term = null;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->select( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t) )\n\t\t);\n\t}\n\n\tprotected function get_term_options() {\n\t\t$all_terms = $this->get_terms();\n\n\t\tif ( ! $all_terms || is_wp_error( $all_terms ) ) {\n\t\t\treturn $this->no_terms_result( $all_terms, 'strong' );\n\t\t}\n\n\t\t$this->saved_term  = $this->get_object_term_or_default();\n\t\t$option_none = $this->field->args( 'show_option_none' );\n\t\t$options     = '';\n\n\t\tif ( ! empty( $option_none ) ) {\n\n\t\t\t$field_id = $this->_id( '', false );\n\n\t\t\t\/**\n\t\t\t * Default (option-none) taxonomy-select value.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-select value.\n\t\t\t *\/\n\t\t\t$option_none_value = apply_filters( 'cmb2_taxonomy_select_default_value', '' );\n\n\t\t\t\/**\n\t\t\t * Default (option-none) taxonomy-select value.\n\t\t\t *\n\t\t\t * The dynamic portion of the hook name, $field_id, refers to the field id attribute.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-select value.\n\t\t\t *\/\n\t\t\t$option_none_value = apply_filters( \"cmb2_taxonomy_select_{$field_id}_default_value\", $option_none_value );\n\n\t\t\t$options .= $this->select_option( array(\n\t\t\t\t'label'   => $option_none,\n\t\t\t\t'value'   => $option_none_value,\n\t\t\t\t'checked' => $this->saved_term == $option_none_value,\n\t\t\t) );\n\t\t}\n\n\t\t$options .= $this->loop_terms( $all_terms, $this->saved_term );\n\n\t\treturn $options;\n\t}\n\n\tprotected function loop_terms( $all_terms, $saved_term ) {\n\t\t$options = '';\n\n\t\tforeach ( $all_terms as $term ) {\n\t\t\t$this->current_term = $term;\n\t\t\t$options .= $this->select_option( array(\n\t\t\t\t'label'   => $term->name,\n\t\t\t\t'value'   => $term->slug,\n\t\t\t\t'checked' => $this->saved_term === $term->slug,\n\t\t\t) );\n\t\t}\n\n\t\treturn $options;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Taxonomy_Radio.php","ext":"php","size":2194,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB taxonomy_radio field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Taxonomy_Radio extends CMB2_Type_Taxonomy_Base {\n\tprotected $counter = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_radio' )\n\t\t);\n\t}\n\n\tprotected function get_term_options() {\n\t\t$all_terms = $this->get_terms();\n\n\t\tif ( ! $all_terms || is_wp_error( $all_terms ) ) {\n\t\t\treturn $this->no_terms_result( $all_terms );\n\t\t}\n\n\t\t$saved_term  = $this->get_object_term_or_default();\n\t\t$option_none = $this->field->args( 'show_option_none' );\n\t\t$options     = '';\n\n\t\tif ( ! empty( $option_none ) ) {\n\n\t\t\t$field_id = $this->_id( '', false );\n\n\t\t\t\/**\n\t\t\t * Default (option-none) taxonomy-radio value.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-radio value.\n\t\t\t *\/\n\t\t\t$option_none_value = apply_filters( 'cmb2_taxonomy_radio_default_value', '' );\n\n\t\t\t\/**\n\t\t\t * Default (option-none) taxonomy-radio value.\n\t\t\t *\n\t\t\t * The dynamic portion of the hook name, $field_id, refers to the field id attribute.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-radio value.\n\t\t\t *\/\n\t\t\t$option_none_value = apply_filters( \"cmb2_taxonomy_radio_{$field_id}_default_value\", $option_none_value );\n\n\t\t\t$options .= $this->list_term_input( (object) array(\n\t\t\t\t'slug' => $option_none_value,\n\t\t\t\t'name' => $option_none,\n\t\t\t), $saved_term );\n\t\t}\n\n\t\t$options .= $this->loop_terms( $all_terms, $saved_term );\n\n\t\treturn $options;\n\t}\n\n\tprotected function loop_terms( $all_terms, $saved_term ) {\n\t\t$options = '';\n\t\tforeach ( $all_terms as $term ) {\n\t\t\t$options .= $this->list_term_input( $term, $saved_term );\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\tprotected function list_term_input( $term, $saved_term ) {\n\t\t$args = array(\n\t\t\t'value' => $term->slug,\n\t\t\t'label' => $term->name,\n\t\t);\n\n\t\tif ( $saved_term == $term->slug ) {\n\t\t\t$args['checked'] = 'checked';\n\t\t}\n\n\t\treturn $this->list_input( $args, ++$this->counter );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Multi_Base.php","ext":"php","size":3010,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB Multi base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nabstract class CMB2_Type_Multi_Base extends CMB2_Type_Base {\n\n\t\/**\n\t * Generates html for an option element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Arguments array containing value, label, and checked boolean\n\t * @return string       Generated option element html\n\t *\/\n\tpublic function select_option( $args = array() ) {\n\t\treturn sprintf( \"\\t\" . '<option value=\"%s\" %s>%s<\/option>', $args['value'], selected( isset( $args['checked'] ) && $args['checked'], true, false ), $args['label'] ) . \"\\n\";\n\t}\n\n\t\/**\n\t * Generates html for list item with input\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @param  int   $i    Iterator value\n\t * @return string       Gnerated list item html\n\t *\/\n\tpublic function list_input( $args = array(), $i = '' ) {\n\t\t$a = $this->parse_args( 'list_input', array(\n\t\t\t'type'  => 'radio',\n\t\t\t'class' => 'cmb2-option',\n\t\t\t'name'  => $this->_name(),\n\t\t\t'id'    => $this->_id( $i ),\n\t\t\t'value' => $this->field->escaped_value(),\n\t\t\t'label' => '',\n\t\t), $args );\n\n\t\treturn sprintf( \"\\t\" . '<li><input%s\/> <label for=\"%s\">%s<\/label><\/li>' . \"\\n\", $this->concat_attrs( $a, array( 'label' ) ), $a['id'], $a['label'] );\n\t}\n\n\t\/**\n\t * Generates html for list item with checkbox input\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @param  int   $i    Iterator value\n\t * @return string       Gnerated list item html\n\t *\/\n\tpublic function list_input_checkbox( $args, $i ) {\n\t\t$saved_value = $this->field->escaped_value();\n\t\tif ( is_array( $saved_value ) && in_array( $args['value'], $saved_value ) ) {\n\t\t\t$args['checked'] = 'checked';\n\t\t}\n\t\t$args['type'] = 'checkbox';\n\t\treturn $this->list_input( $args, $i );\n\t}\n\n\t\/**\n\t * Generates html for concatenated items\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Optional arguments\n\t * @return string        Concatenated html items\n\t *\/\n\tpublic function concat_items( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$method = isset( $args['method'] ) ? $args['method'] : 'select_option';\n\t\tunset( $args['method'] );\n\n\t\t$value = null !== $field->escaped_value()\n\t\t\t? $field->escaped_value()\n\t\t\t: $field->get_default();\n\n\t\t$value = CMB2_Utils::normalize_if_numeric( $value );\n\n\t\t$concatenated_items = '';\n\t\t$i = 1;\n\n\t\t$options = array();\n\t\tif ( $option_none = $field->args( 'show_option_none' ) ) {\n\t\t\t$options[''] = $option_none;\n\t\t}\n\t\t$options = $options + (array) $field->options();\n\t\tforeach ( $options as $opt_value => $opt_label ) {\n\n\t\t\t\/\/ Clone args & modify for just this item\n\t\t\t$a = $args;\n\n\t\t\t$a['value'] = $opt_value;\n\t\t\t$a['label'] = $opt_label;\n\n\t\t\t\/\/ Check if this option is the value of the input\n\t\t\tif ( $value === CMB2_Utils::normalize_if_numeric( $opt_value ) ) {\n\t\t\t\t$a['checked'] = 'checked';\n\t\t\t}\n\n\t\t\t$concatenated_items .= $this->$method( $a, $i++ );\n\t\t}\n\n\t\treturn $concatenated_items;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Checkbox.php","ext":"php","size":1541,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB checkbox field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Checkbox extends CMB2_Type_Text {\n\n\t\/**\n\t * If checkbox is checked\n\t *\n\t * @var mixed\n\t *\/\n\tpublic $is_checked = null;\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types      Object for the field type.\n\t * @param array      $args       Array of arguments for the type.\n\t * @param mixed      $is_checked Whether or not the field is checked, or default value.\n\t *\/\n\tpublic function __construct( CMB2_Types $types, $args = array(), $is_checked = null ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->is_checked = $is_checked;\n\t}\n\n\t\/**\n\t * Render the field for the field type.\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param array $args Array of arguments for the rendering.\n\t * @return CMB2_Type_Base|string\n\t *\/\n\tpublic function render( $args = array() ) {\n\t\t$defaults = array(\n\t\t\t'type'  => 'checkbox',\n\t\t\t'class' => 'cmb2-option cmb2-list',\n\t\t\t'value' => 'on',\n\t\t\t'desc'  => '',\n\t\t);\n\n\t\t$meta_value = $this->field->escaped_value();\n\n\t\t$is_checked = null === $this->is_checked\n\t\t\t? ! empty( $meta_value )\n\t\t\t: $this->is_checked;\n\n\t\tif ( $is_checked ) {\n\t\t\t$defaults['checked'] = 'checked';\n\t\t}\n\n\t\t$args = $this->parse_args( 'checkbox', $defaults );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf(\n\t\t\t\t'%s <label for=\"%s\">%s<\/label>',\n\t\t\t\tparent::render( $args ),\n\t\t\t\t$this->_id( '', false ),\n\t\t\t\t$this->_desc()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Counter_Base.php","ext":"php","size":3480,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nabstract class CMB2_Type_Counter_Base extends CMB2_Type_Base {\n\n\t\/**\n\t * Whether this type has the counter added.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @var boolean\n\t *\/\n\tpublic $has_counter = false;\n\n\t\/**\n\t * Return character counter markup for this field.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  string $val The actual value of this field.\n\t *\n\t * @return string\n\t *\/\n\tpublic function char_counter_markup( $val ) {\n\t\t$markup = '';\n\n\t\tif ( ! $this->field->args( 'char_counter' ) ) {\n\t\t\treturn $markup;\n\t\t}\n\n\t\t$type     = (string) $this->field->args( 'char_counter' );\n\t\t$field_id = $this->_id( '', false );\n\t\t$char_max = (int) $this->field->prop( 'char_max' );\n\t\tif ( $char_max ) {\n\t\t\t$char_max = 'data-max=\"' . $char_max . '\"';\n\t\t}\n\n\t\tswitch ( $type ) {\n\t\t\tcase 'words':\n\t\t\t\t$label = $char_max\n\t\t\t\t\t? $this->_text( 'words_left_text', esc_html__( 'Words left', 'cmb2' ) )\n\t\t\t\t\t: $this->_text( 'words_text', esc_html__( 'Words', 'cmb2' ) );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$type  = 'characters';\n\t\t\t\t$label = $char_max\n\t\t\t\t\t? $this->_text( 'characters_left_text', esc_html__( 'Characters left', 'cmb2' ) )\n\t\t\t\t\t: $this->_text( 'characters_text', esc_html__( 'Characters', 'cmb2' ) );\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$msg = $char_max\n\t\t\t? sprintf( '<span class=\"cmb2-char-max-msg\">%s<\/span>', $this->_text( 'characters_truncated_text', esc_html__( 'Your text may be truncated.', 'cmb2' ) ) )\n\t\t\t: '';\n\n\t\t$length = strlen( $val );\n\t\t$width  = $length > 1 ? ( 8 * strlen( (string) $length ) ) + 15 : false;\n\n\t\t$markup .= '<p class=\"cmb2-char-counter-wrap\">';\n\t\t$markup .= sprintf(\n\t\t\t'<label><span class=\"cmb2-char-counter-label\">%2$s:<\/span> <input id=\"%1$s\" data-field-id=\"%3$s\" data-counter-type=\"%4$s\" %5$s class=\"cmb2-char-counter\" type=\"text\" value=\"%6$s\" readonly=\"readonly\" style=\"%7$s\"><\/label>%8$s',\n\t\t\tesc_attr( 'char-counter-' . $field_id ),\n\t\t\t$label,\n\t\t\tesc_attr( $field_id ),\n\t\t\t$type,\n\t\t\t$char_max,\n\t\t\t$length,\n\t\t\t$width ? \"width: {$width}px;\" : '',\n\t\t\t$msg\n\t\t);\n\t\t$markup .= '<\/p>';\n\n\t\t\/\/ Enqueue the required JS.\n\t\t$this->field->add_js_dependencies( array(\n\t\t\t'word-count',\n\t\t\t'wp-util',\n\t\t\t'cmb2-char-counter',\n\t\t) );\n\n\t\t$this->has_counter = true;\n\n\t\treturn $markup;\n\t}\n\n\t\/**\n\t * Maybe update attributes for the character counter.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  array  $attributes Array of parsed attributes.\n\t *\n\t * @return array              Potentially modified attributes.\n\t *\/\n\tpublic function maybe_update_attributes_for_char_counter( $attributes ) {\n\t\t$char_counter = $this->char_counter_markup( $attributes['value'] );\n\n\t\t\/\/ Has character counter?\n\t\tif ( $char_counter ) {\n\t\t\t$attributes['class'] = ! empty( $attributes['class'] ) ? $attributes['class'] . ' cmb2-count-chars' : ' cmb2-count-chars';\n\n\t\t\t\/\/ Enforce max chars?\n\t\t\t$max = $this->enforce_max();\n\t\t\tif ( $max ) {\n\t\t\t\t$attributes['maxlength'] = $max;\n\t\t\t}\n\t\t\t$attributes['desc'] = $char_counter . $attributes['desc'];\n\t\t}\n\n\t\treturn $attributes;\n\t}\n\n\t\/**\n\t * Enforce max chars?\n\t *\n\t * @since  2.7.0\n\t *\n\t * @return bool Whether to enforce max characters.\n\t *\/\n\tpublic function enforce_max() {\n\t\t$char_max = (int) $this->field->args( 'char_max' );\n\n\t\t\/\/ Enforce max chars?\n\t\treturn ( $this->field->args( 'char_max_enforce' ) && $char_max > 0\n\t\t\t&& 'words' !== $this->field->args( 'char_counter' ) )\n\t\t\t? $char_max\n\t\t\t: false;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Taxonomy_Multicheck_Hierarchical.php","ext":"php","size":912,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB taxonomy_multicheck_hierarchical field type\n *\n * @since  2.2.5\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Taxonomy_Multicheck_Hierarchical extends CMB2_Type_Taxonomy_Multicheck {\n\n\t\/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @var integer\n\t *\/\n\tprotected $parent = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'class'   => $this->get_wrapper_classes(),\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_multicheck_hierarchical' )\n\t\t);\n\t}\n\n\tprotected function list_term_input( $term, $saved_terms ) {\n\t\t$options = parent::list_term_input( $term, $saved_terms );\n\t\t$children = $this->build_children( $term, $saved_terms );\n\n\t\tif ( ! empty( $children ) ) {\n\t\t\t$options .= $children;\n\t\t}\n\n\t\treturn $options;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Select_Timezone.php","ext":"php","size":663,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB select_timezone field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Select_Timezone extends CMB2_Type_Select {\n\n\tpublic function render() {\n\n\t\t$this->field->args['default'] = $this->field->get_default()\n\t\t\t? $this->field->get_default()\n\t\t\t: CMB2_Utils::timezone_string();\n\n\t\t$this->args = wp_parse_args( $this->args, array(\n\t\t\t'class'   => 'cmb2_select cmb2-select-timezone',\n\t\t\t'options' => wp_timezone_choice( $this->field->escaped_value() ),\n\t\t\t'desc'    => $this->_desc(),\n\t\t) );\n\n\t\treturn parent::render();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Multicheck.php","ext":"php","size":834,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB multicheck field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Multicheck extends CMB2_Type_Radio {\n\n\t\/**\n\t * The type of radio field\n\t *\n\t * @var string\n\t *\/\n\tpublic $type = 'checkbox';\n\n\tpublic function render( $args = array() ) {\n\t\t$classes = false === $this->field->args( 'select_all_button' )\n\t\t\t? 'cmb2-checkbox-list no-select-all cmb2-list'\n\t\t\t: 'cmb2-checkbox-list cmb2-list';\n\n\t\t$args = $this->parse_args( $this->type, array(\n\t\t\t'class'   => $classes,\n\t\t\t'options' => $this->concat_items( array(\n\t\t\t\t'name'   => $this->_name() . '[]',\n\t\t\t\t'method' => 'list_input_checkbox',\n\t\t\t) ),\n\t\t\t'desc' => $this->_desc( true ),\n\t\t) );\n\n\t\treturn $this->rendered( $this->ul( $args ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_File_Base.php","ext":"php","size":8638,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB File base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_File_Base extends CMB2_Type_Text {\n\n\t\/**\n\t * Determines if a file has a valid image extension\n\t *\n\t * @since  1.0.0\n\t * @param  string $file File url\n\t * @return bool         Whether file has a valid image extension\n\t *\/\n\tpublic function is_valid_img_ext( $file, $blah = false ) {\n\t\t$file_ext = CMB2_Utils::get_file_ext( $file );\n\n\t\t$valid_types = array( 'jpg', 'jpeg', 'jpe', 'png', 'gif', 'ico', 'icon' );\n\n\t\t$allowed = get_allowed_mime_types();\n\t\tif ( ! empty( $allowed ) ) {\n\t\t\tforeach ( (array) $allowed as $type => $mime) {\n\t\t\t\tif ( 0 === strpos( $mime, 'image\/' ) ) {\n\t\t\t\t\t$types = explode( '|', $type );\n\t\t\t\t\t$valid_types = array_merge( $valid_types, $types );\n\t\t\t\t}\n\t\t\t}\n\t\t\t$valid_types = array_unique( $valid_types );\n\t\t}\n\n\t\t\/**\n\t\t * Which image types are considered valid image file extensions.\n\t\t *\n\t\t * @since 2.0.9\n\t\t *\n\t\t * @param array $valid_types The valid image file extensions.\n\t\t *\/\n\t\t$is_valid_types = apply_filters( 'cmb2_valid_img_types', $valid_types );\n\t\t$is_valid = $file_ext && in_array( $file_ext, (array) $is_valid_types );\n\t\t$field_id = $this->field->id();\n\n\t\t\/**\n\t\t * Filter for determining if a field value has a valid image file-type extension.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_id, refers to the field id attribute.\n\t\t *\n\t\t * @since 2.0.9\n\t\t *\n\t\t * @param bool   $is_valid Whether field value has a valid image file-type extension.\n\t\t * @param string $file     File url.\n\t\t * @param string $file_ext File extension.\n\t\t *\/\n\t\treturn (bool) apply_filters( \"cmb2_{$field_id}_is_valid_img_ext\", $is_valid, $file, $file_ext );\n\t}\n\n\t\/**\n\t * file\/file_list image wrap\n\t *\n\t * @since  2.0.2\n\t * @param  array $args Array of arguments for output\n\t * @return string       Image wrap output\n\t *\/\n\tpublic function img_status_output( $args ) {\n\t\treturn sprintf( '<%1$s class=\"img-status cmb2-media-item\">%2$s<p class=\"cmb2-remove-wrapper\"><a href=\"#\" class=\"cmb2-remove-file-button\"%3$s>%4$s<\/a><\/p>%5$s<\/%1$s>',\n\t\t\t$args['tag'],\n\t\t\t$args['image'],\n\t\t\tisset( $args['cached_id'] ) ? ' rel=\"' . esc_attr( $args['cached_id'] ) . '\"' : '',\n\t\t\tesc_html( $this->_text( 'remove_image_text', esc_html__( 'Remove Image', 'cmb2' ) ) ),\n\t\t\tisset( $args['id_input'] ) ? $args['id_input'] : ''\n\t\t);\n\t}\n\n\t\/**\n\t * file\/file_list file wrap\n\t *\n\t * @since  2.0.2\n\t * @param  array $args Array of arguments for output\n\t * @return string       File wrap output\n\t *\/\n\tpublic function file_status_output( $args ) {\n\t\treturn sprintf( '<%1$s class=\"file-status cmb2-media-item\"><span>%2$s <strong>%3$s<\/strong><\/span>&nbsp;&nbsp; (<a href=\"%4$s\" target=\"_blank\" rel=\"external\">%5$s<\/a> \/ <a href=\"#\" class=\"cmb2-remove-file-button\"%6$s>%7$s<\/a>)%8$s<\/%1$s>',\n\t\t\t$args['tag'],\n\t\t\tesc_html( $this->_text( 'file_text', esc_html__( 'File:', 'cmb2' ) ) ),\n\t\t\tesc_html( CMB2_Utils::get_file_name_from_path( $args['value'] ) ),\n\t\t\tesc_url( $args['value'] ),\n\t\t\tesc_html( $this->_text( 'file_download_text', esc_html__( 'Download', 'cmb2' ) ) ),\n\t\t\tisset( $args['cached_id'] ) ? ' rel=\"' . esc_attr( $args['cached_id'] ) . '\"' : '',\n\t\t\tesc_html( $this->_text( 'remove_text', esc_html__( 'Remove', 'cmb2' ) ) ),\n\t\t\tisset( $args['id_input'] ) ? $args['id_input'] : ''\n\t\t);\n\t}\n\n\t\/**\n\t * Outputs the file\/file_list underscore Javascript templates in the footer.\n\t *\n\t * @since  2.2.4\n\t * @return void\n\t *\/\n\tpublic static function output_js_underscore_templates() {\n\t\t?>\n\t\t<script type=\"text\/html\" id=\"tmpl-cmb2-single-image\">\n\t\t\t<div class=\"img-status cmb2-media-item\">\n\t\t\t\t<img width=\"{{ data.sizeWidth }}\" height=\"{{ data.sizeHeight }}\" src=\"{{ data.sizeUrl }}\" class=\"cmb-file-field-image\" alt=\"{{ data.filename }}\" title=\"{{ data.filename }}\" \/>\n\t\t\t\t<p><a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}\">{{ data.stringRemoveImage }}<\/a><\/p>\n\t\t\t<\/div>\n\t\t<\/script>\n\t\t<script type=\"text\/html\" id=\"tmpl-cmb2-single-file\">\n\t\t\t<div class=\"file-status cmb2-media-item\">\n\t\t\t\t<span>{{ data.stringFile }} <strong>{{ data.filename }}<\/strong><\/span>&nbsp;&nbsp; (<a href=\"{{ data.url }}\" target=\"_blank\" rel=\"external\">{{ data.stringDownload }}<\/a> \/ <a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}\">{{ data.stringRemoveFile }}<\/a>)\n\t\t\t<\/div>\n\t\t<\/script>\n\t\t<script type=\"text\/html\" id=\"tmpl-cmb2-list-image\">\n\t\t\t<li class=\"img-status cmb2-media-item\">\n\t\t\t\t<img width=\"{{ data.sizeWidth }}\" height=\"{{ data.sizeHeight }}\" src=\"{{ data.sizeUrl }}\" class=\"cmb-file_list-field-image\" alt=\"{{ data.filename }}\">\n\t\t\t\t<p><a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}[{{ data.id }}]\">{{ data.stringRemoveImage }}<\/a><\/p>\n\t\t\t\t<input type=\"hidden\" id=\"filelist-{{ data.id }}\" data-id=\"{{ data.id }}\" name=\"{{ data.mediaFieldName }}[{{ data.id }}]\" value=\"{{ data.url }}\">\n\t\t\t<\/li>\n\t\t<\/script>\n\t\t<script type=\"text\/html\" id=\"tmpl-cmb2-list-file\">\n\t\t\t<li class=\"file-status cmb2-media-item\">\n\t\t\t\t<span>{{ data.stringFile }} <strong>{{ data.filename }}<\/strong><\/span>&nbsp;&nbsp; (<a href=\"{{ data.url }}\" target=\"_blank\" rel=\"external\">{{ data.stringDownload }}<\/a> \/ <a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}[{{ data.id }}]\">{{ data.stringRemoveFile }}<\/a>)\n\t\t\t\t<input type=\"hidden\" id=\"filelist-{{ data.id }}\" data-id=\"{{ data.id }}\" name=\"{{ data.mediaFieldName }}[{{ data.id }}]\" value=\"{{ data.url }}\">\n\t\t\t<\/li>\n\t\t<\/script>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Utility method to return an array of meta data for a registered image size\n\t *\n\t * Uses CMB2_Utils::get_named_size() to get the closest available named size\n\t * from an array of width and height values and CMB2_Utils::get_available_image_sizes()\n\t * to get the meta data associated with a named size.\n\t *\n\t * @since  2.2.4\n\t * @param  array|string $img_size  Image size. Accepts an array of width and height (in that order)\n\t * @param  string       $fallback  Size to use if the supplied named size doesn't exist\n\t * @return array                   Array containing the image size meta data\n\t *    $size = (\n\t *      'width'  => (int) image size width\n\t *      'height' => (int) image size height\n\t *      'name'   => (string) e.g. 'thumbnail'\n\t *    )\n\t *\/\n\tstatic function get_image_size_data( $img_size = '', $fallback = 'thumbnail' ) {\n\t\t$data = array();\n\n\t\tif ( is_array( $img_size ) ) {\n\t\t\t$data['width']  = intval( $img_size[0] );\n\t\t\t$data['height'] = intval( $img_size[1] );\n\t\t\t$data['name']   = '';\n\n\t\t\t\/\/ Try and get the closest named size from our array of dimensions\n\t\t\tif ( $named_size = CMB2_Utils::get_named_size( $img_size ) ) {\n\t\t\t\t$data['name'] = $named_size;\n\t\t\t}\n\t\t} else {\n\n\t\t\t$image_sizes = CMB2_Utils::get_available_image_sizes();\n\n\t\t\t\/\/ The 'thumb' alias, which works elsewhere, doesn't work in the wp.media uploader\n\t\t\tif ( 'thumb' == $img_size ) {\n\t\t\t\t$img_size = 'thumbnail';\n\t\t\t}\n\n\t\t\t\/\/ Named size doesn't exist, use $fallback\n\t\t\tif ( ! array_key_exists( $img_size, $image_sizes ) ) {\n\t\t\t\t$img_size = $fallback;\n\t\t\t}\n\n\t\t\t\/\/ Get image dimensions from named sizes\n\t\t\t$data['width']  = intval( $image_sizes[ $img_size ]['width'] );\n\t\t\t$data['height'] = intval( $image_sizes[ $img_size ]['height'] );\n\t\t\t$data['name']   = $img_size;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t\/**\n\t * Filters attachment data prepared for JavaScript.\n\t *\n\t * Adds the url, width, height, and orientation for custom sizes to the JavaScript\n\t * object returned by the wp.media uploader. Hooked to 'wp_prepare_attachment_for_js'.\n\t *\n\t * @since  2.2.4\n\t * @param  array      $response   Array of prepared attachment data\n\t * @param  int|object $attachment Attachment ID or object\n\t * @param  array      $meta       Array of attachment meta data ( from wp_get_attachment_metadata() )\n\t * @return array      filtered $response array\n\t *\/\n\tpublic static function prepare_image_sizes_for_js( $response, $attachment, $meta ) {\n\t\tforeach ( CMB2_Utils::get_available_image_sizes() as $size => $info ) {\n\n\t\t\t\/\/ registered image size exists for this attachment\n\t\t\tif ( isset( $meta['sizes'][ $size ] ) ) {\n\n\t\t\t\t$attachment_url = wp_get_attachment_url( $attachment->ID );\n\t\t\t\t$base_url = str_replace( wp_basename( $attachment_url ), '', $attachment_url );\n\t\t\t\t$size_meta = $meta['sizes'][ $size ];\n\n\t\t\t\t$response['sizes'][ $size ] = array(\n\t\t\t\t\t'url'         => $base_url . $size_meta['file'],\n\t\t\t\t\t'height'      => $size_meta['height'],\n\t\t\t\t\t'width'       => $size_meta['width'],\n\t\t\t\t\t'orientation' => $size_meta['height'] > $size_meta['width'] ? 'portrait' : 'landscape',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn $response;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Title.php","ext":"php","size":997,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB title field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Title extends CMB2_Type_Base {\n\n\t\/**\n\t * Handles outputting an 'title' element\n\t *\n\t * @return string Heading element\n\t *\/\n\tpublic function render() {\n\t\t$name = $this->field->args( 'name' );\n\t\t$tag  = 'span';\n\n\t\tif ( ! empty( $name ) ) {\n\t\t\t$tag = $this->field->object_type == 'post' ? 'h5' : 'h3';\n\t\t}\n\n\t\t$a = $this->parse_args( 'title', array(\n\t\t\t'tag'   => $tag,\n\t\t\t'class' => empty( $name ) ? 'cmb2-metabox-title-anchor' : 'cmb2-metabox-title',\n\t\t\t'name'  => $name,\n\t\t\t'desc'  => $this->_desc( true ),\n\t\t\t'id'    => str_replace( '_', '-', sanitize_html_class( $this->field->id() ) ),\n\t\t) );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf(\n\t\t\t\t'<%1$s %2$s>%3$s<\/%1$s>%4$s',\n\t\t\t\t$a['tag'],\n\t\t\t\t$this->concat_attrs( $a, array( 'tag', 'name', 'desc' ) ),\n\t\t\t\t$a['name'],\n\t\t\t\t$a['desc']\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Base.php","ext":"php","size":4749,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nabstract class CMB2_Type_Base {\n\n\t\/**\n\t * The CMB2_Types object\n\t *\n\t * @var CMB2_Types\n\t *\/\n\tpublic $types;\n\n\t\/**\n\t * Arguments for use in the render method\n\t *\n\t * @var array\n\t *\/\n\tpublic $args;\n\n\t\/**\n\t * Rendered output (if 'rendered' argument is set to false)\n\t *\n\t * @var string\n\t *\/\n\tprotected $rendered = '';\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t * @param CMB2_Types $types Object for the field type.\n\t * @param array      $args  Array of arguments for the type.\n\t *\/\n\tpublic function __construct( CMB2_Types $types, $args = array() ) {\n\t\t$this->types      = $types;\n\t\t$args['rendered'] = isset( $args['rendered'] ) ? (bool) $args['rendered'] : true;\n\t\t$this->args       = $args;\n\t}\n\n\t\/**\n\t * Handles rendering this field type.\n\t *\n\t * @since  2.2.2\n\t * @return string  Rendered field type.\n\t *\/\n\tabstract public function render();\n\n\t\/**\n\t * Stores the rendered field output.\n\t *\n\t * @since  2.2.2\n\t * @param  string|CMB2_Type_Base $rendered Rendered output.\n\t * @return string|CMB2_Type_Base           Rendered output or this object.\n\t *\/\n\tpublic function rendered( $rendered ) {\n\t\t$this->field->register_js_data();\n\n\t\tif ( $this->args['rendered'] ) {\n\t\t\treturn is_a( $rendered, __CLASS__ ) ? $rendered->rendered : $rendered;\n\t\t}\n\n\t\t$this->rendered = is_a( $rendered, __CLASS__ ) ? $rendered->rendered : $rendered;\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Returns the stored rendered field output.\n\t *\n\t * @since  2.2.2\n\t * @return string Stored rendered output (if 'rendered' argument is set to false).\n\t *\/\n\tpublic function get_rendered() {\n\t\treturn $this->rendered;\n\t}\n\n\t\/**\n\t * Handles parsing and filtering attributes while preserving any passed in via field config.\n\t *\n\t * @since  1.1.0\n\t * @param  string $element        Element for filter.\n\t * @param  array  $type_defaults  Type default arguments.\n\t * @param  array  $type_overrides Type override arguments.\n\t * @return array                  Parsed and filtered arguments.\n\t *\/\n\tpublic function parse_args( $element, $type_defaults, $type_overrides = array() ) {\n\t\t$args = $this->parse_args_from_overrides( $type_overrides );\n\n\t\t\/**\n\t\t * Filter attributes for a field type.\n\t\t * The dynamic portion of the hook name, $element, refers to the field type.\n\t\t *\n\t\t * @since 1.1.0\n\t\t * @param array  $args              The array of attribute arguments.\n\t\t * @param array  $type_defaults     The array of default values.\n\t\t * @param array  $field             The `CMB2_Field` object.\n\t\t * @param object $field_type_object This `CMB2_Types` object.\n\t\t *\/\n\t\t$args = apply_filters( \"cmb2_{$element}_attributes\", $args, $type_defaults, $this->field, $this->types );\n\n\t\t$args = wp_parse_args( $args, $type_defaults );\n\n\t\tif ( ! empty( $args['js_dependencies'] ) ) {\n\t\t\t$this->field->add_js_dependencies( $args['js_dependencies'] );\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Handles parsing and filtering attributes while preserving any passed in via field config.\n\t *\n\t * @since  2.2.4\n\t * @param  array $type_overrides Type override arguments.\n\t * @return array                 Parsed arguments\n\t *\/\n\tprotected function parse_args_from_overrides( $type_overrides = array() ) {\n\t\t$type_overrides = empty( $type_overrides ) ? $this->args : $type_overrides;\n\n\t\tif ( true !== $this->field->args( 'disable_hash_data_attribute' ) ) {\n\t\t\t$type_overrides['data-hash'] = $this->field->hash_id();\n\t\t}\n\n\t\t$field_overrides = $this->field->args( 'attributes' );\n\n\t\treturn ! empty( $field_overrides )\n\t\t\t? wp_parse_args( $field_overrides, $type_overrides )\n\t\t\t: $type_overrides;\n\t}\n\n\t\/**\n\t * Fall back to CMB2_Types methods\n\t *\n\t * @param  string $method    Method name being invoked.\n\t * @param  array  $arguments Arguments passed for the method.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t *\/\n\tpublic function __call( $method, $arguments ) {\n\t\tswitch ( $method ) {\n\t\t\tcase '_id':\n\t\t\tcase '_name':\n\t\t\tcase '_desc':\n\t\t\tcase '_text':\n\t\t\tcase 'concat_attrs':\n\t\t\t\treturn call_user_func_array( array( $this->types, $method ), $arguments );\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s method: %2$s', 'cmb2' ), __CLASS__, $method ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Magic getter for our object.\n\t *\n\t * @param string $field Property being requested.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t *\/\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'field':\n\t\t\t\treturn $this->types->field;\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s property: %2$s', 'cmb2' ), __CLASS__, $field ) );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Text_Datetime_Timestamp_Timezone.php","ext":"php","size":1747,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB text_datetime_timestamp_timezone field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Text_Datetime_Timestamp_Timezone extends CMB2_Type_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$value = $field->escaped_value();\n\t\tif ( empty( $value ) ) {\n\t\t\t$value = $field->get_default();\n\t\t}\n\n\t\t$args = wp_parse_args( $this->args, array(\n\t\t\t'value'                   => $value,\n\t\t\t'desc'                    => $this->_desc( true ),\n\t\t\t'text_datetime_timestamp' => array(),\n\t\t\t'select_timezone'         => array(),\n\t\t) );\n\n\t\t$args['value'] = $value;\n\t\tif ( is_array( $args['value'] ) ) {\n\t\t\t$args['value'] = '';\n\t\t}\n\n\t\t$datetime = CMB2_Utils::get_datetime_from_value( $args['value'] );\n\t\t$value    = '';\n\t\t$tzstring = '';\n\n\t\tif ( $datetime && $datetime instanceof DateTime ) {\n\t\t\t$tzstring = $datetime->getTimezone()->getName();\n\t\t\t$value    = $datetime->getTimestamp();\n\t\t}\n\n\t\t$timestamp_args = wp_parse_args( $args['text_datetime_timestamp'], array(\n\t\t\t'desc'     => '',\n\t\t\t'value'    => $value,\n\t\t\t'rendered' => true,\n\t\t) );\n\t\t$datetime_timestamp = $this->types->text_datetime_timestamp( $timestamp_args );\n\n\t\t$timezone_select_args = wp_parse_args( $args['select_timezone'], array(\n\t\t\t'class'    => 'cmb2_select cmb2-select-timezone',\n\t\t\t'name'     => $this->_name( '[timezone]' ),\n\t\t\t'id'       => $this->_id( '_timezone' ),\n\t\t\t'options'  => wp_timezone_choice( $tzstring ),\n\t\t\t'desc'     => $args['desc'],\n\t\t\t'rendered' => true,\n\t\t) );\n\t\t$select = $this->types->select( $timezone_select_args );\n\n\t\treturn $this->rendered(\n\t\t\t$datetime_timestamp . \"\\n\" . $select\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Picker_Base.php","ext":"php","size":1382,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB Picker base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nabstract class CMB2_Type_Picker_Base extends CMB2_Type_Text {\n\n\t\/**\n\t * Parse the picker attributes.\n\t *\n\t * @since  2.2.0\n\t * @param  string $arg  'date' or 'time'\n\t * @param  array  $args Optional arguments to modify (else use $this->field->args['attributes'])\n\t * @return array         Array of field attributes\n\t *\/\n\tpublic function parse_picker_options( $arg = 'date', $args = array() ) {\n\t\t$att    = 'data-' . $arg . 'picker';\n\t\t$update = empty( $args );\n\t\t$atts   = array();\n\t\t$format = $this->field->args( $arg . '_format' );\n\n\t\tif ( $js_format = CMB2_Utils::php_to_js_dateformat( $format ) ) {\n\n\t\t\tif ( $update ) {\n\t\t\t\t$atts = $this->field->args( 'attributes' );\n\t\t\t} else {\n\t\t\t\t$atts = isset( $args['attributes'] )\n\t\t\t\t\t? $args['attributes']\n\t\t\t\t\t: $atts;\n\t\t\t}\n\n\t\t\t\/\/ Don't override user-provided datepicker values\n\t\t\t$data = isset( $atts[ $att ] )\n\t\t\t\t? json_decode( $atts[ $att ], true )\n\t\t\t\t: array();\n\n\t\t\t$data[ $arg . 'Format' ] = $js_format;\n\t\t\t$atts[ $att ] = function_exists( 'wp_json_encode' )\n\t\t\t\t? wp_json_encode( $data )\n\t\t\t\t: json_encode( $data );\n\t\t}\n\n\t\tif ( $update ) {\n\t\t\t$this->field->args['attributes'] = $atts;\n\t\t}\n\n\t\treturn array_merge( $args, $atts );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Text.php","ext":"php","size":1409,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB text field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Text extends CMB2_Type_Counter_Base {\n\n\t\/**\n\t * The type of field\n\t *\n\t * @var string\n\t *\/\n\tpublic $type = 'input';\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types\n\t * @param array      $args\n\t *\/\n\tpublic function __construct( CMB2_Types $types, $args = array(), $type = '' ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->type = $type ? $type : $this->type;\n\t}\n\n\t\/**\n\t * Handles outputting an 'input' element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @return string       Form input element\n\t *\/\n\tpublic function render( $args = array() ) {\n\t\t$args = empty( $args ) ? $this->args : $args;\n\t\t$a = $this->parse_args( $this->type, array(\n\t\t\t'type'            => 'text',\n\t\t\t'class'           => 'regular-text',\n\t\t\t'name'            => $this->_name(),\n\t\t\t'id'              => $this->_id(),\n\t\t\t'value'           => $this->field->escaped_value(),\n\t\t\t'desc'            => $this->_desc( true ),\n\t\t\t'js_dependencies' => array(),\n\t\t), $args );\n\n\t\t\/\/ Add character counter?\n\t\t$a = $this->maybe_update_attributes_for_char_counter( $a );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<input%s\/>%s', $this->concat_attrs( $a, array( 'desc' ) ), $a['desc'] )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Oembed.php","ext":"php","size":1033,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB oembed field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Oembed extends CMB2_Type_Text {\n\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$meta_value = trim( $field->escaped_value() );\n\n\t\t$oembed = ! empty( $meta_value )\n\t\t\t? cmb2_ajax()->get_oembed( array(\n\t\t\t\t'url'         => $field->escaped_value(),\n\t\t\t\t'object_id'   => $field->object_id,\n\t\t\t\t'object_type' => $field->object_type,\n\t\t\t\t'oembed_args' => array(\n\t\t\t\t\t'width' => '640',\n\t\t\t\t),\n\t\t\t\t'field_id'    => $this->_id( '', false ),\n\t\t\t) )\n\t\t\t: '';\n\n\t\treturn parent::render( array(\n\t\t\t'class'           => 'cmb2-oembed regular-text',\n\t\t\t'data-objectid'   => $field->object_id,\n\t\t\t'data-objecttype' => $field->object_type,\n\t\t) )\n\t\t. '<p class=\"cmb-spinner spinner\"><\/p>'\n\t\t. '<div id=\"' . $this->_id( '-status' ) . '\" class=\"cmb2-media-status ui-helper-clearfix embed_wrap\">' . $oembed . '<\/div>';\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Taxonomy_Radio_Hierarchical.php","ext":"php","size":842,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB taxonomy_radio_hierarchical field type\n *\n * @since  2.2.5\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Taxonomy_Radio_Hierarchical extends CMB2_Type_Taxonomy_Radio {\n\n\t\/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @var integer\n\t *\/\n\tprotected $parent = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_radio_hierarchical' )\n\t\t);\n\t}\n\n\tprotected function list_term_input( $term, $saved_term ) {\n\t\t$options = parent::list_term_input( $term, $saved_term );\n\t\t$children = $this->build_children( $term, $saved_term );\n\n\t\tif ( ! empty( $children ) ) {\n\t\t\t$options .= $children;\n\t\t}\n\n\t\treturn $options;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Textarea.php","ext":"php","size":1041,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB textarea field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Textarea extends CMB2_Type_Counter_Base {\n\n\t\/**\n\t * Handles outputting an 'textarea' element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @return string       Form textarea element\n\t *\/\n\tpublic function render( $args = array() ) {\n\t\t$args = empty( $args ) ? $this->args : $args;\n\t\t$a = $this->parse_args( 'textarea', array(\n\t\t\t'class' => 'cmb2_textarea',\n\t\t\t'name'  => $this->_name(),\n\t\t\t'id'    => $this->_id(),\n\t\t\t'cols'  => 60,\n\t\t\t'rows'  => 10,\n\t\t\t'value' => $this->field->escaped_value( 'esc_textarea' ),\n\t\t\t'desc'  => $this->_desc( true ),\n\t\t), $args );\n\n\t\t\/\/ Add character counter?\n\t\t$a = $this->maybe_update_attributes_for_char_counter( $a );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<textarea%s>%s<\/textarea>%s', $this->concat_attrs( $a, array( 'desc', 'value' ) ), $a['value'], $a['desc'] )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_File_List.php","ext":"php","size":2326,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB file_list field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_File_List extends CMB2_Type_File_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$field      = $this->field;\n\t\t$meta_value = $field->escaped_value();\n\t\t$name       = $this->_name();\n\t\t$img_size   = $field->args( 'preview_size' );\n\t\t$query_args = $field->args( 'query_args' );\n\t\t$output     = '';\n\n\t\t\/\/ get an array of image size meta data, fallback to 'thumbnail'\n\t\t$img_size_data = parent::get_image_size_data( $img_size, 'thumbnail' );\n\n\t\t$output .= parent::render( array(\n\t\t\t'type'  => 'hidden',\n\t\t\t'class' => 'cmb2-upload-file cmb2-upload-list',\n\t\t\t'size'  => 45,\n\t\t\t'desc'  => '',\n\t\t\t'value' => '',\n\t\t\t'data-previewsize' => sprintf( '[%d,%d]', $img_size_data['width'], $img_size_data['height'] ),\n\t\t\t'data-sizename'    => $img_size_data['name'],\n\t\t\t'data-queryargs'   => ! empty( $query_args ) ? json_encode( $query_args ) : '',\n\t\t\t'js_dependencies'  => 'media-editor',\n\t\t) );\n\n\t\t$output .= parent::render( array(\n\t\t\t'type'  => 'button',\n\t\t\t'class' => 'cmb2-upload-button button-secondary cmb2-upload-list',\n\t\t\t'value' => esc_attr( $this->_text( 'add_upload_files_text', esc_html__( 'Add or Upload Files', 'cmb2' ) ) ),\n\t\t\t'name'  => false,\n\t\t\t'id'    => false,\n\t\t) );\n\n\t\t$output .= '<ul id=\"' . $this->_id( '-status', false ) . '\" class=\"cmb2-media-status cmb-attach-list\">';\n\n\t\tif ( $meta_value && is_array( $meta_value ) ) {\n\n\t\t\tforeach ( $meta_value as $id => $fullurl ) {\n\t\t\t\t$id_input = parent::render( array(\n\t\t\t\t\t'type'    => 'hidden',\n\t\t\t\t\t'value'   => $fullurl,\n\t\t\t\t\t'name'    => $name . '[' . $id . ']',\n\t\t\t\t\t'id'      => 'filelist-' . $id,\n\t\t\t\t\t'data-id' => $id,\n\t\t\t\t\t'desc'    => '',\n\t\t\t\t\t'class'   => false,\n\t\t\t\t) );\n\n\t\t\t\tif ( $this->is_valid_img_ext( $fullurl ) ) {\n\n\t\t\t\t\t$output .= $this->img_status_output( array(\n\t\t\t\t\t\t'image'    => wp_get_attachment_image( $id, $img_size ),\n\t\t\t\t\t\t'tag'      => 'li',\n\t\t\t\t\t\t'id_input' => $id_input,\n\t\t\t\t\t) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$output .= $this->file_status_output( array(\n\t\t\t\t\t\t'value'    => $fullurl,\n\t\t\t\t\t\t'tag'      => 'li',\n\t\t\t\t\t\t'id_input' => $id_input,\n\t\t\t\t\t) );\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$output .= '<\/ul>';\n\n\t\treturn $this->rendered( $output );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Text_Time.php","ext":"php","size":658,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB text_time field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Text_Time extends CMB2_Type_Text_Date {\n\n\tpublic function render( $args = array() ) {\n\t\t$this->args = $this->parse_picker_options( 'time', wp_parse_args( $this->args, array(\n\t\t\t'class'           => 'cmb2-timepicker text-time',\n\t\t\t'value'           => $this->field->get_timestamp_format( 'time_format' ),\n\t\t\t'js_dependencies' => array( 'jquery-ui-core', 'jquery-ui-datepicker', 'jquery-ui-datetimepicker' ),\n\t\t) ) );\n\n\t\treturn parent::render();\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Colorpicker.php","ext":"php","size":2862,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB colorpicker field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Colorpicker extends CMB2_Type_Text {\n\n\t\/**\n\t * The optional value for the colorpicker field\n\t *\n\t * @var string\n\t *\/\n\tpublic $value = '';\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types Object for the field type.\n\t * @param array      $args  Array of arguments for the type.\n\t * @param string     $value Value that the field type is currently set to, or default value.\n\t *\/\n\tpublic function __construct( CMB2_Types $types, $args = array(), $value = '' ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->value = $value ? $value : $this->value;\n\t}\n\n\t\/**\n\t * Render the field for the field type.\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param array $args Array of arguments for the rendering.\n\t *\n\t * @return CMB2_Type_Base|string\n\t *\/\n\tpublic function render( $args = array() ) {\n\t\t$meta_value = $this->value ? $this->value : $this->field->escaped_value();\n\n\t\t$meta_value = self::sanitize_color( $meta_value );\n\n\t\twp_enqueue_style( 'wp-color-picker' );\n\n\t\t$args = wp_parse_args( $args, array(\n\t\t\t'class' => 'cmb2-text-small',\n\t\t) );\n\n\t\t$args['class']          .= ' cmb2-colorpicker';\n\t\t$args['value']           = $meta_value;\n\t\t$args['js_dependencies'] = array( 'wp-color-picker' );\n\n\t\tif ( $this->field->options( 'alpha' ) ) {\n\t\t\t$args['js_dependencies'][] = 'wp-color-picker-alpha';\n\t\t\t$args['data-alpha']        = 'true';\n\t\t}\n\n\t\t$args = wp_parse_args( $this->args, $args );\n\n\t\treturn parent::render( $args );\n\t}\n\n\t\/**\n\t * Sanitizes the given color, or array of colors.\n\t *\n\t * @since 2.9.0\n\t *\n\t * @param string|array $color The color or array of colors to sanitize.\n\t *\n\t * @return string|array The color or array of colors, sanitized.\n\t *\/\n\tpublic static function sanitize_color( $color ) {\n\n\t\tif ( is_array( $color ) ) {\n\n\t\t\t$color = array_map( array( 'CMB2_Type_Colorpicker', 'sanitize_color' ), $color );\n\n\t\t} else {\n\n\t\t\t\/\/ Regexp for hexadecimal colors\n\t\t\t$hex_color = '(([a-fA-F0-9]){3}){1,2}$';\n\n\t\t\tif ( preg_match( '\/^' . $hex_color . '\/i', $color ) ) {\n\t\t\t\t\/\/ Value is just 123abc, so prepend #\n\t\t\t\t$color = '#' . $color;\n\t\t\t} elseif (\n\t\t\t\t\/\/ If value doesn't match #123abc...\n\t\t\t\t! preg_match( '\/^#' . $hex_color . '\/i', $color )\n\t\t\t\t\/\/ And value doesn't match rgba()...\n\t\t\t\t&& 0 !== strpos( trim( $color ), 'rgba' )\n\t\t\t) {\n\t\t\t\t\/\/ Then sanitize to just #.\n\t\t\t\t$color = '#';\n\t\t\t}\n\n\t\t}\n\n\t\treturn $color;\n\t}\n\n\t\/**\n\t * Provide the option to use a rgba colorpicker.\n\t *\n\t * @since 2.2.6.2\n\t *\/\n\tpublic static function dequeue_rgba_colorpicker_script() {\n\t\tif ( wp_script_is( 'jw-cmb2-rgba-picker-js', 'enqueued' ) ) {\n\t\t\twp_dequeue_script( 'jw-cmb2-rgba-picker-js' );\n\t\t\tCMB2_JS::register_colorpicker_alpha( true );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Taxonomy_Multicheck.php","ext":"php","size":1809,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB taxonomy_multicheck field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Taxonomy_Multicheck extends CMB2_Type_Taxonomy_Base {\n\tprotected $counter = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'class'   => $this->get_wrapper_classes(),\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_multicheck' )\n\t\t);\n\t}\n\n\tprotected function get_term_options() {\n\t\t$all_terms = $this->get_terms();\n\n\t\tif ( ! $all_terms || is_wp_error( $all_terms ) ) {\n\t\t\treturn $this->no_terms_result( $all_terms );\n\t\t}\n\n\t\treturn $this->loop_terms( $all_terms, $this->get_object_term_or_default() );\n\t}\n\n\tprotected function loop_terms( $all_terms, $saved_terms ) {\n\t\t$options = '';\n\t\tforeach ( $all_terms as $term ) {\n\t\t\t$options .= $this->list_term_input( $term, $saved_terms );\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\tprotected function list_term_input( $term, $saved_terms ) {\n\t\t$args = array(\n\t\t\t'value' => $term->slug,\n\t\t\t'label' => $term->name,\n\t\t\t'type'  => 'checkbox',\n\t\t\t'name'  => $this->_name() . '[]',\n\t\t);\n\n\t\tif ( is_array( $saved_terms ) && in_array( $term->slug, $saved_terms ) ) {\n\t\t\t$args['checked'] = 'checked';\n\t\t}\n\n\t\treturn $this->list_input( $args, ++$this->counter );\n\t}\n\n\tpublic function get_object_term_or_default() {\n\t\t$saved_terms = $this->get_object_terms();\n\n\t\treturn is_wp_error( $saved_terms ) || empty( $saved_terms )\n\t\t\t? $this->field->get_default()\n\t\t\t: wp_list_pluck( $saved_terms, 'slug' );\n\t}\n\n\tprotected function get_wrapper_classes() {\n\t\t$classes = 'cmb2-checkbox-list cmb2-list';\n\t\tif ( false === $this->field->args( 'select_all_button' ) ) {\n\t\t\t$classes .= ' no-select-all';\n\t\t}\n\n\t\treturn $classes;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/types\/CMB2_Type_Textarea_Code.php","ext":"php","size":938,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB textarea_code field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Type_Textarea_Code extends CMB2_Type_Textarea {\n\n\t\/**\n\t * Handles outputting an 'textarea' element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @return string       Form textarea element\n\t *\/\n\tpublic function render( $args = array() ) {\n\t\t$args = wp_parse_args( $args, array(\n\t\t\t'class' => 'cmb2-textarea-code',\n\t\t\t'desc'  => '<\/pre>' . $this->_desc( true ),\n\t\t) );\n\n\t\tif ( true !== $this->field->options( 'disable_codemirror' )\n\t\t\t&& function_exists( 'wp_enqueue_code_editor' ) ) {\n\t\t\t$args['js_dependencies'] = array( 'code-editor' );\n\t\t} else {\n\t\t\t$args['class'] = rtrim( $args['class'] ) . ' disable-codemirror';\n\t\t}\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<pre>%s', parent::render( $args ) )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Hookup_Field.php","ext":"php","size":5888,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 Hookup Field\n *\n * Adds necessary hooks for certain field types.\n *\n * @since  2.11.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Hookup_Field {\n\n\t\/**\n\t * Field id.\n\t *\n\t * @var   string\n\t * @since 2.11.0\n\t *\/\n\tprotected $field_id;\n\n\t\/**\n\t * CMB2 object id.\n\t *\n\t * @var   string\n\t * @since 2.11.0\n\t *\/\n\tprotected $cmb_id;\n\n\t\/**\n\t * The object type we are performing the hookup for\n\t *\n\t * @var   string\n\t * @since 2.11.0\n\t *\/\n\tprotected $object_type = 'post';\n\n\t\/**\n\t * Initialize all hooks for the given field.\n\t *\n\t * @since  2.11.0\n\t * @param  array $field The field arguments array.\n\t * @param  CMB2  $cmb   The CMB2 object.\n\t * @return array        The field arguments array.\n\t *\/\n\tpublic static function init( $field, CMB2 $cmb ) {\n\t\tswitch ( $field['type'] ) {\n\t\t\tcase 'file':\n\t\t\tcase 'file_list':\n\t\t\t\t\/\/ Initiate attachment JS hooks.\n\t\t\t\tadd_filter( 'wp_prepare_attachment_for_js', array( 'CMB2_Type_File_Base', 'prepare_image_sizes_for_js' ), 10, 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'oembed':\n\t\t\t\t\/\/ Initiate oembed Ajax hooks.\n\t\t\t\tcmb2_ajax();\n\t\t\t\tbreak;\n\n\t\t\tcase 'group':\n\t\t\t\tif ( empty( $field['render_row_cb'] ) ) {\n\t\t\t\t\t$field['render_row_cb'] = array( $cmb, 'render_group_callback' );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'colorpicker':\n\t\t\t\t\/\/ https:\/\/github.com\/JayWood\/CMB2_RGBa_Picker\n\t\t\t\t\/\/ Dequeue the rgba_colorpicker custom field script if it is used,\n\t\t\t\t\/\/ since we now enqueue our own more current version.\n\t\t\t\tadd_action( 'admin_enqueue_scripts', array( 'CMB2_Type_Colorpicker', 'dequeue_rgba_colorpicker_script' ), 99 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'text_datetime_timestamp_timezone':\n\t\t\t\tforeach ( $cmb->box_types() as $object_type ) {\n\t\t\t\t\tif ( ! $cmb->is_supported_core_object_type( $object_type ) ) {\n\t\t\t\t\t\t\/\/ Ignore post-types...\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( empty( $field['field_hookup_instance'][ $object_type ] ) ) {\n\t\t\t\t\t\t$instance = new self( $field, $object_type, $cmb );\n\t\t\t\t\t\t$method   = 'options-page' === $object_type\n\t\t\t\t\t\t\t? 'text_datetime_timestamp_timezone_option_back_compat'\n\t\t\t\t\t\t\t: 'text_datetime_timestamp_timezone_back_compat';\n\n\t\t\t\t\t\t$field['field_hookup_instance'][ $object_type ] = array( $instance, $method );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( false === $field['field_hookup_instance'][ $object_type ] ) {\n\t\t\t\t\t\t\/\/ If set to false, no need to filter.\n\t\t\t\t\t\t\/\/ This can be set if you have updated your use of the field type value to\n\t\t\t\t\t\t\/\/ assume the JSON value.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'options-page' === $object_type ) {\n\t\t\t\t\t\t$option_name = $cmb->object_id();\n\t\t\t\t\t\tadd_filter( \"pre_option_{$option_name}\", $field['field_hookup_instance'][ $object_type ], 10, 3 );\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tadd_filter( \"get_{$object_type}_metadata\", $field['field_hookup_instance'][ $object_type ], 10, 5 );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $field;\n\t}\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.11.0\n\t * @param CMB2 $cmb The CMB2 object to hookup.\n\t *\/\n\tpublic function __construct( $field, $object_type, CMB2 $cmb ) {\n\t\t$this->field_id    = $field['id'];\n\t\t$this->object_type = $object_type;\n\t\t$this->cmb_id      = $cmb->cmb_id;\n\t}\n\n\t\/**\n\t * Adds a back-compat shim for text_datetime_timestamp_timezone field type values.\n\t *\n\t * Handles old serialized DateTime values, as well as the new JSON formatted values.\n\t *\n\t * @since  2.11.0\n\t *\n\t * @param  mixed  $value     The value of the metadata.\n\t * @param  int    $object_id ID of the object metadata is for.\n\t * @param  string $meta_key  Meta key.\n\t * @param  bool   $single    Whether to return a single value.\n\t * @param  string $meta_type Type of object metadata is for.\n\t * @return mixed             Maybe reserialized value.\n\t *\/\n\tpublic function text_datetime_timestamp_timezone_back_compat( $value, $object_id, $meta_key, $single, $meta_type ) {\n\t\tif ( $meta_key === $this->field_id ) {\n\t\t\tremove_filter( \"get_{$meta_type}_metadata\", [ $this, __FUNCTION__ ], 10, 5 );\n\t\t\t$value = get_metadata( $meta_type, $object_id, $meta_key, $single );\n\t\t\tadd_filter( \"get_{$meta_type}_metadata\", [ $this, __FUNCTION__ ], 10, 5 );\n\n\t\t\t$value = $this->reserialize_safe_value( $value );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Adds a back-compat shim for text_datetime_timestamp_timezone field type values on options pages.\n\t *\n\t * Handles old serialized DateTime values, as well as the new JSON formatted values.\n\t *\n\t * @since  2.11.0\n\t *\n\t * @param  mixed  $value         The value of the option.\n\t * @param  string $option        Option name.\n\t * @param  mixed  $default_value Default value.\n\t * @return mixed                 The updated value.\n\t *\/\n\tpublic function text_datetime_timestamp_timezone_option_back_compat( $value, $option, $default_value ) {\n\t\tremove_filter( \"pre_option_{$option}\", [ $this, __FUNCTION__ ], 10, 3 );\n\t\t$value = get_option( $option, $default_value );\n\t\tadd_filter( \"pre_option_{$option}\", [ $this, __FUNCTION__ ], 10, 3 );\n\n\t\tif ( ! empty( $value ) && is_array( $value ) ) {\n\n\t\t\t\/\/ Loop fields and update values for all text_datetime_timestamp_timezone fields.\n\t\t\tforeach ( CMB2_Boxes::get( $this->cmb_id )->prop( 'fields' ) as $field ) {\n\t\t\t\tif (\n\t\t\t\t\t'text_datetime_timestamp_timezone' === $field['type']\n\t\t\t\t\t&& ! empty( $value[ $field['id'] ] )\n\t\t\t\t) {\n\t\t\t\t\t$value[ $field['id'] ] = $this->reserialize_safe_value( $value[ $field['id'] ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t\/**\n\t * Reserialize a value to a safe serialized DateTime value.\n\t *\n\t * @since  2.11.0\n\t *\n\t * @param  mixed $value The value to check.\n\t * @return mixed       The value, possibly reserialized.\n\t *\/\n\tprotected function reserialize_safe_value( $value ) {\n\t\tif ( is_array( $value ) ) {\n\t\t\treturn array_map( [ $this, 'reserialize_safe_value' ], $value );\n\t\t}\n\n\t\t$updated_val = CMB2_Utils::get_datetime_from_value( $value );\n\t\t$value = $updated_val ? serialize( $updated_val ) : '';\n\n\t\treturn $value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_JS.php","ext":"php","size":8320,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Handles the dependencies and enqueueing of the CMB2 JS scripts\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_JS {\n\n\t\/**\n\t * The CMB2 JS handle\n\t *\n\t * @var   string\n\t * @since 2.0.7\n\t *\/\n\tprotected static $handle = 'cmb2-scripts';\n\n\t\/**\n\t * The CMB2 JS variable name\n\t *\n\t * @var   string\n\t * @since 2.0.7\n\t *\/\n\tprotected static $js_variable = 'cmb2_l10';\n\n\t\/**\n\t * Array of CMB2 JS dependencies\n\t *\n\t * @var   array\n\t * @since 2.0.7\n\t *\/\n\tprotected static $dependencies = array(\n\t\t'jquery' => 'jquery',\n\t);\n\n\t\/**\n\t * Array of CMB2 fields model data for JS.\n\t *\n\t * @var   array\n\t * @since 2.4.0\n\t *\/\n\tprotected static $fields = array();\n\n\t\/**\n\t * Add a dependency to the array of CMB2 JS dependencies\n\t *\n\t * @since 2.0.7\n\t * @param array|string $dependencies Array (or string) of dependencies to add.\n\t *\/\n\tpublic static function add_dependencies( $dependencies ) {\n\t\tforeach ( (array) $dependencies as $dependency ) {\n\t\t\tself::$dependencies[ $dependency ] = $dependency;\n\t\t}\n\t}\n\n\t\/**\n\t * Add field model data to the array for JS.\n\t *\n\t * @since 2.4.0\n\t *\n\t * @param CMB2_Field $field Field object.\n\t *\/\n\tpublic static function add_field_data( CMB2_Field $field ) {\n\t\t$hash = $field->hash_id();\n\t\tif ( ! isset( self::$fields[ $hash ] ) ) {\n\t\t\tself::$fields[ $hash ] = $field->js_data();\n\t\t}\n\t}\n\n\t\/**\n\t * Enqueue the CMB2 JS\n\t *\n\t * @since  2.0.7\n\t *\/\n\tpublic static function enqueue() {\n\t\t\/\/ Filter required script dependencies.\n\t\t$dependencies = self::$dependencies = apply_filters( 'cmb2_script_dependencies', self::$dependencies );\n\n\t\t\/\/ Only use minified files if SCRIPT_DEBUG is off.\n\t\t$debug = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG;\n\n\t\t$min = $debug ? '' : '.min';\n\n\t\t\/\/ if colorpicker.\n\t\tif ( isset( $dependencies['wp-color-picker'] ) ) {\n\t\t\tif ( ! is_admin() ) {\n\t\t\t\tself::colorpicker_frontend();\n\t\t\t}\n\n\t\t\t\/\/ Enqueue colorpicker\n\t\t\tif ( ! wp_script_is( 'wp-color-picker', 'enqueued' ) ) {\n\t\t\t\twp_enqueue_script( 'wp-color-picker' );\n\t\t\t}\n\n\t\t\tif ( isset( $dependencies['wp-color-picker-alpha'] ) ) {\n\t\t\t\tself::register_colorpicker_alpha();\n\t\t\t}\n\t\t}\n\n\t\t\/\/ if file\/file_list.\n\t\tif ( isset( $dependencies['media-editor'] ) ) {\n\t\t\twp_enqueue_media();\n\t\t\tCMB2_Type_File_Base::output_js_underscore_templates();\n\t\t}\n\n\t\t\/\/ if timepicker.\n\t\tif ( isset( $dependencies['jquery-ui-datetimepicker'] ) ) {\n\t\t\tself::register_datetimepicker();\n\t\t}\n\n\t\t\/\/ if cmb2-wysiwyg.\n\t\t$enqueue_wysiwyg = isset( $dependencies['cmb2-wysiwyg'] ) && $debug;\n\t\tunset( $dependencies['cmb2-wysiwyg'] );\n\n\t\t\/\/ if cmb2-char-counter.\n\t\t$enqueue_char_counter = isset( $dependencies['cmb2-char-counter'] ) && $debug;\n\t\tunset( $dependencies['cmb2-char-counter'] );\n\n\t\t\/\/ Enqueue cmb JS.\n\t\twp_enqueue_script( self::$handle, CMB2_Utils::url( \"js\/cmb2{$min}.js\" ), array_values( $dependencies ), CMB2_VERSION, true );\n\n\t\t\/\/ if SCRIPT_DEBUG, we need to enqueue separately.\n\t\tif ( $enqueue_wysiwyg ) {\n\t\t\twp_enqueue_script( 'cmb2-wysiwyg', CMB2_Utils::url( 'js\/cmb2-wysiwyg.js' ), array( 'jquery', 'wp-util' ), CMB2_VERSION );\n\t\t}\n\t\tif ( $enqueue_char_counter ) {\n\t\t\twp_enqueue_script( 'cmb2-char-counter', CMB2_Utils::url( 'js\/cmb2-char-counter.js' ), array( 'jquery', 'wp-util' ), CMB2_VERSION );\n\t\t}\n\n\t\tself::localize( $debug );\n\n\t\tdo_action( 'cmb2_footer_enqueue' );\n\t}\n\n\t\/**\n\t * Register or enqueue the wp-color-picker-alpha script.\n\t *\n\t * @since  2.2.7\n\t *\n\t * @param  boolean $enqueue Whether or not to enqueue.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function register_colorpicker_alpha( $enqueue = false ) {\n\t\t\/\/ Only use minified files if SCRIPT_DEBUG is off.\n\t\t$min = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';\n\t\t$func = $enqueue ? 'wp_enqueue_script' : 'wp_register_script';\n\t\t$func( 'wp-color-picker-alpha', CMB2_Utils::url( \"js\/wp-color-picker-alpha{$min}.js\" ), array( 'wp-color-picker' ), '2.1.3' );\n\t}\n\n\t\/**\n\t * Register or enqueue the jquery-ui-datetimepicker script.\n\t *\n\t * @since  2.2.7\n\t *\n\t * @param  boolean $enqueue Whether or not to enqueue.\n\t *\n\t * @return void\n\t *\/\n\tpublic static function register_datetimepicker( $enqueue = false ) {\n\t\t$func = $enqueue ? 'wp_enqueue_script' : 'wp_register_script';\n\t\t$func( 'jquery-ui-datetimepicker', CMB2_Utils::url( 'js\/jquery-ui-timepicker-addon.min.js' ), array( 'jquery-ui-slider' ), '1.5.0' );\n\t}\n\n\t\/**\n\t * We need to register colorpicker on the front-end\n\t *\n\t * @since  2.0.7\n\t *\/\n\tprotected static function colorpicker_frontend() {\n\t\twp_register_script( 'iris', admin_url( 'js\/iris.min.js' ), array( 'jquery-ui-draggable', 'jquery-ui-slider', 'jquery-touch-punch' ), CMB2_VERSION );\n\t\twp_register_script( 'wp-color-picker', admin_url( 'js\/color-picker.min.js' ), array( 'iris' ), CMB2_VERSION );\n\t\twp_localize_script( 'wp-color-picker', 'wpColorPickerL10n', array(\n\t\t\t'clear'         => esc_html__( 'Clear', 'cmb2' ),\n\t\t\t'defaultString' => esc_html__( 'Default', 'cmb2' ),\n\t\t\t'pick'          => esc_html__( 'Select Color', 'cmb2' ),\n\t\t\t'current'       => esc_html__( 'Current Color', 'cmb2' ),\n\t\t) );\n\t}\n\n\t\/**\n\t * Localize the php variables for CMB2 JS\n\t *\n\t * @since  2.0.7\n\t *\n\t * @param mixed $debug Whether or not we are debugging.\n\t *\/\n\tprotected static function localize( $debug ) {\n\t\tstatic $localized = false;\n\t\tif ( $localized ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$localized = true;\n\t\t$l10n = array(\n\t\t\t'fields'            => self::$fields,\n\t\t\t'ajax_nonce'        => wp_create_nonce( 'ajax_nonce' ),\n\t\t\t'ajaxurl'           => admin_url( '\/admin-ajax.php' ),\n\t\t\t'script_debug'      => $debug,\n\t\t\t'up_arrow_class'    => 'dashicons dashicons-arrow-up-alt2',\n\t\t\t'down_arrow_class'  => 'dashicons dashicons-arrow-down-alt2',\n\t\t\t'user_can_richedit' => user_can_richedit(),\n\t\t\t'defaults'          => array(\n\t\t\t\t'code_editor'  => false,\n\t\t\t\t'color_picker' => false,\n\t\t\t\t'date_picker'  => array(\n\t\t\t\t\t'changeMonth'     => true,\n\t\t\t\t\t'changeYear'      => true,\n\t\t\t\t\t'dateFormat'      => _x( 'mm\/dd\/yy', 'Valid formatDate string for jquery-ui datepicker', 'cmb2' ),\n\t\t\t\t\t'dayNames'        => explode( ',', esc_html__( 'Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday', 'cmb2' ) ),\n\t\t\t\t\t'dayNamesMin'     => explode( ',', esc_html__( 'Su, Mo, Tu, We, Th, Fr, Sa', 'cmb2' ) ),\n\t\t\t\t\t'dayNamesShort'   => explode( ',', esc_html__( 'Sun, Mon, Tue, Wed, Thu, Fri, Sat', 'cmb2' ) ),\n\t\t\t\t\t'monthNames'      => explode( ',', esc_html__( 'January, February, March, April, May, June, July, August, September, October, November, December', 'cmb2' ) ),\n\t\t\t\t\t'monthNamesShort' => explode( ',', esc_html__( 'Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec', 'cmb2' ) ),\n\t\t\t\t\t'nextText'        => esc_html__( 'Next', 'cmb2' ),\n\t\t\t\t\t'prevText'        => esc_html__( 'Prev', 'cmb2' ),\n\t\t\t\t\t'currentText'     => esc_html__( 'Today', 'cmb2' ),\n\t\t\t\t\t'closeText'       => esc_html__( 'Done', 'cmb2' ),\n\t\t\t\t\t'clearText'       => esc_html__( 'Clear', 'cmb2' ),\n\t\t\t\t),\n\t\t\t\t'time_picker'  => array(\n\t\t\t\t\t'timeOnlyTitle' => esc_html__( 'Choose Time', 'cmb2' ),\n\t\t\t\t\t'timeText'      => esc_html__( 'Time', 'cmb2' ),\n\t\t\t\t\t'hourText'      => esc_html__( 'Hour', 'cmb2' ),\n\t\t\t\t\t'minuteText'    => esc_html__( 'Minute', 'cmb2' ),\n\t\t\t\t\t'secondText'    => esc_html__( 'Second', 'cmb2' ),\n\t\t\t\t\t'currentText'   => esc_html__( 'Now', 'cmb2' ),\n\t\t\t\t\t'closeText'     => esc_html__( 'Done', 'cmb2' ),\n\t\t\t\t\t'timeFormat'    => _x( 'hh:mm TT', 'Valid formatting string, as per http:\/\/trentrichardson.com\/examples\/timepicker\/', 'cmb2' ),\n\t\t\t\t\t'controlType'   => 'select',\n\t\t\t\t\t'stepMinute'    => 5,\n\t\t\t\t),\n\t\t\t),\n\t\t\t'strings' => array(\n\t\t\t\t'upload_file'  => esc_html__( 'Use this file', 'cmb2' ),\n\t\t\t\t'upload_files' => esc_html__( 'Use these files', 'cmb2' ),\n\t\t\t\t'remove_image' => esc_html__( 'Remove Image', 'cmb2' ),\n\t\t\t\t'remove_file'  => esc_html__( 'Remove', 'cmb2' ),\n\t\t\t\t'file'         => esc_html__( 'File:', 'cmb2' ),\n\t\t\t\t'download'     => esc_html__( 'Download', 'cmb2' ),\n\t\t\t\t'check_toggle' => esc_html__( 'Select \/ Deselect All', 'cmb2' ),\n\t\t\t),\n\t\t);\n\n\t\tif ( isset( self::$dependencies['code-editor'] ) && function_exists( 'wp_enqueue_code_editor' ) ) {\n\t\t\t$l10n['defaults']['code_editor'] = wp_enqueue_code_editor( array(\n\t\t\t\t'type' => 'text\/html',\n\t\t\t) );\n\t\t}\n\n\t\twp_localize_script( self::$handle, self::$js_variable, apply_filters( 'cmb2_localized_data', $l10n ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/helper-functions.php","ext":"php","size":13048,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * CMB2 Helper Functions\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\n\n\/**\n * Helper function to provide directory path to CMB2\n *\n * @since  2.0.0\n * @param  string $path Path to append.\n * @return string        Directory with optional path appended\n *\/\nfunction cmb2_dir( $path = '' ) {\n\treturn CMB2_DIR . $path;\n}\n\n\/**\n * Autoloads files with CMB2 classes when needed\n *\n * @since  1.0.0\n * @param  string $class_name Name of the class being requested.\n *\/\nfunction cmb2_autoload_classes( $class_name ) {\n\tif ( 0 !== strpos( $class_name, 'CMB2' ) ) {\n\t\treturn;\n\t}\n\n\t$path = 'includes';\n\n\tif ( 'CMB2_Type' === $class_name || 0 === strpos( $class_name, 'CMB2_Type_' ) ) {\n\t\t$path .= '\/types';\n\t}\n\n\tif ( 'CMB2_REST' === $class_name || 0 === strpos( $class_name, 'CMB2_REST_' ) ) {\n\t\t$path .= '\/rest-api';\n\t}\n\n\tinclude_once( cmb2_dir( \"$path\/{$class_name}.php\" ) );\n}\n\n\/**\n * Get instance of the CMB2_Utils class\n *\n * @since  2.0.0\n * @return CMB2_Utils object CMB2 utilities class\n *\/\nfunction cmb2_utils() {\n\tstatic $cmb2_utils;\n\t$cmb2_utils = $cmb2_utils ? $cmb2_utils : new CMB2_Utils();\n\treturn $cmb2_utils;\n}\n\n\/**\n * Get instance of the CMB2_Ajax class\n *\n * @since  2.0.0\n * @return CMB2_Ajax object CMB2 ajax class\n *\/\nfunction cmb2_ajax() {\n\treturn CMB2_Ajax::get_instance();\n}\n\n\/**\n * Get instance of the CMB2_Option class for the passed metabox ID\n *\n * @since  2.0.0\n *\n * @param string $key Option key to fetch.\n * @return CMB2_Option object Options class for setting\/getting options for metabox\n *\/\nfunction cmb2_options( $key ) {\n\treturn CMB2_Options::get( $key );\n}\n\n\/**\n * Get a cmb oEmbed. Handles oEmbed getting for non-post objects\n *\n * @since  2.0.0\n * @param  array $args Arguments. Accepts:\n *\n *       'url'         - URL to retrieve the oEmbed from,\n *       'object_id'   - $post_id,\n *       'object_type' - 'post',\n *       'oembed_args' - $embed_args, \/\/ array containing 'width', etc\n *       'field_id'    - false,\n *       'cache_key'   - false,\n *       'wp_error'    - true\/false, \/\/ To return a wp_error object if no embed found.\n *\n * @return string        oEmbed string\n *\/\nfunction cmb2_get_oembed( $args = array() ) {\n\t$oembed = cmb2_ajax()->get_oembed_no_edit( $args );\n\n\t\/\/ Send back our embed.\n\tif ( $oembed['embed'] && $oembed['embed'] != $oembed['fallback'] ) {\n\t\treturn '<div class=\"cmb2-oembed\">' . $oembed['embed'] . '<\/div>';\n\t}\n\n\t$error = sprintf(\n\t\t\/* translators: 1: results for. 2: link to codex.wordpress.org\/Embeds *\/\n\t\tesc_html__( 'No oEmbed Results Found for %1$s. View more info at %2$s.', 'cmb2' ),\n\t\t$oembed['fallback'],\n\t\t'<a href=\"https:\/\/wordpress.org\/support\/article\/embeds\/\" target=\"_blank\">codex.wordpress.org\/Embeds<\/a>'\n\t);\n\n\tif ( isset( $args['wp_error'] ) && $args['wp_error'] ) {\n\t\treturn new WP_Error( 'cmb2_get_oembed_result', $error, compact( 'oembed', 'args' ) );\n\t}\n\n\t\/\/ Otherwise, send back error info that no oEmbeds were found.\n\treturn '<p class=\"ui-state-error-text\">' . $error . '<\/p>';\n}\n\n\/**\n * Outputs the return of cmb2_get_oembed.\n *\n * @since  2.2.2\n * @see cmb2_get_oembed\n *\n * @param array $args oEmbed args.\n *\/\nfunction cmb2_do_oembed( $args = array() ) {\n\techo cmb2_get_oembed( $args );\n}\nadd_action( 'cmb2_do_oembed', 'cmb2_do_oembed' );\n\n\/**\n * A helper function to get an option from a CMB2 options array\n *\n * @since  1.0.1\n * @param  string $option_key Option key.\n * @param  string $field_id   Option array field key.\n * @param  mixed  $default    Optional default fallback value.\n * @return array               Options array or specific field\n *\/\nfunction cmb2_get_option( $option_key, $field_id = '', $default = false ) {\n\treturn cmb2_options( $option_key )->get( $field_id, $default );\n}\n\n\/**\n * A helper function to update an option in a CMB2 options array\n *\n * @since  2.0.0\n * @param  string  $option_key Option key.\n * @param  string  $field_id   Option array field key.\n * @param  mixed   $value      Value to update data with.\n * @param  boolean $single     Whether data should not be an array.\n * @return boolean             Success\/Failure\n *\/\nfunction cmb2_update_option( $option_key, $field_id, $value, $single = true ) {\n\tif ( cmb2_options( $option_key )->update( $field_id, $value, false, $single ) ) {\n\t\treturn cmb2_options( $option_key )->set();\n\t}\n\n\treturn false;\n}\n\n\/**\n * Get a CMB2 field object.\n *\n * @since  1.1.0\n * @param  array      $meta_box    Metabox ID or Metabox config array.\n * @param  array      $field_id    Field ID or all field arguments.\n * @param  int|string $object_id   Object ID (string for options-page).\n * @param  string     $object_type Type of object being saved. (e.g., post, user, term, comment, or options-page).\n *                             Defaults to metabox object type.\n * @return CMB2_Field|null     CMB2_Field object unless metabox config cannot be found\n *\/\nfunction cmb2_get_field( $meta_box, $field_id, $object_id = 0, $object_type = '' ) {\n\n\t$object_id = $object_id ? $object_id : get_the_ID();\n\t$cmb = $meta_box instanceof CMB2 ? $meta_box : cmb2_get_metabox( $meta_box, $object_id );\n\n\tif ( ! $cmb ) {\n\t\treturn;\n\t}\n\n\t$cmb->object_type( $object_type ? $object_type : $cmb->mb_object_type() );\n\n\treturn $cmb->get_field( $field_id );\n}\n\n\/**\n * Get a field's value.\n *\n * @since  1.1.0\n * @param  array      $meta_box    Metabox ID or Metabox config array.\n * @param  array      $field_id    Field ID or all field arguments.\n * @param  int|string $object_id   Object ID (string for options-page).\n * @param  string     $object_type Type of object being saved. (e.g., post, user, term, comment, or options-page).\n *                             Defaults to metabox object type.\n * @return mixed               Maybe escaped value\n *\/\nfunction cmb2_get_field_value( $meta_box, $field_id, $object_id = 0, $object_type = '' ) {\n\t$field = cmb2_get_field( $meta_box, $field_id, $object_id, $object_type );\n\treturn $field->escaped_value();\n}\n\n\/**\n * Because OOP can be scary\n *\n * @since  2.0.2\n * @param  array $meta_box_config Metabox Config array.\n * @return CMB2 object            Instantiated CMB2 object\n *\/\nfunction new_cmb2_box( array $meta_box_config ) {\n\treturn cmb2_get_metabox( $meta_box_config );\n}\n\n\/**\n * Retrieve a CMB2 instance by the metabox ID\n *\n * @since  2.0.0\n * @param  mixed      $meta_box    Metabox ID or Metabox config array.\n * @param  int|string $object_id   Object ID (string for options-page).\n * @param  string     $object_type Type of object being saved.\n *                                 (e.g., post, user, term, comment, or options-page).\n *                                 Defaults to metabox object type.\n * @return CMB2 object\n *\/\nfunction cmb2_get_metabox( $meta_box, $object_id = 0, $object_type = '' ) {\n\n\tif ( $meta_box instanceof CMB2 ) {\n\t\treturn $meta_box;\n\t}\n\n\tif ( is_string( $meta_box ) ) {\n\t\t$cmb = CMB2_Boxes::get( $meta_box );\n\t} else {\n\t\t\/\/ See if we already have an instance of this metabox.\n\t\t$cmb = CMB2_Boxes::get( $meta_box['id'] );\n\t\t\/\/ If not, we'll initate a new metabox.\n\t\t$cmb = $cmb ? $cmb : new CMB2( $meta_box, $object_id );\n\t}\n\n\tif ( $cmb && $object_id ) {\n\t\t$cmb->object_id( $object_id );\n\t}\n\n\tif ( $cmb && $object_type ) {\n\t\t$cmb->object_type( $object_type );\n\t}\n\n\treturn $cmb;\n}\n\n\/**\n * Returns array of sanitized field values from a metabox (without saving them)\n *\n * @since  2.0.3\n * @param  mixed $meta_box         Metabox ID or Metabox config array.\n * @param  array $data_to_sanitize Array of field_id => value data for sanitizing (likely $_POST data).\n * @return mixed                   Array of sanitized values or false if no CMB2 object found\n *\/\nfunction cmb2_get_metabox_sanitized_values( $meta_box, array $data_to_sanitize ) {\n\t$cmb = cmb2_get_metabox( $meta_box );\n\treturn $cmb ? $cmb->get_sanitized_values( $data_to_sanitize ) : false;\n}\n\n\/**\n * Retrieve a metabox form\n *\n * @since  2.0.0\n * @param  mixed      $meta_box  Metabox config array or Metabox ID.\n * @param  int|string $object_id Object ID (string for options-page).\n * @param  array $args           Optional arguments array.\n * @return string             CMB2 html form markup\n *\/\nfunction cmb2_get_metabox_form( $meta_box, $object_id = 0, $args = array() ) {\n\n\t$object_id = $object_id ? $object_id : get_the_ID();\n\t$cmb       = cmb2_get_metabox( $meta_box, $object_id );\n\n\tob_start();\n\t\/\/ Get cmb form.\n\tcmb2_print_metabox_form( $cmb, $object_id, $args );\n\t$form = ob_get_clean();\n\n\treturn apply_filters( 'cmb2_get_metabox_form', $form, $object_id, $cmb );\n}\n\n\/**\n * Display a metabox form & save it on submission\n *\n * @since  1.0.0\n * @param  mixed      $meta_box  Metabox config array or Metabox ID.\n * @param  int|string $object_id Object ID (string for options-page).\n * @param  array $args           Optional arguments array.\n *\/\nfunction cmb2_print_metabox_form( $meta_box, $object_id = 0, $args = array() ) {\n\n\t$object_id = $object_id ? $object_id : get_the_ID();\n\t$cmb = cmb2_get_metabox( $meta_box, $object_id );\n\n\t\/\/ if passing a metabox ID, and that ID was not found.\n\tif ( ! $cmb ) {\n\t\treturn;\n\t}\n\n\t$args = wp_parse_args( $args, array(\n\t\t'form_format' => '<form class=\"cmb-form\" method=\"post\" id=\"%1$s\" enctype=\"multipart\/form-data\" encoding=\"multipart\/form-data\"><input type=\"hidden\" name=\"object_id\" value=\"%2$s\">%3$s<input type=\"submit\" name=\"submit-cmb\" value=\"%4$s\" class=\"button-primary\"><\/form>',\n\t\t'save_button' => esc_html__( 'Save', 'cmb2' ),\n\t\t'object_type' => $cmb->mb_object_type(),\n\t\t'cmb_styles'  => $cmb->prop( 'cmb_styles' ),\n\t\t'enqueue_js'  => $cmb->prop( 'enqueue_js' ),\n\t) );\n\n\t\/\/ Set object type explicitly (rather than trying to guess from context).\n\t$cmb->object_type( $args['object_type'] );\n\n\t\/\/ Save the metabox if it's been submitted\n\t\/\/ check permissions\n\t\/\/ @todo more hardening?\n\tif (\n\t\t$cmb->prop( 'save_fields' )\n\t\t\/\/ check nonce.\n\t\t&& isset( $_POST['submit-cmb'], $_POST['object_id'], $_POST[ $cmb->nonce() ] )\n\t\t&& wp_verify_nonce( $_POST[ $cmb->nonce() ], $cmb->nonce() )\n\t\t&& $object_id && $_POST['object_id'] == $object_id\n\t) {\n\t\t$cmb->save_fields( $object_id, $cmb->object_type(), $_POST );\n\t}\n\n\t\/\/ Enqueue JS\/CSS.\n\tif ( $args['cmb_styles'] ) {\n\t\tCMB2_Hookup::enqueue_cmb_css();\n\t}\n\n\tif ( $args['enqueue_js'] ) {\n\t\tCMB2_Hookup::enqueue_cmb_js();\n\t}\n\n\t$form_format = apply_filters( 'cmb2_get_metabox_form_format', $args['form_format'], $object_id, $cmb );\n\n\t$format_parts = explode( '%3$s', $form_format );\n\n\t\/\/ Show cmb form.\n\tprintf( $format_parts[0], esc_attr( $cmb->cmb_id ), esc_attr( $object_id ) );\n\t$cmb->show_form();\n\n\tif ( isset( $format_parts[1] ) && $format_parts[1] ) {\n\t\tprintf( str_ireplace( '%4$s', '%1$s', $format_parts[1] ), esc_attr( $args['save_button'] ) );\n\t}\n\n}\n\n\/**\n * Display a metabox form (or optionally return it) & save it on submission.\n *\n * @since  1.0.0\n * @param  mixed      $meta_box  Metabox config array or Metabox ID.\n * @param  int|string $object_id Object ID (string for options-page).\n * @param  array      $args      Optional arguments array.\n * @return string\n *\/\nfunction cmb2_metabox_form( $meta_box, $object_id = 0, $args = array() ) {\n\tif ( ! isset( $args['echo'] ) || $args['echo'] ) {\n\t\tcmb2_print_metabox_form( $meta_box, $object_id, $args );\n\t} else {\n\t\treturn cmb2_get_metabox_form( $meta_box, $object_id, $args );\n\t}\n}\n\nif ( ! function_exists( 'date_create_from_format' ) ) {\n\n\t\/**\n\t * Reimplementation of DateTime::createFromFormat for PHP < 5.3. :(\n\t * Borrowed from http:\/\/stackoverflow.com\/questions\/5399075\/php-datetimecreatefromformat-in-5-2\n\t *\n\t * @param string $date_format Date format.\n\t * @param string $date_value  Date value.\n\t *\n\t * @return DateTime\n\t *\/\n\tfunction date_create_from_format( $date_format, $date_value ) {\n\n\t\t$schedule_format = str_replace(\n\t\t\tarray( 'M', 'Y', 'm', 'd', 'H', 'i', 'a' ),\n\t\t\tarray( '%b', '%Y', '%m', '%d', '%H', '%M', '%p' ),\n\t\t\t$date_format\n\t\t);\n\n\t\t\/*\n\t\t * %Y, %m and %d correspond to date()'s Y m and d.\n\t\t * %I corresponds to H, %M to i and %p to a\n\t\t *\/\n\t\t\/\/ phpcs:ignore PHPCompatibility.FunctionUse.RemovedFunctions.strptimeDeprecated\n\t\t$parsed_time = strptime( $date_value, $schedule_format );\n\n\t\t$ymd = sprintf(\n\t\t\t\/**\n\t\t\t * This is a format string that takes six total decimal\n\t\t\t * arguments, then left-pads them with zeros to either\n\t\t\t * 4 or 2 characters, as needed\n\t\t\t *\/\n\t\t\t'%04d-%02d-%02d %02d:%02d:%02d',\n\t\t\t$parsed_time['tm_year'] + 1900,  \/\/ This will be \"111\", so we need to add 1900.\n\t\t\t$parsed_time['tm_mon'] + 1,      \/\/ This will be the month minus one, so we add one.\n\t\t\t$parsed_time['tm_mday'],\n\t\t\t$parsed_time['tm_hour'],\n\t\t\t$parsed_time['tm_min'],\n\t\t\t$parsed_time['tm_sec']\n\t\t);\n\n\t\treturn new DateTime( $ymd );\n\t}\n}\/\/ End if.\n\nif ( ! function_exists( 'date_timestamp_get' ) ) {\n\n\t\/**\n\t * Returns the Unix timestamp representing the date.\n\t * Reimplementation of DateTime::getTimestamp for PHP < 5.3. :(\n\t *\n\t * @param DateTime $date DateTime instance.\n\t *\n\t * @return int\n\t *\/\n\tfunction date_timestamp_get( DateTime $date ) {\n\t\treturn $date->format( 'U' );\n\t}\n}\/\/ End if.\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/includes\/CMB2_Options_Hookup.php","ext":"php","size":11273,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Handles hooking CMB2 forms\/metaboxes into the post\/attachement\/user screens\n * and handles hooking in and saving those fields.\n *\n * @since  2.0.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https:\/\/cmb2.io\n *\/\nclass CMB2_Options_Hookup extends CMB2_Hookup {\n\n\t\/**\n\t * The object type we are performing the hookup for\n\t *\n\t * @var   string\n\t * @since 2.0.9\n\t *\/\n\tprotected $object_type = 'options-page';\n\n\t\/**\n\t * Options page key.\n\t *\n\t * @var   string\n\t * @since 2.2.5\n\t *\/\n\tprotected $option_key = '';\n\n\t\/**\n\t * Constructor\n\t *\n\t * @since 2.0.0\n\t * @param CMB2   $cmb        The CMB2 object to hookup.\n\t * @param string $option_key Option key to use.\n\t *\/\n\tpublic function __construct( CMB2 $cmb, $option_key ) {\n\t\t$this->cmb = $cmb;\n\t\t$this->option_key = $option_key;\n\t}\n\n\tpublic function hooks() {\n\t\tif ( empty( $this->option_key ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! $this->cmb->prop( 'autoload', true ) ) {\n\t\t\t\/\/ Disable option autoload if requested.\n\t\t\tadd_filter( \"cmb2_should_autoload_{$this->option_key}\", '__return_false' );\n\t\t}\n\n\t\t\/**\n\t\t * For WP < 4.7. Ensure the register_setting function exists.\n\t\t *\/\n\t\tif ( ! CMB2_Utils::wp_at_least( '4.7' ) && ! function_exists( 'register_setting' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin\/includes\/plugin.php';\n\t\t}\n\n\t\t\/\/ Register setting to cmb2 group.\n\t\tregister_setting( 'cmb2', $this->option_key );\n\n\t\t\/\/ Handle saving the data.\n\t\tadd_action( 'admin_post_' . $this->option_key, array( $this, 'save_options' ) );\n\n\t\t\/\/ Optionally network_admin_menu.\n\t\t$hook = $this->cmb->prop( 'admin_menu_hook' );\n\n\t\t\/\/ Hook in to add our menu.\n\t\tadd_action( $hook, array( $this, 'options_page_menu_hooks' ), $this->get_priority() );\n\n\t\t\/\/ If in the network admin, need to use get\/update_site_option.\n\t\tif ( 'network_admin_menu' === $hook ) {\n\t\t\t\/\/ Override CMB's getter.\n\t\t\tadd_filter( \"cmb2_override_option_get_{$this->option_key}\", array( $this, 'network_get_override' ), 10, 2 );\n\t\t\t\/\/ Override CMB's setter.\n\t\t\tadd_filter( \"cmb2_override_option_save_{$this->option_key}\", array( $this, 'network_update_override' ), 10, 2 );\n\t\t}\n\t}\n\n\t\/**\n\t * Hook up our admin menu item and admin page.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @return void\n\t *\/\n\tpublic function options_page_menu_hooks() {\n\t\t$parent_slug = $this->cmb->prop( 'parent_slug' );\n\t\t$title       = $this->cmb->prop( 'title' );\n\t\t$menu_title  = $this->cmb->prop( 'menu_title', $title );\n\t\t$capability  = $this->cmb->prop( 'capability' );\n\t\t$callback    = array( $this, 'options_page_output' );\n\n\t\tif ( $parent_slug ) {\n\t\t\t$page_hook = add_submenu_page(\n\t\t\t\t$parent_slug,\n\t\t\t\t$title,\n\t\t\t\t$menu_title,\n\t\t\t\t$capability,\n\t\t\t\t$this->option_key,\n\t\t\t\t$callback\n\t\t\t);\n\t\t} else {\n\t\t\t$page_hook = add_menu_page(\n\t\t\t\t$title,\n\t\t\t\t$menu_title,\n\t\t\t\t$capability,\n\t\t\t\t$this->option_key,\n\t\t\t\t$callback,\n\t\t\t\t$this->cmb->prop( 'icon_url' ),\n\t\t\t\t$this->cmb->prop( 'position' )\n\t\t\t);\n\t\t}\n\n\t\tif ( $this->cmb->prop( 'cmb_styles' ) ) {\n\t\t\t\/\/ Include CMB CSS in the head to avoid FOUC.\n\t\t\tadd_action( \"admin_print_styles-{$page_hook}\", array( 'CMB2_Hookup', 'enqueue_cmb_css' ) );\n\t\t}\n\n\t\t$this->maybe_register_message();\n\t}\n\n\t\/**\n\t * If there is a message callback, let it determine how to register the message,\n\t * else add a settings message if on this settings page.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @return void\n\t *\/\n\tpublic function maybe_register_message() {\n\t\t$is_options_page = self::is_page( $this->option_key );\n\t\t$should_notify   = ! $this->cmb->prop( 'disable_settings_errors' ) && isset( $_GET['settings-updated'] ) && $is_options_page;\n\t\t$is_updated      = $should_notify && 'true' === $_GET['settings-updated'];\n\t\t$setting         = \"{$this->option_key}-notices\";\n\t\t$code            = '';\n\t\t$message         = __( 'Nothing to update.', 'cmb2' );\n\t\t$type            = 'notice-warning';\n\n\t\tif ( $is_updated ) {\n\t\t\t$message = __( 'Settings updated.', 'cmb2' );\n\t\t\t$type    = 'updated';\n\t\t}\n\n\t\t\/\/ Check if parameter has registered a callback.\n\t\tif ( $cb = $this->cmb->maybe_callback( 'message_cb' ) ) {\n\n\t\t\t\/**\n\t\t\t * The 'message_cb' callback will receive the following parameters.\n\t\t\t * Unless there are other reasons for notifications, the callback should only\n\t\t\t * `add_settings_error()` if `$args['should_notify']` is truthy.\n\t\t\t *\n\t\t\t * @param CMB2  $cmb The CMB2 object.\n\t\t\t * @param array $args {\n\t\t\t *     An array of message arguments\n\t\t\t *\n\t\t\t *     @type bool   $is_options_page Whether current page is this options page.\n\t\t\t *     @type bool   $should_notify   Whether options were saved and we should be notified.\n\t\t\t *     @type bool   $is_updated      Whether options were updated with save (or stayed the same).\n\t\t\t *     @type string $setting         For add_settings_error(), Slug title of the setting to which\n\t\t\t *                                   this error applies.\n\t\t\t *     @type string $code            For add_settings_error(), Slug-name to identify the error.\n\t\t\t *                                   Used as part of 'id' attribute in HTML output.\n\t\t\t *     @type string $message         For add_settings_error(), The formatted message text to display\n\t\t\t *                                   to the user (will be shown inside styled `<div>` and `<p>` tags).\n\t\t\t *                                   Will be 'Settings updated.' if $is_updated is true, else 'Nothing to update.'\n\t\t\t *     @type string $type            For add_settings_error(), Message type, controls HTML class.\n\t\t\t *                                   Accepts 'error', 'updated', '', 'notice-warning', etc.\n\t\t\t *                                   Will be 'updated' if $is_updated is true, else 'notice-warning'.\n\t\t\t * }\n\t\t\t *\/\n\t\t\t$args = compact( 'is_options_page', 'should_notify', 'is_updated', 'setting', 'code', 'message', 'type' );\n\n\t\t\t$this->cmb->do_callback( $cb, $args );\n\n\t\t} elseif ( $should_notify ) {\n\n\t\t\tadd_settings_error( $setting, $code, $message, $type );\n\t\t}\n\t}\n\n\t\/**\n\t * Display options-page output. To override, set 'display_cb' box property.\n\t *\n\t * @since  2.2.5\n\t *\/\n\tpublic function options_page_output() {\n\t\t$this->maybe_output_settings_notices();\n\n\t\t$callback = $this->cmb->prop( 'display_cb' );\n\t\tif ( is_callable( $callback ) ) {\n\t\t\treturn call_user_func( $callback, $this );\n\t\t}\n\n\t\t?>\n\t\t<div class=\"wrap cmb2-options-page option-<?php echo esc_attr( sanitize_html_class( $this->option_key ) ); ?>\">\n\t\t\t<?php if ( $this->cmb->prop( 'title' ) ) : ?>\n\t\t\t\t<h2><?php echo wp_kses_post( $this->cmb->prop( 'title' ) ); ?><\/h2>\n\t\t\t<?php endif; ?>\n\t\t\t<?php $this->options_page_tab_nav_output(); ?>\n\t\t\t<form class=\"cmb-form\" action=\"<?php echo esc_url( admin_url( 'admin-post.php' ) ); ?>\" method=\"POST\" id=\"<?php echo $this->cmb->cmb_id; ?>\" enctype=\"multipart\/form-data\" encoding=\"multipart\/form-data\">\n\t\t\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo esc_attr( $this->option_key ); ?>\">\n\t\t\t\t<?php $this->options_page_metabox(); ?>\n\t\t\t\t<?php submit_button( esc_attr( $this->cmb->prop( 'save_button' ) ), 'primary', 'submit-cmb' ); ?>\n\t\t\t<\/form>\n\t\t<\/div>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Display options-page Tab Navigation output.\n\t *\n\t * @since 2.9.0\n\t *\/\n\tpublic function options_page_tab_nav_output() {\n\t\t$tabs = $this->get_tab_group_tabs();\n\t\tif ( empty( $tabs ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<h2 class=\"nav-tab-wrapper\">\n\t\t\t<?php foreach ( $tabs as $option_key => $tab_title ) : ?>\n\t\t\t\t<a class=\"nav-tab<?php if ( self::is_page( $option_key ) ) : ?> nav-tab-active<?php endif; ?>\" href=\"<?php menu_page_url( $option_key ); ?>\"><?php echo wp_kses_post( $tab_title ); ?><\/a>\n\t\t\t<?php endforeach; ?>\n\t\t<\/h2>\n\t\t<?php\n\t}\n\n\t\/**\n\t * Outputs the settings notices if a) not a sub-page of 'options-general.php'\n\t * (because settings_errors() already called in wp-admin\/options-head.php),\n\t * and b) the 'disable_settings_errors' prop is not set or truthy.\n\t *\n\t * @since  2.2.5\n\t * @return void\n\t *\/\n\tpublic function maybe_output_settings_notices() {\n\t\tglobal $parent_file;\n\n\t\t\/\/ The settings sub-pages will already have settings_errors() called in wp-admin\/options-head.php.\n\t\tif ( 'options-general.php' !== $parent_file ) {\n\t\t\tsettings_errors( \"{$this->option_key}-notices\" );\n\t\t}\n\t}\n\n\t\/**\n\t * Gets navigation tabs array for CMB2 options pages which share the\n\t * same tab_group property.\n\t *\n\t * @since 2.4.0\n\t * @return array Array of tab information ($option_key => $tab_title)\n\t *\/\n\tpublic function get_tab_group_tabs() {\n\t\t$tab_group = $this->cmb->prop( 'tab_group' );\n\t\t$tabs      = array();\n\n\t\tif ( $tab_group ) {\n\t\t\t$boxes = CMB2_Boxes::get_by( 'tab_group', $tab_group );\n\n\t\t\tforeach ( $boxes as $cmb_id => $cmb ) {\n\t\t\t\t$option_key = $cmb->options_page_keys();\n\n\t\t\t\t\/\/ Must have an option key, must be an options page box.\n\t\t\t\tif ( ! isset( $option_key[0] ) || 'options-page' !== $cmb->mb_object_type() ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$tabs[ $option_key[0] ] = $cmb->prop( 'tab_title', $cmb->prop( 'title' ) );\n\t\t\t}\n\t\t}\n\n\t\treturn apply_filters( 'cmb2_tab_group_tabs', $tabs, $tab_group );\n\t}\n\n\t\/**\n\t * Display metaboxes for an options-page object.\n\t *\n\t * @since  2.2.5\n\t *\/\n\tpublic function options_page_metabox() {\n\t\t$this->show_form_for_type( 'options-page' );\n\t}\n\n\t\/**\n\t * Save data from options page, then redirects back.\n\t *\n\t * @since  2.2.5\n\t * @return void\n\t *\/\n\tpublic function save_options() {\n\t\t$url = wp_get_referer();\n\t\tif ( ! $url ) {\n\t\t\t$url = admin_url();\n\t\t}\n\n\t\tif (\n\t\t\t$this->can_save( 'options-page' )\n\t\t\t\/\/ check params.\n\t\t\t&& isset( $_POST['submit-cmb'], $_POST['action'] )\n\t\t\t&& $this->option_key === $_POST['action']\n\t\t) {\n\n\t\t\t$updated = $this->cmb\n\t\t\t\t->save_fields( $this->option_key, $this->cmb->object_type(), $_POST )\n\t\t\t\t->was_updated(); \/\/ Will be false if no values were changed\/updated.\n\n\t\t\t$url = add_query_arg( 'settings-updated', $updated ? 'true' : 'false', $url );\n\t\t}\n\n\t\twp_safe_redirect( esc_url_raw( $url ), 303 \/* WP_Http::SEE_OTHER *\/ );\n\t\texit;\n\t}\n\n\t\/**\n\t * Replaces get_option with get_site_option.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @param mixed $test    Not used.\n\t * @param mixed $default Default value to use.\n\t * @return mixed Value set for the network option.\n\t *\/\n\tpublic function network_get_override( $test, $default = false ) {\n\t\treturn get_site_option( $this->option_key, $default );\n\t}\n\n\t\/**\n\t * Replaces update_option with update_site_option.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @param mixed $test         Not used.\n\t * @param mixed $option_value Value to use.\n\t * @return bool Success\/Failure\n\t *\/\n\tpublic function network_update_override( $test, $option_value ) {\n\t\treturn update_site_option( $this->option_key, $option_value );\n\t}\n\n\t\/**\n\t * Determines if given page slug matches the 'page' GET query variable.\n\t *\n\t * @since  2.4.0\n\t *\n\t * @param  string $page Page slug.\n\t * @return boolean\n\t *\/\n\tpublic static function is_page( $page ) {\n\t\treturn isset( $_GET['page'] ) && $page === $_GET['page'];\n\t}\n\n\t\/**\n\t * Magic getter for our object.\n\t *\n\t * @param string $field Property to retrieve.\n\t *\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t *\/\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'object_type':\n\t\t\tcase 'option_key':\n\t\t\tcase 'cmb':\n\t\t\t\treturn $this->{$field};\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s property: %2$s', 'cmb2' ), __CLASS__, $field ) );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/js\/jquery-ui-timepicker-addon.min.js","ext":"js","size":39854,"mtime":1757324689,"type":"text","content":"\/*! jQuery Timepicker Addon - v1.5.0 - 2014-09-01\n* http:\/\/trentrichardson.com\/examples\/timepicker\n* Copyright (c) 2014 Trent Richardson; Licensed MIT *\/\n(function($){if($.ui.timepicker=$.ui.timepicker||{},!$.ui.timepicker.version){$.extend($.ui,{timepicker:{version:\"1.5.0\"}});var Timepicker=function(){this.regional=[],this.regional[\"\"]={currentText:\"Now\",closeText:\"Done\",amNames:[\"AM\",\"A\"],pmNames:[\"PM\",\"P\"],timeFormat:\"HH:mm\",timeSuffix:\"\",timeOnlyTitle:\"Choose Time\",timeText:\"Time\",hourText:\"Hour\",minuteText:\"Minute\",secondText:\"Second\",millisecText:\"Millisecond\",microsecText:\"Microsecond\",timezoneText:\"Time Zone\",isRTL:!1},this._defaults={showButtonPanel:!0,timeOnly:!1,timeOnlyShowDate:!1,showHour:null,showMinute:null,showSecond:null,showMillisec:null,showMicrosec:null,showTimezone:null,showTime:!0,stepHour:1,stepMinute:1,stepSecond:1,stepMillisec:1,stepMicrosec:1,hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null,hourMin:0,minuteMin:0,secondMin:0,millisecMin:0,microsecMin:0,hourMax:23,minuteMax:59,secondMax:59,millisecMax:999,microsecMax:999,minDateTime:null,maxDateTime:null,maxTime:null,minTime:null,onSelect:null,hourGrid:0,minuteGrid:0,secondGrid:0,millisecGrid:0,microsecGrid:0,alwaysSetTime:!0,separator:\" \",altFieldTimeOnly:!0,altTimeFormat:null,altSeparator:null,altTimeSuffix:null,altRedirectFocus:!0,pickerTimeFormat:null,pickerTimeSuffix:null,showTimepicker:!0,timezoneList:null,addSliderAccess:!1,sliderAccessArgs:null,controlType:\"slider\",defaultValue:null,parse:\"strict\"},$.extend(this._defaults,this.regional[\"\"])};$.extend(Timepicker.prototype,{$input:null,$altInput:null,$timeObj:null,inst:null,hour_slider:null,minute_slider:null,second_slider:null,millisec_slider:null,microsec_slider:null,timezone_select:null,maxTime:null,minTime:null,hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null,hourMinOriginal:null,minuteMinOriginal:null,secondMinOriginal:null,millisecMinOriginal:null,microsecMinOriginal:null,hourMaxOriginal:null,minuteMaxOriginal:null,secondMaxOriginal:null,millisecMaxOriginal:null,microsecMaxOriginal:null,ampm:\"\",formattedDate:\"\",formattedTime:\"\",formattedDateTime:\"\",timezoneList:null,units:[\"hour\",\"minute\",\"second\",\"millisec\",\"microsec\"],support:{},control:null,setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_newInst:function($input,opts){var tp_inst=new Timepicker,inlineSettings={},fns={},overrides,i;for(var attrName in this._defaults)if(this._defaults.hasOwnProperty(attrName)){var attrValue=$input.attr(\"time:\"+attrName);if(attrValue)try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}overrides={beforeShow:function(e,t){return $.isFunction(tp_inst._defaults.evnts.beforeShow)?tp_inst._defaults.evnts.beforeShow.call($input[0],e,t,tp_inst):void 0},onChangeMonthYear:function(e,t,i){tp_inst._updateDateTime(i),$.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)&&tp_inst._defaults.evnts.onChangeMonthYear.call($input[0],e,t,i,tp_inst)},onClose:function(e,t){tp_inst.timeDefined===!0&&\"\"!==$input.val()&&tp_inst._updateDateTime(t),$.isFunction(tp_inst._defaults.evnts.onClose)&&tp_inst._defaults.evnts.onClose.call($input[0],e,t,tp_inst)}};for(i in overrides)overrides.hasOwnProperty(i)&&(fns[i]=opts[i]||null);tp_inst._defaults=$.extend({},this._defaults,inlineSettings,opts,overrides,{evnts:fns,timepicker:tp_inst}),tp_inst.amNames=$.map(tp_inst._defaults.amNames,function(e){return e.toUpperCase()}),tp_inst.pmNames=$.map(tp_inst._defaults.pmNames,function(e){return e.toUpperCase()}),tp_inst.support=detectSupport(tp_inst._defaults.timeFormat+(tp_inst._defaults.pickerTimeFormat?tp_inst._defaults.pickerTimeFormat:\"\")+(tp_inst._defaults.altTimeFormat?tp_inst._defaults.altTimeFormat:\"\")),\"string\"==typeof tp_inst._defaults.controlType?(\"slider\"===tp_inst._defaults.controlType&&$.ui.slider===void 0&&(tp_inst._defaults.controlType=\"select\"),tp_inst.control=tp_inst._controls[tp_inst._defaults.controlType]):tp_inst.control=tp_inst._defaults.controlType;var timezoneList=[-720,-660,-600,-570,-540,-480,-420,-360,-300,-270,-240,-210,-180,-120,-60,0,60,120,180,210,240,270,300,330,345,360,390,420,480,525,540,570,600,630,660,690,720,765,780,840];null!==tp_inst._defaults.timezoneList&&(timezoneList=tp_inst._defaults.timezoneList);var tzl=timezoneList.length,tzi=0,tzv=null;if(tzl>0&&\"object\"!=typeof timezoneList[0])for(;tzl>tzi;tzi++)tzv=timezoneList[tzi],timezoneList[tzi]={value:tzv,label:$.timepicker.timezoneOffsetString(tzv,tp_inst.support.iso8601)};return tp_inst._defaults.timezoneList=timezoneList,tp_inst.timezone=null!==tp_inst._defaults.timezone?$.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone):-1*(new Date).getTimezoneOffset(),tp_inst.hour=tp_inst._defaults.hour<tp_inst._defaults.hourMin?tp_inst._defaults.hourMin:tp_inst._defaults.hour>tp_inst._defaults.hourMax?tp_inst._defaults.hourMax:tp_inst._defaults.hour,tp_inst.minute=tp_inst._defaults.minute<tp_inst._defaults.minuteMin?tp_inst._defaults.minuteMin:tp_inst._defaults.minute>tp_inst._defaults.minuteMax?tp_inst._defaults.minuteMax:tp_inst._defaults.minute,tp_inst.second=tp_inst._defaults.second<tp_inst._defaults.secondMin?tp_inst._defaults.secondMin:tp_inst._defaults.second>tp_inst._defaults.secondMax?tp_inst._defaults.secondMax:tp_inst._defaults.second,tp_inst.millisec=tp_inst._defaults.millisec<tp_inst._defaults.millisecMin?tp_inst._defaults.millisecMin:tp_inst._defaults.millisec>tp_inst._defaults.millisecMax?tp_inst._defaults.millisecMax:tp_inst._defaults.millisec,tp_inst.microsec=tp_inst._defaults.microsec<tp_inst._defaults.microsecMin?tp_inst._defaults.microsecMin:tp_inst._defaults.microsec>tp_inst._defaults.microsecMax?tp_inst._defaults.microsecMax:tp_inst._defaults.microsec,tp_inst.ampm=\"\",tp_inst.$input=$input,tp_inst._defaults.altField&&(tp_inst.$altInput=$(tp_inst._defaults.altField),tp_inst._defaults.altRedirectFocus===!0&&tp_inst.$altInput.css({cursor:\"pointer\"}).focus(function(){$input.trigger(\"focus\")})),(0===tp_inst._defaults.minDate||0===tp_inst._defaults.minDateTime)&&(tp_inst._defaults.minDate=new Date),(0===tp_inst._defaults.maxDate||0===tp_inst._defaults.maxDateTime)&&(tp_inst._defaults.maxDate=new Date),void 0!==tp_inst._defaults.minDate&&tp_inst._defaults.minDate instanceof Date&&(tp_inst._defaults.minDateTime=new Date(tp_inst._defaults.minDate.getTime())),void 0!==tp_inst._defaults.minDateTime&&tp_inst._defaults.minDateTime instanceof Date&&(tp_inst._defaults.minDate=new Date(tp_inst._defaults.minDateTime.getTime())),void 0!==tp_inst._defaults.maxDate&&tp_inst._defaults.maxDate instanceof Date&&(tp_inst._defaults.maxDateTime=new Date(tp_inst._defaults.maxDate.getTime())),void 0!==tp_inst._defaults.maxDateTime&&tp_inst._defaults.maxDateTime instanceof Date&&(tp_inst._defaults.maxDate=new Date(tp_inst._defaults.maxDateTime.getTime())),tp_inst.$input.bind(\"focus\",function(){tp_inst._onFocus()}),tp_inst},_addTimePicker:function(e){var t=this.$altInput&&this._defaults.altFieldTimeOnly?this.$input.val()+\" \"+this.$altInput.val():this.$input.val();this.timeDefined=this._parseTime(t),this._limitMinMaxDateTime(e,!1),this._injectTimePicker()},_parseTime:function(e,t){if(this.inst||(this.inst=$.datepicker._getInst(this.$input[0])),t||!this._defaults.timeOnly){var i=$.datepicker._get(this.inst,\"dateFormat\");try{var s=parseDateTimeInternal(i,this._defaults.timeFormat,e,$.datepicker._getFormatConfig(this.inst),this._defaults);if(!s.timeObj)return!1;$.extend(this,s.timeObj)}catch(a){return $.timepicker.log(\"Error parsing the date\/time string: \"+a+\"\\ndate\/time string = \"+e+\"\\ntimeFormat = \"+this._defaults.timeFormat+\"\\ndateFormat = \"+i),!1}return!0}var n=$.datepicker.parseTime(this._defaults.timeFormat,e,this._defaults);return n?($.extend(this,n),!0):!1},_injectTimePicker:function(){var e=this.inst.dpDiv,t=this.inst.settings,i=this,s=\"\",a=\"\",n=null,r={},l={},o=null,c=0,u=0;if(0===e.find(\"div.ui-timepicker-div\").length&&t.showTimepicker){var m=' style=\"display:none;\"',d='<div class=\"ui-timepicker-div'+(t.isRTL?\" ui-timepicker-rtl\":\"\")+'\"><dl>'+'<dt class=\"ui_tpicker_time_label\"'+(t.showTime?\"\":m)+\">\"+t.timeText+\"<\/dt>\"+'<dd class=\"ui_tpicker_time\"'+(t.showTime?\"\":m)+\"><\/dd>\";for(c=0,u=this.units.length;u>c;c++){if(s=this.units[c],a=s.substr(0,1).toUpperCase()+s.substr(1),n=null!==t[\"show\"+a]?t[\"show\"+a]:this.support[s],r[s]=parseInt(t[s+\"Max\"]-(t[s+\"Max\"]-t[s+\"Min\"])%t[\"step\"+a],10),l[s]=0,d+='<dt class=\"ui_tpicker_'+s+'_label\"'+(n?\"\":m)+\">\"+t[s+\"Text\"]+\"<\/dt>\"+'<dd class=\"ui_tpicker_'+s+'\"><div class=\"ui_tpicker_'+s+'_slider\"'+(n?\"\":m)+\"><\/div>\",n&&t[s+\"Grid\"]>0){if(d+='<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>',\"hour\"===s)for(var h=t[s+\"Min\"];r[s]>=h;h+=parseInt(t[s+\"Grid\"],10)){l[s]++;var p=$.datepicker.formatTime(this.support.ampm?\"hht\":\"HH\",{hour:h},t);d+='<td data-for=\"'+s+'\">'+p+\"<\/td>\"}else for(var _=t[s+\"Min\"];r[s]>=_;_+=parseInt(t[s+\"Grid\"],10))l[s]++,d+='<td data-for=\"'+s+'\">'+(10>_?\"0\":\"\")+_+\"<\/td>\";d+=\"<\/tr><\/table><\/div>\"}d+=\"<\/dd>\"}var f=null!==t.showTimezone?t.showTimezone:this.support.timezone;d+='<dt class=\"ui_tpicker_timezone_label\"'+(f?\"\":m)+\">\"+t.timezoneText+\"<\/dt>\",d+='<dd class=\"ui_tpicker_timezone\" '+(f?\"\":m)+\"><\/dd>\",d+=\"<\/dl><\/div>\";var g=$(d);for(t.timeOnly===!0&&(g.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\"><div class=\"ui-datepicker-title\">'+t.timeOnlyTitle+\"<\/div>\"+\"<\/div>\"),e.find(\".ui-datepicker-header, .ui-datepicker-calendar\").hide()),c=0,u=i.units.length;u>c;c++)s=i.units[c],a=s.substr(0,1).toUpperCase()+s.substr(1),n=null!==t[\"show\"+a]?t[\"show\"+a]:this.support[s],i[s+\"_slider\"]=i.control.create(i,g.find(\".ui_tpicker_\"+s+\"_slider\"),s,i[s],t[s+\"Min\"],r[s],t[\"step\"+a]),n&&t[s+\"Grid\"]>0&&(o=100*l[s]*t[s+\"Grid\"]\/(r[s]-t[s+\"Min\"]),g.find(\".ui_tpicker_\"+s+\" table\").css({width:o+\"%\",marginLeft:t.isRTL?\"0\":o\/(-2*l[s])+\"%\",marginRight:t.isRTL?o\/(-2*l[s])+\"%\":\"0\",borderCollapse:\"collapse\"}).find(\"td\").click(function(){var e=$(this),t=e.html(),a=parseInt(t.replace(\/[^0-9]\/g),10),n=t.replace(\/[^apm]\/gi),r=e.data(\"for\");\"hour\"===r&&(-1!==n.indexOf(\"p\")&&12>a?a+=12:-1!==n.indexOf(\"a\")&&12===a&&(a=0)),i.control.value(i,i[r+\"_slider\"],s,a),i._onTimeChange(),i._onSelectHandler()}).css({cursor:\"pointer\",width:100\/l[s]+\"%\",textAlign:\"center\",overflow:\"hidden\"}));if(this.timezone_select=g.find(\".ui_tpicker_timezone\").append(\"<select><\/select>\").find(\"select\"),$.fn.append.apply(this.timezone_select,$.map(t.timezoneList,function(e){return $(\"<option \/>\").val(\"object\"==typeof e?e.value:e).text(\"object\"==typeof e?e.label:e)})),this.timezone!==void 0&&null!==this.timezone&&\"\"!==this.timezone){var M=-1*new Date(this.inst.selectedYear,this.inst.selectedMonth,this.inst.selectedDay,12).getTimezoneOffset();M===this.timezone?selectLocalTimezone(i):this.timezone_select.val(this.timezone)}else this.hour!==void 0&&null!==this.hour&&\"\"!==this.hour?this.timezone_select.val(t.timezone):selectLocalTimezone(i);this.timezone_select.change(function(){i._onTimeChange(),i._onSelectHandler()});var v=e.find(\".ui-datepicker-buttonpane\");if(v.length?v.before(g):e.append(g),this.$timeObj=g.find(\".ui_tpicker_time\"),null!==this.inst){var k=this.timeDefined;this._onTimeChange(),this.timeDefined=k}if(this._defaults.addSliderAccess){var T=this._defaults.sliderAccessArgs,D=this._defaults.isRTL;T.isRTL=D,setTimeout(function(){if(0===g.find(\".ui-slider-access\").length){g.find(\".ui-slider:visible\").sliderAccess(T);var e=g.find(\".ui-slider-access:eq(0)\").outerWidth(!0);e&&g.find(\"table:visible\").each(function(){var t=$(this),i=t.outerWidth(),s=(\"\"+t.css(D?\"marginRight\":\"marginLeft\")).replace(\"%\",\"\"),a=i-e,n=s*a\/i+\"%\",r={width:a,marginRight:0,marginLeft:0};r[D?\"marginRight\":\"marginLeft\"]=n,t.css(r)})}},10)}i._limitMinMaxDateTime(this.inst,!0)}},_limitMinMaxDateTime:function(e,t){var i=this._defaults,s=new Date(e.selectedYear,e.selectedMonth,e.selectedDay);if(this._defaults.showTimepicker){if(null!==$.datepicker._get(e,\"minDateTime\")&&void 0!==$.datepicker._get(e,\"minDateTime\")&&s){var a=$.datepicker._get(e,\"minDateTime\"),n=new Date(a.getFullYear(),a.getMonth(),a.getDate(),0,0,0,0);(null===this.hourMinOriginal||null===this.minuteMinOriginal||null===this.secondMinOriginal||null===this.millisecMinOriginal||null===this.microsecMinOriginal)&&(this.hourMinOriginal=i.hourMin,this.minuteMinOriginal=i.minuteMin,this.secondMinOriginal=i.secondMin,this.millisecMinOriginal=i.millisecMin,this.microsecMinOriginal=i.microsecMin),e.settings.timeOnly||n.getTime()===s.getTime()?(this._defaults.hourMin=a.getHours(),this.hour<=this._defaults.hourMin?(this.hour=this._defaults.hourMin,this._defaults.minuteMin=a.getMinutes(),this.minute<=this._defaults.minuteMin?(this.minute=this._defaults.minuteMin,this._defaults.secondMin=a.getSeconds(),this.second<=this._defaults.secondMin?(this.second=this._defaults.secondMin,this._defaults.millisecMin=a.getMilliseconds(),this.millisec<=this._defaults.millisecMin?(this.millisec=this._defaults.millisecMin,this._defaults.microsecMin=a.getMicroseconds()):(this.microsec<this._defaults.microsecMin&&(this.microsec=this._defaults.microsecMin),this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.minuteMin=this.minuteMinOriginal,this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.hourMin=this.hourMinOriginal,this._defaults.minuteMin=this.minuteMinOriginal,this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)}if(null!==$.datepicker._get(e,\"maxDateTime\")&&void 0!==$.datepicker._get(e,\"maxDateTime\")&&s){var r=$.datepicker._get(e,\"maxDateTime\"),l=new Date(r.getFullYear(),r.getMonth(),r.getDate(),0,0,0,0);(null===this.hourMaxOriginal||null===this.minuteMaxOriginal||null===this.secondMaxOriginal||null===this.millisecMaxOriginal)&&(this.hourMaxOriginal=i.hourMax,this.minuteMaxOriginal=i.minuteMax,this.secondMaxOriginal=i.secondMax,this.millisecMaxOriginal=i.millisecMax,this.microsecMaxOriginal=i.microsecMax),e.settings.timeOnly||l.getTime()===s.getTime()?(this._defaults.hourMax=r.getHours(),this.hour>=this._defaults.hourMax?(this.hour=this._defaults.hourMax,this._defaults.minuteMax=r.getMinutes(),this.minute>=this._defaults.minuteMax?(this.minute=this._defaults.minuteMax,this._defaults.secondMax=r.getSeconds(),this.second>=this._defaults.secondMax?(this.second=this._defaults.secondMax,this._defaults.millisecMax=r.getMilliseconds(),this.millisec>=this._defaults.millisecMax?(this.millisec=this._defaults.millisecMax,this._defaults.microsecMax=r.getMicroseconds()):(this.microsec>this._defaults.microsecMax&&(this.microsec=this._defaults.microsecMax),this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.minuteMax=this.minuteMaxOriginal,this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.hourMax=this.hourMaxOriginal,this._defaults.minuteMax=this.minuteMaxOriginal,this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)}if(null!==e.settings.minTime){var o=new Date(\"01\/01\/1970 \"+e.settings.minTime);this.hour<o.getHours()?(this.hour=this._defaults.hourMin=o.getHours(),this.minute=this._defaults.minuteMin=o.getMinutes()):this.hour===o.getHours()&&this.minute<o.getMinutes()?this.minute=this._defaults.minuteMin=o.getMinutes():this._defaults.hourMin<o.getHours()?(this._defaults.hourMin=o.getHours(),this._defaults.minuteMin=o.getMinutes()):this._defaults.minuteMin=this._defaults.hourMin===o.getHours()===this.hour&&this._defaults.minuteMin<o.getMinutes()?o.getMinutes():0}if(null!==e.settings.maxTime){var c=new Date(\"01\/01\/1970 \"+e.settings.maxTime);this.hour>c.getHours()?(this.hour=this._defaults.hourMax=c.getHours(),this.minute=this._defaults.minuteMax=c.getMinutes()):this.hour===c.getHours()&&this.minute>c.getMinutes()?this.minute=this._defaults.minuteMax=c.getMinutes():this._defaults.hourMax>c.getHours()?(this._defaults.hourMax=c.getHours(),this._defaults.minuteMax=c.getMinutes()):this._defaults.minuteMax=this._defaults.hourMax===c.getHours()===this.hour&&this._defaults.minuteMax>c.getMinutes()?c.getMinutes():59}if(void 0!==t&&t===!0){var u=parseInt(this._defaults.hourMax-(this._defaults.hourMax-this._defaults.hourMin)%this._defaults.stepHour,10),m=parseInt(this._defaults.minuteMax-(this._defaults.minuteMax-this._defaults.minuteMin)%this._defaults.stepMinute,10),d=parseInt(this._defaults.secondMax-(this._defaults.secondMax-this._defaults.secondMin)%this._defaults.stepSecond,10),h=parseInt(this._defaults.millisecMax-(this._defaults.millisecMax-this._defaults.millisecMin)%this._defaults.stepMillisec,10),p=parseInt(this._defaults.microsecMax-(this._defaults.microsecMax-this._defaults.microsecMin)%this._defaults.stepMicrosec,10);this.hour_slider&&(this.control.options(this,this.hour_slider,\"hour\",{min:this._defaults.hourMin,max:u,step:this._defaults.stepHour}),this.control.value(this,this.hour_slider,\"hour\",this.hour-this.hour%this._defaults.stepHour)),this.minute_slider&&(this.control.options(this,this.minute_slider,\"minute\",{min:this._defaults.minuteMin,max:m,step:this._defaults.stepMinute}),this.control.value(this,this.minute_slider,\"minute\",this.minute-this.minute%this._defaults.stepMinute)),this.second_slider&&(this.control.options(this,this.second_slider,\"second\",{min:this._defaults.secondMin,max:d,step:this._defaults.stepSecond}),this.control.value(this,this.second_slider,\"second\",this.second-this.second%this._defaults.stepSecond)),this.millisec_slider&&(this.control.options(this,this.millisec_slider,\"millisec\",{min:this._defaults.millisecMin,max:h,step:this._defaults.stepMillisec}),this.control.value(this,this.millisec_slider,\"millisec\",this.millisec-this.millisec%this._defaults.stepMillisec)),this.microsec_slider&&(this.control.options(this,this.microsec_slider,\"microsec\",{min:this._defaults.microsecMin,max:p,step:this._defaults.stepMicrosec}),this.control.value(this,this.microsec_slider,\"microsec\",this.microsec-this.microsec%this._defaults.stepMicrosec))}}},_onTimeChange:function(){if(this._defaults.showTimepicker){var e=this.hour_slider?this.control.value(this,this.hour_slider,\"hour\"):!1,t=this.minute_slider?this.control.value(this,this.minute_slider,\"minute\"):!1,i=this.second_slider?this.control.value(this,this.second_slider,\"second\"):!1,s=this.millisec_slider?this.control.value(this,this.millisec_slider,\"millisec\"):!1,a=this.microsec_slider?this.control.value(this,this.microsec_slider,\"microsec\"):!1,n=this.timezone_select?this.timezone_select.val():!1,r=this._defaults,l=r.pickerTimeFormat||r.timeFormat,o=r.pickerTimeSuffix||r.timeSuffix;\"object\"==typeof e&&(e=!1),\"object\"==typeof t&&(t=!1),\"object\"==typeof i&&(i=!1),\"object\"==typeof s&&(s=!1),\"object\"==typeof a&&(a=!1),\"object\"==typeof n&&(n=!1),e!==!1&&(e=parseInt(e,10)),t!==!1&&(t=parseInt(t,10)),i!==!1&&(i=parseInt(i,10)),s!==!1&&(s=parseInt(s,10)),a!==!1&&(a=parseInt(a,10)),n!==!1&&(n=\"\"+n);var c=r[12>e?\"amNames\":\"pmNames\"][0],u=e!==parseInt(this.hour,10)||t!==parseInt(this.minute,10)||i!==parseInt(this.second,10)||s!==parseInt(this.millisec,10)||a!==parseInt(this.microsec,10)||this.ampm.length>0&&12>e!=(-1!==$.inArray(this.ampm.toUpperCase(),this.amNames))||null!==this.timezone&&n!==\"\"+this.timezone;u&&(e!==!1&&(this.hour=e),t!==!1&&(this.minute=t),i!==!1&&(this.second=i),s!==!1&&(this.millisec=s),a!==!1&&(this.microsec=a),n!==!1&&(this.timezone=n),this.inst||(this.inst=$.datepicker._getInst(this.$input[0])),this._limitMinMaxDateTime(this.inst,!0)),this.support.ampm&&(this.ampm=c),this.formattedTime=$.datepicker.formatTime(r.timeFormat,this,r),this.$timeObj&&(l===r.timeFormat?this.$timeObj.text(this.formattedTime+o):this.$timeObj.text($.datepicker.formatTime(l,this,r)+o)),this.timeDefined=!0,u&&this._updateDateTime()}},_onSelectHandler:function(){var e=this._defaults.onSelect||this.inst.settings.onSelect,t=this.$input?this.$input[0]:null;e&&t&&e.apply(t,[this.formattedDateTime,this])},_updateDateTime:function(e){e=this.inst||e;var t=e.currentYear>0?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(e.selectedYear,e.selectedMonth,e.selectedDay),i=$.datepicker._daylightSavingAdjust(t),s=$.datepicker._get(e,\"dateFormat\"),a=$.datepicker._getFormatConfig(e),n=null!==i&&this.timeDefined;this.formattedDate=$.datepicker.formatDate(s,null===i?new Date:i,a);var r=this.formattedDate;if(\"\"===e.lastVal&&(e.currentYear=e.selectedYear,e.currentMonth=e.selectedMonth,e.currentDay=e.selectedDay),this._defaults.timeOnly===!0&&this._defaults.timeOnlyShowDate===!1?r=this.formattedTime:(this._defaults.timeOnly!==!0&&(this._defaults.alwaysSetTime||n)||this._defaults.timeOnly===!0&&this._defaults.timeOnlyShowDate===!0)&&(r+=this._defaults.separator+this.formattedTime+this._defaults.timeSuffix),this.formattedDateTime=r,this._defaults.showTimepicker)if(this.$altInput&&this._defaults.timeOnly===!1&&this._defaults.altFieldTimeOnly===!0)this.$altInput.val(this.formattedTime),this.$input.val(this.formattedDate);else if(this.$altInput){this.$input.val(r);var l=\"\",o=null!==this._defaults.altSeparator?this._defaults.altSeparator:this._defaults.separator,c=null!==this._defaults.altTimeSuffix?this._defaults.altTimeSuffix:this._defaults.timeSuffix;this._defaults.timeOnly||(l=this._defaults.altFormat?$.datepicker.formatDate(this._defaults.altFormat,null===i?new Date:i,a):this.formattedDate,l&&(l+=o)),l+=null!==this._defaults.altTimeFormat?$.datepicker.formatTime(this._defaults.altTimeFormat,this,this._defaults)+c:this.formattedTime+c,this.$altInput.val(l)}else this.$input.val(r);else this.$input.val(this.formattedDate);this.$input.trigger(\"change\")},_onFocus:function(){if(!this.$input.val()&&this._defaults.defaultValue){this.$input.val(this._defaults.defaultValue);var e=$.datepicker._getInst(this.$input.get(0)),t=$.datepicker._get(e,\"timepicker\");if(t&&t._defaults.timeOnly&&e.input.val()!==e.lastVal)try{$.datepicker._updateDatepicker(e)}catch(i){$.timepicker.log(i)}}},_controls:{slider:{create:function(e,t,i,s,a,n,r){var l=e._defaults.isRTL;return t.prop(\"slide\",null).slider({orientation:\"horizontal\",value:l?-1*s:s,min:l?-1*n:a,max:l?-1*a:n,step:r,slide:function(t,s){e.control.value(e,$(this),i,l?-1*s.value:s.value),e._onTimeChange()},stop:function(){e._onSelectHandler()}})},options:function(e,t,i,s,a){if(e._defaults.isRTL){if(\"string\"==typeof s)return\"min\"===s||\"max\"===s?void 0!==a?t.slider(s,-1*a):Math.abs(t.slider(s)):t.slider(s);var n=s.min,r=s.max;return s.min=s.max=null,void 0!==n&&(s.max=-1*n),void 0!==r&&(s.min=-1*r),t.slider(s)}return\"string\"==typeof s&&void 0!==a?t.slider(s,a):t.slider(s)},value:function(e,t,i,s){return e._defaults.isRTL?void 0!==s?t.slider(\"value\",-1*s):Math.abs(t.slider(\"value\")):void 0!==s?t.slider(\"value\",s):t.slider(\"value\")}},select:{create:function(e,t,i,s,a,n,r){for(var l='<select class=\"ui-timepicker-select ui-state-default ui-corner-all\" data-unit=\"'+i+'\" data-min=\"'+a+'\" data-max=\"'+n+'\" data-step=\"'+r+'\">',o=e._defaults.pickerTimeFormat||e._defaults.timeFormat,c=a;n>=c;c+=r)l+='<option value=\"'+c+'\"'+(c===s?\" selected\":\"\")+\">\",l+=\"hour\"===i?$.datepicker.formatTime($.trim(o.replace(\/[^ht ]\/gi,\"\")),{hour:c},e._defaults):\"millisec\"===i||\"microsec\"===i||c>=10?c:\"0\"+(\"\"+c),l+=\"<\/option>\";return l+=\"<\/select>\",t.children(\"select\").remove(),$(l).appendTo(t).change(function(){e._onTimeChange(),e._onSelectHandler()}),t},options:function(e,t,i,s,a){var n={},r=t.children(\"select\");if(\"string\"==typeof s){if(void 0===a)return r.data(s);n[s]=a}else n=s;return e.control.create(e,t,r.data(\"unit\"),r.val(),n.min||r.data(\"min\"),n.max||r.data(\"max\"),n.step||r.data(\"step\"))},value:function(e,t,i,s){var a=t.children(\"select\");return void 0!==s?a.val(s):a.val()}}}}),$.fn.extend({timepicker:function(e){e=e||{};var t=Array.prototype.slice.call(arguments);return\"object\"==typeof e&&(t[0]=$.extend(e,{timeOnly:!0})),$(this).each(function(){$.fn.datetimepicker.apply($(this),t)})},datetimepicker:function(e){e=e||{};var t=arguments;return\"string\"==typeof e?\"getDate\"===e||\"option\"===e&&2===t.length&&\"string\"==typeof t[1]?$.fn.datepicker.apply($(this[0]),t):this.each(function(){var e=$(this);e.datepicker.apply(e,t)}):this.each(function(){var t=$(this);t.datepicker($.timepicker._newInst(t,e)._defaults)})}}),$.datepicker.parseDateTime=function(e,t,i,s,a){var n=parseDateTimeInternal(e,t,i,s,a);if(n.timeObj){var r=n.timeObj;n.date.setHours(r.hour,r.minute,r.second,r.millisec),n.date.setMicroseconds(r.microsec)}return n.date},$.datepicker.parseTime=function(e,t,i){var s=extendRemove(extendRemove({},$.timepicker._defaults),i||{});-1!==e.replace(\/\\'.*?\\'\/g,\"\").indexOf(\"Z\");var a=function(e,t,i){var s,a=function(e,t){var i=[];return e&&$.merge(i,e),t&&$.merge(i,t),i=$.map(i,function(e){return e.replace(\/[.*+?|()\\[\\]{}\\\\]\/g,\"\\\\$&\")}),\"(\"+i.join(\"|\")+\")?\"},n=function(e){var t=e.toLowerCase().match(\/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')\/g),i={h:-1,m:-1,s:-1,l:-1,c:-1,t:-1,z:-1};if(t)for(var s=0;t.length>s;s++)-1===i[(\"\"+t[s]).charAt(0)]&&(i[(\"\"+t[s]).charAt(0)]=s+1);return i},r=\"^\"+(\"\"+e).replace(\/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')\/g,function(e){var t=e.length;switch(e.charAt(0).toLowerCase()){case\"h\":return 1===t?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+t+\"})\";case\"m\":return 1===t?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+t+\"})\";case\"s\":return 1===t?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+t+\"})\";case\"l\":return\"(\\\\d?\\\\d?\\\\d)\";case\"c\":return\"(\\\\d?\\\\d?\\\\d)\";case\"z\":return\"(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?\";case\"t\":return a(i.amNames,i.pmNames);default:return\"(\"+e.replace(\/\\'\/g,\"\").replace(\/(\\.|\\$|\\^|\\\\|\\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)\/g,function(e){return\"\\\\\"+e})+\")?\"}}).replace(\/\\s\/g,\"\\\\s?\")+i.timeSuffix+\"$\",l=n(e),o=\"\";s=t.match(RegExp(r,\"i\"));var c={hour:0,minute:0,second:0,millisec:0,microsec:0};return s?(-1!==l.t&&(void 0===s[l.t]||0===s[l.t].length?(o=\"\",c.ampm=\"\"):(o=-1!==$.inArray(s[l.t].toUpperCase(),i.amNames)?\"AM\":\"PM\",c.ampm=i[\"AM\"===o?\"amNames\":\"pmNames\"][0])),-1!==l.h&&(c.hour=\"AM\"===o&&\"12\"===s[l.h]?0:\"PM\"===o&&\"12\"!==s[l.h]?parseInt(s[l.h],10)+12:Number(s[l.h])),-1!==l.m&&(c.minute=Number(s[l.m])),-1!==l.s&&(c.second=Number(s[l.s])),-1!==l.l&&(c.millisec=Number(s[l.l])),-1!==l.c&&(c.microsec=Number(s[l.c])),-1!==l.z&&void 0!==s[l.z]&&(c.timezone=$.timepicker.timezoneOffsetNumber(s[l.z])),c):!1},n=function(e,t,i){try{var s=new Date(\"2012-01-01 \"+t);if(isNaN(s.getTime())&&(s=new Date(\"2012-01-01T\"+t),isNaN(s.getTime())&&(s=new Date(\"01\/01\/2012 \"+t),isNaN(s.getTime()))))throw\"Unable to parse time with native Date: \"+t;return{hour:s.getHours(),minute:s.getMinutes(),second:s.getSeconds(),millisec:s.getMilliseconds(),microsec:s.getMicroseconds(),timezone:-1*s.getTimezoneOffset()}}catch(n){try{return a(e,t,i)}catch(r){$.timepicker.log(\"Unable to parse \\ntimeString: \"+t+\"\\ntimeFormat: \"+e)}}return!1};return\"function\"==typeof s.parse?s.parse(e,t,s):\"loose\"===s.parse?n(e,t,s):a(e,t,s)},$.datepicker.formatTime=function(e,t,i){i=i||{},i=$.extend({},$.timepicker._defaults,i),t=$.extend({hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null},t);var s=e,a=i.amNames[0],n=parseInt(t.hour,10);return n>11&&(a=i.pmNames[0]),s=s.replace(\/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')\/g,function(e){switch(e){case\"HH\":return(\"0\"+n).slice(-2);case\"H\":return n;case\"hh\":return(\"0\"+convert24to12(n)).slice(-2);case\"h\":return convert24to12(n);case\"mm\":return(\"0\"+t.minute).slice(-2);case\"m\":return t.minute;case\"ss\":return(\"0\"+t.second).slice(-2);case\"s\":return t.second;case\"l\":return(\"00\"+t.millisec).slice(-3);case\"c\":return(\"00\"+t.microsec).slice(-3);case\"z\":return $.timepicker.timezoneOffsetString(null===t.timezone?i.timezone:t.timezone,!1);case\"Z\":return $.timepicker.timezoneOffsetString(null===t.timezone?i.timezone:t.timezone,!0);case\"T\":return a.charAt(0).toUpperCase();case\"TT\":return a.toUpperCase();case\"t\":return a.charAt(0).toLowerCase();case\"tt\":return a.toLowerCase();default:return e.replace(\/'\/g,\"\")}})},$.datepicker._base_selectDate=$.datepicker._selectDate,$.datepicker._selectDate=function(e,t){var i,s=this._getInst($(e)[0]),a=this._get(s,\"timepicker\");a&&s.settings.showTimepicker?(a._limitMinMaxDateTime(s,!0),i=s.inline,s.inline=s.stay_open=!0,this._base_selectDate(e,t),s.inline=i,s.stay_open=!1,this._notifyChange(s),this._updateDatepicker(s)):this._base_selectDate(e,t)},$.datepicker._base_updateDatepicker=$.datepicker._updateDatepicker,$.datepicker._updateDatepicker=function(e){var t=e.input[0];if(!($.datepicker._curInst&&$.datepicker._curInst!==e&&$.datepicker._datepickerShowing&&$.datepicker._lastInput!==t||\"boolean\"==typeof e.stay_open&&e.stay_open!==!1)){this._base_updateDatepicker(e);var i=this._get(e,\"timepicker\");i&&i._addTimePicker(e)}},$.datepicker._base_doKeyPress=$.datepicker._doKeyPress,$.datepicker._doKeyPress=function(e){var t=$.datepicker._getInst(e.target),i=$.datepicker._get(t,\"timepicker\");if(i&&$.datepicker._get(t,\"constrainInput\")){var s=i.support.ampm,a=null!==i._defaults.showTimezone?i._defaults.showTimezone:i.support.timezone,n=$.datepicker._possibleChars($.datepicker._get(t,\"dateFormat\")),r=(\"\"+i._defaults.timeFormat).replace(\/[hms]\/g,\"\").replace(\/TT\/g,s?\"APM\":\"\").replace(\/Tt\/g,s?\"AaPpMm\":\"\").replace(\/tT\/g,s?\"AaPpMm\":\"\").replace(\/T\/g,s?\"AP\":\"\").replace(\/tt\/g,s?\"apm\":\"\").replace(\/t\/g,s?\"ap\":\"\")+\" \"+i._defaults.separator+i._defaults.timeSuffix+(a?i._defaults.timezoneList.join(\"\"):\"\")+i._defaults.amNames.join(\"\")+i._defaults.pmNames.join(\"\")+n,l=String.fromCharCode(void 0===e.charCode?e.keyCode:e.charCode);return e.ctrlKey||\" \">l||!n||r.indexOf(l)>-1}return $.datepicker._base_doKeyPress(e)},$.datepicker._base_updateAlternate=$.datepicker._updateAlternate,$.datepicker._updateAlternate=function(e){var t=this._get(e,\"timepicker\");if(t){var i=t._defaults.altField;if(i){var s=(t._defaults.altFormat||t._defaults.dateFormat,this._getDate(e)),a=$.datepicker._getFormatConfig(e),n=\"\",r=t._defaults.altSeparator?t._defaults.altSeparator:t._defaults.separator,l=t._defaults.altTimeSuffix?t._defaults.altTimeSuffix:t._defaults.timeSuffix,o=null!==t._defaults.altTimeFormat?t._defaults.altTimeFormat:t._defaults.timeFormat;n+=$.datepicker.formatTime(o,t,t._defaults)+l,t._defaults.timeOnly||t._defaults.altFieldTimeOnly||null===s||(n=t._defaults.altFormat?$.datepicker.formatDate(t._defaults.altFormat,s,a)+r+n:t.formattedDate+r+n),$(i).val(e.input.val()?n:\"\")}}else $.datepicker._base_updateAlternate(e)},$.datepicker._base_doKeyUp=$.datepicker._doKeyUp,$.datepicker._doKeyUp=function(e){var t=$.datepicker._getInst(e.target),i=$.datepicker._get(t,\"timepicker\");if(i&&i._defaults.timeOnly&&t.input.val()!==t.lastVal)try{$.datepicker._updateDatepicker(t)}catch(s){$.timepicker.log(s)}return $.datepicker._base_doKeyUp(e)},$.datepicker._base_gotoToday=$.datepicker._gotoToday,$.datepicker._gotoToday=function(e){var t=this._getInst($(e)[0]);t.dpDiv,this._base_gotoToday(e);var i=this._get(t,\"timepicker\");selectLocalTimezone(i);var s=new Date;this._setTime(t,s),this._setDate(t,s)},$.datepicker._disableTimepickerDatepicker=function(e){var t=this._getInst(e);if(t){var i=this._get(t,\"timepicker\");$(e).datepicker(\"getDate\"),i&&(t.settings.showTimepicker=!1,i._defaults.showTimepicker=!1,i._updateDateTime(t))}},$.datepicker._enableTimepickerDatepicker=function(e){var t=this._getInst(e);if(t){var i=this._get(t,\"timepicker\");$(e).datepicker(\"getDate\"),i&&(t.settings.showTimepicker=!0,i._defaults.showTimepicker=!0,i._addTimePicker(t),i._updateDateTime(t))}},$.datepicker._setTime=function(e,t){var i=this._get(e,\"timepicker\");if(i){var s=i._defaults;\ni.hour=t?t.getHours():s.hour,i.minute=t?t.getMinutes():s.minute,i.second=t?t.getSeconds():s.second,i.millisec=t?t.getMilliseconds():s.millisec,i.microsec=t?t.getMicroseconds():s.microsec,i._limitMinMaxDateTime(e,!0),i._onTimeChange(),i._updateDateTime(e)}},$.datepicker._setTimeDatepicker=function(e,t,i){var s=this._getInst(e);if(s){var a=this._get(s,\"timepicker\");if(a){this._setDateFromField(s);var n;t&&(\"string\"==typeof t?(a._parseTime(t,i),n=new Date,n.setHours(a.hour,a.minute,a.second,a.millisec),n.setMicroseconds(a.microsec)):(n=new Date(t.getTime()),n.setMicroseconds(t.getMicroseconds())),\"Invalid Date\"==\"\"+n&&(n=void 0),this._setTime(s,n))}}},$.datepicker._base_setDateDatepicker=$.datepicker._setDateDatepicker,$.datepicker._setDateDatepicker=function(e,t){var i=this._getInst(e),s=t;if(i){\"string\"==typeof t&&(s=new Date(t),s.getTime()||(this._base_setDateDatepicker.apply(this,arguments),s=$(e).datepicker(\"getDate\")));var a,n=this._get(i,\"timepicker\");s instanceof Date?(a=new Date(s.getTime()),a.setMicroseconds(s.getMicroseconds())):a=s,n&&a&&(n.support.timezone||null!==n._defaults.timezone||(n.timezone=-1*a.getTimezoneOffset()),s=$.timepicker.timezoneAdjust(s,n.timezone),a=$.timepicker.timezoneAdjust(a,n.timezone)),this._updateDatepicker(i),this._base_setDateDatepicker.apply(this,arguments),this._setTimeDatepicker(e,a,!0)}},$.datepicker._base_getDateDatepicker=$.datepicker._getDateDatepicker,$.datepicker._getDateDatepicker=function(e,t){var i=this._getInst(e);if(i){var s=this._get(i,\"timepicker\");if(s){void 0===i.lastVal&&this._setDateFromField(i,t);var a=this._getDate(i);return a&&s._parseTime($(e).val(),s.timeOnly)&&(a.setHours(s.hour,s.minute,s.second,s.millisec),a.setMicroseconds(s.microsec),null!=s.timezone&&(s.support.timezone||null!==s._defaults.timezone||(s.timezone=-1*a.getTimezoneOffset()),a=$.timepicker.timezoneAdjust(a,s.timezone))),a}return this._base_getDateDatepicker(e,t)}},$.datepicker._base_parseDate=$.datepicker.parseDate,$.datepicker.parseDate=function(e,t,i){var s;try{s=this._base_parseDate(e,t,i)}catch(a){if(!(a.indexOf(\":\")>=0))throw a;s=this._base_parseDate(e,t.substring(0,t.length-(a.length-a.indexOf(\":\")-2)),i),$.timepicker.log(\"Error parsing the date string: \"+a+\"\\ndate string = \"+t+\"\\ndate format = \"+e)}return s},$.datepicker._base_formatDate=$.datepicker._formatDate,$.datepicker._formatDate=function(e){var t=this._get(e,\"timepicker\");return t?(t._updateDateTime(e),t.$input.val()):this._base_formatDate(e)},$.datepicker._base_optionDatepicker=$.datepicker._optionDatepicker,$.datepicker._optionDatepicker=function(e,t,i){var s,a=this._getInst(e);if(!a)return null;var n=this._get(a,\"timepicker\");if(n){var r,l,o,c,u=null,m=null,d=null,h=n._defaults.evnts,p={};if(\"string\"==typeof t){if(\"minDate\"===t||\"minDateTime\"===t)u=i;else if(\"maxDate\"===t||\"maxDateTime\"===t)m=i;else if(\"onSelect\"===t)d=i;else if(h.hasOwnProperty(t)){if(i===void 0)return h[t];p[t]=i,s={}}}else if(\"object\"==typeof t){t.minDate?u=t.minDate:t.minDateTime?u=t.minDateTime:t.maxDate?m=t.maxDate:t.maxDateTime&&(m=t.maxDateTime);for(r in h)h.hasOwnProperty(r)&&t[r]&&(p[r]=t[r])}for(r in p)p.hasOwnProperty(r)&&(h[r]=p[r],s||(s=$.extend({},t)),delete s[r]);if(s&&isEmptyObject(s))return;if(u?(u=0===u?new Date:new Date(u),n._defaults.minDate=u,n._defaults.minDateTime=u):m?(m=0===m?new Date:new Date(m),n._defaults.maxDate=m,n._defaults.maxDateTime=m):d&&(n._defaults.onSelect=d),u||m)return c=$(e),o=c.datetimepicker(\"getDate\"),l=this._base_optionDatepicker.call($.datepicker,e,s||t,i),c.datetimepicker(\"setDate\",o),l}return void 0===i?this._base_optionDatepicker.call($.datepicker,e,t):this._base_optionDatepicker.call($.datepicker,e,s||t,i)};var isEmptyObject=function(e){var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0},extendRemove=function(e,t){$.extend(e,t);for(var i in t)(null===t[i]||void 0===t[i])&&(e[i]=t[i]);return e},detectSupport=function(e){var t=e.replace(\/'.*?'\/g,\"\").toLowerCase(),i=function(e,t){return-1!==e.indexOf(t)?!0:!1};return{hour:i(t,\"h\"),minute:i(t,\"m\"),second:i(t,\"s\"),millisec:i(t,\"l\"),microsec:i(t,\"c\"),timezone:i(t,\"z\"),ampm:i(t,\"t\")&&i(e,\"h\"),iso8601:i(e,\"Z\")}},convert24to12=function(e){return e%=12,0===e&&(e=12),e+\"\"},computeEffectiveSetting=function(e,t){return e&&e[t]?e[t]:$.timepicker._defaults[t]},splitDateTime=function(e,t){var i=computeEffectiveSetting(t,\"separator\"),s=computeEffectiveSetting(t,\"timeFormat\"),a=s.split(i),n=a.length,r=e.split(i),l=r.length;return l>1?{dateString:r.splice(0,l-n).join(i),timeString:r.splice(0,n).join(i)}:{dateString:e,timeString:\"\"}},parseDateTimeInternal=function(e,t,i,s,a){var n,r,l;if(r=splitDateTime(i,a),n=$.datepicker._base_parseDate(e,r.dateString,s),\"\"===r.timeString)return{date:n};if(l=$.datepicker.parseTime(t,r.timeString,a),!l)throw\"Wrong time format\";return{date:n,timeObj:l}},selectLocalTimezone=function(e,t){if(e&&e.timezone_select){var i=t||new Date;e.timezone_select.val(-i.getTimezoneOffset())}};$.timepicker=new Timepicker,$.timepicker.timezoneOffsetString=function(e,t){if(isNaN(e)||e>840||-720>e)return e;var i=e,s=i%60,a=(i-s)\/60,n=t?\":\":\"\",r=(i>=0?\"+\":\"-\")+(\"0\"+Math.abs(a)).slice(-2)+n+(\"0\"+Math.abs(s)).slice(-2);return\"+00:00\"===r?\"Z\":r},$.timepicker.timezoneOffsetNumber=function(e){var t=(\"\"+e).replace(\":\",\"\");return\"Z\"===t.toUpperCase()?0:\/^(\\-|\\+)\\d{4}$\/.test(t)?(\"-\"===t.substr(0,1)?-1:1)*(60*parseInt(t.substr(1,2),10)+parseInt(t.substr(3,2),10)):e},$.timepicker.timezoneAdjust=function(e,t){var i=$.timepicker.timezoneOffsetNumber(t);return isNaN(i)||e.setMinutes(e.getMinutes()+-e.getTimezoneOffset()-i),e},$.timepicker.timeRange=function(e,t,i){return $.timepicker.handleRange(\"timepicker\",e,t,i)},$.timepicker.datetimeRange=function(e,t,i){$.timepicker.handleRange(\"datetimepicker\",e,t,i)},$.timepicker.dateRange=function(e,t,i){$.timepicker.handleRange(\"datepicker\",e,t,i)},$.timepicker.handleRange=function(e,t,i,s){function a(a,n){var r=t[e](\"getDate\"),l=i[e](\"getDate\"),o=a[e](\"getDate\");if(null!==r){var c=new Date(r.getTime()),u=new Date(r.getTime());c.setMilliseconds(c.getMilliseconds()+s.minInterval),u.setMilliseconds(u.getMilliseconds()+s.maxInterval),s.minInterval>0&&c>l?i[e](\"setDate\",c):s.maxInterval>0&&l>u?i[e](\"setDate\",u):r>l&&n[e](\"setDate\",o)}}function n(t,i,a){if(t.val()){var n=t[e].call(t,\"getDate\");null!==n&&s.minInterval>0&&(\"minDate\"===a&&n.setMilliseconds(n.getMilliseconds()+s.minInterval),\"maxDate\"===a&&n.setMilliseconds(n.getMilliseconds()-s.minInterval)),n.getTime&&i[e].call(i,\"option\",a,n)}}s=$.extend({},{minInterval:0,maxInterval:0,start:{},end:{}},s);var r=!1;return\"timepicker\"===e&&(r=!0,e=\"datetimepicker\"),$.fn[e].call(t,$.extend({timeOnly:r,onClose:function(){a($(this),i)},onSelect:function(){n($(this),i,\"minDate\")}},s,s.start)),$.fn[e].call(i,$.extend({timeOnly:r,onClose:function(){a($(this),t)},onSelect:function(){n($(this),t,\"maxDate\")}},s,s.end)),a(t,i),n(t,i,\"minDate\"),n(i,t,\"maxDate\"),$([t.get(0),i.get(0)])},$.timepicker.log=function(){window.console&&window.console.log.apply(window.console,Array.prototype.slice.call(arguments))},$.timepicker._util={_extendRemove:extendRemove,_isEmptyObject:isEmptyObject,_convert24to12:convert24to12,_detectSupport:detectSupport,_selectLocalTimezone:selectLocalTimezone,_computeEffectiveSetting:computeEffectiveSetting,_splitDateTime:splitDateTime,_parseDateTimeInternal:parseDateTimeInternal},Date.prototype.getMicroseconds||(Date.prototype.microseconds=0,Date.prototype.getMicroseconds=function(){return this.microseconds},Date.prototype.setMicroseconds=function(e){return this.setMilliseconds(this.getMilliseconds()+Math.floor(e\/1e3)),this.microseconds=e%1e3,this}),$.timepicker.version=\"1.5.0\"}})(jQuery);\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/js\/index.php","ext":"php","size":27,"mtime":1757324689,"type":"text","content":"<?php\n\/\/ Silence is golden\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/js\/cmb2.js","ext":"js","size":39778,"mtime":1757324689,"type":"text","content":"\/**\n * Controls the behaviours of custom metabox fields.\n *\n * @author CMB2 team\n * @see    https:\/\/github.com\/CMB2\/CMB2\n *\/\n\n\/**\n * Custom jQuery for Custom Metaboxes and Fields\n *\/\nwindow.CMB2 = window.CMB2 || {};\n(function(window, document, $, cmb, undefined){\n\t'use strict';\n\n\t\/\/ localization strings\n\tvar l10n = window.cmb2_l10;\n\tvar setTimeout = window.setTimeout;\n\tvar $document;\n\tvar $id = function( selector ) {\n\t\treturn $( document.getElementById( selector ) );\n\t};\n\tvar getRowId = function( id, newIterator ) {\n\t\tid = id.split('-');\n\t\tid.splice(id.length - 1, 1);\n\t\tid.push( newIterator );\n\t\treturn id.join('-');\n\t};\n\tcmb.$id = $id;\n\tvar defaults = {\n\t\tidNumber        : false,\n\t\trepeatEls       : 'input:not([type=\"button\"]),select,textarea,.cmb2-media-status',\n\t\tnoEmpty         : 'input:not([type=\"button\"]):not([type=\"radio\"]):not([type=\"checkbox\"]),textarea',\n\t\trepeatUpdate    : 'input:not([type=\"button\"]),select,textarea,label',\n\t\tstyleBreakPoint : 450,\n\t\tmediaHandlers   : {},\n\t\tdefaults : {\n\t\t\ttime_picker  : l10n.defaults.time_picker,\n\t\t\tdate_picker  : l10n.defaults.date_picker,\n\t\t\tcolor_picker : l10n.defaults.color_picker || {},\n\t\t\tcode_editor  : l10n.defaults.code_editor,\n\t\t},\n\t\tmedia : {\n\t\t\tframes : {},\n\t\t},\n\t};\n\n\tcmb.init = function() {\n\t\t$document = $( document );\n\n\t\t\/\/ Setup the CMB2 object defaults.\n\t\t$.extend( cmb, defaults );\n\n\t\tcmb.trigger( 'cmb_pre_init' );\n\n\t\tvar $metabox     = cmb.metabox();\n\t\tvar $repeatGroup = $metabox.find('.cmb-repeatable-group');\n\n\t\t \/\/ Init time\/date\/color pickers\n\t\tcmb.initPickers( $metabox.find('input[type=\"text\"].cmb2-timepicker'), $metabox.find('input[type=\"text\"].cmb2-datepicker'), $metabox.find('input[type=\"text\"].cmb2-colorpicker') );\n\n\t\t\/\/ Init code editors.\n\t\tcmb.initCodeEditors( $metabox.find( '.cmb2-textarea-code:not(.disable-codemirror)' ) );\n\n\t\t\/\/ Insert toggle button into DOM wherever there is multicheck. credit: Genesis Framework\n\t\t$( '<p><span class=\"button-secondary cmb-multicheck-toggle\">' + l10n.strings.check_toggle + '<\/span><\/p>' ).insertBefore( '.cmb2-checkbox-list:not(.no-select-all)' );\n\n\t\t\/\/ Make File List drag\/drop sortable:\n\t\tcmb.makeListSortable();\n\t\t\/\/ Make Repeatable fields drag\/drop sortable:\n\t\tcmb.makeRepeatableSortable();\n\n\t\t$metabox\n\t\t\t.on( 'change', '.cmb2_upload_file', function() {\n\t\t\t\tcmb.media.field = $( this ).attr( 'id' );\n\t\t\t\t$id( cmb.media.field + '_id' ).val('');\n\t\t\t})\n\t\t\t\/\/ Media\/file management\n\t\t\t.on( 'click', '.cmb-multicheck-toggle', cmb.toggleCheckBoxes )\n\t\t\t.on( 'click', '.cmb2-upload-button', cmb.handleMedia )\n\t\t\t.on( 'click', '.cmb-attach-list li, .cmb2-media-status .img-status img, .cmb2-media-status .file-status > span', cmb.handleFileClick )\n\t\t\t.on( 'click', '.cmb2-remove-file-button', cmb.handleRemoveMedia )\n\t\t\t\/\/ Repeatable content\n\t\t\t.on( 'click', '.cmb-add-group-row', cmb.addGroupRow )\n\t\t\t.on( 'click', '.cmb-add-row-button', cmb.addAjaxRow )\n\t\t\t.on( 'click', '.cmb-remove-group-row', cmb.removeGroupRow )\n\t\t\t.on( 'click', '.cmb-remove-row-button', cmb.removeAjaxRow )\n\t\t\t\/\/ Ajax oEmbed display\n\t\t\t.on( 'keyup paste focusout', '.cmb2-oembed', cmb.maybeOembed )\n\t\t\t\/\/ Reset titles when removing a row\n\t\t\t.on( 'cmb2_remove_row', '.cmb-repeatable-group', cmb.resetTitlesAndIterator )\n\t\t\t.on( 'click', '.cmbhandle, .cmbhandle + .cmbhandle-title', cmb.toggleHandle );\n\n\t\tif ( $repeatGroup.length ) {\n\t\t\t$repeatGroup\n\t\t\t\t.on( 'cmb2_add_row', cmb.emptyValue )\n\t\t\t\t.on( 'cmb2_add_row', cmb.setDefaults )\n\t\t\t\t.filter('.sortable').each( function() {\n\t\t\t\t\t\/\/ Add sorting arrows\n\t\t\t\t\t$( this ).find( '.cmb-remove-group-row-button' ).before( '<a class=\"button-secondary cmb-shift-rows move-up alignleft\" href=\"#\"><span class=\"'+ l10n.up_arrow_class +'\"><\/span><\/a> <a class=\"button-secondary cmb-shift-rows move-down alignleft\" href=\"#\"><span class=\"'+ l10n.down_arrow_class +'\"><\/span><\/a>' );\n\t\t\t\t})\n\t\t\t\t.on( 'click', '.cmb-shift-rows', cmb.shiftRows );\n\t\t}\n\n\t\t\/\/ on pageload\n\t\tsetTimeout( cmb.resizeoEmbeds, 500);\n\t\t\/\/ and on window resize\n\t\t$( window ).on( 'resize', cmb.resizeoEmbeds );\n\n\t\tif ( $id( 'addtag' ).length ) {\n\t\t\tcmb.listenTagAdd();\n\t\t}\n\n\t\t$( document ).on( 'cmb_init', cmb.mceEnsureSave );\n\n\t\tcmb.trigger( 'cmb_init' );\n\t};\n\n\t\/\/ Handles updating tiny mce instances when saving a gutenberg post.\n\t\/\/ https:\/\/github.com\/CMB2\/CMB2\/issues\/1156\n\tcmb.mceEnsureSave = function() {\n\t\t\/\/ If no wp.data, do not proceed (no gutenberg)\n\t\tif ( ! wp.data || ! wp.data.hasOwnProperty('subscribe') ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ If the current user cannot richedit, or MCE is not available, bail.\n\t\tif ( ! cmb.canTinyMCE() ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp.data.subscribe( function() {\n\t\t\tvar editor = wp.data.hasOwnProperty('select') ? wp.data.select( 'core\/editor' ) : null;\n\n\t\t\t\/\/ the post is currently being saved && we have tinymce editors\n\t\t\tif ( editor && editor.isSavingPost && editor.isSavingPost() && window.tinyMCE.editors.length ) {\n\t\t\t\tfor ( var i = 0; i < window.tinyMCE.editors.length; i++ ) {\n\t\t\t\t\tif ( window.tinyMCE.activeEditor !== window.tinyMCE.editors[i] ) {\n\t\t\t\t\t\twindow.tinyMCE.editors[i].save();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.canTinyMCE = function() {\n\t\treturn l10n.user_can_richedit && window.tinyMCE;\n\t};\n\n\tcmb.listenTagAdd = function() {\n\t\t$document.ajaxSuccess( function( evt, xhr, settings ) {\n\t\t\tif ( settings.data && settings.data.length && -1 !== settings.data.indexOf( 'action=add-tag' ) ) {\n\t\t\t\tcmb.resetBoxes( $id( 'addtag' ).find( '.cmb2-wrap > .cmb2-metabox' ) );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.resetBoxes = function( $boxes ) {\n\t\t$.each( $boxes, function() {\n\t\t\tcmb.resetBox( $( this ) );\n\t\t});\n\t};\n\n\tcmb.resetBox = function( $box ) {\n\t\t$box.find( '.wp-picker-clear' ).trigger( 'click' );\n\t\t$box.find( '.cmb2-remove-file-button' ).trigger( 'click' );\n\t\t$box.find( '.cmb-row.cmb-repeatable-grouping:not(:first-of-type) .cmb-remove-group-row' ).click();\n\t\t$box.find( '.cmb-repeat-row:not(:first-child)' ).remove();\n\n\t\t$box.find( 'input:not([type=\"button\"]),select,textarea' ).each( function() {\n\t\t\tvar $element = $( this );\n\t\t\tvar tagName = $element.prop('tagName');\n\n\t\t\tif ( 'INPUT' === tagName ) {\n\t\t\t\tvar elType = $element.attr( 'type' );\n\t\t\t\tif ( 'checkbox' === elType || 'radio' === elType ) {\n\t\t\t\t\t$element.prop( 'checked', false );\n\t\t\t\t} else {\n\t\t\t\t\t$element.val( '' );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( 'SELECT' === tagName ) {\n\t\t\t\t$( 'option:selected', this ).prop( 'selected', false );\n\t\t\t}\n\t\t\tif ( 'TEXTAREA' === tagName ) {\n\t\t\t\t$element.html( '' );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.resetTitlesAndIterator = function( evt ) {\n\t\tif ( ! evt.group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $table = $( evt.target );\n\t\tvar groupTitle = $table.find( '.cmb-add-group-row' ).data( 'grouptitle' );\n\n\t\t\/\/ Loop repeatable group table rows\n\t\t$table.find( '.cmb-repeatable-grouping' ).each( function( rowindex ) {\n\t\t\tvar $row = $( this );\n\t\t\tvar prevIterator = parseInt( $row.data( 'iterator' ), 10 );\n\t\t\tif ( prevIterator === rowindex ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t\/\/ Reset rows iterator\n\t\t\t$row\n\t\t\t\t.attr( 'data-iterator', rowindex )\n\t\t\t\t.data( 'iterator', rowindex )\n\t\t\t\t.attr('id', getRowId( $row.attr('id'), rowindex ) )\n\t\t\t\t.find( cmb.repeatEls ).each( function() {\n\t\t\t\t\tcmb.updateNameAttr( $( this ), prevIterator, rowindex );\n\t\t\t\t});\n\n\t\t\tcmb.resetGroupTitles( $row, rowindex, groupTitle );\n\t\t});\n\t};\n\n\tcmb.resetGroupTitles = function( $row, newIterator, groupTitle ) {\n\t\tif ( groupTitle ) {\n\t\t\tvar $rowTitle = $row.find( 'h3.cmb-group-title' );\n\n\t\t\t\/\/ Reset rows title\n\t\t\tif ( $rowTitle.length ) {\n\t\t\t\t$rowTitle.text( groupTitle.replace( '{#}', parseInt( newIterator, 10 ) + 1 ) );\n\t\t\t}\n\t\t}\n\t};\n\n\tcmb.toggleHandle = function( evt ) {\n\t\tevt.preventDefault();\n\t\tcmb.trigger( 'postbox-toggled', $( this ).parent('.postbox').toggleClass('closed') );\n\t};\n\n\tcmb.toggleCheckBoxes = function( evt ) {\n\t\tevt.preventDefault();\n\t\tvar $this = $( this );\n\t\tvar $multicheck = $this.closest( '.cmb-td' ).find( 'input[type=checkbox]:not([disabled])' );\n\n\t\tvar $toggled = ! $this.data( 'checked' );\n\t\t$multicheck.prop( 'checked', $toggled ).trigger( 'change' );\n\t\t$this.data( 'checked', $toggled );\n\t};\n\n\tcmb.handleMedia = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $el = $( this );\n\t\tcmb.attach_id = ! $el.hasClass( 'cmb2-upload-list' ) ? $el.closest( '.cmb-td' ).find( '.cmb2-upload-file-id' ).val() : false;\n\t\t\/\/ Clean up default 0 value\n\t\tcmb.attach_id = '0' !== cmb.attach_id ? cmb.attach_id : false;\n\n\t\tcmb.handleFieldMedia( $el.prev('input.cmb2-upload-file'), $el.hasClass( 'cmb2-upload-list' ) );\n\t};\n\n\tcmb.handleFileClick = function( evt ) {\n\t\tif ( $( evt.target ).is( 'a' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevt.preventDefault();\n\n\t\tvar $el    = $( this );\n\t\tvar $td    = $el.closest( '.cmb-td' );\n\t\tvar isList = $td.find( '.cmb2-upload-button' ).hasClass( 'cmb2-upload-list' );\n\t\tcmb.attach_id = isList ? $el.find( 'input[type=\"hidden\"]' ).data( 'id' ) : $td.find( '.cmb2-upload-file-id' ).val();\n\n\t\tif ( cmb.attach_id ) {\n\t\t\tcmb.handleFieldMedia( $td.find( 'input.cmb2-upload-file' ), isList );\n\t\t}\n\t};\n\n\t\/\/ Leaving this in for back-compat...\n\tcmb._handleMedia = function( id, isList ) {\n\t\treturn cmb.handleFieldMedia( $id( id ), isList );\n\t};\n\n\tcmb.handleFieldMedia = function( $field, isList ) {\n\t\tif ( ! wp ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar id  = $field.attr('id');\n\t\tvar fieldData = $field.data();\n\t\tvar media, handlers;\n\n\t\t\/\/ Get\/set unique id since actual id cold _not_ be unique due to bad replacements, etc...\n\t\tvar uid = fieldData.mediaid;\n\t\tif ( ! uid ) {\n\t\t\tuid = _.uniqueId();\n\t\t\t$field.attr('data-mediaid', uid).data('mediaid', uid);\n\t\t\tfieldData.mediaid = uid;\n\t\t}\n\n\t\thandlers          = cmb.mediaHandlers;\n\t\tmedia             = cmb.media;\n\t\tmedia.mediaid     = uid;\n\t\tmedia.field       = id;\n\t\tmedia.$field      = $field;\n\t\tmedia.fieldData   = fieldData;\n\t\tmedia.previewSize = media.fieldData.previewsize;\n\t\tmedia.sizeName    = media.fieldData.sizename;\n\t\tmedia.fieldName   = $field.attr('name');\n\t\tmedia.isList      = isList;\n\n\t\t\/\/ If this field's media frame already exists, reopen it.\n\t\tif ( uid in media.frames ) {\n\t\t\treturn media.frames[ uid ].open();\n\t\t}\n\n\t\t\/\/ Create the media frame.\n\t\tmedia.frames[ uid ] = wp.media( {\n\t\t\ttitle: cmb.metabox().find('label[for=\"' + id + '\"]').text(),\n\t\t\tlibrary : media.fieldData.queryargs || {},\n\t\t\tbutton: {\n\t\t\t\ttext: l10n.strings[ isList ? 'upload_files' : 'upload_file' ]\n\t\t\t},\n\t\t\tmultiple: isList ? 'add' : false\n\t\t} );\n\n\t\t\/\/ Enable the additional media filters: https:\/\/github.com\/CMB2\/CMB2\/issues\/873\n\t\tmedia.frames[ uid ].states.first().set( 'filterable', 'all' );\n\n\t\tcmb.trigger( 'cmb_media_modal_init', media );\n\n\t\thandlers.list = function( selection, returnIt ) {\n\n\t\t\t\/\/ Setup our fileGroup array\n\t\t\tvar fileGroup = [];\n\t\t\tvar attachmentHtml;\n\n\t\t\tif ( ! handlers.list.templates ) {\n\t\t\t\thandlers.list.templates = {\n\t\t\t\t\timage : wp.template( 'cmb2-list-image' ),\n\t\t\t\t\tfile  : wp.template( 'cmb2-list-file' ),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t\/\/ Loop through each attachment\n\t\t\tselection.each( function( attachment ) {\n\n\t\t\t\t\/\/ Image preview or standard generic output if it's not an image.\n\t\t\t\tattachmentHtml = handlers.getAttachmentHtml( attachment, 'list' );\n\n\t\t\t\t\/\/ Add our file to our fileGroup array\n\t\t\t\tfileGroup.push( attachmentHtml );\n\t\t\t});\n\n\t\t\tif ( ! returnIt ) {\n\t\t\t\t\/\/ Append each item from our fileGroup array to .cmb2-media-status\n\t\t\t\tmedia.$field.siblings( '.cmb2-media-status' ).append( fileGroup );\n\t\t\t} else {\n\t\t\t\treturn fileGroup;\n\t\t\t}\n\n\t\t};\n\n\t\thandlers.single = function( selection ) {\n\t\t\tif ( ! handlers.single.templates ) {\n\t\t\t\thandlers.single.templates = {\n\t\t\t\t\timage : wp.template( 'cmb2-single-image' ),\n\t\t\t\t\tfile  : wp.template( 'cmb2-single-file' ),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t\/\/ Only get one file from the uploader\n\t\t\tvar attachment = selection.first();\n\n\t\t\tmedia.$field.val( attachment.get( 'url' ) );\n\t\t\tmedia.$field.closest( '.cmb-td' ).find('.cmb2-upload-file-id')\n\t\t\t\t.val( attachment.get( 'id' ) );\n\n\t\t\t\/\/ Image preview or standard generic output if it's not an image.\n\t\t\tvar attachmentHtml = handlers.getAttachmentHtml( attachment, 'single' );\n\n\t\t\t\/\/ add\/display our output\n\t\t\tmedia.$field.siblings( '.cmb2-media-status' ).slideDown().html( attachmentHtml );\n\t\t};\n\n\t\thandlers.getAttachmentHtml = function( attachment, templatesId ) {\n\t\t\tvar isImage = 'image' === attachment.get( 'type' );\n\t\t\tvar data    = handlers.prepareData( attachment, isImage );\n\n\t\t\t\/\/ Image preview or standard generic output if it's not an image.\n\t\t\treturn handlers[ templatesId ].templates[ isImage ? 'image' : 'file' ]( data );\n\t\t};\n\n\t\thandlers.prepareData = function( data, image ) {\n\t\t\tif ( image ) {\n\t\t\t\t\/\/ Set the correct image size data\n\t\t\t\thandlers.getImageData.call( data, 50 );\n\t\t\t}\n\n\t\t\tdata                   = data.toJSON();\n\t\t\tdata.mediaField        = media.field;\n\t\t\tdata.mediaFieldName    = media.fieldName;\n\t\t\tdata.stringRemoveImage = l10n.strings.remove_image;\n\t\t\tdata.stringFile        = l10n.strings.file;\n\t\t\tdata.stringDownload    = l10n.strings.download;\n\t\t\tdata.stringRemoveFile  = l10n.strings.remove_file;\n\n\t\t\treturn data;\n\t\t};\n\n\t\thandlers.getImageData = function( fallbackSize ) {\n\n\t\t\t\/\/ Preview size dimensions\n\t\t\tvar previewW = media.previewSize[0] || fallbackSize;\n\t\t\tvar previewH = media.previewSize[1] || fallbackSize;\n\n\t\t\t\/\/ Image dimensions and url\n\t\t\tvar url    = this.get( 'url' );\n\t\t\tvar width  = this.get( 'width' );\n\t\t\tvar height = this.get( 'height' );\n\t\t\tvar sizes  = this.get( 'sizes' );\n\n\t\t\t\/\/ Get the correct dimensions and url if a named size is set and exists\n\t\t\t\/\/ fallback to the 'large' size\n\t\t\tif ( sizes ) {\n\t\t\t\tif ( sizes[ media.sizeName ] ) {\n\t\t\t\t\turl    = sizes[ media.sizeName ].url;\n\t\t\t\t\twidth  = sizes[ media.sizeName ].width;\n\t\t\t\t\theight = sizes[ media.sizeName ].height;\n\t\t\t\t} else if ( sizes.large ) {\n\t\t\t\t\turl    = sizes.large.url;\n\t\t\t\t\twidth  = sizes.large.width;\n\t\t\t\t\theight = sizes.large.height;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\/\/ Fit the image in to the preview size, keeping the correct aspect ratio\n\t\t\tif ( width > previewW ) {\n\t\t\t\theight = Math.floor( previewW * height \/ width );\n\t\t\t\twidth = previewW;\n\t\t\t}\n\n\t\t\tif ( height > previewH ) {\n\t\t\t\twidth = Math.floor( previewH * width \/ height );\n\t\t\t\theight = previewH;\n\t\t\t}\n\n\t\t\tif ( ! width ) {\n\t\t\t\twidth = previewW;\n\t\t\t}\n\n\t\t\tif ( ! height ) {\n\t\t\t\theight = 'svg' === this.get( 'filename' ).split( '.' ).pop() ? '100%' : previewH;\n\t\t\t}\n\n\t\t\tthis.set( 'sizeUrl', url );\n\t\t\tthis.set( 'sizeWidth', width );\n\t\t\tthis.set( 'sizeHeight', height );\n\n\t\t\treturn this;\n\t\t};\n\n\t\thandlers.selectFile = function() {\n\t\t\tvar selection = media.frames[ uid ].state().get( 'selection' );\n\t\t\tvar type = isList ? 'list' : 'single';\n\n\t\t\tif ( cmb.attach_id && isList ) {\n\t\t\t\t$( '[data-id=\"'+ cmb.attach_id +'\"]' ).parents( 'li' ).replaceWith( handlers.list( selection, true ) );\n\t\t\t} else {\n\t\t\t\thandlers[type]( selection );\n\t\t\t}\n\n\t\t\tcmb.trigger( 'cmb_media_modal_select', selection, media );\n\t\t};\n\n\t\thandlers.openModal = function() {\n\t\t\tvar selection = media.frames[ uid ].state().get( 'selection' );\n\t\t\tvar attach;\n\n\t\t\tif ( ! cmb.attach_id ) {\n\t\t\t\tselection.reset();\n\t\t\t} else {\n\t\t\t\tattach = wp.media.attachment( cmb.attach_id );\n\t\t\t\tattach.fetch();\n\t\t\t\tselection.set( attach ? [ attach ] : [] );\n\t\t\t}\n\n\t\t\tcmb.trigger( 'cmb_media_modal_open', selection, media );\n\t\t};\n\n\t\t\/\/ When a file is selected, run a callback.\n\t\tmedia.frames[ uid ]\n\t\t\t.on( 'select', handlers.selectFile )\n\t\t\t.on( 'open', handlers.openModal );\n\n\t\t\/\/ Finally, open the modal\n\t\tmedia.frames[ uid ].open();\n\t};\n\n\tcmb.handleRemoveMedia = function( evt ) {\n\t\tevt.preventDefault();\n\t\tvar $this = $( this );\n\t\tif ( $this.is( '.cmb-attach-list .cmb2-remove-file-button' ) ) {\n\t\t\t$this.parents( '.cmb2-media-item' ).remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tvar $cell        = $this.closest( '.cmb-td' );\n\t\tcmb.media.$field = $cell.find('.cmb2-upload-file');\n\t\tcmb.media.field  = cmb.media.$field.attr('id');\n\n\t\tcmb.media.$field.val('');\n\t\t$cell.find('.cmb2-upload-file-id').val('');\n\t\t$this.parents('.cmb2-media-status').html('');\n\n\t\treturn false;\n\t};\n\n\tcmb.cleanRow = function( $row, prevNum, group ) {\n\t\tvar $elements = $row.find( cmb.repeatUpdate );\n\t\tif ( group ) {\n\n\t\t\tvar $other = $row.find( '[id]' ).not( cmb.repeatUpdate );\n\n\t\t\t\/\/ Remove extra ajaxed rows\n\t\t\t$row.find('.cmb-repeat-table .cmb-repeat-row:not(:first-child)').remove();\n\n\t\t\t\/\/ Update all elements w\/ an ID\n\t\t\tif ( $other.length ) {\n\t\t\t\t$other.each( function() {\n\t\t\t\t\tvar $_this = $( this );\n\t\t\t\t\tvar oldID = $_this.attr( 'id' );\n\t\t\t\t\tvar newID = oldID.replace( '_'+ prevNum, '_'+ cmb.idNumber );\n\t\t\t\t\tvar $buttons = $row.find('[data-selector=\"'+ oldID +'\"]');\n\t\t\t\t\t$_this.attr( 'id', newID );\n\n\t\t\t\t\t\/\/ Replace data-selector vars\n\t\t\t\t\tif ( $buttons.length ) {\n\t\t\t\t\t\t$buttons.attr( 'data-selector', newID ).data( 'selector', newID );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t$elements.filter( ':checked' ).removeAttr( 'checked' );\n\t\t$elements.find( ':checked' ).removeAttr( 'checked' );\n\t\t$elements.filter( ':selected' ).removeAttr( 'selected' );\n\t\t$elements.find( ':selected' ).removeAttr( 'selected', false );\n\n\t\tcmb.resetGroupTitles( $row, cmb.idNumber, $row.data( 'title' ) );\n\n\t\t$elements.each( function() {\n\t\t\tcmb.elReplacements( $( this ), prevNum, group );\n\t\t} );\n\n\t\treturn cmb;\n\t};\n\n\tcmb.elReplacements = function( $newInput, prevNum, group ) {\n\t\tvar oldFor    = $newInput.attr( 'for' );\n\t\tvar oldVal    = $newInput.val();\n\t\tvar type      = $newInput.prop( 'type' );\n\t\tvar defVal    = cmb.getFieldArg( $newInput, 'default' );\n\t\tvar newVal    = 'undefined' !== typeof defVal && false !== defVal ? defVal : '';\n\t\tvar tagName   = $newInput.prop('tagName');\n\t\tvar checkable = 'radio' === type || 'checkbox' === type ? oldVal : false;\n\t\tvar attrs     = {};\n\t\tvar newID, oldID;\n\t\tif ( oldFor ) {\n\t\t\tattrs = { 'for' : oldFor.replace( '_'+ prevNum, '_'+ cmb.idNumber ) };\n\t\t} else {\n\t\t\tvar oldName = $newInput.attr( 'name' );\n\t\t\tvar newName;\n\t\t\toldID = $newInput.attr( 'id' );\n\n\t\t\t\/\/ Handle adding groups vs rows.\n\t\t\tif ( group ) {\n\t\t\t\t\/\/ Expect another bracket after group's index closing bracket.\n\t\t\t\tnewName = oldName ? oldName.replace( '['+ prevNum +'][', '['+ cmb.idNumber +'][' ) : '';\n\t\t\t\t\/\/ Expect another underscore after group's index trailing underscore.\n\t\t\t\tnewID   = oldID ? oldID.replace( '_' + prevNum + '_', '_' + cmb.idNumber + '_' ) : '';\n\t\t\t}\n\t\t\telse {\n\t\t\t\t\/\/ Row indexes are at the very end of the string.\n\t\t\t\tnewName = oldName ? cmb.replaceLast( oldName, '[' + prevNum + ']', '[' + cmb.idNumber + ']' ) : '';\n\t\t\t\tnewID   = oldID ? cmb.replaceLast( oldID, '_' + prevNum, '_' + cmb.idNumber ) : '';\n\t\t\t}\n\n\t\t\tattrs = {\n\t\t\t\tid: newID,\n\t\t\t\tname: newName\n\t\t\t};\n\n\t\t}\n\n\t\t\/\/ Clear out textarea values\n\t\tif ( 'TEXTAREA' === tagName ) {\n\t\t\t$newInput.html( newVal );\n\t\t}\n\n\t\tif ( 'SELECT' === tagName && 'undefined' !== typeof defVal ) {\n\t\t\tvar $toSelect = $newInput.find( '[value=\"'+ defVal + '\"]' );\n\t\t\tif ( $toSelect.length ) {\n\t\t\t\t$toSelect.attr( 'selected', 'selected' ).prop( 'selected', 'selected' );\n\t\t\t}\n\t\t}\n\n\t\tif ( checkable ) {\n\t\t\t$newInput.removeAttr( 'checked' );\n\t\t\tif ( 'undefined' !== typeof defVal && oldVal === defVal ) {\n\t\t\t\t$newInput.attr( 'checked', 'checked' ).prop( 'checked', 'checked' );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! group && $newInput[0].hasAttribute( 'data-iterator' ) ) {\n\t\t\tattrs['data-iterator'] = cmb.idNumber;\n\t\t}\n\n\t\t$newInput\n\t\t\t.removeClass( 'hasDatepicker' )\n\t\t\t.val( checkable ? checkable : newVal ).attr( attrs );\n\n\t\treturn $newInput;\n\t};\n\n\tcmb.newRowHousekeeping = function( $row ) {\n\t\tvar $colorPicker = $row.find( '.wp-picker-container' );\n\t\tvar $list        = $row.find( '.cmb2-media-status' );\n\n\t\tif ( $colorPicker.length ) {\n\t\t\t\/\/ Need to clean-up colorpicker before appending\n\t\t\t$colorPicker.each( function() {\n\t\t\t\tvar $td = $( this ).parent();\n\t\t\t\t$td.html( $td.find( 'input[type=\"text\"].cmb2-colorpicker' ).attr('style', '') );\n\t\t\t});\n\t\t}\n\n\t\t\/\/ Need to clean-up colorpicker before appending\n\t\tif ( $list.length ) {\n\t\t\t$list.empty();\n\t\t}\n\n\t\treturn cmb;\n\t};\n\n\tcmb.afterRowInsert = function( $row ) {\n\t\t\/\/ Init pickers from new row\n\t\tcmb.initPickers( $row.find('input[type=\"text\"].cmb2-timepicker'), $row.find('input[type=\"text\"].cmb2-datepicker'), $row.find('input[type=\"text\"].cmb2-colorpicker') );\n\t};\n\n\tcmb.updateNameAttr = function ( $el, prevIterator, newIterator ) {\n\t\tvar name = $el.attr( 'name' ); \/\/ get current name\n\n\t\t\/\/ If name is defined\n\t\tif ( 'undefined' !== typeof name ) {\n\t\t\tvar isFileList = $el.attr( 'id' ).indexOf('filelist');\n\n\t\t\t\/\/ Update field name attributes so data is not orphaned when a row is removed and post is saved\n\t\t\tvar from    = isFileList ? '[' + prevIterator + '][' : '[' + prevIterator + ']';\n\t\t\tvar to      = isFileList ? '[' + newIterator + '][' : '[' + newIterator + ']';\n\t\t\tvar newName = name.replace( from, to );\n\n\t\t\t\/\/ New name with replaced iterator\n\t\t\t$el.attr( 'name', newName );\n\t\t}\n\t};\n\n\tcmb.emptyValue = function( evt, row ) {\n\t\t$( cmb.noEmpty, row ).val( '' );\n\t};\n\n\tcmb.setDefaults = function( evt, row ) {\n\t\t$( cmb.noEmpty, row ).each( function() {\n\t\t\tvar $el = $(this);\n\t\t\tvar defVal = cmb.getFieldArg( $el, 'default' );\n\t\t\tif ( 'undefined' !== typeof defVal && false !== defVal ) {\n\t\t\t\t$el.val( defVal );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.addGroupRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this = $( this );\n\n\t\t\/\/ before anything significant happens\n\t\tcmb.triggerElement( $this, 'cmb2_add_group_row_start', $this );\n\n\t\tvar $table   = $id( $this.data('selector') );\n\t\tvar $oldRow  = $table.find('.cmb-repeatable-grouping').last();\n\t\tvar prevNum  = parseInt( $oldRow.data('iterator'), 10 );\n\t\tcmb.idNumber = parseInt( prevNum, 10 ) + 1;\n\t\tvar $row     = $oldRow.clone();\n\t\tvar nodeName = $row.prop('nodeName') || 'div';\n\n\t\t\/\/ Make sure the next number doesn't exist.\n\t\twhile ( $table.find( '.cmb-repeatable-grouping[data-iterator=\"'+ cmb.idNumber +'\"]' ).length > 0 ) {\n\t\t\tcmb.idNumber++;\n\t\t}\n\n\t\tcmb.newRowHousekeeping( $row.data( 'title', $this.data( 'grouptitle' ) ) ).cleanRow( $row, prevNum, true );\n\t\t$row.find( '.cmb-add-row-button' ).prop( 'disabled', false );\n\n\t\tvar $newRow = $( '<' + nodeName + ' id=\"'+ getRowId( $oldRow.attr('id'), cmb.idNumber ) +'\" class=\"postbox cmb-row cmb-repeatable-grouping\" data-iterator=\"'+ cmb.idNumber +'\">'+ $row.html() +'<\/' + nodeName + '>' );\n\t\t$oldRow.after( $newRow );\n\n\t\tcmb.afterRowInsert( $newRow );\n\t\tcmb.makeRepeatableSortable( $newRow );\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_add_row', group: true }, $newRow );\n\t};\n\n\tcmb.addAjaxRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this     = $( this );\n\t\tvar $table    = $id( $this.data('selector') );\n\t\tvar $row      = $table.find('.empty-row');\n\t\tvar prevNum   = parseInt( $row.find('[data-iterator]').data('iterator'), 10 );\n\t\tcmb.idNumber  = parseInt( prevNum, 10 ) + 1;\n\t\tvar $emptyrow = $row.clone();\n\n\t\tcmb.newRowHousekeeping( $emptyrow ).cleanRow( $emptyrow, prevNum );\n\n\t\t$row.removeClass('empty-row hidden').addClass('cmb-repeat-row');\n\t\t$row.after( $emptyrow );\n\n\t\tcmb.afterRowInsert( $emptyrow );\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_add_row', group: false }, $emptyrow, $row );\n\t};\n\n\tcmb.removeGroupRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this        = $( this );\n\t\tvar confirmation = $this.data('confirm');\n\n\t\t\/\/ Process further only if deletion confirmation enabled and user agreed.\n\t\tif ( ! cmb.resetRow.resetting && confirmation && ! window.confirm( confirmation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $table  = $id( $this.data('selector') );\n\t\tvar $parent = $this.parents('.cmb-repeatable-grouping');\n\t\tvar number  = $table.find('.cmb-repeatable-grouping').length;\n\n\t\tif ( number < 2 ) {\n\t\t\treturn cmb.resetRow( $parent.parents('.cmb-repeatable-group').find( '.cmb-add-group-row' ), $this );\n\t\t}\n\n\t\tcmb.triggerElement( $table, 'cmb2_remove_group_row_start', $this );\n\n\t\t$parent.remove();\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_remove_row', group: true } );\n\t};\n\n\tcmb.removeAjaxRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this = $( this );\n\n\t\t\/\/ Check if disabled\n\t\tif ( $this.hasClass( 'button-disabled' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $parent = $this.parents('.cmb-row');\n\t\tvar $table  = $this.parents('.cmb-repeat-table');\n\t\tvar number  = $table.find('.cmb-row').length;\n\n\t\tif ( number <= 2 ) {\n\t\t\treturn cmb.resetRow( $parent.find( '.cmb-add-row-button' ), $this );\n\t\t}\n\n\t\tif ( $parent.hasClass('empty-row') ) {\n\t\t\t$parent.prev().addClass( 'empty-row' ).removeClass('cmb-repeat-row');\n\t\t}\n\n\t\t$this.parents('.cmb-repeat-table .cmb-row').remove();\n\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_remove_row', group: false } );\n\t};\n\n\tcmb.resetRow = function( $addNewBtn, $removeBtn ) {\n\t\tcmb.resetRow.resetting = true;\n\t\t\/\/ Click the \"add new\" button followed by the \"remove this\" button\n\t\t\/\/ in order to reset the repeat row to empty values.\n\t\t$addNewBtn.trigger( 'click' );\n\t\t$removeBtn.trigger( 'click' );\n\t\tcmb.resetRow.resetting = false;\n\t};\n\n\tcmb.shiftRows = function( evt ) {\n\n\t\tevt.preventDefault();\n\n\t\tvar $this  = $( this );\n\t\tvar moveUp = $this.hasClass( 'move-up' ) ? true : false;\n\t\tvar $from  = $this.parents( '.cmb-repeatable-grouping' );\n\t\tvar $goto  = $from[ moveUp ? 'prev' : 'next' ]( '.cmb-repeatable-grouping' );\n\n\t\t\/\/ Before shift occurs.\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_enter', $this, $from, $goto );\n\n\t\tif ( ! $goto.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ About to shift\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_start', $this, $from, $goto );\n\n\t\tvar fromIterator = $from.attr('data-iterator');\n\t\tvar toIterator   = $goto.attr('data-iterator');\n\n\t\t\/\/ Replace name attributes in both groups.\n\t\t$from.attr( 'data-iterator', toIterator ).find( cmb.repeatEls ).each( function() {\n\t\t\tcmb.updateNameAttr( $( this ), fromIterator, toIterator );\n\t\t});\n\t\t$goto.attr( 'data-iterator', fromIterator ).find( cmb.repeatEls ).each( function() {\n\t\t\tcmb.updateNameAttr( $( this ), toIterator, fromIterator );\n\t\t});\n\n\t\t\/\/ Replace titles in both groups.\n\t\tvar groupTitle = $this.parents( '.cmb-repeatable-group' ).find('[data-grouptitle]').data( 'grouptitle' );\n\t\tif ( groupTitle ) {\n\t\t\tcmb.resetGroupTitles( $from, toIterator, groupTitle );\n\t\t\tcmb.resetGroupTitles( $goto, fromIterator, groupTitle );\n\t\t}\n\n\t\t\/\/ Now move the group to it's destination.\n\t\t$goto[moveUp ? 'before' : 'after']( $from );\n\n\t\t\/\/ Scroll to the top of the shifted group.\n\t\t$([document.documentElement, document.body]).animate({\n\t\t\tscrollTop: $from.offset().top - 50\n\t\t}, 300);\n\n\t\t\/\/ shift done\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_complete', $this, $from, $goto );\n\t};\n\n\tcmb.initPickers = function( $timePickers, $datePickers, $colorPickers ) {\n\t\tcmb.trigger( 'cmb_init_pickers', {\n\t\t\ttime: $timePickers,\n\t\t\tdate: $datePickers,\n\t\t\tcolor: $colorPickers\n\t\t} );\n\n\t\t\/\/ Initialize jQuery UI timepickers\n\t\tcmb.initDateTimePickers( $timePickers, 'timepicker', 'time_picker' );\n\t\t\/\/ Initialize jQuery UI datepickers\n\t\tcmb.initDateTimePickers( $datePickers, 'datepicker', 'date_picker' );\n\t\t\/\/ Initialize color picker\n\t\tcmb.initColorPickers( $colorPickers );\n\t};\n\n\tcmb.initDateTimePickers = function( $selector, method, defaultKey ) {\n\t\tif ( $selector.length ) {\n\t\t\t$selector[ method ]( 'destroy' ).each( function() {\n\t\t\t\tvar $this     = $( this );\n\t\t\t\tvar fieldOpts = $this.data( method ) || {};\n\t\t\t\tvar options   = $.extend( {}, cmb.defaults[ defaultKey ], fieldOpts );\n\t\t\t\t$this[ method ]( cmb.datePickerSetupOpts( fieldOpts, options, method ) );\n\t\t\t} );\n\t\t}\n\t};\n\n\tcmb.datePickerSetupOpts = function( fieldOpts, options, method ) {\n\t\tvar existing = $.extend( {}, options );\n\n\t\toptions.beforeShow = function( input, inst ) {\n\t\t\tif ( 'timepicker' === method ) {\n\t\t\t\tcmb.addTimePickerClasses( inst.dpDiv );\n\t\t\t}\n\n\t\t\t\/\/ Wrap datepicker w\/ class to narrow the scope of jQuery UI CSS and prevent conflicts\n\t\t\t$id( 'ui-datepicker-div' ).addClass( 'cmb2-element' );\n\n\t\t\t\/\/ Let's be sure to call beforeShow if it was added\n\t\t\tif ( 'function' === typeof existing.beforeShow ) {\n\t\t\t\texisting.beforeShow( input, inst );\n\t\t\t}\n\t\t};\n\n\t\tif ( 'timepicker' === method ) {\n\t\t\toptions.onChangeMonthYear = function( year, month, inst, picker ) {\n\t\t\t\tcmb.addTimePickerClasses( inst.dpDiv );\n\n\t\t\t\t\/\/ Let's be sure to call onChangeMonthYear if it was added\n\t\t\t\tif ( 'function' === typeof existing.onChangeMonthYear ) {\n\t\t\t\t\texisting.onChangeMonthYear( year, month, inst, picker );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\toptions.onClose = function( dateText, inst ) {\n\t\t\t\/\/ Remove the class when we're done with it (and hide to remove FOUC).\n\t\t\tvar $picker = $id( 'ui-datepicker-div' ).removeClass( 'cmb2-element' ).hide();\n\t\t\tif ( 'timepicker' === method && ! $( inst.input ).val() ) {\n\t\t\t\t\/\/ Set the timepicker field value if it's empty.\n\t\t\t\tinst.input.val( $picker.find( '.ui_tpicker_time' ).text() );\n\t\t\t}\n\n\t\t\t\/\/ Let's be sure to call onClose if it was added\n\t\t\tif ( 'function' === typeof existing.onClose ) {\n\t\t\t\texisting.onClose( dateText, inst );\n\t\t\t}\n\t\t};\n\n\t\treturn options;\n\t};\n\n\t\/\/ Adds classes to timepicker buttons.\n\tcmb.addTimePickerClasses = function( $picker ) {\n\t\tvar func = cmb.addTimePickerClasses;\n\t\tfunc.count = func.count || 0;\n\n\t\t\/\/ Wait a bit to let the timepicker render, since these are pre-render events.\n\t\tsetTimeout( function() {\n\t\t\tif ( $picker.find( '.ui-priority-secondary' ).length ) {\n\t\t\t\t$picker.find( '.ui-priority-secondary' ).addClass( 'button-secondary' );\n\t\t\t\t$picker.find( '.ui-priority-primary' ).addClass( 'button-primary' );\n\t\t\t\tfunc.count = 0;\n\t\t\t} else if ( func.count < 5 ) {\n\t\t\t\tfunc.count++;\n\t\t\t\tfunc( $picker );\n\t\t\t}\n\t\t}, 10 );\n\t};\n\n\tcmb.initColorPickers = function( $selector ) {\n\t\tif ( ! $selector.length ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( 'object' === typeof jQuery.wp && 'function' === typeof jQuery.wp.wpColorPicker ) {\n\n\t\t\t$selector.each( function() {\n\t\t\t\tvar $this = $( this );\n\t\t\t\tvar fieldOpts = $this.data( 'colorpicker' ) || {};\n\t\t\t\t$this.wpColorPicker( $.extend( {}, cmb.defaults.color_picker, fieldOpts ) );\n\t\t\t} );\n\n\t\t} else {\n\t\t\t$selector.each( function( i ) {\n\t\t\t\t$( this ).after( '<div id=\"picker-' + i + '\" style=\"z-index: 1000; background: #EEE; border: 1px solid #CCC; position: absolute; display: block;\"><\/div>' );\n\t\t\t\t$id( 'picker-' + i ).hide().farbtastic( $( this ) );\n\t\t\t} )\n\t\t\t.focus( function() {\n\t\t\t\t$( this ).next().show();\n\t\t\t} )\n\t\t\t.blur( function() {\n\t\t\t\t$( this ).next().hide();\n\t\t\t} );\n\t\t}\n\t};\n\n\tcmb.initCodeEditors = function( $selector ) {\n\t\tcmb.trigger( 'cmb_init_code_editors', $selector );\n\n\t\tif ( ! cmb.defaults.code_editor || ! wp || ! wp.codeEditor || ! $selector.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$selector.each( function() {\n\t\t\twp.codeEditor.initialize(\n\t\t\t\tthis.id,\n\t\t\t\tcmb.codeEditorArgs( $( this ).data( 'codeeditor' ) )\n\t\t\t);\n\t\t} );\n\t};\n\n\tcmb.codeEditorArgs = function( overrides ) {\n\t\tvar props = [ 'codemirror', 'csslint', 'jshint', 'htmlhint' ];\n\t\tvar args = $.extend( {}, cmb.defaults.code_editor );\n\t\toverrides = overrides || {};\n\n\t\tfor ( var i = props.length - 1; i >= 0; i-- ) {\n\t\t\tif ( overrides.hasOwnProperty( props[i] ) ) {\n\t\t\t\targs[ props[i] ] = $.extend( {}, args[ props[i] ] || {}, overrides[ props[i] ] );\n\t\t\t}\n\t\t}\n\n\t\treturn args;\n\t};\n\n\tcmb.makeListSortable = function() {\n\t\tvar $filelist = cmb.metabox().find( '.cmb2-media-status.cmb-attach-list' );\n\t\tif ( $filelist.length ) {\n\t\t\t$filelist.sortable({ cursor: 'move' }).disableSelection();\n\t\t}\n\t};\n\n\tcmb.makeRepeatableSortable = function( $row ) {\n\t\tvar $repeatables = ($row || cmb.metabox()).find( '.cmb-repeat-table .cmb-field-list' );\n\n\t\tif ( $repeatables.length ) {\n\t\t\t$repeatables.sortable({\n\t\t\t\titems : '.cmb-repeat-row',\n\t\t\t\tcursor: 'move',\n\t\t\t\t\/\/ The default \"cancel\" attributes are: \"input,textarea,button,select,option\".\n\t\t\t\t\/\/ We are appending .CodeMirror.\n\t\t\t\t\/\/ See https:\/\/api.jqueryui.com\/sortable\/#option-cancel\n\t\t\t\tcancel: 'input,textarea,button,select,option,.CodeMirror'\n\t\t\t});\n\t\t}\n\t};\n\n\tcmb.maybeOembed = function( evt ) {\n\t\tvar $this = $( this );\n\n\t\tvar m = {\n\t\t\tfocusout : function() {\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t\/\/ if it's been 2 seconds, hide our spinner\n\t\t\t\t\tcmb.spinner( '.cmb2-metabox', true );\n\t\t\t\t}, 2000);\n\t\t\t},\n\t\t\tkeyup : function() {\n\t\t\t\tvar betw = function( min, max ) {\n\t\t\t\t\treturn ( evt.which <= max && evt.which >= min );\n\t\t\t\t};\n\t\t\t\t\/\/ Only Ajax on normal keystrokes\n\t\t\t\tif ( betw( 48, 90 ) || betw( 96, 111 ) || betw( 8, 9 ) || evt.which === 187 || evt.which === 190 ) {\n\t\t\t\t\t\/\/ fire our ajax function\n\t\t\t\t\tcmb.doAjax( $this, evt );\n\t\t\t\t}\n\t\t\t},\n\t\t\tpaste : function() {\n\t\t\t\t\/\/ paste event is fired before the value is filled, so wait a bit\n\t\t\t\tsetTimeout( function() { cmb.doAjax( $this ); }, 100);\n\t\t\t}\n\t\t};\n\n\t\tm[ evt.type ]();\n\t};\n\n\t\/**\n\t * Resize oEmbed videos to fit in their respective metaboxes\n\t *\n\t * @since  0.9.4\n\t *\n\t * @return {return}\n\t *\/\n\tcmb.resizeoEmbeds = function() {\n\t\tcmb.metabox().each( function() {\n\t\t\tvar $this      = $( this );\n\t\t\tvar $tableWrap = $this.parents('.inside');\n\t\t\tvar isSide     = $this.parents('.inner-sidebar').length || $this.parents( '#side-sortables' ).length;\n\t\t\tvar isSmall    = isSide;\n\t\t\tvar isSmallest = false;\n\t\t\tif ( ! $tableWrap.length )  {\n\t\t\t\treturn true; \/\/ continue\n\t\t\t}\n\n\t\t\t\/\/ Calculate new width\n\t\t\tvar tableW = $tableWrap.width();\n\n\t\t\tif ( cmb.styleBreakPoint > tableW ) {\n\t\t\t\tisSmall    = true;\n\t\t\t\tisSmallest = ( cmb.styleBreakPoint - 62 ) > tableW;\n\t\t\t}\n\n\t\t\ttableW = isSmall ? tableW : Math.round(($tableWrap.width() * 0.82)*0.97);\n\t\t\tvar newWidth = tableW - 30;\n\t\t\tif ( isSmall && ! isSide && ! isSmallest ) {\n\t\t\t\tnewWidth = newWidth - 75;\n\t\t\t}\n\t\t\tif ( newWidth > 639 ) {\n\t\t\t\treturn true; \/\/ continue\n\t\t\t}\n\n\t\t\tvar $embeds   = $this.find('.cmb-type-oembed .embed-status');\n\t\t\tvar $children = $embeds.children().not('.cmb2-remove-wrapper');\n\t\t\tif ( ! $children.length ) {\n\t\t\t\treturn true; \/\/ continue\n\t\t\t}\n\n\t\t\t$children.each( function() {\n\t\t\t\tvar $this     = $( this );\n\t\t\t\tvar iwidth    = $this.width();\n\t\t\t\tvar iheight   = $this.height();\n\t\t\t\tvar _newWidth = newWidth;\n\t\t\t\tif ( $this.parents( '.cmb-repeat-row' ).length && ! isSmall ) {\n\t\t\t\t\t\/\/ Make room for our repeatable \"remove\" button column\n\t\t\t\t\t_newWidth = newWidth - 91;\n\t\t\t\t\t_newWidth = 785 > tableW ? _newWidth - 15 : _newWidth;\n\t\t\t\t}\n\t\t\t\t\/\/ Calc new height\n\t\t\t\tvar newHeight = Math.round((_newWidth * iheight)\/iwidth);\n\t\t\t\t$this.width(_newWidth).height(newHeight);\n\t\t\t});\n\t\t});\n\t};\n\n\t\/\/ function for running our ajax\n\tcmb.doAjax = function( $obj ) {\n\t\t\/\/ get typed value\n\t\tvar oembed_url = $obj.val();\n\t\t\/\/ only proceed if the field contains more than 6 characters\n\t\tif ( oembed_url.length < 6 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ get field id\n\t\tvar field_id         = $obj.attr('id');\n\t\tvar $context         = $obj.closest( '.cmb-td' );\n\t\tvar $embed_container = $context.find( '.embed-status' );\n\t\tvar $embed_wrap      = $context.find( '.embed_wrap' );\n\t\tvar $child_el        = $embed_container.find( ':first-child' );\n\t\tvar oembed_width     = $embed_container.length && $child_el.length ? $child_el.width() : $obj.width();\n\n\t\tcmb.log( 'oembed_url', oembed_url, field_id );\n\n\t\t\/\/ show our spinner\n\t\tcmb.spinner( $context );\n\t\t\/\/ clear out previous results\n\t\t$embed_wrap.html('');\n\t\t\/\/ and run our ajax function\n\t\tsetTimeout( function() {\n\t\t\t\/\/ if they haven't typed in 500 ms\n\t\t\tif ( $( '.cmb2-oembed:focus' ).val() !== oembed_url ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$.ajax({\n\t\t\t\ttype : 'post',\n\t\t\t\tdataType : 'json',\n\t\t\t\turl : l10n.ajaxurl,\n\t\t\t\tdata : {\n\t\t\t\t\t'action'          : 'cmb2_oembed_handler',\n\t\t\t\t\t'oembed_url'      : oembed_url,\n\t\t\t\t\t'oembed_width'    : oembed_width > 300 ? oembed_width : 300,\n\t\t\t\t\t'field_id'        : field_id,\n\t\t\t\t\t'object_id'       : $obj.data( 'objectid' ),\n\t\t\t\t\t'object_type'     : $obj.data( 'objecttype' ),\n\t\t\t\t\t'cmb2_ajax_nonce' : l10n.ajax_nonce\n\t\t\t\t},\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tcmb.log( response );\n\t\t\t\t\t\/\/ hide our spinner\n\t\t\t\t\tcmb.spinner( $context, true );\n\t\t\t\t\t\/\/ and populate our results from ajax response\n\t\t\t\t\t$embed_wrap.html( response.data );\n\t\t\t\t}\n\t\t\t});\n\n\t\t}, 500);\n\n\t};\n\n\t\/**\n\t * Gets jQuery object containing all CMB metaboxes. Caches the result.\n\t *\n\t * @since  1.0.2\n\t *\n\t * @return {Object} jQuery object containing all CMB metaboxes.\n\t *\/\n\tcmb.metabox = function() {\n\t\tif ( cmb.$metabox ) {\n\t\t\treturn cmb.$metabox;\n\t\t}\n\t\tcmb.$metabox = $('.cmb2-wrap > .cmb2-metabox');\n\t\treturn cmb.$metabox;\n\t};\n\n\t\/**\n\t * Starts\/stops contextual spinner.\n\t *\n\t * @since  1.0.1\n\t *\n\t * @param  {object} $context The jQuery parent\/context object.\n\t * @param  {bool} hide       Whether to hide the spinner (will show by default).\n\t *\n\t * @return {void}\n\t *\/\n\tcmb.spinner = function( $context, hide ) {\n\t\tvar m = hide ? 'removeClass' : 'addClass';\n\t\t$('.cmb-spinner', $context )[ m ]( 'is-active' );\n\t};\n\n\t\/**\n\t * Triggers a jQuery event on the document object.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  {string} evtName The name of the event to trigger.\n\t *\n\t * @return {void}\n\t *\/\n\tcmb.trigger = function( evtName ) {\n\t\tvar args = Array.prototype.slice.call( arguments, 1 );\n\t\targs.push( cmb );\n\t\t$document.trigger( evtName, args );\n\t};\n\n\t\/**\n\t * Triggers a jQuery event on the given jQuery object.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  {object} $el     The jQuery element object.\n\t * @param  {string} evtName The name of the event to trigger.\n\t *\n\t * @return {void}\n\t *\/\n\tcmb.triggerElement = function( $el, evtName ) {\n\t\tvar args = Array.prototype.slice.call( arguments, 2 );\n\t\targs.push( cmb );\n\t\t$el.trigger( evtName, args );\n\t};\n\n\t\/**\n\t * Get an argument for a given field.\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {string|object} hash The field hash, id, or a jQuery object for a field.\n\t * @param  {string}        arg  The argument to get on the field.\n\t *\n\t * @return {mixed}              The argument value.\n\t *\/\n\tcmb.getFieldArg = function( hash, arg ) {\n\t\treturn cmb.getField( hash )[ arg ];\n\t};\n\n\t\/**\n\t * Get a field object instances. Can be filtered by passing in a filter callback function.\n\t * e.g. `const fileFields = CMB2.getFields(f => 'file' === f.type);`\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {mixed} filterCb An optional filter callback function.\n\t *\n\t * @return array            An array of field object instances.\n\t *\/\n\tcmb.getFields = function( filterCb ) {\n\t\tif ( 'function' === typeof filterCb ) {\n\t\t\tvar fields = [];\n\t\t\t$.each( l10n.fields, function( hash, field ) {\n\t\t\t\tif ( filterCb( field, hash ) ) {\n\t\t\t\t\tfields.push( field );\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn fields;\n\t\t}\n\n\t\treturn l10n.fields;\n\t};\n\n\t\/**\n\t * Get a field object instance by hash or id.\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {string|object} hash The field hash, id, or a jQuery object for a field.\n\t *\n\t * @return {object}        The field object or an empty object.\n\t *\/\n\tcmb.getField = function( hash ) {\n\t\tvar field = {};\n\t\thash = hash instanceof jQuery ? hash.data( 'hash' ) : hash;\n\t\tif ( hash ) {\n\t\t\ttry {\n\t\t\t\tif ( l10n.fields[ hash ] ) {\n\t\t\t\t\tthrow new Error( hash );\n\t\t\t\t}\n\n\t\t\t\tcmb.getFields( function( field ) {\n\t\t\t\t\tif ( 'function' === typeof hash ) {\n\t\t\t\t\t\tif ( hash( field ) ) {\n\t\t\t\t\t\t\tthrow new Error( field.hash );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else  if ( field.id && field.id === hash ) {\n\t\t\t\t\t\tthrow new Error( field.hash );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch( e ) {\n\t\t\t\tfield = l10n.fields[ e.message ];\n\t\t\t}\n\t\t}\n\n\t\treturn field;\n\t};\n\n\t\/**\n\t * Safely log things if query var is set. Accepts same parameters as console.log.\n\t *\n\t * @since  1.0.0\n\t *\n\t * @return {void}\n\t *\/\n\tcmb.log = function() {\n\t\tif ( l10n.script_debug && console && 'function' === typeof console.log ) {\n\t\t\tconsole.log.apply(console, arguments);\n\t\t}\n\t};\n\n\t\/**\n\t * Replace the last occurrence of a string.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @param  {string} string  String to search\/replace.\n\t * @param  {string} search  String to search.\n\t * @param  {string} replace String to replace search with.\n\t *\n\t * @return {string}         Possibly modified string.\n\t *\/\n\tcmb.replaceLast = function( string, search, replace ) {\n\t\t\/\/ find the index of last time word was used\n\t\tvar n = string.lastIndexOf( search );\n\n\t\t\/\/ slice the string in 2, one from the start to the lastIndexOf\n\t\t\/\/ and then replace the word in the rest\n\t\treturn string.slice( 0, n ) + string.slice( n ).replace( search, replace );\n\t};\n\n\t\/\/ Kick it off!\n\t$( cmb.init );\n\n})(window, document, jQuery, window.CMB2);\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/js\/cmb2.min.js","ext":"js","size":31886,"mtime":1757324689,"type":"text","content":"window.CMB2=window.CMB2||{},function(window,document,$,cmb,undefined){\"use strict\";var $document,l10n=window.cmb2_l10,setTimeout=window.setTimeout,$id=function(selector){return $(document.getElementById(selector))},getRowId=function(id,newIterator){return id=id.split(\"-\"),id.splice(id.length-1,1),id.push(newIterator),id.join(\"-\")};cmb.$id=$id;var defaults={idNumber:!1,repeatEls:'input:not([type=\"button\"]),select,textarea,.cmb2-media-status',noEmpty:'input:not([type=\"button\"]):not([type=\"radio\"]):not([type=\"checkbox\"]),textarea',repeatUpdate:'input:not([type=\"button\"]),select,textarea,label',styleBreakPoint:450,mediaHandlers:{},defaults:{time_picker:l10n.defaults.time_picker,date_picker:l10n.defaults.date_picker,color_picker:l10n.defaults.color_picker||{},code_editor:l10n.defaults.code_editor},media:{frames:{}}};cmb.init=function(){$document=$(document),$.extend(cmb,defaults),cmb.trigger(\"cmb_pre_init\");var $metabox=cmb.metabox(),$repeatGroup=$metabox.find(\".cmb-repeatable-group\");cmb.initPickers($metabox.find('input[type=\"text\"].cmb2-timepicker'),$metabox.find('input[type=\"text\"].cmb2-datepicker'),$metabox.find('input[type=\"text\"].cmb2-colorpicker')),cmb.initCodeEditors($metabox.find(\".cmb2-textarea-code:not(.disable-codemirror)\")),$('<p><span class=\"button-secondary cmb-multicheck-toggle\">'+l10n.strings.check_toggle+\"<\/span><\/p>\").insertBefore(\".cmb2-checkbox-list:not(.no-select-all)\"),cmb.makeListSortable(),cmb.makeRepeatableSortable(),$metabox.on(\"change\",\".cmb2_upload_file\",function(){cmb.media.field=$(this).attr(\"id\"),$id(cmb.media.field+\"_id\").val(\"\")}).on(\"click\",\".cmb-multicheck-toggle\",cmb.toggleCheckBoxes).on(\"click\",\".cmb2-upload-button\",cmb.handleMedia).on(\"click\",\".cmb-attach-list li, .cmb2-media-status .img-status img, .cmb2-media-status .file-status > span\",cmb.handleFileClick).on(\"click\",\".cmb2-remove-file-button\",cmb.handleRemoveMedia).on(\"click\",\".cmb-add-group-row\",cmb.addGroupRow).on(\"click\",\".cmb-add-row-button\",cmb.addAjaxRow).on(\"click\",\".cmb-remove-group-row\",cmb.removeGroupRow).on(\"click\",\".cmb-remove-row-button\",cmb.removeAjaxRow).on(\"keyup paste focusout\",\".cmb2-oembed\",cmb.maybeOembed).on(\"cmb2_remove_row\",\".cmb-repeatable-group\",cmb.resetTitlesAndIterator).on(\"click\",\".cmbhandle, .cmbhandle + .cmbhandle-title\",cmb.toggleHandle),$repeatGroup.length&&$repeatGroup.on(\"cmb2_add_row\",cmb.emptyValue).on(\"cmb2_add_row\",cmb.setDefaults).filter(\".sortable\").each(function(){$(this).find(\".cmb-remove-group-row-button\").before('<a class=\"button-secondary cmb-shift-rows move-up alignleft\" href=\"#\"><span class=\"'+l10n.up_arrow_class+'\"><\/span><\/a> <a class=\"button-secondary cmb-shift-rows move-down alignleft\" href=\"#\"><span class=\"'+l10n.down_arrow_class+'\"><\/span><\/a>')}).on(\"click\",\".cmb-shift-rows\",cmb.shiftRows),setTimeout(cmb.resizeoEmbeds,500),$(window).on(\"resize\",cmb.resizeoEmbeds),$id(\"addtag\").length&&cmb.listenTagAdd(),$(document).on(\"cmb_init\",cmb.mceEnsureSave),cmb.trigger(\"cmb_init\")},cmb.mceEnsureSave=function(){wp.data&&wp.data.hasOwnProperty(\"subscribe\")&&cmb.canTinyMCE()&&wp.data.subscribe(function(){var editor=wp.data.hasOwnProperty(\"select\")?wp.data.select(\"core\/editor\"):null;if(editor&&editor.isSavingPost&&editor.isSavingPost()&&window.tinyMCE.editors.length)for(var i=0;i<window.tinyMCE.editors.length;i++)window.tinyMCE.activeEditor!==window.tinyMCE.editors[i]&&window.tinyMCE.editors[i].save()})},cmb.canTinyMCE=function(){return l10n.user_can_richedit&&window.tinyMCE},cmb.listenTagAdd=function(){$document.ajaxSuccess(function(evt,xhr,settings){settings.data&&settings.data.length&&-1!==settings.data.indexOf(\"action=add-tag\")&&cmb.resetBoxes($id(\"addtag\").find(\".cmb2-wrap > .cmb2-metabox\"))})},cmb.resetBoxes=function($boxes){$.each($boxes,function(){cmb.resetBox($(this))})},cmb.resetBox=function($box){$box.find(\".wp-picker-clear\").trigger(\"click\"),$box.find(\".cmb2-remove-file-button\").trigger(\"click\"),$box.find(\".cmb-row.cmb-repeatable-grouping:not(:first-of-type) .cmb-remove-group-row\").click(),$box.find(\".cmb-repeat-row:not(:first-child)\").remove(),$box.find('input:not([type=\"button\"]),select,textarea').each(function(){var $element=$(this),tagName=$element.prop(\"tagName\");if(\"INPUT\"===tagName){var elType=$element.attr(\"type\");\"checkbox\"===elType||\"radio\"===elType?$element.prop(\"checked\",!1):$element.val(\"\")}\"SELECT\"===tagName&&$(\"option:selected\",this).prop(\"selected\",!1),\"TEXTAREA\"===tagName&&$element.html(\"\")})},cmb.resetTitlesAndIterator=function(evt){if(evt.group){var $table=$(evt.target),groupTitle=$table.find(\".cmb-add-group-row\").data(\"grouptitle\");$table.find(\".cmb-repeatable-grouping\").each(function(rowindex){var $row=$(this),prevIterator=parseInt($row.data(\"iterator\"),10);prevIterator!==rowindex&&($row.attr(\"data-iterator\",rowindex).data(\"iterator\",rowindex).attr(\"id\",getRowId($row.attr(\"id\"),rowindex)).find(cmb.repeatEls).each(function(){cmb.updateNameAttr($(this),prevIterator,rowindex)}),cmb.resetGroupTitles($row,rowindex,groupTitle))})}},cmb.resetGroupTitles=function($row,newIterator,groupTitle){if(groupTitle){var $rowTitle=$row.find(\"h3.cmb-group-title\");$rowTitle.length&&$rowTitle.text(groupTitle.replace(\"{#}\",parseInt(newIterator,10)+1))}},cmb.toggleHandle=function(evt){evt.preventDefault(),cmb.trigger(\"postbox-toggled\",$(this).parent(\".postbox\").toggleClass(\"closed\"))},cmb.toggleCheckBoxes=function(evt){evt.preventDefault();var $this=$(this),$multicheck=$this.closest(\".cmb-td\").find(\"input[type=checkbox]:not([disabled])\"),$toggled=!$this.data(\"checked\");$multicheck.prop(\"checked\",$toggled).trigger(\"change\"),$this.data(\"checked\",$toggled)},cmb.handleMedia=function(evt){evt.preventDefault();var $el=$(this);cmb.attach_id=!$el.hasClass(\"cmb2-upload-list\")&&$el.closest(\".cmb-td\").find(\".cmb2-upload-file-id\").val(),cmb.attach_id=\"0\"!==cmb.attach_id&&cmb.attach_id,cmb.handleFieldMedia($el.prev(\"input.cmb2-upload-file\"),$el.hasClass(\"cmb2-upload-list\"))},cmb.handleFileClick=function(evt){if(!$(evt.target).is(\"a\")){evt.preventDefault();var $el=$(this),$td=$el.closest(\".cmb-td\"),isList=$td.find(\".cmb2-upload-button\").hasClass(\"cmb2-upload-list\");cmb.attach_id=isList?$el.find('input[type=\"hidden\"]').data(\"id\"):$td.find(\".cmb2-upload-file-id\").val(),cmb.attach_id&&cmb.handleFieldMedia($td.find(\"input.cmb2-upload-file\"),isList)}},cmb._handleMedia=function(id,isList){return cmb.handleFieldMedia($id(id),isList)},cmb.handleFieldMedia=function($field,isList){if(wp){var media,handlers,id=$field.attr(\"id\"),fieldData=$field.data(),uid=fieldData.mediaid;if(uid||(uid=_.uniqueId(),$field.attr(\"data-mediaid\",uid).data(\"mediaid\",uid),fieldData.mediaid=uid),handlers=cmb.mediaHandlers,media=cmb.media,media.mediaid=uid,media.field=id,media.$field=$field,media.fieldData=fieldData,media.previewSize=media.fieldData.previewsize,media.sizeName=media.fieldData.sizename,media.fieldName=$field.attr(\"name\"),media.isList=isList,uid in media.frames)return media.frames[uid].open();media.frames[uid]=wp.media({title:cmb.metabox().find('label[for=\"'+id+'\"]').text(),library:media.fieldData.queryargs||{},button:{text:l10n.strings[isList?\"upload_files\":\"upload_file\"]},multiple:!!isList&&\"add\"}),media.frames[uid].states.first().set(\"filterable\",\"all\"),cmb.trigger(\"cmb_media_modal_init\",media),handlers.list=function(selection,returnIt){var attachmentHtml,fileGroup=[];if(handlers.list.templates||(handlers.list.templates={image:wp.template(\"cmb2-list-image\"),file:wp.template(\"cmb2-list-file\")}),selection.each(function(attachment){attachmentHtml=handlers.getAttachmentHtml(attachment,\"list\"),fileGroup.push(attachmentHtml)}),returnIt)return fileGroup;media.$field.siblings(\".cmb2-media-status\").append(fileGroup)},handlers.single=function(selection){handlers.single.templates||(handlers.single.templates={image:wp.template(\"cmb2-single-image\"),file:wp.template(\"cmb2-single-file\")});var attachment=selection.first();media.$field.val(attachment.get(\"url\")),media.$field.closest(\".cmb-td\").find(\".cmb2-upload-file-id\").val(attachment.get(\"id\"));var attachmentHtml=handlers.getAttachmentHtml(attachment,\"single\");media.$field.siblings(\".cmb2-media-status\").slideDown().html(attachmentHtml)},handlers.getAttachmentHtml=function(attachment,templatesId){var isImage=\"image\"===attachment.get(\"type\"),data=handlers.prepareData(attachment,isImage);return handlers[templatesId].templates[isImage?\"image\":\"file\"](data)},handlers.prepareData=function(data,image){return image&&handlers.getImageData.call(data,50),data=data.toJSON(),data.mediaField=media.field,data.mediaFieldName=media.fieldName,data.stringRemoveImage=l10n.strings.remove_image,data.stringFile=l10n.strings.file,data.stringDownload=l10n.strings.download,data.stringRemoveFile=l10n.strings.remove_file,data},handlers.getImageData=function(fallbackSize){var previewW=media.previewSize[0]||fallbackSize,previewH=media.previewSize[1]||fallbackSize,url=this.get(\"url\"),width=this.get(\"width\"),height=this.get(\"height\"),sizes=this.get(\"sizes\");return sizes&&(sizes[media.sizeName]?(url=sizes[media.sizeName].url,width=sizes[media.sizeName].width,height=sizes[media.sizeName].height):sizes.large&&(url=sizes.large.url,width=sizes.large.width,height=sizes.large.height)),width>previewW&&(height=Math.floor(previewW*height\/width),width=previewW),height>previewH&&(width=Math.floor(previewH*width\/height),height=previewH),width||(width=previewW),height||(height=\"svg\"===this.get(\"filename\").split(\".\").pop()?\"100%\":previewH),this.set(\"sizeUrl\",url),this.set(\"sizeWidth\",width),this.set(\"sizeHeight\",height),this},handlers.selectFile=function(){var selection=media.frames[uid].state().get(\"selection\"),type=isList?\"list\":\"single\";cmb.attach_id&&isList?$('[data-id=\"'+cmb.attach_id+'\"]').parents(\"li\").replaceWith(handlers.list(selection,!0)):handlers[type](selection),cmb.trigger(\"cmb_media_modal_select\",selection,media)},handlers.openModal=function(){var attach,selection=media.frames[uid].state().get(\"selection\");cmb.attach_id?(attach=wp.media.attachment(cmb.attach_id),attach.fetch(),selection.set(attach?[attach]:[])):selection.reset(),cmb.trigger(\"cmb_media_modal_open\",selection,media)},media.frames[uid].on(\"select\",handlers.selectFile).on(\"open\",handlers.openModal),media.frames[uid].open()}},cmb.handleRemoveMedia=function(evt){evt.preventDefault();var $this=$(this);if($this.is(\".cmb-attach-list .cmb2-remove-file-button\"))return $this.parents(\".cmb2-media-item\").remove(),!1;var $cell=$this.closest(\".cmb-td\");return cmb.media.$field=$cell.find(\".cmb2-upload-file\"),cmb.media.field=cmb.media.$field.attr(\"id\"),cmb.media.$field.val(\"\"),$cell.find(\".cmb2-upload-file-id\").val(\"\"),$this.parents(\".cmb2-media-status\").html(\"\"),!1},cmb.cleanRow=function($row,prevNum,group){var $elements=$row.find(cmb.repeatUpdate);if(group){var $other=$row.find(\"[id]\").not(cmb.repeatUpdate);$row.find(\".cmb-repeat-table .cmb-repeat-row:not(:first-child)\").remove(),$other.length&&$other.each(function(){var $_this=$(this),oldID=$_this.attr(\"id\"),newID=oldID.replace(\"_\"+prevNum,\"_\"+cmb.idNumber),$buttons=$row.find('[data-selector=\"'+oldID+'\"]');$_this.attr(\"id\",newID),$buttons.length&&$buttons.attr(\"data-selector\",newID).data(\"selector\",newID)})}return $elements.filter(\":checked\").removeAttr(\"checked\"),$elements.find(\":checked\").removeAttr(\"checked\"),$elements.filter(\":selected\").removeAttr(\"selected\"),$elements.find(\":selected\").removeAttr(\"selected\",!1),cmb.resetGroupTitles($row,cmb.idNumber,$row.data(\"title\")),$elements.each(function(){cmb.elReplacements($(this),prevNum,group)}),cmb},cmb.elReplacements=function($newInput,prevNum,group){var newID,oldID,oldFor=$newInput.attr(\"for\"),oldVal=$newInput.val(),type=$newInput.prop(\"type\"),defVal=cmb.getFieldArg($newInput,\"default\"),newVal=void 0!==defVal&&!1!==defVal?defVal:\"\",tagName=$newInput.prop(\"tagName\"),checkable=(\"radio\"===type||\"checkbox\"===type)&&oldVal,attrs={};if(oldFor)attrs={for:oldFor.replace(\"_\"+prevNum,\"_\"+cmb.idNumber)};else{var newName,oldName=$newInput.attr(\"name\");oldID=$newInput.attr(\"id\"),group?(newName=oldName?oldName.replace(\"[\"+prevNum+\"][\",\"[\"+cmb.idNumber+\"][\"):\"\",newID=oldID?oldID.replace(\"_\"+prevNum+\"_\",\"_\"+cmb.idNumber+\"_\"):\"\"):(newName=oldName?cmb.replaceLast(oldName,\"[\"+prevNum+\"]\",\"[\"+cmb.idNumber+\"]\"):\"\",newID=oldID?cmb.replaceLast(oldID,\"_\"+prevNum,\"_\"+cmb.idNumber):\"\"),attrs={id:newID,name:newName}}if(\"TEXTAREA\"===tagName&&$newInput.html(newVal),\"SELECT\"===tagName&&void 0!==defVal){var $toSelect=$newInput.find('[value=\"'+defVal+'\"]');$toSelect.length&&$toSelect.attr(\"selected\",\"selected\").prop(\"selected\",\"selected\")}return checkable&&($newInput.removeAttr(\"checked\"),void 0!==defVal&&oldVal===defVal&&$newInput.attr(\"checked\",\"checked\").prop(\"checked\",\"checked\")),!group&&$newInput[0].hasAttribute(\"data-iterator\")&&(attrs[\"data-iterator\"]=cmb.idNumber),$newInput.removeClass(\"hasDatepicker\").val(checkable||newVal).attr(attrs),$newInput},cmb.newRowHousekeeping=function($row){var $colorPicker=$row.find(\".wp-picker-container\"),$list=$row.find(\".cmb2-media-status\");return $colorPicker.length&&$colorPicker.each(function(){var $td=$(this).parent();$td.html($td.find('input[type=\"text\"].cmb2-colorpicker').attr(\"style\",\"\"))}),$list.length&&$list.empty(),cmb},cmb.afterRowInsert=function($row){cmb.initPickers($row.find('input[type=\"text\"].cmb2-timepicker'),$row.find('input[type=\"text\"].cmb2-datepicker'),$row.find('input[type=\"text\"].cmb2-colorpicker'))},cmb.updateNameAttr=function($el,prevIterator,newIterator){var name=$el.attr(\"name\");if(void 0!==name){var isFileList=$el.attr(\"id\").indexOf(\"filelist\"),from=isFileList?\"[\"+prevIterator+\"][\":\"[\"+prevIterator+\"]\",to=isFileList?\"[\"+newIterator+\"][\":\"[\"+newIterator+\"]\",newName=name.replace(from,to);$el.attr(\"name\",newName)}},cmb.emptyValue=function(evt,row){$(cmb.noEmpty,row).val(\"\")},cmb.setDefaults=function(evt,row){$(cmb.noEmpty,row).each(function(){var $el=$(this),defVal=cmb.getFieldArg($el,\"default\");void 0!==defVal&&!1!==defVal&&$el.val(defVal)})},cmb.addGroupRow=function(evt){evt.preventDefault();var $this=$(this);cmb.triggerElement($this,\"cmb2_add_group_row_start\",$this);var $table=$id($this.data(\"selector\")),$oldRow=$table.find(\".cmb-repeatable-grouping\").last(),prevNum=parseInt($oldRow.data(\"iterator\"),10);cmb.idNumber=parseInt(prevNum,10)+1;for(var $row=$oldRow.clone(),nodeName=$row.prop(\"nodeName\")||\"div\";$table.find('.cmb-repeatable-grouping[data-iterator=\"'+cmb.idNumber+'\"]').length>0;)cmb.idNumber++;cmb.newRowHousekeeping($row.data(\"title\",$this.data(\"grouptitle\"))).cleanRow($row,prevNum,!0),$row.find(\".cmb-add-row-button\").prop(\"disabled\",!1);var $newRow=$(\"<\"+nodeName+' id=\"'+getRowId($oldRow.attr(\"id\"),cmb.idNumber)+'\" class=\"postbox cmb-row cmb-repeatable-grouping\" data-iterator=\"'+cmb.idNumber+'\">'+$row.html()+\"<\/\"+nodeName+\">\");$oldRow.after($newRow),cmb.afterRowInsert($newRow),cmb.makeRepeatableSortable($newRow),cmb.triggerElement($table,{type:\"cmb2_add_row\",group:!0},$newRow)},cmb.addAjaxRow=function(evt){evt.preventDefault();var $this=$(this),$table=$id($this.data(\"selector\")),$row=$table.find(\".empty-row\"),prevNum=parseInt($row.find(\"[data-iterator]\").data(\"iterator\"),10);cmb.idNumber=parseInt(prevNum,10)+1;var $emptyrow=$row.clone();cmb.newRowHousekeeping($emptyrow).cleanRow($emptyrow,prevNum),$row.removeClass(\"empty-row hidden\").addClass(\"cmb-repeat-row\"),$row.after($emptyrow),cmb.afterRowInsert($emptyrow),cmb.triggerElement($table,{type:\"cmb2_add_row\",group:!1},$emptyrow,$row)},cmb.removeGroupRow=function(evt){evt.preventDefault();var $this=$(this),confirmation=$this.data(\"confirm\");if(cmb.resetRow.resetting||!confirmation||window.confirm(confirmation)){var $table=$id($this.data(\"selector\")),$parent=$this.parents(\".cmb-repeatable-grouping\");if($table.find(\".cmb-repeatable-grouping\").length<2)return cmb.resetRow($parent.parents(\".cmb-repeatable-group\").find(\".cmb-add-group-row\"),$this);cmb.triggerElement($table,\"cmb2_remove_group_row_start\",$this),$parent.remove(),cmb.triggerElement($table,{type:\"cmb2_remove_row\",group:!0})}},cmb.removeAjaxRow=function(evt){evt.preventDefault();var $this=$(this);if(!$this.hasClass(\"button-disabled\")){var $parent=$this.parents(\".cmb-row\"),$table=$this.parents(\".cmb-repeat-table\");if($table.find(\".cmb-row\").length<=2)return cmb.resetRow($parent.find(\".cmb-add-row-button\"),$this);$parent.hasClass(\"empty-row\")&&$parent.prev().addClass(\"empty-row\").removeClass(\"cmb-repeat-row\"),$this.parents(\".cmb-repeat-table .cmb-row\").remove(),cmb.triggerElement($table,{type:\"cmb2_remove_row\",group:!1})}},cmb.resetRow=function($addNewBtn,$removeBtn){cmb.resetRow.resetting=!0,$addNewBtn.trigger(\"click\"),$removeBtn.trigger(\"click\"),cmb.resetRow.resetting=!1},cmb.shiftRows=function(evt){evt.preventDefault();var $this=$(this),moveUp=!!$this.hasClass(\"move-up\"),$from=$this.parents(\".cmb-repeatable-grouping\"),$goto=$from[moveUp?\"prev\":\"next\"](\".cmb-repeatable-grouping\");if(cmb.triggerElement($this,\"cmb2_shift_rows_enter\",$this,$from,$goto),$goto.length){cmb.triggerElement($this,\"cmb2_shift_rows_start\",$this,$from,$goto);var fromIterator=$from.attr(\"data-iterator\"),toIterator=$goto.attr(\"data-iterator\");$from.attr(\"data-iterator\",toIterator).find(cmb.repeatEls).each(function(){cmb.updateNameAttr($(this),fromIterator,toIterator)}),$goto.attr(\"data-iterator\",fromIterator).find(cmb.repeatEls).each(function(){cmb.updateNameAttr($(this),toIterator,fromIterator)});var groupTitle=$this.parents(\".cmb-repeatable-group\").find(\"[data-grouptitle]\").data(\"grouptitle\");groupTitle&&(cmb.resetGroupTitles($from,toIterator,groupTitle),cmb.resetGroupTitles($goto,fromIterator,groupTitle)),$goto[moveUp?\"before\":\"after\"]($from),$([document.documentElement,document.body]).animate({scrollTop:$from.offset().top-50},300),cmb.triggerElement($this,\"cmb2_shift_rows_complete\",$this,$from,$goto)}},cmb.initPickers=function($timePickers,$datePickers,$colorPickers){cmb.trigger(\"cmb_init_pickers\",{time:$timePickers,date:$datePickers,color:$colorPickers}),cmb.initDateTimePickers($timePickers,\"timepicker\",\"time_picker\"),cmb.initDateTimePickers($datePickers,\"datepicker\",\"date_picker\"),cmb.initColorPickers($colorPickers)},cmb.initDateTimePickers=function($selector,method,defaultKey){$selector.length&&$selector[method](\"destroy\").each(function(){var $this=$(this),fieldOpts=$this.data(method)||{},options=$.extend({},cmb.defaults[defaultKey],fieldOpts);$this[method](cmb.datePickerSetupOpts(fieldOpts,options,method))})},cmb.datePickerSetupOpts=function(fieldOpts,options,method){var existing=$.extend({},options);return options.beforeShow=function(input,inst){\"timepicker\"===method&&cmb.addTimePickerClasses(inst.dpDiv),$id(\"ui-datepicker-div\").addClass(\"cmb2-element\"),\"function\"==typeof existing.beforeShow&&existing.beforeShow(input,inst)},\"timepicker\"===method&&(options.onChangeMonthYear=function(year,month,inst,picker){cmb.addTimePickerClasses(inst.dpDiv),\"function\"==typeof existing.onChangeMonthYear&&existing.onChangeMonthYear(year,month,inst,picker)}),options.onClose=function(dateText,inst){var $picker=$id(\"ui-datepicker-div\").removeClass(\"cmb2-element\").hide();\"timepicker\"!==method||$(inst.input).val()||inst.input.val($picker.find(\".ui_tpicker_time\").text()),\"function\"==typeof existing.onClose&&existing.onClose(dateText,inst)},options},cmb.addTimePickerClasses=function($picker){var func=cmb.addTimePickerClasses;func.count=func.count||0,setTimeout(function(){$picker.find(\".ui-priority-secondary\").length?($picker.find(\".ui-priority-secondary\").addClass(\"button-secondary\"),$picker.find(\".ui-priority-primary\").addClass(\"button-primary\"),func.count=0):func.count<5&&(func.count++,func($picker))},10)},cmb.initColorPickers=function($selector){$selector.length&&(\"object\"==typeof jQuery.wp&&\"function\"==typeof jQuery.wp.wpColorPicker?$selector.each(function(){var $this=$(this),fieldOpts=$this.data(\"colorpicker\")||{};$this.wpColorPicker($.extend({},cmb.defaults.color_picker,fieldOpts))}):$selector.each(function(i){$(this).after('<div id=\"picker-'+i+'\" style=\"z-index: 1000; background: #EEE; border: 1px solid #CCC; position: absolute; display: block;\"><\/div>'),$id(\"picker-\"+i).hide().farbtastic($(this))}).focus(function(){$(this).next().show()}).blur(function(){$(this).next().hide()}))},cmb.initCodeEditors=function($selector){cmb.trigger(\"cmb_init_code_editors\",$selector),cmb.defaults.code_editor&&wp&&wp.codeEditor&&$selector.length&&$selector.each(function(){wp.codeEditor.initialize(this.id,cmb.codeEditorArgs($(this).data(\"codeeditor\")))})},cmb.codeEditorArgs=function(overrides){var props=[\"codemirror\",\"csslint\",\"jshint\",\"htmlhint\"],args=$.extend({},cmb.defaults.code_editor);overrides=overrides||{};for(var i=props.length-1;i>=0;i--)overrides.hasOwnProperty(props[i])&&(args[props[i]]=$.extend({},args[props[i]]||{},overrides[props[i]]));return args},cmb.makeListSortable=function(){var $filelist=cmb.metabox().find(\".cmb2-media-status.cmb-attach-list\");$filelist.length&&$filelist.sortable({cursor:\"move\"}).disableSelection()},cmb.makeRepeatableSortable=function($row){var $repeatables=($row||cmb.metabox()).find(\".cmb-repeat-table .cmb-field-list\");$repeatables.length&&$repeatables.sortable({items:\".cmb-repeat-row\",cursor:\"move\",cancel:\"input,textarea,button,select,option,.CodeMirror\"})},cmb.maybeOembed=function(evt){var $this=$(this);({focusout:function(){setTimeout(function(){cmb.spinner(\".cmb2-metabox\",!0)},2e3)},keyup:function(){var betw=function(min,max){return evt.which<=max&&evt.which>=min};(betw(48,90)||betw(96,111)||betw(8,9)||187===evt.which||190===evt.which)&&cmb.doAjax($this,evt)},paste:function(){setTimeout(function(){cmb.doAjax($this)},100)}})[evt.type]()},cmb.resizeoEmbeds=function(){cmb.metabox().each(function(){var $this=$(this),$tableWrap=$this.parents(\".inside\"),isSide=$this.parents(\".inner-sidebar\").length||$this.parents(\"#side-sortables\").length,isSmall=isSide,isSmallest=!1;if(!$tableWrap.length)return!0;var tableW=$tableWrap.width();cmb.styleBreakPoint>tableW&&(isSmall=!0,isSmallest=cmb.styleBreakPoint-62>tableW),tableW=isSmall?tableW:Math.round(.82*$tableWrap.width()*.97);var newWidth=tableW-30;if(!isSmall||isSide||isSmallest||(newWidth-=75),newWidth>639)return!0;var $embeds=$this.find(\".cmb-type-oembed .embed-status\"),$children=$embeds.children().not(\".cmb2-remove-wrapper\");if(!$children.length)return!0;$children.each(function(){var $this=$(this),iwidth=$this.width(),iheight=$this.height(),_newWidth=newWidth;$this.parents(\".cmb-repeat-row\").length&&!isSmall&&(_newWidth=newWidth-91,_newWidth=785>tableW?_newWidth-15:_newWidth);var newHeight=Math.round(_newWidth*iheight\/iwidth);$this.width(_newWidth).height(newHeight)})})},cmb.doAjax=function($obj){var oembed_url=$obj.val();if(!(oembed_url.length<6)){var field_id=$obj.attr(\"id\"),$context=$obj.closest(\".cmb-td\"),$embed_container=$context.find(\".embed-status\"),$embed_wrap=$context.find(\".embed_wrap\"),$child_el=$embed_container.find(\":first-child\"),oembed_width=$embed_container.length&&$child_el.length?$child_el.width():$obj.width();cmb.log(\"oembed_url\",oembed_url,field_id),cmb.spinner($context),$embed_wrap.html(\"\"),setTimeout(function(){$(\".cmb2-oembed:focus\").val()===oembed_url&&$.ajax({type:\"post\",dataType:\"json\",url:l10n.ajaxurl,data:{action:\"cmb2_oembed_handler\",oembed_url:oembed_url,oembed_width:oembed_width>300?oembed_width:300,field_id:field_id,object_id:$obj.data(\"objectid\"),object_type:$obj.data(\"objecttype\"),cmb2_ajax_nonce:l10n.ajax_nonce},success:function(response){cmb.log(response),cmb.spinner($context,!0),$embed_wrap.html(response.data)}})},500)}},cmb.metabox=function(){return cmb.$metabox?cmb.$metabox:(cmb.$metabox=$(\".cmb2-wrap > .cmb2-metabox\"),cmb.$metabox)},cmb.spinner=function($context,hide){var m=hide?\"removeClass\":\"addClass\";$(\".cmb-spinner\",$context)[m](\"is-active\")},cmb.trigger=function(evtName){var args=Array.prototype.slice.call(arguments,1);args.push(cmb),$document.trigger(evtName,args)},cmb.triggerElement=function($el,evtName){var args=Array.prototype.slice.call(arguments,2);args.push(cmb),$el.trigger(evtName,args)},cmb.getFieldArg=function(hash,arg){return cmb.getField(hash)[arg]},cmb.getFields=function(filterCb){if(\"function\"==typeof filterCb){var fields=[];return $.each(l10n.fields,function(hash,field){filterCb(field,hash)&&fields.push(field)}),fields}return l10n.fields},cmb.getField=function(hash){var field={};if(hash=hash instanceof jQuery?hash.data(\"hash\"):hash)try{if(l10n.fields[hash])throw new Error(hash);cmb.getFields(function(field){if(\"function\"==typeof hash){if(hash(field))throw new Error(field.hash)}else if(field.id&&field.id===hash)throw new Error(field.hash)})}catch(e){field=l10n.fields[e.message]}return field},cmb.log=function(){l10n.script_debug&&console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)},cmb.replaceLast=function(string,search,replace){var n=string.lastIndexOf(search);return string.slice(0,n)+string.slice(n).replace(search,replace)},$(cmb.init)}(window,document,jQuery,window.CMB2),window.CMB2=window.CMB2||{},window.CMB2.wysiwyg=window.CMB2.wysiwyg||{},function(window,document,$,cmb,wysiwyg,undefined){\"use strict\";function delayedInit(){0===toBeDestroyed.length?toBeInitialized.forEach(function(toInit){toBeInitialized.splice(toBeInitialized.indexOf(toInit),1),wysiwyg.init.apply(wysiwyg,toInit)}):window.setTimeout(delayedInit,100)}function delayedDestroy(){toBeDestroyed.forEach(function(id){toBeDestroyed.splice(toBeDestroyed.indexOf(id),1),wysiwyg.destroy(id)})}function getGroupData(data){var groupid=data.groupid,fieldid=data.fieldid;return all[groupid]&&all[groupid][fieldid]||(all[groupid]=all[groupid]||{},all[groupid][fieldid]={template:wp.template(\"cmb2-wysiwyg-\"+groupid+\"-\"+fieldid),defaults:{mce:$.extend({},tinyMCEPreInit.mceInit[\"cmb2_i_\"+groupid+fieldid]),qt:$.extend({},tinyMCEPreInit.qtInit[\"cmb2_i_\"+groupid+fieldid])}},delete tinyMCEPreInit.mceInit[\"cmb2_i_\"+groupid+fieldid],delete tinyMCEPreInit.qtInit[\"cmb2_i_\"+groupid+fieldid]),all[groupid][fieldid]}function initOptions(options){var prop,newSettings,newQTS,nameRegex=new RegExp(\"cmb2_n_\"+options.groupid+options.fieldid,\"g\"),idRegex=new RegExp(\"cmb2_i_\"+options.groupid+options.fieldid,\"g\");if(void 0===tinyMCEPreInit.mceInit[options.id]){newSettings=$.extend({},options.defaults.mce);for(prop in newSettings)\"string\"==typeof newSettings[prop]&&(newSettings[prop]=newSettings[prop].replace(idRegex,options.id).replace(nameRegex,options.name));tinyMCEPreInit.mceInit[options.id]=newSettings}if(void 0===tinyMCEPreInit.qtInit[options.id]){newQTS=$.extend({},options.defaults.qt);for(prop in newQTS)\"string\"==typeof newQTS[prop]&&(newQTS[prop]=newQTS[prop].replace(idRegex,options.id).replace(nameRegex,options.name));tinyMCEPreInit.qtInit[options.id]=newQTS}}var toBeDestroyed=[],toBeInitialized=[],all=wysiwyg.all={};wysiwyg.initAll=function(){var $this,data,initiated;$(\".cmb2-wysiwyg-placeholder\").each(function(){$this=$(this),data=$this.data(),data.groupid&&(data.id=$this.attr(\"id\"),data.name=$this.attr(\"name\"),data.value=$this.val(),wysiwyg.init($this,data,!1),initiated=!0)}),!0===initiated&&(void 0!==window.QTags&&window.QTags._buttonsInit(),$(document).on(\"cmb2_add_row\",wysiwyg.addRow).on(\"cmb2_remove_group_row_start\",wysiwyg.destroyRowEditors).on(\"cmb2_shift_rows_start\",wysiwyg.shiftStart).on(\"cmb2_shift_rows_complete\",wysiwyg.shiftComplete))},wysiwyg.addRow=function(evt,$row){wysiwyg.initRow($row,evt)},wysiwyg.destroyRowEditors=function(evt,$btn){wysiwyg.destroy($btn.parents(\".cmb-repeatable-grouping\").find(\".wp-editor-area\").attr(\"id\"))},wysiwyg.shiftStart=function(evt,$btn,$from,$to){$from.add($to).find(\".wp-editor-wrap textarea\").each(function(){wysiwyg.destroy($(this).attr(\"id\"))})},wysiwyg.shiftComplete=function(evt,$btn,$from,$to){$from.add($to).each(function(){wysiwyg.initRow($(this),evt)})},wysiwyg.initRow=function($row,evt){var $toReplace,data,defVal;$row.find(\".cmb2-wysiwyg-inner-wrap\").each(function(){$toReplace=$(this),data=$toReplace.data(),defVal=cmb.getFieldArg(data.hash,\"default\",\"\"),defVal=void 0!==defVal&&!1!==defVal?defVal:\"\",data.iterator=$row.data(\"iterator\"),data.fieldid=data.id,data.id=data.groupid+\"_\"+data.iterator+\"_\"+data.fieldid,data.name=data.groupid+\"[\"+data.iterator+\"][\"+data.fieldid+\"]\",data.value=\"cmb2_add_row\"!==evt.type&&$toReplace.find(\".wp-editor-area\").length?$toReplace.find(\".wp-editor-area\").val():defVal,0===toBeDestroyed.length?wysiwyg.init($toReplace,data):(toBeInitialized.push([$toReplace,data]),window.setTimeout(delayedInit,100))})},wysiwyg.init=function($toReplace,data,buttonsInit){if(!data.groupid)return!1;var mceActive=cmb.canTinyMCE(),qtActive=\"function\"==typeof window.quicktags;$.extend(data,getGroupData(data)),initOptions(data),$toReplace.replaceWith(data.template(data)),mceActive&&window.tinyMCE.init(tinyMCEPreInit.mceInit[data.id]),qtActive&&window.quicktags(tinyMCEPreInit.qtInit[data.id]),mceActive&&$(document.getElementById(data.id)).parents(\".wp-editor-wrap\").removeClass(\"html-active\").addClass(\"tmce-active\"),!1!==buttonsInit&&void 0!==window.QTags&&window.QTags._buttonsInit()},wysiwyg.destroy=function(id){if(cmb.canTinyMCE()){var editor=tinyMCE.get(id);null!==editor&&void 0!==editor?(editor.destroy(),void 0===tinyMCEPreInit.mceInit[id]&&delete tinyMCEPreInit.mceInit[id],void 0===tinyMCEPreInit.qtInit[id]&&delete tinyMCEPreInit.qtInit[id]):-1===toBeDestroyed.indexOf(id)&&(toBeDestroyed.push(id),window.setTimeout(delayedDestroy,100))}},$(document).on(\"cmb_init\",wysiwyg.initAll)}(window,document,jQuery,window.CMB2,window.CMB2.wysiwyg),window.CMB2=window.CMB2||{},window.CMB2.charcounter=window.CMB2.charcounter||{},function(window,document,$,cmb,counter){\"use strict\";if(!wp.utils||!wp.utils.WordCounter)return cmb.log(\"Cannot find wp.utils!\");counter.counters={};var counters=counter.counters,wpCounter=new wp.utils.WordCounter;counter.updateCounter=function(field_id){if(!counters.hasOwnProperty(field_id))return null;var instance=counters[field_id],wysiwyg=instance.editor&&!instance.editor.isHidden(),text=wysiwyg?instance.editor.getContent({format:\"raw\"}):cmb.$id(field_id).val().trim(),count=wpCounter.count(text,instance.type),exceeded=instance.max&&count>instance.max,val=instance.max?instance.max-count:count;return instance.$el.parents(\".cmb2-char-counter-wrap\")[exceeded?\"addClass\":\"removeClass\"](\"cmb2-max-exceeded\"),instance.$el.val(val).outerWidth(8*String(val).length+15+\"px\"),count},counter.instantiate=function($el){var data=$el.data();if(!(data.fieldId in counters)){var instance={$el:$el,max:data.max,type:\"words\"===data.counterType?\"words\":\"characters_including_spaces\",editor:!1};counters[data.fieldId]=instance,counter.updateCounter(data.fieldId)}},counter.initAll=function(){$(\".cmb2-char-counter\").each(function(){counter.instantiate($(this))})},counter.initWysiwyg=function(evt,editor){editor.id in counters&&(counters[editor.id].editor=editor,editor.on(\"nodechange keyup\",counter.countWysiwyg))},counter.addRow=function(evt,$row){$row.find(\".cmb2-char-counter\").each(function(){var $this=$(this),id=$this.attr(\"id\"),field_id=id.replace(\/^char-counter-\/,\"\");$this.attr(\"data-field-id\",field_id).data(\"field-id\",field_id),counter.instantiate($this)})},counter.cleanCounters=function(){var field_id,remove=[];for(field_id in counters)document.getElementById(field_id)||remove.push(field_id);remove.length&&_.each(remove,function(field_id){delete counters[field_id]})},counter.countWysiwyg=_.throttle(function(evt){return evt.hasOwnProperty(\"element\")?counter.updateCounter($(evt.element).data(\"id\")):evt.hasOwnProperty(\"currentTarget\")?counter.updateCounter($(evt.currentTarget).data(\"id\")):void 0}),counter.countTextarea=_.throttle(function(evt){counter.updateCounter(evt.currentTarget.id)},400),$(document).on(\"cmb_init\",counter.initAll).on(\"tinymce-editor-init\",counter.initWysiwyg).on(\"cmb2_add_row\",counter.addRow).on(\"cmb2_remove_row\",counter.cleanCounters).on(\"input keyup\",\".cmb2-count-chars\",counter.countTextarea)}(window,document,jQuery,window.CMB2,window.CMB2.charcounter);"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php \/\/ Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/init.php","ext":"php","size":5433,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * The initation loader for CMB2, and the main plugin file.\n *\n * @category     WordPress_Plugin\n * @package      CMB2\n * @author       CMB2 team\n * @license      GPL-2.0+\n * @link         https:\/\/cmb2.io\n *\n * Plugin Name:  CMB2\n * Plugin URI:   https:\/\/github.com\/CMB2\/CMB2\n * Description:  CMB2 will create metaboxes and forms with custom fields that will blow your mind.\n * Author:       CMB2 team\n * Author URI:   https:\/\/cmb2.io\n * Contributors: Justin Sternberg (@jtsternberg \/ dsgnwrks.pro)\n *               WebDevStudios (@webdevstudios \/ webdevstudios.com)\n *               Human Made (@humanmadeltd \/ hmn.md)\n *               Jared Atchison (@jaredatch \/ jaredatchison.com)\n *               Bill Erickson (@billerickson \/ billerickson.net)\n *               Andrew Norcross (@norcross \/ andrewnorcross.com)\n *\n * Version:      2.11.0\n *\n * Text Domain:  cmb2\n * Domain Path:  languages\n *\n *\n * Released under the GPL license\n * http:\/\/www.opensource.org\/licenses\/gpl-license.php\n *\n * This is an add-on for WordPress\n * https:\/\/wordpress.org\/\n *\n * **********************************************************************\n * This program is free software; you can redistribute it and\/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * **********************************************************************\n *\/\n\n\/**\n * *********************************************************************\n *               You should not edit the code below\n *               (or any code in the included files)\n *               or things might explode!\n * ***********************************************************************\n *\/\n\nif ( ! class_exists( 'CMB2_Bootstrap_2110', false ) ) {\n\n\t\/**\n\t * Handles checking for and loading the newest version of CMB2\n\t *\n\t * @since  2.0.0\n\t *\n\t * @category  WordPress_Plugin\n\t * @package   CMB2\n\t * @author    CMB2 team\n\t * @license   GPL-2.0+\n\t * @link      https:\/\/cmb2.io\n\t *\/\n\tclass CMB2_Bootstrap_2110 {\n\n\t\t\/**\n\t\t * Current version number\n\t\t *\n\t\t * @var   string\n\t\t * @since 1.0.0\n\t\t *\/\n\t\tconst VERSION = '2.11.0';\n\n\t\t\/**\n\t\t * Current version hook priority.\n\t\t * Will decrement with each release\n\t\t *\n\t\t * @var   int\n\t\t * @since 2.0.0\n\t\t *\/\n\t\tconst PRIORITY = 9957;\n\n\t\t\/**\n\t\t * Single instance of the CMB2_Bootstrap_2110 object\n\t\t *\n\t\t * @var CMB2_Bootstrap_2110\n\t\t *\/\n\t\tpublic static $single_instance = null;\n\n\t\t\/**\n\t\t * Creates\/returns the single instance CMB2_Bootstrap_2110 object\n\t\t *\n\t\t * @since  2.0.0\n\t\t * @return CMB2_Bootstrap_2110 Single instance object\n\t\t *\/\n\t\tpublic static function initiate() {\n\t\t\tif ( null === self::$single_instance ) {\n\t\t\t\tself::$single_instance = new self();\n\t\t\t}\n\t\t\treturn self::$single_instance;\n\t\t}\n\n\t\t\/**\n\t\t * Starts the version checking process.\n\t\t * Creates CMB2_LOADED definition for early detection by other scripts\n\t\t *\n\t\t * Hooks CMB2 inclusion to the init hook on a high priority which decrements\n\t\t * (increasing the priority) with each version release.\n\t\t *\n\t\t * @since 2.0.0\n\t\t *\/\n\t\tprivate function __construct() {\n\t\t\t\/**\n\t\t\t * A constant you can use to check if CMB2 is loaded\n\t\t\t * for your plugins\/themes with CMB2 dependency\n\t\t\t *\/\n\t\t\tif ( ! defined( 'CMB2_LOADED' ) ) {\n\t\t\t\tdefine( 'CMB2_LOADED', self::PRIORITY );\n\t\t\t}\n\n\t\t\tif ( ! function_exists( 'add_action' ) ) {\n\t\t\t\t\/\/ We are running outside of the context of WordPress.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tadd_action( 'init', array( $this, 'include_cmb' ), self::PRIORITY );\n\t\t}\n\n\t\t\/**\n\t\t * A final check if CMB2 exists before kicking off our CMB2 loading.\n\t\t * CMB2_VERSION and CMB2_DIR constants are set at this point.\n\t\t *\n\t\t * @since  2.0.0\n\t\t *\/\n\t\tpublic function include_cmb() {\n\t\t\tif ( class_exists( 'CMB2', false ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! defined( 'CMB2_VERSION' ) ) {\n\t\t\t\tdefine( 'CMB2_VERSION', self::VERSION );\n\t\t\t}\n\n\t\t\tif ( ! defined( 'CMB2_DIR' ) ) {\n\t\t\t\tdefine( 'CMB2_DIR', trailingslashit( dirname( __FILE__ ) ) );\n\t\t\t}\n\n\t\t\t$this->l10ni18n();\n\n\t\t\t\/\/ Include helper functions.\n\t\t\trequire_once CMB2_DIR . 'includes\/CMB2_Base.php';\n\t\t\trequire_once CMB2_DIR . 'includes\/CMB2.php';\n\t\t\trequire_once CMB2_DIR . 'includes\/helper-functions.php';\n\n\t\t\t\/\/ Now kick off the class autoloader.\n\t\t\tspl_autoload_register( 'cmb2_autoload_classes' );\n\n\t\t\t\/\/ Kick the whole thing off.\n\t\t\trequire_once( cmb2_dir( 'bootstrap.php' ) );\n\t\t\tcmb2_bootstrap();\n\t\t}\n\n\t\t\/**\n\t\t * Registers CMB2 text domain path\n\t\t *\n\t\t * @since  2.0.0\n\t\t *\/\n\t\tpublic function l10ni18n() {\n\n\t\t\t$loaded = load_plugin_textdomain( 'cmb2', false, '\/languages\/' );\n\n\t\t\tif ( ! $loaded ) {\n\t\t\t\t$loaded = load_muplugin_textdomain( 'cmb2', '\/languages\/' );\n\t\t\t}\n\n\t\t\tif ( ! $loaded ) {\n\t\t\t\t$loaded = load_theme_textdomain( 'cmb2', get_stylesheet_directory() . '\/languages\/' );\n\t\t\t}\n\n\t\t\tif ( ! $loaded ) {\n\t\t\t\t$locale = apply_filters( 'plugin_locale', function_exists( 'determine_locale' ) ? determine_locale() : get_locale(), 'cmb2' );\n\t\t\t\t$mofile = dirname( __FILE__ ) . '\/languages\/cmb2-' . $locale . '.mo';\n\t\t\t\tload_textdomain( 'cmb2', $mofile );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t\/\/ Make it so...\n\tCMB2_Bootstrap_2110::initiate();\n\n}\/\/ End if().\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/css\/cmb2-rtl.css","ext":"css","size":51342,"mtime":1757324689,"type":"text","content":"\/*!\n * CMB2 - v2.11.0 - 2024-04-02\n * https:\/\/cmb2.io\n * Copyright (c) 2024\n * Licensed GPLv2+\n *\/\n\n@charset \"UTF-8\";\n\/*--------------------------------------------------------------\n * Main Wrap\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap {\n  margin: 0;\n}\n\/* line 8, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input,\n.cmb2-wrap textarea {\n  max-width: 100%;\n}\n\/* line 15, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input[type=\"text\"].cmb2-oembed {\n  width: 100%;\n}\n\/* line 20, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap textarea {\n  width: 500px;\n  padding: 8px;\n}\n\/* line 24, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap textarea.cmb2-textarea-code {\n  font-family: \"Courier 10 Pitch\", Courier, monospace;\n  line-height: 16px;\n}\n\/* line 32, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-text-small, .cmb2-wrap input.cmb2-timepicker {\n  width: 100px;\n}\n\/* line 38, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-text-money {\n  width: 90px;\n}\n\/* line 43, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-text-medium {\n  width: 230px;\n}\n\/* line 48, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-upload-file {\n  width: 65%;\n}\n\/* line 52, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.ed_button {\n  padding: 2px 4px;\n}\n\/* line 57, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input:not([type=\"hidden\"]) + input,\n.cmb2-wrap input:not([type=\"hidden\"]) + .button-secondary,\n.cmb2-wrap input:not([type=\"hidden\"]) + select {\n  margin-right: 20px;\n}\n\/* line 65, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap ul {\n  margin: 0;\n}\n\/* line 69, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap li {\n  font-size: 14px;\n  line-height: 16px;\n  margin: 1px 0 5px 0;\n}\n\/* line 80, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap select {\n  font-size: 14px;\n  margin-top: 3px;\n}\n\/* line 85, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input:focus,\n.cmb2-wrap textarea:focus {\n  background: #fffff8;\n}\n\/* line 90, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input[type=\"radio\"] {\n  margin: 0 0 0 5px;\n  padding: 0;\n}\n\/* line 95, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input[type=\"checkbox\"] {\n  margin: 0 0 0 5px;\n  padding: 0;\n}\n\/* line 100, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap button,\n.cmb2-wrap .button-secondary {\n  white-space: nowrap;\n}\n\/* line 105, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .mceLayout {\n  border: 1px solid #e9e9e9 !important;\n}\n\/* line 109, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .mceIframeContainer {\n  background: #ffffff;\n}\n\/* line 113, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .meta_mce {\n  width: 97%;\n}\n\/* line 116, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .meta_mce textarea {\n  width: 100%;\n}\n\/* line 122, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-multicheck-toggle {\n  margin-top: -1em;\n}\n\/* line 127, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .wp-picker-clear.button,\n.cmb2-wrap .wp-picker-default.button {\n  margin-right: 6px;\n  padding: 2px 8px;\n}\n\/* line 133, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-row {\n  margin: 0;\n}\n\/* line 136, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-row:after {\n  content: '';\n  clear: both;\n  display: block;\n  width: 100%;\n}\n\/* line 143, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description {\n  padding-top: 0;\n  padding-bottom: 1em;\n}\n\n\/* line 154, sass\/partials\/_main_wrap.scss *\/\nbody.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n  margin: .1875rem;\n}\n@media screen and (max-width: 782px) {\n  \/* line 154, sass\/partials\/_main_wrap.scss *\/\n  body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n    margin: .4375rem;\n  }\n}\n\n\/* line 162, sass\/partials\/_main_wrap.scss *\/\n.cmb2-metabox {\n  clear: both;\n  margin: 0;\n}\n\/* line 168, sass\/partials\/_main_wrap.scss *\/\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-th,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-th {\n  border: 0;\n}\n\n\/* line 175, sass\/partials\/_main_wrap.scss *\/\n.cmb-add-row {\n  margin: 1.8em 0 0;\n}\n\n\/* line 179, sass\/partials\/_main_wrap.scss *\/\n.cmb-nested .cmb-td,\n.cmb-repeatable-group .cmb-th,\n.cmb-repeatable-group:first-of-type {\n  border: 0;\n}\n\n\/* line 185, sass\/partials\/_main_wrap.scss *\/\n.cmb-row:last-of-type,\n.cmb2-wrap .cmb-row:last-of-type,\n.cmb-repeatable-group:last-of-type {\n  border-bottom: 0;\n}\n\n\/* line 191, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-grouping {\n  border: 1px solid #e9e9e9;\n  padding: 0 1em;\n}\n\/* line 195, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-grouping.cmb-row {\n  margin: 0 0 0.8em;\n}\n\n\/* line 203, sass\/partials\/_main_wrap.scss *\/\n.cmb-th {\n  color: #222222;\n  float: right;\n  font-weight: 600;\n  padding: 20px 0 20px 10px;\n  vertical-align: top;\n  width: 200px;\n}\n@media (max-width: 450px) {\n  \/* line 203, sass\/partials\/_main_wrap.scss *\/\n  .cmb-th {\n    font-size: 1.2em;\n    display: block;\n    float: none;\n    padding-bottom: 1em;\n    text-align: right;\n    width: 100%;\n  }\n  \/* line 27, sass\/partials\/_mixins.scss *\/\n  .cmb-th label {\n    display: block;\n    margin-top: 0;\n    margin-bottom: 0.5em;\n  }\n}\n\n\/* line 216, sass\/partials\/_main_wrap.scss *\/\n.cmb-td {\n  line-height: 1.3;\n  max-width: 100%;\n  padding: 15px 10px;\n  vertical-align: middle;\n}\n\n\/* line 225, sass\/partials\/_main_wrap.scss *\/\n.cmb-type-title .cmb-td {\n  padding: 0;\n}\n\n\/* line 230, sass\/partials\/_main_wrap.scss *\/\n.cmb-th label {\n  display: block;\n  padding: 5px 0;\n}\n\n\/* line 235, sass\/partials\/_main_wrap.scss *\/\n.cmb-th + .cmb-td {\n  float: right;\n}\n\n\/* line 239, sass\/partials\/_main_wrap.scss *\/\n.cmb-td .cmb-td {\n  padding-bottom: 1em;\n}\n\n\/* line 243, sass\/partials\/_main_wrap.scss *\/\n.cmb-remove-row {\n  text-align: left;\n}\n\n\/* line 247, sass\/partials\/_main_wrap.scss *\/\n.empty-row.hidden {\n  display: none;\n}\n\n\/* line 252, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table {\n  background-color: #fafafa;\n  border: 1px solid #e1e1e1;\n}\n\/* line 256, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row {\n  position: relative;\n  counter-increment: el;\n  margin: 0;\n  padding: 10px 50px 10px 10px;\n  border-bottom: none !important;\n}\n\/* line 264, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row + .cmb-repeat-row {\n  border-top: solid 1px #e9e9e9;\n}\n\/* line 268, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper {\n  outline: dashed 2px #e9e9e9 !important;\n}\n\/* line 272, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row:before {\n  content: counter(el);\n  display: block;\n  top: 0;\n  right: 0;\n  position: absolute;\n  width: 35px;\n  height: 100%;\n  line-height: 35px;\n  cursor: move;\n  color: #757575;\n  text-align: center;\n  border-left: solid 1px #e9e9e9;\n}\n\/* line 289, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td {\n  margin: 0;\n  padding: 0;\n}\n\/* line 296, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table + .cmb-add-row {\n  margin: 0;\n}\n\/* line 299, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table + .cmb-add-row:before {\n  content: '';\n  width: 1px;\n  height: 1.6em;\n  display: block;\n  margin-right: 17px;\n  background-color: gainsboro;\n}\n\/* line 309, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-remove-row {\n  top: 7px;\n  left: 7px;\n  position: absolute;\n  width: auto;\n  margin-right: 0;\n  padding: 0 !important;\n  display: none;\n}\n\/* line 320, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button {\n  font-size: 20px;\n  text-indent: -1000px;\n  overflow: hidden;\n  position: relative;\n  height: auto;\n  line-height: 1;\n  padding: 0 10px 0;\n}\n\/* line 331, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button:before {\n  content: \"\uf335\";\n  font-family: 'Dashicons';\n  speak: none;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n  text-indent: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  line-height: 1.3;\n}\n\/* line 338, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row {\n  display: block;\n}\n\n\/* line 346, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-th {\n  padding: 5px;\n}\n\/* line 350, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-title {\n  background-color: #e9e9e9;\n  padding: 8px 2.2em 8px 12px;\n  margin: 0 -1em;\n  min-height: 1.5em;\n  font-size: 14px;\n  line-height: 1.4;\n}\n\/* line 358, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-title h4 {\n  border: 0;\n  margin: 0;\n  font-size: 1.2em;\n  font-weight: 500;\n  padding: 0.5em 0.75em;\n}\n\/* line 366, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-title .cmb-th {\n  display: block;\n  width: 100%;\n}\n\/* line 372, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-description .cmb-th {\n  font-size: 1.2em;\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: right;\n  width: 100%;\n}\n\/* line 27, sass\/partials\/_mixins.scss *\/\n.cmb-repeatable-group .cmb-group-description .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n\/* line 376, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-shift-rows {\n  margin-left: 1em;\n}\n\/* line 379, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2 {\n  margin-top: .15em;\n}\n\/* line 383, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2 {\n  margin-top: .2em;\n}\n\/* line 388, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb2-upload-button {\n  float: left;\n}\n\n\/* line 394, sass\/partials\/_main_wrap.scss *\/\np.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n  margin: 0;\n  padding-top: .5em;\n}\n\n\/* line 401, sass\/partials\/_main_wrap.scss *\/\nspan.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n}\n\n\/* line 406, sass\/partials\/_main_wrap.scss *\/\n.cmb2-metabox-title {\n  margin: 0 0 5px 0;\n  padding: 5px 0 0 0;\n  font-size: 14px;\n}\n\n\/* line 412, sass\/partials\/_main_wrap.scss *\/\n.cmb-inline ul {\n  padding: 4px 0 0 0;\n}\n\n\/* line 416, sass\/partials\/_main_wrap.scss *\/\n.cmb-inline li {\n  display: inline-block;\n  padding-left: 18px;\n}\n\n\/* line 421, sass\/partials\/_main_wrap.scss *\/\n.cmb-type-textarea-code pre {\n  margin: 0;\n}\n\n\/* line 427, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status {\n  clear: none;\n  display: inline-block;\n  vertical-align: middle;\n  margin-left: 10px;\n  width: auto;\n}\n\/* line 434, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status img {\n  max-width: 350px;\n  height: auto;\n}\n\/* line 440, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status img,\n.cmb2-media-status .embed-status {\n  background: #eee;\n  border: 5px solid #ffffff;\n  outline: 1px solid #e9e9e9;\n  box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.3), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  background-image: linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0), linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0);\n  background-position: 0 0, 10px 10px;\n  background-size: 20px 20px;\n  border-radius: 2px;\n  -moz-border-radius: 2px;\n  margin: 15px 0 0 0;\n}\n\/* line 454, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .embed-status {\n  float: right;\n  max-width: 800px;\n}\n\/* line 459, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status, .cmb2-media-status .embed-status {\n  position: relative;\n}\n\/* line 462, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status .cmb2-remove-file-button, .cmb2-media-status .embed-status .cmb2-remove-file-button {\n  background: url(..\/images\/ico-delete.png);\n  height: 16px;\n  right: -5px;\n  position: absolute;\n  text-indent: -9999px;\n  top: -5px;\n  width: 16px;\n}\n\/* line 476, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status .cmb2-remove-file-button {\n  top: 10px;\n}\n\/* line 481, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status img, .cmb2-media-status .file-status > span {\n  cursor: pointer;\n}\n\/* line 486, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status.cmb-attach-list .img-status img, .cmb2-media-status.cmb-attach-list .file-status > span {\n  cursor: move;\n}\n\n\/* line 493, sass\/partials\/_main_wrap.scss *\/\n.cmb-type-file-list .cmb2-media-status .img-status {\n  clear: none;\n  vertical-align: middle;\n  width: auto;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  margin-top: 0;\n}\n\n\/* line 502, sass\/partials\/_main_wrap.scss *\/\n.cmb-attach-list li {\n  clear: both;\n  display: inline-block;\n  width: 100%;\n  margin-top: 5px;\n  margin-bottom: 10px;\n}\n\/* line 508, sass\/partials\/_main_wrap.scss *\/\n.cmb-attach-list li img {\n  float: right;\n  margin-left: 10px;\n}\n\n\/* line 514, sass\/partials\/_main_wrap.scss *\/\n.cmb2-remove-wrapper {\n  margin: 0;\n}\n\n\/* line 518, sass\/partials\/_main_wrap.scss *\/\n.child-cmb2 .cmb-th {\n  text-align: right;\n}\n\n\/* line 522, sass\/partials\/_main_wrap.scss *\/\n.cmb2-indented-hierarchy {\n  padding-right: 1.5em;\n}\n\n@media (max-width: 450px) {\n  \/* line 527, sass\/partials\/_main_wrap.scss *\/\n  .cmb-th,\n  .cmb-td,\n  .cmb-th + .cmb-td {\n    display: block;\n    float: none;\n    width: 100%;\n  }\n}\n\/*--------------------------------------------------------------\n * Post Metaboxes\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_post_metaboxes.scss *\/\n#poststuff .cmb-group-title {\n  margin-right: -1em;\n  margin-left: -1em;\n  min-height: 1.5em;\n}\n\n\/* line 11, sass\/partials\/_post_metaboxes.scss *\/\n#poststuff .repeatable .cmb-group-title {\n  padding-right: 2.2em;\n}\n\n\/* line 17, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb2-wrap, .cmb-type-group .cmb2-wrap {\n  margin: 0;\n}\n\/* line 20, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb2-wrap > .cmb-field-list > .cmb-row, .cmb-type-group .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.8em 0;\n}\n\/* line 26, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed, .cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed {\n  width: 100%;\n}\n\/* line 32, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-row, .cmb-type-group .cmb-row {\n  padding: 0 0 1.8em;\n  margin: 0 0 0.8em;\n}\n\/* line 36, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-row .cmbhandle, .cmb-type-group .cmb-row .cmbhandle {\n  left: -1em;\n  position: relative;\n  color: #222222;\n}\n\/* line 43, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-repeatable-grouping, .cmb-type-group .cmb-repeatable-grouping {\n  padding: 0 1em;\n  max-width: 100%;\n  min-width: 1px !important;\n}\n\/* line 49, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-repeatable-group > .cmb-row, .cmb-type-group .cmb-repeatable-group > .cmb-row {\n  padding-bottom: 0;\n}\n\/* line 53, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-th, .cmb-type-group .cmb-th {\n  width: 18%;\n  padding: 0 0 0 2%;\n}\n\/* line 59, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-td, .cmb-type-group .cmb-td {\n  margin-bottom: 0;\n  padding: 0;\n  line-height: 1.3;\n}\n\/* line 65, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-th + .cmb-td, .cmb-type-group .cmb-th + .cmb-td {\n  width: 80%;\n  float: left;\n}\n\/* line 70, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-row:not(:last-of-type),\n.cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n.cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n  border-bottom: 1px solid #e9e9e9;\n}\n@media (max-width: 450px) {\n  \/* line 70, sass\/partials\/_post_metaboxes.scss *\/\n  .cmb2-postbox .cmb-row:not(:last-of-type),\n  .cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n  .cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n    border-bottom: 0;\n  }\n}\n\/* line 79, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-repeat-group-field,\n.cmb2-postbox .cmb-remove-field-row, .cmb-type-group .cmb-repeat-group-field,\n.cmb-type-group .cmb-remove-field-row {\n  padding-top: 1.8em;\n}\n\/* line 85, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .button-secondary .dashicons, .cmb-type-group .button-secondary .dashicons {\n  line-height: 1.3;\n}\n\/* line 89, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .button-secondary.move-up .dashicons, .cmb2-postbox .button-secondary.move-down .dashicons, .cmb-type-group .button-secondary.move-up .dashicons, .cmb-type-group .button-secondary.move-down .dashicons {\n  line-height: 1.1;\n}\n\/* line 94, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons, .cmb-type-group .button-secondary.cmb-add-group-row .dashicons {\n  line-height: 1.5;\n}\n\n\/*--------------------------------------------------------------\n * Context Metaboxes\n--------------------------------------------------------------*\/\n\/* Metabox collapse arrow indicators *\/\n\/* line 8, sass\/partials\/_context_metaboxes.scss *\/\n.js .cmb2-postbox.context-box .handlediv {\n  text-align: center;\n}\n\/* line 13, sass\/partials\/_context_metaboxes.scss *\/\n.js .cmb2-postbox.context-box .toggle-indicator:before {\n  content: \"\\f142\";\n  display: inline-block;\n  font: normal 20px\/1 dashicons;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n\/* line 26, sass\/partials\/_context_metaboxes.scss *\/\n.js .cmb2-postbox.context-box.closed .toggle-indicator:before {\n  content: \"\\f140\";\n}\n\n\/* line 34, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box {\n  margin-bottom: 10px;\n}\n\/* line 38, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-before_permalink-box {\n  margin-top: 10px;\n}\n\/* line 42, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-after_title-box {\n  margin-top: 10px;\n}\n\/* line 46, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-after_editor-box {\n  margin-top: 20px;\n  margin-bottom: 0;\n}\n\/* line 51, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-form_top-box {\n  margin-top: 10px;\n}\n\/* line 55, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-form_top-box .hndle {\n  font-size: 14px;\n  padding: 8px 12px;\n  margin: 0;\n  line-height: 1.4;\n}\n\/* line 63, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box .hndle {\n  cursor: auto;\n}\n\n\/* line 68, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap {\n  margin-top: 10px;\n}\n\/* line 72, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap.cmb2-context-wrap-form_top {\n  margin-left: 300px;\n  width: auto;\n}\n\/* line 79, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox {\n  padding: 10px;\n}\n\/* line 84, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-th {\n  padding: 0 0 0 2%;\n  width: 18%;\n}\n\/* line 89, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-td {\n  width: 80%;\n  padding: 0;\n}\n\/* line 94, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-row {\n  margin-bottom: 10px;\n}\n\/* line 97, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-row:last-of-type {\n  margin-bottom: 0;\n}\n\n\/* one column on the post write\/edit screen *\/\n@media only screen and (max-width: 850px) {\n  \/* line 107, sass\/partials\/_context_metaboxes.scss *\/\n  .cmb2-context-wrap.cmb2-context-wrap-form_top {\n    margin-left: 0;\n  }\n}\n\/*--------------------------------------------------------------\n * Options page\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page {\n  max-width: 1200px;\n}\n\/* line 8, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page.wrap > h2 {\n  margin-bottom: 1em;\n}\n\/* line 12, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-metabox > .cmb-row {\n  padding: 1em;\n  margin-top: -1px;\n  background: #ffffff;\n  border: 1px solid #e9e9e9;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n\/* line 19, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th {\n  padding: 0;\n  font-weight: initial;\n}\n\/* line 24, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n  float: none;\n  padding: 0 1em 0 0;\n  margin-right: 200px;\n}\n@media (max-width: 450px) {\n  \/* line 24, sass\/partials\/_options-page.scss *\/\n  .cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n    padding: 0;\n    margin-right: 0;\n  }\n}\n\/* line 37, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-wrap .cmb-type-title {\n  margin-top: 1em;\n  padding: 0.6em 1em;\n  background-color: #fafafa;\n}\n\/* line 42, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title {\n  font-size: 12px;\n  margin-top: 0;\n  margin-bottom: 0;\n  text-transform: uppercase;\n}\n\/* line 49, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description {\n  padding-top: 0.25em;\n}\n\/* line 55, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th {\n  padding: 0 0 0.8em 0;\n}\n\/* line 59, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb-repeatable-group .cmb-group-name {\n  font-size: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\/* line 65, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb-repeatable-group .cmb-th > .cmb2-metabox-description {\n  font-weight: 400;\n  padding-bottom: 0 !important;\n}\n\n\/*--------------------------------------------------------------\n * New-Term Page\n--------------------------------------------------------------*\/\n\/* line 6, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-th {\n  float: none;\n  width: auto;\n  padding: 20px 0 0;\n}\n\/* line 12, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-td {\n  padding: 0;\n}\n\/* line 16, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-th + .cmb-td {\n  float: none;\n}\n\/* line 20, sass\/partials\/_new_term.scss *\/\n#addtag select {\n  max-width: 100%;\n}\n\/* line 24, sass\/partials\/_new_term.scss *\/\n#addtag .cmb2-metabox {\n  padding-bottom: 20px;\n}\n\/* line 28, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-row li label {\n  display: inline;\n}\n\n\/*--------------------------------------------------------------\n * Misc.\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_misc.scss *\/\n#poststuff .cmb-repeatable-group h2 {\n  margin: 0;\n}\n\n\/* line 12, sass\/partials\/_misc.scss *\/\n.edit-tags-php .cmb2-metabox-title,\n.profile-php .cmb2-metabox-title,\n.user-edit-php .cmb2-metabox-title {\n  font-size: 1.4em;\n}\n\n\/* line 18, sass\/partials\/_misc.scss *\/\n.cmb2-postbox .cmb-spinner, .cmb2-no-box-wrap .cmb-spinner {\n  float: right;\n  display: none;\n}\n\n\/* line 24, sass\/partials\/_misc.scss *\/\n.cmb-spinner {\n  display: none;\n}\n\/* line 26, sass\/partials\/_misc.scss *\/\n.cmb-spinner.is-active {\n  display: block;\n}\n\n\/*--------------------------------------------------------------\n * Sidebar Placement Adjustments\n--------------------------------------------------------------*\/\n\/* line 10, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap > .cmb-field-list > .cmb-row,\n#side-sortables .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.4em 0;\n}\n\/* line 16, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker),\n#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker) {\n  width: 100%;\n}\n\/* line 20, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input + input:not(.wp-picker-clear), .inner-sidebar .cmb2-wrap input + select,\n#side-sortables .cmb2-wrap input + input:not(.wp-picker-clear),\n#side-sortables .cmb2-wrap input + select {\n  margin-right: 0;\n  margin-top: 1em;\n  display: block;\n}\n\/* line 26, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input.cmb2-text-money,\n#side-sortables .cmb2-wrap input.cmb2-text-money {\n  max-width: 70%;\n}\n\/* line 28, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description,\n#side-sortables .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description {\n  display: block;\n}\n\/* line 34, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap label,\n#side-sortables .cmb2-wrap label {\n  display: block;\n  font-weight: 700;\n  padding: 0 0 5px;\n}\n\/* line 42, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar textarea,\n#side-sortables textarea {\n  max-width: 99%;\n}\n\/* line 46, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-repeatable-group,\n#side-sortables .cmb-repeatable-group {\n  border-bottom: 1px solid #e9e9e9;\n}\n\/* line 50, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-type-group > .cmb-td > .cmb-repeatable-group,\n#side-sortables .cmb-type-group > .cmb-td > .cmb-repeatable-group {\n  border-bottom: 0;\n  margin-bottom: -1.4em;\n}\n\/* line 55, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-th,\n.inner-sidebar .cmb-td:not(.cmb-remove-row),\n.inner-sidebar .cmb-th + .cmb-td,\n#side-sortables .cmb-th,\n#side-sortables .cmb-td:not(.cmb-remove-row),\n#side-sortables .cmb-th + .cmb-td {\n  width: 100%;\n  display: block;\n  float: none;\n}\n\/* line 63, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .closed .inside,\n#side-sortables .closed .inside {\n  display: none;\n}\n\/* line 67, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-th,\n#side-sortables .cmb-th {\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: right;\n  width: 100%;\n  padding-right: 0;\n  padding-left: 0;\n}\n\/* line 27, sass\/partials\/_mixins.scss *\/\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n\/* line 14, sass\/partials\/_mixins.scss *\/\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  font-size: 14px;\n  line-height: 1.4em;\n}\n\/* line 74, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-group-description .cmb-th,\n#side-sortables .cmb-group-description .cmb-th {\n  padding-top: 0;\n}\n\/* line 77, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-group-description .cmb2-metabox-description,\n#side-sortables .cmb-group-description .cmb2-metabox-description {\n  padding: 0;\n}\n\/* line 84, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-group-title .cmb-th,\n#side-sortables .cmb-group-title .cmb-th {\n  padding: 0;\n}\n\/* line 90, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-repeatable-grouping + .cmb-repeatable-grouping,\n#side-sortables .cmb-repeatable-grouping + .cmb-repeatable-grouping {\n  margin-top: 1em;\n}\n\/* line 99, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-media-status .img-status img,\n.inner-sidebar .cmb2-media-status .embed-status img,\n#side-sortables .cmb2-media-status .img-status img,\n#side-sortables .cmb2-media-status .embed-status img {\n  max-width: 90%;\n  height: auto;\n}\n\/* line 107, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-list label,\n#side-sortables .cmb2-list label {\n  display: inline;\n  font-weight: normal;\n}\n\/* line 112, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-metabox-description,\n#side-sortables .cmb2-metabox-description {\n  display: block;\n  padding: 7px 0 0;\n}\n\/* line 119, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-type-checkbox .cmb-td label,\n.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description,\n#side-sortables .cmb-type-checkbox .cmb-td label,\n#side-sortables .cmb-type-checkbox .cmb2-metabox-description {\n  font-weight: normal;\n  display: inline;\n}\n\/* line 126, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-row .cmb2-metabox-description,\n#side-sortables .cmb-row .cmb2-metabox-description {\n  padding-bottom: 1.8em;\n}\n\/* line 130, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-metabox-title,\n#side-sortables .cmb2-metabox-title {\n  font-size: 1.2em;\n  font-style: italic;\n}\n\/* line 135, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-remove-row,\n#side-sortables .cmb-remove-row {\n  clear: both;\n  padding-top: 12px;\n  padding-bottom: 0;\n}\n\/* line 141, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-upload-button,\n#side-sortables .cmb2-upload-button {\n  clear: both;\n  margin-top: 12px;\n}\n\n\/*--------------------------------------------------------------\n * Collapsible UI\n--------------------------------------------------------------*\/\n\/* line 6, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox .cmbhandle {\n  color: #757575;\n  float: left;\n  width: 27px;\n  height: 30px;\n  cursor: pointer;\n  left: -1em;\n  position: relative;\n}\n\/* line 14, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox .cmbhandle:before {\n  content: '\\f142';\n  left: 12px;\n  font: normal 20px\/1 'dashicons';\n  speak: none;\n  display: inline-block;\n  padding: 8px 10px;\n  top: 0;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n\/* line 31, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox .postbox.closed .cmbhandle:before {\n  content: '\\f140';\n}\n\/* line 37, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row {\n  -webkit-appearance: none !important;\n  background: none !important;\n  border: none !important;\n  position: absolute;\n  right: 0;\n  top: .5em;\n  line-height: 1em;\n  padding: 2px 6px 3px;\n  opacity: .5;\n}\n\/* line 47, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]) {\n  cursor: pointer;\n  color: #a00;\n  opacity: 1;\n}\n\/* line 51, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover {\n  color: #f00;\n}\n\n\/*\n * jQuery UI CSS Framework 1.8.16\n *\n * Copyright 2011, AUTHORS.txt (http:\/\/jqueryui.com\/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http:\/\/jquery.org\/license\n *\n * http:\/\/docs.jquery.com\/UI\/Theming\/API\n *\n * WordPress Styles adopted from \"jQuery UI Datepicker CSS for WordPress\"\n * https:\/\/github.com\/stuttter\/wp-datepicker-styling\n *\n *\/\n\/* line 15, sass\/partials\/_jquery_ui.scss *\/\n* html .cmb2-element.ui-helper-clearfix {\n  height: 1%;\n}\n\n\/* line 24, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker, .cmb2-element .ui-datepicker {\n  padding: 0;\n  margin: 0;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-top: none;\n  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  min-width: 17em;\n  width: auto;\n  \/* Default Color Scheme *\/\n}\n\/* line 38, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker *, .cmb2-element .ui-datepicker * {\n  padding: 0;\n  font-family: \"Open Sans\", sans-serif;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n}\n\/* line 46, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker table, .cmb2-element .ui-datepicker table {\n  font-size: 13px;\n  margin: 0;\n  border: none;\n  border-collapse: collapse;\n}\n\/* line 53, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background-image: none;\n  border: none;\n  color: #fff;\n  font-weight: normal;\n}\n\/* line 61, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: transparent;\n  border-color: transparent;\n  cursor: pointer;\n}\n\/* line 67, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-title, .cmb2-element .ui-datepicker .ui-datepicker-title {\n  margin: 0;\n  padding: 10px 0;\n  color: #fff;\n  font-size: 14px;\n  line-height: 14px;\n  text-align: center;\n}\n\/* line 75, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-title select, .cmb2-element .ui-datepicker .ui-datepicker-title select {\n  margin-top: -8px;\n  margin-bottom: -8px;\n}\n\/* line 81, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-next {\n  position: relative;\n  top: 0;\n  height: 34px;\n  width: 34px;\n}\n\/* line 89, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next, .cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next {\n  border: none;\n}\n\/* line 94, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-prev-hover {\n  right: 0;\n}\n\/* line 99, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover, .cmb2-element .ui-datepicker .ui-datepicker-next,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover {\n  left: 0;\n}\n\/* line 104, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next span,\n.cmb2-element.ui-datepicker .ui-datepicker-prev span, .cmb2-element .ui-datepicker .ui-datepicker-next span,\n.cmb2-element .ui-datepicker .ui-datepicker-prev span {\n  display: none;\n}\n\/* line 109, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev, .cmb2-element .ui-datepicker .ui-datepicker-prev {\n  float: right;\n}\n\/* line 113, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-next {\n  float: left;\n}\n\/* line 117, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  font: normal 20px\/34px 'dashicons';\n  padding-right: 7px;\n  color: #fff;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: 34px;\n  height: 34px;\n}\n\/* line 129, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before {\n  content: '\\f341';\n}\n\/* line 133, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  content: '\\f345';\n}\n\/* line 137, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before, .cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before {\n  opacity: 0.7;\n}\n\/* line 142, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker select.ui-datepicker-month,\n.cmb2-element.ui-datepicker select.ui-datepicker-year, .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.cmb2-element .ui-datepicker select.ui-datepicker-year {\n  width: 33%;\n  background: transparent;\n  border-color: transparent;\n  box-shadow: none;\n  color: #fff;\n}\n\/* line 149, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker select.ui-datepicker-month option,\n.cmb2-element.ui-datepicker select.ui-datepicker-year option, .cmb2-element .ui-datepicker select.ui-datepicker-month option,\n.cmb2-element .ui-datepicker select.ui-datepicker-year option {\n  color: #333;\n}\n\/* line 154, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  color: #fff;\n  font-weight: 600;\n}\n\/* line 157, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker thead th, .cmb2-element .ui-datepicker thead th {\n  font-weight: normal;\n}\n\/* line 162, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker th, .cmb2-element .ui-datepicker th {\n  padding: 10px;\n}\n\/* line 166, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td, .cmb2-element .ui-datepicker td {\n  padding: 0;\n  border: 1px solid #f4f4f4;\n}\n\/* line 171, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-other-month, .cmb2-element .ui-datepicker td.ui-datepicker-other-month {\n  border: transparent;\n}\n\/* line 175, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end, .cmb2-element .ui-datepicker td.ui-datepicker-week-end {\n  background-color: #f4f4f4;\n  border: 1px solid #f4f4f4;\n}\n\/* line 178, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today {\n  -webkit-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  -moz-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n}\n\/* line 185, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background-color: #f0f0c0;\n}\n\/* line 189, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-current-day, .cmb2-element .ui-datepicker td.ui-datepicker-current-day {\n  background: #bbdd88;\n}\n\/* line 193, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td .ui-state-default, .cmb2-element .ui-datepicker td .ui-state-default {\n  background: transparent;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  width: auto;\n  display: block;\n  padding: 5px 10px;\n  font-weight: normal;\n  color: #444;\n}\n\/* line 205, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default, .cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default {\n  opacity: 0.5;\n}\n\/* line 210, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n\/* line 215, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n\/* line 219, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td .ui-state-hover, .cmb2-element.ui-datepicker td .ui-state-active, .cmb2-element .ui-datepicker td .ui-state-hover, .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #0073aa;\n  color: #fff;\n}\n\/* line 224, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div, .cmb2-element .ui-datepicker .ui-timepicker-div {\n  font-size: 14px;\n}\n\/* line 226, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl, .cmb2-element .ui-datepicker .ui-timepicker-div dl {\n  text-align: right;\n  padding: 0 .6em;\n}\n\/* line 229, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dt, .cmb2-element .ui-datepicker .ui-timepicker-div dl dt {\n  float: right;\n  clear: right;\n  padding: 0 5px 0 0;\n}\n\/* line 234, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd {\n  margin: 0 40% 10px 10px;\n}\n\/* line 236, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd select {\n  width: 100%;\n}\n\/* line 242, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane {\n  padding: .6em;\n  text-align: right;\n}\n\/* line 246, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary {\n  padding: 0 10px 1px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n  margin: 0 .4em .4em .6em;\n}\n\n\/* line 260, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n\/* line 265, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-fresh .cmb2-element.ui-datepicker thead, .admin-color-fresh .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n\/* line 269, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #0073aa;\n  color: #fff;\n}\n\n\/* line 277, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #52accc;\n}\n\/* line 282, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker thead, .admin-color-blue .cmb2-element .ui-datepicker thead {\n  background: #4796b3;\n}\n\/* line 291, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #096484;\n  color: #fff;\n}\n\/* line 296, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n\/* line 305, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #59524c;\n}\n\/* line 310, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-coffee .cmb2-element.ui-datepicker thead, .admin-color-coffee .cmb2-element .ui-datepicker thead {\n  background: #46403c;\n}\n\/* line 314, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #c7a589;\n  color: #fff;\n}\n\n\/* line 322, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #523f6d;\n}\n\/* line 327, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ectoplasm .cmb2-element.ui-datepicker thead, .admin-color-ectoplasm .cmb2-element .ui-datepicker thead {\n  background: #413256;\n}\n\/* line 331, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #a3b745;\n  color: #fff;\n}\n\n\/* line 339, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #363b3f;\n}\n\/* line 344, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-midnight .cmb2-element.ui-datepicker thead, .admin-color-midnight .cmb2-element .ui-datepicker thead {\n  background: #26292c;\n}\n\/* line 348, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #e14d43;\n  color: #fff;\n}\n\n\/* line 356, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #738e96;\n}\n\/* line 361, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ocean .cmb2-element.ui-datepicker thead, .admin-color-ocean .cmb2-element .ui-datepicker thead {\n  background: #627c83;\n}\n\/* line 365, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #9ebaa0;\n  color: #fff;\n}\n\n\/* line 373, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: #cf4944;\n}\n\/* line 379, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-sunrise .cmb2-element.ui-datepicker th, .admin-color-sunrise .cmb2-element .ui-datepicker th {\n  border-color: #be3631;\n  background: #be3631;\n}\n\/* line 384, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #dd823b;\n  color: #fff;\n}\n\n\/* line 392, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #e5e5e5;\n}\n\/* line 397, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year, .admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year {\n  color: #555;\n}\n\/* line 402, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker thead, .admin-color-light .cmb2-element .ui-datepicker thead {\n  background: #888;\n}\n\/* line 406, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before, .admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  color: #555;\n}\n\/* line 414, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #ccc;\n}\n\/* line 418, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n\/* line 426, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #56b274;\n}\n\/* line 431, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead {\n  background: #36533f;\n}\n\/* line 435, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #446950;\n  color: #fff;\n}\n\n\/* line 443, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #4ca26a;\n}\n\/* line 448, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-mint .cmb2-element.ui-datepicker thead, .admin-color-bbp-mint .cmb2-element .ui-datepicker thead {\n  background: #4f6d59;\n}\n\/* line 452, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #5fb37c;\n  color: #fff;\n}\n\n\/*--------------------------------------------------------------\n * Character counter\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap {\n  margin: .5em 0 1em;\n}\n\/* line 8, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap input[type=\"text\"] {\n  font-size: 12px;\n  width: 25px;\n}\n\/* line 14, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=\"text\"] {\n  border-color: #a00 !important;\n}\n\/* line 17, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg {\n  display: inline-block;\n}\n\n\/* line 23, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-max-msg {\n  color: #a00;\n  display: none;\n  font-weight: 600;\n  margin-right: 1em;\n}\n\n\/*# sourceMappingURL=cmb2.css.map *\/\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/css\/cmb2.css","ext":"css","size":51330,"mtime":1757324689,"type":"text","content":"\/*!\n * CMB2 - v2.11.0 - 2024-04-02\n * https:\/\/cmb2.io\n * Copyright (c) 2024\n * Licensed GPLv2+\n *\/\n\n@charset \"UTF-8\";\n\/*--------------------------------------------------------------\n * Main Wrap\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap {\n  margin: 0;\n}\n\/* line 8, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input,\n.cmb2-wrap textarea {\n  max-width: 100%;\n}\n\/* line 15, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input[type=\"text\"].cmb2-oembed {\n  width: 100%;\n}\n\/* line 20, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap textarea {\n  width: 500px;\n  padding: 8px;\n}\n\/* line 24, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap textarea.cmb2-textarea-code {\n  font-family: \"Courier 10 Pitch\", Courier, monospace;\n  line-height: 16px;\n}\n\/* line 32, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-text-small, .cmb2-wrap input.cmb2-timepicker {\n  width: 100px;\n}\n\/* line 38, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-text-money {\n  width: 90px;\n}\n\/* line 43, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-text-medium {\n  width: 230px;\n}\n\/* line 48, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.cmb2-upload-file {\n  width: 65%;\n}\n\/* line 52, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input.ed_button {\n  padding: 2px 4px;\n}\n\/* line 57, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input:not([type=\"hidden\"]) + input,\n.cmb2-wrap input:not([type=\"hidden\"]) + .button-secondary,\n.cmb2-wrap input:not([type=\"hidden\"]) + select {\n  margin-left: 20px;\n}\n\/* line 65, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap ul {\n  margin: 0;\n}\n\/* line 69, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap li {\n  font-size: 14px;\n  line-height: 16px;\n  margin: 1px 0 5px 0;\n}\n\/* line 80, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap select {\n  font-size: 14px;\n  margin-top: 3px;\n}\n\/* line 85, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input:focus,\n.cmb2-wrap textarea:focus {\n  background: #fffff8;\n}\n\/* line 90, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input[type=\"radio\"] {\n  margin: 0 5px 0 0;\n  padding: 0;\n}\n\/* line 95, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap input[type=\"checkbox\"] {\n  margin: 0 5px 0 0;\n  padding: 0;\n}\n\/* line 100, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap button,\n.cmb2-wrap .button-secondary {\n  white-space: nowrap;\n}\n\/* line 105, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .mceLayout {\n  border: 1px solid #e9e9e9 !important;\n}\n\/* line 109, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .mceIframeContainer {\n  background: #ffffff;\n}\n\/* line 113, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .meta_mce {\n  width: 97%;\n}\n\/* line 116, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .meta_mce textarea {\n  width: 100%;\n}\n\/* line 122, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-multicheck-toggle {\n  margin-top: -1em;\n}\n\/* line 127, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .wp-picker-clear.button,\n.cmb2-wrap .wp-picker-default.button {\n  margin-left: 6px;\n  padding: 2px 8px;\n}\n\/* line 133, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-row {\n  margin: 0;\n}\n\/* line 136, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-row:after {\n  content: '';\n  clear: both;\n  display: block;\n  width: 100%;\n}\n\/* line 143, sass\/partials\/_main_wrap.scss *\/\n.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description {\n  padding-top: 0;\n  padding-bottom: 1em;\n}\n\n\/* line 154, sass\/partials\/_main_wrap.scss *\/\nbody.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n  margin: .1875rem;\n}\n@media screen and (max-width: 782px) {\n  \/* line 154, sass\/partials\/_main_wrap.scss *\/\n  body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n    margin: .4375rem;\n  }\n}\n\n\/* line 162, sass\/partials\/_main_wrap.scss *\/\n.cmb2-metabox {\n  clear: both;\n  margin: 0;\n}\n\/* line 168, sass\/partials\/_main_wrap.scss *\/\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-th,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-th {\n  border: 0;\n}\n\n\/* line 175, sass\/partials\/_main_wrap.scss *\/\n.cmb-add-row {\n  margin: 1.8em 0 0;\n}\n\n\/* line 179, sass\/partials\/_main_wrap.scss *\/\n.cmb-nested .cmb-td,\n.cmb-repeatable-group .cmb-th,\n.cmb-repeatable-group:first-of-type {\n  border: 0;\n}\n\n\/* line 185, sass\/partials\/_main_wrap.scss *\/\n.cmb-row:last-of-type,\n.cmb2-wrap .cmb-row:last-of-type,\n.cmb-repeatable-group:last-of-type {\n  border-bottom: 0;\n}\n\n\/* line 191, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-grouping {\n  border: 1px solid #e9e9e9;\n  padding: 0 1em;\n}\n\/* line 195, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-grouping.cmb-row {\n  margin: 0 0 0.8em;\n}\n\n\/* line 203, sass\/partials\/_main_wrap.scss *\/\n.cmb-th {\n  color: #222222;\n  float: left;\n  font-weight: 600;\n  padding: 20px 10px 20px 0;\n  vertical-align: top;\n  width: 200px;\n}\n@media (max-width: 450px) {\n  \/* line 203, sass\/partials\/_main_wrap.scss *\/\n  .cmb-th {\n    font-size: 1.2em;\n    display: block;\n    float: none;\n    padding-bottom: 1em;\n    text-align: left;\n    width: 100%;\n  }\n  \/* line 27, sass\/partials\/_mixins.scss *\/\n  .cmb-th label {\n    display: block;\n    margin-top: 0;\n    margin-bottom: 0.5em;\n  }\n}\n\n\/* line 216, sass\/partials\/_main_wrap.scss *\/\n.cmb-td {\n  line-height: 1.3;\n  max-width: 100%;\n  padding: 15px 10px;\n  vertical-align: middle;\n}\n\n\/* line 225, sass\/partials\/_main_wrap.scss *\/\n.cmb-type-title .cmb-td {\n  padding: 0;\n}\n\n\/* line 230, sass\/partials\/_main_wrap.scss *\/\n.cmb-th label {\n  display: block;\n  padding: 5px 0;\n}\n\n\/* line 235, sass\/partials\/_main_wrap.scss *\/\n.cmb-th + .cmb-td {\n  float: left;\n}\n\n\/* line 239, sass\/partials\/_main_wrap.scss *\/\n.cmb-td .cmb-td {\n  padding-bottom: 1em;\n}\n\n\/* line 243, sass\/partials\/_main_wrap.scss *\/\n.cmb-remove-row {\n  text-align: right;\n}\n\n\/* line 247, sass\/partials\/_main_wrap.scss *\/\n.empty-row.hidden {\n  display: none;\n}\n\n\/* line 252, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table {\n  background-color: #fafafa;\n  border: 1px solid #e1e1e1;\n}\n\/* line 256, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row {\n  position: relative;\n  counter-increment: el;\n  margin: 0;\n  padding: 10px 10px 10px 50px;\n  border-bottom: none !important;\n}\n\/* line 264, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row + .cmb-repeat-row {\n  border-top: solid 1px #e9e9e9;\n}\n\/* line 268, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper {\n  outline: dashed 2px #e9e9e9 !important;\n}\n\/* line 272, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row:before {\n  content: counter(el);\n  display: block;\n  top: 0;\n  left: 0;\n  position: absolute;\n  width: 35px;\n  height: 100%;\n  line-height: 35px;\n  cursor: move;\n  color: #757575;\n  text-align: center;\n  border-right: solid 1px #e9e9e9;\n}\n\/* line 289, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td {\n  margin: 0;\n  padding: 0;\n}\n\/* line 296, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table + .cmb-add-row {\n  margin: 0;\n}\n\/* line 299, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table + .cmb-add-row:before {\n  content: '';\n  width: 1px;\n  height: 1.6em;\n  display: block;\n  margin-left: 17px;\n  background-color: gainsboro;\n}\n\/* line 309, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-remove-row {\n  top: 7px;\n  right: 7px;\n  position: absolute;\n  width: auto;\n  margin-left: 0;\n  padding: 0 !important;\n  display: none;\n}\n\/* line 320, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button {\n  font-size: 20px;\n  text-indent: -1000px;\n  overflow: hidden;\n  position: relative;\n  height: auto;\n  line-height: 1;\n  padding: 0 10px 0;\n}\n\/* line 331, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button:before {\n  content: \"\uf335\";\n  font-family: 'Dashicons';\n  speak: none;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n  text-indent: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  line-height: 1.3;\n}\n\/* line 338, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row {\n  display: block;\n}\n\n\/* line 346, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-th {\n  padding: 5px;\n}\n\/* line 350, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-title {\n  background-color: #e9e9e9;\n  padding: 8px 12px 8px 2.2em;\n  margin: 0 -1em;\n  min-height: 1.5em;\n  font-size: 14px;\n  line-height: 1.4;\n}\n\/* line 358, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-title h4 {\n  border: 0;\n  margin: 0;\n  font-size: 1.2em;\n  font-weight: 500;\n  padding: 0.5em 0.75em;\n}\n\/* line 366, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-title .cmb-th {\n  display: block;\n  width: 100%;\n}\n\/* line 372, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-group-description .cmb-th {\n  font-size: 1.2em;\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: left;\n  width: 100%;\n}\n\/* line 27, sass\/partials\/_mixins.scss *\/\n.cmb-repeatable-group .cmb-group-description .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n\/* line 376, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-shift-rows {\n  margin-right: 1em;\n}\n\/* line 379, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2 {\n  margin-top: .15em;\n}\n\/* line 383, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2 {\n  margin-top: .2em;\n}\n\/* line 388, sass\/partials\/_main_wrap.scss *\/\n.cmb-repeatable-group .cmb2-upload-button {\n  float: right;\n}\n\n\/* line 394, sass\/partials\/_main_wrap.scss *\/\np.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n  margin: 0;\n  padding-top: .5em;\n}\n\n\/* line 401, sass\/partials\/_main_wrap.scss *\/\nspan.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n}\n\n\/* line 406, sass\/partials\/_main_wrap.scss *\/\n.cmb2-metabox-title {\n  margin: 0 0 5px 0;\n  padding: 5px 0 0 0;\n  font-size: 14px;\n}\n\n\/* line 412, sass\/partials\/_main_wrap.scss *\/\n.cmb-inline ul {\n  padding: 4px 0 0 0;\n}\n\n\/* line 416, sass\/partials\/_main_wrap.scss *\/\n.cmb-inline li {\n  display: inline-block;\n  padding-right: 18px;\n}\n\n\/* line 421, sass\/partials\/_main_wrap.scss *\/\n.cmb-type-textarea-code pre {\n  margin: 0;\n}\n\n\/* line 427, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status {\n  clear: none;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 10px;\n  width: auto;\n}\n\/* line 434, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status img {\n  max-width: 350px;\n  height: auto;\n}\n\/* line 440, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status img,\n.cmb2-media-status .embed-status {\n  background: #eee;\n  border: 5px solid #ffffff;\n  outline: 1px solid #e9e9e9;\n  box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.3), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  background-image: linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0), linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0);\n  background-position: 0 0, 10px 10px;\n  background-size: 20px 20px;\n  border-radius: 2px;\n  -moz-border-radius: 2px;\n  margin: 15px 0 0 0;\n}\n\/* line 454, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .embed-status {\n  float: left;\n  max-width: 800px;\n}\n\/* line 459, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status, .cmb2-media-status .embed-status {\n  position: relative;\n}\n\/* line 462, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status .cmb2-remove-file-button, .cmb2-media-status .embed-status .cmb2-remove-file-button {\n  background: url(..\/images\/ico-delete.png);\n  height: 16px;\n  left: -5px;\n  position: absolute;\n  text-indent: -9999px;\n  top: -5px;\n  width: 16px;\n}\n\/* line 476, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status .cmb2-remove-file-button {\n  top: 10px;\n}\n\/* line 481, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status .img-status img, .cmb2-media-status .file-status > span {\n  cursor: pointer;\n}\n\/* line 486, sass\/partials\/_main_wrap.scss *\/\n.cmb2-media-status.cmb-attach-list .img-status img, .cmb2-media-status.cmb-attach-list .file-status > span {\n  cursor: move;\n}\n\n\/* line 493, sass\/partials\/_main_wrap.scss *\/\n.cmb-type-file-list .cmb2-media-status .img-status {\n  clear: none;\n  vertical-align: middle;\n  width: auto;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  margin-top: 0;\n}\n\n\/* line 502, sass\/partials\/_main_wrap.scss *\/\n.cmb-attach-list li {\n  clear: both;\n  display: inline-block;\n  width: 100%;\n  margin-top: 5px;\n  margin-bottom: 10px;\n}\n\/* line 508, sass\/partials\/_main_wrap.scss *\/\n.cmb-attach-list li img {\n  float: left;\n  margin-right: 10px;\n}\n\n\/* line 514, sass\/partials\/_main_wrap.scss *\/\n.cmb2-remove-wrapper {\n  margin: 0;\n}\n\n\/* line 518, sass\/partials\/_main_wrap.scss *\/\n.child-cmb2 .cmb-th {\n  text-align: left;\n}\n\n\/* line 522, sass\/partials\/_main_wrap.scss *\/\n.cmb2-indented-hierarchy {\n  padding-left: 1.5em;\n}\n\n@media (max-width: 450px) {\n  \/* line 527, sass\/partials\/_main_wrap.scss *\/\n  .cmb-th,\n  .cmb-td,\n  .cmb-th + .cmb-td {\n    display: block;\n    float: none;\n    width: 100%;\n  }\n}\n\/*--------------------------------------------------------------\n * Post Metaboxes\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_post_metaboxes.scss *\/\n#poststuff .cmb-group-title {\n  margin-left: -1em;\n  margin-right: -1em;\n  min-height: 1.5em;\n}\n\n\/* line 11, sass\/partials\/_post_metaboxes.scss *\/\n#poststuff .repeatable .cmb-group-title {\n  padding-left: 2.2em;\n}\n\n\/* line 17, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb2-wrap, .cmb-type-group .cmb2-wrap {\n  margin: 0;\n}\n\/* line 20, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb2-wrap > .cmb-field-list > .cmb-row, .cmb-type-group .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.8em 0;\n}\n\/* line 26, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed, .cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed {\n  width: 100%;\n}\n\/* line 32, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-row, .cmb-type-group .cmb-row {\n  padding: 0 0 1.8em;\n  margin: 0 0 0.8em;\n}\n\/* line 36, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-row .cmbhandle, .cmb-type-group .cmb-row .cmbhandle {\n  right: -1em;\n  position: relative;\n  color: #222222;\n}\n\/* line 43, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-repeatable-grouping, .cmb-type-group .cmb-repeatable-grouping {\n  padding: 0 1em;\n  max-width: 100%;\n  min-width: 1px !important;\n}\n\/* line 49, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-repeatable-group > .cmb-row, .cmb-type-group .cmb-repeatable-group > .cmb-row {\n  padding-bottom: 0;\n}\n\/* line 53, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-th, .cmb-type-group .cmb-th {\n  width: 18%;\n  padding: 0 2% 0 0;\n}\n\/* line 59, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-td, .cmb-type-group .cmb-td {\n  margin-bottom: 0;\n  padding: 0;\n  line-height: 1.3;\n}\n\/* line 65, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-th + .cmb-td, .cmb-type-group .cmb-th + .cmb-td {\n  width: 80%;\n  float: right;\n}\n\/* line 70, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-row:not(:last-of-type),\n.cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n.cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n  border-bottom: 1px solid #e9e9e9;\n}\n@media (max-width: 450px) {\n  \/* line 70, sass\/partials\/_post_metaboxes.scss *\/\n  .cmb2-postbox .cmb-row:not(:last-of-type),\n  .cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n  .cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n    border-bottom: 0;\n  }\n}\n\/* line 79, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .cmb-repeat-group-field,\n.cmb2-postbox .cmb-remove-field-row, .cmb-type-group .cmb-repeat-group-field,\n.cmb-type-group .cmb-remove-field-row {\n  padding-top: 1.8em;\n}\n\/* line 85, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .button-secondary .dashicons, .cmb-type-group .button-secondary .dashicons {\n  line-height: 1.3;\n}\n\/* line 89, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .button-secondary.move-up .dashicons, .cmb2-postbox .button-secondary.move-down .dashicons, .cmb-type-group .button-secondary.move-up .dashicons, .cmb-type-group .button-secondary.move-down .dashicons {\n  line-height: 1.1;\n}\n\/* line 94, sass\/partials\/_post_metaboxes.scss *\/\n.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons, .cmb-type-group .button-secondary.cmb-add-group-row .dashicons {\n  line-height: 1.5;\n}\n\n\/*--------------------------------------------------------------\n * Context Metaboxes\n--------------------------------------------------------------*\/\n\/* Metabox collapse arrow indicators *\/\n\/* line 8, sass\/partials\/_context_metaboxes.scss *\/\n.js .cmb2-postbox.context-box .handlediv {\n  text-align: center;\n}\n\/* line 13, sass\/partials\/_context_metaboxes.scss *\/\n.js .cmb2-postbox.context-box .toggle-indicator:before {\n  content: \"\\f142\";\n  display: inline-block;\n  font: normal 20px\/1 dashicons;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n\/* line 26, sass\/partials\/_context_metaboxes.scss *\/\n.js .cmb2-postbox.context-box.closed .toggle-indicator:before {\n  content: \"\\f140\";\n}\n\n\/* line 34, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box {\n  margin-bottom: 10px;\n}\n\/* line 38, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-before_permalink-box {\n  margin-top: 10px;\n}\n\/* line 42, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-after_title-box {\n  margin-top: 10px;\n}\n\/* line 46, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-after_editor-box {\n  margin-top: 20px;\n  margin-bottom: 0;\n}\n\/* line 51, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-form_top-box {\n  margin-top: 10px;\n}\n\/* line 55, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box.context-form_top-box .hndle {\n  font-size: 14px;\n  padding: 8px 12px;\n  margin: 0;\n  line-height: 1.4;\n}\n\/* line 63, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-postbox.context-box .hndle {\n  cursor: auto;\n}\n\n\/* line 68, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap {\n  margin-top: 10px;\n}\n\/* line 72, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap.cmb2-context-wrap-form_top {\n  margin-right: 300px;\n  width: auto;\n}\n\/* line 79, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox {\n  padding: 10px;\n}\n\/* line 84, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-th {\n  padding: 0 2% 0 0;\n  width: 18%;\n}\n\/* line 89, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-td {\n  width: 80%;\n  padding: 0;\n}\n\/* line 94, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-row {\n  margin-bottom: 10px;\n}\n\/* line 97, sass\/partials\/_context_metaboxes.scss *\/\n.cmb2-context-wrap .cmb-row:last-of-type {\n  margin-bottom: 0;\n}\n\n\/* one column on the post write\/edit screen *\/\n@media only screen and (max-width: 850px) {\n  \/* line 107, sass\/partials\/_context_metaboxes.scss *\/\n  .cmb2-context-wrap.cmb2-context-wrap-form_top {\n    margin-right: 0;\n  }\n}\n\/*--------------------------------------------------------------\n * Options page\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page {\n  max-width: 1200px;\n}\n\/* line 8, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page.wrap > h2 {\n  margin-bottom: 1em;\n}\n\/* line 12, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-metabox > .cmb-row {\n  padding: 1em;\n  margin-top: -1px;\n  background: #ffffff;\n  border: 1px solid #e9e9e9;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n\/* line 19, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th {\n  padding: 0;\n  font-weight: initial;\n}\n\/* line 24, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n  float: none;\n  padding: 0 0 0 1em;\n  margin-left: 200px;\n}\n@media (max-width: 450px) {\n  \/* line 24, sass\/partials\/_options-page.scss *\/\n  .cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n    padding: 0;\n    margin-left: 0;\n  }\n}\n\/* line 37, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-wrap .cmb-type-title {\n  margin-top: 1em;\n  padding: 0.6em 1em;\n  background-color: #fafafa;\n}\n\/* line 42, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title {\n  font-size: 12px;\n  margin-top: 0;\n  margin-bottom: 0;\n  text-transform: uppercase;\n}\n\/* line 49, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description {\n  padding-top: 0.25em;\n}\n\/* line 55, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th {\n  padding: 0 0 0.8em 0;\n}\n\/* line 59, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb-repeatable-group .cmb-group-name {\n  font-size: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\/* line 65, sass\/partials\/_options-page.scss *\/\n.cmb2-options-page .cmb-repeatable-group .cmb-th > .cmb2-metabox-description {\n  font-weight: 400;\n  padding-bottom: 0 !important;\n}\n\n\/*--------------------------------------------------------------\n * New-Term Page\n--------------------------------------------------------------*\/\n\/* line 6, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-th {\n  float: none;\n  width: auto;\n  padding: 20px 0 0;\n}\n\/* line 12, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-td {\n  padding: 0;\n}\n\/* line 16, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-th + .cmb-td {\n  float: none;\n}\n\/* line 20, sass\/partials\/_new_term.scss *\/\n#addtag select {\n  max-width: 100%;\n}\n\/* line 24, sass\/partials\/_new_term.scss *\/\n#addtag .cmb2-metabox {\n  padding-bottom: 20px;\n}\n\/* line 28, sass\/partials\/_new_term.scss *\/\n#addtag .cmb-row li label {\n  display: inline;\n}\n\n\/*--------------------------------------------------------------\n * Misc.\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_misc.scss *\/\n#poststuff .cmb-repeatable-group h2 {\n  margin: 0;\n}\n\n\/* line 12, sass\/partials\/_misc.scss *\/\n.edit-tags-php .cmb2-metabox-title,\n.profile-php .cmb2-metabox-title,\n.user-edit-php .cmb2-metabox-title {\n  font-size: 1.4em;\n}\n\n\/* line 18, sass\/partials\/_misc.scss *\/\n.cmb2-postbox .cmb-spinner, .cmb2-no-box-wrap .cmb-spinner {\n  float: left;\n  display: none;\n}\n\n\/* line 24, sass\/partials\/_misc.scss *\/\n.cmb-spinner {\n  display: none;\n}\n\/* line 26, sass\/partials\/_misc.scss *\/\n.cmb-spinner.is-active {\n  display: block;\n}\n\n\/*--------------------------------------------------------------\n * Sidebar Placement Adjustments\n--------------------------------------------------------------*\/\n\/* line 10, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap > .cmb-field-list > .cmb-row,\n#side-sortables .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.4em 0;\n}\n\/* line 16, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker),\n#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker) {\n  width: 100%;\n}\n\/* line 20, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input + input:not(.wp-picker-clear), .inner-sidebar .cmb2-wrap input + select,\n#side-sortables .cmb2-wrap input + input:not(.wp-picker-clear),\n#side-sortables .cmb2-wrap input + select {\n  margin-left: 0;\n  margin-top: 1em;\n  display: block;\n}\n\/* line 26, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input.cmb2-text-money,\n#side-sortables .cmb2-wrap input.cmb2-text-money {\n  max-width: 70%;\n}\n\/* line 28, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description,\n#side-sortables .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description {\n  display: block;\n}\n\/* line 34, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-wrap label,\n#side-sortables .cmb2-wrap label {\n  display: block;\n  font-weight: 700;\n  padding: 0 0 5px;\n}\n\/* line 42, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar textarea,\n#side-sortables textarea {\n  max-width: 99%;\n}\n\/* line 46, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-repeatable-group,\n#side-sortables .cmb-repeatable-group {\n  border-bottom: 1px solid #e9e9e9;\n}\n\/* line 50, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-type-group > .cmb-td > .cmb-repeatable-group,\n#side-sortables .cmb-type-group > .cmb-td > .cmb-repeatable-group {\n  border-bottom: 0;\n  margin-bottom: -1.4em;\n}\n\/* line 55, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-th,\n.inner-sidebar .cmb-td:not(.cmb-remove-row),\n.inner-sidebar .cmb-th + .cmb-td,\n#side-sortables .cmb-th,\n#side-sortables .cmb-td:not(.cmb-remove-row),\n#side-sortables .cmb-th + .cmb-td {\n  width: 100%;\n  display: block;\n  float: none;\n}\n\/* line 63, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .closed .inside,\n#side-sortables .closed .inside {\n  display: none;\n}\n\/* line 67, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-th,\n#side-sortables .cmb-th {\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: left;\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n}\n\/* line 27, sass\/partials\/_mixins.scss *\/\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n\/* line 14, sass\/partials\/_mixins.scss *\/\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  font-size: 14px;\n  line-height: 1.4em;\n}\n\/* line 74, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-group-description .cmb-th,\n#side-sortables .cmb-group-description .cmb-th {\n  padding-top: 0;\n}\n\/* line 77, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-group-description .cmb2-metabox-description,\n#side-sortables .cmb-group-description .cmb2-metabox-description {\n  padding: 0;\n}\n\/* line 84, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-group-title .cmb-th,\n#side-sortables .cmb-group-title .cmb-th {\n  padding: 0;\n}\n\/* line 90, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-repeatable-grouping + .cmb-repeatable-grouping,\n#side-sortables .cmb-repeatable-grouping + .cmb-repeatable-grouping {\n  margin-top: 1em;\n}\n\/* line 99, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-media-status .img-status img,\n.inner-sidebar .cmb2-media-status .embed-status img,\n#side-sortables .cmb2-media-status .img-status img,\n#side-sortables .cmb2-media-status .embed-status img {\n  max-width: 90%;\n  height: auto;\n}\n\/* line 107, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-list label,\n#side-sortables .cmb2-list label {\n  display: inline;\n  font-weight: normal;\n}\n\/* line 112, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-metabox-description,\n#side-sortables .cmb2-metabox-description {\n  display: block;\n  padding: 7px 0 0;\n}\n\/* line 119, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-type-checkbox .cmb-td label,\n.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description,\n#side-sortables .cmb-type-checkbox .cmb-td label,\n#side-sortables .cmb-type-checkbox .cmb2-metabox-description {\n  font-weight: normal;\n  display: inline;\n}\n\/* line 126, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-row .cmb2-metabox-description,\n#side-sortables .cmb-row .cmb2-metabox-description {\n  padding-bottom: 1.8em;\n}\n\/* line 130, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-metabox-title,\n#side-sortables .cmb2-metabox-title {\n  font-size: 1.2em;\n  font-style: italic;\n}\n\/* line 135, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb-remove-row,\n#side-sortables .cmb-remove-row {\n  clear: both;\n  padding-top: 12px;\n  padding-bottom: 0;\n}\n\/* line 141, sass\/partials\/_sidebar_placements.scss *\/\n.inner-sidebar .cmb2-upload-button,\n#side-sortables .cmb2-upload-button {\n  clear: both;\n  margin-top: 12px;\n}\n\n\/*--------------------------------------------------------------\n * Collapsible UI\n--------------------------------------------------------------*\/\n\/* line 6, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox .cmbhandle {\n  color: #757575;\n  float: right;\n  width: 27px;\n  height: 30px;\n  cursor: pointer;\n  right: -1em;\n  position: relative;\n}\n\/* line 14, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox .cmbhandle:before {\n  content: '\\f142';\n  right: 12px;\n  font: normal 20px\/1 'dashicons';\n  speak: none;\n  display: inline-block;\n  padding: 8px 10px;\n  top: 0;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n\/* line 31, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox .postbox.closed .cmbhandle:before {\n  content: '\\f140';\n}\n\/* line 37, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row {\n  -webkit-appearance: none !important;\n  background: none !important;\n  border: none !important;\n  position: absolute;\n  left: 0;\n  top: .5em;\n  line-height: 1em;\n  padding: 2px 6px 3px;\n  opacity: .5;\n}\n\/* line 47, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]) {\n  cursor: pointer;\n  color: #a00;\n  opacity: 1;\n}\n\/* line 51, sass\/partials\/_collapsible_ui.scss *\/\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover {\n  color: #f00;\n}\n\n\/*\n * jQuery UI CSS Framework 1.8.16\n *\n * Copyright 2011, AUTHORS.txt (http:\/\/jqueryui.com\/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http:\/\/jquery.org\/license\n *\n * http:\/\/docs.jquery.com\/UI\/Theming\/API\n *\n * WordPress Styles adopted from \"jQuery UI Datepicker CSS for WordPress\"\n * https:\/\/github.com\/stuttter\/wp-datepicker-styling\n *\n *\/\n\/* line 15, sass\/partials\/_jquery_ui.scss *\/\n* html .cmb2-element.ui-helper-clearfix {\n  height: 1%;\n}\n\n\/* line 24, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker, .cmb2-element .ui-datepicker {\n  padding: 0;\n  margin: 0;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-top: none;\n  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  min-width: 17em;\n  width: auto;\n  \/* Default Color Scheme *\/\n}\n\/* line 38, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker *, .cmb2-element .ui-datepicker * {\n  padding: 0;\n  font-family: \"Open Sans\", sans-serif;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n}\n\/* line 46, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker table, .cmb2-element .ui-datepicker table {\n  font-size: 13px;\n  margin: 0;\n  border: none;\n  border-collapse: collapse;\n}\n\/* line 53, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background-image: none;\n  border: none;\n  color: #fff;\n  font-weight: normal;\n}\n\/* line 61, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: transparent;\n  border-color: transparent;\n  cursor: pointer;\n}\n\/* line 67, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-title, .cmb2-element .ui-datepicker .ui-datepicker-title {\n  margin: 0;\n  padding: 10px 0;\n  color: #fff;\n  font-size: 14px;\n  line-height: 14px;\n  text-align: center;\n}\n\/* line 75, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-title select, .cmb2-element .ui-datepicker .ui-datepicker-title select {\n  margin-top: -8px;\n  margin-bottom: -8px;\n}\n\/* line 81, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-next {\n  position: relative;\n  top: 0;\n  height: 34px;\n  width: 34px;\n}\n\/* line 89, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next, .cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next {\n  border: none;\n}\n\/* line 94, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-prev-hover {\n  left: 0;\n}\n\/* line 99, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover, .cmb2-element .ui-datepicker .ui-datepicker-next,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover {\n  right: 0;\n}\n\/* line 104, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next span,\n.cmb2-element.ui-datepicker .ui-datepicker-prev span, .cmb2-element .ui-datepicker .ui-datepicker-next span,\n.cmb2-element .ui-datepicker .ui-datepicker-prev span {\n  display: none;\n}\n\/* line 109, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev, .cmb2-element .ui-datepicker .ui-datepicker-prev {\n  float: left;\n}\n\/* line 113, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-next {\n  float: right;\n}\n\/* line 117, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  font: normal 20px\/34px 'dashicons';\n  padding-left: 7px;\n  color: #fff;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: 34px;\n  height: 34px;\n}\n\/* line 129, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before {\n  content: '\\f341';\n}\n\/* line 133, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  content: '\\f345';\n}\n\/* line 137, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before, .cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before {\n  opacity: 0.7;\n}\n\/* line 142, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker select.ui-datepicker-month,\n.cmb2-element.ui-datepicker select.ui-datepicker-year, .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.cmb2-element .ui-datepicker select.ui-datepicker-year {\n  width: 33%;\n  background: transparent;\n  border-color: transparent;\n  box-shadow: none;\n  color: #fff;\n}\n\/* line 149, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker select.ui-datepicker-month option,\n.cmb2-element.ui-datepicker select.ui-datepicker-year option, .cmb2-element .ui-datepicker select.ui-datepicker-month option,\n.cmb2-element .ui-datepicker select.ui-datepicker-year option {\n  color: #333;\n}\n\/* line 154, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  color: #fff;\n  font-weight: 600;\n}\n\/* line 157, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker thead th, .cmb2-element .ui-datepicker thead th {\n  font-weight: normal;\n}\n\/* line 162, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker th, .cmb2-element .ui-datepicker th {\n  padding: 10px;\n}\n\/* line 166, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td, .cmb2-element .ui-datepicker td {\n  padding: 0;\n  border: 1px solid #f4f4f4;\n}\n\/* line 171, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-other-month, .cmb2-element .ui-datepicker td.ui-datepicker-other-month {\n  border: transparent;\n}\n\/* line 175, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end, .cmb2-element .ui-datepicker td.ui-datepicker-week-end {\n  background-color: #f4f4f4;\n  border: 1px solid #f4f4f4;\n}\n\/* line 178, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today {\n  -webkit-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  -moz-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n}\n\/* line 185, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background-color: #f0f0c0;\n}\n\/* line 189, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-datepicker-current-day, .cmb2-element .ui-datepicker td.ui-datepicker-current-day {\n  background: #bbdd88;\n}\n\/* line 193, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td .ui-state-default, .cmb2-element .ui-datepicker td .ui-state-default {\n  background: transparent;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  width: auto;\n  display: block;\n  padding: 5px 10px;\n  font-weight: normal;\n  color: #444;\n}\n\/* line 205, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default, .cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default {\n  opacity: 0.5;\n}\n\/* line 210, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n\/* line 215, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n\/* line 219, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker td .ui-state-hover, .cmb2-element.ui-datepicker td .ui-state-active, .cmb2-element .ui-datepicker td .ui-state-hover, .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #0073aa;\n  color: #fff;\n}\n\/* line 224, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div, .cmb2-element .ui-datepicker .ui-timepicker-div {\n  font-size: 14px;\n}\n\/* line 226, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl, .cmb2-element .ui-datepicker .ui-timepicker-div dl {\n  text-align: left;\n  padding: 0 .6em;\n}\n\/* line 229, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dt, .cmb2-element .ui-datepicker .ui-timepicker-div dl dt {\n  float: left;\n  clear: left;\n  padding: 0 0 0 5px;\n}\n\/* line 234, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd {\n  margin: 0 10px 10px 40%;\n}\n\/* line 236, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd select {\n  width: 100%;\n}\n\/* line 242, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane {\n  padding: .6em;\n  text-align: left;\n}\n\/* line 246, sass\/partials\/_jquery_ui.scss *\/\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary {\n  padding: 0 10px 1px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n  margin: 0 .6em .4em .4em;\n}\n\n\/* line 260, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n\/* line 265, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-fresh .cmb2-element.ui-datepicker thead, .admin-color-fresh .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n\/* line 269, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #0073aa;\n  color: #fff;\n}\n\n\/* line 277, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #52accc;\n}\n\/* line 282, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker thead, .admin-color-blue .cmb2-element .ui-datepicker thead {\n  background: #4796b3;\n}\n\/* line 291, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #096484;\n  color: #fff;\n}\n\/* line 296, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n\/* line 305, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #59524c;\n}\n\/* line 310, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-coffee .cmb2-element.ui-datepicker thead, .admin-color-coffee .cmb2-element .ui-datepicker thead {\n  background: #46403c;\n}\n\/* line 314, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #c7a589;\n  color: #fff;\n}\n\n\/* line 322, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #523f6d;\n}\n\/* line 327, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ectoplasm .cmb2-element.ui-datepicker thead, .admin-color-ectoplasm .cmb2-element .ui-datepicker thead {\n  background: #413256;\n}\n\/* line 331, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #a3b745;\n  color: #fff;\n}\n\n\/* line 339, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #363b3f;\n}\n\/* line 344, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-midnight .cmb2-element.ui-datepicker thead, .admin-color-midnight .cmb2-element .ui-datepicker thead {\n  background: #26292c;\n}\n\/* line 348, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #e14d43;\n  color: #fff;\n}\n\n\/* line 356, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #738e96;\n}\n\/* line 361, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ocean .cmb2-element.ui-datepicker thead, .admin-color-ocean .cmb2-element .ui-datepicker thead {\n  background: #627c83;\n}\n\/* line 365, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #9ebaa0;\n  color: #fff;\n}\n\n\/* line 373, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: #cf4944;\n}\n\/* line 379, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-sunrise .cmb2-element.ui-datepicker th, .admin-color-sunrise .cmb2-element .ui-datepicker th {\n  border-color: #be3631;\n  background: #be3631;\n}\n\/* line 384, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #dd823b;\n  color: #fff;\n}\n\n\/* line 392, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #e5e5e5;\n}\n\/* line 397, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year, .admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year {\n  color: #555;\n}\n\/* line 402, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker thead, .admin-color-light .cmb2-element .ui-datepicker thead {\n  background: #888;\n}\n\/* line 406, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before, .admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  color: #555;\n}\n\/* line 414, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #ccc;\n}\n\/* line 418, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n\/* line 426, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #56b274;\n}\n\/* line 431, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead {\n  background: #36533f;\n}\n\/* line 435, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #446950;\n  color: #fff;\n}\n\n\/* line 443, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #4ca26a;\n}\n\/* line 448, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-mint .cmb2-element.ui-datepicker thead, .admin-color-bbp-mint .cmb2-element .ui-datepicker thead {\n  background: #4f6d59;\n}\n\/* line 452, sass\/partials\/_jquery_ui.scss *\/\n.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #5fb37c;\n  color: #fff;\n}\n\n\/*--------------------------------------------------------------\n * Character counter\n--------------------------------------------------------------*\/\n\/* line 5, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap {\n  margin: .5em 0 1em;\n}\n\/* line 8, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap input[type=\"text\"] {\n  font-size: 12px;\n  width: 25px;\n}\n\/* line 14, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=\"text\"] {\n  border-color: #a00 !important;\n}\n\/* line 17, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg {\n  display: inline-block;\n}\n\n\/* line 23, sass\/partials\/_char_counter.scss *\/\n.cmb2-char-max-msg {\n  color: #a00;\n  display: none;\n  font-weight: 600;\n  margin-left: 1em;\n}\n\n\/*# sourceMappingURL=cmb2.css.map *\/\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/css\/index.php","ext":"php","size":27,"mtime":1757324689,"type":"text","content":"<?php\n\/\/ Silence is golden\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/css\/cmb2-rtl.min.css","ext":"css","size":32949,"mtime":1757324689,"type":"text","content":"@charset \"UTF-8\";.cmb2-wrap{margin:0}.cmb2-wrap input,.cmb2-wrap textarea{max-width:100%}.cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb2-wrap textarea{width:500px;padding:8px}.cmb2-wrap textarea.cmb2-textarea-code{font-family:\"Courier 10 Pitch\",Courier,monospace;line-height:16px}.cmb2-wrap input.cmb2-text-small,.cmb2-wrap input.cmb2-timepicker{width:100px}.cmb2-wrap input.cmb2-text-money{width:90px}.cmb2-wrap input.cmb2-text-medium{width:230px}.cmb2-wrap input.cmb2-upload-file{width:65%}.cmb2-wrap input.ed_button{padding:2px 4px}.cmb2-wrap input:not([type=hidden])+.button-secondary,.cmb2-wrap input:not([type=hidden])+input,.cmb2-wrap input:not([type=hidden])+select{margin-right:20px}.cmb2-wrap ul{margin:0}.cmb2-wrap li{font-size:14px;line-height:16px;margin:1px 0 5px 0}.cmb2-wrap select{font-size:14px;margin-top:3px}.cmb2-wrap input:focus,.cmb2-wrap textarea:focus{background:#fffff8}.cmb2-wrap input[type=radio]{margin:0 0 0 5px;padding:0}.cmb2-wrap input[type=checkbox]{margin:0 0 0 5px;padding:0}.cmb2-wrap .button-secondary,.cmb2-wrap button{white-space:nowrap}.cmb2-wrap .mceLayout{border:1px solid #e9e9e9!important}.cmb2-wrap .mceIframeContainer{background:#fff}.cmb2-wrap .meta_mce{width:97%}.cmb2-wrap .meta_mce textarea{width:100%}.cmb2-wrap .cmb-multicheck-toggle{margin-top:-1em}.cmb2-wrap .wp-picker-clear.button,.cmb2-wrap .wp-picker-default.button{margin-right:6px;padding:2px 8px}.cmb2-wrap .cmb-row{margin:0}.cmb2-wrap .cmb-row:after{content:'';clear:both;display:block;width:100%}.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description{padding-top:0;padding-bottom:1em}body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.1875rem}@media screen and (max-width:782px){body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.4375rem}}.cmb2-metabox{clear:both;margin:0}.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-th,.cmb2-metabox>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox>.cmb-row:first-of-type>.cmb-th{border:0}.cmb-add-row{margin:1.8em 0 0}.cmb-nested .cmb-td,.cmb-repeatable-group .cmb-th,.cmb-repeatable-group:first-of-type{border:0}.cmb-repeatable-group:last-of-type,.cmb-row:last-of-type,.cmb2-wrap .cmb-row:last-of-type{border-bottom:0}.cmb-repeatable-grouping{border:1px solid #e9e9e9;padding:0 1em}.cmb-repeatable-grouping.cmb-row{margin:0 0 .8em}.cmb-th{color:#222;float:right;font-weight:600;padding:20px 0 20px 10px;vertical-align:top;width:200px}@media (max-width:450px){.cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:right;width:100%}.cmb-th label{display:block;margin-top:0;margin-bottom:.5em}}.cmb-td{line-height:1.3;max-width:100%;padding:15px 10px;vertical-align:middle}.cmb-type-title .cmb-td{padding:0}.cmb-th label{display:block;padding:5px 0}.cmb-th+.cmb-td{float:right}.cmb-td .cmb-td{padding-bottom:1em}.cmb-remove-row{text-align:left}.empty-row.hidden{display:none}.cmb-repeat-table{background-color:#fafafa;border:1px solid #e1e1e1}.cmb-repeat-table .cmb-row.cmb-repeat-row{position:relative;counter-increment:el;margin:0;padding:10px 50px 10px 10px;border-bottom:none!important}.cmb-repeat-table .cmb-row.cmb-repeat-row+.cmb-repeat-row{border-top:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper{outline:dashed 2px #e9e9e9!important}.cmb-repeat-table .cmb-row.cmb-repeat-row:before{content:counter(el);display:block;top:0;right:0;position:absolute;width:35px;height:100%;line-height:35px;cursor:move;color:#757575;text-align:center;border-left:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td{margin:0;padding:0}.cmb-repeat-table+.cmb-add-row{margin:0}.cmb-repeat-table+.cmb-add-row:before{content:'';width:1px;height:1.6em;display:block;margin-right:17px;background-color:#dcdcdc}.cmb-repeat-table .cmb-remove-row{top:7px;left:7px;position:absolute;width:auto;margin-right:0;padding:0!important;display:none}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button{font-size:20px;text-indent:-1000px;overflow:hidden;position:relative;height:auto;line-height:1;padding:0 10px 0}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button:before{content:\"\uf335\";font-family:Dashicons;speak:none;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;margin:0;text-indent:0;position:absolute;top:0;right:0;width:100%;height:100%;text-align:center;line-height:1.3}.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row{display:block}.cmb-repeatable-group .cmb-th{padding:5px}.cmb-repeatable-group .cmb-group-title{background-color:#e9e9e9;padding:8px 2.2em 8px 12px;margin:0 -1em;min-height:1.5em;font-size:14px;line-height:1.4}.cmb-repeatable-group .cmb-group-title h4{border:0;margin:0;font-size:1.2em;font-weight:500;padding:.5em .75em}.cmb-repeatable-group .cmb-group-title .cmb-th{display:block;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:right;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}.cmb-repeatable-group .cmb-shift-rows{margin-left:1em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2{margin-top:.15em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2{margin-top:.2em}.cmb-repeatable-group .cmb2-upload-button{float:left}p.cmb2-metabox-description{color:#666;letter-spacing:.01em;margin:0;padding-top:.5em}span.cmb2-metabox-description{color:#666;letter-spacing:.01em}.cmb2-metabox-title{margin:0 0 5px 0;padding:5px 0 0 0;font-size:14px}.cmb-inline ul{padding:4px 0 0 0}.cmb-inline li{display:inline-block;padding-left:18px}.cmb-type-textarea-code pre{margin:0}.cmb2-media-status .img-status{clear:none;display:inline-block;vertical-align:middle;margin-left:10px;width:auto}.cmb2-media-status .img-status img{max-width:350px;height:auto}.cmb2-media-status .embed-status,.cmb2-media-status .img-status img{background:#eee;border:5px solid #fff;outline:1px solid #e9e9e9;box-shadow:inset 0 0 15px rgba(0,0,0,.3),inset 0 0 0 1px rgba(0,0,0,.05);background-image:linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0),linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0);background-position:0 0,10px 10px;background-size:20px 20px;border-radius:2px;-moz-border-radius:2px;margin:15px 0 0 0}.cmb2-media-status .embed-status{float:right;max-width:800px}.cmb2-media-status .embed-status,.cmb2-media-status .img-status{position:relative}.cmb2-media-status .embed-status .cmb2-remove-file-button,.cmb2-media-status .img-status .cmb2-remove-file-button{background:url(..\/images\/ico-delete.png);height:16px;right:-5px;position:absolute;text-indent:-9999px;top:-5px;width:16px}.cmb2-media-status .img-status .cmb2-remove-file-button{top:10px}.cmb2-media-status .file-status>span,.cmb2-media-status .img-status img{cursor:pointer}.cmb2-media-status.cmb-attach-list .file-status>span,.cmb2-media-status.cmb-attach-list .img-status img{cursor:move}.cmb-type-file-list .cmb2-media-status .img-status{clear:none;vertical-align:middle;width:auto;margin-left:10px;margin-bottom:10px;margin-top:0}.cmb-attach-list li{clear:both;display:inline-block;width:100%;margin-top:5px;margin-bottom:10px}.cmb-attach-list li img{float:right;margin-left:10px}.cmb2-remove-wrapper{margin:0}.child-cmb2 .cmb-th{text-align:right}.cmb2-indented-hierarchy{padding-right:1.5em}@media (max-width:450px){.cmb-td,.cmb-th,.cmb-th+.cmb-td{display:block;float:none;width:100%}}#poststuff .cmb-group-title{margin-right:-1em;margin-left:-1em;min-height:1.5em}#poststuff .repeatable .cmb-group-title{padding-right:2.2em}.cmb-type-group .cmb2-wrap,.cmb2-postbox .cmb2-wrap{margin:0}.cmb-type-group .cmb2-wrap>.cmb-field-list>.cmb-row,.cmb2-postbox .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.8em 0}.cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed,.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb-type-group .cmb-row,.cmb2-postbox .cmb-row{padding:0 0 1.8em;margin:0 0 .8em}.cmb-type-group .cmb-row .cmbhandle,.cmb2-postbox .cmb-row .cmbhandle{left:-1em;position:relative;color:#222}.cmb-type-group .cmb-repeatable-grouping,.cmb2-postbox .cmb-repeatable-grouping{padding:0 1em;max-width:100%;min-width:1px!important}.cmb-type-group .cmb-repeatable-group>.cmb-row,.cmb2-postbox .cmb-repeatable-group>.cmb-row{padding-bottom:0}.cmb-type-group .cmb-th,.cmb2-postbox .cmb-th{width:18%;padding:0 0 0 2%}.cmb-type-group .cmb-td,.cmb2-postbox .cmb-td{margin-bottom:0;padding:0;line-height:1.3}.cmb-type-group .cmb-th+.cmb-td,.cmb2-postbox .cmb-th+.cmb-td{width:80%;float:left}.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:1px solid #e9e9e9}@media (max-width:450px){.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:0}}.cmb-type-group .cmb-remove-field-row,.cmb-type-group .cmb-repeat-group-field,.cmb2-postbox .cmb-remove-field-row,.cmb2-postbox .cmb-repeat-group-field{padding-top:1.8em}.cmb-type-group .button-secondary .dashicons,.cmb2-postbox .button-secondary .dashicons{line-height:1.3}.cmb-type-group .button-secondary.move-down .dashicons,.cmb-type-group .button-secondary.move-up .dashicons,.cmb2-postbox .button-secondary.move-down .dashicons,.cmb2-postbox .button-secondary.move-up .dashicons{line-height:1.1}.cmb-type-group .button-secondary.cmb-add-group-row .dashicons,.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons{line-height:1.5}.js .cmb2-postbox.context-box .handlediv{text-align:center}.js .cmb2-postbox.context-box .toggle-indicator:before{content:\"\\f142\";display:inline-block;font:normal 20px\/1 dashicons;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.js .cmb2-postbox.context-box.closed .toggle-indicator:before{content:\"\\f140\"}.cmb2-postbox.context-box{margin-bottom:10px}.cmb2-postbox.context-box.context-before_permalink-box{margin-top:10px}.cmb2-postbox.context-box.context-after_title-box{margin-top:10px}.cmb2-postbox.context-box.context-after_editor-box{margin-top:20px;margin-bottom:0}.cmb2-postbox.context-box.context-form_top-box{margin-top:10px}.cmb2-postbox.context-box.context-form_top-box .hndle{font-size:14px;padding:8px 12px;margin:0;line-height:1.4}.cmb2-postbox.context-box .hndle{cursor:auto}.cmb2-context-wrap{margin-top:10px}.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-left:300px;width:auto}.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox{padding:10px}.cmb2-context-wrap .cmb-th{padding:0 0 0 2%;width:18%}.cmb2-context-wrap .cmb-td{width:80%;padding:0}.cmb2-context-wrap .cmb-row{margin-bottom:10px}.cmb2-context-wrap .cmb-row:last-of-type{margin-bottom:0}@media only screen and (max-width:850px){.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-left:0}}.cmb2-options-page{max-width:1200px}.cmb2-options-page.wrap>h2{margin-bottom:1em}.cmb2-options-page .cmb2-metabox>.cmb-row{padding:1em;margin-top:-1px;background:#fff;border:1px solid #e9e9e9;box-shadow:0 1px 1px rgba(0,0,0,.05)}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th{padding:0;font-weight:initial}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{float:none;padding:0 1em 0 0;margin-right:200px}@media (max-width:450px){.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{padding:0;margin-right:0}}.cmb2-options-page .cmb2-wrap .cmb-type-title{margin-top:1em;padding:.6em 1em;background-color:#fafafa}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title{font-size:12px;margin-top:0;margin-bottom:0;text-transform:uppercase}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description{padding-top:.25em}.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th{padding:0 0 .8em 0}.cmb2-options-page .cmb-repeatable-group .cmb-group-name{font-size:16px;margin-top:0;margin-bottom:0}.cmb2-options-page .cmb-repeatable-group .cmb-th>.cmb2-metabox-description{font-weight:400;padding-bottom:0!important}#addtag .cmb-th{float:none;width:auto;padding:20px 0 0}#addtag .cmb-td{padding:0}#addtag .cmb-th+.cmb-td{float:none}#addtag select{max-width:100%}#addtag .cmb2-metabox{padding-bottom:20px}#addtag .cmb-row li label{display:inline}#poststuff .cmb-repeatable-group h2{margin:0}.edit-tags-php .cmb2-metabox-title,.profile-php .cmb2-metabox-title,.user-edit-php .cmb2-metabox-title{font-size:1.4em}.cmb2-no-box-wrap .cmb-spinner,.cmb2-postbox .cmb-spinner{float:right;display:none}.cmb-spinner{display:none}.cmb-spinner.is-active{display:block}#side-sortables .cmb2-wrap>.cmb-field-list>.cmb-row,.inner-sidebar .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.4em 0}#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker),.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker){width:100%}#side-sortables .cmb2-wrap input+input:not(.wp-picker-clear),#side-sortables .cmb2-wrap input+select,.inner-sidebar .cmb2-wrap input+input:not(.wp-picker-clear),.inner-sidebar .cmb2-wrap input+select{margin-right:0;margin-top:1em;display:block}#side-sortables .cmb2-wrap input.cmb2-text-money,.inner-sidebar .cmb2-wrap input.cmb2-text-money{max-width:70%}#side-sortables .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description,.inner-sidebar .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description{display:block}#side-sortables .cmb2-wrap label,.inner-sidebar .cmb2-wrap label{display:block;font-weight:700;padding:0 0 5px}#side-sortables textarea,.inner-sidebar textarea{max-width:99%}#side-sortables .cmb-repeatable-group,.inner-sidebar .cmb-repeatable-group{border-bottom:1px solid #e9e9e9}#side-sortables .cmb-type-group>.cmb-td>.cmb-repeatable-group,.inner-sidebar .cmb-type-group>.cmb-td>.cmb-repeatable-group{border-bottom:0;margin-bottom:-1.4em}#side-sortables .cmb-td:not(.cmb-remove-row),#side-sortables .cmb-th,#side-sortables .cmb-th+.cmb-td,.inner-sidebar .cmb-td:not(.cmb-remove-row),.inner-sidebar .cmb-th,.inner-sidebar .cmb-th+.cmb-td{width:100%;display:block;float:none}#side-sortables .closed .inside,.inner-sidebar .closed .inside{display:none}#side-sortables .cmb-th,.inner-sidebar .cmb-th{display:block;float:none;padding-bottom:1em;text-align:right;width:100%;padding-right:0;padding-left:0}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{font-size:14px;line-height:1.4em}#side-sortables .cmb-group-description .cmb-th,.inner-sidebar .cmb-group-description .cmb-th{padding-top:0}#side-sortables .cmb-group-description .cmb2-metabox-description,.inner-sidebar .cmb-group-description .cmb2-metabox-description{padding:0}#side-sortables .cmb-group-title .cmb-th,.inner-sidebar .cmb-group-title .cmb-th{padding:0}#side-sortables .cmb-repeatable-grouping+.cmb-repeatable-grouping,.inner-sidebar .cmb-repeatable-grouping+.cmb-repeatable-grouping{margin-top:1em}#side-sortables .cmb2-media-status .embed-status img,#side-sortables .cmb2-media-status .img-status img,.inner-sidebar .cmb2-media-status .embed-status img,.inner-sidebar .cmb2-media-status .img-status img{max-width:90%;height:auto}#side-sortables .cmb2-list label,.inner-sidebar .cmb2-list label{display:inline;font-weight:400}#side-sortables .cmb2-metabox-description,.inner-sidebar .cmb2-metabox-description{display:block;padding:7px 0 0}#side-sortables .cmb-type-checkbox .cmb-td label,#side-sortables .cmb-type-checkbox .cmb2-metabox-description,.inner-sidebar .cmb-type-checkbox .cmb-td label,.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description{font-weight:400;display:inline}#side-sortables .cmb-row .cmb2-metabox-description,.inner-sidebar .cmb-row .cmb2-metabox-description{padding-bottom:1.8em}#side-sortables .cmb2-metabox-title,.inner-sidebar .cmb2-metabox-title{font-size:1.2em;font-style:italic}#side-sortables .cmb-remove-row,.inner-sidebar .cmb-remove-row{clear:both;padding-top:12px;padding-bottom:0}#side-sortables .cmb2-upload-button,.inner-sidebar .cmb2-upload-button{clear:both;margin-top:12px}.cmb2-metabox .cmbhandle{color:#757575;float:left;width:27px;height:30px;cursor:pointer;left:-1em;position:relative}.cmb2-metabox .cmbhandle:before{content:'\\f142';left:12px;font:normal 20px\/1 dashicons;speak:none;display:inline-block;padding:8px 10px;top:0;position:relative;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.cmb2-metabox .postbox.closed .cmbhandle:before{content:'\\f140'}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row{-webkit-appearance:none!important;background:0 0!important;border:none!important;position:absolute;right:0;top:.5em;line-height:1em;padding:2px 6px 3px;opacity:.5}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]){cursor:pointer;color:#a00;opacity:1}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover{color:red}* html .cmb2-element.ui-helper-clearfix{height:1%}.cmb2-element .ui-datepicker,.cmb2-element.ui-datepicker{padding:0;margin:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;background-color:#fff;border:1px solid #dfdfdf;border-top:none;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.075);box-shadow:0 3px 6px rgba(0,0,0,.075);min-width:17em;width:auto}.cmb2-element .ui-datepicker *,.cmb2-element.ui-datepicker *{padding:0;font-family:\"Open Sans\",sans-serif;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.cmb2-element .ui-datepicker table,.cmb2-element.ui-datepicker table{font-size:13px;margin:0;border:none;border-collapse:collapse}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background-image:none;border:none;color:#fff;font-weight:400}.cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover{background:0 0;border-color:transparent;cursor:pointer}.cmb2-element .ui-datepicker .ui-datepicker-title,.cmb2-element.ui-datepicker .ui-datepicker-title{margin:0;padding:10px 0;color:#fff;font-size:14px;line-height:14px;text-align:center}.cmb2-element .ui-datepicker .ui-datepicker-title select,.cmb2-element.ui-datepicker .ui-datepicker-title select{margin-top:-8px;margin-bottom:-8px}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-prev{position:relative;top:0;height:34px;width:34px}.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev{border:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover,.cmb2-element.ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover{right:0}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-next-hover,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next-hover{left:0}.cmb2-element .ui-datepicker .ui-datepicker-next span,.cmb2-element .ui-datepicker .ui-datepicker-prev span,.cmb2-element.ui-datepicker .ui-datepicker-next span,.cmb2-element.ui-datepicker .ui-datepicker-prev span{display:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev{float:right}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next{float:left}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{font:normal 20px\/34px dashicons;padding-right:7px;color:#fff;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:34px;height:34px}.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{content:'\\f341'}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before{content:'\\f345'}.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before{opacity:.7}.cmb2-element .ui-datepicker select.ui-datepicker-month,.cmb2-element .ui-datepicker select.ui-datepicker-year,.cmb2-element.ui-datepicker select.ui-datepicker-month,.cmb2-element.ui-datepicker select.ui-datepicker-year{width:33%;background:0 0;border-color:transparent;box-shadow:none;color:#fff}.cmb2-element .ui-datepicker select.ui-datepicker-month option,.cmb2-element .ui-datepicker select.ui-datepicker-year option,.cmb2-element.ui-datepicker select.ui-datepicker-month option,.cmb2-element.ui-datepicker select.ui-datepicker-year option{color:#333}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{color:#fff;font-weight:600}.cmb2-element .ui-datepicker thead th,.cmb2-element.ui-datepicker thead th{font-weight:400}.cmb2-element .ui-datepicker th,.cmb2-element.ui-datepicker th{padding:10px}.cmb2-element .ui-datepicker td,.cmb2-element.ui-datepicker td{padding:0;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-other-month,.cmb2-element.ui-datepicker td.ui-datepicker-other-month{border:transparent}.cmb2-element .ui-datepicker td.ui-datepicker-week-end,.cmb2-element.ui-datepicker td.ui-datepicker-week-end{background-color:#f4f4f4;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today{-webkit-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);-moz-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1)}.cmb2-element .ui-datepicker td.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-today{background-color:#f0f0c0}.cmb2-element .ui-datepicker td.ui-datepicker-current-day,.cmb2-element.ui-datepicker td.ui-datepicker-current-day{background:#bd8}.cmb2-element .ui-datepicker td .ui-state-default,.cmb2-element.ui-datepicker td .ui-state-default{background:0 0;border:none;text-align:center;text-decoration:none;width:auto;display:block;padding:5px 10px;font-weight:400;color:#444}.cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default,.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default{opacity:.5}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{background:#32373c}.cmb2-element .ui-datepicker td .ui-state-active,.cmb2-element .ui-datepicker td .ui-state-hover,.cmb2-element.ui-datepicker td .ui-state-active,.cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.cmb2-element .ui-datepicker .ui-timepicker-div,.cmb2-element.ui-datepicker .ui-timepicker-div{font-size:14px}.cmb2-element .ui-datepicker .ui-timepicker-div dl,.cmb2-element.ui-datepicker .ui-timepicker-div dl{text-align:right;padding:0 .6em}.cmb2-element .ui-datepicker .ui-timepicker-div dl dt,.cmb2-element.ui-datepicker .ui-timepicker-div dl dt{float:right;clear:right;padding:0 5px 0 0}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd{margin:0 40% 10px 10px}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd select,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select{width:100%}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane{padding:.6em;text-align:right}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary{padding:0 10px 1px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin:0 .4em .4em .6em}.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.admin-color-fresh .cmb2-element .ui-datepicker thead,.admin-color-fresh .cmb2-element.ui-datepicker thead{background:#32373c}.admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header{background:#52accc}.admin-color-blue .cmb2-element .ui-datepicker thead,.admin-color-blue .cmb2-element.ui-datepicker thead{background:#4796b3}.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover{background:#096484;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header{background:#59524c}.admin-color-coffee .cmb2-element .ui-datepicker thead,.admin-color-coffee .cmb2-element.ui-datepicker thead{background:#46403c}.admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover{background:#c7a589;color:#fff}.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header{background:#523f6d}.admin-color-ectoplasm .cmb2-element .ui-datepicker thead,.admin-color-ectoplasm .cmb2-element.ui-datepicker thead{background:#413256}.admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover{background:#a3b745;color:#fff}.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header{background:#363b3f}.admin-color-midnight .cmb2-element .ui-datepicker thead,.admin-color-midnight .cmb2-element.ui-datepicker thead{background:#26292c}.admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover{background:#e14d43;color:#fff}.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header{background:#738e96}.admin-color-ocean .cmb2-element .ui-datepicker thead,.admin-color-ocean .cmb2-element.ui-datepicker thead{background:#627c83}.admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover{background:#9ebaa0;color:#fff}.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header{background:#cf4944}.admin-color-sunrise .cmb2-element .ui-datepicker th,.admin-color-sunrise .cmb2-element.ui-datepicker th{border-color:#be3631;background:#be3631}.admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover{background:#dd823b;color:#fff}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header{background:#e5e5e5}.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year{color:#555}.admin-color-light .cmb2-element .ui-datepicker thead,.admin-color-light .cmb2-element.ui-datepicker thead{background:#888}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default{color:#555}.admin-color-light .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover{background:#ccc}.admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header{background:#56b274}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead{background:#36533f}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover{background:#446950;color:#fff}.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header{background:#4ca26a}.admin-color-bbp-mint .cmb2-element .ui-datepicker thead,.admin-color-bbp-mint .cmb2-element.ui-datepicker thead{background:#4f6d59}.admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover{background:#5fb37c;color:#fff}.cmb2-char-counter-wrap{margin:.5em 0 1em}.cmb2-char-counter-wrap input[type=text]{font-size:12px;width:25px}.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=text]{border-color:#a00!important}.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg{display:inline-block}.cmb2-char-max-msg{color:#a00;display:none;font-weight:600;margin-right:1em}"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/cmb2\/cmb2\/css\/cmb2.min.css","ext":"css","size":32937,"mtime":1757324689,"type":"text","content":"@charset \"UTF-8\";.cmb2-wrap{margin:0}.cmb2-wrap input,.cmb2-wrap textarea{max-width:100%}.cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb2-wrap textarea{width:500px;padding:8px}.cmb2-wrap textarea.cmb2-textarea-code{font-family:\"Courier 10 Pitch\",Courier,monospace;line-height:16px}.cmb2-wrap input.cmb2-text-small,.cmb2-wrap input.cmb2-timepicker{width:100px}.cmb2-wrap input.cmb2-text-money{width:90px}.cmb2-wrap input.cmb2-text-medium{width:230px}.cmb2-wrap input.cmb2-upload-file{width:65%}.cmb2-wrap input.ed_button{padding:2px 4px}.cmb2-wrap input:not([type=hidden])+.button-secondary,.cmb2-wrap input:not([type=hidden])+input,.cmb2-wrap input:not([type=hidden])+select{margin-left:20px}.cmb2-wrap ul{margin:0}.cmb2-wrap li{font-size:14px;line-height:16px;margin:1px 0 5px 0}.cmb2-wrap select{font-size:14px;margin-top:3px}.cmb2-wrap input:focus,.cmb2-wrap textarea:focus{background:#fffff8}.cmb2-wrap input[type=radio]{margin:0 5px 0 0;padding:0}.cmb2-wrap input[type=checkbox]{margin:0 5px 0 0;padding:0}.cmb2-wrap .button-secondary,.cmb2-wrap button{white-space:nowrap}.cmb2-wrap .mceLayout{border:1px solid #e9e9e9!important}.cmb2-wrap .mceIframeContainer{background:#fff}.cmb2-wrap .meta_mce{width:97%}.cmb2-wrap .meta_mce textarea{width:100%}.cmb2-wrap .cmb-multicheck-toggle{margin-top:-1em}.cmb2-wrap .wp-picker-clear.button,.cmb2-wrap .wp-picker-default.button{margin-left:6px;padding:2px 8px}.cmb2-wrap .cmb-row{margin:0}.cmb2-wrap .cmb-row:after{content:'';clear:both;display:block;width:100%}.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description{padding-top:0;padding-bottom:1em}body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.1875rem}@media screen and (max-width:782px){body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.4375rem}}.cmb2-metabox{clear:both;margin:0}.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-th,.cmb2-metabox>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox>.cmb-row:first-of-type>.cmb-th{border:0}.cmb-add-row{margin:1.8em 0 0}.cmb-nested .cmb-td,.cmb-repeatable-group .cmb-th,.cmb-repeatable-group:first-of-type{border:0}.cmb-repeatable-group:last-of-type,.cmb-row:last-of-type,.cmb2-wrap .cmb-row:last-of-type{border-bottom:0}.cmb-repeatable-grouping{border:1px solid #e9e9e9;padding:0 1em}.cmb-repeatable-grouping.cmb-row{margin:0 0 .8em}.cmb-th{color:#222;float:left;font-weight:600;padding:20px 10px 20px 0;vertical-align:top;width:200px}@media (max-width:450px){.cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:left;width:100%}.cmb-th label{display:block;margin-top:0;margin-bottom:.5em}}.cmb-td{line-height:1.3;max-width:100%;padding:15px 10px;vertical-align:middle}.cmb-type-title .cmb-td{padding:0}.cmb-th label{display:block;padding:5px 0}.cmb-th+.cmb-td{float:left}.cmb-td .cmb-td{padding-bottom:1em}.cmb-remove-row{text-align:right}.empty-row.hidden{display:none}.cmb-repeat-table{background-color:#fafafa;border:1px solid #e1e1e1}.cmb-repeat-table .cmb-row.cmb-repeat-row{position:relative;counter-increment:el;margin:0;padding:10px 10px 10px 50px;border-bottom:none!important}.cmb-repeat-table .cmb-row.cmb-repeat-row+.cmb-repeat-row{border-top:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper{outline:dashed 2px #e9e9e9!important}.cmb-repeat-table .cmb-row.cmb-repeat-row:before{content:counter(el);display:block;top:0;left:0;position:absolute;width:35px;height:100%;line-height:35px;cursor:move;color:#757575;text-align:center;border-right:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td{margin:0;padding:0}.cmb-repeat-table+.cmb-add-row{margin:0}.cmb-repeat-table+.cmb-add-row:before{content:'';width:1px;height:1.6em;display:block;margin-left:17px;background-color:#dcdcdc}.cmb-repeat-table .cmb-remove-row{top:7px;right:7px;position:absolute;width:auto;margin-left:0;padding:0!important;display:none}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button{font-size:20px;text-indent:-1000px;overflow:hidden;position:relative;height:auto;line-height:1;padding:0 10px 0}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button:before{content:\"\uf335\";font-family:Dashicons;speak:none;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;margin:0;text-indent:0;position:absolute;top:0;left:0;width:100%;height:100%;text-align:center;line-height:1.3}.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row{display:block}.cmb-repeatable-group .cmb-th{padding:5px}.cmb-repeatable-group .cmb-group-title{background-color:#e9e9e9;padding:8px 12px 8px 2.2em;margin:0 -1em;min-height:1.5em;font-size:14px;line-height:1.4}.cmb-repeatable-group .cmb-group-title h4{border:0;margin:0;font-size:1.2em;font-weight:500;padding:.5em .75em}.cmb-repeatable-group .cmb-group-title .cmb-th{display:block;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:left;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}.cmb-repeatable-group .cmb-shift-rows{margin-right:1em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2{margin-top:.15em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2{margin-top:.2em}.cmb-repeatable-group .cmb2-upload-button{float:right}p.cmb2-metabox-description{color:#666;letter-spacing:.01em;margin:0;padding-top:.5em}span.cmb2-metabox-description{color:#666;letter-spacing:.01em}.cmb2-metabox-title{margin:0 0 5px 0;padding:5px 0 0 0;font-size:14px}.cmb-inline ul{padding:4px 0 0 0}.cmb-inline li{display:inline-block;padding-right:18px}.cmb-type-textarea-code pre{margin:0}.cmb2-media-status .img-status{clear:none;display:inline-block;vertical-align:middle;margin-right:10px;width:auto}.cmb2-media-status .img-status img{max-width:350px;height:auto}.cmb2-media-status .embed-status,.cmb2-media-status .img-status img{background:#eee;border:5px solid #fff;outline:1px solid #e9e9e9;box-shadow:inset 0 0 15px rgba(0,0,0,.3),inset 0 0 0 1px rgba(0,0,0,.05);background-image:linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0),linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0);background-position:0 0,10px 10px;background-size:20px 20px;border-radius:2px;-moz-border-radius:2px;margin:15px 0 0 0}.cmb2-media-status .embed-status{float:left;max-width:800px}.cmb2-media-status .embed-status,.cmb2-media-status .img-status{position:relative}.cmb2-media-status .embed-status .cmb2-remove-file-button,.cmb2-media-status .img-status .cmb2-remove-file-button{background:url(..\/images\/ico-delete.png);height:16px;left:-5px;position:absolute;text-indent:-9999px;top:-5px;width:16px}.cmb2-media-status .img-status .cmb2-remove-file-button{top:10px}.cmb2-media-status .file-status>span,.cmb2-media-status .img-status img{cursor:pointer}.cmb2-media-status.cmb-attach-list .file-status>span,.cmb2-media-status.cmb-attach-list .img-status img{cursor:move}.cmb-type-file-list .cmb2-media-status .img-status{clear:none;vertical-align:middle;width:auto;margin-right:10px;margin-bottom:10px;margin-top:0}.cmb-attach-list li{clear:both;display:inline-block;width:100%;margin-top:5px;margin-bottom:10px}.cmb-attach-list li img{float:left;margin-right:10px}.cmb2-remove-wrapper{margin:0}.child-cmb2 .cmb-th{text-align:left}.cmb2-indented-hierarchy{padding-left:1.5em}@media (max-width:450px){.cmb-td,.cmb-th,.cmb-th+.cmb-td{display:block;float:none;width:100%}}#poststuff .cmb-group-title{margin-left:-1em;margin-right:-1em;min-height:1.5em}#poststuff .repeatable .cmb-group-title{padding-left:2.2em}.cmb-type-group .cmb2-wrap,.cmb2-postbox .cmb2-wrap{margin:0}.cmb-type-group .cmb2-wrap>.cmb-field-list>.cmb-row,.cmb2-postbox .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.8em 0}.cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed,.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb-type-group .cmb-row,.cmb2-postbox .cmb-row{padding:0 0 1.8em;margin:0 0 .8em}.cmb-type-group .cmb-row .cmbhandle,.cmb2-postbox .cmb-row .cmbhandle{right:-1em;position:relative;color:#222}.cmb-type-group .cmb-repeatable-grouping,.cmb2-postbox .cmb-repeatable-grouping{padding:0 1em;max-width:100%;min-width:1px!important}.cmb-type-group .cmb-repeatable-group>.cmb-row,.cmb2-postbox .cmb-repeatable-group>.cmb-row{padding-bottom:0}.cmb-type-group .cmb-th,.cmb2-postbox .cmb-th{width:18%;padding:0 2% 0 0}.cmb-type-group .cmb-td,.cmb2-postbox .cmb-td{margin-bottom:0;padding:0;line-height:1.3}.cmb-type-group .cmb-th+.cmb-td,.cmb2-postbox .cmb-th+.cmb-td{width:80%;float:right}.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:1px solid #e9e9e9}@media (max-width:450px){.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:0}}.cmb-type-group .cmb-remove-field-row,.cmb-type-group .cmb-repeat-group-field,.cmb2-postbox .cmb-remove-field-row,.cmb2-postbox .cmb-repeat-group-field{padding-top:1.8em}.cmb-type-group .button-secondary .dashicons,.cmb2-postbox .button-secondary .dashicons{line-height:1.3}.cmb-type-group .button-secondary.move-down .dashicons,.cmb-type-group .button-secondary.move-up .dashicons,.cmb2-postbox .button-secondary.move-down .dashicons,.cmb2-postbox .button-secondary.move-up .dashicons{line-height:1.1}.cmb-type-group .button-secondary.cmb-add-group-row .dashicons,.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons{line-height:1.5}.js .cmb2-postbox.context-box .handlediv{text-align:center}.js .cmb2-postbox.context-box .toggle-indicator:before{content:\"\\f142\";display:inline-block;font:normal 20px\/1 dashicons;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.js .cmb2-postbox.context-box.closed .toggle-indicator:before{content:\"\\f140\"}.cmb2-postbox.context-box{margin-bottom:10px}.cmb2-postbox.context-box.context-before_permalink-box{margin-top:10px}.cmb2-postbox.context-box.context-after_title-box{margin-top:10px}.cmb2-postbox.context-box.context-after_editor-box{margin-top:20px;margin-bottom:0}.cmb2-postbox.context-box.context-form_top-box{margin-top:10px}.cmb2-postbox.context-box.context-form_top-box .hndle{font-size:14px;padding:8px 12px;margin:0;line-height:1.4}.cmb2-postbox.context-box .hndle{cursor:auto}.cmb2-context-wrap{margin-top:10px}.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-right:300px;width:auto}.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox{padding:10px}.cmb2-context-wrap .cmb-th{padding:0 2% 0 0;width:18%}.cmb2-context-wrap .cmb-td{width:80%;padding:0}.cmb2-context-wrap .cmb-row{margin-bottom:10px}.cmb2-context-wrap .cmb-row:last-of-type{margin-bottom:0}@media only screen and (max-width:850px){.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-right:0}}.cmb2-options-page{max-width:1200px}.cmb2-options-page.wrap>h2{margin-bottom:1em}.cmb2-options-page .cmb2-metabox>.cmb-row{padding:1em;margin-top:-1px;background:#fff;border:1px solid #e9e9e9;box-shadow:0 1px 1px rgba(0,0,0,.05)}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th{padding:0;font-weight:initial}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{float:none;padding:0 0 0 1em;margin-left:200px}@media (max-width:450px){.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{padding:0;margin-left:0}}.cmb2-options-page .cmb2-wrap .cmb-type-title{margin-top:1em;padding:.6em 1em;background-color:#fafafa}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title{font-size:12px;margin-top:0;margin-bottom:0;text-transform:uppercase}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description{padding-top:.25em}.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th{padding:0 0 .8em 0}.cmb2-options-page .cmb-repeatable-group .cmb-group-name{font-size:16px;margin-top:0;margin-bottom:0}.cmb2-options-page .cmb-repeatable-group .cmb-th>.cmb2-metabox-description{font-weight:400;padding-bottom:0!important}#addtag .cmb-th{float:none;width:auto;padding:20px 0 0}#addtag .cmb-td{padding:0}#addtag .cmb-th+.cmb-td{float:none}#addtag select{max-width:100%}#addtag .cmb2-metabox{padding-bottom:20px}#addtag .cmb-row li label{display:inline}#poststuff .cmb-repeatable-group h2{margin:0}.edit-tags-php .cmb2-metabox-title,.profile-php .cmb2-metabox-title,.user-edit-php .cmb2-metabox-title{font-size:1.4em}.cmb2-no-box-wrap .cmb-spinner,.cmb2-postbox .cmb-spinner{float:left;display:none}.cmb-spinner{display:none}.cmb-spinner.is-active{display:block}#side-sortables .cmb2-wrap>.cmb-field-list>.cmb-row,.inner-sidebar .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.4em 0}#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker),.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker){width:100%}#side-sortables .cmb2-wrap input+input:not(.wp-picker-clear),#side-sortables .cmb2-wrap input+select,.inner-sidebar .cmb2-wrap input+input:not(.wp-picker-clear),.inner-sidebar .cmb2-wrap input+select{margin-left:0;margin-top:1em;display:block}#side-sortables .cmb2-wrap input.cmb2-text-money,.inner-sidebar .cmb2-wrap input.cmb2-text-money{max-width:70%}#side-sortables .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description,.inner-sidebar .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description{display:block}#side-sortables .cmb2-wrap label,.inner-sidebar .cmb2-wrap label{display:block;font-weight:700;padding:0 0 5px}#side-sortables textarea,.inner-sidebar textarea{max-width:99%}#side-sortables .cmb-repeatable-group,.inner-sidebar .cmb-repeatable-group{border-bottom:1px solid #e9e9e9}#side-sortables .cmb-type-group>.cmb-td>.cmb-repeatable-group,.inner-sidebar .cmb-type-group>.cmb-td>.cmb-repeatable-group{border-bottom:0;margin-bottom:-1.4em}#side-sortables .cmb-td:not(.cmb-remove-row),#side-sortables .cmb-th,#side-sortables .cmb-th+.cmb-td,.inner-sidebar .cmb-td:not(.cmb-remove-row),.inner-sidebar .cmb-th,.inner-sidebar .cmb-th+.cmb-td{width:100%;display:block;float:none}#side-sortables .closed .inside,.inner-sidebar .closed .inside{display:none}#side-sortables .cmb-th,.inner-sidebar .cmb-th{display:block;float:none;padding-bottom:1em;text-align:left;width:100%;padding-left:0;padding-right:0}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{font-size:14px;line-height:1.4em}#side-sortables .cmb-group-description .cmb-th,.inner-sidebar .cmb-group-description .cmb-th{padding-top:0}#side-sortables .cmb-group-description .cmb2-metabox-description,.inner-sidebar .cmb-group-description .cmb2-metabox-description{padding:0}#side-sortables .cmb-group-title .cmb-th,.inner-sidebar .cmb-group-title .cmb-th{padding:0}#side-sortables .cmb-repeatable-grouping+.cmb-repeatable-grouping,.inner-sidebar .cmb-repeatable-grouping+.cmb-repeatable-grouping{margin-top:1em}#side-sortables .cmb2-media-status .embed-status img,#side-sortables .cmb2-media-status .img-status img,.inner-sidebar .cmb2-media-status .embed-status img,.inner-sidebar .cmb2-media-status .img-status img{max-width:90%;height:auto}#side-sortables .cmb2-list label,.inner-sidebar .cmb2-list label{display:inline;font-weight:400}#side-sortables .cmb2-metabox-description,.inner-sidebar .cmb2-metabox-description{display:block;padding:7px 0 0}#side-sortables .cmb-type-checkbox .cmb-td label,#side-sortables .cmb-type-checkbox .cmb2-metabox-description,.inner-sidebar .cmb-type-checkbox .cmb-td label,.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description{font-weight:400;display:inline}#side-sortables .cmb-row .cmb2-metabox-description,.inner-sidebar .cmb-row .cmb2-metabox-description{padding-bottom:1.8em}#side-sortables .cmb2-metabox-title,.inner-sidebar .cmb2-metabox-title{font-size:1.2em;font-style:italic}#side-sortables .cmb-remove-row,.inner-sidebar .cmb-remove-row{clear:both;padding-top:12px;padding-bottom:0}#side-sortables .cmb2-upload-button,.inner-sidebar .cmb2-upload-button{clear:both;margin-top:12px}.cmb2-metabox .cmbhandle{color:#757575;float:right;width:27px;height:30px;cursor:pointer;right:-1em;position:relative}.cmb2-metabox .cmbhandle:before{content:'\\f142';right:12px;font:normal 20px\/1 dashicons;speak:none;display:inline-block;padding:8px 10px;top:0;position:relative;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.cmb2-metabox .postbox.closed .cmbhandle:before{content:'\\f140'}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row{-webkit-appearance:none!important;background:0 0!important;border:none!important;position:absolute;left:0;top:.5em;line-height:1em;padding:2px 6px 3px;opacity:.5}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]){cursor:pointer;color:#a00;opacity:1}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover{color:red}* html .cmb2-element.ui-helper-clearfix{height:1%}.cmb2-element .ui-datepicker,.cmb2-element.ui-datepicker{padding:0;margin:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;background-color:#fff;border:1px solid #dfdfdf;border-top:none;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.075);box-shadow:0 3px 6px rgba(0,0,0,.075);min-width:17em;width:auto}.cmb2-element .ui-datepicker *,.cmb2-element.ui-datepicker *{padding:0;font-family:\"Open Sans\",sans-serif;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.cmb2-element .ui-datepicker table,.cmb2-element.ui-datepicker table{font-size:13px;margin:0;border:none;border-collapse:collapse}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background-image:none;border:none;color:#fff;font-weight:400}.cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover{background:0 0;border-color:transparent;cursor:pointer}.cmb2-element .ui-datepicker .ui-datepicker-title,.cmb2-element.ui-datepicker .ui-datepicker-title{margin:0;padding:10px 0;color:#fff;font-size:14px;line-height:14px;text-align:center}.cmb2-element .ui-datepicker .ui-datepicker-title select,.cmb2-element.ui-datepicker .ui-datepicker-title select{margin-top:-8px;margin-bottom:-8px}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-prev{position:relative;top:0;height:34px;width:34px}.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev{border:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover,.cmb2-element.ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover{left:0}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-next-hover,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next-hover{right:0}.cmb2-element .ui-datepicker .ui-datepicker-next span,.cmb2-element .ui-datepicker .ui-datepicker-prev span,.cmb2-element.ui-datepicker .ui-datepicker-next span,.cmb2-element.ui-datepicker .ui-datepicker-prev span{display:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev{float:left}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next{float:right}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{font:normal 20px\/34px dashicons;padding-left:7px;color:#fff;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:34px;height:34px}.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{content:'\\f341'}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before{content:'\\f345'}.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before{opacity:.7}.cmb2-element .ui-datepicker select.ui-datepicker-month,.cmb2-element .ui-datepicker select.ui-datepicker-year,.cmb2-element.ui-datepicker select.ui-datepicker-month,.cmb2-element.ui-datepicker select.ui-datepicker-year{width:33%;background:0 0;border-color:transparent;box-shadow:none;color:#fff}.cmb2-element .ui-datepicker select.ui-datepicker-month option,.cmb2-element .ui-datepicker select.ui-datepicker-year option,.cmb2-element.ui-datepicker select.ui-datepicker-month option,.cmb2-element.ui-datepicker select.ui-datepicker-year option{color:#333}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{color:#fff;font-weight:600}.cmb2-element .ui-datepicker thead th,.cmb2-element.ui-datepicker thead th{font-weight:400}.cmb2-element .ui-datepicker th,.cmb2-element.ui-datepicker th{padding:10px}.cmb2-element .ui-datepicker td,.cmb2-element.ui-datepicker td{padding:0;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-other-month,.cmb2-element.ui-datepicker td.ui-datepicker-other-month{border:transparent}.cmb2-element .ui-datepicker td.ui-datepicker-week-end,.cmb2-element.ui-datepicker td.ui-datepicker-week-end{background-color:#f4f4f4;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today{-webkit-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);-moz-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1)}.cmb2-element .ui-datepicker td.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-today{background-color:#f0f0c0}.cmb2-element .ui-datepicker td.ui-datepicker-current-day,.cmb2-element.ui-datepicker td.ui-datepicker-current-day{background:#bd8}.cmb2-element .ui-datepicker td .ui-state-default,.cmb2-element.ui-datepicker td .ui-state-default{background:0 0;border:none;text-align:center;text-decoration:none;width:auto;display:block;padding:5px 10px;font-weight:400;color:#444}.cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default,.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default{opacity:.5}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{background:#32373c}.cmb2-element .ui-datepicker td .ui-state-active,.cmb2-element .ui-datepicker td .ui-state-hover,.cmb2-element.ui-datepicker td .ui-state-active,.cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.cmb2-element .ui-datepicker .ui-timepicker-div,.cmb2-element.ui-datepicker .ui-timepicker-div{font-size:14px}.cmb2-element .ui-datepicker .ui-timepicker-div dl,.cmb2-element.ui-datepicker .ui-timepicker-div dl{text-align:left;padding:0 .6em}.cmb2-element .ui-datepicker .ui-timepicker-div dl dt,.cmb2-element.ui-datepicker .ui-timepicker-div dl dt{float:left;clear:left;padding:0 0 0 5px}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd{margin:0 10px 10px 40%}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd select,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select{width:100%}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane{padding:.6em;text-align:left}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary{padding:0 10px 1px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin:0 .6em .4em .4em}.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.admin-color-fresh .cmb2-element .ui-datepicker thead,.admin-color-fresh .cmb2-element.ui-datepicker thead{background:#32373c}.admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header{background:#52accc}.admin-color-blue .cmb2-element .ui-datepicker thead,.admin-color-blue .cmb2-element.ui-datepicker thead{background:#4796b3}.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover{background:#096484;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header{background:#59524c}.admin-color-coffee .cmb2-element .ui-datepicker thead,.admin-color-coffee .cmb2-element.ui-datepicker thead{background:#46403c}.admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover{background:#c7a589;color:#fff}.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header{background:#523f6d}.admin-color-ectoplasm .cmb2-element .ui-datepicker thead,.admin-color-ectoplasm .cmb2-element.ui-datepicker thead{background:#413256}.admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover{background:#a3b745;color:#fff}.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header{background:#363b3f}.admin-color-midnight .cmb2-element .ui-datepicker thead,.admin-color-midnight .cmb2-element.ui-datepicker thead{background:#26292c}.admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover{background:#e14d43;color:#fff}.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header{background:#738e96}.admin-color-ocean .cmb2-element .ui-datepicker thead,.admin-color-ocean .cmb2-element.ui-datepicker thead{background:#627c83}.admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover{background:#9ebaa0;color:#fff}.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header{background:#cf4944}.admin-color-sunrise .cmb2-element .ui-datepicker th,.admin-color-sunrise .cmb2-element.ui-datepicker th{border-color:#be3631;background:#be3631}.admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover{background:#dd823b;color:#fff}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header{background:#e5e5e5}.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year{color:#555}.admin-color-light .cmb2-element .ui-datepicker thead,.admin-color-light .cmb2-element.ui-datepicker thead{background:#888}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default{color:#555}.admin-color-light .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover{background:#ccc}.admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header{background:#56b274}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead{background:#36533f}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover{background:#446950;color:#fff}.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header{background:#4ca26a}.admin-color-bbp-mint .cmb2-element .ui-datepicker thead,.admin-color-bbp-mint .cmb2-element.ui-datepicker thead{background:#4f6d59}.admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover{background:#5fb37c;color:#fff}.cmb2-char-counter-wrap{margin:.5em 0 1em}.cmb2-char-counter-wrap input[type=text]{font-size:12px;width:25px}.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=text]{border-color:#a00!important}.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg{display:inline-block}.cmb2-char-max-msg{color:#a00;display:none;font-weight:600;margin-left:1em}"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/autoload.php","ext":"php","size":771,"mtime":1757324689,"type":"text","content":"<?php\n\n\/\/ autoload.php @generated by Composer\n\nif (PHP_VERSION_ID < 50600) {\n    if (!headers_sent()) {\n        header('HTTP\/1.1 500 Internal Server Error');\n    }\n    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via \"composer self-update --2.2\". Aborting.'.PHP_EOL;\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, $err);\n        } elseif (!headers_sent()) {\n            echo $err;\n        }\n    }\n    trigger_error(\n        $err,\n        E_USER_ERROR\n    );\n}\n\nrequire_once __DIR__ . '\/composer\/autoload_real.php';\n\nreturn ComposerAutoloaderInite0da7526f14e2b3495b4ae1c6b762524::getLoader();\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/WP_Async_Request.php","ext":"php","size":3718,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * WP Async Request\n *\n * @package WP-Background-Processing\n *\/\n\n\/*\nLibrary URI: https:\/\/github.com\/deliciousbrains\/wp-background-processing\/blob\/fbbc56f2480910d7959972ec9ec0819a13c6150a\/classes\/wp-async-request.php\nAuthor: Delicious Brains Inc.\nAuthor URI: https:\/\/deliciousbrains.com\/\nLicense: GNU General Public License v2.0\nLicense URI: https:\/\/github.com\/deliciousbrains\/wp-background-processing\/commit\/126d7945dd3d39f39cb6488ca08fe1fb66cb351a\n*\/\n\nif ( ! class_exists( 'WP_Async_Request' ) ) {\n\n\t\/**\n\t * Abstract WP_Async_Request class.\n\t *\n\t * @abstract\n\t *\/\n\tabstract class WP_Async_Request {\n\n\t\t\/**\n\t\t * Prefix\n\t\t *\n\t\t * (default value: 'wp')\n\t\t *\n\t\t * @var string\n\t\t *\/\n\t\tprotected $prefix = 'wp';\n\n\t\t\/**\n\t\t * Action\n\t\t *\n\t\t * (default value: 'async_request')\n\t\t *\n\t\t * @var string\n\t\t *\/\n\t\tprotected $action = 'async_request';\n\n\t\t\/**\n\t\t * Identifier\n\t\t *\n\t\t * @var mixed\n\t\t *\/\n\t\tprotected $identifier;\n\n\t\t\/**\n\t\t * Data\n\t\t *\n\t\t * (default value: array())\n\t\t *\n\t\t * @var array\n\t\t *\/\n\t\tprotected $data = array();\n\n\t\t\/**\n\t\t * Initiate new async request\n\t\t *\/\n\t\tpublic function __construct() {\n\t\t\t$this->identifier = $this->prefix . '_' . $this->action;\n\n\t\t\tadd_action( 'wp_ajax_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t\tadd_action( 'wp_ajax_nopriv_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t}\n\n\t\t\/**\n\t\t * Set data used during the request\n\t\t *\n\t\t * @param array $data Data.\n\t\t *\n\t\t * @return $this\n\t\t *\/\n\t\tpublic function data( $data ) {\n\t\t\t$this->data = $data;\n\n\t\t\treturn $this;\n\t\t}\n\n\t\t\/**\n\t\t * Dispatch the async request\n\t\t *\n\t\t * @return array|WP_Error\n\t\t *\/\n\t\tpublic function dispatch() {\n\t\t\t$url  = add_query_arg( $this->get_query_args(), $this->get_query_url() );\n\t\t\t$args = $this->get_post_args();\n\n\t\t\treturn wp_remote_post( esc_url_raw( $url ), $args );\n\t\t}\n\n\t\t\/**\n\t\t * Get query args\n\t\t *\n\t\t * @return array\n\t\t *\/\n\t\tprotected function get_query_args() {\n\t\t\tif ( property_exists( $this, 'query_args' ) ) {\n\t\t\t\treturn $this->query_args;\n\t\t\t}\n\n\t\t\t$args = array(\n\t\t\t\t'action' => $this->identifier,\n\t\t\t\t'nonce'  => wp_create_nonce( $this->identifier ),\n\t\t\t);\n\n\t\t\t\/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param array $url\n\t\t\t *\/\n\t\t\treturn apply_filters( $this->identifier . '_query_args', $args );\n\t\t}\n\n\t\t\/**\n\t\t * Get query URL\n\t\t *\n\t\t * @return string\n\t\t *\/\n\t\tprotected function get_query_url() {\n\t\t\tif ( property_exists( $this, 'query_url' ) ) {\n\t\t\t\treturn $this->query_url;\n\t\t\t}\n\n\t\t\t$url = admin_url( 'admin-ajax.php' );\n\n\t\t\t\/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param string $url\n\t\t\t *\/\n\t\t\treturn apply_filters( $this->identifier . '_query_url', $url );\n\t\t}\n\n\t\t\/**\n\t\t * Get post args\n\t\t *\n\t\t * @return array\n\t\t *\/\n\t\tprotected function get_post_args() {\n\t\t\tif ( property_exists( $this, 'post_args' ) ) {\n\t\t\t\treturn $this->post_args;\n\t\t\t}\n\n\t\t\t$args = array(\n\t\t\t\t'timeout'   => 0.01,\n\t\t\t\t'blocking'  => false,\n\t\t\t\t'body'      => $this->data,\n\t\t\t\t'cookies'   => $_COOKIE,\n\t\t\t\t'sslverify' => apply_filters( 'https_local_ssl_verify', false ),\n\t\t\t);\n\n\t\t\t\/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param array $args\n\t\t\t *\/\n\t\t\treturn apply_filters( $this->identifier . '_post_args', $args );\n\t\t}\n\n\t\t\/**\n\t\t * Maybe handle\n\t\t *\n\t\t * Check for correct nonce and pass to handler.\n\t\t *\/\n\t\tpublic function maybe_handle() {\n\t\t\t\/\/ Don't lock up other requests while processing.\n\t\t\tsession_write_close();\n\n\t\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t\t$this->handle();\n\n\t\t\twp_die();\n\t\t}\n\n\t\t\/**\n\t\t * Handle\n\t\t *\n\t\t * Override this method to perform any actions required\n\t\t * during the async request.\n\t\t *\/\n\t\tabstract protected function handle();\n\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_MinutesField.php","ext":"php","size":761,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Minutes field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_MinutesField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('i'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 minute');\n        } else {\n            $date->modify('+1 minute');\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_FieldInterface.php","ext":"php","size":1138,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * CRON field interface\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\ninterface CronExpression_FieldInterface\n{\n    \/**\n     * Check if the respective value of a DateTime field satisfies a CRON exp\n     *\n     * @param DateTime $date  DateTime object to check\n     * @param string   $value CRON expression to test against\n     *\n     * @return bool Returns TRUE if satisfied, FALSE otherwise\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value);\n\n    \/**\n     * When a CRON expression is not satisfied, this method is used to increment\n     * or decrement a DateTime object by the unit of the cron field\n     *\n     * @param DateTime $date   DateTime object to change\n     * @param bool     $invert (optional) Set to TRUE to decrement\n     *\n     * @return CronExpression_FieldInterface\n     *\/\n    public function increment(DateTime $date, $invert = false);\n\n    \/**\n     * Validates a CRON expression for a given field\n     *\n     * @param string $value CRON expression value to validate\n     *\n     * @return bool Returns TRUE if valid, FALSE otherwise\n     *\/\n    public function validate($value);\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression.php","ext":"php","size":11615,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * CRON expression parser that can determine whether or not a CRON expression is\n * due to run, the next run date and previous run date of a CRON expression.\n * The determinations made by this class are accurate if checked run once per\n * minute (seconds are dropped from date time comparisons).\n *\n * Schedule parts must map to:\n * minute [0-59], hour [0-23], day of month, month [1-12|JAN-DEC], day of week\n * [1-7|MON-SUN], and an optional year.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n * @link http:\/\/en.wikipedia.org\/wiki\/Cron\n *\/\nclass CronExpression\n{\n    const MINUTE = 0;\n    const HOUR = 1;\n    const DAY = 2;\n    const MONTH = 3;\n    const WEEKDAY = 4;\n    const YEAR = 5;\n\n    \/**\n     * @var array CRON expression parts\n     *\/\n    private $cronParts;\n\n    \/**\n     * @var CronExpression_FieldFactory CRON field factory\n     *\/\n    private $fieldFactory;\n\n    \/**\n     * @var array Order in which to test of cron parts\n     *\/\n    private static $order = array(self::YEAR, self::MONTH, self::DAY, self::WEEKDAY, self::HOUR, self::MINUTE);\n\n    \/**\n     * Factory method to create a new CronExpression.\n     *\n     * @param string $expression The CRON expression to create.  There are\n     *      several special predefined values which can be used to substitute the\n     *      CRON expression:\n     *\n     *      @yearly, @annually) - Run once a year, midnight, Jan. 1 - 0 0 1 1 *\n     *      @monthly - Run once a month, midnight, first of month - 0 0 1 * *\n     *      @weekly - Run once a week, midnight on Sun - 0 0 * * 0\n     *      @daily - Run once a day, midnight - 0 0 * * *\n     *      @hourly - Run once an hour, first minute - 0 * * * *\n     *\n*@param CronExpression_FieldFactory $fieldFactory (optional) Field factory to use\n     *\n     * @return CronExpression\n     *\/\n    public static function factory($expression, ?CronExpression_FieldFactory $fieldFactory = null)\n    {\n        $mappings = array(\n            '@yearly' => '0 0 1 1 *',\n            '@annually' => '0 0 1 1 *',\n            '@monthly' => '0 0 1 * *',\n            '@weekly' => '0 0 * * 0',\n            '@daily' => '0 0 * * *',\n            '@hourly' => '0 * * * *'\n        );\n\n        if (isset($mappings[$expression])) {\n            $expression = $mappings[$expression];\n        }\n\n        return new self($expression, $fieldFactory ? $fieldFactory : new CronExpression_FieldFactory());\n    }\n\n    \/**\n     * Parse a CRON expression\n     *\n     * @param string       $expression   CRON expression (e.g. '8 * * * *')\n     * @param CronExpression_FieldFactory $fieldFactory Factory to create cron fields\n     *\/\n    public function __construct($expression, CronExpression_FieldFactory $fieldFactory)\n    {\n        $this->fieldFactory = $fieldFactory;\n        $this->setExpression($expression);\n    }\n\n    \/**\n     * Set or change the CRON expression\n     *\n     * @param string $value CRON expression (e.g. 8 * * * *)\n     *\n     * @return CronExpression\n     * @throws InvalidArgumentException if not a valid CRON expression\n     *\/\n    public function setExpression($value)\n    {\n        $this->cronParts = preg_split('\/\\s\/', $value, -1, PREG_SPLIT_NO_EMPTY);\n        if (count($this->cronParts) < 5) {\n            throw new InvalidArgumentException(\n                $value . ' is not a valid CRON expression'\n            );\n        }\n\n        foreach ($this->cronParts as $position => $part) {\n            $this->setPart($position, $part);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * Set part of the CRON expression\n     *\n     * @param int    $position The position of the CRON expression to set\n     * @param string $value    The value to set\n     *\n     * @return CronExpression\n     * @throws InvalidArgumentException if the value is not valid for the part\n     *\/\n    public function setPart($position, $value)\n    {\n        if (!$this->fieldFactory->getField($position)->validate($value)) {\n            throw new InvalidArgumentException(\n                'Invalid CRON field value ' . $value . ' as position ' . $position\n            );\n        }\n\n        $this->cronParts[$position] = $value;\n\n        return $this;\n    }\n\n    \/**\n     * Get a next run date relative to the current date or a specific date\n     *\n     * @param string|DateTime $currentTime (optional) Relative calculation date\n     * @param int             $nth         (optional) Number of matches to skip before returning a\n     *     matching next run date.  0, the default, will return the current\n     *     date and time if the next run date falls on the current date and\n     *     time.  Setting this value to 1 will skip the first match and go to\n     *     the second match.  Setting this value to 2 will skip the first 2\n     *     matches and so on.\n     * @param bool $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     *\/\n    public function getNextRunDate($currentTime = 'now', $nth = 0, $allowCurrentDate = false)\n    {\n        return $this->getRunDate($currentTime, $nth, false, $allowCurrentDate);\n    }\n\n    \/**\n     * Get a previous run date relative to the current date or a specific date\n     *\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param int             $nth              (optional) Number of matches to skip before returning\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     * @see CronExpression::getNextRunDate\n     *\/\n    public function getPreviousRunDate($currentTime = 'now', $nth = 0, $allowCurrentDate = false)\n    {\n        return $this->getRunDate($currentTime, $nth, true, $allowCurrentDate);\n    }\n\n    \/**\n     * Get multiple run dates starting at the current date or a specific date\n     *\n     * @param int             $total            Set the total number of dates to calculate\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param bool            $invert           (optional) Set to TRUE to retrieve previous dates\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return array Returns an array of run dates\n     *\/\n    public function getMultipleRunDates($total, $currentTime = 'now', $invert = false, $allowCurrentDate = false)\n    {\n        $matches = array();\n        for ($i = 0; $i < max(0, $total); $i++) {\n            $matches[] = $this->getRunDate($currentTime, $i, $invert, $allowCurrentDate);\n        }\n\n        return $matches;\n    }\n\n    \/**\n     * Get all or part of the CRON expression\n     *\n     * @param string $part (optional) Specify the part to retrieve or NULL to\n     *      get the full cron schedule string.\n     *\n     * @return string|null Returns the CRON expression, a part of the\n     *      CRON expression, or NULL if the part was specified but not found\n     *\/\n    public function getExpression($part = null)\n    {\n        if (null === $part) {\n            return implode(' ', $this->cronParts);\n        } elseif (array_key_exists($part, $this->cronParts)) {\n            return $this->cronParts[$part];\n        }\n\n        return null;\n    }\n\n    \/**\n     * Helper method to output the full expression.\n     *\n     * @return string Full CRON expression\n     *\/\n    public function __toString()\n    {\n        return $this->getExpression();\n    }\n\n    \/**\n     * Determine if the cron is due to run based on the current date or a\n     * specific date.  This method assumes that the current number of\n     * seconds are irrelevant, and should be called once per minute.\n     *\n     * @param string|DateTime $currentTime (optional) Relative calculation date\n     *\n     * @return bool Returns TRUE if the cron is due to run or FALSE if not\n     *\/\n    public function isDue($currentTime = 'now')\n    {\n        if ('now' === $currentTime) {\n            $currentDate = date('Y-m-d H:i');\n            $currentTime = strtotime($currentDate);\n        } elseif ($currentTime instanceof DateTime) {\n            $currentDate = $currentTime->format('Y-m-d H:i');\n            $currentTime = strtotime($currentDate);\n        } else {\n            $currentTime = new DateTime($currentTime);\n            $currentTime->setTime($currentTime->format('H'), $currentTime->format('i'), 0);\n            $currentDate = $currentTime->format('Y-m-d H:i');\n            $currentTime = (int)($currentTime->getTimestamp());\n        }\n\n        return $this->getNextRunDate($currentDate, 0, true)->getTimestamp() == $currentTime;\n    }\n\n    \/**\n     * Get the next or previous run date of the expression relative to a date\n     *\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param int             $nth              (optional) Number of matches to skip before returning\n     * @param bool            $invert           (optional) Set to TRUE to go backwards in time\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     *\/\n    protected function getRunDate($currentTime = null, $nth = 0, $invert = false, $allowCurrentDate = false)\n    {\n        if ($currentTime instanceof DateTime) {\n            $currentDate = $currentTime;\n        } else {\n            $currentDate = new DateTime($currentTime ? $currentTime : 'now');\n            $currentDate->setTimezone(new DateTimeZone(date_default_timezone_get()));\n        }\n\n        $currentDate->setTime($currentDate->format('H'), $currentDate->format('i'), 0);\n        $nextRun = clone $currentDate;\n        $nth = (int) $nth;\n\n        \/\/ Set a hard limit to bail on an impossible date\n        for ($i = 0; $i < 1000; $i++) {\n\n            foreach (self::$order as $position) {\n                $part = $this->getExpression($position);\n                if (null === $part) {\n                    continue;\n                }\n\n                $satisfied = false;\n                \/\/ Get the field object used to validate this part\n                $field = $this->fieldFactory->getField($position);\n                \/\/ Check if this is singular or a list\n                if (strpos($part, ',') === false) {\n                    $satisfied = $field->isSatisfiedBy($nextRun, $part);\n                } else {\n                    foreach (array_map('trim', explode(',', $part)) as $listPart) {\n                        if ($field->isSatisfiedBy($nextRun, $listPart)) {\n                            $satisfied = true;\n                            break;\n                        }\n                    }\n                }\n\n                \/\/ If the field is not satisfied, then start over\n                if (!$satisfied) {\n                    $field->increment($nextRun, $invert);\n                    continue 2;\n                }\n            }\n\n            \/\/ Skip this match if needed\n            if ((!$allowCurrentDate && $nextRun == $currentDate) || --$nth > -1) {\n                $this->fieldFactory->getField(0)->increment($nextRun, $invert);\n                continue;\n            }\n\n            return $nextRun;\n        }\n\n        \/\/ @codeCoverageIgnoreStart\n        throw new RuntimeException('Impossible CRON expression');\n        \/\/ @codeCoverageIgnoreEnd\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_HoursField.php","ext":"php","size":1157,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Hours field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_HoursField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('H'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        \/\/ Change timezone to UTC temporarily. This will\n        \/\/ allow us to go back or forwards and hour even\n        \/\/ if DST will be changed between the hours.\n        $timezone = $date->getTimezone();\n        $date->setTimezone(new DateTimeZone('UTC'));\n        if ($invert) {\n            $date->modify('-1 hour');\n            $date->setTime($date->format('H'), 59);\n        } else {\n            $date->modify('+1 hour');\n            $date->setTime($date->format('H'), 0);\n        }\n        $date->setTimezone($timezone);\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_DayOfMonthField.php","ext":"php","size":3596,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Day of month field.  Allows: * , \/ - ? L W\n *\n * 'L' stands for \"last\" and specifies the last day of the month.\n *\n * The 'W' character is used to specify the weekday (Monday-Friday) nearest the\n * given day. As an example, if you were to specify \"15W\" as the value for the\n * day-of-month field, the meaning is: \"the nearest weekday to the 15th of the\n * month\". So if the 15th is a Saturday, the trigger will fire on Friday the\n * 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If\n * the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you\n * specify \"1W\" as the value for day-of-month, and the 1st is a Saturday, the\n * trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary\n * of a month's days. The 'W' character can only be specified when the\n * day-of-month is a single day, not a range or list of days.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_DayOfMonthField extends CronExpression_AbstractField\n{\n    \/**\n     * Get the nearest day of the week for a given day in a month\n     *\n     * @param int $currentYear  Current year\n     * @param int $currentMonth Current month\n     * @param int $targetDay    Target day of the month\n     *\n     * @return DateTime Returns the nearest date\n     *\/\n    private static function getNearestWeekday($currentYear, $currentMonth, $targetDay)\n    {\n        $tday = str_pad($targetDay, 2, '0', STR_PAD_LEFT);\n        $target = new DateTime(\"$currentYear-$currentMonth-$tday\");\n        $currentWeekday = (int) $target->format('N');\n\n        if ($currentWeekday < 6) {\n            return $target;\n        }\n\n        $lastDayOfMonth = $target->format('t');\n\n        foreach (array(-1, 1, -2, 2) as $i) {\n            $adjusted = $targetDay + $i;\n            if ($adjusted > 0 && $adjusted <= $lastDayOfMonth) {\n                $target->setDate($currentYear, $currentMonth, $adjusted);\n                if ($target->format('N') < 6 && $target->format('m') == $currentMonth) {\n                    return $target;\n                }\n            }\n        }\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        \/\/ ? states that the field value is to be skipped\n        if ($value == '?') {\n            return true;\n        }\n\n        $fieldValue = $date->format('d');\n\n        \/\/ Check to see if this is the last day of the month\n        if ($value == 'L') {\n            return $fieldValue == $date->format('t');\n        }\n\n        \/\/ Check to see if this is the nearest weekday to a particular value\n        if (strpos($value, 'W')) {\n            \/\/ Parse the target day\n            $targetDay = substr($value, 0, strpos($value, 'W'));\n            \/\/ Find out if the current day is the nearest day of the week\n            return $date->format('j') == self::getNearestWeekday(\n                $date->format('Y'),\n                $date->format('m'),\n                $targetDay\n            )->format('j');\n        }\n\n        return $this->isSatisfied($date->format('d'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('previous day');\n            $date->setTime(23, 59);\n        } else {\n            $date->modify('next day');\n            $date->setTime(0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-\\?LW0-9A-Za-z]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_MonthField.php","ext":"php","size":1399,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Month field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_MonthField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        \/\/ Convert text month values to integers\n        $value = str_ireplace(\n            array(\n                'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN',\n                'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'\n            ),\n            range(1, 12),\n            $value\n        );\n\n        return $this->isSatisfied($date->format('m'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            \/\/ $date->modify('last day of previous month'); \/\/ remove for php 5.2 compat\n            $date->modify('previous month');\n            $date->modify($date->format('Y-m-t'));\n            $date->setTime(23, 59);\n        } else {\n            \/\/$date->modify('first day of next month'); \/\/ remove for php 5.2 compat\n            $date->modify('next month');\n            $date->modify($date->format('Y-m-01'));\n            $date->setTime(0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9A-Z]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_FieldFactory.php","ext":"php","size":1745,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * CRON field factory implementing a flyweight factory\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n * @link http:\/\/en.wikipedia.org\/wiki\/Cron\n *\/\nclass CronExpression_FieldFactory\n{\n    \/**\n     * @var array Cache of instantiated fields\n     *\/\n    private $fields = array();\n\n    \/**\n     * Get an instance of a field object for a cron expression position\n     *\n     * @param int $position CRON expression position value to retrieve\n     *\n     * @return CronExpression_FieldInterface\n     * @throws InvalidArgumentException if a position is not valid\n     *\/\n    public function getField($position)\n    {\n        if (!isset($this->fields[$position])) {\n            switch ($position) {\n                case 0:\n                    $this->fields[$position] = new CronExpression_MinutesField();\n                    break;\n                case 1:\n                    $this->fields[$position] = new CronExpression_HoursField();\n                    break;\n                case 2:\n                    $this->fields[$position] = new CronExpression_DayOfMonthField();\n                    break;\n                case 3:\n                    $this->fields[$position] = new CronExpression_MonthField();\n                    break;\n                case 4:\n                    $this->fields[$position] = new CronExpression_DayOfWeekField();\n                    break;\n                case 5:\n                    $this->fields[$position] = new CronExpression_YearField();\n                    break;\n                default:\n                    throw new InvalidArgumentException(\n                        $position . ' is not a valid position'\n                    );\n            }\n        }\n\n        return $this->fields[$position];\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_DayOfWeekField.php","ext":"php","size":3921,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Day of week field.  Allows: * \/ , - ? L #\n *\n * Days of the week can be represented as a number 0-7 (0|7 = Sunday)\n * or as a three letter string: SUN, MON, TUE, WED, THU, FRI, SAT.\n *\n * 'L' stands for \"last\". It allows you to specify constructs such as\n * \"the last Friday\" of a given month.\n *\n * '#' is allowed for the day-of-week field, and must be followed by a\n * number between one and five. It allows you to specify constructs such as\n * \"the second Friday\" of a given month.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_DayOfWeekField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        if ($value == '?') {\n            return true;\n        }\n\n        \/\/ Convert text day of the week values to integers\n        $value = str_ireplace(\n            array('SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'),\n            range(0, 6),\n            $value\n        );\n\n        $currentYear = $date->format('Y');\n        $currentMonth = $date->format('m');\n        $lastDayOfMonth = $date->format('t');\n\n        \/\/ Find out if this is the last specific weekday of the month\n        if (strpos($value, 'L')) {\n            $weekday = str_replace('7', '0', substr($value, 0, strpos($value, 'L')));\n            $tdate = clone $date;\n            $tdate->setDate($currentYear, $currentMonth, $lastDayOfMonth);\n            while ($tdate->format('w') != $weekday) {\n                $tdate->setDate($currentYear, $currentMonth, --$lastDayOfMonth);\n            }\n\n            return $date->format('j') == $lastDayOfMonth;\n        }\n\n        \/\/ Handle # hash tokens\n        if (strpos($value, '#')) {\n            list($weekday, $nth) = explode('#', $value);\n            \/\/ Validate the hash fields\n            if ($weekday < 1 || $weekday > 5) {\n                throw new InvalidArgumentException(\"Weekday must be a value between 1 and 5. {$weekday} given\");\n            }\n            if ($nth > 5) {\n                throw new InvalidArgumentException('There are never more than 5 of a given weekday in a month');\n            }\n            \/\/ The current weekday must match the targeted weekday to proceed\n            if ($date->format('N') != $weekday) {\n                return false;\n            }\n\n            $tdate = clone $date;\n            $tdate->setDate($currentYear, $currentMonth, 1);\n            $dayCount = 0;\n            $currentDay = 1;\n            while ($currentDay < $lastDayOfMonth + 1) {\n                if ($tdate->format('N') == $weekday) {\n                    if (++$dayCount >= $nth) {\n                        break;\n                    }\n                }\n                $tdate->setDate($currentYear, $currentMonth, ++$currentDay);\n            }\n\n            return $date->format('j') == $currentDay;\n        }\n\n        \/\/ Handle day of the week values\n        if (strpos($value, '-')) {\n            $parts = explode('-', $value);\n            if ($parts[0] == '7') {\n                $parts[0] = '0';\n            } elseif ($parts[1] == '0') {\n                $parts[1] = '7';\n            }\n            $value = implode('-', $parts);\n        }\n\n        \/\/ Test to see which Sunday to use -- 0 == 7 == Sunday\n        $format = in_array(7, str_split($value)) ? 'N' : 'w';\n        $fieldValue = $date->format($format);\n\n        return $this->isSatisfied($fieldValue, $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 day');\n            $date->setTime(23, 59, 0);\n        } else {\n            $date->modify('+1 day');\n            $date->setTime(0, 0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9A-Z]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_YearField.php","ext":"php","size":937,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Year field.  Allows: * , \/ -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nclass CronExpression_YearField extends CronExpression_AbstractField\n{\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('Y'), $value);\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 year');\n            $date->setDate($date->format('Y'), 12, 31);\n            $date->setTime(23, 59, 0);\n        } else {\n            $date->modify('+1 year');\n            $date->setDate($date->format('Y'), 1, 1);\n            $date->setTime(0, 0, 0);\n        }\n\n        return $this;\n    }\n\n    \/**\n     * {@inheritdoc}\n     *\/\n    public function validate($value)\n    {\n        return (bool) preg_match('\/[\\*,\\\/\\-0-9]+\/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/lib\/cron-expression\/CronExpression_AbstractField.php","ext":"php","size":2576,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Abstract CRON expression field\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n *\/\nabstract class CronExpression_AbstractField implements CronExpression_FieldInterface\n{\n    \/**\n     * Check to see if a field is satisfied by a value\n     *\n     * @param string $dateValue Date value to check\n     * @param string $value     Value to test\n     *\n     * @return bool\n     *\/\n    public function isSatisfied($dateValue, $value)\n    {\n        if ($this->isIncrementsOfRanges($value)) {\n            return $this->isInIncrementsOfRanges($dateValue, $value);\n        } elseif ($this->isRange($value)) {\n            return $this->isInRange($dateValue, $value);\n        }\n\n        return $value == '*' || $dateValue == $value;\n    }\n\n    \/**\n     * Check if a value is a range\n     *\n     * @param string $value Value to test\n     *\n     * @return bool\n     *\/\n    public function isRange($value)\n    {\n        return strpos($value, '-') !== false;\n    }\n\n    \/**\n     * Check if a value is an increments of ranges\n     *\n     * @param string $value Value to test\n     *\n     * @return bool\n     *\/\n    public function isIncrementsOfRanges($value)\n    {\n        return strpos($value, '\/') !== false;\n    }\n\n    \/**\n     * Test if a value is within a range\n     *\n     * @param string $dateValue Set date value\n     * @param string $value     Value to test\n     *\n     * @return bool\n     *\/\n    public function isInRange($dateValue, $value)\n    {\n        $parts = array_map('trim', explode('-', $value, 2));\n\n        return $dateValue >= $parts[0] && $dateValue <= $parts[1];\n    }\n\n    \/**\n     * Test if a value is within an increments of ranges (offset[-to]\/step size)\n     *\n     * @param string $dateValue Set date value\n     * @param string $value     Value to test\n     *\n     * @return bool\n     *\/\n    public function isInIncrementsOfRanges($dateValue, $value)\n    {\n        $parts = array_map('trim', explode('\/', $value, 2));\n        $stepSize = isset($parts[1]) ? $parts[1] : 0;\n        if ($parts[0] == '*' || $parts[0] === '0') {\n            return (int) $dateValue % $stepSize == 0;\n        }\n\n        $range = explode('-', $parts[0], 2);\n        $offset = $range[0];\n        $to = isset($range[1]) ? $range[1] : $dateValue;\n        \/\/ Ensure that the date value is within the range\n        if ($dateValue < $offset || $dateValue > $to) {\n            return false;\n        }\n\n        for ($i = $offset; $i <= $to; $i+= $stepSize) {\n            if ($i == $dateValue) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/functions.php","ext":"php","size":19736,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * General API functions for scheduling actions\n *\n * @package ActionScheduler.\n *\/\n\n\/**\n * Enqueue an action to run one time, as soon as possible\n *\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_enqueue_async_action( $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing async\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the enqueued action ID (enqueued using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priority   Action priority.\n\t * @param bool     $unique     Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_enqueue_async_action', null, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'async',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Schedule an action to run one time\n *\n * @param int    $timestamp When the job will run.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_schedule_single_action( $timestamp, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing single\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param int      $timestamp  When the action will run.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priorities Action priority.\n\t * @param bool     $unique     Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_schedule_single_action', null, $timestamp, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'single',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Schedule a recurring action\n *\n * @param int    $timestamp When the first instance of the job will run.\n * @param int    $interval_in_seconds How long to wait between runs.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t$interval = (int) $interval_in_seconds;\n\n\t\/\/ We expect an integer and allow it to be passed using float and string types, but otherwise\n\t\/\/ should reject unexpected values.\n\t\/\/ phpcs:ignore WordPress.PHP.StrictComparisons.LooseComparison\n\tif ( ! is_numeric( $interval_in_seconds ) || $interval_in_seconds != $interval ) {\n\t\t_doing_it_wrong(\n\t\t\t__METHOD__,\n\t\t\tsprintf(\n\t\t\t\t\/* translators: 1: provided value 2: provided type. *\/\n\t\t\t\tesc_html__( 'An integer was expected but \"%1$s\" (%2$s) was received.', 'action-scheduler' ),\n\t\t\t\tesc_html( $interval_in_seconds ),\n\t\t\t\tesc_html( gettype( $interval_in_seconds ) )\n\t\t\t),\n\t\t\t'3.6.0'\n\t\t);\n\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing recurring\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option          The value to return instead of the option value.\n\t * @param int      $timestamp           When the action will run.\n\t * @param int      $interval_in_seconds How long to wait between runs.\n\t * @param string   $hook                Action hook.\n\t * @param array    $args                Action arguments.\n\t * @param string   $group               Action group.\n\t * @param int      $priority            Action priority.\n\t * @param bool     $unique              Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_schedule_recurring_action', null, $timestamp, $interval_in_seconds, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'recurring',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'pattern'   => $interval_in_seconds,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Schedule an action that recurs on a cron-like schedule.\n *\n * @param int    $timestamp The first instance of the action will be scheduled\n *           to run at a time calculated after this timestamp matching the cron\n *           expression. This can be used to delay the first instance of the action.\n * @param string $schedule A cron-link schedule string.\n * @see http:\/\/en.wikipedia.org\/wiki\/Cron\n *   *    *    *    *    *    *\n *   \u252c    \u252c    \u252c    \u252c    \u252c    \u252c\n *   |    |    |    |    |    |\n *   |    |    |    |    |    + year [optional]\n *   |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7)\n *   |    |    |    +---------- month (1 - 12)\n *   |    |    +--------------- day of month (1 - 31)\n *   |    +-------------------- hour (0 - 23)\n *   +------------------------- min (0 - 59)\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n *\/\nfunction as_schedule_cron_action( $timestamp, $schedule, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t\/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing cron\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param int      $timestamp  When the action will run.\n\t * @param string   $schedule   Cron-like schedule string.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priority   Action priority.\n\t * @param bool     $unique     Unique action.\n\t *\/\n\t$pre = apply_filters( 'pre_as_schedule_cron_action', null, $timestamp, $schedule, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'cron',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'pattern'   => $schedule,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n\/**\n * Cancel the next occurrence of a scheduled action.\n *\n * While only the next instance of a recurring or cron action is unscheduled by this method, that will also prevent\n * all future instances of that recurring or cron action from being run. Recurring and cron actions are scheduled in\n * a sequence instead of all being scheduled at once. Each successive occurrence of a recurring action is scheduled\n * only after the former action is run. If the next instance is never run, because it's unscheduled by this function,\n * then the following instance will never be scheduled (or exist), which is effectively the same as being unscheduled\n * by this method also.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n *\n * @return int|null The scheduled action ID if a scheduled action was found, or null if no matching action found.\n *\/\nfunction as_unschedule_action( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'status'  => ActionScheduler_Store::STATUS_PENDING,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $params );\n\n\tif ( $action_id ) {\n\t\ttry {\n\t\t\tActionScheduler::store()->cancel_action( $action_id );\n\t\t} catch ( Exception $exception ) {\n\t\t\tActionScheduler::logger()->log(\n\t\t\t\t$action_id,\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: %1$s is the name of the hook to be cancelled, %2$s is the exception message. *\/\n\t\t\t\t\t__( 'Caught exception while cancelling action \"%1$s\": %2$s', 'action-scheduler' ),\n\t\t\t\t\t$hook,\n\t\t\t\t\t$exception->getMessage()\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$action_id = null;\n\t\t}\n\t}\n\n\treturn $action_id;\n}\n\n\/**\n * Cancel all occurrences of a scheduled action.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n *\/\nfunction as_unschedule_all_actions( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn;\n\t}\n\tif ( empty( $args ) ) {\n\t\tif ( ! empty( $hook ) && empty( $group ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_hook( $hook );\n\t\t\treturn;\n\t\t}\n\t\tif ( ! empty( $group ) && empty( $hook ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_group( $group );\n\t\t\treturn;\n\t\t}\n\t}\n\tdo {\n\t\t$unscheduled_action = as_unschedule_action( $hook, $args, $group );\n\t} while ( ! empty( $unscheduled_action ) );\n}\n\n\/**\n * Check if there is an existing action in the queue with a given hook, args and group combination.\n *\n * An action in the queue could be pending, in-progress or async. If the is pending for a time in\n * future, its scheduled date will be returned as a timestamp. If it is currently being run, or an\n * async action sitting in the queue waiting to be processed, in which case boolean true will be\n * returned. Or there may be no async, in-progress or pending action for this hook, in which case,\n * boolean false will be the return value.\n *\n * @param string $hook Name of the hook to search for.\n * @param array  $args Arguments of the action to be searched.\n * @param string $group Group of the action to be searched.\n *\n * @return int|bool The timestamp for the next occurrence of a pending scheduled action, true for an async or in-progress action or false if there is no matching action.\n *\/\nfunction as_next_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_RUNNING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( $action_id ) {\n\t\treturn true;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_PENDING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( null === $action_id ) {\n\t\treturn false;\n\t}\n\n\t$action         = ActionScheduler::store()->fetch_action( $action_id );\n\t$scheduled_date = $action->get_schedule()->get_date();\n\tif ( $scheduled_date ) {\n\t\treturn (int) $scheduled_date->format( 'U' );\n\t} elseif ( null === $scheduled_date ) { \/\/ pending async action with NullSchedule.\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n\/**\n * Check if there is a scheduled action in the queue but more efficiently than as_next_scheduled_action().\n *\n * It's recommended to use this function when you need to know whether a specific action is currently scheduled\n * (pending or in-progress).\n *\n * @since 3.3.0\n *\n * @param string $hook  The hook of the action.\n * @param array  $args  Args that have been passed to the action. Null will matches any args.\n * @param string $group The group the job is assigned to.\n *\n * @return bool True if a matching action is pending or in-progress, false otherwise.\n *\/\nfunction as_has_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$query_args = array(\n\t\t'hook'    => $hook,\n\t\t'status'  => array( ActionScheduler_Store::STATUS_RUNNING, ActionScheduler_Store::STATUS_PENDING ),\n\t\t'group'   => $group,\n\t\t'orderby' => 'none',\n\t);\n\n\tif ( null !== $args ) {\n\t\t$query_args['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $query_args );\n\n\treturn null !== $action_id;\n}\n\n\/**\n * Find scheduled actions\n *\n * @param array  $args Possible arguments, with their default values.\n *         'hook' => '' - the name of the action that will be triggered.\n *         'args' => NULL - the args array that will be passed with the action.\n *         'date' => NULL - the scheduled date of the action. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *         'date_compare' => '<=' - operator for testing \"date\". accepted values are '!=', '>', '>=', '<', '<=', '='.\n *         'modified' => NULL - the date the action was last updated. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *         'modified_compare' => '<=' - operator for testing \"modified\". accepted values are '!=', '>', '>=', '<', '<=', '='.\n *         'group' => '' - the group the action belongs to.\n *         'status' => '' - ActionScheduler_Store::STATUS_COMPLETE or ActionScheduler_Store::STATUS_PENDING.\n *         'claimed' => NULL - TRUE to find claimed actions, FALSE to find unclaimed actions, a string to find a specific claim ID.\n *         'per_page' => 5 - Number of results to return.\n *         'offset' => 0.\n *         'orderby' => 'date' - accepted values are 'hook', 'group', 'modified', 'date' or 'none'.\n *         'order' => 'ASC'.\n *\n * @param string $return_format OBJECT, ARRAY_A, or ids.\n *\n * @return array\n *\/\nfunction as_get_scheduled_actions( $args = array(), $return_format = OBJECT ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn array();\n\t}\n\t$store = ActionScheduler::store();\n\tforeach ( array( 'date', 'modified' ) as $key ) {\n\t\tif ( isset( $args[ $key ] ) ) {\n\t\t\t$args[ $key ] = as_get_datetime_object( $args[ $key ] );\n\t\t}\n\t}\n\t$ids = $store->query_actions( $args );\n\n\tif ( 'ids' === $return_format || 'int' === $return_format ) {\n\t\treturn $ids;\n\t}\n\n\t$actions = array();\n\tforeach ( $ids as $action_id ) {\n\t\t$actions[ $action_id ] = $store->fetch_action( $action_id );\n\t}\n\n\tif ( ARRAY_A === $return_format ) {\n\t\tforeach ( $actions as $action_id => $action_object ) {\n\t\t\t$actions[ $action_id ] = get_object_vars( $action_object );\n\t\t}\n\t}\n\n\treturn $actions;\n}\n\n\/**\n * Helper function to create an instance of DateTime based on a given\n * string and timezone. By default, will return the current date\/time\n * in the UTC timezone.\n *\n * Needed because new DateTime() called without an explicit timezone\n * will create a date\/time in PHP's timezone, but we need to have\n * assurance that a date\/time uses the right timezone (which we almost\n * always want to be UTC), which means we need to always include the\n * timezone when instantiating datetimes rather than leaving it up to\n * the PHP default.\n *\n * @param mixed  $date_string A date\/time string. Valid formats are explained in http:\/\/php.net\/manual\/en\/datetime.formats.php.\n * @param string $timezone A timezone identifier, like UTC or Europe\/Lisbon. The list of valid identifiers is available http:\/\/php.net\/manual\/en\/timezones.php.\n *\n * @return ActionScheduler_DateTime\n *\/\nfunction as_get_datetime_object( $date_string = null, $timezone = 'UTC' ) {\n\tif ( is_object( $date_string ) && $date_string instanceof DateTime ) {\n\t\t$date = new ActionScheduler_DateTime( $date_string->format( 'Y-m-d H:i:s' ), new DateTimeZone( $timezone ) );\n\t} elseif ( is_numeric( $date_string ) ) {\n\t\t$date = new ActionScheduler_DateTime( '@' . $date_string, new DateTimeZone( $timezone ) );\n\t} else {\n\t\t$date = new ActionScheduler_DateTime( null === $date_string ? 'now' : $date_string, new DateTimeZone( $timezone ) );\n\t}\n\treturn $date;\n}\n\n\/**\n * Check if a specific feature is supported by the current version of Action Scheduler.\n *\n * @since 3.9.3\n *\n * @param string $feature The feature to check support for.\n *\n * @return bool True if the feature is supported, false otherwise.\n *\/\nfunction as_supports( string $feature ): bool {\n\t$supported_features = array( 'ensure_recurring_actions_hook' );\n\n\treturn in_array( $feature, $supported_features, true );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/license.txt","ext":"txt","size":35149,"mtime":1757324689,"type":"text","content":"                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https:\/\/fsf.org\/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and\/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and\/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND\/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND\/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and\/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https:\/\/www.gnu.org\/licenses\/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https:\/\/www.gnu.org\/licenses\/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https:\/\/www.gnu.org\/licenses\/why-not-lgpl.html>.\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/action-scheduler.php","ext":"php","size":3023,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Plugin Name: Action Scheduler\n * Plugin URI: https:\/\/actionscheduler.org\n * Description: A robust scheduling library for use in WordPress plugins.\n * Author: Automattic\n * Author URI: https:\/\/automattic.com\/\n * Version: 3.9.3\n * License: GPLv3\n * Requires at least: 6.5\n * Tested up to: 6.8\n * Requires PHP: 7.2\n *\n * Copyright 2019 Automattic, Inc.  (https:\/\/automattic.com\/contact\/)\n *\n * This program is free software: you can redistribute it and\/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https:\/\/www.gnu.org\/licenses\/>.\n *\n * @package ActionScheduler\n *\/\n\nif ( ! function_exists( 'action_scheduler_register_3_dot_9_dot_3' ) && function_exists( 'add_action' ) ) { \/\/ WRCS: DEFINED_VERSION.\n\n\tif ( ! class_exists( 'ActionScheduler_Versions', false ) ) {\n\t\trequire_once __DIR__ . '\/classes\/ActionScheduler_Versions.php';\n\t\tadd_action( 'plugins_loaded', array( 'ActionScheduler_Versions', 'initialize_latest_version' ), 1, 0 );\n\t}\n\n\tadd_action( 'plugins_loaded', 'action_scheduler_register_3_dot_9_dot_3', 0, 0 ); \/\/ WRCS: DEFINED_VERSION.\n\n\t\/\/ phpcs:disable Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace\n\t\/**\n\t * Registers this version of Action Scheduler.\n\t *\/\n\tfunction action_scheduler_register_3_dot_9_dot_3() { \/\/ WRCS: DEFINED_VERSION.\n\t\t$versions = ActionScheduler_Versions::instance();\n\t\t$versions->register( '3.9.3', 'action_scheduler_initialize_3_dot_9_dot_3' ); \/\/ WRCS: DEFINED_VERSION.\n\t}\n\n\t\/\/ phpcs:disable Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace\n\t\/**\n\t * Initializes this version of Action Scheduler.\n\t *\/\n\tfunction action_scheduler_initialize_3_dot_9_dot_3() { \/\/ WRCS: DEFINED_VERSION.\n\t\t\/\/ A final safety check is required even here, because historic versions of Action Scheduler\n\t\t\/\/ followed a different pattern (in some unusual cases, we could reach this point and the\n\t\t\/\/ ActionScheduler class is already defined\u2014so we need to guard against that).\n\t\tif ( ! class_exists( 'ActionScheduler', false ) ) {\n\t\t\trequire_once __DIR__ . '\/classes\/abstracts\/ActionScheduler.php';\n\t\t\tActionScheduler::init( __FILE__ );\n\t\t}\n\t}\n\n\t\/\/ Support usage in themes - load this version if no plugin has loaded a version yet.\n\tif ( did_action( 'plugins_loaded' ) && ! doing_action( 'plugins_loaded' ) && ! class_exists( 'ActionScheduler', false ) ) {\n\t\taction_scheduler_initialize_3_dot_9_dot_3(); \/\/ WRCS: DEFINED_VERSION.\n\t\tdo_action( 'action_scheduler_pre_theme_init' );\n\t\tActionScheduler_Versions::initialize_latest_version();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_Schedule_Deprecated.php","ext":"php","size":832,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Abstract_Schedule\n *\/\nabstract class ActionScheduler_Schedule_Deprecated implements ActionScheduler_Schedule {\n\n\t\/**\n\t * Get the date & time this schedule was created to run, or calculate when it should be run\n\t * after a given date & time.\n\t *\n\t * @param DateTime $after DateTime to calculate against.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function next( ?DateTime $after = null ) {\n\t\tif ( empty( $after ) ) {\n\t\t\t$return_value       = $this->get_date();\n\t\t\t$replacement_method = 'get_date()';\n\t\t} else {\n\t\t\t$return_value       = $this->get_next( $after );\n\t\t\t$replacement_method = 'get_next( $after )';\n\t\t}\n\n\t\t_deprecated_function( __METHOD__, '3.0.0', __CLASS__ . '::' . $replacement_method ); \/\/ phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\n\t\treturn $return_value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/deprecated\/functions.php","ext":"php","size":5273,"mtime":1757324689,"type":"text","content":"<?php\n\/**\n * Deprecated API functions for scheduling actions\n *\n * Functions with the wc prefix were deprecated to avoid confusion with\n * Action Scheduler being included in WooCommerce core, and it providing\n * a different set of APIs for working with the action queue.\n *\n * @package ActionScheduler\n *\/\n\n\/**\n * Schedule an action to run one time.\n *\n * @param int    $timestamp When the job will run.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @return string The job ID\n *\/\nfunction wc_schedule_single_action( $timestamp, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_single_action()' );\n\treturn as_schedule_single_action( $timestamp, $hook, $args, $group );\n}\n\n\/**\n * Schedule a recurring action.\n *\n * @param int    $timestamp When the first instance of the job will run.\n * @param int    $interval_in_seconds How long to wait between runs.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @deprecated 2.1.0\n *\n * @return string The job ID\n *\/\nfunction wc_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_recurring_action()' );\n\treturn as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args, $group );\n}\n\n\/**\n * Schedule an action that recurs on a cron-like schedule.\n *\n * @param int    $timestamp The schedule will start on or after this time.\n * @param string $schedule A cron-link schedule string.\n * @see http:\/\/en.wikipedia.org\/wiki\/Cron\n *   *    *    *    *    *    *\n *   \u252c    \u252c    \u252c    \u252c    \u252c    \u252c\n *   |    |    |    |    |    |\n *   |    |    |    |    |    + year [optional]\n *   |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7)\n *   |    |    |    +---------- month (1 - 12)\n *   |    |    +--------------- day of month (1 - 31)\n *   |    +-------------------- hour (0 - 23)\n *   +------------------------- min (0 - 59)\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @deprecated 2.1.0\n *\n * @return string The job ID\n *\/\nfunction wc_schedule_cron_action( $timestamp, $schedule, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_cron_action()' );\n\treturn as_schedule_cron_action( $timestamp, $schedule, $hook, $args, $group );\n}\n\n\/**\n * Cancel the next occurrence of a job.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group Action's group.\n *\n * @deprecated 2.1.0\n *\/\nfunction wc_unschedule_action( $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_unschedule_action()' );\n\tas_unschedule_action( $hook, $args, $group );\n}\n\n\/**\n * Get next scheduled action.\n *\n * @param string $hook Action's hook.\n * @param array  $args Action's args.\n * @param string $group Action's group.\n *\n * @deprecated 2.1.0\n *\n * @return int|bool The timestamp for the next occurrence, or false if nothing was found\n *\/\nfunction wc_next_scheduled_action( $hook, $args = null, $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_next_scheduled_action()' );\n\treturn as_next_scheduled_action( $hook, $args, $group );\n}\n\n\/**\n * Find scheduled actions\n *\n * @param array  $args Possible arguments, with their default values:\n *        'hook' => '' - the name of the action that will be triggered\n *        'args' => NULL - the args array that will be passed with the action\n *        'date' => NULL - the scheduled date of the action. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'date_compare' => '<=' - operator for testing \"date\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'modified' => NULL - the date the action was last updated. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'modified_compare' => '<=' - operator for testing \"modified\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'group' => '' - the group the action belongs to\n *        'status' => '' - ActionScheduler_Store::STATUS_COMPLETE or ActionScheduler_Store::STATUS_PENDING\n *        'claimed' => NULL - TRUE to find claimed actions, FALSE to find unclaimed actions, a string to find a specific claim ID\n *        'per_page' => 5 - Number of results to return\n *        'offset' => 0\n *        'orderby' => 'date' - accepted values are 'hook', 'group', 'modified', or 'date'\n *        'order' => 'ASC'.\n * @param string $return_format OBJECT, ARRAY_A, or ids.\n *\n * @deprecated 2.1.0\n *\n * @return array\n *\/\nfunction wc_get_scheduled_actions( $args = array(), $return_format = OBJECT ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_get_scheduled_actions()' );\n\treturn as_get_scheduled_actions( $args, $return_format );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_AdminView_Deprecated.php","ext":"php","size":5466,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_AdminView_Deprecated\n *\n * Store deprecated public functions previously found in the ActionScheduler_AdminView class.\n * Keeps them out of the way of the main class.\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_AdminView_Deprecated {\n\n\t\/**\n\t * Adjust parameters for custom post type.\n\t *\n\t * @param array $args Args.\n\t *\/\n\tpublic function action_scheduler_post_type_args( $args ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $args;\n\t}\n\n\t\/**\n\t * Customise the post status related views displayed on the Scheduled Actions administration screen.\n\t *\n\t * @param array $views An associative array of views and view labels which can be used to filter the 'scheduled-action' posts displayed on the Scheduled Actions administration screen.\n\t * @return array $views An associative array of views and view labels which can be used to filter the 'scheduled-action' posts displayed on the Scheduled Actions administration screen.\n\t *\/\n\tpublic function list_table_views( $views ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $views;\n\t}\n\n\t\/**\n\t * Do not include the \"Edit\" action for the Scheduled Actions administration screen.\n\t *\n\t * Hooked to the 'bulk_actions-edit-action-scheduler' filter.\n\t *\n\t * @param array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t * @return array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t *\/\n\tpublic function bulk_actions( $actions ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Completely customer the columns displayed on the Scheduled Actions administration screen.\n\t *\n\t * Because we can't filter the content of the default title and date columns, we need to recreate our own\n\t * custom columns for displaying those post fields. For the column content, @see self::list_table_column_content().\n\t *\n\t * @param array $columns An associative array of columns that are use for the table on the Scheduled Actions administration screen.\n\t * @return array $columns An associative array of columns that are use for the table on the Scheduled Actions administration screen.\n\t *\/\n\tpublic function list_table_columns( $columns ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Make our custom title & date columns use defaulting title & date sorting.\n\t *\n\t * @param array $columns An associative array of columns that can be used to sort the table on the Scheduled Actions administration screen.\n\t * @return array $columns An associative array of columns that can be used to sort the table on the Scheduled Actions administration screen.\n\t *\/\n\tpublic static function list_table_sortable_columns( $columns ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $columns;\n\t}\n\n\t\/**\n\t * Print the content for our custom columns.\n\t *\n\t * @param string $column_name The key for the column for which we should output our content.\n\t * @param int    $post_id The ID of the 'scheduled-action' post for which this row relates.\n\t *\/\n\tpublic static function list_table_column_content( $column_name, $post_id ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Hide the inline \"Edit\" action for all 'scheduled-action' posts.\n\t *\n\t * Hooked to the 'post_row_actions' filter.\n\t *\n\t * @param array   $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t * @param WP_Post $post The 'scheduled-action' post object.\n\t * @return array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t *\/\n\tpublic static function row_actions( $actions, $post ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $actions;\n\t}\n\n\t\/**\n\t * Run an action when triggered from the Action Scheduler administration screen.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function maybe_execute_action() {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Convert an interval of seconds into a two part human friendly string.\n\t *\n\t * The WordPress human_time_diff() function only calculates the time difference to one degree, meaning\n\t * even if an action is 1 day and 11 hours away, it will display \"1 day\". This function goes one step\n\t * further to display two degrees of accuracy.\n\t *\n\t * Based on Crontrol::interval() function by Edward Dale: https:\/\/wordpress.org\/plugins\/wp-crontrol\/\n\t *\n\t * @return void\n\t *\/\n\tpublic static function admin_notices() {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Filter search queries to allow searching by Claim ID (i.e. post_password).\n\t *\n\t * @param string   $orderby MySQL orderby string.\n\t * @param WP_Query $query Instance of a WP_Query object.\n\t * @return void\n\t *\/\n\tpublic function custom_orderby( $orderby, $query ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Filter search queries to allow searching by Claim ID (i.e. post_password).\n\t *\n\t * @param string   $search MySQL search string.\n\t * @param WP_Query $query Instance of a WP_Query object.\n\t * @return void\n\t *\/\n\tpublic function search_post_password( $search, $query ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t\/**\n\t * Change messages when a scheduled action is updated.\n\t *\n\t * @param  array $messages Messages.\n\t * @return array\n\t *\/\n\tpublic function post_updated_messages( $messages ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $messages;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_Abstract_QueueRunner_Deprecated.php","ext":"php","size":852,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Abstract class with common Queue Cleaner functionality.\n *\/\nabstract class ActionScheduler_Abstract_QueueRunner_Deprecated {\n\n\t\/**\n\t * Get the maximum number of seconds a batch can run for.\n\t *\n\t * @deprecated 2.1.1\n\t * @return int The number of seconds.\n\t *\/\n\tprotected function get_maximum_execution_time() {\n\t\t_deprecated_function( __METHOD__, '2.1.1', 'ActionScheduler_Abstract_QueueRunner::get_time_limit()' );\n\n\t\t$maximum_execution_time = 30;\n\n\t\t\/\/ Apply deprecated filter.\n\t\tif ( has_filter( 'action_scheduler_maximum_execution_time' ) ) {\n\t\t\t_deprecated_function( 'action_scheduler_maximum_execution_time', '2.1.1', 'action_scheduler_queue_runner_time_limit' );\n\t\t\t$maximum_execution_time = apply_filters( 'action_scheduler_maximum_execution_time', $maximum_execution_time );\n\t\t}\n\n\t\treturn absint( $maximum_execution_time );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/deprecated\/ActionScheduler_Store_Deprecated.php","ext":"php","size":1059,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Store_Deprecated\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler_Store_Deprecated {\n\n\t\/**\n\t * Mark an action that failed to fetch correctly as failed.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param int $action_id The ID of the action.\n\t *\/\n\tpublic function mark_failed_fetch_action( $action_id ) {\n\t\t_deprecated_function( __METHOD__, '3.0.0', 'ActionScheduler_Store::mark_failure()' );\n\t\tself::$store->mark_failure( $action_id );\n\t}\n\n\t\/**\n\t * Add base hooks\n\t *\n\t * @since 2.2.6\n\t *\/\n\tprotected static function hook() {\n\t\t_deprecated_function( __METHOD__, '3.0.0' );\n\t}\n\n\t\/**\n\t * Remove base hooks\n\t *\n\t * @since 2.2.6\n\t *\/\n\tprotected static function unhook() {\n\t\t_deprecated_function( __METHOD__, '3.0.0' );\n\t}\n\n\t\/**\n\t * Get the site's local time.\n\t *\n\t * @deprecated 2.1.0\n\t * @return DateTimeZone\n\t *\/\n\tprotected function get_local_timezone() {\n\t\t_deprecated_function( __FUNCTION__, '2.1.0', 'ActionScheduler_TimezoneHelper::set_local_timezone()' );\n\t\treturn ActionScheduler_TimezoneHelper::get_local_timezone();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_ActionClaim.php","ext":"php","size":652,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_ActionClaim\n *\/\nclass ActionScheduler_ActionClaim {\n\t\/**\n\t * Claim ID.\n\t *\n\t * @var string\n\t *\/\n\tprivate $id = '';\n\n\t\/**\n\t * Claimed action IDs.\n\t *\n\t * @var int[]\n\t *\/\n\tprivate $action_ids = array();\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string $id Claim ID.\n\t * @param int[]  $action_ids Action IDs.\n\t *\/\n\tpublic function __construct( $id, array $action_ids ) {\n\t\t$this->id         = $id;\n\t\t$this->action_ids = $action_ids;\n\t}\n\n\t\/**\n\t * Get claim ID.\n\t *\/\n\tpublic function get_id() {\n\t\treturn $this->id;\n\t}\n\n\t\/**\n\t * Get IDs of claimed actions.\n\t *\/\n\tpublic function get_actions() {\n\t\treturn $this->action_ids;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_LogEntry.php","ext":"php","size":1942,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_LogEntry\n *\/\nclass ActionScheduler_LogEntry {\n\n\t\/**\n\t * Action's ID for log entry.\n\t *\n\t * @var int $action_id\n\t *\/\n\tprotected $action_id = '';\n\n\t\/**\n\t * Log entry's message.\n\t *\n\t * @var string $message\n\t *\/\n\tprotected $message = '';\n\n\t\/**\n\t * Log entry's date.\n\t *\n\t * @var Datetime $date\n\t *\/\n\tprotected $date;\n\n\t\/**\n\t * Constructor\n\t *\n\t * @param mixed    $action_id Action ID.\n\t * @param string   $message   Message.\n\t * @param Datetime $date      Datetime object with the time when this log entry was created. If this parameter is\n\t *                            not provided a new Datetime object (with current time) will be created.\n\t *\/\n\tpublic function __construct( $action_id, $message, $date = null ) {\n\t\t\/*\n\t\t * ActionScheduler_wpCommentLogger::get_entry() previously passed a 3rd param of $comment->comment_type\n\t\t * to ActionScheduler_LogEntry::__construct(), goodness knows why, and the Follow-up Emails plugin\n\t\t * hard-codes loading its own version of ActionScheduler_wpCommentLogger with that out-dated method,\n\t\t * goodness knows why, so we need to guard against that here instead of using a DateTime type declaration\n\t\t * for the constructor's 3rd param of $date and causing a fatal error with older versions of FUE.\n\t\t *\/\n\t\tif ( null !== $date && ! is_a( $date, 'DateTime' ) ) {\n\t\t\t_doing_it_wrong( __METHOD__, 'The third parameter must be a valid DateTime instance, or null.', '2.0.0' );\n\t\t\t$date = null;\n\t\t}\n\n\t\t$this->action_id = $action_id;\n\t\t$this->message   = $message;\n\t\t$this->date      = $date ? $date : new Datetime();\n\t}\n\n\t\/**\n\t * Returns the date when this log entry was created\n\t *\n\t * @return Datetime\n\t *\/\n\tpublic function get_date() {\n\t\treturn $this->date;\n\t}\n\n\t\/**\n\t * Get action ID of log entry.\n\t *\/\n\tpublic function get_action_id() {\n\t\treturn $this->action_id;\n\t}\n\n\t\/**\n\t * Get log entry message.\n\t *\/\n\tpublic function get_message() {\n\t\treturn $this->message;\n\t}\n}\n\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_NullLogEntry.php","ext":"php","size":330,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_NullLogEntry\n *\/\nclass ActionScheduler_NullLogEntry extends ActionScheduler_LogEntry {\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param string $action_id Action ID.\n\t * @param string $message   Log entry.\n\t *\/\n\tpublic function __construct( $action_id = '', $message = '' ) {\n\t\t\/\/ nothing to see here.\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_DataController.php","ext":"php","size":5769,"mtime":1757324689,"type":"text","content":"<?php\n\nuse Action_Scheduler\\Migration\\Controller;\n\n\/**\n * Class ActionScheduler_DataController\n *\n * The main plugin\/initialization class for the data stores.\n *\n * Responsible for hooking everything up with WordPress.\n *\n * @package Action_Scheduler\n *\n * @since 3.0.0\n *\/\nclass ActionScheduler_DataController {\n\t\/** Action data store class name. *\/\n\tconst DATASTORE_CLASS = 'ActionScheduler_DBStore';\n\n\t\/** Logger data store class name. *\/\n\tconst LOGGER_CLASS = 'ActionScheduler_DBLogger';\n\n\t\/** Migration status option name. *\/\n\tconst STATUS_FLAG = 'action_scheduler_migration_status';\n\n\t\/** Migration status option value. *\/\n\tconst STATUS_COMPLETE = 'complete';\n\n\t\/** Migration minimum required PHP version. *\/\n\tconst MIN_PHP_VERSION = '5.5';\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var ActionScheduler_DataController\n\t *\/\n\tprivate static $instance;\n\n\t\/**\n\t * Sleep time in seconds.\n\t *\n\t * @var int\n\t *\/\n\tprivate static $sleep_time = 0;\n\n\t\/**\n\t * Tick count required for freeing memory.\n\t *\n\t * @var int\n\t *\/\n\tprivate static $free_ticks = 50;\n\n\t\/**\n\t * Get a flag indicating whether the migration environment dependencies are met.\n\t *\n\t * @return bool\n\t *\/\n\tpublic static function dependencies_met() {\n\t\t$php_support = version_compare( PHP_VERSION, self::MIN_PHP_VERSION, '>=' );\n\t\treturn $php_support && apply_filters( 'action_scheduler_migration_dependencies_met', true );\n\t}\n\n\t\/**\n\t * Get a flag indicating whether the migration is complete.\n\t *\n\t * @return bool Whether the flag has been set marking the migration as complete\n\t *\/\n\tpublic static function is_migration_complete() {\n\t\treturn get_option( self::STATUS_FLAG ) === self::STATUS_COMPLETE;\n\t}\n\n\t\/**\n\t * Mark the migration as complete.\n\t *\/\n\tpublic static function mark_migration_complete() {\n\t\tupdate_option( self::STATUS_FLAG, self::STATUS_COMPLETE );\n\t}\n\n\t\/**\n\t * Unmark migration when a plugin is de-activated. Will not work in case of silent activation, for example in an update.\n\t * We do this to mitigate the bug of lost actions which happens if there was an AS 2.x to AS 3.x migration in the past, but that plugin is now\n\t * deactivated and the site was running on AS 2.x again.\n\t *\/\n\tpublic static function mark_migration_incomplete() {\n\t\tdelete_option( self::STATUS_FLAG );\n\t}\n\n\t\/**\n\t * Set the action store class name.\n\t *\n\t * @param string $class Classname of the store class.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function set_store_class( $class ) {\n\t\treturn self::DATASTORE_CLASS;\n\t}\n\n\t\/**\n\t * Set the action logger class name.\n\t *\n\t * @param string $class Classname of the logger class.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function set_logger_class( $class ) {\n\t\treturn self::LOGGER_CLASS;\n\t}\n\n\t\/**\n\t * Set the sleep time in seconds.\n\t *\n\t * @param integer $sleep_time The number of seconds to pause before resuming operation.\n\t *\/\n\tpublic static function set_sleep_time( $sleep_time ) {\n\t\tself::$sleep_time = (int) $sleep_time;\n\t}\n\n\t\/**\n\t * Set the tick count required for freeing memory.\n\t *\n\t * @param integer $free_ticks The number of ticks to free memory on.\n\t *\/\n\tpublic static function set_free_ticks( $free_ticks ) {\n\t\tself::$free_ticks = (int) $free_ticks;\n\t}\n\n\t\/**\n\t * Free memory if conditions are met.\n\t *\n\t * @param int $ticks Current tick count.\n\t *\/\n\tpublic static function maybe_free_memory( $ticks ) {\n\t\tif ( self::$free_ticks && 0 === $ticks % self::$free_ticks ) {\n\t\t\tself::free_memory();\n\t\t}\n\t}\n\n\t\/**\n\t * Reduce memory footprint by clearing the database query and object caches.\n\t *\/\n\tpublic static function free_memory() {\n\t\tif ( 0 < self::$sleep_time ) {\n\t\t\t\/* translators: %d: amount of time *\/\n\t\t\t\\WP_CLI::warning( sprintf( _n( 'Stopped the insanity for %d second', 'Stopped the insanity for %d seconds', self::$sleep_time, 'action-scheduler' ), self::$sleep_time ) );\n\t\t\tsleep( self::$sleep_time );\n\t\t}\n\n\t\t\\WP_CLI::warning( __( 'Attempting to reduce used memory...', 'action-scheduler' ) );\n\n\t\t\/**\n\t\t * Globals.\n\t\t *\n\t\t * @var $wpdb            \\wpdb\n\t\t * @var $wp_object_cache \\WP_Object_Cache\n\t\t *\/\n\t\tglobal $wpdb, $wp_object_cache;\n\n\t\t$wpdb->queries = array();\n\n\t\tif ( ! is_a( $wp_object_cache, 'WP_Object_Cache' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Not all drop-ins support these props, however, there may be existing installations that rely on these being cleared.\n\t\tif ( property_exists( $wp_object_cache, 'group_ops' ) ) {\n\t\t\t$wp_object_cache->group_ops = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'stats' ) ) {\n\t\t\t$wp_object_cache->stats = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'memcache_debug' ) ) {\n\t\t\t$wp_object_cache->memcache_debug = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'cache' ) ) {\n\t\t\t$wp_object_cache->cache = array();\n\t\t}\n\n\t\tif ( is_callable( array( $wp_object_cache, '__remoteset' ) ) ) {\n\t\t\tcall_user_func( array( $wp_object_cache, '__remoteset' ) ); \/\/ important!\n\t\t}\n\t}\n\n\t\/**\n\t * Connect to table datastores if migration is complete.\n\t * Otherwise, proceed with the migration if the dependencies have been met.\n\t *\/\n\tpublic static function init() {\n\t\tif ( self::is_migration_complete() ) {\n\t\t\tadd_filter( 'action_scheduler_store_class', array( 'ActionScheduler_DataController', 'set_store_class' ), 100 );\n\t\t\tadd_filter( 'action_scheduler_logger_class', array( 'ActionScheduler_DataController', 'set_logger_class' ), 100 );\n\t\t\tadd_action( 'deactivate_plugin', array( 'ActionScheduler_DataController', 'mark_migration_incomplete' ) );\n\t\t} elseif ( self::dependencies_met() ) {\n\t\t\tController::init();\n\t\t}\n\n\t\tadd_action( 'action_scheduler\/progress_tick', array( 'ActionScheduler_DataController', 'maybe_free_memory' ) );\n\t}\n\n\t\/**\n\t * Singleton factory.\n\t *\/\n\tpublic static function instance() {\n\t\tif ( ! isset( self::$instance ) ) {\n\t\t\tself::$instance = new static();\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_ActionFactory.php","ext":"php","size":16303,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_ActionFactory\n *\/\nclass ActionScheduler_ActionFactory {\n\n\t\/**\n\t * Return stored actions for given params.\n\t *\n\t * @param string                        $status The action's status in the data store.\n\t * @param string                        $hook The hook to trigger when this action runs.\n\t * @param array                         $args Args to pass to callbacks when the hook is triggered.\n\t * @param ActionScheduler_Schedule|null $schedule The action's schedule.\n\t * @param string                        $group A group to put the action in.\n\t * phpcs:ignore Squiz.Commenting.FunctionComment.ExtraParamComment\n\t * @param int                           $priority The action priority.\n\t *\n\t * @return ActionScheduler_Action An instance of the stored action.\n\t *\/\n\tpublic function get_stored_action( $status, $hook, array $args = array(), ?ActionScheduler_Schedule $schedule = null, $group = '' ) {\n\t\t\/\/ The 6th parameter ($priority) is not formally declared in the method signature to maintain compatibility with\n\t\t\/\/ third-party subclasses created before this param was added.\n\t\t$priority = func_num_args() >= 6 ? (int) func_get_arg( 5 ) : 10;\n\n\t\tswitch ( $status ) {\n\t\t\tcase ActionScheduler_Store::STATUS_PENDING:\n\t\t\t\t$action_class = 'ActionScheduler_Action';\n\t\t\t\tbreak;\n\t\t\tcase ActionScheduler_Store::STATUS_CANCELED:\n\t\t\t\t$action_class = 'ActionScheduler_CanceledAction';\n\t\t\t\tif ( ! is_null( $schedule ) && ! is_a( $schedule, 'ActionScheduler_CanceledSchedule' ) && ! is_a( $schedule, 'ActionScheduler_NullSchedule' ) ) {\n\t\t\t\t\t$schedule = new ActionScheduler_CanceledSchedule( $schedule->get_date() );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$action_class = 'ActionScheduler_FinishedAction';\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$action_class = apply_filters( 'action_scheduler_stored_action_class', $action_class, $status, $hook, $args, $schedule, $group );\n\n\t\t$action = new $action_class( $hook, $args, $schedule, $group );\n\t\t$action->set_priority( $priority );\n\n\t\t\/**\n\t\t * Allow 3rd party code to change the instantiated action for a given hook, args, schedule and group.\n\t\t *\n\t\t * @param ActionScheduler_Action   $action The instantiated action.\n\t\t * @param string                   $hook The instantiated action's hook.\n\t\t * @param array                    $args The instantiated action's args.\n\t\t * @param ActionScheduler_Schedule $schedule The instantiated action's schedule.\n\t\t * @param string                   $group The instantiated action's group.\n\t\t * @param int                      $priority The action priority.\n\t\t *\/\n\t\treturn apply_filters( 'action_scheduler_stored_action_instance', $action, $hook, $args, $schedule, $group, $priority );\n\t}\n\n\t\/**\n\t * Enqueue an action to run one time, as soon as possible (rather a specific scheduled time).\n\t *\n\t * This method creates a new action using the NullSchedule. In practice, this results in an action scheduled to\n\t * execute \"now\". Therefore, it will generally run as soon as possible but is not prioritized ahead of other actions\n\t * that are already past-due.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function async( $hook, $args = array(), $group = '' ) {\n\t\treturn $this->async_unique( $hook, $args, $group, false );\n\t}\n\n\t\/**\n\t * Same as async, but also supports $unique param.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether to ensure the action is unique.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function async_unique( $hook, $args = array(), $group = '', $unique = true ) {\n\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action, $unique ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create single action.\n\t *\n\t * @param string $hook  The hook to trigger when this action runs.\n\t * @param array  $args  Args to pass when the hook is triggered.\n\t * @param int    $when  Unix timestamp when the action will run.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function single( $hook, $args = array(), $when = null, $group = '' ) {\n\t\treturn $this->single_unique( $hook, $args, $when, $group, false );\n\t}\n\n\t\/**\n\t * Create single action only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $when Unix timestamp when the action will run.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function single_unique( $hook, $args = array(), $when = null, $group = '', $unique = true ) {\n\t\t$date     = as_get_datetime_object( $when );\n\t\t$schedule = new ActionScheduler_SimpleSchedule( $date );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create the first instance of an action recurring on a given interval.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $first Unix timestamp for the first run.\n\t * @param int    $interval Seconds between runs.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function recurring( $hook, $args = array(), $first = null, $interval = null, $group = '' ) {\n\t\treturn $this->recurring_unique( $hook, $args, $first, $interval, $group, false );\n\t}\n\n\t\/**\n\t * Create the first instance of an action recurring on a given interval only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $first Unix timestamp for the first run.\n\t * @param int    $interval Seconds between runs.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function recurring_unique( $hook, $args = array(), $first = null, $interval = null, $group = '', $unique = true ) {\n\t\tif ( empty( $interval ) ) {\n\t\t\treturn $this->single_unique( $hook, $args, $first, $group, $unique );\n\t\t}\n\t\t$date     = as_get_datetime_object( $first );\n\t\t$schedule = new ActionScheduler_IntervalSchedule( $date, $interval );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create the first instance of an action recurring on a Cron schedule.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $base_timestamp The first instance of the action will be scheduled\n\t *        to run at a time calculated after this timestamp matching the cron\n\t *        expression. This can be used to delay the first instance of the action.\n\t * @param int    $schedule A cron definition string.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t *\/\n\tpublic function cron( $hook, $args = array(), $base_timestamp = null, $schedule = null, $group = '' ) {\n\t\treturn $this->cron_unique( $hook, $args, $base_timestamp, $schedule, $group, false );\n\t}\n\n\n\t\/**\n\t * Create the first instance of an action recurring on a Cron schedule only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $base_timestamp The first instance of the action will be scheduled\n\t *        to run at a time calculated after this timestamp matching the cron\n\t *        expression. This can be used to delay the first instance of the action.\n\t * @param int    $schedule A cron definition string.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t **\/\n\tpublic function cron_unique( $hook, $args = array(), $base_timestamp = null, $schedule = null, $group = '', $unique = true ) {\n\t\tif ( empty( $schedule ) ) {\n\t\t\treturn $this->single_unique( $hook, $args, $base_timestamp, $group, $unique );\n\t\t}\n\t\t$date     = as_get_datetime_object( $base_timestamp );\n\t\t$cron     = CronExpression::factory( $schedule );\n\t\t$schedule = new ActionScheduler_CronSchedule( $date, $cron );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t\/**\n\t * Create a successive instance of a recurring or cron action.\n\t *\n\t * Importantly, the action will be rescheduled to run based on the current date\/time.\n\t * That means when the action is scheduled to run in the past, the next scheduled date\n\t * will be pushed forward. For example, if a recurring action set to run every hour\n\t * was scheduled to run 5 seconds ago, it will be next scheduled for 1 hour in the\n\t * future, which is 1 hour and 5 seconds from when it was last scheduled to run.\n\t *\n\t * Alternatively, if the action is scheduled to run in the future, and is run early,\n\t * likely via manual intervention, then its schedule will change based on the time now.\n\t * For example, if a recurring action set to run every day, and is run 12 hours early,\n\t * it will run again in 24 hours, not 36 hours.\n\t *\n\t * This slippage is less of an issue with Cron actions, as the specific run time can\n\t * be set for them to run, e.g. 1am each day. In those cases, and entire period would\n\t * need to be missed before there was any change is scheduled, e.g. in the case of an\n\t * action scheduled for 1am each day, the action would need to run an entire day late.\n\t *\n\t * @param ActionScheduler_Action $action The existing action.\n\t *\n\t * @return string The ID of the stored action\n\t * @throws InvalidArgumentException If $action is not a recurring action.\n\t *\/\n\tpublic function repeat( $action ) {\n\t\t$schedule = $action->get_schedule();\n\t\t$next     = $schedule->get_next( as_get_datetime_object() );\n\n\t\tif ( is_null( $next ) || ! $schedule->is_recurring() ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid action - must be a recurring action.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$schedule_class = get_class( $schedule );\n\t\t$new_schedule   = new $schedule( $next, $schedule->get_recurrence(), $schedule->get_first_date() );\n\t\t$new_action     = new ActionScheduler_Action( $action->get_hook(), $action->get_args(), $new_schedule, $action->get_group() );\n\t\t$new_action->set_priority( $action->get_priority() );\n\t\treturn $this->store( $new_action );\n\t}\n\n\t\/**\n\t * Creates a scheduled action.\n\t *\n\t * This general purpose method can be used in place of specific methods such as async(),\n\t * async_unique(), single() or single_unique(), etc.\n\t *\n\t * @internal Not intended for public use, should not be overridden by subclasses.\n\t *\n\t * @param array $options {\n\t *     Describes the action we wish to schedule.\n\t *\n\t *     @type string     $type      Must be one of 'async', 'cron', 'recurring', or 'single'.\n\t *     @type string     $hook      The hook to be executed.\n\t *     @type array      $arguments Arguments to be passed to the callback.\n\t *     @type string     $group     The action group.\n\t *     @type bool       $unique    If the action should be unique.\n\t *     @type int        $when      Timestamp. Indicates when the action, or first instance of the action in the case\n\t *                                 of recurring or cron actions, becomes due.\n\t *     @type int|string $pattern   Recurrence pattern. This is either an interval in seconds for recurring actions\n\t *                                 or a cron expression for cron actions.\n\t *     @type int        $priority  Lower values means higher priority. Should be in the range 0-255.\n\t * }\n\t *\n\t * @return int The action ID. Zero if there was an error scheduling the action.\n\t *\/\n\tpublic function create( array $options = array() ) {\n\t\t$defaults = array(\n\t\t\t'type'      => 'single',\n\t\t\t'hook'      => '',\n\t\t\t'arguments' => array(),\n\t\t\t'group'     => '',\n\t\t\t'unique'    => false,\n\t\t\t'when'      => time(),\n\t\t\t'pattern'   => null,\n\t\t\t'priority'  => 10,\n\t\t);\n\n\t\t$options = array_merge( $defaults, $options );\n\n\t\t\/\/ Cron\/recurring actions without a pattern are treated as single actions (this gives calling code the ability\n\t\t\/\/ to use functions like as_schedule_recurring_action() to schedule recurring as well as single actions).\n\t\tif ( ( 'cron' === $options['type'] || 'recurring' === $options['type'] ) && empty( $options['pattern'] ) ) {\n\t\t\t$options['type'] = 'single';\n\t\t}\n\n\t\tswitch ( $options['type'] ) {\n\t\t\tcase 'async':\n\t\t\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t\t\tbreak;\n\n\t\t\tcase 'cron':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$cron     = CronExpression::factory( $options['pattern'] );\n\t\t\t\t$schedule = new ActionScheduler_CronSchedule( $date, $cron );\n\t\t\t\tbreak;\n\n\t\t\tcase 'recurring':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$schedule = new ActionScheduler_IntervalSchedule( $date, $options['pattern'] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'single':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$schedule = new ActionScheduler_SimpleSchedule( $date );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\t\terror_log( \"Unknown action type '{$options['type']}' specified when trying to create an action for '{$options['hook']}'.\" );\n\t\t\t\treturn 0;\n\t\t}\n\n\t\t$action = new ActionScheduler_Action( $options['hook'], $options['arguments'], $schedule, $options['group'] );\n\t\t$action->set_priority( $options['priority'] );\n\n\t\t$action_id = 0;\n\t\ttry {\n\t\t\t$action_id = $options['unique'] ? $this->store_unique_action( $action ) : $this->store( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\terror_log(\n\t\t\t\tsprintf(\n\t\t\t\t\t\/* translators: %1$s is the name of the hook to be enqueued, %2$s is the exception message. *\/\n\t\t\t\t\t__( 'Caught exception while enqueuing action \"%1$s\": %2$s', 'action-scheduler' ),\n\t\t\t\t\t$options['hook'],\n\t\t\t\t\t$e->getMessage()\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn $action_id;\n\t}\n\n\t\/**\n\t * Save action to database.\n\t *\n\t * @param ActionScheduler_Action $action Action object to save.\n\t *\n\t * @return int The ID of the stored action\n\t *\/\n\tprotected function store( ActionScheduler_Action $action ) {\n\t\t$store = ActionScheduler_Store::instance();\n\t\treturn $store->save_action( $action );\n\t}\n\n\t\/**\n\t * Store action if it's unique.\n\t *\n\t * @param ActionScheduler_Action $action Action object to store.\n\t *\n\t * @return int ID of the created action. Will be 0 if action was not created.\n\t *\/\n\tprotected function store_unique_action( ActionScheduler_Action $action ) {\n\t\t$store = ActionScheduler_Store::instance();\n\t\tif ( method_exists( $store, 'save_unique_action' ) ) {\n\t\t\treturn $store->save_unique_action( $action );\n\t\t} else {\n\t\t\t\/**\n\t\t\t * Fallback to non-unique action if the store doesn't support unique actions.\n\t\t\t * We try to save the action as unique, accepting that there might be a race condition.\n\t\t\t * This is likely still better than giving up on unique actions entirely.\n\t\t\t *\/\n\t\t\t$existing_action_id = (int) $store->find_action(\n\t\t\t\t$action->get_hook(),\n\t\t\t\tarray(\n\t\t\t\t\t'args'   => $action->get_args(),\n\t\t\t\t\t'status' => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t\t\t'group'  => $action->get_group(),\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ( $existing_action_id > 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn $store->save_action( $action );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_AdminView.php","ext":"php","size":10627,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_AdminView\n *\n * @codeCoverageIgnore\n *\/\nclass ActionScheduler_AdminView extends ActionScheduler_AdminView_Deprecated {\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var null|self\n\t *\/\n\tprivate static $admin_view = null;\n\n\t\/**\n\t * Screen ID.\n\t *\n\t * @var string\n\t *\/\n\tprivate static $screen_id = 'tools_page_action-scheduler';\n\n\t\/**\n\t * ActionScheduler_ListTable instance.\n\t *\n\t * @var ActionScheduler_ListTable\n\t *\/\n\tprotected $list_table;\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_AdminView\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function instance() {\n\n\t\tif ( empty( self::$admin_view ) ) {\n\t\t\t$class            = apply_filters( 'action_scheduler_admin_view_class', 'ActionScheduler_AdminView' );\n\t\t\tself::$admin_view = new $class();\n\t\t}\n\n\t\treturn self::$admin_view;\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\tif ( is_admin() && ( ! defined( 'DOING_AJAX' ) || ! DOING_AJAX ) ) {\n\n\t\t\tif ( class_exists( 'WooCommerce' ) ) {\n\t\t\t\tadd_action( 'woocommerce_admin_status_content_action-scheduler', array( $this, 'render_admin_ui' ) );\n\t\t\t\tadd_action( 'woocommerce_system_status_report', array( $this, 'system_status_report' ) );\n\t\t\t\tadd_filter( 'woocommerce_admin_status_tabs', array( $this, 'register_system_status_tab' ) );\n\t\t\t}\n\n\t\t\tadd_action( 'admin_menu', array( $this, 'register_menu' ) );\n\t\t\tadd_action( 'admin_notices', array( $this, 'maybe_check_pastdue_actions' ) );\n\t\t\tadd_action( 'current_screen', array( $this, 'add_help_tabs' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Print system status report.\n\t *\/\n\tpublic function system_status_report() {\n\t\t$table = new ActionScheduler_wcSystemStatus( ActionScheduler::store() );\n\t\t$table->render();\n\t}\n\n\t\/**\n\t * Registers action-scheduler into WooCommerce > System status.\n\t *\n\t * @param array $tabs An associative array of tab key => label.\n\t * @return array $tabs An associative array of tab key => label, including Action Scheduler's tabs\n\t *\/\n\tpublic function register_system_status_tab( array $tabs ) {\n\t\t$tabs['action-scheduler'] = __( 'Scheduled Actions', 'action-scheduler' );\n\n\t\treturn $tabs;\n\t}\n\n\t\/**\n\t * Include Action Scheduler's administration under the Tools menu.\n\t *\n\t * A menu under the Tools menu is important for backward compatibility (as that's\n\t * where it started), and also provides more convenient access than the WooCommerce\n\t * System Status page, and for sites where WooCommerce isn't active.\n\t *\/\n\tpublic function register_menu() {\n\t\t$hook_suffix = add_submenu_page(\n\t\t\t'tools.php',\n\t\t\t__( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t__( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t'manage_options',\n\t\t\t'action-scheduler',\n\t\t\tarray( $this, 'render_admin_ui' )\n\t\t);\n\t\tadd_action( 'load-' . $hook_suffix, array( $this, 'process_admin_ui' ) );\n\t}\n\n\t\/**\n\t * Triggers processing of any pending actions.\n\t *\/\n\tpublic function process_admin_ui() {\n\t\t$this->get_list_table();\n\t}\n\n\t\/**\n\t * Renders the Admin UI\n\t *\/\n\tpublic function render_admin_ui() {\n\t\t$table = $this->get_list_table();\n\t\t$table->display_page();\n\t}\n\n\t\/**\n\t * Get the admin UI object and process any requested actions.\n\t *\n\t * @return ActionScheduler_ListTable\n\t *\/\n\tprotected function get_list_table() {\n\t\tif ( null === $this->list_table ) {\n\t\t\t$this->list_table = new ActionScheduler_ListTable( ActionScheduler::store(), ActionScheduler::logger(), ActionScheduler::runner() );\n\t\t\t$this->list_table->process_actions();\n\t\t}\n\n\t\treturn $this->list_table;\n\t}\n\n\t\/**\n\t * Action: admin_notices\n\t *\n\t * Maybe check past-due actions, and print notice.\n\t *\n\t * @uses $this->check_pastdue_actions()\n\t *\/\n\tpublic function maybe_check_pastdue_actions() {\n\n\t\t\/\/ Filter to prevent checking actions (ex: inappropriate user).\n\t\tif ( ! apply_filters( 'action_scheduler_check_pastdue_actions', current_user_can( 'manage_options' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Get last check transient.\n\t\t$last_check = get_transient( 'action_scheduler_last_pastdue_actions_check' );\n\n\t\t\/\/ If transient exists, we're within interval, so bail.\n\t\tif ( ! empty( $last_check ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Perform the check.\n\t\t$this->check_pastdue_actions();\n\t}\n\n\t\/**\n\t * Check past-due actions, and print notice.\n\t *\/\n\tprotected function check_pastdue_actions() {\n\n\t\t\/\/ Set thresholds.\n\t\t$threshold_seconds = (int) apply_filters( 'action_scheduler_pastdue_actions_seconds', DAY_IN_SECONDS );\n\t\t$threshold_min     = (int) apply_filters( 'action_scheduler_pastdue_actions_min', 1 );\n\n\t\t\/\/ Set fallback value for past-due actions count.\n\t\t$num_pastdue_actions = 0;\n\n\t\t\/\/ Allow third-parties to preempt the default check logic.\n\t\t$check = apply_filters( 'action_scheduler_pastdue_actions_check_pre', null );\n\n\t\t\/\/ If no third-party preempted and there are no past-due actions, return early.\n\t\tif ( ! is_null( $check ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t\/\/ Scheduled actions query arguments.\n\t\t$query_args = array(\n\t\t\t'date'     => as_get_datetime_object( time() - $threshold_seconds ),\n\t\t\t'status'   => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t'per_page' => $threshold_min,\n\t\t);\n\n\t\t\/\/ If no third-party preempted, run default check.\n\t\tif ( is_null( $check ) ) {\n\t\t\t$store               = ActionScheduler_Store::instance();\n\t\t\t$num_pastdue_actions = (int) $store->query_actions( $query_args, 'count' );\n\n\t\t\t\/\/ Check if past-due actions count is greater than or equal to threshold.\n\t\t\t$check = ( $num_pastdue_actions >= $threshold_min );\n\t\t\t$check = (bool) apply_filters( 'action_scheduler_pastdue_actions_check', $check, $num_pastdue_actions, $threshold_seconds, $threshold_min );\n\t\t}\n\n\t\t\/\/ If check failed, set transient and abort.\n\t\tif ( ! boolval( $check ) ) {\n\t\t\t$interval = apply_filters( 'action_scheduler_pastdue_actions_check_interval', round( $threshold_seconds \/ 4 ), $threshold_seconds );\n\t\t\tset_transient( 'action_scheduler_last_pastdue_actions_check', time(), $interval );\n\n\t\t\treturn;\n\t\t}\n\n\t\t$actions_url = add_query_arg(\n\t\t\tarray(\n\t\t\t\t'page'   => 'action-scheduler',\n\t\t\t\t'status' => 'past-due',\n\t\t\t\t'order'  => 'asc',\n\t\t\t),\n\t\t\tadmin_url( 'tools.php' )\n\t\t);\n\n\t\t\/\/ Print notice.\n\t\techo '<div class=\"notice notice-warning\"><p>';\n\t\tprintf(\n\t\t\twp_kses(\n\t\t\t\t\/\/ translators: 1) is the number of affected actions, 2) is a link to an admin screen.\n\t\t\t\t_n(\n\t\t\t\t\t'<strong>Action Scheduler:<\/strong> %1$d <a href=\"%2$s\">past-due action<\/a> found; something may be wrong. <a href=\"https:\/\/actionscheduler.org\/faq\/#my-site-has-past-due-actions-what-can-i-do\" target=\"_blank\">Read documentation &raquo;<\/a>',\n\t\t\t\t\t'<strong>Action Scheduler:<\/strong> %1$d <a href=\"%2$s\">past-due actions<\/a> found; something may be wrong. <a href=\"https:\/\/actionscheduler.org\/faq\/#my-site-has-past-due-actions-what-can-i-do\" target=\"_blank\">Read documentation &raquo;<\/a>',\n\t\t\t\t\t$num_pastdue_actions,\n\t\t\t\t\t'action-scheduler'\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'strong' => array(),\n\t\t\t\t\t'a'      => array(\n\t\t\t\t\t\t'href'   => true,\n\t\t\t\t\t\t'target' => true,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t),\n\t\t\tabsint( $num_pastdue_actions ),\n\t\t\tesc_attr( esc_url( $actions_url ) )\n\t\t);\n\t\techo '<\/p><\/div>';\n\n\t\t\/\/ Facilitate third-parties to evaluate and print notices.\n\t\tdo_action( 'action_scheduler_pastdue_actions_extra_notices', $query_args );\n\t}\n\n\t\/**\n\t * Provide more information about the screen and its data in the help tab.\n\t *\/\n\tpublic function add_help_tabs() {\n\t\t$screen = get_current_screen();\n\n\t\tif ( ! $screen || self::$screen_id !== $screen->id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$as_version       = ActionScheduler_Versions::instance()->latest_version();\n\t\t$as_source        = ActionScheduler_SystemInformation::active_source();\n\t\t$as_source_path   = ActionScheduler_SystemInformation::active_source_path();\n\t\t$as_source_markup = sprintf( '<code>%s<\/code>', esc_html( $as_source_path ) );\n\n\t\tif ( ! empty( $as_source ) ) {\n\t\t\t$as_source_markup = sprintf(\n\t\t\t\t'%s: <abbr title=\"%s\">%s<\/abbr>',\n\t\t\t\tucfirst( $as_source['type'] ),\n\t\t\t\tesc_attr( $as_source_path ),\n\t\t\t\tesc_html( $as_source['name'] )\n\t\t\t);\n\t\t}\n\n\t\t$screen->add_help_tab(\n\t\t\tarray(\n\t\t\t\t'id'      => 'action_scheduler_about',\n\t\t\t\t'title'   => __( 'About', 'action-scheduler' ),\n\t\t\t\t'content' =>\n\t\t\t\t\t\/\/ translators: %s is the Action Scheduler version.\n\t\t\t\t\t'<h2>' . sprintf( __( 'About Action Scheduler %s', 'action-scheduler' ), $as_version ) . '<\/h2>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\t__( 'Action Scheduler is a scalable, traceable job queue for background processing large sets of actions. Action Scheduler works by triggering an action hook to run at some time in the future. Scheduled actions can also be scheduled to run on a recurring schedule.', 'action-scheduler' ) .\n\t\t\t\t\t'<\/p>' .\n\t\t\t\t\t'<h3>' . esc_html__( 'Source', 'action-scheduler' ) . '<\/h3>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\tesc_html__( 'Action Scheduler is currently being loaded from the following location. This can be useful when debugging, or if requested by the support team.', 'action-scheduler' ) .\n\t\t\t\t\t'<\/p>' .\n\t\t\t\t\t'<p>' . $as_source_markup . '<\/p>' .\n\t\t\t\t\t'<h3>' . esc_html__( 'WP CLI', 'action-scheduler' ) . '<\/h3>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\/* translators: %1$s is WP CLI command (not translatable) *\/\n\t\t\t\t\t\t\tesc_html__( 'WP CLI commands are available: execute %1$s for a list of available commands.', 'action-scheduler' ),\n\t\t\t\t\t\t\t'<code>wp help action-scheduler<\/code>'\n\t\t\t\t\t\t) .\n\t\t\t\t\t'<\/p>',\n\t\t\t)\n\t\t);\n\n\t\t$screen->add_help_tab(\n\t\t\tarray(\n\t\t\t\t'id'      => 'action_scheduler_columns',\n\t\t\t\t'title'   => __( 'Columns', 'action-scheduler' ),\n\t\t\t\t'content' =>\n\t\t\t\t\t'<h2>' . __( 'Scheduled Action Columns', 'action-scheduler' ) . '<\/h2>' .\n\t\t\t\t\t'<ul>' .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Hook', 'action-scheduler' ), __( 'Name of the action hook that will be triggered.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Status', 'action-scheduler' ), __( 'Action statuses are Pending, Complete, Canceled, Failed', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Arguments', 'action-scheduler' ), __( 'Optional data array passed to the action hook.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Group', 'action-scheduler' ), __( 'Optional action group.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Recurrence', 'action-scheduler' ), __( 'The action\\'s schedule frequency.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Scheduled', 'action-scheduler' ), __( 'The date\/time the action is\/was scheduled to run.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s<\/strong>: %2$s<\/li>', __( 'Log', 'action-scheduler' ), __( 'Activity log for the action.', 'action-scheduler' ) ) .\n\t\t\t\t\t'<\/ul>',\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_RecurringActionScheduler.php","ext":"php","size":3123,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_RecurringActionScheduler\n *\n * This class ensures that the `action_scheduler_ensure_recurring_actions` hook is triggered on a daily interval. This\n * simplifies the process for other plugins to register their recurring actions without requiring each plugin to query\n * or schedule actions independently on every request.\n *\/\nclass ActionScheduler_RecurringActionScheduler {\n\n\t\/**\n\t * @var string The hook of the scheduled recurring action that is run to trigger the\n\t *      `action_scheduler_ensure_recurring_actions` hook that plugins should use.  We can't directly have the\n\t *      scheduled action hook be the hook plugins should use because the actions will show as failed if no plugin\n\t *      was actively hooked into it.\n\t *\/\n\tprivate const RUN_SCHEDULED_RECURRING_ACTIONS_HOOK = 'action_scheduler_run_recurring_actions_schedule_hook';\n\n\t\/**\n\t * Initialize the instance.  Should only be run on a single instance per request.\n\t *\n\t * @return void\n\t *\/\n\tpublic function init(): void {\n\t\tadd_action( self::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK, array( $this, 'run_recurring_scheduler_hook' ) );\n\t\tif ( is_admin() && ( ! defined( 'DOING_AJAX' ) || ! DOING_AJAX ) ) {\n\t\t\tadd_action( 'action_scheduler_init', array( $this, 'schedule_recurring_scheduler_hook' ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Schedule the recurring `action_scheduler_ensure_recurring_actions` action if not already scheduled.\n\t *\n\t * @return void\n\t *\/\n\tpublic function schedule_recurring_scheduler_hook(): void {\n\t\tif ( false === wp_cache_get( 'as_is_ensure_recurring_actions_scheduled' ) ) {\n\t\t\tif ( ! as_has_scheduled_action( self::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK ) ) {\n\t\t\t\tas_schedule_recurring_action(\n\t\t\t\t\ttime(),\n\t\t\t\t\tDAY_IN_SECONDS,\n\t\t\t\t\tself::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK,\n\t\t\t\t\t[],\n\t\t\t\t\t'ActionScheduler',\n\t\t\t\t\ttrue,\n\t\t\t\t\t20\n\t\t\t\t);\n\t\t\t}\n\t\t\twp_cache_set( 'as_is_ensure_recurring_actions_scheduled', true, HOUR_IN_SECONDS );\n\t\t}\n\t}\n\n\t\/**\n\t * Trigger the hook to allow other plugins to schedule their recurring actions.\n\t *\n\t * @return void\n\t *\/\n\tpublic function run_recurring_scheduler_hook(): void {\n\t\t\/**\n\t\t * Fires to allow extensions to verify and ensure their recurring actions are scheduled.\n\t\t *\n\t\t * This action is scheduled to trigger once every 24 hrs for the purpose of having 3rd party plugins verify that\n\t\t * any previously scheduled recurring actions are still scheduled. Because recurring actions could stop getting\n\t\t * rescheduled by default due to excessive failures, database issues, or other interruptions, extensions can use\n\t\t * this hook to check for the existence of their recurring actions and reschedule them if necessary.\n\t\t *\n\t\t * Example usage:\n\t\t *\n\t\t * add_action('action_scheduler_ensure_recurring_actions', function() {\n\t\t *     \/\/ Check if the recurring action is scheduled, and reschedule if missing.\n\t\t *     if ( ! as_has_scheduled_action('my_recurring_action') ) {\n\t\t *         as_schedule_recurring_action( time(), HOUR_IN_SECONDS, 'my_recurring_action' );\n\t\t *     }\n\t\t * });\n\t\t *\n\t\t * @since 3.9.3\n\t\t *\/\n\t\tdo_action( 'action_scheduler_ensure_recurring_actions' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_QueueRunner.php","ext":"php","size":9720,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_QueueRunner\n *\/\nclass ActionScheduler_QueueRunner extends ActionScheduler_Abstract_QueueRunner {\n\tconst WP_CRON_HOOK = 'action_scheduler_run_queue';\n\n\tconst WP_CRON_SCHEDULE = 'every_minute';\n\n\t\/**\n\t * ActionScheduler_AsyncRequest_QueueRunner instance.\n\t *\n\t * @var ActionScheduler_AsyncRequest_QueueRunner\n\t *\/\n\tprotected $async_request;\n\n\t\/**\n\t * ActionScheduler_QueueRunner instance.\n\t *\n\t * @var ActionScheduler_QueueRunner\n\t *\/\n\tprivate static $runner = null;\n\n\t\/**\n\t * Number of processed actions.\n\t *\n\t * @var int\n\t *\/\n\tprivate $processed_actions_count = 0;\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_QueueRunner\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$runner ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_queue_runner_class', 'ActionScheduler_QueueRunner' );\n\t\t\tself::$runner = new $class();\n\t\t}\n\n\t\treturn self::$runner;\n\t}\n\n\t\/**\n\t * ActionScheduler_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null                    $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null        $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null             $cleaner Cleaner object.\n\t * @param ActionScheduler_AsyncRequest_QueueRunner|null $async_request Async request runner object.\n\t *\/\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null, ?ActionScheduler_AsyncRequest_QueueRunner $async_request = null ) {\n\t\tparent::__construct( $store, $monitor, $cleaner );\n\n\t\tif ( is_null( $async_request ) ) {\n\t\t\t$async_request = new ActionScheduler_AsyncRequest_QueueRunner( $this->store );\n\t\t}\n\n\t\t$this->async_request = $async_request;\n\t}\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\n\t\tadd_filter( 'cron_schedules', array( self::instance(), 'add_wp_cron_schedule' ) ); \/\/ phpcs:ignore WordPress.WP.CronInterval.CronSchedulesInterval\n\n\t\t\/\/ Check for and remove any WP Cron hook scheduled by Action Scheduler < 3.0.0, which didn't include the $context param.\n\t\t$next_timestamp = wp_next_scheduled( self::WP_CRON_HOOK );\n\t\tif ( $next_timestamp ) {\n\t\t\twp_unschedule_event( $next_timestamp, self::WP_CRON_HOOK );\n\t\t}\n\n\t\t$cron_context = array( 'WP Cron' );\n\n\t\tif ( ! wp_next_scheduled( self::WP_CRON_HOOK, $cron_context ) ) {\n\t\t\t$schedule = apply_filters( 'action_scheduler_run_schedule', self::WP_CRON_SCHEDULE );\n\t\t\twp_schedule_event( time(), $schedule, self::WP_CRON_HOOK, $cron_context );\n\t\t}\n\n\t\tadd_action( self::WP_CRON_HOOK, array( self::instance(), 'run' ) );\n\t\t$this->hook_dispatch_async_request();\n\t}\n\n\t\/**\n\t * Hook check for dispatching an async request.\n\t *\/\n\tpublic function hook_dispatch_async_request() {\n\t\tadd_action( 'shutdown', array( $this, 'maybe_dispatch_async_request' ) );\n\t}\n\n\t\/**\n\t * Unhook check for dispatching an async request.\n\t *\/\n\tpublic function unhook_dispatch_async_request() {\n\t\tremove_action( 'shutdown', array( $this, 'maybe_dispatch_async_request' ) );\n\t}\n\n\t\/**\n\t * Check if we should dispatch an async request to process actions.\n\t *\n\t * This method is attached to 'shutdown', so is called frequently. To avoid slowing down\n\t * the site, it mitigates the work performed in each request by:\n\t * 1. checking if it's in the admin context and then\n\t * 2. haven't run on the 'shutdown' hook within the lock time (60 seconds by default)\n\t * 3. haven't exceeded the number of allowed batches.\n\t *\n\t * The order of these checks is important, because they run from a check on a value:\n\t * 1. in memory - is_admin() maps to $GLOBALS or the WP_ADMIN constant\n\t * 2. in memory - transients use autoloaded options by default\n\t * 3. from a database query - has_maximum_concurrent_batches() run the query\n\t *    $this->store->get_claim_count() to find the current number of claims in the DB.\n\t *\n\t * If all of these conditions are met, then we request an async runner check whether it\n\t * should dispatch a request to process pending actions.\n\t *\/\n\tpublic function maybe_dispatch_async_request() {\n\t\t\/\/ Only start an async queue at most once every 60 seconds.\n\t\tif (\n\t\t\tis_admin()\n\t\t\t&& ! ActionScheduler::lock()->is_locked( 'async-request-runner' )\n\t\t\t&& ActionScheduler::lock()->set( 'async-request-runner' )\n\t\t) {\n\t\t\t$this->async_request->maybe_dispatch();\n\t\t}\n\t}\n\n\t\/**\n\t * Process actions in the queue. Attached to self::WP_CRON_HOOK i.e. 'action_scheduler_run_queue'\n\t *\n\t * The $context param of this method defaults to 'WP Cron', because prior to Action Scheduler 3.0.0\n\t * that was the only context in which this method was run, and the self::WP_CRON_HOOK hook had no context\n\t * passed along with it. New code calling this method directly, or by triggering the self::WP_CRON_HOOK,\n\t * should set a context as the first parameter. For an example of this, refer to the code seen in\n\t *\n\t * @see ActionScheduler_AsyncRequest_QueueRunner::handle()\n\t *\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t *\/\n\tpublic function run( $context = 'WP Cron' ) {\n\t\tActionScheduler_Compatibility::raise_memory_limit();\n\t\tActionScheduler_Compatibility::raise_time_limit( $this->get_time_limit() );\n\t\tdo_action( 'action_scheduler_before_process_queue' );\n\t\t$this->run_cleanup();\n\n\t\t$this->processed_actions_count = 0;\n\t\tif ( false === $this->has_maximum_concurrent_batches() ) {\n\t\t\tdo {\n\t\t\t\t$batch_size                     = apply_filters( 'action_scheduler_queue_runner_batch_size', 25 );\n\t\t\t\t$processed_actions_in_batch     = $this->do_batch( $batch_size, $context );\n\t\t\t\t$this->processed_actions_count += $processed_actions_in_batch;\n\t\t\t} while ( $processed_actions_in_batch > 0 && ! $this->batch_limits_exceeded( $this->processed_actions_count ) ); \/\/ keep going until we run out of actions, time, or memory.\n\t\t}\n\n\t\tdo_action( 'action_scheduler_after_process_queue' );\n\t\treturn $this->processed_actions_count;\n\t}\n\n\t\/**\n\t * Process a batch of actions pending in the queue.\n\t *\n\t * Actions are processed by claiming a set of pending actions then processing each one until either the batch\n\t * size is completed, or memory or time limits are reached, defined by @see $this->batch_limits_exceeded().\n\t *\n\t * @param int    $size The maximum number of actions to process in the batch.\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *                        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t *\/\n\tprotected function do_batch( $size = 100, $context = '' ) {\n\t\t$claim = $this->store->stake_claim( $size );\n\t\t$this->monitor->attach( $claim );\n\t\t$processed_actions = 0;\n\n\t\tforeach ( $claim->get_actions() as $action_id ) {\n\t\t\t\/\/ bail if we lost the claim.\n\t\t\tif ( ! in_array( $action_id, $this->store->find_actions_by_claim_id( $claim->get_id() ), true ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$this->process_action( $action_id, $context );\n\t\t\t$processed_actions++;\n\n\t\t\tif ( $this->batch_limits_exceeded( $processed_actions + $this->processed_actions_count ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$this->store->release_claim( $claim );\n\t\t$this->monitor->detach();\n\t\t$this->clear_caches();\n\t\treturn $processed_actions;\n\t}\n\n\t\/**\n\t * Flush the cache if possible (intended for use after a batch of actions has been processed).\n\t *\n\t * This is useful because running large batches can eat up memory and because invalid data can accrue in the\n\t * runtime cache, which may lead to unexpected results.\n\t *\/\n\tprotected function clear_caches() {\n\t\t\/*\n\t\t * Calling wp_cache_flush_runtime() lets us clear the runtime cache without invalidating the external object\n\t\t * cache, so we will always prefer this method (as compared to calling wp_cache_flush()) when it is available.\n\t\t *\n\t\t * However, this function was only introduced in WordPress 6.0. Additionally, the preferred way of detecting if\n\t\t * it is supported changed in WordPress 6.1 so we use two different methods to decide if we should utilize it.\n\t\t *\/\n\t\t$flushing_runtime_cache_explicitly_supported = function_exists( 'wp_cache_supports' ) && wp_cache_supports( 'flush_runtime' );\n\t\t$flushing_runtime_cache_implicitly_supported = ! function_exists( 'wp_cache_supports' ) && function_exists( 'wp_cache_flush_runtime' );\n\n\t\tif ( $flushing_runtime_cache_explicitly_supported || $flushing_runtime_cache_implicitly_supported ) {\n\t\t\twp_cache_flush_runtime();\n\t\t} elseif (\n\t\t\t! wp_using_ext_object_cache()\n\t\t\t\/**\n\t\t\t * When an external object cache is in use, and when wp_cache_flush_runtime() is not available, then\n\t\t\t * normally the cache will not be flushed after processing a batch of actions (to avoid a performance\n\t\t\t * penalty for other processes).\n\t\t\t *\n\t\t\t * This filter makes it possible to override this behavior and always flush the cache, even if an external\n\t\t\t * object cache is in use.\n\t\t\t *\n\t\t\t * @since 1.0\n\t\t\t *\n\t\t\t * @param bool $flush_cache If the cache should be flushed.\n\t\t\t *\/\n\t\t\t|| apply_filters( 'action_scheduler_queue_runner_flush_cache', false )\n\t\t) {\n\t\t\twp_cache_flush();\n\t\t}\n\t}\n\n\t\/**\n\t * Add schedule to WP cron.\n\t *\n\t * @param array<string, array<string, int|string>> $schedules Schedules.\n\t * @return array<string, array<string, int|string>>\n\t *\/\n\tpublic function add_wp_cron_schedule( $schedules ) {\n\t\t$schedules['every_minute'] = array(\n\t\t\t'interval' => 60, \/\/ in seconds.\n\t\t\t'display'  => __( 'Every minute', 'action-scheduler' ),\n\t\t);\n\n\t\treturn $schedules;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_SystemInformation.php","ext":"php","size":2497,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Provides information about active and registered instances of Action Scheduler.\n *\/\nclass ActionScheduler_SystemInformation {\n\t\/**\n\t * Returns information about the plugin or theme which contains the current active version\n\t * of Action Scheduler.\n\t *\n\t * If this cannot be determined, or if Action Scheduler is being loaded via some other\n\t * method, then it will return an empty array. Otherwise, if populated, the array will\n\t * look like the following:\n\t *\n\t *     [\n\t *         'type' => 'plugin', # or 'theme'\n\t *         'name' => 'Name',\n\t *     ]\n\t *\n\t * @return array\n\t *\/\n\tpublic static function active_source(): array {\n\t\t$plugins      = get_plugins();\n\t\t$plugin_files = array_keys( $plugins );\n\n\t\tforeach ( $plugin_files as $plugin_file ) {\n\t\t\t$plugin_path = trailingslashit( WP_PLUGIN_DIR ) . dirname( $plugin_file );\n\t\t\t$plugin_file = trailingslashit( WP_PLUGIN_DIR ) . $plugin_file;\n\n\t\t\tif ( 0 !== strpos( dirname( __DIR__ ), $plugin_path ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$plugin_data = get_plugin_data( $plugin_file );\n\n\t\t\tif ( ! is_array( $plugin_data ) || empty( $plugin_data['Name'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'type' => 'plugin',\n\t\t\t\t'name' => $plugin_data['Name'],\n\t\t\t);\n\t\t}\n\n\t\t$themes = (array) search_theme_directories();\n\n\t\tforeach ( $themes as $slug => $data ) {\n\t\t\t$needle = trailingslashit( $data['theme_root'] ) . $slug . '\/';\n\n\t\t\tif ( 0 !== strpos( __FILE__, $needle ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$theme = wp_get_theme( $slug );\n\n\t\t\tif ( ! is_object( $theme ) || ! is_a( $theme, \\WP_Theme::class ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'type' => 'theme',\n\t\t\t\t\/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\t\t\t'name' => $theme->Name,\n\t\t\t);\n\t\t}\n\n\t\treturn array();\n\t}\n\n\t\/**\n\t * Returns the directory path for the currently active installation of Action Scheduler.\n\t *\n\t * @return string\n\t *\/\n\tpublic static function active_source_path(): string {\n\t\treturn trailingslashit( dirname( __DIR__ ) );\n\t}\n\n\t\/**\n\t * Get registered sources.\n\t *\n\t * It is not always possible to obtain this information. For instance, if earlier versions (<=3.9.0) of\n\t * Action Scheduler register themselves first, then the necessary data about registered sources will\n\t * not be available.\n\t *\n\t * @return array<string, string>\n\t *\/\n\tpublic static function get_sources() {\n\t\t$versions = ActionScheduler_Versions::instance();\n\t\treturn method_exists( $versions, 'get_sources' ) ? $versions->get_sources() : array();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_Exception.php","ext":"php","size":207,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * ActionScheduler Exception Interface.\n *\n * Facilitates catching Exceptions unique to Action Scheduler.\n *\n * @package ActionScheduler\n * @since 2.1.0\n *\/\ninterface ActionScheduler_Exception {}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/ActionScheduler_DateTime.php","ext":"php","size":2060,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * ActionScheduler DateTime class.\n *\n * This is a custom extension to DateTime that\n *\/\nclass ActionScheduler_DateTime extends DateTime {\n\n\t\/**\n\t * UTC offset.\n\t *\n\t * Only used when a timezone is not set. When a timezone string is\n\t * used, this will be set to 0.\n\t *\n\t * @var int\n\t *\/\n\tprotected $utcOffset = 0; \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase\n\n\t\/**\n\t * Get the unix timestamp of the current object.\n\t *\n\t * Missing in PHP 5.2 so just here so it can be supported consistently.\n\t *\n\t * @return int\n\t *\/\n\t#[\\ReturnTypeWillChange]\n\tpublic function getTimestamp() {\n\t\treturn method_exists( 'DateTime', 'getTimestamp' ) ? parent::getTimestamp() : $this->format( 'U' );\n\t}\n\n\t\/**\n\t * Set the UTC offset.\n\t *\n\t * This represents a fixed offset instead of a timezone setting.\n\t *\n\t * @param string|int $offset UTC offset value.\n\t *\/\n\tpublic function setUtcOffset( $offset ) {\n\t\t$this->utcOffset = intval( $offset ); \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t}\n\n\t\/**\n\t * Returns the timezone offset.\n\t *\n\t * @return int\n\t * @link http:\/\/php.net\/manual\/en\/datetime.getoffset.php\n\t *\/\n\t#[\\ReturnTypeWillChange]\n\tpublic function getOffset() {\n\t\treturn $this->utcOffset ? $this->utcOffset : parent::getOffset(); \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t}\n\n\t\/**\n\t * Set the TimeZone associated with the DateTime\n\t *\n\t * @param DateTimeZone $timezone Timezone object.\n\t *\n\t * @return static\n\t * @link http:\/\/php.net\/manual\/en\/datetime.settimezone.php\n\t *\/\n\t#[\\ReturnTypeWillChange]\n\tpublic function setTimezone( $timezone ) {\n\t\t$this->utcOffset = 0; \/\/ phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\tparent::setTimezone( $timezone );\n\n\t\treturn $this;\n\t}\n\n\t\/**\n\t * Get the timestamp with the WordPress timezone offset added or subtracted.\n\t *\n\t * @since  3.0.0\n\t * @return int\n\t *\/\n\tpublic function getOffsetTimestamp() {\n\t\treturn $this->getTimestamp() + $this->getOffset();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_IntervalSchedule.php","ext":"php","size":2633,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_IntervalSchedule\n *\/\nclass ActionScheduler_IntervalSchedule extends ActionScheduler_Abstract_RecurringSchedule implements ActionScheduler_Schedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $start_timestamp = null;\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $interval_in_seconds = null;\n\n\t\/**\n\t * Calculate when this schedule should start after a given date & time using\n\t * the number of seconds between recurrences.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime\n\t *\/\n\tprotected function calculate_next( DateTime $after ) {\n\t\t$after->modify( '+' . (int) $this->get_recurrence() . ' seconds' );\n\t\treturn $after;\n\t}\n\n\t\/**\n\t * Schedule interval in seconds.\n\t *\n\t * @return int\n\t *\/\n\tpublic function interval_in_seconds() {\n\t\t_deprecated_function( __METHOD__, '3.0.0', '(int)ActionScheduler_Abstract_RecurringSchedule::get_recurrence()' );\n\t\treturn (int) $this->get_recurrence();\n\t}\n\n\t\/**\n\t * Serialize interval schedules with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, recurring schedules used different property names to\n\t * refer to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * possibility of infinite loops if downgrading to Action Scheduler < 3.0.0, we need to\n\t * also store the data with the old property names so if it's unserialized in AS < 3.0,\n\t * the schedule doesn't end up with a null\/false\/0 recurrence.\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->start_timestamp     = $this->scheduled_timestamp;\n\t\t$this->interval_in_seconds = $this->recurrence;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'start_timestamp',\n\t\t\t\t'interval_in_seconds',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize interval schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * For more background, @see ActionScheduler_Abstract_RecurringSchedule::__wakeup().\n\t *\/\n\tpublic function __wakeup() {\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->start_timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->start_timestamp;\n\t\t\tunset( $this->start_timestamp );\n\t\t}\n\n\t\tif ( is_null( $this->recurrence ) && ! is_null( $this->interval_in_seconds ) ) {\n\t\t\t$this->recurrence = $this->interval_in_seconds;\n\t\t\tunset( $this->interval_in_seconds );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_CanceledSchedule.php","ext":"php","size":1647,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_SimpleSchedule\n *\/\nclass ActionScheduler_CanceledSchedule extends ActionScheduler_SimpleSchedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $timestamp = null;\n\n\t\/**\n\t * Calculate when the next instance of this schedule would run based on a given date & time.\n\t *\n\t * @param DateTime $after Timestamp.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function calculate_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Cancelled actions should never have a next schedule, even if get_next()\n\t * is called with $after < $this->scheduled_date.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Action is not recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring() {\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Unserialize recurring schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To maintain backward\n\t * compatibility with schedules serialized and stored prior to 3.0, we need to correctly\n\t * map the old property names with matching visibility.\n\t *\/\n\tpublic function __wakeup() {\n\t\tif ( ! is_null( $this->timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->timestamp;\n\t\t\tunset( $this->timestamp );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_NullSchedule.php","ext":"php","size":709,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_NullSchedule\n *\/\nclass ActionScheduler_NullSchedule extends ActionScheduler_SimpleSchedule {\n\n\t\/**\n\t * DateTime instance.\n\t *\n\t * @var DateTime|null\n\t *\/\n\tprotected $scheduled_date;\n\n\t\/**\n\t * Make the $date param optional and default to null.\n\t *\n\t * @param null|DateTime $date The date & time to run the action.\n\t *\/\n\tpublic function __construct( ?DateTime $date = null ) {\n\t\t$this->scheduled_date = null;\n\t}\n\n\t\/**\n\t * This schedule has no scheduled DateTime, so we need to override the parent __sleep().\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\t\treturn array();\n\t}\n\n\t\/**\n\t * Wakeup.\n\t *\/\n\tpublic function __wakeup() {\n\t\t$this->scheduled_date = null;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_CronSchedule.php","ext":"php","size":3831,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_CronSchedule\n *\/\nclass ActionScheduler_CronSchedule extends ActionScheduler_Abstract_RecurringSchedule implements ActionScheduler_Schedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $start_timestamp = null;\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t *\/\n\tprivate $cron = null;\n\n\t\/**\n\t * Wrapper for parent constructor to accept a cron expression string and map it to a CronExpression for this\n\t * objects $recurrence property.\n\t *\n\t * @param DateTime              $start The date & time to run the action at or after. If $start aligns with the CronSchedule passed via $recurrence, it will be used. If it does not align, the first matching date after it will be used.\n\t * @param CronExpression|string $recurrence The CronExpression used to calculate the schedule's next instance.\n\t * @param DateTime|null         $first (Optional) The date & time the first instance of this interval schedule ran. Default null, meaning this is the first instance.\n\t *\/\n\tpublic function __construct( DateTime $start, $recurrence, ?DateTime $first = null ) {\n\t\tif ( ! is_a( $recurrence, 'CronExpression' ) ) {\n\t\t\t$recurrence = CronExpression::factory( $recurrence );\n\t\t}\n\n\t\t\/\/ For backward compatibility, we need to make sure the date is set to the first matching cron date, not whatever date is passed in. Importantly, by passing true as the 3rd param, if $start matches the cron expression, then it will be used. This was previously handled in the now deprecated next() method.\n\t\t$date = $recurrence->getNextRunDate( $start, 0, true );\n\n\t\t\/\/ parent::__construct() will set this to $date by default, but that may be different to $start now.\n\t\t$first = empty( $first ) ? $start : $first;\n\n\t\tparent::__construct( $date, $recurrence, $first );\n\t}\n\n\t\/**\n\t * Calculate when an instance of this schedule would start based on a given\n\t * date & time using its the CronExpression.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime\n\t *\/\n\tprotected function calculate_next( DateTime $after ) {\n\t\treturn $this->recurrence->getNextRunDate( $after, 0, false );\n\t}\n\n\t\/**\n\t * Get the schedule's recurrence.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_recurrence() {\n\t\treturn strval( $this->recurrence );\n\t}\n\n\t\/**\n\t * Serialize cron schedules with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, recurring schedules used different property names to\n\t * refer to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * possibility of infinite loops if downgrading to Action Scheduler < 3.0.0, we need to\n\t * also store the data with the old property names so if it's unserialized in AS < 3.0,\n\t * the schedule doesn't end up with a null recurrence.\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->start_timestamp = $this->scheduled_timestamp;\n\t\t$this->cron            = $this->recurrence;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'start_timestamp',\n\t\t\t\t'cron',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize cron schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * For more background, @see ActionScheduler_Abstract_RecurringSchedule::__wakeup().\n\t *\/\n\tpublic function __wakeup() {\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->start_timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->start_timestamp;\n\t\t\tunset( $this->start_timestamp );\n\t\t}\n\n\t\tif ( is_null( $this->recurrence ) && ! is_null( $this->cron ) ) {\n\t\t\t$this->recurrence = $this->cron;\n\t\t\tunset( $this->cron );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_Schedule.php","ext":"php","size":456,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Schedule\n *\/\ninterface ActionScheduler_Schedule {\n\t\/**\n\t * Get the date & time this schedule was created to run, or calculate when it should be run\n\t * after a given date & time.\n\t *\n\t * @param null|DateTime $after Timestamp.\n\t * @return DateTime|null\n\t *\/\n\tpublic function next( ?DateTime $after = null );\n\n\t\/**\n\t * Identify the schedule as (not) recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring();\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/schedules\/ActionScheduler_SimpleSchedule.php","ext":"php","size":2367,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_SimpleSchedule\n *\/\nclass ActionScheduler_SimpleSchedule extends ActionScheduler_Abstract_Schedule {\n\n\t\/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null|DateTime\n\t *\/\n\tprivate $timestamp = null;\n\n\t\/**\n\t * Calculate when this schedule should start after a given date & time using\n\t * the number of seconds between recurrences.\n\t *\n\t * @param DateTime $after Timestamp.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function calculate_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t\/**\n\t * Schedule is not recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring() {\n\t\treturn false;\n\t}\n\n\t\/**\n\t * Serialize schedule with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * scheduled date for single actions always being seen as \"now\" if downgrading to\n\t * Action Scheduler < 3.0.0, we need to also store the data with the old property names\n\t * so if it's unserialized in AS < 3.0, the schedule doesn't end up with a null recurrence.\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->timestamp = $this->scheduled_timestamp;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'timestamp',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize recurring schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To maintain backward\n\t * compatibility with schedules serialized and stored prior to 3.0, we need to correctly\n\t * map the old property names with matching visibility.\n\t *\/\n\tpublic function __wakeup() {\n\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->timestamp;\n\t\t\tunset( $this->timestamp );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_QueueRunner.php","ext":"php","size":13770,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Abstract class with common Queue Cleaner functionality.\n *\/\nabstract class ActionScheduler_Abstract_QueueRunner extends ActionScheduler_Abstract_QueueRunner_Deprecated {\n\n\t\/**\n\t * ActionScheduler_QueueCleaner instance.\n\t *\n\t * @var ActionScheduler_QueueCleaner\n\t *\/\n\tprotected $cleaner;\n\n\t\/**\n\t * ActionScheduler_FatalErrorMonitor instance.\n\t *\n\t * @var ActionScheduler_FatalErrorMonitor\n\t *\/\n\tprotected $monitor;\n\n\t\/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprotected $store;\n\n\t\/**\n\t * The created time.\n\t *\n\t * Represents when the queue runner was constructed and used when calculating how long a PHP request has been running.\n\t * For this reason it should be as close as possible to the PHP request start time.\n\t *\n\t * @var int\n\t *\/\n\tprivate $created_time;\n\n\t\/**\n\t * ActionScheduler_Abstract_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null             $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null      $cleaner Cleaner object.\n\t *\/\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null ) {\n\n\t\t$this->created_time = microtime( true );\n\n\t\t$this->store   = $store ? $store : ActionScheduler_Store::instance();\n\t\t$this->monitor = $monitor ? $monitor : new ActionScheduler_FatalErrorMonitor( $this->store );\n\t\t$this->cleaner = $cleaner ? $cleaner : new ActionScheduler_QueueCleaner( $this->store );\n\t}\n\n\t\/**\n\t * Process an individual action.\n\t *\n\t * @param int    $action_id The action ID to process.\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *                        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @throws \\Exception When error running action.\n\t *\/\n\tpublic function process_action( $action_id, $context = '' ) {\n\t\t\/\/ Temporarily override the error handler while we process the current action.\n\t\t\/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_set_error_handler\n\t\tset_error_handler(\n\t\t\t\/**\n\t\t\t * Temporary error handler which can catch errors and convert them into exceptions. This facilitates more\n\t\t\t * robust error handling across all supported PHP versions.\n\t\t\t *\n\t\t\t * @throws Exception\n\t\t\t *\n\t\t\t * @param int    $type    Error level expressed as an integer.\n\t\t\t * @param string $message Error message.\n\t\t\t *\/\n\t\t\tfunction ( $type, $message ) {\n\t\t\t\tthrow new Exception( $message );\n\t\t\t},\n\t\t\tE_USER_ERROR | E_RECOVERABLE_ERROR\n\t\t);\n\n\t\t\/*\n\t\t * The nested try\/catch structure is required because we potentially need to convert thrown errors into\n\t\t * exceptions (and an exception thrown from a catch block cannot be caught by a later catch block in the *same*\n\t\t * structure).\n\t\t *\/\n\t\ttry {\n\t\t\ttry {\n\t\t\t\t$valid_action = true;\n\n\t\t\t\tdo_action( 'action_scheduler_before_execute', $action_id, $context );\n\n\t\t\t\tif ( ActionScheduler_Store::STATUS_PENDING !== $this->store->get_status( $action_id ) ) {\n\t\t\t\t\t$valid_action = false;\n\t\t\t\t\tdo_action( 'action_scheduler_execution_ignored', $action_id, $context );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdo_action( 'action_scheduler_begin_execute', $action_id, $context );\n\n\t\t\t\t$action = $this->store->fetch_action( $action_id );\n\t\t\t\t$this->store->log_execution( $action_id );\n\t\t\t\t$action->execute();\n\t\t\t\tdo_action( 'action_scheduler_after_execute', $action_id, $action, $context );\n\t\t\t\t$this->store->mark_complete( $action_id );\n\t\t\t} catch ( Throwable $e ) {\n\t\t\t\t\/\/ Throwable is defined when executing under PHP 7.0 and up. We convert it to an exception, for\n\t\t\t\t\/\/ compatibility with ActionScheduler_Logger.\n\t\t\t\tthrow new Exception( $e->getMessage(), $e->getCode(), $e );\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t\/\/ This catch block exists for compatibility with PHP 5.6.\n\t\t\t$this->handle_action_error( $action_id, $e, $context, $valid_action );\n\t\t} finally {\n\t\t\trestore_error_handler();\n\t\t}\n\n\t\tif ( isset( $action ) && is_a( $action, 'ActionScheduler_Action' ) && $action->get_schedule()->is_recurring() ) {\n\t\t\t$this->schedule_next_instance( $action, $action_id );\n\t\t}\n\t}\n\n\t\/**\n\t * Marks actions as either having failed execution or failed validation, as appropriate.\n\t *\n\t * @param int       $action_id    Action ID.\n\t * @param Exception $e            Exception instance.\n\t * @param string    $context      Execution context.\n\t * @param bool      $valid_action If the action is valid.\n\t *\n\t * @return void\n\t *\/\n\tprivate function handle_action_error( $action_id, $e, $context, $valid_action ) {\n\t\tif ( $valid_action ) {\n\t\t\t$this->store->mark_failure( $action_id );\n\t\t\t\/**\n\t\t\t * Runs when action execution fails.\n\t\t\t *\n\t\t\t * @param int       $action_id Action ID.\n\t\t\t * @param Exception $e         Exception instance.\n\t\t\t * @param string    $context   Execution context.\n\t\t\t *\/\n\t\t\tdo_action( 'action_scheduler_failed_execution', $action_id, $e, $context );\n\t\t} else {\n\t\t\t\/**\n\t\t\t * Runs when action validation fails.\n\t\t\t *\n\t\t\t * @param int       $action_id Action ID.\n\t\t\t * @param Exception $e         Exception instance.\n\t\t\t * @param string    $context   Execution context.\n\t\t\t *\/\n\t\t\tdo_action( 'action_scheduler_failed_validation', $action_id, $e, $context );\n\t\t}\n\t}\n\n\t\/**\n\t * Schedule the next instance of the action if necessary.\n\t *\n\t * @param ActionScheduler_Action $action Action.\n\t * @param int                    $action_id Action ID.\n\t *\/\n\tprotected function schedule_next_instance( ActionScheduler_Action $action, $action_id ) {\n\t\t\/\/ If a recurring action has been consistently failing, we may wish to stop rescheduling it.\n\t\tif (\n\t\t\tActionScheduler_Store::STATUS_FAILED === $this->store->get_status( $action_id )\n\t\t\t&& $this->recurring_action_is_consistently_failing( $action, $action_id )\n\t\t) {\n\t\t\tActionScheduler_Logger::instance()->log(\n\t\t\t\t$action_id,\n\t\t\t\t__( 'This action appears to be consistently failing. A new instance will not be scheduled.', 'action-scheduler' )\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tActionScheduler::factory()->repeat( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\tdo_action( 'action_scheduler_failed_to_schedule_next_instance', $action_id, $e, $action );\n\t\t}\n\t}\n\n\t\/**\n\t * Determine if the specified recurring action has been consistently failing.\n\t *\n\t * @param ActionScheduler_Action $action    The recurring action to be rescheduled.\n\t * @param int                    $action_id The ID of the recurring action.\n\t *\n\t * @return bool\n\t *\/\n\tprivate function recurring_action_is_consistently_failing( ActionScheduler_Action $action, $action_id ) {\n\t\t\/**\n\t\t * Controls the failure threshold for recurring actions.\n\t\t *\n\t\t * Before rescheduling a recurring action, we look at its status. If it failed, we then check if all of the most\n\t\t * recent actions (upto the threshold set by this filter) sharing the same hook have also failed: if they have,\n\t\t * that is considered consistent failure and a new instance of the action will not be scheduled.\n\t\t *\n\t\t * @param int $failure_threshold Number of actions of the same hook to examine for failure. Defaults to 5.\n\t\t *\/\n\t\t$consistent_failure_threshold = (int) apply_filters( 'action_scheduler_recurring_action_failure_threshold', 5 );\n\n\t\t\/\/ This query should find the earliest *failing* action (for the hook we are interested in) within our threshold.\n\t\t$query_args = array(\n\t\t\t'hook'         => $action->get_hook(),\n\t\t\t'status'       => ActionScheduler_Store::STATUS_FAILED,\n\t\t\t'date'         => date_create( 'now', timezone_open( 'UTC' ) )->format( 'Y-m-d H:i:s' ),\n\t\t\t'date_compare' => '<',\n\t\t\t'per_page'     => 1,\n\t\t\t'offset'       => $consistent_failure_threshold - 1,\n\t\t);\n\n\t\t$first_failing_action_id = $this->store->query_actions( $query_args );\n\n\t\t\/\/ If we didn't retrieve an action ID, then there haven't been enough failures for us to worry about.\n\t\tif ( empty( $first_failing_action_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t\/\/ Now let's fetch the first action (having the same hook) of *any status* within the same window.\n\t\tunset( $query_args['status'] );\n\t\t$first_action_id_with_the_same_hook = $this->store->query_actions( $query_args );\n\n\t\t\/**\n\t\t * If a recurring action is assessed as consistently failing, it will not be rescheduled. This hook provides a\n\t\t * way to observe and optionally override that assessment.\n\t\t *\n\t\t * @param bool                   $is_consistently_failing If the action is considered to be consistently failing.\n\t\t * @param ActionScheduler_Action $action                  The action being assessed.\n\t\t *\/\n\t\treturn (bool) apply_filters(\n\t\t\t'action_scheduler_recurring_action_is_consistently_failing',\n\t\t\t$first_action_id_with_the_same_hook === $first_failing_action_id,\n\t\t\t$action\n\t\t);\n\t}\n\n\t\/**\n\t * Run the queue cleaner.\n\t *\/\n\tprotected function run_cleanup() {\n\t\t$this->cleaner->clean( 10 * $this->get_time_limit() );\n\t}\n\n\t\/**\n\t * Get the number of concurrent batches a runner allows.\n\t *\n\t * @return int\n\t *\/\n\tpublic function get_allowed_concurrent_batches() {\n\t\treturn apply_filters( 'action_scheduler_queue_runner_concurrent_batches', 1 );\n\t}\n\n\t\/**\n\t * Check if the number of allowed concurrent batches is met or exceeded.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function has_maximum_concurrent_batches() {\n\t\treturn $this->store->get_claim_count() >= $this->get_allowed_concurrent_batches();\n\t}\n\n\t\/**\n\t * Get the maximum number of seconds a batch can run for.\n\t *\n\t * @return int The number of seconds.\n\t *\/\n\tprotected function get_time_limit() {\n\n\t\t$time_limit = 30;\n\n\t\t\/\/ Apply deprecated filter from deprecated get_maximum_execution_time() method.\n\t\tif ( has_filter( 'action_scheduler_maximum_execution_time' ) ) {\n\t\t\t_deprecated_function( 'action_scheduler_maximum_execution_time', '2.1.1', 'action_scheduler_queue_runner_time_limit' );\n\t\t\t$time_limit = apply_filters( 'action_scheduler_maximum_execution_time', $time_limit );\n\t\t}\n\n\t\treturn absint( apply_filters( 'action_scheduler_queue_runner_time_limit', $time_limit ) );\n\t}\n\n\t\/**\n\t * Get the number of seconds the process has been running.\n\t *\n\t * @return int The number of seconds.\n\t *\/\n\tprotected function get_execution_time() {\n\t\t$execution_time = microtime( true ) - $this->created_time;\n\n\t\t\/\/ Get the CPU time if the hosting environment uses it rather than wall-clock time to calculate a process's execution time.\n\t\tif ( function_exists( 'getrusage' ) && apply_filters( 'action_scheduler_use_cpu_execution_time', defined( 'PANTHEON_ENVIRONMENT' ) ) ) {\n\t\t\t$resource_usages = getrusage();\n\n\t\t\tif ( isset( $resource_usages['ru_stime.tv_usec'], $resource_usages['ru_stime.tv_usec'] ) ) {\n\t\t\t\t$execution_time = $resource_usages['ru_stime.tv_sec'] + ( $resource_usages['ru_stime.tv_usec'] \/ 1000000 );\n\t\t\t}\n\t\t}\n\n\t\treturn $execution_time;\n\t}\n\n\t\/**\n\t * Check if the host's max execution time is (likely) to be exceeded if processing more actions.\n\t *\n\t * @param int $processed_actions The number of actions processed so far - used to determine the likelihood of exceeding the time limit if processing another action.\n\t * @return bool\n\t *\/\n\tprotected function time_likely_to_be_exceeded( $processed_actions ) {\n\t\t$execution_time     = $this->get_execution_time();\n\t\t$max_execution_time = $this->get_time_limit();\n\n\t\t\/\/ Safety against division by zero errors.\n\t\tif ( 0 === $processed_actions ) {\n\t\t\treturn $execution_time >= $max_execution_time;\n\t\t}\n\n\t\t$time_per_action       = $execution_time \/ $processed_actions;\n\t\t$estimated_time        = $execution_time + ( $time_per_action * 3 );\n\t\t$likely_to_be_exceeded = $estimated_time > $max_execution_time;\n\n\t\treturn apply_filters( 'action_scheduler_maximum_execution_time_likely_to_be_exceeded', $likely_to_be_exceeded, $this, $processed_actions, $execution_time, $max_execution_time );\n\t}\n\n\t\/**\n\t * Get memory limit\n\t *\n\t * Based on WP_Background_Process::get_memory_limit()\n\t *\n\t * @return int\n\t *\/\n\tprotected function get_memory_limit() {\n\t\tif ( function_exists( 'ini_get' ) ) {\n\t\t\t$memory_limit = ini_get( 'memory_limit' );\n\t\t} else {\n\t\t\t$memory_limit = '128M'; \/\/ Sensible default, and minimum required by WooCommerce.\n\t\t}\n\n\t\tif ( ! $memory_limit || -1 === $memory_limit || '-1' === $memory_limit ) {\n\t\t\t\/\/ Unlimited, set to 32GB.\n\t\t\t$memory_limit = '32G';\n\t\t}\n\n\t\treturn ActionScheduler_Compatibility::convert_hr_to_bytes( $memory_limit );\n\t}\n\n\t\/**\n\t * Memory exceeded\n\t *\n\t * Ensures the batch process never exceeds 90% of the maximum WordPress memory.\n\t *\n\t * Based on WP_Background_Process::memory_exceeded()\n\t *\n\t * @return bool\n\t *\/\n\tprotected function memory_exceeded() {\n\n\t\t$memory_limit    = $this->get_memory_limit() * 0.90;\n\t\t$current_memory  = memory_get_usage( true );\n\t\t$memory_exceeded = $current_memory >= $memory_limit;\n\n\t\treturn apply_filters( 'action_scheduler_memory_exceeded', $memory_exceeded, $this );\n\t}\n\n\t\/**\n\t * See if the batch limits have been exceeded, which is when memory usage is almost at\n\t * the maximum limit, or the time to process more actions will exceed the max time limit.\n\t *\n\t * Based on WC_Background_Process::batch_limits_exceeded()\n\t *\n\t * @param int $processed_actions The number of actions processed so far - used to determine the likelihood of exceeding the time limit if processing another action.\n\t * @return bool\n\t *\/\n\tprotected function batch_limits_exceeded( $processed_actions ) {\n\t\treturn $this->memory_exceeded() || $this->time_likely_to_be_exceeded( $processed_actions );\n\t}\n\n\t\/**\n\t * Process actions in the queue.\n\t *\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t *\/\n\tabstract public function run( $context = '' );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_RecurringSchedule.php","ext":"php","size":3302,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Abstract_RecurringSchedule\n *\/\nabstract class ActionScheduler_Abstract_RecurringSchedule extends ActionScheduler_Abstract_Schedule {\n\n\t\/**\n\t * The date & time the first instance of this schedule was setup to run (which may not be this instance).\n\t *\n\t * Schedule objects are attached to an action object. Each schedule stores the run date for that\n\t * object as the start date - @see $this->start - and logic to calculate the next run date after\n\t * that - @see $this->calculate_next(). The $first_date property also keeps a record of when the very\n\t * first instance of this chain of schedules ran.\n\t *\n\t * @var DateTime\n\t *\/\n\tprivate $first_date = null;\n\n\t\/**\n\t * Timestamp equivalent of @see $this->first_date\n\t *\n\t * @var int\n\t *\/\n\tprotected $first_timestamp = null;\n\n\t\/**\n\t * The recurrence between each time an action is run using this schedule.\n\t * Used to calculate the start date & time. Can be a number of seconds, in the\n\t * case of ActionScheduler_IntervalSchedule, or a cron expression, as in the\n\t * case of ActionScheduler_CronSchedule. Or something else.\n\t *\n\t * @var mixed\n\t *\/\n\tprotected $recurrence;\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param DateTime      $date The date & time to run the action.\n\t * @param mixed         $recurrence The data used to determine the schedule's recurrence.\n\t * @param DateTime|null $first (Optional) The date & time the first instance of this interval schedule ran. Default null, meaning this is the first instance.\n\t *\/\n\tpublic function __construct( DateTime $date, $recurrence, ?DateTime $first = null ) {\n\t\tparent::__construct( $date );\n\t\t$this->first_date = empty( $first ) ? $date : $first;\n\t\t$this->recurrence = $recurrence;\n\t}\n\n\t\/**\n\t * Schedule is recurring.\n\t *\n\t * @return bool\n\t *\/\n\tpublic function is_recurring() {\n\t\treturn true;\n\t}\n\n\t\/**\n\t * Get the date & time of the first schedule in this recurring series.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_first_date() {\n\t\treturn clone $this->first_date;\n\t}\n\n\t\/**\n\t * Get the schedule's recurrence.\n\t *\n\t * @return string\n\t *\/\n\tpublic function get_recurrence() {\n\t\treturn $this->recurrence;\n\t}\n\n\t\/**\n\t * For PHP 5.2 compat, since DateTime objects can't be serialized\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\t\t$sleep_params          = parent::__sleep();\n\t\t$this->first_timestamp = $this->first_date->getTimestamp();\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'first_timestamp',\n\t\t\t\t'recurrence',\n\t\t\t)\n\t\t);\n\t}\n\n\t\/**\n\t * Unserialize recurring schedules serialized\/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. This was addressed in\n\t * Action Scheduler 3.0.0, where properties and property names were aligned for better\n\t * inheritance. To maintain backward compatibility with scheduled serialized and stored\n\t * prior to 3.0, we need to correctly map the old property names.\n\t *\/\n\tpublic function __wakeup() {\n\t\tparent::__wakeup();\n\t\tif ( $this->first_timestamp > 0 ) {\n\t\t\t$this->first_date = as_get_datetime_object( $this->first_timestamp );\n\t\t} else {\n\t\t\t$this->first_date = $this->get_date();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Abstract_Schedule.php","ext":"php","size":1895,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Abstract_Schedule\n *\/\nabstract class ActionScheduler_Abstract_Schedule extends ActionScheduler_Schedule_Deprecated {\n\n\t\/**\n\t * The date & time the schedule is set to run.\n\t *\n\t * @var DateTime\n\t *\/\n\tprivate $scheduled_date = null;\n\n\t\/**\n\t * Timestamp equivalent of @see $this->scheduled_date\n\t *\n\t * @var int\n\t *\/\n\tprotected $scheduled_timestamp = null;\n\n\t\/**\n\t * Construct.\n\t *\n\t * @param DateTime $date The date & time to run the action.\n\t *\/\n\tpublic function __construct( DateTime $date ) {\n\t\t$this->scheduled_date = $date;\n\t}\n\n\t\/**\n\t * Check if a schedule should recur.\n\t *\n\t * @return bool\n\t *\/\n\tabstract public function is_recurring();\n\n\t\/**\n\t * Calculate when the next instance of this schedule would run based on a given date & time.\n\t *\n\t * @param DateTime $after Start timestamp.\n\t * @return DateTime\n\t *\/\n\tabstract protected function calculate_next( DateTime $after );\n\n\t\/**\n\t * Get the next date & time when this schedule should run after a given date & time.\n\t *\n\t * @param DateTime $after Start timestamp.\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_next( DateTime $after ) {\n\t\t$after = clone $after;\n\t\tif ( $after > $this->scheduled_date ) {\n\t\t\t$after = $this->calculate_next( $after );\n\t\t\treturn $after;\n\t\t}\n\t\treturn clone $this->scheduled_date;\n\t}\n\n\t\/**\n\t * Get the date & time the schedule is set to run.\n\t *\n\t * @return DateTime|null\n\t *\/\n\tpublic function get_date() {\n\t\treturn $this->scheduled_date;\n\t}\n\n\t\/**\n\t * For PHP 5.2 compat, because DateTime objects can't be serialized\n\t *\n\t * @return array\n\t *\/\n\tpublic function __sleep() {\n\t\t$this->scheduled_timestamp = $this->scheduled_date->getTimestamp();\n\t\treturn array(\n\t\t\t'scheduled_timestamp',\n\t\t);\n\t}\n\n\t\/**\n\t * Wakeup.\n\t *\/\n\tpublic function __wakeup() {\n\t\t$this->scheduled_date = as_get_datetime_object( $this->scheduled_timestamp );\n\t\tunset( $this->scheduled_timestamp );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Store.php","ext":"php","size":14393,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Store\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler_Store extends ActionScheduler_Store_Deprecated {\n\tconst STATUS_COMPLETE = 'complete';\n\tconst STATUS_PENDING  = 'pending';\n\tconst STATUS_RUNNING  = 'in-progress';\n\tconst STATUS_FAILED   = 'failed';\n\tconst STATUS_CANCELED = 'canceled';\n\tconst DEFAULT_CLASS   = 'ActionScheduler_wpPostStore';\n\n\t\/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t *\/\n\tprivate static $store = null;\n\n\t\/**\n\t * Maximum length of args.\n\t *\n\t * @var int\n\t *\/\n\tprotected static $max_args_length = 191;\n\n\t\/**\n\t * Save action.\n\t *\n\t * @param ActionScheduler_Action $action Action to save.\n\t * @param null|DateTime          $scheduled_date Optional Date of the first instance\n\t *                                               to store. Otherwise uses the first date of the action's\n\t *                                               schedule.\n\t *\n\t * @return int The action ID\n\t *\/\n\tabstract public function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null );\n\n\t\/**\n\t * Get action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_Action\n\t *\/\n\tabstract public function fetch_action( $action_id );\n\n\t\/**\n\t * Find an action.\n\t *\n\t * Note: the query ordering changes based on the passed 'status' value.\n\t *\n\t * @param string $hook Action hook.\n\t * @param array  $params Parameters of the action to find.\n\t *\n\t * @return string|null ID of the next action matching the criteria or NULL if not found.\n\t *\/\n\tpublic function find_action( $hook, $params = array() ) {\n\t\t$params = wp_parse_args(\n\t\t\t$params,\n\t\t\tarray(\n\t\t\t\t'args'   => null,\n\t\t\t\t'status' => self::STATUS_PENDING,\n\t\t\t\t'group'  => '',\n\t\t\t)\n\t\t);\n\n\t\t\/\/ These params are fixed for this method.\n\t\t$params['hook']     = $hook;\n\t\t$params['orderby']  = 'date';\n\t\t$params['per_page'] = 1;\n\n\t\tif ( ! empty( $params['status'] ) ) {\n\t\t\tif ( self::STATUS_PENDING === $params['status'] ) {\n\t\t\t\t$params['order'] = 'ASC'; \/\/ Find the next action that matches.\n\t\t\t} else {\n\t\t\t\t$params['order'] = 'DESC'; \/\/ Find the most recent action that matches.\n\t\t\t}\n\t\t}\n\n\t\t$results = $this->query_actions( $params );\n\n\t\treturn empty( $results ) ? null : $results[0];\n\t}\n\n\t\/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @param array  $query {\n\t *      Query filtering options.\n\t *\n\t *      @type string       $hook             The name of the actions. Optional.\n\t *      @type string|array $status           The status or statuses of the actions. Optional.\n\t *      @type array        $args             The args array of the actions. Optional.\n\t *      @type DateTime     $date             The scheduled date of the action. Used in UTC timezone. Optional.\n\t *      @type string       $date_compare     Operator for selecting by $date param. Accepted values are '!=', '>', '>=', '<', '<=', '='. Defaults to '<='.\n\t *      @type DateTime     $modified         The last modified date of the action. Used in UTC timezone. Optional.\n\t *      @type string       $modified_compare Operator for comparing $modified param. Accepted values are '!=', '>', '>=', '<', '<=', '='. Defaults to '<='.\n\t *      @type string       $group            The group the action belongs to. Optional.\n\t *      @type bool|int     $claimed          TRUE to find claimed actions, FALSE to find unclaimed actions, an int to find a specific claim ID. Optional.\n\t *      @type int          $per_page         Number of results to return. Defaults to 5.\n\t *      @type int          $offset           The query pagination offset. Defaults to 0.\n\t *      @type int          $orderby          Accepted values are 'hook', 'group', 'modified', 'date' or 'none'. Defaults to 'date'.\n\t *      @type string       $order            Accepted values are 'ASC' or 'DESC'. Defaults to 'ASC'.\n\t * }\n\t * @param string $query_type Whether to select or count the results. Default, select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t *\/\n\tabstract public function query_actions( $query = array(), $query_type = 'select' );\n\n\t\/**\n\t * Run query to get a single action ID.\n\t *\n\t * @since 3.3.0\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage but 'per_page' and 'offset' can't be used.\n\t *\n\t * @param array $query Query parameters.\n\t *\n\t * @return int|null\n\t *\/\n\tpublic function query_action( $query ) {\n\t\t$query['per_page'] = 1;\n\t\t$query['offset']   = 0;\n\t\t$results           = $this->query_actions( $query );\n\n\t\tif ( empty( $results ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn (int) $results[0];\n\t\t}\n\t}\n\n\t\/**\n\t * Get a count of all actions in the store, grouped by status\n\t *\n\t * @return array\n\t *\/\n\tabstract public function action_counts();\n\n\t\/**\n\t * Get additional action counts.\n\t *\n\t * - add past-due actions\n\t *\n\t * @return array\n\t *\/\n\tpublic function extra_action_counts() {\n\t\t$extra_actions = array();\n\n\t\t$pastdue_action_counts = (int) $this->query_actions(\n\t\t\tarray(\n\t\t\t\t'status' => self::STATUS_PENDING,\n\t\t\t\t'date'   => as_get_datetime_object(),\n\t\t\t),\n\t\t\t'count'\n\t\t);\n\n\t\tif ( $pastdue_action_counts ) {\n\t\t\t$extra_actions['past-due'] = $pastdue_action_counts;\n\t\t}\n\n\t\t\/**\n\t\t * Allows 3rd party code to add extra action counts (used in filters in the list table).\n\t\t *\n\t\t * @since 3.5.0\n\t\t * @param $extra_actions array Array with format action_count_identifier => action count.\n\t\t *\/\n\t\treturn apply_filters( 'action_scheduler_extra_action_counts', $extra_actions );\n\t}\n\n\t\/**\n\t * Cancel action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function cancel_action( $action_id );\n\n\t\/**\n\t * Delete action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function delete_action( $action_id );\n\n\t\/**\n\t * Get action's schedule or run timestamp.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return DateTime The date the action is schedule to run, or the date that it ran.\n\t *\/\n\tabstract public function get_date( $action_id );\n\n\n\t\/**\n\t * Make a claim.\n\t *\n\t * @param int           $max_actions Maximum number of actions to claim.\n\t * @param DateTime|null $before_date Claim only actions schedule before the given date. Defaults to now.\n\t * @param array         $hooks       Claim only actions with a hook or hooks.\n\t * @param string        $group       Claim only actions in the given group.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t *\/\n\tabstract public function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' );\n\n\t\/**\n\t * Get claim count.\n\t *\n\t * @return int\n\t *\/\n\tabstract public function get_claim_count();\n\n\t\/**\n\t * Release the claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t *\/\n\tabstract public function release_claim( ActionScheduler_ActionClaim $claim );\n\n\t\/**\n\t * Un-claim the action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function unclaim_action( $action_id );\n\n\t\/**\n\t * Mark action as failed.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function mark_failure( $action_id );\n\n\t\/**\n\t * Log action's execution.\n\t *\n\t * @param string $action_id Actoin ID.\n\t *\/\n\tabstract public function log_execution( $action_id );\n\n\t\/**\n\t * Mark action as complete.\n\t *\n\t * @param string $action_id Action ID.\n\t *\/\n\tabstract public function mark_complete( $action_id );\n\n\t\/**\n\t * Get action's status.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return string\n\t *\/\n\tabstract public function get_status( $action_id );\n\n\t\/**\n\t * Get action's claim ID.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return mixed\n\t *\/\n\tabstract public function get_claim_id( $action_id );\n\n\t\/**\n\t * Find actions by claim ID.\n\t *\n\t * @param string $claim_id Claim ID.\n\t * @return array\n\t *\/\n\tabstract public function find_actions_by_claim_id( $claim_id );\n\n\t\/**\n\t * Validate SQL operator.\n\t *\n\t * @param string $comparison_operator Operator.\n\t * @return string\n\t *\/\n\tprotected function validate_sql_comparator( $comparison_operator ) {\n\t\tif ( in_array( $comparison_operator, array( '!=', '>', '>=', '<', '<=', '=' ), true ) ) {\n\t\t\treturn $comparison_operator;\n\t\t}\n\n\t\treturn '=';\n\t}\n\n\t\/**\n\t * Get the time MySQL formatted date\/time string for an action's (next) scheduled date.\n\t *\n\t * @param ActionScheduler_Action $action Action.\n\t * @param null|DateTime          $scheduled_date Action's schedule date (optional).\n\t * @return string\n\t *\/\n\tprotected function get_scheduled_date_string( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$next = is_null( $scheduled_date ) ? $action->get_schedule()->get_date() : $scheduled_date;\n\n\t\tif ( ! $next ) {\n\t\t\t$next = date_create();\n\t\t}\n\n\t\t$next->setTimezone( new DateTimeZone( 'UTC' ) );\n\n\t\treturn $next->format( 'Y-m-d H:i:s' );\n\t}\n\n\t\/**\n\t * Get the time MySQL formatted date\/time string for an action's (next) scheduled date.\n\t *\n\t * @param ActionScheduler_Action|null $action Action.\n\t * @param null|DateTime               $scheduled_date Action's scheduled date (optional).\n\t * @return string\n\t *\/\n\tprotected function get_scheduled_date_string_local( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$next = is_null( $scheduled_date ) ? $action->get_schedule()->get_date() : $scheduled_date;\n\n\t\tif ( ! $next ) {\n\t\t\t$next = date_create();\n\t\t}\n\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $next );\n\t\treturn $next->format( 'Y-m-d H:i:s' );\n\t}\n\n\t\/**\n\t * Validate that we could decode action arguments.\n\t *\n\t * @param mixed $args      The decoded arguments.\n\t * @param int   $action_id The action ID.\n\t *\n\t * @throws ActionScheduler_InvalidActionException When the decoded arguments are invalid.\n\t *\/\n\tprotected function validate_args( $args, $action_id ) {\n\t\t\/\/ Ensure we have an array of args.\n\t\tif ( ! is_array( $args ) ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_decoding_args( $action_id );\n\t\t}\n\n\t\t\/\/ Validate JSON decoding if possible.\n\t\tif ( function_exists( 'json_last_error' ) && JSON_ERROR_NONE !== json_last_error() ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_decoding_args( $action_id, $args );\n\t\t}\n\t}\n\n\t\/**\n\t * Validate a ActionScheduler_Schedule object.\n\t *\n\t * @param mixed $schedule  The unserialized ActionScheduler_Schedule object.\n\t * @param int   $action_id The action ID.\n\t *\n\t * @throws ActionScheduler_InvalidActionException When the schedule is invalid.\n\t *\/\n\tprotected function validate_schedule( $schedule, $action_id ) {\n\t\tif ( empty( $schedule ) || ! is_a( $schedule, 'ActionScheduler_Schedule' ) ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_schedule( $action_id, $schedule );\n\t\t}\n\t}\n\n\t\/**\n\t * InnoDB indexes have a maximum size of 767 bytes by default, which is only 191 characters with utf8mb4.\n\t *\n\t * Previously, AS wasn't concerned about args length, as we used the (unindex) post_content column. However,\n\t * with custom tables, we use an indexed VARCHAR column instead.\n\t *\n\t * @param  ActionScheduler_Action $action Action to be validated.\n\t * @throws InvalidArgumentException When json encoded args is too long.\n\t *\/\n\tprotected function validate_action( ActionScheduler_Action $action ) {\n\t\tif ( strlen( wp_json_encode( $action->get_args() ) ) > static::$max_args_length ) {\n\t\t\t\/\/ translators: %d is a number (maximum length of action arguments).\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'ActionScheduler_Action::$args too long. To ensure the args column can be indexed, action args should not be more than %d characters when encoded as JSON.', 'action-scheduler' ), static::$max_args_length ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel pending actions by hook.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $hook Hook name.\n\t *\n\t * @return void\n\t *\/\n\tpublic function cancel_actions_by_hook( $hook ) {\n\t\t$action_ids = true;\n\t\twhile ( ! empty( $action_ids ) ) {\n\t\t\t$action_ids = $this->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'hook'     => $hook,\n\t\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t\t'per_page' => 1000,\n\t\t\t\t\t'orderby'  => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$this->bulk_cancel_actions( $action_ids );\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel pending actions by group.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $group Group slug.\n\t *\n\t * @return void\n\t *\/\n\tpublic function cancel_actions_by_group( $group ) {\n\t\t$action_ids = true;\n\t\twhile ( ! empty( $action_ids ) ) {\n\t\t\t$action_ids = $this->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'group'    => $group,\n\t\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t\t'per_page' => 1000,\n\t\t\t\t\t'orderby'  => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$this->bulk_cancel_actions( $action_ids );\n\t\t}\n\t}\n\n\t\/**\n\t * Cancel a set of action IDs.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param int[] $action_ids List of action IDs.\n\t *\n\t * @return void\n\t *\/\n\tprivate function bulk_cancel_actions( $action_ids ) {\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$this->cancel_action( $action_id );\n\t\t}\n\n\t\tdo_action( 'action_scheduler_bulk_cancel_actions', $action_ids );\n\t}\n\n\t\/**\n\t * Get status labels.\n\t *\n\t * @return array<string, string>\n\t *\/\n\tpublic function get_status_labels() {\n\t\treturn array(\n\t\t\tself::STATUS_COMPLETE => __( 'Complete', 'action-scheduler' ),\n\t\t\tself::STATUS_PENDING  => __( 'Pending', 'action-scheduler' ),\n\t\t\tself::STATUS_RUNNING  => __( 'In-progress', 'action-scheduler' ),\n\t\t\tself::STATUS_FAILED   => __( 'Failed', 'action-scheduler' ),\n\t\t\tself::STATUS_CANCELED => __( 'Canceled', 'action-scheduler' ),\n\t\t);\n\t}\n\n\t\/**\n\t * Check if there are any pending scheduled actions due to run.\n\t *\n\t * @return string\n\t *\/\n\tpublic function has_pending_actions_due() {\n\t\t$pending_actions = $this->query_actions(\n\t\t\tarray(\n\t\t\t\t'per_page' => 1,\n\t\t\t\t'date'     => as_get_datetime_object(),\n\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t'orderby'  => 'none',\n\t\t\t),\n\t\t\t'count'\n\t\t);\n\n\t\treturn ! empty( $pending_actions );\n\t}\n\n\t\/**\n\t * Callable initialization function optionally overridden in derived classes.\n\t *\/\n\tpublic function init() {}\n\n\t\/**\n\t * Callable function to mark an action as migrated optionally overridden in derived classes.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function mark_migrated( $action_id ) {}\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Store\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$store ) ) {\n\t\t\t$class       = apply_filters( 'action_scheduler_store_class', self::DEFAULT_CLASS );\n\t\t\tself::$store = new $class();\n\t\t}\n\t\treturn self::$store;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_TimezoneHelper.php","ext":"php","size":4877,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_TimezoneHelper\n *\/\nabstract class ActionScheduler_TimezoneHelper {\n\n\t\/**\n\t * DateTimeZone object.\n\t *\n\t * @var null|DateTimeZone\n\t *\/\n\tprivate static $local_timezone = null;\n\n\t\/**\n\t * Set a DateTime's timezone to the WordPress site's timezone, or a UTC offset\n\t * if no timezone string is available.\n\t *\n\t * @since  2.1.0\n\t *\n\t * @param DateTime $date Timestamp.\n\t * @return ActionScheduler_DateTime\n\t *\/\n\tpublic static function set_local_timezone( DateTime $date ) {\n\n\t\t\/\/ Accept a DateTime for easier backward compatibility, even though we require methods on ActionScheduler_DateTime.\n\t\tif ( ! is_a( $date, 'ActionScheduler_DateTime' ) ) {\n\t\t\t$date = as_get_datetime_object( $date->format( 'U' ) );\n\t\t}\n\n\t\tif ( get_option( 'timezone_string' ) ) {\n\t\t\t$date->setTimezone( new DateTimeZone( self::get_local_timezone_string() ) );\n\t\t} else {\n\t\t\t$date->setUtcOffset( self::get_local_timezone_offset() );\n\t\t}\n\n\t\treturn $date;\n\t}\n\n\t\/**\n\t * Helper to retrieve the timezone string for a site until a WP core method exists\n\t * (see https:\/\/core.trac.wordpress.org\/ticket\/24730).\n\t *\n\t * Adapted from wc_timezone_string() and https:\/\/secure.php.net\/manual\/en\/function.timezone-name-from-abbr.php#89155.\n\t *\n\t * If no timezone string is set, and its not possible to match the UTC offset set for the site to a timezone\n\t * string, then an empty string will be returned, and the UTC offset should be used to set a DateTime's\n\t * timezone.\n\t *\n\t * @since 2.1.0\n\t * @param bool $reset Unused.\n\t * @return string PHP timezone string for the site or empty if no timezone string is available.\n\t *\/\n\tprotected static function get_local_timezone_string( $reset = false ) {\n\t\t\/\/ If site timezone string exists, return it.\n\t\t$timezone = get_option( 'timezone_string' );\n\t\tif ( $timezone ) {\n\t\t\treturn $timezone;\n\t\t}\n\n\t\t\/\/ Get UTC offset, if it isn't set then return UTC.\n\t\t$utc_offset = intval( get_option( 'gmt_offset', 0 ) );\n\t\tif ( 0 === $utc_offset ) {\n\t\t\treturn 'UTC';\n\t\t}\n\n\t\t\/\/ Adjust UTC offset from hours to seconds.\n\t\t$utc_offset *= 3600;\n\n\t\t\/\/ Attempt to guess the timezone string from the UTC offset.\n\t\t$timezone = timezone_name_from_abbr( '', $utc_offset );\n\t\tif ( $timezone ) {\n\t\t\treturn $timezone;\n\t\t}\n\n\t\t\/\/ Last try, guess timezone string manually.\n\t\tforeach ( timezone_abbreviations_list() as $abbr ) {\n\t\t\tforeach ( $abbr as $city ) {\n\t\t\t\tif ( (bool) date( 'I' ) === (bool) $city['dst'] && $city['timezone_id'] && intval( $city['offset'] ) === $utc_offset ) { \/\/ phpcs:ignore WordPress.DateTime.RestrictedFunctions.date_date\t -- we are actually interested in the runtime timezone.\n\t\t\t\t\treturn $city['timezone_id'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\/\/ No timezone string.\n\t\treturn '';\n\t}\n\n\t\/**\n\t * Get timezone offset in seconds.\n\t *\n\t * @since  2.1.0\n\t * @return float\n\t *\/\n\tprotected static function get_local_timezone_offset() {\n\t\t$timezone = get_option( 'timezone_string' );\n\n\t\tif ( $timezone ) {\n\t\t\t$timezone_object = new DateTimeZone( $timezone );\n\t\t\treturn $timezone_object->getOffset( new DateTime( 'now' ) );\n\t\t} else {\n\t\t\treturn floatval( get_option( 'gmt_offset', 0 ) ) * HOUR_IN_SECONDS;\n\t\t}\n\t}\n\n\t\/**\n\t * Get local timezone.\n\t *\n\t * @param bool $reset Toggle to discard stored value.\n\t * @deprecated 2.1.0\n\t *\/\n\tpublic static function get_local_timezone( $reset = false ) {\n\t\t_deprecated_function( __FUNCTION__, '2.1.0', 'ActionScheduler_TimezoneHelper::set_local_timezone()' );\n\t\tif ( $reset ) {\n\t\t\tself::$local_timezone = null;\n\t\t}\n\t\tif ( ! isset( self::$local_timezone ) ) {\n\t\t\t$tzstring = get_option( 'timezone_string' );\n\n\t\t\tif ( empty( $tzstring ) ) {\n\t\t\t\t$gmt_offset = absint( get_option( 'gmt_offset' ) );\n\t\t\t\tif ( 0 === $gmt_offset ) {\n\t\t\t\t\t$tzstring = 'UTC';\n\t\t\t\t} else {\n\t\t\t\t\t$gmt_offset *= HOUR_IN_SECONDS;\n\t\t\t\t\t$tzstring    = timezone_name_from_abbr( '', $gmt_offset, 1 );\n\n\t\t\t\t\t\/\/ If there's no timezone string, try again with no DST.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$tzstring = timezone_name_from_abbr( '', $gmt_offset, 0 );\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/ Try mapping to the first abbreviation we can find.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$is_dst = date( 'I' ); \/\/ phpcs:ignore WordPress.DateTime.RestrictedFunctions.date_date\t -- we are actually interested in the runtime timezone.\n\t\t\t\t\t\tforeach ( timezone_abbreviations_list() as $abbr ) {\n\t\t\t\t\t\t\tforeach ( $abbr as $city ) {\n\t\t\t\t\t\t\t\tif ( $city['dst'] === $is_dst && $city['offset'] === $gmt_offset ) {\n\t\t\t\t\t\t\t\t\t\/\/ If there's no valid timezone ID, keep looking.\n\t\t\t\t\t\t\t\t\tif ( is_null( $city['timezone_id'] ) ) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$tzstring = $city['timezone_id'];\n\t\t\t\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/ If we still have no valid string, then fall back to UTC.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$tzstring = 'UTC';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself::$local_timezone = new DateTimeZone( $tzstring );\n\t\t}\n\t\treturn self::$local_timezone;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler.php","ext":"php","size":11405,"mtime":1757324689,"type":"text","content":"<?php\n\nuse Action_Scheduler\\WP_CLI\\Migration_Command;\nuse Action_Scheduler\\Migration\\Controller;\n\n\/**\n * Class ActionScheduler\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler {\n\n\t\/**\n\t * Plugin file path.\n\t *\n\t * @var string\n\t *\/\n\tprivate static $plugin_file = '';\n\n\t\/**\n\t * ActionScheduler_ActionFactory instance.\n\t *\n\t * @var ActionScheduler_ActionFactory\n\t *\/\n\tprivate static $factory = null;\n\n\t\/**\n\t * Data store is initialized.\n\t *\n\t * @var bool\n\t *\/\n\tprivate static $data_store_initialized = false;\n\n\t\/**\n\t * Factory.\n\t *\/\n\tpublic static function factory() {\n\t\tif ( ! isset( self::$factory ) ) {\n\t\t\tself::$factory = new ActionScheduler_ActionFactory();\n\t\t}\n\t\treturn self::$factory;\n\t}\n\n\t\/**\n\t * Get Store instance.\n\t *\/\n\tpublic static function store() {\n\t\treturn ActionScheduler_Store::instance();\n\t}\n\n\t\/**\n\t * Get Lock instance.\n\t *\/\n\tpublic static function lock() {\n\t\treturn ActionScheduler_Lock::instance();\n\t}\n\n\t\/**\n\t * Get Logger instance.\n\t *\/\n\tpublic static function logger() {\n\t\treturn ActionScheduler_Logger::instance();\n\t}\n\n\t\/**\n\t * Get QueueRunner instance.\n\t *\/\n\tpublic static function runner() {\n\t\treturn ActionScheduler_QueueRunner::instance();\n\t}\n\n\t\/**\n\t * Get AdminView instance.\n\t *\/\n\tpublic static function admin_view() {\n\t\treturn ActionScheduler_AdminView::instance();\n\t}\n\n\t\/**\n\t * Get the absolute system path to the plugin directory, or a file therein\n\t *\n\t * @static\n\t * @param string $path Path relative to plugin directory.\n\t * @return string\n\t *\/\n\tpublic static function plugin_path( $path ) {\n\t\t$base = dirname( self::$plugin_file );\n\t\tif ( $path ) {\n\t\t\treturn trailingslashit( $base ) . $path;\n\t\t} else {\n\t\t\treturn untrailingslashit( $base );\n\t\t}\n\t}\n\n\t\/**\n\t * Get the absolute URL to the plugin directory, or a file therein\n\t *\n\t * @static\n\t * @param string $path Path relative to plugin directory.\n\t * @return string\n\t *\/\n\tpublic static function plugin_url( $path ) {\n\t\treturn plugins_url( $path, self::$plugin_file );\n\t}\n\n\t\/**\n\t * Autoload.\n\t *\n\t * @param string $class Class name.\n\t *\/\n\tpublic static function autoload( $class ) {\n\t\t$d           = DIRECTORY_SEPARATOR;\n\t\t$classes_dir = self::plugin_path( 'classes' . $d );\n\t\t$separator   = strrpos( $class, '\\\\' );\n\t\tif ( false !== $separator ) {\n\t\t\tif ( 0 !== strpos( $class, 'Action_Scheduler' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$class = substr( $class, $separator + 1 );\n\t\t}\n\n\t\tif ( 'Deprecated' === substr( $class, -10 ) ) {\n\t\t\t$dir = self::plugin_path( 'deprecated' . $d );\n\t\t} elseif ( self::is_class_abstract( $class ) ) {\n\t\t\t$dir = $classes_dir . 'abstracts' . $d;\n\t\t} elseif ( self::is_class_migration( $class ) ) {\n\t\t\t$dir = $classes_dir . 'migration' . $d;\n\t\t} elseif ( 'Schedule' === substr( $class, -8 ) ) {\n\t\t\t$dir = $classes_dir . 'schedules' . $d;\n\t\t} elseif ( 'Action' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'actions' . $d;\n\t\t} elseif ( 'Schema' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'schema' . $d;\n\t\t} elseif ( strpos( $class, 'ActionScheduler' ) === 0 ) {\n\t\t\t$segments = explode( '_', $class );\n\t\t\t$type     = isset( $segments[1] ) ? $segments[1] : '';\n\n\t\t\tswitch ( $type ) {\n\t\t\t\tcase 'WPCLI':\n\t\t\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'DBLogger':\n\t\t\t\tcase 'DBStore':\n\t\t\t\tcase 'HybridStore':\n\t\t\t\tcase 'wpPostStore':\n\t\t\t\tcase 'wpCommentLogger':\n\t\t\t\t\t$dir = $classes_dir . 'data-stores' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$dir = $classes_dir;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} elseif ( self::is_class_cli( $class ) ) {\n\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t} elseif ( strpos( $class, 'CronExpression' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d . 'cron-expression' . $d );\n\t\t} elseif ( strpos( $class, 'WP_Async_Request' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d );\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( file_exists( $dir . \"{$class}.php\" ) ) {\n\t\t\tinclude $dir . \"{$class}.php\";\n\t\t\treturn;\n\t\t}\n\t}\n\n\t\/**\n\t * Initialize the plugin\n\t *\n\t * @static\n\t * @param string $plugin_file Plugin file path.\n\t *\/\n\tpublic static function init( $plugin_file ) {\n\t\tself::$plugin_file = $plugin_file;\n\t\tspl_autoload_register( array( __CLASS__, 'autoload' ) );\n\n\t\t\/**\n\t\t * Fires in the early stages of Action Scheduler init hook.\n\t\t *\/\n\t\tdo_action( 'action_scheduler_pre_init' );\n\n\t\trequire_once self::plugin_path( 'functions.php' );\n\t\tActionScheduler_DataController::init();\n\n\t\t$store                      = self::store();\n\t\t$logger                     = self::logger();\n\t\t$runner                     = self::runner();\n\t\t$admin_view                 = self::admin_view();\n\t\t$recurring_action_scheduler = new ActionScheduler_RecurringActionScheduler();\n\n\t\t\/\/ Ensure initialization on plugin activation.\n\t\tif ( ! did_action( 'init' ) ) {\n\t\t\t\/\/ phpcs:ignore Squiz.PHP.CommentedOutCode\n\t\t\tadd_action( 'init', array( $admin_view, 'init' ), 0, 0 ); \/\/ run before $store::init().\n\t\t\tadd_action( 'init', array( $store, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $logger, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $runner, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $recurring_action_scheduler, 'init' ), 1, 0 );\n\n\t\t\tadd_action(\n\t\t\t\t'init',\n\t\t\t\t\/**\n\t\t\t\t * Runs after the active store's init() method has been called.\n\t\t\t\t *\n\t\t\t\t * It would probably be preferable to have $store->init() (or it's parent method) set this itself,\n\t\t\t\t * once it has initialized, however that would cause problems in cases where a custom data store is in\n\t\t\t\t * use and it has not yet been updated to follow that same logic.\n\t\t\t\t *\/\n\t\t\t\tfunction () {\n\t\t\t\t\tself::$data_store_initialized = true;\n\n\t\t\t\t\t\/**\n\t\t\t\t\t * Fires when Action Scheduler is ready: it is safe to use the procedural API after this point.\n\t\t\t\t\t *\n\t\t\t\t\t * @since 3.5.5\n\t\t\t\t\t *\/\n\t\t\t\t\tdo_action( 'action_scheduler_init' );\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t} else {\n\t\t\t$admin_view->init();\n\t\t\t$store->init();\n\t\t\t$logger->init();\n\t\t\t$runner->init();\n\t\t\t$recurring_action_scheduler->init();\n\t\t\tself::$data_store_initialized = true;\n\n\t\t\t\/**\n\t\t\t * Fires when Action Scheduler is ready: it is safe to use the procedural API after this point.\n\t\t\t *\n\t\t\t * @since 3.5.5\n\t\t\t *\/\n\t\t\tdo_action( 'action_scheduler_init' );\n\t\t}\n\n\t\tif ( apply_filters( 'action_scheduler_load_deprecated_functions', true ) ) {\n\t\t\trequire_once self::plugin_path( 'deprecated\/functions.php' );\n\t\t}\n\n\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\tWP_CLI::add_command( 'action-scheduler', 'ActionScheduler_WPCLI_Scheduler_command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler', 'ActionScheduler_WPCLI_Clean_Command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler action', '\\Action_Scheduler\\WP_CLI\\Action_Command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler', '\\Action_Scheduler\\WP_CLI\\System_Command' );\n\t\t\tif ( ! ActionScheduler_DataController::is_migration_complete() && Controller::instance()->allow_migration() ) {\n\t\t\t\t$command = new Migration_Command();\n\t\t\t\t$command->register();\n\t\t\t}\n\t\t}\n\n\t\t\/**\n\t\t * Handle WP comment cleanup after migration.\n\t\t *\/\n\t\tif ( is_a( $logger, 'ActionScheduler_DBLogger' ) && ActionScheduler_DataController::is_migration_complete() && ActionScheduler_WPCommentCleaner::has_logs() ) {\n\t\t\tActionScheduler_WPCommentCleaner::init();\n\t\t}\n\n\t\tadd_action( 'action_scheduler\/migration_complete', 'ActionScheduler_WPCommentCleaner::maybe_schedule_cleanup' );\n\t}\n\n\t\/**\n\t * Check whether the AS data store has been initialized.\n\t *\n\t * @param string $function_name The name of the function being called. Optional. Default `null`.\n\t * @return bool\n\t *\/\n\tpublic static function is_initialized( $function_name = null ) {\n\t\tif ( ! self::$data_store_initialized && ! empty( $function_name ) ) {\n\t\t\t$message = sprintf(\n\t\t\t\t\/* translators: %s function name. *\/\n\t\t\t\t__( '%s() was called before the Action Scheduler data store was initialized', 'action-scheduler' ),\n\t\t\t\tesc_attr( $function_name )\n\t\t\t);\n\t\t\t_doing_it_wrong( esc_html( $function_name ), esc_html( $message ), '3.1.6' );\n\t\t}\n\n\t\treturn self::$data_store_initialized;\n\t}\n\n\t\/**\n\t * Determine if the class is one of our abstract classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t *\/\n\tprotected static function is_class_abstract( $class ) {\n\t\tstatic $abstracts = array(\n\t\t\t'ActionScheduler'                            => true,\n\t\t\t'ActionScheduler_Abstract_ListTable'         => true,\n\t\t\t'ActionScheduler_Abstract_QueueRunner'       => true,\n\t\t\t'ActionScheduler_Abstract_Schedule'          => true,\n\t\t\t'ActionScheduler_Abstract_RecurringSchedule' => true,\n\t\t\t'ActionScheduler_Lock'                       => true,\n\t\t\t'ActionScheduler_Logger'                     => true,\n\t\t\t'ActionScheduler_Abstract_Schema'            => true,\n\t\t\t'ActionScheduler_Store'                      => true,\n\t\t\t'ActionScheduler_TimezoneHelper'             => true,\n\t\t\t'ActionScheduler_WPCLI_Command'              => true,\n\t\t);\n\n\t\treturn isset( $abstracts[ $class ] ) && $abstracts[ $class ];\n\t}\n\n\t\/**\n\t * Determine if the class is one of our migration classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t *\/\n\tprotected static function is_class_migration( $class ) {\n\t\tstatic $migration_segments = array(\n\t\t\t'ActionMigrator'  => true,\n\t\t\t'BatchFetcher'    => true,\n\t\t\t'DBStoreMigrator' => true,\n\t\t\t'DryRun'          => true,\n\t\t\t'LogMigrator'     => true,\n\t\t\t'Config'          => true,\n\t\t\t'Controller'      => true,\n\t\t\t'Runner'          => true,\n\t\t\t'Scheduler'       => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment  = isset( $segments[1] ) ? $segments[1] : $class;\n\n\t\treturn isset( $migration_segments[ $segment ] ) && $migration_segments[ $segment ];\n\t}\n\n\t\/**\n\t * Determine if the class is one of our WP CLI classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t *\/\n\tprotected static function is_class_cli( $class ) {\n\t\tstatic $cli_segments = array(\n\t\t\t'QueueRunner'                             => true,\n\t\t\t'Command'                                 => true,\n\t\t\t'ProgressBar'                             => true,\n\t\t\t'\\Action_Scheduler\\WP_CLI\\Action_Command' => true,\n\t\t\t'\\Action_Scheduler\\WP_CLI\\System_Command' => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment  = isset( $segments[1] ) ? $segments[1] : $class;\n\n\t\treturn isset( $cli_segments[ $segment ] ) && $cli_segments[ $segment ];\n\t}\n\n\t\/**\n\t * Clone.\n\t *\/\n\tfinal public function __clone() {\n\t\ttrigger_error( 'Singleton. No cloning allowed!', E_USER_ERROR ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t}\n\n\t\/**\n\t * Wakeup.\n\t *\/\n\tfinal public function __wakeup() {\n\t\ttrigger_error( 'Singleton. No serialization allowed!', E_USER_ERROR ); \/\/ phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t}\n\n\t\/**\n\t * Construct.\n\t *\/\n\tfinal private function __construct() {}\n\n\t\/** Deprecated **\/\n\n\t\/**\n\t * Get DateTime object.\n\t *\n\t * @param null|string $when     Date\/time string.\n\t * @param string      $timezone Timezone string.\n\t *\/\n\tpublic static function get_datetime_object( $when = null, $timezone = 'UTC' ) {\n\t\t_deprecated_function( __METHOD__, '2.0', 'wcs_add_months()' );\n\t\treturn as_get_datetime_object( $when, $timezone );\n\t}\n\n\t\/**\n\t * Issue deprecated warning if an Action Scheduler function is called in the shutdown hook.\n\t *\n\t * @param string $function_name The name of the function being called.\n\t * @deprecated 3.1.6.\n\t *\/\n\tpublic static function check_shutdown_hook( $function_name ) {\n\t\t_deprecated_function( __FUNCTION__, '3.1.6' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Lock.php","ext":"php","size":1823,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Abstract class for setting a basic lock to throttle some action.\n *\n * Class ActionScheduler_Lock\n *\/\nabstract class ActionScheduler_Lock {\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var ActionScheduler_Lock\n\t *\/\n\tprivate static $locker = null;\n\n\t\/**\n\t * Duration of lock.\n\t *\n\t * @var int\n\t *\/\n\tprotected static $lock_duration = MINUTE_IN_SECONDS;\n\n\t\/**\n\t * Check if a lock is set for a given lock type.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool\n\t *\/\n\tpublic function is_locked( $lock_type ) {\n\t\treturn ( $this->get_expiration( $lock_type ) >= time() );\n\t}\n\n\t\/**\n\t * Set a lock.\n\t *\n\t * To prevent race conditions, implementations should avoid setting the lock if the lock is already held.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool\n\t *\/\n\tabstract public function set( $lock_type );\n\n\t\/**\n\t * If a lock is set, return the timestamp it was set to expiry.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool|int False if no lock is set, otherwise the timestamp for when the lock is set to expire.\n\t *\/\n\tabstract public function get_expiration( $lock_type );\n\n\t\/**\n\t * Get the amount of time to set for a given lock. 60 seconds by default.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return int\n\t *\/\n\tprotected function get_duration( $lock_type ) {\n\t\treturn apply_filters( 'action_scheduler_lock_duration', self::$lock_duration, $lock_type );\n\t}\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Lock\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$locker ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_lock_class', 'ActionScheduler_OptionLock' );\n\t\t\tself::$locker = new $class();\n\t\t}\n\t\treturn self::$locker;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math\/vendor\/woocommerce\/action-scheduler\/classes\/abstracts\/ActionScheduler_Logger.php","ext":"php","size":8021,"mtime":1757324689,"type":"text","content":"<?php\n\n\/**\n * Class ActionScheduler_Logger\n *\n * @codeCoverageIgnore\n *\/\nabstract class ActionScheduler_Logger {\n\n\t\/**\n\t * Instance.\n\t *\n\t * @var null|self\n\t *\/\n\tprivate static $logger = null;\n\n\t\/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Logger\n\t *\/\n\tpublic static function instance() {\n\t\tif ( empty( self::$logger ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_logger_class', 'ActionScheduler_wpCommentLogger' );\n\t\t\tself::$logger = new $class();\n\t\t}\n\t\treturn self::$logger;\n\t}\n\n\t\/**\n\t * Create log entry.\n\t *\n\t * @param string        $action_id Action ID.\n\t * @param string        $message   Log message.\n\t * @param DateTime|null $date      Log date.\n\t *\n\t * @return string The log entry ID\n\t *\/\n\tabstract public function log( $action_id, $message, ?DateTime $date = null );\n\n\t\/**\n\t * Get action's log entry.\n\t *\n\t * @param string $entry_id Entry ID.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t *\/\n\tabstract public function get_entry( $entry_id );\n\n\t\/**\n\t * Get action's logs.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t *\/\n\tabstract public function get_logs( $action_id );\n\n\n\t\/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t *\/\n\tpublic function init() {\n\t\t$this->hook_stored_action();\n\t\tadd_action( 'action_scheduler_canceled_action', array( $this, 'log_canceled_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_begin_execute', array( $this, 'log_started_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'log_completed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'log_failed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_action', array( $this, 'log_timed_out_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_unexpected_shutdown', array( $this, 'log_unexpected_shutdown' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_reset_action', array( $this, 'log_reset_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'log_ignored_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_fetch_action', array( $this, 'log_failed_fetch_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_to_schedule_next_instance', array( $this, 'log_failed_schedule_next_instance' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_bulk_cancel_actions', array( $this, 'bulk_log_cancel_actions' ), 10, 1 );\n\t}\n\n\t\/**\n\t * Register callback for storing action.\n\t *\/\n\tpublic function hook_stored_action() {\n\t\tadd_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\t\/**\n\t * Unhook callback for storing action.\n\t *\/\n\tpublic function unhook_stored_action() {\n\t\tremove_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\t\/**\n\t * Log action stored.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function log_stored_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action created', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Log action cancellation.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function log_canceled_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action canceled', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Log action start.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $context Action execution context.\n\t *\/\n\tpublic function log_started_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: %s: context *\/\n\t\t\t$message = sprintf( __( 'action started via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action started', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log action completion.\n\t *\n\t * @param int                         $action_id Action ID.\n\t * @param null|ActionScheduler_Action $action Action.\n\t * @param string                      $context Action execution context.\n\t *\/\n\tpublic function log_completed_action( $action_id, $action = null, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: %s: context *\/\n\t\t\t$message = sprintf( __( 'action complete via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action complete', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log action failure.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception.\n\t * @param string    $context Action execution context.\n\t *\/\n\tpublic function log_failed_action( $action_id, Exception $exception, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: 1: context 2: exception message *\/\n\t\t\t$message = sprintf( __( 'action failed via %1$s: %2$s', 'action-scheduler' ), $context, $exception->getMessage() );\n\t\t} else {\n\t\t\t\/* translators: %s: exception message *\/\n\t\t\t$message = sprintf( __( 'action failed: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log action timeout.\n\t *\n\t * @param int    $action_id  Action ID.\n\t * @param string $timeout Timeout.\n\t *\/\n\tpublic function log_timed_out_action( $action_id, $timeout ) {\n\t\t\/* translators: %s: amount of time *\/\n\t\t$this->log( $action_id, sprintf( __( 'action marked as failed after %s seconds. Unknown error occurred. Check server, PHP and database error logs to diagnose cause.', 'action-scheduler' ), $timeout ) );\n\t}\n\n\t\/**\n\t * Log unexpected shutdown.\n\t *\n\t * @param int     $action_id Action ID.\n\t * @param mixed[] $error     Error.\n\t *\/\n\tpublic function log_unexpected_shutdown( $action_id, $error ) {\n\t\tif ( ! empty( $error ) ) {\n\t\t\t\/* translators: 1: error message 2: filename 3: line *\/\n\t\t\t$this->log( $action_id, sprintf( __( 'unexpected shutdown: PHP Fatal error %1$s in %2$s on line %3$s', 'action-scheduler' ), $error['message'], $error['file'], $error['line'] ) );\n\t\t}\n\t}\n\n\t\/**\n\t * Log action reset.\n\t *\n\t * @param int $action_id Action ID.\n\t *\/\n\tpublic function log_reset_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action reset', 'action-scheduler' ) );\n\t}\n\n\t\/**\n\t * Log ignored action.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $context Action execution context.\n\t *\/\n\tpublic function log_ignored_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t\/* translators: %s: context *\/\n\t\t\t$message = sprintf( __( 'action ignored via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action ignored', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t\/**\n\t * Log the failure of fetching the action.\n\t *\n\t * @param string         $action_id Action ID.\n\t * @param null|Exception $exception The exception which occurred when fetching the action. NULL by default for backward compatibility.\n\t *\/\n\tpublic function log_failed_fetch_action( $action_id, ?Exception $exception = null ) {\n\n\t\tif ( ! is_null( $exception ) ) {\n\t\t\t\/* translators: %s: exception message *\/\n\t\t\t$log_message = sprintf( __( 'There was a failure fetching this action: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t} else {\n\t\t\t$log_message = __( 'There was a failure fetching this action', 'action-scheduler' );\n\t\t}\n\n\t\t$this->log( $action_id, $log_message );\n\t}\n\n\t\/**\n\t * Log the failure of scheduling the action's next instance.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception object.\n\t *\/\n\tpublic function log_failed_schedule_next_instance( $action_id, Exception $exception ) {\n\t\t\/* translators: %s: exception message *\/\n\t\t$this->log( $action_id, sprintf( __( 'There was a failure scheduling the next instance of this action: %s', 'action-scheduler' ), $exception->getMessage() ) );\n\t}\n\n\t\/**\n\t * Bulk add cancel action log entries.\n\t *\n\t * Implemented here for backward compatibility. Should be implemented in parent loggers\n\t * for more performant bulk logging.\n\t *\n\t * @param array $action_ids List of action ID.\n\t *\/\n\tpublic function bulk_log_cancel_actions( $action_ids ) {\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$this->log_canceled_action( $action_id );\n\t\t}\n\t}\n}\n"}]