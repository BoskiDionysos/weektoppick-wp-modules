[{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/shim/WP_REST_Controller.php","ext":"php","size":15838,"mtime":1757324689,"type":"text","content":"<?php\n\n\nabstract class WP_REST_Controller {\n\n\t/**\n\t * The namespace of this controller's route.\n\t *\n\t * @var string\n\t */\n\tprotected $namespace;\n\n\t/**\n\t * The base of this controller's route.\n\t *\n\t * @var string\n\t */\n\tprotected $rest_base;\n\n\t/**\n\t * Register the routes for the objects of the controller.\n\t */\n\tpublic function register_routes() {\n\t\t/* translators: %s: register_routes() */\n\t\t_doing_it_wrong( 'WP_REST_Controller::register_routes', sprintf( __( \"Method '%s' must be overridden.\" ), __METHOD__ ), '4.7' );\n\t}\n\n\t/**\n\t * Check if a given request has access to get items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t */\n\tpublic function get_items_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Get a collection of items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t */\n\tpublic function get_items( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Check if a given request has access to get a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t */\n\tpublic function get_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Get one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t */\n\tpublic function get_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Check if a given request has access to create items.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t */\n\tpublic function create_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Create one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t */\n\tpublic function create_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Check if a given request has access to update a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t */\n\tpublic function update_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Update one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t */\n\tpublic function update_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Check if a given request has access to delete a specific item.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|boolean\n\t */\n\tpublic function delete_item_permissions_check( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Delete one item from the collection.\n\t *\n\t * @param WP_REST_Request $request Full data about the request.\n\t * @return WP_Error|WP_REST_Response\n\t */\n\tpublic function delete_item( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Prepare the item for create or update operation.\n\t *\n\t * @param WP_REST_Request $request Request object.\n\t * @return WP_Error|object $prepared_item\n\t */\n\tprotected function prepare_item_for_database( $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Prepare the item for the REST response.\n\t *\n\t * @param mixed           $item WordPress representation of the item.\n\t * @param WP_REST_Request $request Request object.\n\t * @return WP_REST_Response $response\n\t */\n\tpublic function prepare_item_for_response( $item, $request ) {\n\t\treturn new WP_Error( 'invalid-method', sprintf( __( \"Method '%s' not implemented. Must be overridden in subclass.\" ), __METHOD__ ), array(\n\t\t\t'status' => 405,\n\t\t) );\n\t}\n\n\t/**\n\t * Prepare a response for inserting into a collection.\n\t *\n\t * @param WP_REST_Response $response Response object.\n\t * @return array Response data, ready for insertion into collection data.\n\t */\n\tpublic function prepare_response_for_collection( $response ) {\n\t\tif ( ! ( $response instanceof WP_REST_Response ) ) {\n\t\t\treturn $response;\n\t\t}\n\n\t\t$data = (array) $response->get_data();\n\t\t$server = rest_get_server();\n\n\t\tif ( method_exists( $server, 'get_compact_response_links' ) ) {\n\t\t\t$links = call_user_func( array( $server, 'get_compact_response_links' ), $response );\n\t\t} else {\n\t\t\t$links = call_user_func( array( $server, 'get_response_links' ), $response );\n\t\t}\n\n\t\tif ( ! empty( $links ) ) {\n\t\t\t$data['_links'] = $links;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t/**\n\t * Filter a response based on the context defined in the schema.\n\t *\n\t * @param array  $data\n\t * @param string $context\n\t * @return array\n\t */\n\tpublic function filter_response_by_context( $data, $context ) {\n\n\t\t$schema = $this->get_item_schema();\n\t\tforeach ( $data as $key => $value ) {\n\t\t\tif ( empty( $schema['properties'][ $key ] ) || empty( $schema['properties'][ $key ]['context'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( ! in_array( $context, $schema['properties'][ $key ]['context'] ) ) {\n\t\t\t\tunset( $data[ $key ] );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( 'object' === $schema['properties'][ $key ]['type'] && ! empty( $schema['properties'][ $key ]['properties'] ) ) {\n\t\t\t\tforeach ( $schema['properties'][ $key ]['properties'] as $attribute => $details ) {\n\t\t\t\t\tif ( empty( $details['context'] ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif ( ! in_array( $context, $details['context'] ) ) {\n\t\t\t\t\t\tif ( isset( $data[ $key ][ $attribute ] ) ) {\n\t\t\t\t\t\t\tunset( $data[ $key ][ $attribute ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t/**\n\t * Get the item's schema, conforming to JSON Schema.\n\t *\n\t * @return array\n\t */\n\tpublic function get_item_schema() {\n\t\treturn $this->add_additional_fields_schema( array() );\n\t}\n\n\t/**\n\t * Get the item's schema for display / public consumption purposes.\n\t *\n\t * @return array\n\t */\n\tpublic function get_public_item_schema() {\n\n\t\t$schema = $this->get_item_schema();\n\n\t\tforeach ( $schema['properties'] as &$property ) {\n\t\t\tif ( isset( $property['arg_options'] ) ) {\n\t\t\t\tunset( $property['arg_options'] );\n\t\t\t}\n\t\t}\n\n\t\treturn $schema;\n\t}\n\n\t/**\n\t * Get the query params for collections.\n\t *\n\t * @return array\n\t */\n\tpublic function get_collection_params() {\n\t\treturn array(\n\t\t\t'context'                => $this->get_context_param(),\n\t\t\t'page'                   => array(\n\t\t\t\t'description'        => __( 'Current page of the collection.' ),\n\t\t\t\t'type'               => 'integer',\n\t\t\t\t'default'            => 1,\n\t\t\t\t'sanitize_callback'  => 'absint',\n\t\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t\t\t'minimum'            => 1,\n\t\t\t),\n\t\t\t'per_page'               => array(\n\t\t\t\t'description'        => __( 'Maximum number of items to be returned in result set.' ),\n\t\t\t\t'type'               => 'integer',\n\t\t\t\t'default'            => 10,\n\t\t\t\t'minimum'            => 1,\n\t\t\t\t'maximum'            => 100,\n\t\t\t\t'sanitize_callback'  => 'absint',\n\t\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t\t),\n\t\t\t'search'                 => array(\n\t\t\t\t'description'        => __( 'Limit results to those matching a string.' ),\n\t\t\t\t'type'               => 'string',\n\t\t\t\t'sanitize_callback'  => 'sanitize_text_field',\n\t\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t\t),\n\t\t);\n\t}\n\n\t/**\n\t * Get the magical context param.\n\t *\n\t * Ensures consistent description between endpoints, and populates enum from schema.\n\t *\n\t * @param array $args\n\t * @return array\n\t */\n\tpublic function get_context_param( $args = array() ) {\n\t\t$param_details = array(\n\t\t\t'description'        => __( 'Scope under which the request is made; determines fields present in response.' ),\n\t\t\t'type'               => 'string',\n\t\t\t'sanitize_callback'  => 'sanitize_key',\n\t\t\t'validate_callback'  => 'rest_validate_request_arg',\n\t\t);\n\t\t$schema = $this->get_item_schema();\n\t\tif ( empty( $schema['properties'] ) ) {\n\t\t\treturn array_merge( $param_details, $args );\n\t\t}\n\t\t$contexts = array();\n\t\tforeach ( $schema['properties'] as $attributes ) {\n\t\t\tif ( ! empty( $attributes['context'] ) ) {\n\t\t\t\t$contexts = array_merge( $contexts, $attributes['context'] );\n\t\t\t}\n\t\t}\n\t\tif ( ! empty( $contexts ) ) {\n\t\t\t$param_details['enum'] = array_unique( $contexts );\n\t\t\trsort( $param_details['enum'] );\n\t\t}\n\t\treturn array_merge( $param_details, $args );\n\t}\n\n\t/**\n\t * Add the values from additional fields to a data object.\n\t *\n\t * @param array           $object\n\t * @param WP_REST_Request $request\n\t * @return array modified object with additional fields.\n\t */\n\tprotected function add_additional_fields_to_object( $object, $request ) {\n\n\t\t$additional_fields = $this->get_additional_fields();\n\n\t\tforeach ( $additional_fields as $field_name => $field_options ) {\n\n\t\t\tif ( ! $field_options['get_callback'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$object[ $field_name ] = call_user_func( $field_options['get_callback'], $object, $field_name, $request, $this->get_object_type() );\n\t\t}\n\n\t\treturn $object;\n\t}\n\n\t/**\n\t * Update the values of additional fields added to a data object.\n\t *\n\t * @param array           $object\n\t * @param WP_REST_Request $request\n\t */\n\tprotected function update_additional_fields_for_object( $object, $request ) {\n\n\t\t$additional_fields = $this->get_additional_fields();\n\n\t\tforeach ( $additional_fields as $field_name => $field_options ) {\n\n\t\t\tif ( ! $field_options['update_callback'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Don't run the update callbacks if the data wasn't passed in the request.\n\t\t\tif ( ! isset( $request[ $field_name ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcall_user_func( $field_options['update_callback'], $request[ $field_name ], $object, $field_name, $request, $this->get_object_type() );\n\t\t}\n\t}\n\n\t/**\n\t * Add the schema from additional fields to an schema array.\n\t *\n\t * The type of object is inferred from the passed schema.\n\t *\n\t * @param array $schema Schema array.\n\t */\n\tprotected function add_additional_fields_schema( $schema ) {\n\t\tif ( empty( $schema['title'] ) ) {\n\t\t\treturn $schema;\n\t\t}\n\n\t\t/**\n\t\t * Can't use $this->get_object_type otherwise we cause an inf loop.\n\t\t */\n\t\t$object_type = $schema['title'];\n\n\t\t$additional_fields = $this->get_additional_fields( $object_type );\n\n\t\tforeach ( $additional_fields as $field_name => $field_options ) {\n\t\t\tif ( ! $field_options['schema'] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$schema['properties'][ $field_name ] = $field_options['schema'];\n\t\t}\n\n\t\treturn $schema;\n\t}\n\n\t/**\n\t * Get all the registered additional fields for a given object-type.\n\t *\n\t * @param  string $object_type\n\t * @return array\n\t */\n\tprotected function get_additional_fields( $object_type = null ) {\n\n\t\tif ( ! $object_type ) {\n\t\t\t$object_type = $this->get_object_type();\n\t\t}\n\n\t\tif ( ! $object_type ) {\n\t\t\treturn array();\n\t\t}\n\n\t\tglobal $wp_rest_additional_fields;\n\n\t\tif ( ! $wp_rest_additional_fields || ! isset( $wp_rest_additional_fields[ $object_type ] ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\treturn $wp_rest_additional_fields[ $object_type ];\n\t}\n\n\t/**\n\t * Get the object type this controller is responsible for managing.\n\t *\n\t * @return string\n\t */\n\tprotected function get_object_type() {\n\t\t$schema = $this->get_item_schema();\n\n\t\tif ( ! $schema || ! isset( $schema['title'] ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn $schema['title'];\n\t}\n\n\t/**\n\t * Get an array of endpoint arguments from the item schema for the controller.\n\t *\n\t * @param string $method HTTP method of the request. The arguments\n\t *                       for `CREATABLE` requests are checked for required\n\t *                       values and may fall-back to a given default, this\n\t *                       is not done on `EDITABLE` requests. Default is\n\t *                       WP_REST_Server::CREATABLE.\n\t * @return array $endpoint_args\n\t */\n\tpublic function get_endpoint_args_for_item_schema( $method = WP_REST_Server::CREATABLE ) {\n\n\t\t$schema                = $this->get_item_schema();\n\t\t$schema_properties     = ! empty( $schema['properties'] ) ? $schema['properties'] : array();\n\t\t$endpoint_args = array();\n\n\t\tforeach ( $schema_properties as $field_id => $params ) {\n\n\t\t\t// Arguments specified as `readonly` are not allowed to be set.\n\t\t\tif ( ! empty( $params['readonly'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$endpoint_args[ $field_id ] = array(\n\t\t\t\t'validate_callback' => 'rest_validate_request_arg',\n\t\t\t\t'sanitize_callback' => 'rest_sanitize_request_arg',\n\t\t\t);\n\n\t\t\tif ( isset( $params['description'] ) ) {\n\t\t\t\t$endpoint_args[ $field_id ]['description'] = $params['description'];\n\t\t\t}\n\n\t\t\tif ( WP_REST_Server::CREATABLE === $method && isset( $params['default'] ) ) {\n\t\t\t\t$endpoint_args[ $field_id ]['default'] = $params['default'];\n\t\t\t}\n\n\t\t\tif ( WP_REST_Server::CREATABLE === $method && ! empty( $params['required'] ) ) {\n\t\t\t\t$endpoint_args[ $field_id ]['required'] = true;\n\t\t\t}\n\n\t\t\tforeach ( array( 'type', 'format', 'enum' ) as $schema_prop ) {\n\t\t\t\tif ( isset( $params[ $schema_prop ] ) ) {\n\t\t\t\t\t$endpoint_args[ $field_id ][ $schema_prop ] = $params[ $schema_prop ];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Merge in any options provided by the schema property.\n\t\t\tif ( isset( $params['arg_options'] ) ) {\n\n\t\t\t\t// Only use required / default from arg_options on CREATABLE endpoints.\n\t\t\t\tif ( WP_REST_Server::CREATABLE !== $method ) {\n\t\t\t\t\t$params['arg_options'] = array_diff_key( $params['arg_options'], array(\n\t\t\t\t\t\t'required' => '',\n\t\t\t\t\t\t'default' => '',\n\t\t\t\t\t) );\n\t\t\t\t}\n\n\t\t\t\t$endpoint_args[ $field_id ] = array_merge( $endpoint_args[ $field_id ], $params['arg_options'] );\n\t\t\t}\n\t\t}// End foreach().\n\n\t\treturn $endpoint_args;\n\t}\n\n\t/**\n\t * Retrieves post data given a post ID or post object.\n\t *\n\t * This is a subset of the functionality of the `get_post()` function, with\n\t * the additional functionality of having `the_post` action done on the\n\t * resultant post object. This is done so that plugins may manipulate the\n\t * post that is used in the REST API.\n\t *\n\t * @see get_post()\n\t * @global WP_Query $wp_query\n\t *\n\t * @param int|WP_Post $post Post ID or post object. Defaults to global $post.\n\t * @return WP_Post|null A `WP_Post` object when successful.\n\t */\n\tpublic function get_post( $post ) {\n\t\t$post_obj = get_post( $post );\n\n\t\t/**\n\t\t * Filter the post.\n\t\t *\n\t\t * Allows plugins to filter the post object as returned by `\\WP_REST_Controller::get_post()`.\n\t\t *\n\t\t * @param WP_Post|null $post_obj  The post object as returned by `get_post()`.\n\t\t * @param int|WP_Post  $post      The original value used to obtain the post object.\n\t\t */\n\t\t$post = apply_filters( 'rest_the_post', $post_obj, $post );\n\n\t\treturn $post;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_File.php","ext":"php","size":5540,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB file field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_File extends CMB2_Type_File_Base {\n\n\t/**\n\t * Handles outputting an 'file' field\n\t *\n\t * @param  array $args Override arguments.\n\t * @return string      Form input element\n\t */\n\tpublic function render( $args = array() ) {\n\t\t$args    = empty( $args ) ? $this->args : $args;\n\t\t$field   = $this->field;\n\t\t$options = (array) $field->options();\n\n\t\t$a = $this->args = $this->parse_args( 'file', array(\n\t\t\t'class'           => 'cmb2-upload-file regular-text',\n\t\t\t'id'              => $this->_id(),\n\t\t\t'name'            => $this->_name(),\n\t\t\t'value'           => $field->escaped_value(),\n\t\t\t'id_value'        => null,\n\t\t\t'desc'            => $this->_desc( true ),\n\t\t\t'size'            => 45,\n\t\t\t'js_dependencies' => 'media-editor',\n\t\t\t'preview_size'    => $field->args( 'preview_size' ),\n\t\t\t'query_args'      => $field->args( 'query_args' ),\n\n\t\t\t// if options array and 'url' => false, then hide the url field.\n\t\t\t'type'            => array_key_exists( 'url', $options ) && false === $options['url']\n\t\t\t\t? 'hidden'\n\t\t\t\t: 'text',\n\t\t), $args );\n\n\t\t// get an array of image size meta data, fallback to 'large'.\n\t\t$this->args['img_size_data'] = $img_size_data = parent::get_image_size_data(\n\t\t\t$a['preview_size'],\n\t\t\t'large'\n\t\t);\n\n\t\t$output = '';\n\n\t\t$output .= parent::render( array(\n\t\t\t'type'             => $a['type'],\n\t\t\t'class'            => $a['class'],\n\t\t\t'value'            => $a['value'],\n\t\t\t'id'               => $a['id'],\n\t\t\t'name'             => $a['name'],\n\t\t\t'size'             => $a['size'],\n\t\t\t'desc'             => '',\n\t\t\t'data-previewsize' => sprintf( '[%d,%d]', $img_size_data['width'], $img_size_data['height'] ),\n\t\t\t'data-sizename'    => $img_size_data['name'],\n\t\t\t'data-queryargs'   => ! empty( $a['query_args'] ) ? json_encode( $a['query_args'] ) : '',\n\t\t\t'js_dependencies'  => $a['js_dependencies'],\n\t\t) );\n\n\t\t// Now remove the data-iterator attribute if it exists.\n\t\t// (Possible if being used within a custom field)\n\t\t// This is not elegant, but compensates for CMB2_Types::_id\n\t\t// automagically & inelegantly adding the data-iterator attribute.\n\t\t// Single responsibility principle? pffft.\n\t\t$parts            = explode( '\"', $this->args['id'] );\n\t\t$this->args['id'] = $parts[0];\n\n\t\t$output .= sprintf(\n\t\t\t'<input class=\"cmb2-upload-button button-secondary\" type=\"button\" value=\"%1$s\" />',\n\t\t\tesc_attr( $this->_text( 'add_upload_file_text', esc_html__( 'Add or Upload File', 'cmb2' ) ) )\n\t\t);\n\n\t\t$output .= $a['desc'];\n\t\t$output .= $this->get_id_field_output();\n\n\t\t$output .= '<div id=\"' . esc_attr( $field->id() ) . '-status\" class=\"cmb2-media-status\">';\n\t\tif ( ! empty( $a['value'] ) ) {\n\t\t\t$output .= $this->get_file_preview_output();\n\t\t}\n\t\t$output .= '</div>';\n\n\t\treturn $this->rendered( $output );\n\t}\n\n\t/**\n\t * Return attempted file preview output for a provided file.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @return string\n\t */\n\tpublic function get_file_preview_output() {\n\t\tif ( ! $this->is_valid_img_ext( $this->args['value'] ) ) {\n\n\t\t\treturn $this->file_status_output( array(\n\t\t\t\t'value'     => $this->args['value'],\n\t\t\t\t'tag'       => 'div',\n\t\t\t\t'cached_id' => $this->args['id'],\n\t\t\t) );\n\t\t}\n\n\t\tif ( $this->args['id_value'] ) {\n\t\t\t$image = wp_get_attachment_image( $this->args['id_value'], $this->args['preview_size'], null, array(\n\t\t\t\t'class' => 'cmb-file-field-image',\n\t\t\t) );\n\t\t} else {\n\t\t\t$image = '<img style=\"max-width: ' . absint( $this->args['img_size_data']['width'] ) . 'px; width: 100%;\" src=\"' . esc_url( $this->args['value'] ) . '\" class=\"cmb-file-field-image\" alt=\"\" />';\n\t\t}\n\n\t\treturn $this->img_status_output( array(\n\t\t\t'image'     => $image,\n\t\t\t'tag'       => 'div',\n\t\t\t'cached_id' => $this->args['id'],\n\t\t) );\n\t}\n\n\t/**\n\t * Return field ID output as a hidden field.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @return string\n\t */\n\tpublic function get_id_field_output() {\n\t\t$field = $this->field;\n\n\t\t/*\n\t\t * A little bit of magic (tsk tsk) replacing the $this->types->field object,\n\t\t * So that the render function is using the proper field object.\n\t\t */\n\t\t$this->types->field = $this->get_id_field();\n\n\t\t$output = parent::render( array(\n\t\t\t'type'  => 'hidden',\n\t\t\t'class' => 'cmb2-upload-file-id',\n\t\t\t'value' => $this->types->field->value,\n\t\t\t'desc'  => '',\n\t\t) );\n\n\t\t// We need to put the original field object back\n\t\t// or other fields in a custom field will be broken.\n\t\t$this->types->field = $field;\n\n\t\treturn $output;\n\t}\n\n\t/**\n\t * Return field ID data.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @return mixed\n\t */\n\tpublic function get_id_field() {\n\n\t\t// reset field args for attachment id.\n\t\t$args = array(\n\t\t\t// if we're looking at a file in a group, we need to get the non-prefixed id.\n\t\t\t'id' => ( $this->field->group ? $this->field->args( '_id' ) : $this->args['id'] ) . '_id',\n\t\t\t'disable_hash_data_attribute' => true,\n\t\t);\n\n\t\t// and get new field object\n\t\t// (need to set it to the types field property).\n\t\t$id_field = $this->field->get_field_clone( $args );\n\n\t\t$id_value = absint( null !== $this->args['id_value'] ? $this->args['id_value'] : $id_field->escaped_value() );\n\n\t\t// we don't want to output \"0\" as a value.\n\t\tif ( ! $id_value ) {\n\t\t\t$id_value = '';\n\t\t}\n\n\t\t// if there is no id saved yet, try to get it from the url.\n\t\tif ( $this->args['value'] && ! $id_value ) {\n\t\t\t$id_value = CMB2_Utils::image_id_from_url( esc_url_raw( $this->args['value'] ) );\n\t\t}\n\n\t\t$id_field->value = $id_value;\n\n\t\treturn $id_field;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Text_Datetime_Timestamp.php","ext":"php","size":2390,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB text_datetime_timestamp field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Text_Datetime_Timestamp extends CMB2_Type_Picker_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$value = $field->escaped_value();\n\t\tif ( empty( $value ) ) {\n\t\t\t$value = $field->get_default();\n\t\t}\n\n\t\t$args = wp_parse_args( $this->args, array(\n\t\t\t'value'      => $value,\n\t\t\t'desc'       => $this->_desc(),\n\t\t\t'datepicker' => array(),\n\t\t\t'timepicker' => array(),\n\t\t) );\n\n\t\tif ( empty( $args['value'] ) ) {\n\t\t\t$args['value'] = $value;\n\t\t\t// This will be used if there is a select_timezone set for this field\n\t\t\t$tz_offset = $field->field_timezone_offset();\n\t\t\tif ( ! empty( $tz_offset ) ) {\n\t\t\t\t$args['value'] -= $tz_offset;\n\t\t\t}\n\t\t}\n\n\t\t$has_good_value = ! empty( $args['value'] ) && ! is_array( $args['value'] );\n\n\t\t$date_input = parent::render( $this->date_args( $args, $has_good_value ) );\n\t\t$time_input = parent::render( $this->time_args( $args, $has_good_value ) );\n\n\t\treturn $this->rendered( $date_input . \"\\n\" . $time_input );\n\t}\n\n\tpublic function date_args( $args, $has_good_value ) {\n\t\t$date_args = wp_parse_args( $args['datepicker'], array(\n\t\t\t'class' => 'cmb2-text-small cmb2-datepicker',\n\t\t\t'name'  => $this->_name( '[date]' ),\n\t\t\t'id'    => $this->_id( '_date' ),\n\t\t\t'value' => $has_good_value ? $this->field->get_timestamp_format( 'date_format', $args['value'] ) : '',\n\t\t\t'desc'  => '',\n\t\t) );\n\n\t\t$date_args['rendered'] = true;\n\n\t\t// Let's get the date-format, and set it up as a data attr for the field.\n\t\treturn $this->parse_picker_options( 'date', $date_args );\n\t}\n\n\tpublic function time_args( $args, $has_good_value ) {\n\t\t$time_args = wp_parse_args( $args['timepicker'], array(\n\t\t\t'class' => 'cmb2-timepicker text-time',\n\t\t\t'name'  => $this->_name( '[time]' ),\n\t\t\t'id'    => $this->_id( '_time' ),\n\t\t\t'value' => $has_good_value ? $this->field->get_timestamp_format( 'time_format', $args['value'] ) : '',\n\t\t\t'desc'  => $args['desc'],\n\t\t\t'js_dependencies' => array( 'jquery-ui-core', 'jquery-ui-datepicker', 'jquery-ui-datetimepicker' ),\n\t\t) );\n\n\t\t$time_args['rendered'] = true;\n\n\t\t// Let's get the time-format, and set it up as a data attr for the field.\n\t\treturn $this->parse_picker_options( 'time', $time_args );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Text_Date.php","ext":"php","size":736,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB text_date field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Text_Date extends CMB2_Type_Picker_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$args = $this->parse_args( 'text_date', array(\n\t\t\t'class'           => 'cmb2-text-small cmb2-datepicker',\n\t\t\t'value'           => $this->field->get_timestamp_format(),\n\t\t\t'desc'            => $this->_desc(),\n\t\t\t'js_dependencies' => array( 'jquery-ui-core', 'jquery-ui-datepicker' ),\n\t\t) );\n\n\t\tif ( false === strpos( $args['class'], 'timepicker' ) ) {\n\t\t\t$this->parse_picker_options( 'date' );\n\t\t}\n\n\t\treturn parent::render( $args );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Select.php","ext":"php","size":671,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB select field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Select extends CMB2_Type_Multi_Base {\n\n\tpublic function render() {\n\t\t$a = $this->parse_args( 'select', array(\n\t\t\t'class'   => 'cmb2_select',\n\t\t\t'name'    => $this->_name(),\n\t\t\t'id'      => $this->_id(),\n\t\t\t'desc'    => $this->_desc( true ),\n\t\t\t'options' => $this->concat_items(),\n\t\t) );\n\n\t\t$attrs = $this->concat_attrs( $a, array( 'desc', 'options' ) );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<select%s>%s</select>%s', $attrs, $a['options'], $a['desc'] )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Taxonomy_Base.php","ext":"php","size":4767,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB Taxonomy base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nabstract class CMB2_Type_Taxonomy_Base extends CMB2_Type_Multi_Base {\n\n\t/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @var integer|null\n\t */\n\tprotected $parent = null;\n\n\t/**\n\t * Checks if we can get a post object, and if so, uses `get_the_terms` which utilizes caching.\n\t *\n\t * @since  1.0.2\n\t * @return mixed Array of terms on success\n\t */\n\tpublic function get_object_terms() {\n\t\tswitch ( $this->field->object_type ) {\n\t\t\tcase 'options-page':\n\t\t\tcase 'term':\n\t\t\t\treturn $this->options_terms();\n\t\t\tcase 'post':\n\t\t\t\t// WP caches internally so it's better to use\n\t\t\t\treturn get_the_terms( $this->field->object_id, $this->field->args( 'taxonomy' ) );\n\n\t\t\tdefault:\n\t\t\t\treturn $this->non_post_object_terms();\n\t\t}\n\t}\n\n\t/**\n\t * Gets the term objects for the terms stored via options boxes.\n\t *\n\t * @since  2.2.4\n\t * @return mixed Array of terms on success\n\t */\n\tpublic function options_terms() {\n\t\tif ( empty( $this->field->value ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t$terms = (array) $this->field->value;\n\n\t\tforeach ( $terms as $index => $term ) {\n\t\t\t$terms[ $index ] = get_term_by( 'slug', $term, $this->field->args( 'taxonomy' ) );\n\t\t}\n\n\t\treturn $terms;\n\t}\n\n\t/**\n\t * For non-post objects, wraps the call to wp_get_object_terms with transient caching.\n\t *\n\t * @since  2.2.4\n\t * @return mixed Array of terms on success\n\t */\n\tpublic function non_post_object_terms() {\n\t\t$object_id = $this->field->object_id;\n\t\t$taxonomy = $this->field->args( 'taxonomy' );\n\n\t\t$cache_key = \"cmb-cache-{$taxonomy}-{$object_id}\";\n\n\t\t// Check cache\n\t\t$cached = get_transient( $cache_key );\n\n\t\tif ( ! $cached ) {\n\t\t\t$cached = wp_get_object_terms( $object_id, $taxonomy );\n\t\t\t// Do our own (minimal) caching. Long enough for a page-load.\n\t\t\tset_transient( $cache_key, $cached, 60 );\n\t\t}\n\n\t\treturn $cached;\n\t}\n\n\t/**\n\t * Wrapper for `get_terms` to account for changes in WP 4.6 where taxonomy is expected\n\t * as part of the arguments.\n\t *\n\t * @since  2.2.2\n\t * @return mixed Array of terms on success\n\t */\n\tpublic function get_terms() {\n\t\t$args = array(\n\t\t\t'taxonomy'   => $this->field->args( 'taxonomy' ),\n\t\t\t'hide_empty' => false,\n\t\t);\n\n\t\tif ( null !== $this->parent ) {\n\t\t\t$args['parent'] = $this->parent;\n\t\t}\n\n\t\t$args = wp_parse_args( $this->field->prop( 'query_args', array() ), $args );\n\n\t\treturn CMB2_Utils::wp_at_least( '4.5.0' )\n\t\t\t? get_terms( $args )\n\t\t\t: get_terms( $this->field->args( 'taxonomy' ), http_build_query( $args ) );\n\t}\n\n\tprotected function no_terms_result( $error, $tag = 'li' ) {\n\t\tif ( is_wp_error( $error ) ) {\n\t\t\t$message = $error->get_error_message();\n\t\t\t$data = 'data-error=\"' . esc_attr( $error->get_error_code() ) . '\"';\n\t\t} else {\n\t\t\t$message = $this->_text( 'no_terms_text', esc_html__( 'No terms', 'cmb2' ) );\n\t\t\t$data = '';\n\t\t}\n\n\t\t$this->field->args['select_all_button'] = false;\n\n\t\treturn sprintf( '<%3$s><label %1$s>%2$s</label></%3$s>', $data, esc_html( $message ), $tag );\n\t}\n\n\tpublic function get_object_term_or_default() {\n\t\t$saved_terms = $this->get_object_terms();\n\n\t\treturn is_wp_error( $saved_terms ) || empty( $saved_terms )\n\t\t\t? $this->field->get_default()\n\t\t\t: array_shift( $saved_terms )->slug;\n\t}\n\n\t/**\n\t * Takes a list of all tax terms and outputs.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @param  array  $all_terms   Array of all terms.\n\t * @param  array|string $saved Array of terms set to the object, or single term slug.\n\t *\n\t * @return string              List of terms.\n\t */\n\tprotected function loop_terms( $all_terms, $saved_terms ) {\n\t\treturn '';\n\t}\n\n\t/**\n\t * Build children hierarchy.\n\t *\n\t * @param  object       $parent_term The parent term object.\n\t * @param  array|string $saved       Array of terms set to the object, or single term slug.\n\t *\n\t * @return string                    List of terms.\n\t */\n\tprotected function build_children( $parent_term, $saved ) {\n\t\tif ( empty( $parent_term->term_id ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$this->parent = $parent_term->term_id;\n\n\t\t$terms   = $this->get_terms();\n\t\t$options = '';\n\n\t\tif ( ! empty( $terms ) && is_array( $terms ) ) {\n\t\t\t$options .= $this->child_option_output( $terms, $saved );\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\t/**\n\t * Build child terms output.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @param  array        $terms Array of child terms.\n\t * @param  array|string $saved Array of terms set to the object, or single term slug.\n\t *\n\t * @return string              Child option output.\n\t */\n\tpublic function child_option_output( $terms, $saved ) {\n\t\t$output = '<li class=\"cmb2-indented-hierarchy\"><ul>';\n\t\t$output .= $this->loop_terms( $terms, $saved );\n\t\t$output .= '</ul></li>';\n\n\t\treturn $output;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Taxonomy_Select_Hierarchical.php","ext":"php","size":1516,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB taxonomy_select_hierarchical field type\n *\n * @since  2.6.1\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Taxonomy_Select_Hierarchical extends CMB2_Type_Taxonomy_Select {\n\n\t/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @var integer\n\t */\n\tprotected $parent = 0;\n\n\t/**\n\t * Child loop depth.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @var integer\n\t */\n\tprotected $level = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->select( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_select_hierarchical' )\n\t\t);\n\t}\n\n\tpublic function select_option( $args = array() ) {\n\t\tif ( $this->level > 0 ) {\n\t\t\t$args['label'] = str_repeat( '&nbsp;&nbsp;&nbsp;&nbsp;', $this->level ) . $args['label'];\n\t\t}\n\t\t$option = parent::select_option( $args );\n\t\t$children = $this->build_children( $this->current_term, $this->saved_term );\n\n\t\tif ( ! empty( $children ) ) {\n\t\t\t$option .= $children;\n\t\t}\n\n\t\treturn $option;\n\t}\n\n\t/**\n\t * Build children hierarchy.\n\t *\n\t * @since  2.6.1\n\t *\n\t * @param  array        $terms Array of child terms.\n\t * @param  array|string $saved Array of terms set to the object, or single term slug.\n\t *\n\t * @return string              Child option output.\n\t */\n\tpublic function child_option_output( $terms, $saved ) {\n\t\t$this->level++;\n\t\t$output = $this->loop_terms( $terms, $saved );\n\t\t$this->level--;\n\n\t\treturn $output;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Wysiwyg.php","ext":"php","size":3344,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB wysiwyg field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n *\n * @method string _id()\n * @method string _desc()\n */\nclass CMB2_Type_Wysiwyg extends CMB2_Type_Textarea {\n\n\t/**\n\t * Handles outputting a 'wysiwyg' element\n\t * @since  1.1.0\n\t * @return string Form wysiwyg element\n\t */\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\t\t$a = $this->parse_args( 'wysiwyg', array(\n\t\t\t'id'      => $this->_id( '', false ),\n\t\t\t'value'   => $field->escaped_value( 'stripslashes' ),\n\t\t\t'desc'    => $this->_desc( true ),\n\t\t\t'options' => $field->options(),\n\t\t) );\n\n\t\tif ( ! $field->group ) {\n\n\t\t\t$a = $this->maybe_update_attributes_for_char_counter( $a );\n\n\t\t\tif ( $this->has_counter ) {\n\t\t\t\t$a['options']['editor_class'] = ! empty( $a['options']['editor_class'] )\n\t\t\t\t\t? $a['options']['editor_class'] . ' cmb2-count-chars'\n\t\t\t\t\t: 'cmb2-count-chars';\n\t\t\t}\n\n\t\t\treturn $this->rendered( $this->get_wp_editor( $a ) . $a['desc'] );\n\t\t}\n\n\t\t// Character counter not currently working for grouped WYSIWYG\n\t\t$this->field->args['char_counter'] = false;\n\n\t\t// wysiwyg fields in a group need some special handling.\n\t\t$field->add_js_dependencies( array( 'wp-util', 'cmb2-wysiwyg' ) );\n\n\t\t// Hook in our template-output to the footer.\n\t\tadd_action( is_admin() ? 'admin_footer' : 'wp_footer', array( $this, 'add_wysiwyg_template_for_group' ) );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<div class=\"cmb2-wysiwyg-wrap\">%s', parent::render( array(\n\t\t\t\t'class'         => 'cmb2_textarea cmb2-wysiwyg-placeholder',\n\t\t\t\t'data-groupid'  => $field->group->id(),\n\t\t\t\t'data-iterator' => $field->group->index,\n\t\t\t\t'data-fieldid'  => $field->id( true ),\n\t\t\t\t'desc'          => '</div>' . $this->_desc( true ),\n\t\t\t) ) )\n\t\t);\n\t}\n\n\tprotected function get_wp_editor( $args ) {\n\t\tob_start();\n\t\twp_editor( $args['value'], $args['id'], $args['options'] );\n\t\treturn ob_get_clean();\n\t}\n\n\tpublic function add_wysiwyg_template_for_group() {\n\t\t$group_id = $this->field->group->id();\n\t\t$field_id = $this->field->id( true );\n\t\t$hash     = $this->field->hash_id();\n\t\t$options  = $this->field->options();\n\t\t$options['textarea_name'] = 'cmb2_n_' . $group_id . $field_id;\n\n\t\t// Initate the editor with special id/value/name so we can retrieve the options in JS.\n\t\t$editor = $this->get_wp_editor( array(\n\t\t\t'value'   => 'cmb2_v_' . $group_id . $field_id,\n\t\t\t'id'      => 'cmb2_i_' . $group_id . $field_id,\n\t\t\t'options' => $options,\n\t\t) );\n\n\t\t// Then replace the special id/value/name with underscore placeholders.\n\t\t$editor = str_replace( array(\n\t\t\t'cmb2_n_' . $group_id . $field_id,\n\t\t\t'cmb2_v_' . $group_id . $field_id,\n\t\t\t'cmb2_i_' . $group_id . $field_id,\n\t\t\t), array(\n\t\t\t'{{ data.name }}',\n\t\t\t'{{{ data.value }}}',\n\t\t\t'{{ data.id }}',\n\t\t), $editor );\n\n\t\t// And put the editor instance in a JS template wrapper.\n\t\techo '<script type=\"text/template\" id=\"tmpl-cmb2-wysiwyg-' . $group_id . '-' . $field_id . '\">';\n\t\t// Need to wrap the template in a wrapper div w/ specific data attributes which will be used when adding/removing rows.\n\t\techo '<div class=\"cmb2-wysiwyg-inner-wrap\" data-iterator=\"{{ data.iterator }}\" data-groupid=\"' . $group_id . '\" data-id=\"' . $field_id . '\" data-hash=\"' . $hash . '\">' . $editor . '</div>';\n\t\techo '</script>';\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Radio.php","ext":"php","size":1052,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB radio field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Radio extends CMB2_Type_Multi_Base {\n\n\t/**\n\t * The type of radio field\n\t *\n\t * @var string\n\t */\n\tpublic $type = 'radio';\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types\n\t * @param array      $args\n\t */\n\tpublic function __construct( CMB2_Types $types, $args = array(), $type = '' ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->type = $type ? $type : $this->type;\n\t}\n\n\tpublic function render() {\n\t\t$args = $this->parse_args( $this->type, array(\n\t\t\t'class'   => 'cmb2-radio-list cmb2-list',\n\t\t\t'options' => $this->concat_items( array(\n\t\t\t\t'label'  => 'test',\n\t\t\t\t'method' => 'list_input',\n\t\t\t) ),\n\t\t\t'desc' => $this->_desc( true ),\n\t\t) );\n\n\t\treturn $this->rendered( $this->ul( $args ) );\n\t}\n\n\tprotected function ul( $a ) {\n\t\treturn sprintf( '<ul class=\"%s\">%s</ul>%s', $a['class'], $a['options'], $a['desc'] );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Taxonomy_Select.php","ext":"php","size":2311,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB taxonomy_select field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Taxonomy_Select extends CMB2_Type_Taxonomy_Base {\n\n\t/**\n\t * Current Term Object.\n\t *\n\t * @since 2.6.1\n\t *\n\t * @var   null|WP_Term\n\t */\n\tpublic $current_term = null;\n\n\t/**\n\t * Saved Term Object.\n\t *\n\t * @since 2.6.1\n\t *\n\t * @var   null|WP_Term\n\t */\n\tpublic $saved_term = null;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->select( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t) )\n\t\t);\n\t}\n\n\tprotected function get_term_options() {\n\t\t$all_terms = $this->get_terms();\n\n\t\tif ( ! $all_terms || is_wp_error( $all_terms ) ) {\n\t\t\treturn $this->no_terms_result( $all_terms, 'strong' );\n\t\t}\n\n\t\t$this->saved_term  = $this->get_object_term_or_default();\n\t\t$option_none = $this->field->args( 'show_option_none' );\n\t\t$options     = '';\n\n\t\tif ( ! empty( $option_none ) ) {\n\n\t\t\t$field_id = $this->_id( '', false );\n\n\t\t\t/**\n\t\t\t * Default (option-none) taxonomy-select value.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-select value.\n\t\t\t */\n\t\t\t$option_none_value = apply_filters( 'cmb2_taxonomy_select_default_value', '' );\n\n\t\t\t/**\n\t\t\t * Default (option-none) taxonomy-select value.\n\t\t\t *\n\t\t\t * The dynamic portion of the hook name, $field_id, refers to the field id attribute.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-select value.\n\t\t\t */\n\t\t\t$option_none_value = apply_filters( \"cmb2_taxonomy_select_{$field_id}_default_value\", $option_none_value );\n\n\t\t\t$options .= $this->select_option( array(\n\t\t\t\t'label'   => $option_none,\n\t\t\t\t'value'   => $option_none_value,\n\t\t\t\t'checked' => $this->saved_term == $option_none_value,\n\t\t\t) );\n\t\t}\n\n\t\t$options .= $this->loop_terms( $all_terms, $this->saved_term );\n\n\t\treturn $options;\n\t}\n\n\tprotected function loop_terms( $all_terms, $saved_term ) {\n\t\t$options = '';\n\n\t\tforeach ( $all_terms as $term ) {\n\t\t\t$this->current_term = $term;\n\t\t\t$options .= $this->select_option( array(\n\t\t\t\t'label'   => $term->name,\n\t\t\t\t'value'   => $term->slug,\n\t\t\t\t'checked' => $this->saved_term === $term->slug,\n\t\t\t) );\n\t\t}\n\n\t\treturn $options;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Taxonomy_Radio.php","ext":"php","size":2194,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB taxonomy_radio field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Taxonomy_Radio extends CMB2_Type_Taxonomy_Base {\n\tprotected $counter = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_radio' )\n\t\t);\n\t}\n\n\tprotected function get_term_options() {\n\t\t$all_terms = $this->get_terms();\n\n\t\tif ( ! $all_terms || is_wp_error( $all_terms ) ) {\n\t\t\treturn $this->no_terms_result( $all_terms );\n\t\t}\n\n\t\t$saved_term  = $this->get_object_term_or_default();\n\t\t$option_none = $this->field->args( 'show_option_none' );\n\t\t$options     = '';\n\n\t\tif ( ! empty( $option_none ) ) {\n\n\t\t\t$field_id = $this->_id( '', false );\n\n\t\t\t/**\n\t\t\t * Default (option-none) taxonomy-radio value.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-radio value.\n\t\t\t */\n\t\t\t$option_none_value = apply_filters( 'cmb2_taxonomy_radio_default_value', '' );\n\n\t\t\t/**\n\t\t\t * Default (option-none) taxonomy-radio value.\n\t\t\t *\n\t\t\t * The dynamic portion of the hook name, $field_id, refers to the field id attribute.\n\t\t\t *\n\t\t\t * @since 1.3.0\n\t\t\t *\n\t\t\t * @param string $option_none_value Default (option-none) taxonomy-radio value.\n\t\t\t */\n\t\t\t$option_none_value = apply_filters( \"cmb2_taxonomy_radio_{$field_id}_default_value\", $option_none_value );\n\n\t\t\t$options .= $this->list_term_input( (object) array(\n\t\t\t\t'slug' => $option_none_value,\n\t\t\t\t'name' => $option_none,\n\t\t\t), $saved_term );\n\t\t}\n\n\t\t$options .= $this->loop_terms( $all_terms, $saved_term );\n\n\t\treturn $options;\n\t}\n\n\tprotected function loop_terms( $all_terms, $saved_term ) {\n\t\t$options = '';\n\t\tforeach ( $all_terms as $term ) {\n\t\t\t$options .= $this->list_term_input( $term, $saved_term );\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\tprotected function list_term_input( $term, $saved_term ) {\n\t\t$args = array(\n\t\t\t'value' => $term->slug,\n\t\t\t'label' => $term->name,\n\t\t);\n\n\t\tif ( $saved_term == $term->slug ) {\n\t\t\t$args['checked'] = 'checked';\n\t\t}\n\n\t\treturn $this->list_input( $args, ++$this->counter );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Multi_Base.php","ext":"php","size":3010,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB Multi base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nabstract class CMB2_Type_Multi_Base extends CMB2_Type_Base {\n\n\t/**\n\t * Generates html for an option element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Arguments array containing value, label, and checked boolean\n\t * @return string       Generated option element html\n\t */\n\tpublic function select_option( $args = array() ) {\n\t\treturn sprintf( \"\\t\" . '<option value=\"%s\" %s>%s</option>', $args['value'], selected( isset( $args['checked'] ) && $args['checked'], true, false ), $args['label'] ) . \"\\n\";\n\t}\n\n\t/**\n\t * Generates html for list item with input\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @param  int   $i    Iterator value\n\t * @return string       Gnerated list item html\n\t */\n\tpublic function list_input( $args = array(), $i = '' ) {\n\t\t$a = $this->parse_args( 'list_input', array(\n\t\t\t'type'  => 'radio',\n\t\t\t'class' => 'cmb2-option',\n\t\t\t'name'  => $this->_name(),\n\t\t\t'id'    => $this->_id( $i ),\n\t\t\t'value' => $this->field->escaped_value(),\n\t\t\t'label' => '',\n\t\t), $args );\n\n\t\treturn sprintf( \"\\t\" . '<li><input%s/> <label for=\"%s\">%s</label></li>' . \"\\n\", $this->concat_attrs( $a, array( 'label' ) ), $a['id'], $a['label'] );\n\t}\n\n\t/**\n\t * Generates html for list item with checkbox input\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @param  int   $i    Iterator value\n\t * @return string       Gnerated list item html\n\t */\n\tpublic function list_input_checkbox( $args, $i ) {\n\t\t$saved_value = $this->field->escaped_value();\n\t\tif ( is_array( $saved_value ) && in_array( $args['value'], $saved_value ) ) {\n\t\t\t$args['checked'] = 'checked';\n\t\t}\n\t\t$args['type'] = 'checkbox';\n\t\treturn $this->list_input( $args, $i );\n\t}\n\n\t/**\n\t * Generates html for concatenated items\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Optional arguments\n\t * @return string        Concatenated html items\n\t */\n\tpublic function concat_items( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$method = isset( $args['method'] ) ? $args['method'] : 'select_option';\n\t\tunset( $args['method'] );\n\n\t\t$value = null !== $field->escaped_value()\n\t\t\t? $field->escaped_value()\n\t\t\t: $field->get_default();\n\n\t\t$value = CMB2_Utils::normalize_if_numeric( $value );\n\n\t\t$concatenated_items = '';\n\t\t$i = 1;\n\n\t\t$options = array();\n\t\tif ( $option_none = $field->args( 'show_option_none' ) ) {\n\t\t\t$options[''] = $option_none;\n\t\t}\n\t\t$options = $options + (array) $field->options();\n\t\tforeach ( $options as $opt_value => $opt_label ) {\n\n\t\t\t// Clone args & modify for just this item\n\t\t\t$a = $args;\n\n\t\t\t$a['value'] = $opt_value;\n\t\t\t$a['label'] = $opt_label;\n\n\t\t\t// Check if this option is the value of the input\n\t\t\tif ( $value === CMB2_Utils::normalize_if_numeric( $opt_value ) ) {\n\t\t\t\t$a['checked'] = 'checked';\n\t\t\t}\n\n\t\t\t$concatenated_items .= $this->$method( $a, $i++ );\n\t\t}\n\n\t\treturn $concatenated_items;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Checkbox.php","ext":"php","size":1541,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB checkbox field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Checkbox extends CMB2_Type_Text {\n\n\t/**\n\t * If checkbox is checked\n\t *\n\t * @var mixed\n\t */\n\tpublic $is_checked = null;\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types      Object for the field type.\n\t * @param array      $args       Array of arguments for the type.\n\t * @param mixed      $is_checked Whether or not the field is checked, or default value.\n\t */\n\tpublic function __construct( CMB2_Types $types, $args = array(), $is_checked = null ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->is_checked = $is_checked;\n\t}\n\n\t/**\n\t * Render the field for the field type.\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param array $args Array of arguments for the rendering.\n\t * @return CMB2_Type_Base|string\n\t */\n\tpublic function render( $args = array() ) {\n\t\t$defaults = array(\n\t\t\t'type'  => 'checkbox',\n\t\t\t'class' => 'cmb2-option cmb2-list',\n\t\t\t'value' => 'on',\n\t\t\t'desc'  => '',\n\t\t);\n\n\t\t$meta_value = $this->field->escaped_value();\n\n\t\t$is_checked = null === $this->is_checked\n\t\t\t? ! empty( $meta_value )\n\t\t\t: $this->is_checked;\n\n\t\tif ( $is_checked ) {\n\t\t\t$defaults['checked'] = 'checked';\n\t\t}\n\n\t\t$args = $this->parse_args( 'checkbox', $defaults );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf(\n\t\t\t\t'%s <label for=\"%s\">%s</label>',\n\t\t\t\tparent::render( $args ),\n\t\t\t\t$this->_id( '', false ),\n\t\t\t\t$this->_desc()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Counter_Base.php","ext":"php","size":3480,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nabstract class CMB2_Type_Counter_Base extends CMB2_Type_Base {\n\n\t/**\n\t * Whether this type has the counter added.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @var boolean\n\t */\n\tpublic $has_counter = false;\n\n\t/**\n\t * Return character counter markup for this field.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  string $val The actual value of this field.\n\t *\n\t * @return string\n\t */\n\tpublic function char_counter_markup( $val ) {\n\t\t$markup = '';\n\n\t\tif ( ! $this->field->args( 'char_counter' ) ) {\n\t\t\treturn $markup;\n\t\t}\n\n\t\t$type     = (string) $this->field->args( 'char_counter' );\n\t\t$field_id = $this->_id( '', false );\n\t\t$char_max = (int) $this->field->prop( 'char_max' );\n\t\tif ( $char_max ) {\n\t\t\t$char_max = 'data-max=\"' . $char_max . '\"';\n\t\t}\n\n\t\tswitch ( $type ) {\n\t\t\tcase 'words':\n\t\t\t\t$label = $char_max\n\t\t\t\t\t? $this->_text( 'words_left_text', esc_html__( 'Words left', 'cmb2' ) )\n\t\t\t\t\t: $this->_text( 'words_text', esc_html__( 'Words', 'cmb2' ) );\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$type  = 'characters';\n\t\t\t\t$label = $char_max\n\t\t\t\t\t? $this->_text( 'characters_left_text', esc_html__( 'Characters left', 'cmb2' ) )\n\t\t\t\t\t: $this->_text( 'characters_text', esc_html__( 'Characters', 'cmb2' ) );\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$msg = $char_max\n\t\t\t? sprintf( '<span class=\"cmb2-char-max-msg\">%s</span>', $this->_text( 'characters_truncated_text', esc_html__( 'Your text may be truncated.', 'cmb2' ) ) )\n\t\t\t: '';\n\n\t\t$length = strlen( $val );\n\t\t$width  = $length > 1 ? ( 8 * strlen( (string) $length ) ) + 15 : false;\n\n\t\t$markup .= '<p class=\"cmb2-char-counter-wrap\">';\n\t\t$markup .= sprintf(\n\t\t\t'<label><span class=\"cmb2-char-counter-label\">%2$s:</span> <input id=\"%1$s\" data-field-id=\"%3$s\" data-counter-type=\"%4$s\" %5$s class=\"cmb2-char-counter\" type=\"text\" value=\"%6$s\" readonly=\"readonly\" style=\"%7$s\"></label>%8$s',\n\t\t\tesc_attr( 'char-counter-' . $field_id ),\n\t\t\t$label,\n\t\t\tesc_attr( $field_id ),\n\t\t\t$type,\n\t\t\t$char_max,\n\t\t\t$length,\n\t\t\t$width ? \"width: {$width}px;\" : '',\n\t\t\t$msg\n\t\t);\n\t\t$markup .= '</p>';\n\n\t\t// Enqueue the required JS.\n\t\t$this->field->add_js_dependencies( array(\n\t\t\t'word-count',\n\t\t\t'wp-util',\n\t\t\t'cmb2-char-counter',\n\t\t) );\n\n\t\t$this->has_counter = true;\n\n\t\treturn $markup;\n\t}\n\n\t/**\n\t * Maybe update attributes for the character counter.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  array  $attributes Array of parsed attributes.\n\t *\n\t * @return array              Potentially modified attributes.\n\t */\n\tpublic function maybe_update_attributes_for_char_counter( $attributes ) {\n\t\t$char_counter = $this->char_counter_markup( $attributes['value'] );\n\n\t\t// Has character counter?\n\t\tif ( $char_counter ) {\n\t\t\t$attributes['class'] = ! empty( $attributes['class'] ) ? $attributes['class'] . ' cmb2-count-chars' : ' cmb2-count-chars';\n\n\t\t\t// Enforce max chars?\n\t\t\t$max = $this->enforce_max();\n\t\t\tif ( $max ) {\n\t\t\t\t$attributes['maxlength'] = $max;\n\t\t\t}\n\t\t\t$attributes['desc'] = $char_counter . $attributes['desc'];\n\t\t}\n\n\t\treturn $attributes;\n\t}\n\n\t/**\n\t * Enforce max chars?\n\t *\n\t * @since  2.7.0\n\t *\n\t * @return bool Whether to enforce max characters.\n\t */\n\tpublic function enforce_max() {\n\t\t$char_max = (int) $this->field->args( 'char_max' );\n\n\t\t// Enforce max chars?\n\t\treturn ( $this->field->args( 'char_max_enforce' ) && $char_max > 0\n\t\t\t&& 'words' !== $this->field->args( 'char_counter' ) )\n\t\t\t? $char_max\n\t\t\t: false;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Taxonomy_Multicheck_Hierarchical.php","ext":"php","size":912,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB taxonomy_multicheck_hierarchical field type\n *\n * @since  2.2.5\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Taxonomy_Multicheck_Hierarchical extends CMB2_Type_Taxonomy_Multicheck {\n\n\t/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @var integer\n\t */\n\tprotected $parent = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'class'   => $this->get_wrapper_classes(),\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_multicheck_hierarchical' )\n\t\t);\n\t}\n\n\tprotected function list_term_input( $term, $saved_terms ) {\n\t\t$options = parent::list_term_input( $term, $saved_terms );\n\t\t$children = $this->build_children( $term, $saved_terms );\n\n\t\tif ( ! empty( $children ) ) {\n\t\t\t$options .= $children;\n\t\t}\n\n\t\treturn $options;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Select_Timezone.php","ext":"php","size":663,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB select_timezone field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Select_Timezone extends CMB2_Type_Select {\n\n\tpublic function render() {\n\n\t\t$this->field->args['default'] = $this->field->get_default()\n\t\t\t? $this->field->get_default()\n\t\t\t: CMB2_Utils::timezone_string();\n\n\t\t$this->args = wp_parse_args( $this->args, array(\n\t\t\t'class'   => 'cmb2_select cmb2-select-timezone',\n\t\t\t'options' => wp_timezone_choice( $this->field->escaped_value() ),\n\t\t\t'desc'    => $this->_desc(),\n\t\t) );\n\n\t\treturn parent::render();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Multicheck.php","ext":"php","size":834,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB multicheck field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Multicheck extends CMB2_Type_Radio {\n\n\t/**\n\t * The type of radio field\n\t *\n\t * @var string\n\t */\n\tpublic $type = 'checkbox';\n\n\tpublic function render( $args = array() ) {\n\t\t$classes = false === $this->field->args( 'select_all_button' )\n\t\t\t? 'cmb2-checkbox-list no-select-all cmb2-list'\n\t\t\t: 'cmb2-checkbox-list cmb2-list';\n\n\t\t$args = $this->parse_args( $this->type, array(\n\t\t\t'class'   => $classes,\n\t\t\t'options' => $this->concat_items( array(\n\t\t\t\t'name'   => $this->_name() . '[]',\n\t\t\t\t'method' => 'list_input_checkbox',\n\t\t\t) ),\n\t\t\t'desc' => $this->_desc( true ),\n\t\t) );\n\n\t\treturn $this->rendered( $this->ul( $args ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_File_Base.php","ext":"php","size":8638,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB File base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_File_Base extends CMB2_Type_Text {\n\n\t/**\n\t * Determines if a file has a valid image extension\n\t *\n\t * @since  1.0.0\n\t * @param  string $file File url\n\t * @return bool         Whether file has a valid image extension\n\t */\n\tpublic function is_valid_img_ext( $file, $blah = false ) {\n\t\t$file_ext = CMB2_Utils::get_file_ext( $file );\n\n\t\t$valid_types = array( 'jpg', 'jpeg', 'jpe', 'png', 'gif', 'ico', 'icon' );\n\n\t\t$allowed = get_allowed_mime_types();\n\t\tif ( ! empty( $allowed ) ) {\n\t\t\tforeach ( (array) $allowed as $type => $mime) {\n\t\t\t\tif ( 0 === strpos( $mime, 'image/' ) ) {\n\t\t\t\t\t$types = explode( '|', $type );\n\t\t\t\t\t$valid_types = array_merge( $valid_types, $types );\n\t\t\t\t}\n\t\t\t}\n\t\t\t$valid_types = array_unique( $valid_types );\n\t\t}\n\n\t\t/**\n\t\t * Which image types are considered valid image file extensions.\n\t\t *\n\t\t * @since 2.0.9\n\t\t *\n\t\t * @param array $valid_types The valid image file extensions.\n\t\t */\n\t\t$is_valid_types = apply_filters( 'cmb2_valid_img_types', $valid_types );\n\t\t$is_valid = $file_ext && in_array( $file_ext, (array) $is_valid_types );\n\t\t$field_id = $this->field->id();\n\n\t\t/**\n\t\t * Filter for determining if a field value has a valid image file-type extension.\n\t\t *\n\t\t * The dynamic portion of the hook name, $field_id, refers to the field id attribute.\n\t\t *\n\t\t * @since 2.0.9\n\t\t *\n\t\t * @param bool   $is_valid Whether field value has a valid image file-type extension.\n\t\t * @param string $file     File url.\n\t\t * @param string $file_ext File extension.\n\t\t */\n\t\treturn (bool) apply_filters( \"cmb2_{$field_id}_is_valid_img_ext\", $is_valid, $file, $file_ext );\n\t}\n\n\t/**\n\t * file/file_list image wrap\n\t *\n\t * @since  2.0.2\n\t * @param  array $args Array of arguments for output\n\t * @return string       Image wrap output\n\t */\n\tpublic function img_status_output( $args ) {\n\t\treturn sprintf( '<%1$s class=\"img-status cmb2-media-item\">%2$s<p class=\"cmb2-remove-wrapper\"><a href=\"#\" class=\"cmb2-remove-file-button\"%3$s>%4$s</a></p>%5$s</%1$s>',\n\t\t\t$args['tag'],\n\t\t\t$args['image'],\n\t\t\tisset( $args['cached_id'] ) ? ' rel=\"' . esc_attr( $args['cached_id'] ) . '\"' : '',\n\t\t\tesc_html( $this->_text( 'remove_image_text', esc_html__( 'Remove Image', 'cmb2' ) ) ),\n\t\t\tisset( $args['id_input'] ) ? $args['id_input'] : ''\n\t\t);\n\t}\n\n\t/**\n\t * file/file_list file wrap\n\t *\n\t * @since  2.0.2\n\t * @param  array $args Array of arguments for output\n\t * @return string       File wrap output\n\t */\n\tpublic function file_status_output( $args ) {\n\t\treturn sprintf( '<%1$s class=\"file-status cmb2-media-item\"><span>%2$s <strong>%3$s</strong></span>&nbsp;&nbsp; (<a href=\"%4$s\" target=\"_blank\" rel=\"external\">%5$s</a> / <a href=\"#\" class=\"cmb2-remove-file-button\"%6$s>%7$s</a>)%8$s</%1$s>',\n\t\t\t$args['tag'],\n\t\t\tesc_html( $this->_text( 'file_text', esc_html__( 'File:', 'cmb2' ) ) ),\n\t\t\tesc_html( CMB2_Utils::get_file_name_from_path( $args['value'] ) ),\n\t\t\tesc_url( $args['value'] ),\n\t\t\tesc_html( $this->_text( 'file_download_text', esc_html__( 'Download', 'cmb2' ) ) ),\n\t\t\tisset( $args['cached_id'] ) ? ' rel=\"' . esc_attr( $args['cached_id'] ) . '\"' : '',\n\t\t\tesc_html( $this->_text( 'remove_text', esc_html__( 'Remove', 'cmb2' ) ) ),\n\t\t\tisset( $args['id_input'] ) ? $args['id_input'] : ''\n\t\t);\n\t}\n\n\t/**\n\t * Outputs the file/file_list underscore Javascript templates in the footer.\n\t *\n\t * @since  2.2.4\n\t * @return void\n\t */\n\tpublic static function output_js_underscore_templates() {\n\t\t?>\n\t\t<script type=\"text/html\" id=\"tmpl-cmb2-single-image\">\n\t\t\t<div class=\"img-status cmb2-media-item\">\n\t\t\t\t<img width=\"{{ data.sizeWidth }}\" height=\"{{ data.sizeHeight }}\" src=\"{{ data.sizeUrl }}\" class=\"cmb-file-field-image\" alt=\"{{ data.filename }}\" title=\"{{ data.filename }}\" />\n\t\t\t\t<p><a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}\">{{ data.stringRemoveImage }}</a></p>\n\t\t\t</div>\n\t\t</script>\n\t\t<script type=\"text/html\" id=\"tmpl-cmb2-single-file\">\n\t\t\t<div class=\"file-status cmb2-media-item\">\n\t\t\t\t<span>{{ data.stringFile }} <strong>{{ data.filename }}</strong></span>&nbsp;&nbsp; (<a href=\"{{ data.url }}\" target=\"_blank\" rel=\"external\">{{ data.stringDownload }}</a> / <a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}\">{{ data.stringRemoveFile }}</a>)\n\t\t\t</div>\n\t\t</script>\n\t\t<script type=\"text/html\" id=\"tmpl-cmb2-list-image\">\n\t\t\t<li class=\"img-status cmb2-media-item\">\n\t\t\t\t<img width=\"{{ data.sizeWidth }}\" height=\"{{ data.sizeHeight }}\" src=\"{{ data.sizeUrl }}\" class=\"cmb-file_list-field-image\" alt=\"{{ data.filename }}\">\n\t\t\t\t<p><a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}[{{ data.id }}]\">{{ data.stringRemoveImage }}</a></p>\n\t\t\t\t<input type=\"hidden\" id=\"filelist-{{ data.id }}\" data-id=\"{{ data.id }}\" name=\"{{ data.mediaFieldName }}[{{ data.id }}]\" value=\"{{ data.url }}\">\n\t\t\t</li>\n\t\t</script>\n\t\t<script type=\"text/html\" id=\"tmpl-cmb2-list-file\">\n\t\t\t<li class=\"file-status cmb2-media-item\">\n\t\t\t\t<span>{{ data.stringFile }} <strong>{{ data.filename }}</strong></span>&nbsp;&nbsp; (<a href=\"{{ data.url }}\" target=\"_blank\" rel=\"external\">{{ data.stringDownload }}</a> / <a href=\"#\" class=\"cmb2-remove-file-button\" rel=\"{{ data.mediaField }}[{{ data.id }}]\">{{ data.stringRemoveFile }}</a>)\n\t\t\t\t<input type=\"hidden\" id=\"filelist-{{ data.id }}\" data-id=\"{{ data.id }}\" name=\"{{ data.mediaFieldName }}[{{ data.id }}]\" value=\"{{ data.url }}\">\n\t\t\t</li>\n\t\t</script>\n\t\t<?php\n\t}\n\n\t/**\n\t * Utility method to return an array of meta data for a registered image size\n\t *\n\t * Uses CMB2_Utils::get_named_size() to get the closest available named size\n\t * from an array of width and height values and CMB2_Utils::get_available_image_sizes()\n\t * to get the meta data associated with a named size.\n\t *\n\t * @since  2.2.4\n\t * @param  array|string $img_size  Image size. Accepts an array of width and height (in that order)\n\t * @param  string       $fallback  Size to use if the supplied named size doesn't exist\n\t * @return array                   Array containing the image size meta data\n\t *    $size = (\n\t *      'width'  => (int) image size width\n\t *      'height' => (int) image size height\n\t *      'name'   => (string) e.g. 'thumbnail'\n\t *    )\n\t */\n\tstatic function get_image_size_data( $img_size = '', $fallback = 'thumbnail' ) {\n\t\t$data = array();\n\n\t\tif ( is_array( $img_size ) ) {\n\t\t\t$data['width']  = intval( $img_size[0] );\n\t\t\t$data['height'] = intval( $img_size[1] );\n\t\t\t$data['name']   = '';\n\n\t\t\t// Try and get the closest named size from our array of dimensions\n\t\t\tif ( $named_size = CMB2_Utils::get_named_size( $img_size ) ) {\n\t\t\t\t$data['name'] = $named_size;\n\t\t\t}\n\t\t} else {\n\n\t\t\t$image_sizes = CMB2_Utils::get_available_image_sizes();\n\n\t\t\t// The 'thumb' alias, which works elsewhere, doesn't work in the wp.media uploader\n\t\t\tif ( 'thumb' == $img_size ) {\n\t\t\t\t$img_size = 'thumbnail';\n\t\t\t}\n\n\t\t\t// Named size doesn't exist, use $fallback\n\t\t\tif ( ! array_key_exists( $img_size, $image_sizes ) ) {\n\t\t\t\t$img_size = $fallback;\n\t\t\t}\n\n\t\t\t// Get image dimensions from named sizes\n\t\t\t$data['width']  = intval( $image_sizes[ $img_size ]['width'] );\n\t\t\t$data['height'] = intval( $image_sizes[ $img_size ]['height'] );\n\t\t\t$data['name']   = $img_size;\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t/**\n\t * Filters attachment data prepared for JavaScript.\n\t *\n\t * Adds the url, width, height, and orientation for custom sizes to the JavaScript\n\t * object returned by the wp.media uploader. Hooked to 'wp_prepare_attachment_for_js'.\n\t *\n\t * @since  2.2.4\n\t * @param  array      $response   Array of prepared attachment data\n\t * @param  int|object $attachment Attachment ID or object\n\t * @param  array      $meta       Array of attachment meta data ( from wp_get_attachment_metadata() )\n\t * @return array      filtered $response array\n\t */\n\tpublic static function prepare_image_sizes_for_js( $response, $attachment, $meta ) {\n\t\tforeach ( CMB2_Utils::get_available_image_sizes() as $size => $info ) {\n\n\t\t\t// registered image size exists for this attachment\n\t\t\tif ( isset( $meta['sizes'][ $size ] ) ) {\n\n\t\t\t\t$attachment_url = wp_get_attachment_url( $attachment->ID );\n\t\t\t\t$base_url = str_replace( wp_basename( $attachment_url ), '', $attachment_url );\n\t\t\t\t$size_meta = $meta['sizes'][ $size ];\n\n\t\t\t\t$response['sizes'][ $size ] = array(\n\t\t\t\t\t'url'         => $base_url . $size_meta['file'],\n\t\t\t\t\t'height'      => $size_meta['height'],\n\t\t\t\t\t'width'       => $size_meta['width'],\n\t\t\t\t\t'orientation' => $size_meta['height'] > $size_meta['width'] ? 'portrait' : 'landscape',\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\treturn $response;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Title.php","ext":"php","size":997,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB title field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Title extends CMB2_Type_Base {\n\n\t/**\n\t * Handles outputting an 'title' element\n\t *\n\t * @return string Heading element\n\t */\n\tpublic function render() {\n\t\t$name = $this->field->args( 'name' );\n\t\t$tag  = 'span';\n\n\t\tif ( ! empty( $name ) ) {\n\t\t\t$tag = $this->field->object_type == 'post' ? 'h5' : 'h3';\n\t\t}\n\n\t\t$a = $this->parse_args( 'title', array(\n\t\t\t'tag'   => $tag,\n\t\t\t'class' => empty( $name ) ? 'cmb2-metabox-title-anchor' : 'cmb2-metabox-title',\n\t\t\t'name'  => $name,\n\t\t\t'desc'  => $this->_desc( true ),\n\t\t\t'id'    => str_replace( '_', '-', sanitize_html_class( $this->field->id() ) ),\n\t\t) );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf(\n\t\t\t\t'<%1$s %2$s>%3$s</%1$s>%4$s',\n\t\t\t\t$a['tag'],\n\t\t\t\t$this->concat_attrs( $a, array( 'tag', 'name', 'desc' ) ),\n\t\t\t\t$a['name'],\n\t\t\t\t$a['desc']\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Base.php","ext":"php","size":4749,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nabstract class CMB2_Type_Base {\n\n\t/**\n\t * The CMB2_Types object\n\t *\n\t * @var CMB2_Types\n\t */\n\tpublic $types;\n\n\t/**\n\t * Arguments for use in the render method\n\t *\n\t * @var array\n\t */\n\tpublic $args;\n\n\t/**\n\t * Rendered output (if 'rendered' argument is set to false)\n\t *\n\t * @var string\n\t */\n\tprotected $rendered = '';\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t * @param CMB2_Types $types Object for the field type.\n\t * @param array      $args  Array of arguments for the type.\n\t */\n\tpublic function __construct( CMB2_Types $types, $args = array() ) {\n\t\t$this->types      = $types;\n\t\t$args['rendered'] = isset( $args['rendered'] ) ? (bool) $args['rendered'] : true;\n\t\t$this->args       = $args;\n\t}\n\n\t/**\n\t * Handles rendering this field type.\n\t *\n\t * @since  2.2.2\n\t * @return string  Rendered field type.\n\t */\n\tabstract public function render();\n\n\t/**\n\t * Stores the rendered field output.\n\t *\n\t * @since  2.2.2\n\t * @param  string|CMB2_Type_Base $rendered Rendered output.\n\t * @return string|CMB2_Type_Base           Rendered output or this object.\n\t */\n\tpublic function rendered( $rendered ) {\n\t\t$this->field->register_js_data();\n\n\t\tif ( $this->args['rendered'] ) {\n\t\t\treturn is_a( $rendered, __CLASS__ ) ? $rendered->rendered : $rendered;\n\t\t}\n\n\t\t$this->rendered = is_a( $rendered, __CLASS__ ) ? $rendered->rendered : $rendered;\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Returns the stored rendered field output.\n\t *\n\t * @since  2.2.2\n\t * @return string Stored rendered output (if 'rendered' argument is set to false).\n\t */\n\tpublic function get_rendered() {\n\t\treturn $this->rendered;\n\t}\n\n\t/**\n\t * Handles parsing and filtering attributes while preserving any passed in via field config.\n\t *\n\t * @since  1.1.0\n\t * @param  string $element        Element for filter.\n\t * @param  array  $type_defaults  Type default arguments.\n\t * @param  array  $type_overrides Type override arguments.\n\t * @return array                  Parsed and filtered arguments.\n\t */\n\tpublic function parse_args( $element, $type_defaults, $type_overrides = array() ) {\n\t\t$args = $this->parse_args_from_overrides( $type_overrides );\n\n\t\t/**\n\t\t * Filter attributes for a field type.\n\t\t * The dynamic portion of the hook name, $element, refers to the field type.\n\t\t *\n\t\t * @since 1.1.0\n\t\t * @param array  $args              The array of attribute arguments.\n\t\t * @param array  $type_defaults     The array of default values.\n\t\t * @param array  $field             The `CMB2_Field` object.\n\t\t * @param object $field_type_object This `CMB2_Types` object.\n\t\t */\n\t\t$args = apply_filters( \"cmb2_{$element}_attributes\", $args, $type_defaults, $this->field, $this->types );\n\n\t\t$args = wp_parse_args( $args, $type_defaults );\n\n\t\tif ( ! empty( $args['js_dependencies'] ) ) {\n\t\t\t$this->field->add_js_dependencies( $args['js_dependencies'] );\n\t\t}\n\n\t\treturn $args;\n\t}\n\n\t/**\n\t * Handles parsing and filtering attributes while preserving any passed in via field config.\n\t *\n\t * @since  2.2.4\n\t * @param  array $type_overrides Type override arguments.\n\t * @return array                 Parsed arguments\n\t */\n\tprotected function parse_args_from_overrides( $type_overrides = array() ) {\n\t\t$type_overrides = empty( $type_overrides ) ? $this->args : $type_overrides;\n\n\t\tif ( true !== $this->field->args( 'disable_hash_data_attribute' ) ) {\n\t\t\t$type_overrides['data-hash'] = $this->field->hash_id();\n\t\t}\n\n\t\t$field_overrides = $this->field->args( 'attributes' );\n\n\t\treturn ! empty( $field_overrides )\n\t\t\t? wp_parse_args( $field_overrides, $type_overrides )\n\t\t\t: $type_overrides;\n\t}\n\n\t/**\n\t * Fall back to CMB2_Types methods\n\t *\n\t * @param  string $method    Method name being invoked.\n\t * @param  array  $arguments Arguments passed for the method.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t */\n\tpublic function __call( $method, $arguments ) {\n\t\tswitch ( $method ) {\n\t\t\tcase '_id':\n\t\t\tcase '_name':\n\t\t\tcase '_desc':\n\t\t\tcase '_text':\n\t\t\tcase 'concat_attrs':\n\t\t\t\treturn call_user_func_array( array( $this->types, $method ), $arguments );\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s method: %2$s', 'cmb2' ), __CLASS__, $method ) );\n\t\t}\n\t}\n\n\t/**\n\t * Magic getter for our object.\n\t *\n\t * @param string $field Property being requested.\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t */\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'field':\n\t\t\t\treturn $this->types->field;\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s property: %2$s', 'cmb2' ), __CLASS__, $field ) );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Text_Datetime_Timestamp_Timezone.php","ext":"php","size":1747,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB text_datetime_timestamp_timezone field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Text_Datetime_Timestamp_Timezone extends CMB2_Type_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$value = $field->escaped_value();\n\t\tif ( empty( $value ) ) {\n\t\t\t$value = $field->get_default();\n\t\t}\n\n\t\t$args = wp_parse_args( $this->args, array(\n\t\t\t'value'                   => $value,\n\t\t\t'desc'                    => $this->_desc( true ),\n\t\t\t'text_datetime_timestamp' => array(),\n\t\t\t'select_timezone'         => array(),\n\t\t) );\n\n\t\t$args['value'] = $value;\n\t\tif ( is_array( $args['value'] ) ) {\n\t\t\t$args['value'] = '';\n\t\t}\n\n\t\t$datetime = CMB2_Utils::get_datetime_from_value( $args['value'] );\n\t\t$value    = '';\n\t\t$tzstring = '';\n\n\t\tif ( $datetime && $datetime instanceof DateTime ) {\n\t\t\t$tzstring = $datetime->getTimezone()->getName();\n\t\t\t$value    = $datetime->getTimestamp();\n\t\t}\n\n\t\t$timestamp_args = wp_parse_args( $args['text_datetime_timestamp'], array(\n\t\t\t'desc'     => '',\n\t\t\t'value'    => $value,\n\t\t\t'rendered' => true,\n\t\t) );\n\t\t$datetime_timestamp = $this->types->text_datetime_timestamp( $timestamp_args );\n\n\t\t$timezone_select_args = wp_parse_args( $args['select_timezone'], array(\n\t\t\t'class'    => 'cmb2_select cmb2-select-timezone',\n\t\t\t'name'     => $this->_name( '[timezone]' ),\n\t\t\t'id'       => $this->_id( '_timezone' ),\n\t\t\t'options'  => wp_timezone_choice( $tzstring ),\n\t\t\t'desc'     => $args['desc'],\n\t\t\t'rendered' => true,\n\t\t) );\n\t\t$select = $this->types->select( $timezone_select_args );\n\n\t\treturn $this->rendered(\n\t\t\t$datetime_timestamp . \"\\n\" . $select\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Picker_Base.php","ext":"php","size":1382,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB Picker base field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nabstract class CMB2_Type_Picker_Base extends CMB2_Type_Text {\n\n\t/**\n\t * Parse the picker attributes.\n\t *\n\t * @since  2.2.0\n\t * @param  string $arg  'date' or 'time'\n\t * @param  array  $args Optional arguments to modify (else use $this->field->args['attributes'])\n\t * @return array         Array of field attributes\n\t */\n\tpublic function parse_picker_options( $arg = 'date', $args = array() ) {\n\t\t$att    = 'data-' . $arg . 'picker';\n\t\t$update = empty( $args );\n\t\t$atts   = array();\n\t\t$format = $this->field->args( $arg . '_format' );\n\n\t\tif ( $js_format = CMB2_Utils::php_to_js_dateformat( $format ) ) {\n\n\t\t\tif ( $update ) {\n\t\t\t\t$atts = $this->field->args( 'attributes' );\n\t\t\t} else {\n\t\t\t\t$atts = isset( $args['attributes'] )\n\t\t\t\t\t? $args['attributes']\n\t\t\t\t\t: $atts;\n\t\t\t}\n\n\t\t\t// Don't override user-provided datepicker values\n\t\t\t$data = isset( $atts[ $att ] )\n\t\t\t\t? json_decode( $atts[ $att ], true )\n\t\t\t\t: array();\n\n\t\t\t$data[ $arg . 'Format' ] = $js_format;\n\t\t\t$atts[ $att ] = function_exists( 'wp_json_encode' )\n\t\t\t\t? wp_json_encode( $data )\n\t\t\t\t: json_encode( $data );\n\t\t}\n\n\t\tif ( $update ) {\n\t\t\t$this->field->args['attributes'] = $atts;\n\t\t}\n\n\t\treturn array_merge( $args, $atts );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Text.php","ext":"php","size":1409,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB text field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Text extends CMB2_Type_Counter_Base {\n\n\t/**\n\t * The type of field\n\t *\n\t * @var string\n\t */\n\tpublic $type = 'input';\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types\n\t * @param array      $args\n\t */\n\tpublic function __construct( CMB2_Types $types, $args = array(), $type = '' ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->type = $type ? $type : $this->type;\n\t}\n\n\t/**\n\t * Handles outputting an 'input' element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @return string       Form input element\n\t */\n\tpublic function render( $args = array() ) {\n\t\t$args = empty( $args ) ? $this->args : $args;\n\t\t$a = $this->parse_args( $this->type, array(\n\t\t\t'type'            => 'text',\n\t\t\t'class'           => 'regular-text',\n\t\t\t'name'            => $this->_name(),\n\t\t\t'id'              => $this->_id(),\n\t\t\t'value'           => $this->field->escaped_value(),\n\t\t\t'desc'            => $this->_desc( true ),\n\t\t\t'js_dependencies' => array(),\n\t\t), $args );\n\n\t\t// Add character counter?\n\t\t$a = $this->maybe_update_attributes_for_char_counter( $a );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<input%s/>%s', $this->concat_attrs( $a, array( 'desc' ) ), $a['desc'] )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Oembed.php","ext":"php","size":1033,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB oembed field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Oembed extends CMB2_Type_Text {\n\n\tpublic function render( $args = array() ) {\n\t\t$field = $this->field;\n\n\t\t$meta_value = trim( $field->escaped_value() );\n\n\t\t$oembed = ! empty( $meta_value )\n\t\t\t? cmb2_ajax()->get_oembed( array(\n\t\t\t\t'url'         => $field->escaped_value(),\n\t\t\t\t'object_id'   => $field->object_id,\n\t\t\t\t'object_type' => $field->object_type,\n\t\t\t\t'oembed_args' => array(\n\t\t\t\t\t'width' => '640',\n\t\t\t\t),\n\t\t\t\t'field_id'    => $this->_id( '', false ),\n\t\t\t) )\n\t\t\t: '';\n\n\t\treturn parent::render( array(\n\t\t\t'class'           => 'cmb2-oembed regular-text',\n\t\t\t'data-objectid'   => $field->object_id,\n\t\t\t'data-objecttype' => $field->object_type,\n\t\t) )\n\t\t. '<p class=\"cmb-spinner spinner\"></p>'\n\t\t. '<div id=\"' . $this->_id( '-status' ) . '\" class=\"cmb2-media-status ui-helper-clearfix embed_wrap\">' . $oembed . '</div>';\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Taxonomy_Radio_Hierarchical.php","ext":"php","size":842,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB taxonomy_radio_hierarchical field type\n *\n * @since  2.2.5\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Taxonomy_Radio_Hierarchical extends CMB2_Type_Taxonomy_Radio {\n\n\t/**\n\t * Parent term ID when looping hierarchical terms.\n\t *\n\t * @var integer\n\t */\n\tprotected $parent = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_radio_hierarchical' )\n\t\t);\n\t}\n\n\tprotected function list_term_input( $term, $saved_term ) {\n\t\t$options = parent::list_term_input( $term, $saved_term );\n\t\t$children = $this->build_children( $term, $saved_term );\n\n\t\tif ( ! empty( $children ) ) {\n\t\t\t$options .= $children;\n\t\t}\n\n\t\treturn $options;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Textarea.php","ext":"php","size":1041,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB textarea field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Textarea extends CMB2_Type_Counter_Base {\n\n\t/**\n\t * Handles outputting an 'textarea' element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @return string       Form textarea element\n\t */\n\tpublic function render( $args = array() ) {\n\t\t$args = empty( $args ) ? $this->args : $args;\n\t\t$a = $this->parse_args( 'textarea', array(\n\t\t\t'class' => 'cmb2_textarea',\n\t\t\t'name'  => $this->_name(),\n\t\t\t'id'    => $this->_id(),\n\t\t\t'cols'  => 60,\n\t\t\t'rows'  => 10,\n\t\t\t'value' => $this->field->escaped_value( 'esc_textarea' ),\n\t\t\t'desc'  => $this->_desc( true ),\n\t\t), $args );\n\n\t\t// Add character counter?\n\t\t$a = $this->maybe_update_attributes_for_char_counter( $a );\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<textarea%s>%s</textarea>%s', $this->concat_attrs( $a, array( 'desc', 'value' ) ), $a['value'], $a['desc'] )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_File_List.php","ext":"php","size":2326,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB file_list field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_File_List extends CMB2_Type_File_Base {\n\n\tpublic function render( $args = array() ) {\n\t\t$field      = $this->field;\n\t\t$meta_value = $field->escaped_value();\n\t\t$name       = $this->_name();\n\t\t$img_size   = $field->args( 'preview_size' );\n\t\t$query_args = $field->args( 'query_args' );\n\t\t$output     = '';\n\n\t\t// get an array of image size meta data, fallback to 'thumbnail'\n\t\t$img_size_data = parent::get_image_size_data( $img_size, 'thumbnail' );\n\n\t\t$output .= parent::render( array(\n\t\t\t'type'  => 'hidden',\n\t\t\t'class' => 'cmb2-upload-file cmb2-upload-list',\n\t\t\t'size'  => 45,\n\t\t\t'desc'  => '',\n\t\t\t'value' => '',\n\t\t\t'data-previewsize' => sprintf( '[%d,%d]', $img_size_data['width'], $img_size_data['height'] ),\n\t\t\t'data-sizename'    => $img_size_data['name'],\n\t\t\t'data-queryargs'   => ! empty( $query_args ) ? json_encode( $query_args ) : '',\n\t\t\t'js_dependencies'  => 'media-editor',\n\t\t) );\n\n\t\t$output .= parent::render( array(\n\t\t\t'type'  => 'button',\n\t\t\t'class' => 'cmb2-upload-button button-secondary cmb2-upload-list',\n\t\t\t'value' => esc_attr( $this->_text( 'add_upload_files_text', esc_html__( 'Add or Upload Files', 'cmb2' ) ) ),\n\t\t\t'name'  => false,\n\t\t\t'id'    => false,\n\t\t) );\n\n\t\t$output .= '<ul id=\"' . $this->_id( '-status', false ) . '\" class=\"cmb2-media-status cmb-attach-list\">';\n\n\t\tif ( $meta_value && is_array( $meta_value ) ) {\n\n\t\t\tforeach ( $meta_value as $id => $fullurl ) {\n\t\t\t\t$id_input = parent::render( array(\n\t\t\t\t\t'type'    => 'hidden',\n\t\t\t\t\t'value'   => $fullurl,\n\t\t\t\t\t'name'    => $name . '[' . $id . ']',\n\t\t\t\t\t'id'      => 'filelist-' . $id,\n\t\t\t\t\t'data-id' => $id,\n\t\t\t\t\t'desc'    => '',\n\t\t\t\t\t'class'   => false,\n\t\t\t\t) );\n\n\t\t\t\tif ( $this->is_valid_img_ext( $fullurl ) ) {\n\n\t\t\t\t\t$output .= $this->img_status_output( array(\n\t\t\t\t\t\t'image'    => wp_get_attachment_image( $id, $img_size ),\n\t\t\t\t\t\t'tag'      => 'li',\n\t\t\t\t\t\t'id_input' => $id_input,\n\t\t\t\t\t) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t$output .= $this->file_status_output( array(\n\t\t\t\t\t\t'value'    => $fullurl,\n\t\t\t\t\t\t'tag'      => 'li',\n\t\t\t\t\t\t'id_input' => $id_input,\n\t\t\t\t\t) );\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$output .= '</ul>';\n\n\t\treturn $this->rendered( $output );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Text_Time.php","ext":"php","size":658,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB text_time field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Text_Time extends CMB2_Type_Text_Date {\n\n\tpublic function render( $args = array() ) {\n\t\t$this->args = $this->parse_picker_options( 'time', wp_parse_args( $this->args, array(\n\t\t\t'class'           => 'cmb2-timepicker text-time',\n\t\t\t'value'           => $this->field->get_timestamp_format( 'time_format' ),\n\t\t\t'js_dependencies' => array( 'jquery-ui-core', 'jquery-ui-datepicker', 'jquery-ui-datetimepicker' ),\n\t\t) ) );\n\n\t\treturn parent::render();\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Colorpicker.php","ext":"php","size":2862,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB colorpicker field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Colorpicker extends CMB2_Type_Text {\n\n\t/**\n\t * The optional value for the colorpicker field\n\t *\n\t * @var string\n\t */\n\tpublic $value = '';\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param CMB2_Types $types Object for the field type.\n\t * @param array      $args  Array of arguments for the type.\n\t * @param string     $value Value that the field type is currently set to, or default value.\n\t */\n\tpublic function __construct( CMB2_Types $types, $args = array(), $value = '' ) {\n\t\tparent::__construct( $types, $args );\n\t\t$this->value = $value ? $value : $this->value;\n\t}\n\n\t/**\n\t * Render the field for the field type.\n\t *\n\t * @since 2.2.2\n\t *\n\t * @param array $args Array of arguments for the rendering.\n\t *\n\t * @return CMB2_Type_Base|string\n\t */\n\tpublic function render( $args = array() ) {\n\t\t$meta_value = $this->value ? $this->value : $this->field->escaped_value();\n\n\t\t$meta_value = self::sanitize_color( $meta_value );\n\n\t\twp_enqueue_style( 'wp-color-picker' );\n\n\t\t$args = wp_parse_args( $args, array(\n\t\t\t'class' => 'cmb2-text-small',\n\t\t) );\n\n\t\t$args['class']          .= ' cmb2-colorpicker';\n\t\t$args['value']           = $meta_value;\n\t\t$args['js_dependencies'] = array( 'wp-color-picker' );\n\n\t\tif ( $this->field->options( 'alpha' ) ) {\n\t\t\t$args['js_dependencies'][] = 'wp-color-picker-alpha';\n\t\t\t$args['data-alpha']        = 'true';\n\t\t}\n\n\t\t$args = wp_parse_args( $this->args, $args );\n\n\t\treturn parent::render( $args );\n\t}\n\n\t/**\n\t * Sanitizes the given color, or array of colors.\n\t *\n\t * @since 2.9.0\n\t *\n\t * @param string|array $color The color or array of colors to sanitize.\n\t *\n\t * @return string|array The color or array of colors, sanitized.\n\t */\n\tpublic static function sanitize_color( $color ) {\n\n\t\tif ( is_array( $color ) ) {\n\n\t\t\t$color = array_map( array( 'CMB2_Type_Colorpicker', 'sanitize_color' ), $color );\n\n\t\t} else {\n\n\t\t\t// Regexp for hexadecimal colors\n\t\t\t$hex_color = '(([a-fA-F0-9]){3}){1,2}$';\n\n\t\t\tif ( preg_match( '/^' . $hex_color . '/i', $color ) ) {\n\t\t\t\t// Value is just 123abc, so prepend #\n\t\t\t\t$color = '#' . $color;\n\t\t\t} elseif (\n\t\t\t\t// If value doesn't match #123abc...\n\t\t\t\t! preg_match( '/^#' . $hex_color . '/i', $color )\n\t\t\t\t// And value doesn't match rgba()...\n\t\t\t\t&& 0 !== strpos( trim( $color ), 'rgba' )\n\t\t\t) {\n\t\t\t\t// Then sanitize to just #.\n\t\t\t\t$color = '#';\n\t\t\t}\n\n\t\t}\n\n\t\treturn $color;\n\t}\n\n\t/**\n\t * Provide the option to use a rgba colorpicker.\n\t *\n\t * @since 2.2.6.2\n\t */\n\tpublic static function dequeue_rgba_colorpicker_script() {\n\t\tif ( wp_script_is( 'jw-cmb2-rgba-picker-js', 'enqueued' ) ) {\n\t\t\twp_dequeue_script( 'jw-cmb2-rgba-picker-js' );\n\t\t\tCMB2_JS::register_colorpicker_alpha( true );\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Taxonomy_Multicheck.php","ext":"php","size":1809,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB taxonomy_multicheck field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Taxonomy_Multicheck extends CMB2_Type_Taxonomy_Base {\n\tprotected $counter = 0;\n\n\tpublic function render() {\n\t\treturn $this->rendered(\n\t\t\t$this->types->radio( array(\n\t\t\t\t'class'   => $this->get_wrapper_classes(),\n\t\t\t\t'options' => $this->get_term_options(),\n\t\t\t), 'taxonomy_multicheck' )\n\t\t);\n\t}\n\n\tprotected function get_term_options() {\n\t\t$all_terms = $this->get_terms();\n\n\t\tif ( ! $all_terms || is_wp_error( $all_terms ) ) {\n\t\t\treturn $this->no_terms_result( $all_terms );\n\t\t}\n\n\t\treturn $this->loop_terms( $all_terms, $this->get_object_term_or_default() );\n\t}\n\n\tprotected function loop_terms( $all_terms, $saved_terms ) {\n\t\t$options = '';\n\t\tforeach ( $all_terms as $term ) {\n\t\t\t$options .= $this->list_term_input( $term, $saved_terms );\n\t\t}\n\n\t\treturn $options;\n\t}\n\n\tprotected function list_term_input( $term, $saved_terms ) {\n\t\t$args = array(\n\t\t\t'value' => $term->slug,\n\t\t\t'label' => $term->name,\n\t\t\t'type'  => 'checkbox',\n\t\t\t'name'  => $this->_name() . '[]',\n\t\t);\n\n\t\tif ( is_array( $saved_terms ) && in_array( $term->slug, $saved_terms ) ) {\n\t\t\t$args['checked'] = 'checked';\n\t\t}\n\n\t\treturn $this->list_input( $args, ++$this->counter );\n\t}\n\n\tpublic function get_object_term_or_default() {\n\t\t$saved_terms = $this->get_object_terms();\n\n\t\treturn is_wp_error( $saved_terms ) || empty( $saved_terms )\n\t\t\t? $this->field->get_default()\n\t\t\t: wp_list_pluck( $saved_terms, 'slug' );\n\t}\n\n\tprotected function get_wrapper_classes() {\n\t\t$classes = 'cmb2-checkbox-list cmb2-list';\n\t\tif ( false === $this->field->args( 'select_all_button' ) ) {\n\t\t\t$classes .= ' no-select-all';\n\t\t}\n\n\t\treturn $classes;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/types/CMB2_Type_Textarea_Code.php","ext":"php","size":938,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB textarea_code field type\n *\n * @since  2.2.2\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Type_Textarea_Code extends CMB2_Type_Textarea {\n\n\t/**\n\t * Handles outputting an 'textarea' element\n\t *\n\t * @since  1.1.0\n\t * @param  array $args Override arguments\n\t * @return string       Form textarea element\n\t */\n\tpublic function render( $args = array() ) {\n\t\t$args = wp_parse_args( $args, array(\n\t\t\t'class' => 'cmb2-textarea-code',\n\t\t\t'desc'  => '</pre>' . $this->_desc( true ),\n\t\t) );\n\n\t\tif ( true !== $this->field->options( 'disable_codemirror' )\n\t\t\t&& function_exists( 'wp_enqueue_code_editor' ) ) {\n\t\t\t$args['js_dependencies'] = array( 'code-editor' );\n\t\t} else {\n\t\t\t$args['class'] = rtrim( $args['class'] ) . ' disable-codemirror';\n\t\t}\n\n\t\treturn $this->rendered(\n\t\t\tsprintf( '<pre>%s', parent::render( $args ) )\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/CMB2_Hookup_Field.php","ext":"php","size":5888,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB2 Hookup Field\n *\n * Adds necessary hooks for certain field types.\n *\n * @since  2.11.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Hookup_Field {\n\n\t/**\n\t * Field id.\n\t *\n\t * @var   string\n\t * @since 2.11.0\n\t */\n\tprotected $field_id;\n\n\t/**\n\t * CMB2 object id.\n\t *\n\t * @var   string\n\t * @since 2.11.0\n\t */\n\tprotected $cmb_id;\n\n\t/**\n\t * The object type we are performing the hookup for\n\t *\n\t * @var   string\n\t * @since 2.11.0\n\t */\n\tprotected $object_type = 'post';\n\n\t/**\n\t * Initialize all hooks for the given field.\n\t *\n\t * @since  2.11.0\n\t * @param  array $field The field arguments array.\n\t * @param  CMB2  $cmb   The CMB2 object.\n\t * @return array        The field arguments array.\n\t */\n\tpublic static function init( $field, CMB2 $cmb ) {\n\t\tswitch ( $field['type'] ) {\n\t\t\tcase 'file':\n\t\t\tcase 'file_list':\n\t\t\t\t// Initiate attachment JS hooks.\n\t\t\t\tadd_filter( 'wp_prepare_attachment_for_js', array( 'CMB2_Type_File_Base', 'prepare_image_sizes_for_js' ), 10, 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'oembed':\n\t\t\t\t// Initiate oembed Ajax hooks.\n\t\t\t\tcmb2_ajax();\n\t\t\t\tbreak;\n\n\t\t\tcase 'group':\n\t\t\t\tif ( empty( $field['render_row_cb'] ) ) {\n\t\t\t\t\t$field['render_row_cb'] = array( $cmb, 'render_group_callback' );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'colorpicker':\n\t\t\t\t// https://github.com/JayWood/CMB2_RGBa_Picker\n\t\t\t\t// Dequeue the rgba_colorpicker custom field script if it is used,\n\t\t\t\t// since we now enqueue our own more current version.\n\t\t\t\tadd_action( 'admin_enqueue_scripts', array( 'CMB2_Type_Colorpicker', 'dequeue_rgba_colorpicker_script' ), 99 );\n\t\t\t\tbreak;\n\n\t\t\tcase 'text_datetime_timestamp_timezone':\n\t\t\t\tforeach ( $cmb->box_types() as $object_type ) {\n\t\t\t\t\tif ( ! $cmb->is_supported_core_object_type( $object_type ) ) {\n\t\t\t\t\t\t// Ignore post-types...\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( empty( $field['field_hookup_instance'][ $object_type ] ) ) {\n\t\t\t\t\t\t$instance = new self( $field, $object_type, $cmb );\n\t\t\t\t\t\t$method   = 'options-page' === $object_type\n\t\t\t\t\t\t\t? 'text_datetime_timestamp_timezone_option_back_compat'\n\t\t\t\t\t\t\t: 'text_datetime_timestamp_timezone_back_compat';\n\n\t\t\t\t\t\t$field['field_hookup_instance'][ $object_type ] = array( $instance, $method );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( false === $field['field_hookup_instance'][ $object_type ] ) {\n\t\t\t\t\t\t// If set to false, no need to filter.\n\t\t\t\t\t\t// This can be set if you have updated your use of the field type value to\n\t\t\t\t\t\t// assume the JSON value.\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( 'options-page' === $object_type ) {\n\t\t\t\t\t\t$option_name = $cmb->object_id();\n\t\t\t\t\t\tadd_filter( \"pre_option_{$option_name}\", $field['field_hookup_instance'][ $object_type ], 10, 3 );\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tadd_filter( \"get_{$object_type}_metadata\", $field['field_hookup_instance'][ $object_type ], 10, 5 );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $field;\n\t}\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 2.11.0\n\t * @param CMB2 $cmb The CMB2 object to hookup.\n\t */\n\tpublic function __construct( $field, $object_type, CMB2 $cmb ) {\n\t\t$this->field_id    = $field['id'];\n\t\t$this->object_type = $object_type;\n\t\t$this->cmb_id      = $cmb->cmb_id;\n\t}\n\n\t/**\n\t * Adds a back-compat shim for text_datetime_timestamp_timezone field type values.\n\t *\n\t * Handles old serialized DateTime values, as well as the new JSON formatted values.\n\t *\n\t * @since  2.11.0\n\t *\n\t * @param  mixed  $value     The value of the metadata.\n\t * @param  int    $object_id ID of the object metadata is for.\n\t * @param  string $meta_key  Meta key.\n\t * @param  bool   $single    Whether to return a single value.\n\t * @param  string $meta_type Type of object metadata is for.\n\t * @return mixed             Maybe reserialized value.\n\t */\n\tpublic function text_datetime_timestamp_timezone_back_compat( $value, $object_id, $meta_key, $single, $meta_type ) {\n\t\tif ( $meta_key === $this->field_id ) {\n\t\t\tremove_filter( \"get_{$meta_type}_metadata\", [ $this, __FUNCTION__ ], 10, 5 );\n\t\t\t$value = get_metadata( $meta_type, $object_id, $meta_key, $single );\n\t\t\tadd_filter( \"get_{$meta_type}_metadata\", [ $this, __FUNCTION__ ], 10, 5 );\n\n\t\t\t$value = $this->reserialize_safe_value( $value );\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t/**\n\t * Adds a back-compat shim for text_datetime_timestamp_timezone field type values on options pages.\n\t *\n\t * Handles old serialized DateTime values, as well as the new JSON formatted values.\n\t *\n\t * @since  2.11.0\n\t *\n\t * @param  mixed  $value         The value of the option.\n\t * @param  string $option        Option name.\n\t * @param  mixed  $default_value Default value.\n\t * @return mixed                 The updated value.\n\t */\n\tpublic function text_datetime_timestamp_timezone_option_back_compat( $value, $option, $default_value ) {\n\t\tremove_filter( \"pre_option_{$option}\", [ $this, __FUNCTION__ ], 10, 3 );\n\t\t$value = get_option( $option, $default_value );\n\t\tadd_filter( \"pre_option_{$option}\", [ $this, __FUNCTION__ ], 10, 3 );\n\n\t\tif ( ! empty( $value ) && is_array( $value ) ) {\n\n\t\t\t// Loop fields and update values for all text_datetime_timestamp_timezone fields.\n\t\t\tforeach ( CMB2_Boxes::get( $this->cmb_id )->prop( 'fields' ) as $field ) {\n\t\t\t\tif (\n\t\t\t\t\t'text_datetime_timestamp_timezone' === $field['type']\n\t\t\t\t\t&& ! empty( $value[ $field['id'] ] )\n\t\t\t\t) {\n\t\t\t\t\t$value[ $field['id'] ] = $this->reserialize_safe_value( $value[ $field['id'] ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $value;\n\t}\n\n\t/**\n\t * Reserialize a value to a safe serialized DateTime value.\n\t *\n\t * @since  2.11.0\n\t *\n\t * @param  mixed $value The value to check.\n\t * @return mixed       The value, possibly reserialized.\n\t */\n\tprotected function reserialize_safe_value( $value ) {\n\t\tif ( is_array( $value ) ) {\n\t\t\treturn array_map( [ $this, 'reserialize_safe_value' ], $value );\n\t\t}\n\n\t\t$updated_val = CMB2_Utils::get_datetime_from_value( $value );\n\t\t$value = $updated_val ? serialize( $updated_val ) : '';\n\n\t\treturn $value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/CMB2_JS.php","ext":"php","size":8320,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * Handles the dependencies and enqueueing of the CMB2 JS scripts\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_JS {\n\n\t/**\n\t * The CMB2 JS handle\n\t *\n\t * @var   string\n\t * @since 2.0.7\n\t */\n\tprotected static $handle = 'cmb2-scripts';\n\n\t/**\n\t * The CMB2 JS variable name\n\t *\n\t * @var   string\n\t * @since 2.0.7\n\t */\n\tprotected static $js_variable = 'cmb2_l10';\n\n\t/**\n\t * Array of CMB2 JS dependencies\n\t *\n\t * @var   array\n\t * @since 2.0.7\n\t */\n\tprotected static $dependencies = array(\n\t\t'jquery' => 'jquery',\n\t);\n\n\t/**\n\t * Array of CMB2 fields model data for JS.\n\t *\n\t * @var   array\n\t * @since 2.4.0\n\t */\n\tprotected static $fields = array();\n\n\t/**\n\t * Add a dependency to the array of CMB2 JS dependencies\n\t *\n\t * @since 2.0.7\n\t * @param array|string $dependencies Array (or string) of dependencies to add.\n\t */\n\tpublic static function add_dependencies( $dependencies ) {\n\t\tforeach ( (array) $dependencies as $dependency ) {\n\t\t\tself::$dependencies[ $dependency ] = $dependency;\n\t\t}\n\t}\n\n\t/**\n\t * Add field model data to the array for JS.\n\t *\n\t * @since 2.4.0\n\t *\n\t * @param CMB2_Field $field Field object.\n\t */\n\tpublic static function add_field_data( CMB2_Field $field ) {\n\t\t$hash = $field->hash_id();\n\t\tif ( ! isset( self::$fields[ $hash ] ) ) {\n\t\t\tself::$fields[ $hash ] = $field->js_data();\n\t\t}\n\t}\n\n\t/**\n\t * Enqueue the CMB2 JS\n\t *\n\t * @since  2.0.7\n\t */\n\tpublic static function enqueue() {\n\t\t// Filter required script dependencies.\n\t\t$dependencies = self::$dependencies = apply_filters( 'cmb2_script_dependencies', self::$dependencies );\n\n\t\t// Only use minified files if SCRIPT_DEBUG is off.\n\t\t$debug = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG;\n\n\t\t$min = $debug ? '' : '.min';\n\n\t\t// if colorpicker.\n\t\tif ( isset( $dependencies['wp-color-picker'] ) ) {\n\t\t\tif ( ! is_admin() ) {\n\t\t\t\tself::colorpicker_frontend();\n\t\t\t}\n\n\t\t\t// Enqueue colorpicker\n\t\t\tif ( ! wp_script_is( 'wp-color-picker', 'enqueued' ) ) {\n\t\t\t\twp_enqueue_script( 'wp-color-picker' );\n\t\t\t}\n\n\t\t\tif ( isset( $dependencies['wp-color-picker-alpha'] ) ) {\n\t\t\t\tself::register_colorpicker_alpha();\n\t\t\t}\n\t\t}\n\n\t\t// if file/file_list.\n\t\tif ( isset( $dependencies['media-editor'] ) ) {\n\t\t\twp_enqueue_media();\n\t\t\tCMB2_Type_File_Base::output_js_underscore_templates();\n\t\t}\n\n\t\t// if timepicker.\n\t\tif ( isset( $dependencies['jquery-ui-datetimepicker'] ) ) {\n\t\t\tself::register_datetimepicker();\n\t\t}\n\n\t\t// if cmb2-wysiwyg.\n\t\t$enqueue_wysiwyg = isset( $dependencies['cmb2-wysiwyg'] ) && $debug;\n\t\tunset( $dependencies['cmb2-wysiwyg'] );\n\n\t\t// if cmb2-char-counter.\n\t\t$enqueue_char_counter = isset( $dependencies['cmb2-char-counter'] ) && $debug;\n\t\tunset( $dependencies['cmb2-char-counter'] );\n\n\t\t// Enqueue cmb JS.\n\t\twp_enqueue_script( self::$handle, CMB2_Utils::url( \"js/cmb2{$min}.js\" ), array_values( $dependencies ), CMB2_VERSION, true );\n\n\t\t// if SCRIPT_DEBUG, we need to enqueue separately.\n\t\tif ( $enqueue_wysiwyg ) {\n\t\t\twp_enqueue_script( 'cmb2-wysiwyg', CMB2_Utils::url( 'js/cmb2-wysiwyg.js' ), array( 'jquery', 'wp-util' ), CMB2_VERSION );\n\t\t}\n\t\tif ( $enqueue_char_counter ) {\n\t\t\twp_enqueue_script( 'cmb2-char-counter', CMB2_Utils::url( 'js/cmb2-char-counter.js' ), array( 'jquery', 'wp-util' ), CMB2_VERSION );\n\t\t}\n\n\t\tself::localize( $debug );\n\n\t\tdo_action( 'cmb2_footer_enqueue' );\n\t}\n\n\t/**\n\t * Register or enqueue the wp-color-picker-alpha script.\n\t *\n\t * @since  2.2.7\n\t *\n\t * @param  boolean $enqueue Whether or not to enqueue.\n\t *\n\t * @return void\n\t */\n\tpublic static function register_colorpicker_alpha( $enqueue = false ) {\n\t\t// Only use minified files if SCRIPT_DEBUG is off.\n\t\t$min = defined( 'SCRIPT_DEBUG' ) && SCRIPT_DEBUG ? '' : '.min';\n\t\t$func = $enqueue ? 'wp_enqueue_script' : 'wp_register_script';\n\t\t$func( 'wp-color-picker-alpha', CMB2_Utils::url( \"js/wp-color-picker-alpha{$min}.js\" ), array( 'wp-color-picker' ), '2.1.3' );\n\t}\n\n\t/**\n\t * Register or enqueue the jquery-ui-datetimepicker script.\n\t *\n\t * @since  2.2.7\n\t *\n\t * @param  boolean $enqueue Whether or not to enqueue.\n\t *\n\t * @return void\n\t */\n\tpublic static function register_datetimepicker( $enqueue = false ) {\n\t\t$func = $enqueue ? 'wp_enqueue_script' : 'wp_register_script';\n\t\t$func( 'jquery-ui-datetimepicker', CMB2_Utils::url( 'js/jquery-ui-timepicker-addon.min.js' ), array( 'jquery-ui-slider' ), '1.5.0' );\n\t}\n\n\t/**\n\t * We need to register colorpicker on the front-end\n\t *\n\t * @since  2.0.7\n\t */\n\tprotected static function colorpicker_frontend() {\n\t\twp_register_script( 'iris', admin_url( 'js/iris.min.js' ), array( 'jquery-ui-draggable', 'jquery-ui-slider', 'jquery-touch-punch' ), CMB2_VERSION );\n\t\twp_register_script( 'wp-color-picker', admin_url( 'js/color-picker.min.js' ), array( 'iris' ), CMB2_VERSION );\n\t\twp_localize_script( 'wp-color-picker', 'wpColorPickerL10n', array(\n\t\t\t'clear'         => esc_html__( 'Clear', 'cmb2' ),\n\t\t\t'defaultString' => esc_html__( 'Default', 'cmb2' ),\n\t\t\t'pick'          => esc_html__( 'Select Color', 'cmb2' ),\n\t\t\t'current'       => esc_html__( 'Current Color', 'cmb2' ),\n\t\t) );\n\t}\n\n\t/**\n\t * Localize the php variables for CMB2 JS\n\t *\n\t * @since  2.0.7\n\t *\n\t * @param mixed $debug Whether or not we are debugging.\n\t */\n\tprotected static function localize( $debug ) {\n\t\tstatic $localized = false;\n\t\tif ( $localized ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$localized = true;\n\t\t$l10n = array(\n\t\t\t'fields'            => self::$fields,\n\t\t\t'ajax_nonce'        => wp_create_nonce( 'ajax_nonce' ),\n\t\t\t'ajaxurl'           => admin_url( '/admin-ajax.php' ),\n\t\t\t'script_debug'      => $debug,\n\t\t\t'up_arrow_class'    => 'dashicons dashicons-arrow-up-alt2',\n\t\t\t'down_arrow_class'  => 'dashicons dashicons-arrow-down-alt2',\n\t\t\t'user_can_richedit' => user_can_richedit(),\n\t\t\t'defaults'          => array(\n\t\t\t\t'code_editor'  => false,\n\t\t\t\t'color_picker' => false,\n\t\t\t\t'date_picker'  => array(\n\t\t\t\t\t'changeMonth'     => true,\n\t\t\t\t\t'changeYear'      => true,\n\t\t\t\t\t'dateFormat'      => _x( 'mm/dd/yy', 'Valid formatDate string for jquery-ui datepicker', 'cmb2' ),\n\t\t\t\t\t'dayNames'        => explode( ',', esc_html__( 'Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday', 'cmb2' ) ),\n\t\t\t\t\t'dayNamesMin'     => explode( ',', esc_html__( 'Su, Mo, Tu, We, Th, Fr, Sa', 'cmb2' ) ),\n\t\t\t\t\t'dayNamesShort'   => explode( ',', esc_html__( 'Sun, Mon, Tue, Wed, Thu, Fri, Sat', 'cmb2' ) ),\n\t\t\t\t\t'monthNames'      => explode( ',', esc_html__( 'January, February, March, April, May, June, July, August, September, October, November, December', 'cmb2' ) ),\n\t\t\t\t\t'monthNamesShort' => explode( ',', esc_html__( 'Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec', 'cmb2' ) ),\n\t\t\t\t\t'nextText'        => esc_html__( 'Next', 'cmb2' ),\n\t\t\t\t\t'prevText'        => esc_html__( 'Prev', 'cmb2' ),\n\t\t\t\t\t'currentText'     => esc_html__( 'Today', 'cmb2' ),\n\t\t\t\t\t'closeText'       => esc_html__( 'Done', 'cmb2' ),\n\t\t\t\t\t'clearText'       => esc_html__( 'Clear', 'cmb2' ),\n\t\t\t\t),\n\t\t\t\t'time_picker'  => array(\n\t\t\t\t\t'timeOnlyTitle' => esc_html__( 'Choose Time', 'cmb2' ),\n\t\t\t\t\t'timeText'      => esc_html__( 'Time', 'cmb2' ),\n\t\t\t\t\t'hourText'      => esc_html__( 'Hour', 'cmb2' ),\n\t\t\t\t\t'minuteText'    => esc_html__( 'Minute', 'cmb2' ),\n\t\t\t\t\t'secondText'    => esc_html__( 'Second', 'cmb2' ),\n\t\t\t\t\t'currentText'   => esc_html__( 'Now', 'cmb2' ),\n\t\t\t\t\t'closeText'     => esc_html__( 'Done', 'cmb2' ),\n\t\t\t\t\t'timeFormat'    => _x( 'hh:mm TT', 'Valid formatting string, as per http://trentrichardson.com/examples/timepicker/', 'cmb2' ),\n\t\t\t\t\t'controlType'   => 'select',\n\t\t\t\t\t'stepMinute'    => 5,\n\t\t\t\t),\n\t\t\t),\n\t\t\t'strings' => array(\n\t\t\t\t'upload_file'  => esc_html__( 'Use this file', 'cmb2' ),\n\t\t\t\t'upload_files' => esc_html__( 'Use these files', 'cmb2' ),\n\t\t\t\t'remove_image' => esc_html__( 'Remove Image', 'cmb2' ),\n\t\t\t\t'remove_file'  => esc_html__( 'Remove', 'cmb2' ),\n\t\t\t\t'file'         => esc_html__( 'File:', 'cmb2' ),\n\t\t\t\t'download'     => esc_html__( 'Download', 'cmb2' ),\n\t\t\t\t'check_toggle' => esc_html__( 'Select / Deselect All', 'cmb2' ),\n\t\t\t),\n\t\t);\n\n\t\tif ( isset( self::$dependencies['code-editor'] ) && function_exists( 'wp_enqueue_code_editor' ) ) {\n\t\t\t$l10n['defaults']['code_editor'] = wp_enqueue_code_editor( array(\n\t\t\t\t'type' => 'text/html',\n\t\t\t) );\n\t\t}\n\n\t\twp_localize_script( self::$handle, self::$js_variable, apply_filters( 'cmb2_localized_data', $l10n ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/helper-functions.php","ext":"php","size":13048,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * CMB2 Helper Functions\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\n\n/**\n * Helper function to provide directory path to CMB2\n *\n * @since  2.0.0\n * @param  string $path Path to append.\n * @return string        Directory with optional path appended\n */\nfunction cmb2_dir( $path = '' ) {\n\treturn CMB2_DIR . $path;\n}\n\n/**\n * Autoloads files with CMB2 classes when needed\n *\n * @since  1.0.0\n * @param  string $class_name Name of the class being requested.\n */\nfunction cmb2_autoload_classes( $class_name ) {\n\tif ( 0 !== strpos( $class_name, 'CMB2' ) ) {\n\t\treturn;\n\t}\n\n\t$path = 'includes';\n\n\tif ( 'CMB2_Type' === $class_name || 0 === strpos( $class_name, 'CMB2_Type_' ) ) {\n\t\t$path .= '/types';\n\t}\n\n\tif ( 'CMB2_REST' === $class_name || 0 === strpos( $class_name, 'CMB2_REST_' ) ) {\n\t\t$path .= '/rest-api';\n\t}\n\n\tinclude_once( cmb2_dir( \"$path/{$class_name}.php\" ) );\n}\n\n/**\n * Get instance of the CMB2_Utils class\n *\n * @since  2.0.0\n * @return CMB2_Utils object CMB2 utilities class\n */\nfunction cmb2_utils() {\n\tstatic $cmb2_utils;\n\t$cmb2_utils = $cmb2_utils ? $cmb2_utils : new CMB2_Utils();\n\treturn $cmb2_utils;\n}\n\n/**\n * Get instance of the CMB2_Ajax class\n *\n * @since  2.0.0\n * @return CMB2_Ajax object CMB2 ajax class\n */\nfunction cmb2_ajax() {\n\treturn CMB2_Ajax::get_instance();\n}\n\n/**\n * Get instance of the CMB2_Option class for the passed metabox ID\n *\n * @since  2.0.0\n *\n * @param string $key Option key to fetch.\n * @return CMB2_Option object Options class for setting/getting options for metabox\n */\nfunction cmb2_options( $key ) {\n\treturn CMB2_Options::get( $key );\n}\n\n/**\n * Get a cmb oEmbed. Handles oEmbed getting for non-post objects\n *\n * @since  2.0.0\n * @param  array $args Arguments. Accepts:\n *\n *       'url'         - URL to retrieve the oEmbed from,\n *       'object_id'   - $post_id,\n *       'object_type' - 'post',\n *       'oembed_args' - $embed_args, // array containing 'width', etc\n *       'field_id'    - false,\n *       'cache_key'   - false,\n *       'wp_error'    - true/false, // To return a wp_error object if no embed found.\n *\n * @return string        oEmbed string\n */\nfunction cmb2_get_oembed( $args = array() ) {\n\t$oembed = cmb2_ajax()->get_oembed_no_edit( $args );\n\n\t// Send back our embed.\n\tif ( $oembed['embed'] && $oembed['embed'] != $oembed['fallback'] ) {\n\t\treturn '<div class=\"cmb2-oembed\">' . $oembed['embed'] . '</div>';\n\t}\n\n\t$error = sprintf(\n\t\t/* translators: 1: results for. 2: link to codex.wordpress.org/Embeds */\n\t\tesc_html__( 'No oEmbed Results Found for %1$s. View more info at %2$s.', 'cmb2' ),\n\t\t$oembed['fallback'],\n\t\t'<a href=\"https://wordpress.org/support/article/embeds/\" target=\"_blank\">codex.wordpress.org/Embeds</a>'\n\t);\n\n\tif ( isset( $args['wp_error'] ) && $args['wp_error'] ) {\n\t\treturn new WP_Error( 'cmb2_get_oembed_result', $error, compact( 'oembed', 'args' ) );\n\t}\n\n\t// Otherwise, send back error info that no oEmbeds were found.\n\treturn '<p class=\"ui-state-error-text\">' . $error . '</p>';\n}\n\n/**\n * Outputs the return of cmb2_get_oembed.\n *\n * @since  2.2.2\n * @see cmb2_get_oembed\n *\n * @param array $args oEmbed args.\n */\nfunction cmb2_do_oembed( $args = array() ) {\n\techo cmb2_get_oembed( $args );\n}\nadd_action( 'cmb2_do_oembed', 'cmb2_do_oembed' );\n\n/**\n * A helper function to get an option from a CMB2 options array\n *\n * @since  1.0.1\n * @param  string $option_key Option key.\n * @param  string $field_id   Option array field key.\n * @param  mixed  $default    Optional default fallback value.\n * @return array               Options array or specific field\n */\nfunction cmb2_get_option( $option_key, $field_id = '', $default = false ) {\n\treturn cmb2_options( $option_key )->get( $field_id, $default );\n}\n\n/**\n * A helper function to update an option in a CMB2 options array\n *\n * @since  2.0.0\n * @param  string  $option_key Option key.\n * @param  string  $field_id   Option array field key.\n * @param  mixed   $value      Value to update data with.\n * @param  boolean $single     Whether data should not be an array.\n * @return boolean             Success/Failure\n */\nfunction cmb2_update_option( $option_key, $field_id, $value, $single = true ) {\n\tif ( cmb2_options( $option_key )->update( $field_id, $value, false, $single ) ) {\n\t\treturn cmb2_options( $option_key )->set();\n\t}\n\n\treturn false;\n}\n\n/**\n * Get a CMB2 field object.\n *\n * @since  1.1.0\n * @param  array      $meta_box    Metabox ID or Metabox config array.\n * @param  array      $field_id    Field ID or all field arguments.\n * @param  int|string $object_id   Object ID (string for options-page).\n * @param  string     $object_type Type of object being saved. (e.g., post, user, term, comment, or options-page).\n *                             Defaults to metabox object type.\n * @return CMB2_Field|null     CMB2_Field object unless metabox config cannot be found\n */\nfunction cmb2_get_field( $meta_box, $field_id, $object_id = 0, $object_type = '' ) {\n\n\t$object_id = $object_id ? $object_id : get_the_ID();\n\t$cmb = $meta_box instanceof CMB2 ? $meta_box : cmb2_get_metabox( $meta_box, $object_id );\n\n\tif ( ! $cmb ) {\n\t\treturn;\n\t}\n\n\t$cmb->object_type( $object_type ? $object_type : $cmb->mb_object_type() );\n\n\treturn $cmb->get_field( $field_id );\n}\n\n/**\n * Get a field's value.\n *\n * @since  1.1.0\n * @param  array      $meta_box    Metabox ID or Metabox config array.\n * @param  array      $field_id    Field ID or all field arguments.\n * @param  int|string $object_id   Object ID (string for options-page).\n * @param  string     $object_type Type of object being saved. (e.g., post, user, term, comment, or options-page).\n *                             Defaults to metabox object type.\n * @return mixed               Maybe escaped value\n */\nfunction cmb2_get_field_value( $meta_box, $field_id, $object_id = 0, $object_type = '' ) {\n\t$field = cmb2_get_field( $meta_box, $field_id, $object_id, $object_type );\n\treturn $field->escaped_value();\n}\n\n/**\n * Because OOP can be scary\n *\n * @since  2.0.2\n * @param  array $meta_box_config Metabox Config array.\n * @return CMB2 object            Instantiated CMB2 object\n */\nfunction new_cmb2_box( array $meta_box_config ) {\n\treturn cmb2_get_metabox( $meta_box_config );\n}\n\n/**\n * Retrieve a CMB2 instance by the metabox ID\n *\n * @since  2.0.0\n * @param  mixed      $meta_box    Metabox ID or Metabox config array.\n * @param  int|string $object_id   Object ID (string for options-page).\n * @param  string     $object_type Type of object being saved.\n *                                 (e.g., post, user, term, comment, or options-page).\n *                                 Defaults to metabox object type.\n * @return CMB2 object\n */\nfunction cmb2_get_metabox( $meta_box, $object_id = 0, $object_type = '' ) {\n\n\tif ( $meta_box instanceof CMB2 ) {\n\t\treturn $meta_box;\n\t}\n\n\tif ( is_string( $meta_box ) ) {\n\t\t$cmb = CMB2_Boxes::get( $meta_box );\n\t} else {\n\t\t// See if we already have an instance of this metabox.\n\t\t$cmb = CMB2_Boxes::get( $meta_box['id'] );\n\t\t// If not, we'll initate a new metabox.\n\t\t$cmb = $cmb ? $cmb : new CMB2( $meta_box, $object_id );\n\t}\n\n\tif ( $cmb && $object_id ) {\n\t\t$cmb->object_id( $object_id );\n\t}\n\n\tif ( $cmb && $object_type ) {\n\t\t$cmb->object_type( $object_type );\n\t}\n\n\treturn $cmb;\n}\n\n/**\n * Returns array of sanitized field values from a metabox (without saving them)\n *\n * @since  2.0.3\n * @param  mixed $meta_box         Metabox ID or Metabox config array.\n * @param  array $data_to_sanitize Array of field_id => value data for sanitizing (likely $_POST data).\n * @return mixed                   Array of sanitized values or false if no CMB2 object found\n */\nfunction cmb2_get_metabox_sanitized_values( $meta_box, array $data_to_sanitize ) {\n\t$cmb = cmb2_get_metabox( $meta_box );\n\treturn $cmb ? $cmb->get_sanitized_values( $data_to_sanitize ) : false;\n}\n\n/**\n * Retrieve a metabox form\n *\n * @since  2.0.0\n * @param  mixed      $meta_box  Metabox config array or Metabox ID.\n * @param  int|string $object_id Object ID (string for options-page).\n * @param  array $args           Optional arguments array.\n * @return string             CMB2 html form markup\n */\nfunction cmb2_get_metabox_form( $meta_box, $object_id = 0, $args = array() ) {\n\n\t$object_id = $object_id ? $object_id : get_the_ID();\n\t$cmb       = cmb2_get_metabox( $meta_box, $object_id );\n\n\tob_start();\n\t// Get cmb form.\n\tcmb2_print_metabox_form( $cmb, $object_id, $args );\n\t$form = ob_get_clean();\n\n\treturn apply_filters( 'cmb2_get_metabox_form', $form, $object_id, $cmb );\n}\n\n/**\n * Display a metabox form & save it on submission\n *\n * @since  1.0.0\n * @param  mixed      $meta_box  Metabox config array or Metabox ID.\n * @param  int|string $object_id Object ID (string for options-page).\n * @param  array $args           Optional arguments array.\n */\nfunction cmb2_print_metabox_form( $meta_box, $object_id = 0, $args = array() ) {\n\n\t$object_id = $object_id ? $object_id : get_the_ID();\n\t$cmb = cmb2_get_metabox( $meta_box, $object_id );\n\n\t// if passing a metabox ID, and that ID was not found.\n\tif ( ! $cmb ) {\n\t\treturn;\n\t}\n\n\t$args = wp_parse_args( $args, array(\n\t\t'form_format' => '<form class=\"cmb-form\" method=\"post\" id=\"%1$s\" enctype=\"multipart/form-data\" encoding=\"multipart/form-data\"><input type=\"hidden\" name=\"object_id\" value=\"%2$s\">%3$s<input type=\"submit\" name=\"submit-cmb\" value=\"%4$s\" class=\"button-primary\"></form>',\n\t\t'save_button' => esc_html__( 'Save', 'cmb2' ),\n\t\t'object_type' => $cmb->mb_object_type(),\n\t\t'cmb_styles'  => $cmb->prop( 'cmb_styles' ),\n\t\t'enqueue_js'  => $cmb->prop( 'enqueue_js' ),\n\t) );\n\n\t// Set object type explicitly (rather than trying to guess from context).\n\t$cmb->object_type( $args['object_type'] );\n\n\t// Save the metabox if it's been submitted\n\t// check permissions\n\t// @todo more hardening?\n\tif (\n\t\t$cmb->prop( 'save_fields' )\n\t\t// check nonce.\n\t\t&& isset( $_POST['submit-cmb'], $_POST['object_id'], $_POST[ $cmb->nonce() ] )\n\t\t&& wp_verify_nonce( $_POST[ $cmb->nonce() ], $cmb->nonce() )\n\t\t&& $object_id && $_POST['object_id'] == $object_id\n\t) {\n\t\t$cmb->save_fields( $object_id, $cmb->object_type(), $_POST );\n\t}\n\n\t// Enqueue JS/CSS.\n\tif ( $args['cmb_styles'] ) {\n\t\tCMB2_Hookup::enqueue_cmb_css();\n\t}\n\n\tif ( $args['enqueue_js'] ) {\n\t\tCMB2_Hookup::enqueue_cmb_js();\n\t}\n\n\t$form_format = apply_filters( 'cmb2_get_metabox_form_format', $args['form_format'], $object_id, $cmb );\n\n\t$format_parts = explode( '%3$s', $form_format );\n\n\t// Show cmb form.\n\tprintf( $format_parts[0], esc_attr( $cmb->cmb_id ), esc_attr( $object_id ) );\n\t$cmb->show_form();\n\n\tif ( isset( $format_parts[1] ) && $format_parts[1] ) {\n\t\tprintf( str_ireplace( '%4$s', '%1$s', $format_parts[1] ), esc_attr( $args['save_button'] ) );\n\t}\n\n}\n\n/**\n * Display a metabox form (or optionally return it) & save it on submission.\n *\n * @since  1.0.0\n * @param  mixed      $meta_box  Metabox config array or Metabox ID.\n * @param  int|string $object_id Object ID (string for options-page).\n * @param  array      $args      Optional arguments array.\n * @return string\n */\nfunction cmb2_metabox_form( $meta_box, $object_id = 0, $args = array() ) {\n\tif ( ! isset( $args['echo'] ) || $args['echo'] ) {\n\t\tcmb2_print_metabox_form( $meta_box, $object_id, $args );\n\t} else {\n\t\treturn cmb2_get_metabox_form( $meta_box, $object_id, $args );\n\t}\n}\n\nif ( ! function_exists( 'date_create_from_format' ) ) {\n\n\t/**\n\t * Reimplementation of DateTime::createFromFormat for PHP < 5.3. :(\n\t * Borrowed from http://stackoverflow.com/questions/5399075/php-datetimecreatefromformat-in-5-2\n\t *\n\t * @param string $date_format Date format.\n\t * @param string $date_value  Date value.\n\t *\n\t * @return DateTime\n\t */\n\tfunction date_create_from_format( $date_format, $date_value ) {\n\n\t\t$schedule_format = str_replace(\n\t\t\tarray( 'M', 'Y', 'm', 'd', 'H', 'i', 'a' ),\n\t\t\tarray( '%b', '%Y', '%m', '%d', '%H', '%M', '%p' ),\n\t\t\t$date_format\n\t\t);\n\n\t\t/*\n\t\t * %Y, %m and %d correspond to date()'s Y m and d.\n\t\t * %I corresponds to H, %M to i and %p to a\n\t\t */\n\t\t// phpcs:ignore PHPCompatibility.FunctionUse.RemovedFunctions.strptimeDeprecated\n\t\t$parsed_time = strptime( $date_value, $schedule_format );\n\n\t\t$ymd = sprintf(\n\t\t\t/**\n\t\t\t * This is a format string that takes six total decimal\n\t\t\t * arguments, then left-pads them with zeros to either\n\t\t\t * 4 or 2 characters, as needed\n\t\t\t */\n\t\t\t'%04d-%02d-%02d %02d:%02d:%02d',\n\t\t\t$parsed_time['tm_year'] + 1900,  // This will be \"111\", so we need to add 1900.\n\t\t\t$parsed_time['tm_mon'] + 1,      // This will be the month minus one, so we add one.\n\t\t\t$parsed_time['tm_mday'],\n\t\t\t$parsed_time['tm_hour'],\n\t\t\t$parsed_time['tm_min'],\n\t\t\t$parsed_time['tm_sec']\n\t\t);\n\n\t\treturn new DateTime( $ymd );\n\t}\n}// End if.\n\nif ( ! function_exists( 'date_timestamp_get' ) ) {\n\n\t/**\n\t * Returns the Unix timestamp representing the date.\n\t * Reimplementation of DateTime::getTimestamp for PHP < 5.3. :(\n\t *\n\t * @param DateTime $date DateTime instance.\n\t *\n\t * @return int\n\t */\n\tfunction date_timestamp_get( DateTime $date ) {\n\t\treturn $date->format( 'U' );\n\t}\n}// End if.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/includes/CMB2_Options_Hookup.php","ext":"php","size":11273,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * Handles hooking CMB2 forms/metaboxes into the post/attachement/user screens\n * and handles hooking in and saving those fields.\n *\n * @since  2.0.0\n *\n * @category  WordPress_Plugin\n * @package   CMB2\n * @author    CMB2 team\n * @license   GPL-2.0+\n * @link      https://cmb2.io\n */\nclass CMB2_Options_Hookup extends CMB2_Hookup {\n\n\t/**\n\t * The object type we are performing the hookup for\n\t *\n\t * @var   string\n\t * @since 2.0.9\n\t */\n\tprotected $object_type = 'options-page';\n\n\t/**\n\t * Options page key.\n\t *\n\t * @var   string\n\t * @since 2.2.5\n\t */\n\tprotected $option_key = '';\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 2.0.0\n\t * @param CMB2   $cmb        The CMB2 object to hookup.\n\t * @param string $option_key Option key to use.\n\t */\n\tpublic function __construct( CMB2 $cmb, $option_key ) {\n\t\t$this->cmb = $cmb;\n\t\t$this->option_key = $option_key;\n\t}\n\n\tpublic function hooks() {\n\t\tif ( empty( $this->option_key ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! $this->cmb->prop( 'autoload', true ) ) {\n\t\t\t// Disable option autoload if requested.\n\t\t\tadd_filter( \"cmb2_should_autoload_{$this->option_key}\", '__return_false' );\n\t\t}\n\n\t\t/**\n\t\t * For WP < 4.7. Ensure the register_setting function exists.\n\t\t */\n\t\tif ( ! CMB2_Utils::wp_at_least( '4.7' ) && ! function_exists( 'register_setting' ) ) {\n\t\t\trequire_once ABSPATH . 'wp-admin/includes/plugin.php';\n\t\t}\n\n\t\t// Register setting to cmb2 group.\n\t\tregister_setting( 'cmb2', $this->option_key );\n\n\t\t// Handle saving the data.\n\t\tadd_action( 'admin_post_' . $this->option_key, array( $this, 'save_options' ) );\n\n\t\t// Optionally network_admin_menu.\n\t\t$hook = $this->cmb->prop( 'admin_menu_hook' );\n\n\t\t// Hook in to add our menu.\n\t\tadd_action( $hook, array( $this, 'options_page_menu_hooks' ), $this->get_priority() );\n\n\t\t// If in the network admin, need to use get/update_site_option.\n\t\tif ( 'network_admin_menu' === $hook ) {\n\t\t\t// Override CMB's getter.\n\t\t\tadd_filter( \"cmb2_override_option_get_{$this->option_key}\", array( $this, 'network_get_override' ), 10, 2 );\n\t\t\t// Override CMB's setter.\n\t\t\tadd_filter( \"cmb2_override_option_save_{$this->option_key}\", array( $this, 'network_update_override' ), 10, 2 );\n\t\t}\n\t}\n\n\t/**\n\t * Hook up our admin menu item and admin page.\n\t *\n\t * @since  2.2.5\n\t *\n\t * @return void\n\t */\n\tpublic function options_page_menu_hooks() {\n\t\t$parent_slug = $this->cmb->prop( 'parent_slug' );\n\t\t$title       = $this->cmb->prop( 'title' );\n\t\t$menu_title  = $this->cmb->prop( 'menu_title', $title );\n\t\t$capability  = $this->cmb->prop( 'capability' );\n\t\t$callback    = array( $this, 'options_page_output' );\n\n\t\tif ( $parent_slug ) {\n\t\t\t$page_hook = add_submenu_page(\n\t\t\t\t$parent_slug,\n\t\t\t\t$title,\n\t\t\t\t$menu_title,\n\t\t\t\t$capability,\n\t\t\t\t$this->option_key,\n\t\t\t\t$callback\n\t\t\t);\n\t\t} else {\n\t\t\t$page_hook = add_menu_page(\n\t\t\t\t$title,\n\t\t\t\t$menu_title,\n\t\t\t\t$capability,\n\t\t\t\t$this->option_key,\n\t\t\t\t$callback,\n\t\t\t\t$this->cmb->prop( 'icon_url' ),\n\t\t\t\t$this->cmb->prop( 'position' )\n\t\t\t);\n\t\t}\n\n\t\tif ( $this->cmb->prop( 'cmb_styles' ) ) {\n\t\t\t// Include CMB CSS in the head to avoid FOUC.\n\t\t\tadd_action( \"admin_print_styles-{$page_hook}\", array( 'CMB2_Hookup', 'enqueue_cmb_css' ) );\n\t\t}\n\n\t\t$this->maybe_register_message();\n\t}\n\n\t/**\n\t * If there is a message callback, let it determine how to register the message,\n\t * else add a settings message if on this settings page.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @return void\n\t */\n\tpublic function maybe_register_message() {\n\t\t$is_options_page = self::is_page( $this->option_key );\n\t\t$should_notify   = ! $this->cmb->prop( 'disable_settings_errors' ) && isset( $_GET['settings-updated'] ) && $is_options_page;\n\t\t$is_updated      = $should_notify && 'true' === $_GET['settings-updated'];\n\t\t$setting         = \"{$this->option_key}-notices\";\n\t\t$code            = '';\n\t\t$message         = __( 'Nothing to update.', 'cmb2' );\n\t\t$type            = 'notice-warning';\n\n\t\tif ( $is_updated ) {\n\t\t\t$message = __( 'Settings updated.', 'cmb2' );\n\t\t\t$type    = 'updated';\n\t\t}\n\n\t\t// Check if parameter has registered a callback.\n\t\tif ( $cb = $this->cmb->maybe_callback( 'message_cb' ) ) {\n\n\t\t\t/**\n\t\t\t * The 'message_cb' callback will receive the following parameters.\n\t\t\t * Unless there are other reasons for notifications, the callback should only\n\t\t\t * `add_settings_error()` if `$args['should_notify']` is truthy.\n\t\t\t *\n\t\t\t * @param CMB2  $cmb The CMB2 object.\n\t\t\t * @param array $args {\n\t\t\t *     An array of message arguments\n\t\t\t *\n\t\t\t *     @type bool   $is_options_page Whether current page is this options page.\n\t\t\t *     @type bool   $should_notify   Whether options were saved and we should be notified.\n\t\t\t *     @type bool   $is_updated      Whether options were updated with save (or stayed the same).\n\t\t\t *     @type string $setting         For add_settings_error(), Slug title of the setting to which\n\t\t\t *                                   this error applies.\n\t\t\t *     @type string $code            For add_settings_error(), Slug-name to identify the error.\n\t\t\t *                                   Used as part of 'id' attribute in HTML output.\n\t\t\t *     @type string $message         For add_settings_error(), The formatted message text to display\n\t\t\t *                                   to the user (will be shown inside styled `<div>` and `<p>` tags).\n\t\t\t *                                   Will be 'Settings updated.' if $is_updated is true, else 'Nothing to update.'\n\t\t\t *     @type string $type            For add_settings_error(), Message type, controls HTML class.\n\t\t\t *                                   Accepts 'error', 'updated', '', 'notice-warning', etc.\n\t\t\t *                                   Will be 'updated' if $is_updated is true, else 'notice-warning'.\n\t\t\t * }\n\t\t\t */\n\t\t\t$args = compact( 'is_options_page', 'should_notify', 'is_updated', 'setting', 'code', 'message', 'type' );\n\n\t\t\t$this->cmb->do_callback( $cb, $args );\n\n\t\t} elseif ( $should_notify ) {\n\n\t\t\tadd_settings_error( $setting, $code, $message, $type );\n\t\t}\n\t}\n\n\t/**\n\t * Display options-page output. To override, set 'display_cb' box property.\n\t *\n\t * @since  2.2.5\n\t */\n\tpublic function options_page_output() {\n\t\t$this->maybe_output_settings_notices();\n\n\t\t$callback = $this->cmb->prop( 'display_cb' );\n\t\tif ( is_callable( $callback ) ) {\n\t\t\treturn call_user_func( $callback, $this );\n\t\t}\n\n\t\t?>\n\t\t<div class=\"wrap cmb2-options-page option-<?php echo esc_attr( sanitize_html_class( $this->option_key ) ); ?>\">\n\t\t\t<?php if ( $this->cmb->prop( 'title' ) ) : ?>\n\t\t\t\t<h2><?php echo wp_kses_post( $this->cmb->prop( 'title' ) ); ?></h2>\n\t\t\t<?php endif; ?>\n\t\t\t<?php $this->options_page_tab_nav_output(); ?>\n\t\t\t<form class=\"cmb-form\" action=\"<?php echo esc_url( admin_url( 'admin-post.php' ) ); ?>\" method=\"POST\" id=\"<?php echo $this->cmb->cmb_id; ?>\" enctype=\"multipart/form-data\" encoding=\"multipart/form-data\">\n\t\t\t\t<input type=\"hidden\" name=\"action\" value=\"<?php echo esc_attr( $this->option_key ); ?>\">\n\t\t\t\t<?php $this->options_page_metabox(); ?>\n\t\t\t\t<?php submit_button( esc_attr( $this->cmb->prop( 'save_button' ) ), 'primary', 'submit-cmb' ); ?>\n\t\t\t</form>\n\t\t</div>\n\t\t<?php\n\t}\n\n\t/**\n\t * Display options-page Tab Navigation output.\n\t *\n\t * @since 2.9.0\n\t */\n\tpublic function options_page_tab_nav_output() {\n\t\t$tabs = $this->get_tab_group_tabs();\n\t\tif ( empty( $tabs ) ) {\n\t\t\treturn;\n\t\t}\n\t\t?>\n\t\t<h2 class=\"nav-tab-wrapper\">\n\t\t\t<?php foreach ( $tabs as $option_key => $tab_title ) : ?>\n\t\t\t\t<a class=\"nav-tab<?php if ( self::is_page( $option_key ) ) : ?> nav-tab-active<?php endif; ?>\" href=\"<?php menu_page_url( $option_key ); ?>\"><?php echo wp_kses_post( $tab_title ); ?></a>\n\t\t\t<?php endforeach; ?>\n\t\t</h2>\n\t\t<?php\n\t}\n\n\t/**\n\t * Outputs the settings notices if a) not a sub-page of 'options-general.php'\n\t * (because settings_errors() already called in wp-admin/options-head.php),\n\t * and b) the 'disable_settings_errors' prop is not set or truthy.\n\t *\n\t * @since  2.2.5\n\t * @return void\n\t */\n\tpublic function maybe_output_settings_notices() {\n\t\tglobal $parent_file;\n\n\t\t// The settings sub-pages will already have settings_errors() called in wp-admin/options-head.php.\n\t\tif ( 'options-general.php' !== $parent_file ) {\n\t\t\tsettings_errors( \"{$this->option_key}-notices\" );\n\t\t}\n\t}\n\n\t/**\n\t * Gets navigation tabs array for CMB2 options pages which share the\n\t * same tab_group property.\n\t *\n\t * @since 2.4.0\n\t * @return array Array of tab information ($option_key => $tab_title)\n\t */\n\tpublic function get_tab_group_tabs() {\n\t\t$tab_group = $this->cmb->prop( 'tab_group' );\n\t\t$tabs      = array();\n\n\t\tif ( $tab_group ) {\n\t\t\t$boxes = CMB2_Boxes::get_by( 'tab_group', $tab_group );\n\n\t\t\tforeach ( $boxes as $cmb_id => $cmb ) {\n\t\t\t\t$option_key = $cmb->options_page_keys();\n\n\t\t\t\t// Must have an option key, must be an options page box.\n\t\t\t\tif ( ! isset( $option_key[0] ) || 'options-page' !== $cmb->mb_object_type() ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$tabs[ $option_key[0] ] = $cmb->prop( 'tab_title', $cmb->prop( 'title' ) );\n\t\t\t}\n\t\t}\n\n\t\treturn apply_filters( 'cmb2_tab_group_tabs', $tabs, $tab_group );\n\t}\n\n\t/**\n\t * Display metaboxes for an options-page object.\n\t *\n\t * @since  2.2.5\n\t */\n\tpublic function options_page_metabox() {\n\t\t$this->show_form_for_type( 'options-page' );\n\t}\n\n\t/**\n\t * Save data from options page, then redirects back.\n\t *\n\t * @since  2.2.5\n\t * @return void\n\t */\n\tpublic function save_options() {\n\t\t$url = wp_get_referer();\n\t\tif ( ! $url ) {\n\t\t\t$url = admin_url();\n\t\t}\n\n\t\tif (\n\t\t\t$this->can_save( 'options-page' )\n\t\t\t// check params.\n\t\t\t&& isset( $_POST['submit-cmb'], $_POST['action'] )\n\t\t\t&& $this->option_key === $_POST['action']\n\t\t) {\n\n\t\t\t$updated = $this->cmb\n\t\t\t\t->save_fields( $this->option_key, $this->cmb->object_type(), $_POST )\n\t\t\t\t->was_updated(); // Will be false if no values were changed/updated.\n\n\t\t\t$url = add_query_arg( 'settings-updated', $updated ? 'true' : 'false', $url );\n\t\t}\n\n\t\twp_safe_redirect( esc_url_raw( $url ), 303 /* WP_Http::SEE_OTHER */ );\n\t\texit;\n\t}\n\n\t/**\n\t * Replaces get_option with get_site_option.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @param mixed $test    Not used.\n\t * @param mixed $default Default value to use.\n\t * @return mixed Value set for the network option.\n\t */\n\tpublic function network_get_override( $test, $default = false ) {\n\t\treturn get_site_option( $this->option_key, $default );\n\t}\n\n\t/**\n\t * Replaces update_option with update_site_option.\n\t *\n\t * @since 2.2.5\n\t *\n\t * @param mixed $test         Not used.\n\t * @param mixed $option_value Value to use.\n\t * @return bool Success/Failure\n\t */\n\tpublic function network_update_override( $test, $option_value ) {\n\t\treturn update_site_option( $this->option_key, $option_value );\n\t}\n\n\t/**\n\t * Determines if given page slug matches the 'page' GET query variable.\n\t *\n\t * @since  2.4.0\n\t *\n\t * @param  string $page Page slug.\n\t * @return boolean\n\t */\n\tpublic static function is_page( $page ) {\n\t\treturn isset( $_GET['page'] ) && $page === $_GET['page'];\n\t}\n\n\t/**\n\t * Magic getter for our object.\n\t *\n\t * @param string $field Property to retrieve.\n\t *\n\t * @throws Exception Throws an exception if the field is invalid.\n\t * @return mixed\n\t */\n\tpublic function __get( $field ) {\n\t\tswitch ( $field ) {\n\t\t\tcase 'object_type':\n\t\t\tcase 'option_key':\n\t\t\tcase 'cmb':\n\t\t\t\treturn $this->{$field};\n\t\t\tdefault:\n\t\t\t\tthrow new Exception( sprintf( esc_html__( 'Invalid %1$s property: %2$s', 'cmb2' ), __CLASS__, $field ) );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/js/jquery-ui-timepicker-addon.min.js","ext":"js","size":39854,"mtime":1757324689,"type":"text","content":"/*! jQuery Timepicker Addon - v1.5.0 - 2014-09-01\n* http://trentrichardson.com/examples/timepicker\n* Copyright (c) 2014 Trent Richardson; Licensed MIT */\n(function($){if($.ui.timepicker=$.ui.timepicker||{},!$.ui.timepicker.version){$.extend($.ui,{timepicker:{version:\"1.5.0\"}});var Timepicker=function(){this.regional=[],this.regional[\"\"]={currentText:\"Now\",closeText:\"Done\",amNames:[\"AM\",\"A\"],pmNames:[\"PM\",\"P\"],timeFormat:\"HH:mm\",timeSuffix:\"\",timeOnlyTitle:\"Choose Time\",timeText:\"Time\",hourText:\"Hour\",minuteText:\"Minute\",secondText:\"Second\",millisecText:\"Millisecond\",microsecText:\"Microsecond\",timezoneText:\"Time Zone\",isRTL:!1},this._defaults={showButtonPanel:!0,timeOnly:!1,timeOnlyShowDate:!1,showHour:null,showMinute:null,showSecond:null,showMillisec:null,showMicrosec:null,showTimezone:null,showTime:!0,stepHour:1,stepMinute:1,stepSecond:1,stepMillisec:1,stepMicrosec:1,hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null,hourMin:0,minuteMin:0,secondMin:0,millisecMin:0,microsecMin:0,hourMax:23,minuteMax:59,secondMax:59,millisecMax:999,microsecMax:999,minDateTime:null,maxDateTime:null,maxTime:null,minTime:null,onSelect:null,hourGrid:0,minuteGrid:0,secondGrid:0,millisecGrid:0,microsecGrid:0,alwaysSetTime:!0,separator:\" \",altFieldTimeOnly:!0,altTimeFormat:null,altSeparator:null,altTimeSuffix:null,altRedirectFocus:!0,pickerTimeFormat:null,pickerTimeSuffix:null,showTimepicker:!0,timezoneList:null,addSliderAccess:!1,sliderAccessArgs:null,controlType:\"slider\",defaultValue:null,parse:\"strict\"},$.extend(this._defaults,this.regional[\"\"])};$.extend(Timepicker.prototype,{$input:null,$altInput:null,$timeObj:null,inst:null,hour_slider:null,minute_slider:null,second_slider:null,millisec_slider:null,microsec_slider:null,timezone_select:null,maxTime:null,minTime:null,hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null,hourMinOriginal:null,minuteMinOriginal:null,secondMinOriginal:null,millisecMinOriginal:null,microsecMinOriginal:null,hourMaxOriginal:null,minuteMaxOriginal:null,secondMaxOriginal:null,millisecMaxOriginal:null,microsecMaxOriginal:null,ampm:\"\",formattedDate:\"\",formattedTime:\"\",formattedDateTime:\"\",timezoneList:null,units:[\"hour\",\"minute\",\"second\",\"millisec\",\"microsec\"],support:{},control:null,setDefaults:function(e){return extendRemove(this._defaults,e||{}),this},_newInst:function($input,opts){var tp_inst=new Timepicker,inlineSettings={},fns={},overrides,i;for(var attrName in this._defaults)if(this._defaults.hasOwnProperty(attrName)){var attrValue=$input.attr(\"time:\"+attrName);if(attrValue)try{inlineSettings[attrName]=eval(attrValue)}catch(err){inlineSettings[attrName]=attrValue}}overrides={beforeShow:function(e,t){return $.isFunction(tp_inst._defaults.evnts.beforeShow)?tp_inst._defaults.evnts.beforeShow.call($input[0],e,t,tp_inst):void 0},onChangeMonthYear:function(e,t,i){tp_inst._updateDateTime(i),$.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)&&tp_inst._defaults.evnts.onChangeMonthYear.call($input[0],e,t,i,tp_inst)},onClose:function(e,t){tp_inst.timeDefined===!0&&\"\"!==$input.val()&&tp_inst._updateDateTime(t),$.isFunction(tp_inst._defaults.evnts.onClose)&&tp_inst._defaults.evnts.onClose.call($input[0],e,t,tp_inst)}};for(i in overrides)overrides.hasOwnProperty(i)&&(fns[i]=opts[i]||null);tp_inst._defaults=$.extend({},this._defaults,inlineSettings,opts,overrides,{evnts:fns,timepicker:tp_inst}),tp_inst.amNames=$.map(tp_inst._defaults.amNames,function(e){return e.toUpperCase()}),tp_inst.pmNames=$.map(tp_inst._defaults.pmNames,function(e){return e.toUpperCase()}),tp_inst.support=detectSupport(tp_inst._defaults.timeFormat+(tp_inst._defaults.pickerTimeFormat?tp_inst._defaults.pickerTimeFormat:\"\")+(tp_inst._defaults.altTimeFormat?tp_inst._defaults.altTimeFormat:\"\")),\"string\"==typeof tp_inst._defaults.controlType?(\"slider\"===tp_inst._defaults.controlType&&$.ui.slider===void 0&&(tp_inst._defaults.controlType=\"select\"),tp_inst.control=tp_inst._controls[tp_inst._defaults.controlType]):tp_inst.control=tp_inst._defaults.controlType;var timezoneList=[-720,-660,-600,-570,-540,-480,-420,-360,-300,-270,-240,-210,-180,-120,-60,0,60,120,180,210,240,270,300,330,345,360,390,420,480,525,540,570,600,630,660,690,720,765,780,840];null!==tp_inst._defaults.timezoneList&&(timezoneList=tp_inst._defaults.timezoneList);var tzl=timezoneList.length,tzi=0,tzv=null;if(tzl>0&&\"object\"!=typeof timezoneList[0])for(;tzl>tzi;tzi++)tzv=timezoneList[tzi],timezoneList[tzi]={value:tzv,label:$.timepicker.timezoneOffsetString(tzv,tp_inst.support.iso8601)};return tp_inst._defaults.timezoneList=timezoneList,tp_inst.timezone=null!==tp_inst._defaults.timezone?$.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone):-1*(new Date).getTimezoneOffset(),tp_inst.hour=tp_inst._defaults.hour<tp_inst._defaults.hourMin?tp_inst._defaults.hourMin:tp_inst._defaults.hour>tp_inst._defaults.hourMax?tp_inst._defaults.hourMax:tp_inst._defaults.hour,tp_inst.minute=tp_inst._defaults.minute<tp_inst._defaults.minuteMin?tp_inst._defaults.minuteMin:tp_inst._defaults.minute>tp_inst._defaults.minuteMax?tp_inst._defaults.minuteMax:tp_inst._defaults.minute,tp_inst.second=tp_inst._defaults.second<tp_inst._defaults.secondMin?tp_inst._defaults.secondMin:tp_inst._defaults.second>tp_inst._defaults.secondMax?tp_inst._defaults.secondMax:tp_inst._defaults.second,tp_inst.millisec=tp_inst._defaults.millisec<tp_inst._defaults.millisecMin?tp_inst._defaults.millisecMin:tp_inst._defaults.millisec>tp_inst._defaults.millisecMax?tp_inst._defaults.millisecMax:tp_inst._defaults.millisec,tp_inst.microsec=tp_inst._defaults.microsec<tp_inst._defaults.microsecMin?tp_inst._defaults.microsecMin:tp_inst._defaults.microsec>tp_inst._defaults.microsecMax?tp_inst._defaults.microsecMax:tp_inst._defaults.microsec,tp_inst.ampm=\"\",tp_inst.$input=$input,tp_inst._defaults.altField&&(tp_inst.$altInput=$(tp_inst._defaults.altField),tp_inst._defaults.altRedirectFocus===!0&&tp_inst.$altInput.css({cursor:\"pointer\"}).focus(function(){$input.trigger(\"focus\")})),(0===tp_inst._defaults.minDate||0===tp_inst._defaults.minDateTime)&&(tp_inst._defaults.minDate=new Date),(0===tp_inst._defaults.maxDate||0===tp_inst._defaults.maxDateTime)&&(tp_inst._defaults.maxDate=new Date),void 0!==tp_inst._defaults.minDate&&tp_inst._defaults.minDate instanceof Date&&(tp_inst._defaults.minDateTime=new Date(tp_inst._defaults.minDate.getTime())),void 0!==tp_inst._defaults.minDateTime&&tp_inst._defaults.minDateTime instanceof Date&&(tp_inst._defaults.minDate=new Date(tp_inst._defaults.minDateTime.getTime())),void 0!==tp_inst._defaults.maxDate&&tp_inst._defaults.maxDate instanceof Date&&(tp_inst._defaults.maxDateTime=new Date(tp_inst._defaults.maxDate.getTime())),void 0!==tp_inst._defaults.maxDateTime&&tp_inst._defaults.maxDateTime instanceof Date&&(tp_inst._defaults.maxDate=new Date(tp_inst._defaults.maxDateTime.getTime())),tp_inst.$input.bind(\"focus\",function(){tp_inst._onFocus()}),tp_inst},_addTimePicker:function(e){var t=this.$altInput&&this._defaults.altFieldTimeOnly?this.$input.val()+\" \"+this.$altInput.val():this.$input.val();this.timeDefined=this._parseTime(t),this._limitMinMaxDateTime(e,!1),this._injectTimePicker()},_parseTime:function(e,t){if(this.inst||(this.inst=$.datepicker._getInst(this.$input[0])),t||!this._defaults.timeOnly){var i=$.datepicker._get(this.inst,\"dateFormat\");try{var s=parseDateTimeInternal(i,this._defaults.timeFormat,e,$.datepicker._getFormatConfig(this.inst),this._defaults);if(!s.timeObj)return!1;$.extend(this,s.timeObj)}catch(a){return $.timepicker.log(\"Error parsing the date/time string: \"+a+\"\\ndate/time string = \"+e+\"\\ntimeFormat = \"+this._defaults.timeFormat+\"\\ndateFormat = \"+i),!1}return!0}var n=$.datepicker.parseTime(this._defaults.timeFormat,e,this._defaults);return n?($.extend(this,n),!0):!1},_injectTimePicker:function(){var e=this.inst.dpDiv,t=this.inst.settings,i=this,s=\"\",a=\"\",n=null,r={},l={},o=null,c=0,u=0;if(0===e.find(\"div.ui-timepicker-div\").length&&t.showTimepicker){var m=' style=\"display:none;\"',d='<div class=\"ui-timepicker-div'+(t.isRTL?\" ui-timepicker-rtl\":\"\")+'\"><dl>'+'<dt class=\"ui_tpicker_time_label\"'+(t.showTime?\"\":m)+\">\"+t.timeText+\"</dt>\"+'<dd class=\"ui_tpicker_time\"'+(t.showTime?\"\":m)+\"></dd>\";for(c=0,u=this.units.length;u>c;c++){if(s=this.units[c],a=s.substr(0,1).toUpperCase()+s.substr(1),n=null!==t[\"show\"+a]?t[\"show\"+a]:this.support[s],r[s]=parseInt(t[s+\"Max\"]-(t[s+\"Max\"]-t[s+\"Min\"])%t[\"step\"+a],10),l[s]=0,d+='<dt class=\"ui_tpicker_'+s+'_label\"'+(n?\"\":m)+\">\"+t[s+\"Text\"]+\"</dt>\"+'<dd class=\"ui_tpicker_'+s+'\"><div class=\"ui_tpicker_'+s+'_slider\"'+(n?\"\":m)+\"></div>\",n&&t[s+\"Grid\"]>0){if(d+='<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>',\"hour\"===s)for(var h=t[s+\"Min\"];r[s]>=h;h+=parseInt(t[s+\"Grid\"],10)){l[s]++;var p=$.datepicker.formatTime(this.support.ampm?\"hht\":\"HH\",{hour:h},t);d+='<td data-for=\"'+s+'\">'+p+\"</td>\"}else for(var _=t[s+\"Min\"];r[s]>=_;_+=parseInt(t[s+\"Grid\"],10))l[s]++,d+='<td data-for=\"'+s+'\">'+(10>_?\"0\":\"\")+_+\"</td>\";d+=\"</tr></table></div>\"}d+=\"</dd>\"}var f=null!==t.showTimezone?t.showTimezone:this.support.timezone;d+='<dt class=\"ui_tpicker_timezone_label\"'+(f?\"\":m)+\">\"+t.timezoneText+\"</dt>\",d+='<dd class=\"ui_tpicker_timezone\" '+(f?\"\":m)+\"></dd>\",d+=\"</dl></div>\";var g=$(d);for(t.timeOnly===!0&&(g.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\"><div class=\"ui-datepicker-title\">'+t.timeOnlyTitle+\"</div>\"+\"</div>\"),e.find(\".ui-datepicker-header, .ui-datepicker-calendar\").hide()),c=0,u=i.units.length;u>c;c++)s=i.units[c],a=s.substr(0,1).toUpperCase()+s.substr(1),n=null!==t[\"show\"+a]?t[\"show\"+a]:this.support[s],i[s+\"_slider\"]=i.control.create(i,g.find(\".ui_tpicker_\"+s+\"_slider\"),s,i[s],t[s+\"Min\"],r[s],t[\"step\"+a]),n&&t[s+\"Grid\"]>0&&(o=100*l[s]*t[s+\"Grid\"]/(r[s]-t[s+\"Min\"]),g.find(\".ui_tpicker_\"+s+\" table\").css({width:o+\"%\",marginLeft:t.isRTL?\"0\":o/(-2*l[s])+\"%\",marginRight:t.isRTL?o/(-2*l[s])+\"%\":\"0\",borderCollapse:\"collapse\"}).find(\"td\").click(function(){var e=$(this),t=e.html(),a=parseInt(t.replace(/[^0-9]/g),10),n=t.replace(/[^apm]/gi),r=e.data(\"for\");\"hour\"===r&&(-1!==n.indexOf(\"p\")&&12>a?a+=12:-1!==n.indexOf(\"a\")&&12===a&&(a=0)),i.control.value(i,i[r+\"_slider\"],s,a),i._onTimeChange(),i._onSelectHandler()}).css({cursor:\"pointer\",width:100/l[s]+\"%\",textAlign:\"center\",overflow:\"hidden\"}));if(this.timezone_select=g.find(\".ui_tpicker_timezone\").append(\"<select></select>\").find(\"select\"),$.fn.append.apply(this.timezone_select,$.map(t.timezoneList,function(e){return $(\"<option />\").val(\"object\"==typeof e?e.value:e).text(\"object\"==typeof e?e.label:e)})),this.timezone!==void 0&&null!==this.timezone&&\"\"!==this.timezone){var M=-1*new Date(this.inst.selectedYear,this.inst.selectedMonth,this.inst.selectedDay,12).getTimezoneOffset();M===this.timezone?selectLocalTimezone(i):this.timezone_select.val(this.timezone)}else this.hour!==void 0&&null!==this.hour&&\"\"!==this.hour?this.timezone_select.val(t.timezone):selectLocalTimezone(i);this.timezone_select.change(function(){i._onTimeChange(),i._onSelectHandler()});var v=e.find(\".ui-datepicker-buttonpane\");if(v.length?v.before(g):e.append(g),this.$timeObj=g.find(\".ui_tpicker_time\"),null!==this.inst){var k=this.timeDefined;this._onTimeChange(),this.timeDefined=k}if(this._defaults.addSliderAccess){var T=this._defaults.sliderAccessArgs,D=this._defaults.isRTL;T.isRTL=D,setTimeout(function(){if(0===g.find(\".ui-slider-access\").length){g.find(\".ui-slider:visible\").sliderAccess(T);var e=g.find(\".ui-slider-access:eq(0)\").outerWidth(!0);e&&g.find(\"table:visible\").each(function(){var t=$(this),i=t.outerWidth(),s=(\"\"+t.css(D?\"marginRight\":\"marginLeft\")).replace(\"%\",\"\"),a=i-e,n=s*a/i+\"%\",r={width:a,marginRight:0,marginLeft:0};r[D?\"marginRight\":\"marginLeft\"]=n,t.css(r)})}},10)}i._limitMinMaxDateTime(this.inst,!0)}},_limitMinMaxDateTime:function(e,t){var i=this._defaults,s=new Date(e.selectedYear,e.selectedMonth,e.selectedDay);if(this._defaults.showTimepicker){if(null!==$.datepicker._get(e,\"minDateTime\")&&void 0!==$.datepicker._get(e,\"minDateTime\")&&s){var a=$.datepicker._get(e,\"minDateTime\"),n=new Date(a.getFullYear(),a.getMonth(),a.getDate(),0,0,0,0);(null===this.hourMinOriginal||null===this.minuteMinOriginal||null===this.secondMinOriginal||null===this.millisecMinOriginal||null===this.microsecMinOriginal)&&(this.hourMinOriginal=i.hourMin,this.minuteMinOriginal=i.minuteMin,this.secondMinOriginal=i.secondMin,this.millisecMinOriginal=i.millisecMin,this.microsecMinOriginal=i.microsecMin),e.settings.timeOnly||n.getTime()===s.getTime()?(this._defaults.hourMin=a.getHours(),this.hour<=this._defaults.hourMin?(this.hour=this._defaults.hourMin,this._defaults.minuteMin=a.getMinutes(),this.minute<=this._defaults.minuteMin?(this.minute=this._defaults.minuteMin,this._defaults.secondMin=a.getSeconds(),this.second<=this._defaults.secondMin?(this.second=this._defaults.secondMin,this._defaults.millisecMin=a.getMilliseconds(),this.millisec<=this._defaults.millisecMin?(this.millisec=this._defaults.millisecMin,this._defaults.microsecMin=a.getMicroseconds()):(this.microsec<this._defaults.microsecMin&&(this.microsec=this._defaults.microsecMin),this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.minuteMin=this.minuteMinOriginal,this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)):(this._defaults.hourMin=this.hourMinOriginal,this._defaults.minuteMin=this.minuteMinOriginal,this._defaults.secondMin=this.secondMinOriginal,this._defaults.millisecMin=this.millisecMinOriginal,this._defaults.microsecMin=this.microsecMinOriginal)}if(null!==$.datepicker._get(e,\"maxDateTime\")&&void 0!==$.datepicker._get(e,\"maxDateTime\")&&s){var r=$.datepicker._get(e,\"maxDateTime\"),l=new Date(r.getFullYear(),r.getMonth(),r.getDate(),0,0,0,0);(null===this.hourMaxOriginal||null===this.minuteMaxOriginal||null===this.secondMaxOriginal||null===this.millisecMaxOriginal)&&(this.hourMaxOriginal=i.hourMax,this.minuteMaxOriginal=i.minuteMax,this.secondMaxOriginal=i.secondMax,this.millisecMaxOriginal=i.millisecMax,this.microsecMaxOriginal=i.microsecMax),e.settings.timeOnly||l.getTime()===s.getTime()?(this._defaults.hourMax=r.getHours(),this.hour>=this._defaults.hourMax?(this.hour=this._defaults.hourMax,this._defaults.minuteMax=r.getMinutes(),this.minute>=this._defaults.minuteMax?(this.minute=this._defaults.minuteMax,this._defaults.secondMax=r.getSeconds(),this.second>=this._defaults.secondMax?(this.second=this._defaults.secondMax,this._defaults.millisecMax=r.getMilliseconds(),this.millisec>=this._defaults.millisecMax?(this.millisec=this._defaults.millisecMax,this._defaults.microsecMax=r.getMicroseconds()):(this.microsec>this._defaults.microsecMax&&(this.microsec=this._defaults.microsecMax),this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.minuteMax=this.minuteMaxOriginal,this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)):(this._defaults.hourMax=this.hourMaxOriginal,this._defaults.minuteMax=this.minuteMaxOriginal,this._defaults.secondMax=this.secondMaxOriginal,this._defaults.millisecMax=this.millisecMaxOriginal,this._defaults.microsecMax=this.microsecMaxOriginal)}if(null!==e.settings.minTime){var o=new Date(\"01/01/1970 \"+e.settings.minTime);this.hour<o.getHours()?(this.hour=this._defaults.hourMin=o.getHours(),this.minute=this._defaults.minuteMin=o.getMinutes()):this.hour===o.getHours()&&this.minute<o.getMinutes()?this.minute=this._defaults.minuteMin=o.getMinutes():this._defaults.hourMin<o.getHours()?(this._defaults.hourMin=o.getHours(),this._defaults.minuteMin=o.getMinutes()):this._defaults.minuteMin=this._defaults.hourMin===o.getHours()===this.hour&&this._defaults.minuteMin<o.getMinutes()?o.getMinutes():0}if(null!==e.settings.maxTime){var c=new Date(\"01/01/1970 \"+e.settings.maxTime);this.hour>c.getHours()?(this.hour=this._defaults.hourMax=c.getHours(),this.minute=this._defaults.minuteMax=c.getMinutes()):this.hour===c.getHours()&&this.minute>c.getMinutes()?this.minute=this._defaults.minuteMax=c.getMinutes():this._defaults.hourMax>c.getHours()?(this._defaults.hourMax=c.getHours(),this._defaults.minuteMax=c.getMinutes()):this._defaults.minuteMax=this._defaults.hourMax===c.getHours()===this.hour&&this._defaults.minuteMax>c.getMinutes()?c.getMinutes():59}if(void 0!==t&&t===!0){var u=parseInt(this._defaults.hourMax-(this._defaults.hourMax-this._defaults.hourMin)%this._defaults.stepHour,10),m=parseInt(this._defaults.minuteMax-(this._defaults.minuteMax-this._defaults.minuteMin)%this._defaults.stepMinute,10),d=parseInt(this._defaults.secondMax-(this._defaults.secondMax-this._defaults.secondMin)%this._defaults.stepSecond,10),h=parseInt(this._defaults.millisecMax-(this._defaults.millisecMax-this._defaults.millisecMin)%this._defaults.stepMillisec,10),p=parseInt(this._defaults.microsecMax-(this._defaults.microsecMax-this._defaults.microsecMin)%this._defaults.stepMicrosec,10);this.hour_slider&&(this.control.options(this,this.hour_slider,\"hour\",{min:this._defaults.hourMin,max:u,step:this._defaults.stepHour}),this.control.value(this,this.hour_slider,\"hour\",this.hour-this.hour%this._defaults.stepHour)),this.minute_slider&&(this.control.options(this,this.minute_slider,\"minute\",{min:this._defaults.minuteMin,max:m,step:this._defaults.stepMinute}),this.control.value(this,this.minute_slider,\"minute\",this.minute-this.minute%this._defaults.stepMinute)),this.second_slider&&(this.control.options(this,this.second_slider,\"second\",{min:this._defaults.secondMin,max:d,step:this._defaults.stepSecond}),this.control.value(this,this.second_slider,\"second\",this.second-this.second%this._defaults.stepSecond)),this.millisec_slider&&(this.control.options(this,this.millisec_slider,\"millisec\",{min:this._defaults.millisecMin,max:h,step:this._defaults.stepMillisec}),this.control.value(this,this.millisec_slider,\"millisec\",this.millisec-this.millisec%this._defaults.stepMillisec)),this.microsec_slider&&(this.control.options(this,this.microsec_slider,\"microsec\",{min:this._defaults.microsecMin,max:p,step:this._defaults.stepMicrosec}),this.control.value(this,this.microsec_slider,\"microsec\",this.microsec-this.microsec%this._defaults.stepMicrosec))}}},_onTimeChange:function(){if(this._defaults.showTimepicker){var e=this.hour_slider?this.control.value(this,this.hour_slider,\"hour\"):!1,t=this.minute_slider?this.control.value(this,this.minute_slider,\"minute\"):!1,i=this.second_slider?this.control.value(this,this.second_slider,\"second\"):!1,s=this.millisec_slider?this.control.value(this,this.millisec_slider,\"millisec\"):!1,a=this.microsec_slider?this.control.value(this,this.microsec_slider,\"microsec\"):!1,n=this.timezone_select?this.timezone_select.val():!1,r=this._defaults,l=r.pickerTimeFormat||r.timeFormat,o=r.pickerTimeSuffix||r.timeSuffix;\"object\"==typeof e&&(e=!1),\"object\"==typeof t&&(t=!1),\"object\"==typeof i&&(i=!1),\"object\"==typeof s&&(s=!1),\"object\"==typeof a&&(a=!1),\"object\"==typeof n&&(n=!1),e!==!1&&(e=parseInt(e,10)),t!==!1&&(t=parseInt(t,10)),i!==!1&&(i=parseInt(i,10)),s!==!1&&(s=parseInt(s,10)),a!==!1&&(a=parseInt(a,10)),n!==!1&&(n=\"\"+n);var c=r[12>e?\"amNames\":\"pmNames\"][0],u=e!==parseInt(this.hour,10)||t!==parseInt(this.minute,10)||i!==parseInt(this.second,10)||s!==parseInt(this.millisec,10)||a!==parseInt(this.microsec,10)||this.ampm.length>0&&12>e!=(-1!==$.inArray(this.ampm.toUpperCase(),this.amNames))||null!==this.timezone&&n!==\"\"+this.timezone;u&&(e!==!1&&(this.hour=e),t!==!1&&(this.minute=t),i!==!1&&(this.second=i),s!==!1&&(this.millisec=s),a!==!1&&(this.microsec=a),n!==!1&&(this.timezone=n),this.inst||(this.inst=$.datepicker._getInst(this.$input[0])),this._limitMinMaxDateTime(this.inst,!0)),this.support.ampm&&(this.ampm=c),this.formattedTime=$.datepicker.formatTime(r.timeFormat,this,r),this.$timeObj&&(l===r.timeFormat?this.$timeObj.text(this.formattedTime+o):this.$timeObj.text($.datepicker.formatTime(l,this,r)+o)),this.timeDefined=!0,u&&this._updateDateTime()}},_onSelectHandler:function(){var e=this._defaults.onSelect||this.inst.settings.onSelect,t=this.$input?this.$input[0]:null;e&&t&&e.apply(t,[this.formattedDateTime,this])},_updateDateTime:function(e){e=this.inst||e;var t=e.currentYear>0?new Date(e.currentYear,e.currentMonth,e.currentDay):new Date(e.selectedYear,e.selectedMonth,e.selectedDay),i=$.datepicker._daylightSavingAdjust(t),s=$.datepicker._get(e,\"dateFormat\"),a=$.datepicker._getFormatConfig(e),n=null!==i&&this.timeDefined;this.formattedDate=$.datepicker.formatDate(s,null===i?new Date:i,a);var r=this.formattedDate;if(\"\"===e.lastVal&&(e.currentYear=e.selectedYear,e.currentMonth=e.selectedMonth,e.currentDay=e.selectedDay),this._defaults.timeOnly===!0&&this._defaults.timeOnlyShowDate===!1?r=this.formattedTime:(this._defaults.timeOnly!==!0&&(this._defaults.alwaysSetTime||n)||this._defaults.timeOnly===!0&&this._defaults.timeOnlyShowDate===!0)&&(r+=this._defaults.separator+this.formattedTime+this._defaults.timeSuffix),this.formattedDateTime=r,this._defaults.showTimepicker)if(this.$altInput&&this._defaults.timeOnly===!1&&this._defaults.altFieldTimeOnly===!0)this.$altInput.val(this.formattedTime),this.$input.val(this.formattedDate);else if(this.$altInput){this.$input.val(r);var l=\"\",o=null!==this._defaults.altSeparator?this._defaults.altSeparator:this._defaults.separator,c=null!==this._defaults.altTimeSuffix?this._defaults.altTimeSuffix:this._defaults.timeSuffix;this._defaults.timeOnly||(l=this._defaults.altFormat?$.datepicker.formatDate(this._defaults.altFormat,null===i?new Date:i,a):this.formattedDate,l&&(l+=o)),l+=null!==this._defaults.altTimeFormat?$.datepicker.formatTime(this._defaults.altTimeFormat,this,this._defaults)+c:this.formattedTime+c,this.$altInput.val(l)}else this.$input.val(r);else this.$input.val(this.formattedDate);this.$input.trigger(\"change\")},_onFocus:function(){if(!this.$input.val()&&this._defaults.defaultValue){this.$input.val(this._defaults.defaultValue);var e=$.datepicker._getInst(this.$input.get(0)),t=$.datepicker._get(e,\"timepicker\");if(t&&t._defaults.timeOnly&&e.input.val()!==e.lastVal)try{$.datepicker._updateDatepicker(e)}catch(i){$.timepicker.log(i)}}},_controls:{slider:{create:function(e,t,i,s,a,n,r){var l=e._defaults.isRTL;return t.prop(\"slide\",null).slider({orientation:\"horizontal\",value:l?-1*s:s,min:l?-1*n:a,max:l?-1*a:n,step:r,slide:function(t,s){e.control.value(e,$(this),i,l?-1*s.value:s.value),e._onTimeChange()},stop:function(){e._onSelectHandler()}})},options:function(e,t,i,s,a){if(e._defaults.isRTL){if(\"string\"==typeof s)return\"min\"===s||\"max\"===s?void 0!==a?t.slider(s,-1*a):Math.abs(t.slider(s)):t.slider(s);var n=s.min,r=s.max;return s.min=s.max=null,void 0!==n&&(s.max=-1*n),void 0!==r&&(s.min=-1*r),t.slider(s)}return\"string\"==typeof s&&void 0!==a?t.slider(s,a):t.slider(s)},value:function(e,t,i,s){return e._defaults.isRTL?void 0!==s?t.slider(\"value\",-1*s):Math.abs(t.slider(\"value\")):void 0!==s?t.slider(\"value\",s):t.slider(\"value\")}},select:{create:function(e,t,i,s,a,n,r){for(var l='<select class=\"ui-timepicker-select ui-state-default ui-corner-all\" data-unit=\"'+i+'\" data-min=\"'+a+'\" data-max=\"'+n+'\" data-step=\"'+r+'\">',o=e._defaults.pickerTimeFormat||e._defaults.timeFormat,c=a;n>=c;c+=r)l+='<option value=\"'+c+'\"'+(c===s?\" selected\":\"\")+\">\",l+=\"hour\"===i?$.datepicker.formatTime($.trim(o.replace(/[^ht ]/gi,\"\")),{hour:c},e._defaults):\"millisec\"===i||\"microsec\"===i||c>=10?c:\"0\"+(\"\"+c),l+=\"</option>\";return l+=\"</select>\",t.children(\"select\").remove(),$(l).appendTo(t).change(function(){e._onTimeChange(),e._onSelectHandler()}),t},options:function(e,t,i,s,a){var n={},r=t.children(\"select\");if(\"string\"==typeof s){if(void 0===a)return r.data(s);n[s]=a}else n=s;return e.control.create(e,t,r.data(\"unit\"),r.val(),n.min||r.data(\"min\"),n.max||r.data(\"max\"),n.step||r.data(\"step\"))},value:function(e,t,i,s){var a=t.children(\"select\");return void 0!==s?a.val(s):a.val()}}}}),$.fn.extend({timepicker:function(e){e=e||{};var t=Array.prototype.slice.call(arguments);return\"object\"==typeof e&&(t[0]=$.extend(e,{timeOnly:!0})),$(this).each(function(){$.fn.datetimepicker.apply($(this),t)})},datetimepicker:function(e){e=e||{};var t=arguments;return\"string\"==typeof e?\"getDate\"===e||\"option\"===e&&2===t.length&&\"string\"==typeof t[1]?$.fn.datepicker.apply($(this[0]),t):this.each(function(){var e=$(this);e.datepicker.apply(e,t)}):this.each(function(){var t=$(this);t.datepicker($.timepicker._newInst(t,e)._defaults)})}}),$.datepicker.parseDateTime=function(e,t,i,s,a){var n=parseDateTimeInternal(e,t,i,s,a);if(n.timeObj){var r=n.timeObj;n.date.setHours(r.hour,r.minute,r.second,r.millisec),n.date.setMicroseconds(r.microsec)}return n.date},$.datepicker.parseTime=function(e,t,i){var s=extendRemove(extendRemove({},$.timepicker._defaults),i||{});-1!==e.replace(/\\'.*?\\'/g,\"\").indexOf(\"Z\");var a=function(e,t,i){var s,a=function(e,t){var i=[];return e&&$.merge(i,e),t&&$.merge(i,t),i=$.map(i,function(e){return e.replace(/[.*+?|()\\[\\]{}\\\\]/g,\"\\\\$&\")}),\"(\"+i.join(\"|\")+\")?\"},n=function(e){var t=e.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')/g),i={h:-1,m:-1,s:-1,l:-1,c:-1,t:-1,z:-1};if(t)for(var s=0;t.length>s;s++)-1===i[(\"\"+t[s]).charAt(0)]&&(i[(\"\"+t[s]).charAt(0)]=s+1);return i},r=\"^\"+(\"\"+e).replace(/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g,function(e){var t=e.length;switch(e.charAt(0).toLowerCase()){case\"h\":return 1===t?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+t+\"})\";case\"m\":return 1===t?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+t+\"})\";case\"s\":return 1===t?\"(\\\\d?\\\\d)\":\"(\\\\d{\"+t+\"})\";case\"l\":return\"(\\\\d?\\\\d?\\\\d)\";case\"c\":return\"(\\\\d?\\\\d?\\\\d)\";case\"z\":return\"(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?\";case\"t\":return a(i.amNames,i.pmNames);default:return\"(\"+e.replace(/\\'/g,\"\").replace(/(\\.|\\$|\\^|\\\\|\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)/g,function(e){return\"\\\\\"+e})+\")?\"}}).replace(/\\s/g,\"\\\\s?\")+i.timeSuffix+\"$\",l=n(e),o=\"\";s=t.match(RegExp(r,\"i\"));var c={hour:0,minute:0,second:0,millisec:0,microsec:0};return s?(-1!==l.t&&(void 0===s[l.t]||0===s[l.t].length?(o=\"\",c.ampm=\"\"):(o=-1!==$.inArray(s[l.t].toUpperCase(),i.amNames)?\"AM\":\"PM\",c.ampm=i[\"AM\"===o?\"amNames\":\"pmNames\"][0])),-1!==l.h&&(c.hour=\"AM\"===o&&\"12\"===s[l.h]?0:\"PM\"===o&&\"12\"!==s[l.h]?parseInt(s[l.h],10)+12:Number(s[l.h])),-1!==l.m&&(c.minute=Number(s[l.m])),-1!==l.s&&(c.second=Number(s[l.s])),-1!==l.l&&(c.millisec=Number(s[l.l])),-1!==l.c&&(c.microsec=Number(s[l.c])),-1!==l.z&&void 0!==s[l.z]&&(c.timezone=$.timepicker.timezoneOffsetNumber(s[l.z])),c):!1},n=function(e,t,i){try{var s=new Date(\"2012-01-01 \"+t);if(isNaN(s.getTime())&&(s=new Date(\"2012-01-01T\"+t),isNaN(s.getTime())&&(s=new Date(\"01/01/2012 \"+t),isNaN(s.getTime()))))throw\"Unable to parse time with native Date: \"+t;return{hour:s.getHours(),minute:s.getMinutes(),second:s.getSeconds(),millisec:s.getMilliseconds(),microsec:s.getMicroseconds(),timezone:-1*s.getTimezoneOffset()}}catch(n){try{return a(e,t,i)}catch(r){$.timepicker.log(\"Unable to parse \\ntimeString: \"+t+\"\\ntimeFormat: \"+e)}}return!1};return\"function\"==typeof s.parse?s.parse(e,t,s):\"loose\"===s.parse?n(e,t,s):a(e,t,s)},$.datepicker.formatTime=function(e,t,i){i=i||{},i=$.extend({},$.timepicker._defaults,i),t=$.extend({hour:0,minute:0,second:0,millisec:0,microsec:0,timezone:null},t);var s=e,a=i.amNames[0],n=parseInt(t.hour,10);return n>11&&(a=i.pmNames[0]),s=s.replace(/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')/g,function(e){switch(e){case\"HH\":return(\"0\"+n).slice(-2);case\"H\":return n;case\"hh\":return(\"0\"+convert24to12(n)).slice(-2);case\"h\":return convert24to12(n);case\"mm\":return(\"0\"+t.minute).slice(-2);case\"m\":return t.minute;case\"ss\":return(\"0\"+t.second).slice(-2);case\"s\":return t.second;case\"l\":return(\"00\"+t.millisec).slice(-3);case\"c\":return(\"00\"+t.microsec).slice(-3);case\"z\":return $.timepicker.timezoneOffsetString(null===t.timezone?i.timezone:t.timezone,!1);case\"Z\":return $.timepicker.timezoneOffsetString(null===t.timezone?i.timezone:t.timezone,!0);case\"T\":return a.charAt(0).toUpperCase();case\"TT\":return a.toUpperCase();case\"t\":return a.charAt(0).toLowerCase();case\"tt\":return a.toLowerCase();default:return e.replace(/'/g,\"\")}})},$.datepicker._base_selectDate=$.datepicker._selectDate,$.datepicker._selectDate=function(e,t){var i,s=this._getInst($(e)[0]),a=this._get(s,\"timepicker\");a&&s.settings.showTimepicker?(a._limitMinMaxDateTime(s,!0),i=s.inline,s.inline=s.stay_open=!0,this._base_selectDate(e,t),s.inline=i,s.stay_open=!1,this._notifyChange(s),this._updateDatepicker(s)):this._base_selectDate(e,t)},$.datepicker._base_updateDatepicker=$.datepicker._updateDatepicker,$.datepicker._updateDatepicker=function(e){var t=e.input[0];if(!($.datepicker._curInst&&$.datepicker._curInst!==e&&$.datepicker._datepickerShowing&&$.datepicker._lastInput!==t||\"boolean\"==typeof e.stay_open&&e.stay_open!==!1)){this._base_updateDatepicker(e);var i=this._get(e,\"timepicker\");i&&i._addTimePicker(e)}},$.datepicker._base_doKeyPress=$.datepicker._doKeyPress,$.datepicker._doKeyPress=function(e){var t=$.datepicker._getInst(e.target),i=$.datepicker._get(t,\"timepicker\");if(i&&$.datepicker._get(t,\"constrainInput\")){var s=i.support.ampm,a=null!==i._defaults.showTimezone?i._defaults.showTimezone:i.support.timezone,n=$.datepicker._possibleChars($.datepicker._get(t,\"dateFormat\")),r=(\"\"+i._defaults.timeFormat).replace(/[hms]/g,\"\").replace(/TT/g,s?\"APM\":\"\").replace(/Tt/g,s?\"AaPpMm\":\"\").replace(/tT/g,s?\"AaPpMm\":\"\").replace(/T/g,s?\"AP\":\"\").replace(/tt/g,s?\"apm\":\"\").replace(/t/g,s?\"ap\":\"\")+\" \"+i._defaults.separator+i._defaults.timeSuffix+(a?i._defaults.timezoneList.join(\"\"):\"\")+i._defaults.amNames.join(\"\")+i._defaults.pmNames.join(\"\")+n,l=String.fromCharCode(void 0===e.charCode?e.keyCode:e.charCode);return e.ctrlKey||\" \">l||!n||r.indexOf(l)>-1}return $.datepicker._base_doKeyPress(e)},$.datepicker._base_updateAlternate=$.datepicker._updateAlternate,$.datepicker._updateAlternate=function(e){var t=this._get(e,\"timepicker\");if(t){var i=t._defaults.altField;if(i){var s=(t._defaults.altFormat||t._defaults.dateFormat,this._getDate(e)),a=$.datepicker._getFormatConfig(e),n=\"\",r=t._defaults.altSeparator?t._defaults.altSeparator:t._defaults.separator,l=t._defaults.altTimeSuffix?t._defaults.altTimeSuffix:t._defaults.timeSuffix,o=null!==t._defaults.altTimeFormat?t._defaults.altTimeFormat:t._defaults.timeFormat;n+=$.datepicker.formatTime(o,t,t._defaults)+l,t._defaults.timeOnly||t._defaults.altFieldTimeOnly||null===s||(n=t._defaults.altFormat?$.datepicker.formatDate(t._defaults.altFormat,s,a)+r+n:t.formattedDate+r+n),$(i).val(e.input.val()?n:\"\")}}else $.datepicker._base_updateAlternate(e)},$.datepicker._base_doKeyUp=$.datepicker._doKeyUp,$.datepicker._doKeyUp=function(e){var t=$.datepicker._getInst(e.target),i=$.datepicker._get(t,\"timepicker\");if(i&&i._defaults.timeOnly&&t.input.val()!==t.lastVal)try{$.datepicker._updateDatepicker(t)}catch(s){$.timepicker.log(s)}return $.datepicker._base_doKeyUp(e)},$.datepicker._base_gotoToday=$.datepicker._gotoToday,$.datepicker._gotoToday=function(e){var t=this._getInst($(e)[0]);t.dpDiv,this._base_gotoToday(e);var i=this._get(t,\"timepicker\");selectLocalTimezone(i);var s=new Date;this._setTime(t,s),this._setDate(t,s)},$.datepicker._disableTimepickerDatepicker=function(e){var t=this._getInst(e);if(t){var i=this._get(t,\"timepicker\");$(e).datepicker(\"getDate\"),i&&(t.settings.showTimepicker=!1,i._defaults.showTimepicker=!1,i._updateDateTime(t))}},$.datepicker._enableTimepickerDatepicker=function(e){var t=this._getInst(e);if(t){var i=this._get(t,\"timepicker\");$(e).datepicker(\"getDate\"),i&&(t.settings.showTimepicker=!0,i._defaults.showTimepicker=!0,i._addTimePicker(t),i._updateDateTime(t))}},$.datepicker._setTime=function(e,t){var i=this._get(e,\"timepicker\");if(i){var s=i._defaults;\ni.hour=t?t.getHours():s.hour,i.minute=t?t.getMinutes():s.minute,i.second=t?t.getSeconds():s.second,i.millisec=t?t.getMilliseconds():s.millisec,i.microsec=t?t.getMicroseconds():s.microsec,i._limitMinMaxDateTime(e,!0),i._onTimeChange(),i._updateDateTime(e)}},$.datepicker._setTimeDatepicker=function(e,t,i){var s=this._getInst(e);if(s){var a=this._get(s,\"timepicker\");if(a){this._setDateFromField(s);var n;t&&(\"string\"==typeof t?(a._parseTime(t,i),n=new Date,n.setHours(a.hour,a.minute,a.second,a.millisec),n.setMicroseconds(a.microsec)):(n=new Date(t.getTime()),n.setMicroseconds(t.getMicroseconds())),\"Invalid Date\"==\"\"+n&&(n=void 0),this._setTime(s,n))}}},$.datepicker._base_setDateDatepicker=$.datepicker._setDateDatepicker,$.datepicker._setDateDatepicker=function(e,t){var i=this._getInst(e),s=t;if(i){\"string\"==typeof t&&(s=new Date(t),s.getTime()||(this._base_setDateDatepicker.apply(this,arguments),s=$(e).datepicker(\"getDate\")));var a,n=this._get(i,\"timepicker\");s instanceof Date?(a=new Date(s.getTime()),a.setMicroseconds(s.getMicroseconds())):a=s,n&&a&&(n.support.timezone||null!==n._defaults.timezone||(n.timezone=-1*a.getTimezoneOffset()),s=$.timepicker.timezoneAdjust(s,n.timezone),a=$.timepicker.timezoneAdjust(a,n.timezone)),this._updateDatepicker(i),this._base_setDateDatepicker.apply(this,arguments),this._setTimeDatepicker(e,a,!0)}},$.datepicker._base_getDateDatepicker=$.datepicker._getDateDatepicker,$.datepicker._getDateDatepicker=function(e,t){var i=this._getInst(e);if(i){var s=this._get(i,\"timepicker\");if(s){void 0===i.lastVal&&this._setDateFromField(i,t);var a=this._getDate(i);return a&&s._parseTime($(e).val(),s.timeOnly)&&(a.setHours(s.hour,s.minute,s.second,s.millisec),a.setMicroseconds(s.microsec),null!=s.timezone&&(s.support.timezone||null!==s._defaults.timezone||(s.timezone=-1*a.getTimezoneOffset()),a=$.timepicker.timezoneAdjust(a,s.timezone))),a}return this._base_getDateDatepicker(e,t)}},$.datepicker._base_parseDate=$.datepicker.parseDate,$.datepicker.parseDate=function(e,t,i){var s;try{s=this._base_parseDate(e,t,i)}catch(a){if(!(a.indexOf(\":\")>=0))throw a;s=this._base_parseDate(e,t.substring(0,t.length-(a.length-a.indexOf(\":\")-2)),i),$.timepicker.log(\"Error parsing the date string: \"+a+\"\\ndate string = \"+t+\"\\ndate format = \"+e)}return s},$.datepicker._base_formatDate=$.datepicker._formatDate,$.datepicker._formatDate=function(e){var t=this._get(e,\"timepicker\");return t?(t._updateDateTime(e),t.$input.val()):this._base_formatDate(e)},$.datepicker._base_optionDatepicker=$.datepicker._optionDatepicker,$.datepicker._optionDatepicker=function(e,t,i){var s,a=this._getInst(e);if(!a)return null;var n=this._get(a,\"timepicker\");if(n){var r,l,o,c,u=null,m=null,d=null,h=n._defaults.evnts,p={};if(\"string\"==typeof t){if(\"minDate\"===t||\"minDateTime\"===t)u=i;else if(\"maxDate\"===t||\"maxDateTime\"===t)m=i;else if(\"onSelect\"===t)d=i;else if(h.hasOwnProperty(t)){if(i===void 0)return h[t];p[t]=i,s={}}}else if(\"object\"==typeof t){t.minDate?u=t.minDate:t.minDateTime?u=t.minDateTime:t.maxDate?m=t.maxDate:t.maxDateTime&&(m=t.maxDateTime);for(r in h)h.hasOwnProperty(r)&&t[r]&&(p[r]=t[r])}for(r in p)p.hasOwnProperty(r)&&(h[r]=p[r],s||(s=$.extend({},t)),delete s[r]);if(s&&isEmptyObject(s))return;if(u?(u=0===u?new Date:new Date(u),n._defaults.minDate=u,n._defaults.minDateTime=u):m?(m=0===m?new Date:new Date(m),n._defaults.maxDate=m,n._defaults.maxDateTime=m):d&&(n._defaults.onSelect=d),u||m)return c=$(e),o=c.datetimepicker(\"getDate\"),l=this._base_optionDatepicker.call($.datepicker,e,s||t,i),c.datetimepicker(\"setDate\",o),l}return void 0===i?this._base_optionDatepicker.call($.datepicker,e,t):this._base_optionDatepicker.call($.datepicker,e,s||t,i)};var isEmptyObject=function(e){var t;for(t in e)if(e.hasOwnProperty(t))return!1;return!0},extendRemove=function(e,t){$.extend(e,t);for(var i in t)(null===t[i]||void 0===t[i])&&(e[i]=t[i]);return e},detectSupport=function(e){var t=e.replace(/'.*?'/g,\"\").toLowerCase(),i=function(e,t){return-1!==e.indexOf(t)?!0:!1};return{hour:i(t,\"h\"),minute:i(t,\"m\"),second:i(t,\"s\"),millisec:i(t,\"l\"),microsec:i(t,\"c\"),timezone:i(t,\"z\"),ampm:i(t,\"t\")&&i(e,\"h\"),iso8601:i(e,\"Z\")}},convert24to12=function(e){return e%=12,0===e&&(e=12),e+\"\"},computeEffectiveSetting=function(e,t){return e&&e[t]?e[t]:$.timepicker._defaults[t]},splitDateTime=function(e,t){var i=computeEffectiveSetting(t,\"separator\"),s=computeEffectiveSetting(t,\"timeFormat\"),a=s.split(i),n=a.length,r=e.split(i),l=r.length;return l>1?{dateString:r.splice(0,l-n).join(i),timeString:r.splice(0,n).join(i)}:{dateString:e,timeString:\"\"}},parseDateTimeInternal=function(e,t,i,s,a){var n,r,l;if(r=splitDateTime(i,a),n=$.datepicker._base_parseDate(e,r.dateString,s),\"\"===r.timeString)return{date:n};if(l=$.datepicker.parseTime(t,r.timeString,a),!l)throw\"Wrong time format\";return{date:n,timeObj:l}},selectLocalTimezone=function(e,t){if(e&&e.timezone_select){var i=t||new Date;e.timezone_select.val(-i.getTimezoneOffset())}};$.timepicker=new Timepicker,$.timepicker.timezoneOffsetString=function(e,t){if(isNaN(e)||e>840||-720>e)return e;var i=e,s=i%60,a=(i-s)/60,n=t?\":\":\"\",r=(i>=0?\"+\":\"-\")+(\"0\"+Math.abs(a)).slice(-2)+n+(\"0\"+Math.abs(s)).slice(-2);return\"+00:00\"===r?\"Z\":r},$.timepicker.timezoneOffsetNumber=function(e){var t=(\"\"+e).replace(\":\",\"\");return\"Z\"===t.toUpperCase()?0:/^(\\-|\\+)\\d{4}$/.test(t)?(\"-\"===t.substr(0,1)?-1:1)*(60*parseInt(t.substr(1,2),10)+parseInt(t.substr(3,2),10)):e},$.timepicker.timezoneAdjust=function(e,t){var i=$.timepicker.timezoneOffsetNumber(t);return isNaN(i)||e.setMinutes(e.getMinutes()+-e.getTimezoneOffset()-i),e},$.timepicker.timeRange=function(e,t,i){return $.timepicker.handleRange(\"timepicker\",e,t,i)},$.timepicker.datetimeRange=function(e,t,i){$.timepicker.handleRange(\"datetimepicker\",e,t,i)},$.timepicker.dateRange=function(e,t,i){$.timepicker.handleRange(\"datepicker\",e,t,i)},$.timepicker.handleRange=function(e,t,i,s){function a(a,n){var r=t[e](\"getDate\"),l=i[e](\"getDate\"),o=a[e](\"getDate\");if(null!==r){var c=new Date(r.getTime()),u=new Date(r.getTime());c.setMilliseconds(c.getMilliseconds()+s.minInterval),u.setMilliseconds(u.getMilliseconds()+s.maxInterval),s.minInterval>0&&c>l?i[e](\"setDate\",c):s.maxInterval>0&&l>u?i[e](\"setDate\",u):r>l&&n[e](\"setDate\",o)}}function n(t,i,a){if(t.val()){var n=t[e].call(t,\"getDate\");null!==n&&s.minInterval>0&&(\"minDate\"===a&&n.setMilliseconds(n.getMilliseconds()+s.minInterval),\"maxDate\"===a&&n.setMilliseconds(n.getMilliseconds()-s.minInterval)),n.getTime&&i[e].call(i,\"option\",a,n)}}s=$.extend({},{minInterval:0,maxInterval:0,start:{},end:{}},s);var r=!1;return\"timepicker\"===e&&(r=!0,e=\"datetimepicker\"),$.fn[e].call(t,$.extend({timeOnly:r,onClose:function(){a($(this),i)},onSelect:function(){n($(this),i,\"minDate\")}},s,s.start)),$.fn[e].call(i,$.extend({timeOnly:r,onClose:function(){a($(this),t)},onSelect:function(){n($(this),t,\"maxDate\")}},s,s.end)),a(t,i),n(t,i,\"minDate\"),n(i,t,\"maxDate\"),$([t.get(0),i.get(0)])},$.timepicker.log=function(){window.console&&window.console.log.apply(window.console,Array.prototype.slice.call(arguments))},$.timepicker._util={_extendRemove:extendRemove,_isEmptyObject:isEmptyObject,_convert24to12:convert24to12,_detectSupport:detectSupport,_selectLocalTimezone:selectLocalTimezone,_computeEffectiveSetting:computeEffectiveSetting,_splitDateTime:splitDateTime,_parseDateTimeInternal:parseDateTimeInternal},Date.prototype.getMicroseconds||(Date.prototype.microseconds=0,Date.prototype.getMicroseconds=function(){return this.microseconds},Date.prototype.setMicroseconds=function(e){return this.setMilliseconds(this.getMilliseconds()+Math.floor(e/1e3)),this.microseconds=e%1e3,this}),$.timepicker.version=\"1.5.0\"}})(jQuery);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/js/index.php","ext":"php","size":27,"mtime":1757324689,"type":"text","content":"<?php\n// Silence is golden\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/js/cmb2.js","ext":"js","size":39778,"mtime":1757324689,"type":"text","content":"/**\n * Controls the behaviours of custom metabox fields.\n *\n * @author CMB2 team\n * @see    https://github.com/CMB2/CMB2\n */\n\n/**\n * Custom jQuery for Custom Metaboxes and Fields\n */\nwindow.CMB2 = window.CMB2 || {};\n(function(window, document, $, cmb, undefined){\n\t'use strict';\n\n\t// localization strings\n\tvar l10n = window.cmb2_l10;\n\tvar setTimeout = window.setTimeout;\n\tvar $document;\n\tvar $id = function( selector ) {\n\t\treturn $( document.getElementById( selector ) );\n\t};\n\tvar getRowId = function( id, newIterator ) {\n\t\tid = id.split('-');\n\t\tid.splice(id.length - 1, 1);\n\t\tid.push( newIterator );\n\t\treturn id.join('-');\n\t};\n\tcmb.$id = $id;\n\tvar defaults = {\n\t\tidNumber        : false,\n\t\trepeatEls       : 'input:not([type=\"button\"]),select,textarea,.cmb2-media-status',\n\t\tnoEmpty         : 'input:not([type=\"button\"]):not([type=\"radio\"]):not([type=\"checkbox\"]),textarea',\n\t\trepeatUpdate    : 'input:not([type=\"button\"]),select,textarea,label',\n\t\tstyleBreakPoint : 450,\n\t\tmediaHandlers   : {},\n\t\tdefaults : {\n\t\t\ttime_picker  : l10n.defaults.time_picker,\n\t\t\tdate_picker  : l10n.defaults.date_picker,\n\t\t\tcolor_picker : l10n.defaults.color_picker || {},\n\t\t\tcode_editor  : l10n.defaults.code_editor,\n\t\t},\n\t\tmedia : {\n\t\t\tframes : {},\n\t\t},\n\t};\n\n\tcmb.init = function() {\n\t\t$document = $( document );\n\n\t\t// Setup the CMB2 object defaults.\n\t\t$.extend( cmb, defaults );\n\n\t\tcmb.trigger( 'cmb_pre_init' );\n\n\t\tvar $metabox     = cmb.metabox();\n\t\tvar $repeatGroup = $metabox.find('.cmb-repeatable-group');\n\n\t\t // Init time/date/color pickers\n\t\tcmb.initPickers( $metabox.find('input[type=\"text\"].cmb2-timepicker'), $metabox.find('input[type=\"text\"].cmb2-datepicker'), $metabox.find('input[type=\"text\"].cmb2-colorpicker') );\n\n\t\t// Init code editors.\n\t\tcmb.initCodeEditors( $metabox.find( '.cmb2-textarea-code:not(.disable-codemirror)' ) );\n\n\t\t// Insert toggle button into DOM wherever there is multicheck. credit: Genesis Framework\n\t\t$( '<p><span class=\"button-secondary cmb-multicheck-toggle\">' + l10n.strings.check_toggle + '</span></p>' ).insertBefore( '.cmb2-checkbox-list:not(.no-select-all)' );\n\n\t\t// Make File List drag/drop sortable:\n\t\tcmb.makeListSortable();\n\t\t// Make Repeatable fields drag/drop sortable:\n\t\tcmb.makeRepeatableSortable();\n\n\t\t$metabox\n\t\t\t.on( 'change', '.cmb2_upload_file', function() {\n\t\t\t\tcmb.media.field = $( this ).attr( 'id' );\n\t\t\t\t$id( cmb.media.field + '_id' ).val('');\n\t\t\t})\n\t\t\t// Media/file management\n\t\t\t.on( 'click', '.cmb-multicheck-toggle', cmb.toggleCheckBoxes )\n\t\t\t.on( 'click', '.cmb2-upload-button', cmb.handleMedia )\n\t\t\t.on( 'click', '.cmb-attach-list li, .cmb2-media-status .img-status img, .cmb2-media-status .file-status > span', cmb.handleFileClick )\n\t\t\t.on( 'click', '.cmb2-remove-file-button', cmb.handleRemoveMedia )\n\t\t\t// Repeatable content\n\t\t\t.on( 'click', '.cmb-add-group-row', cmb.addGroupRow )\n\t\t\t.on( 'click', '.cmb-add-row-button', cmb.addAjaxRow )\n\t\t\t.on( 'click', '.cmb-remove-group-row', cmb.removeGroupRow )\n\t\t\t.on( 'click', '.cmb-remove-row-button', cmb.removeAjaxRow )\n\t\t\t// Ajax oEmbed display\n\t\t\t.on( 'keyup paste focusout', '.cmb2-oembed', cmb.maybeOembed )\n\t\t\t// Reset titles when removing a row\n\t\t\t.on( 'cmb2_remove_row', '.cmb-repeatable-group', cmb.resetTitlesAndIterator )\n\t\t\t.on( 'click', '.cmbhandle, .cmbhandle + .cmbhandle-title', cmb.toggleHandle );\n\n\t\tif ( $repeatGroup.length ) {\n\t\t\t$repeatGroup\n\t\t\t\t.on( 'cmb2_add_row', cmb.emptyValue )\n\t\t\t\t.on( 'cmb2_add_row', cmb.setDefaults )\n\t\t\t\t.filter('.sortable').each( function() {\n\t\t\t\t\t// Add sorting arrows\n\t\t\t\t\t$( this ).find( '.cmb-remove-group-row-button' ).before( '<a class=\"button-secondary cmb-shift-rows move-up alignleft\" href=\"#\"><span class=\"'+ l10n.up_arrow_class +'\"></span></a> <a class=\"button-secondary cmb-shift-rows move-down alignleft\" href=\"#\"><span class=\"'+ l10n.down_arrow_class +'\"></span></a>' );\n\t\t\t\t})\n\t\t\t\t.on( 'click', '.cmb-shift-rows', cmb.shiftRows );\n\t\t}\n\n\t\t// on pageload\n\t\tsetTimeout( cmb.resizeoEmbeds, 500);\n\t\t// and on window resize\n\t\t$( window ).on( 'resize', cmb.resizeoEmbeds );\n\n\t\tif ( $id( 'addtag' ).length ) {\n\t\t\tcmb.listenTagAdd();\n\t\t}\n\n\t\t$( document ).on( 'cmb_init', cmb.mceEnsureSave );\n\n\t\tcmb.trigger( 'cmb_init' );\n\t};\n\n\t// Handles updating tiny mce instances when saving a gutenberg post.\n\t// https://github.com/CMB2/CMB2/issues/1156\n\tcmb.mceEnsureSave = function() {\n\t\t// If no wp.data, do not proceed (no gutenberg)\n\t\tif ( ! wp.data || ! wp.data.hasOwnProperty('subscribe') ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the current user cannot richedit, or MCE is not available, bail.\n\t\tif ( ! cmb.canTinyMCE() ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp.data.subscribe( function() {\n\t\t\tvar editor = wp.data.hasOwnProperty('select') ? wp.data.select( 'core/editor' ) : null;\n\n\t\t\t// the post is currently being saved && we have tinymce editors\n\t\t\tif ( editor && editor.isSavingPost && editor.isSavingPost() && window.tinyMCE.editors.length ) {\n\t\t\t\tfor ( var i = 0; i < window.tinyMCE.editors.length; i++ ) {\n\t\t\t\t\tif ( window.tinyMCE.activeEditor !== window.tinyMCE.editors[i] ) {\n\t\t\t\t\t\twindow.tinyMCE.editors[i].save();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.canTinyMCE = function() {\n\t\treturn l10n.user_can_richedit && window.tinyMCE;\n\t};\n\n\tcmb.listenTagAdd = function() {\n\t\t$document.ajaxSuccess( function( evt, xhr, settings ) {\n\t\t\tif ( settings.data && settings.data.length && -1 !== settings.data.indexOf( 'action=add-tag' ) ) {\n\t\t\t\tcmb.resetBoxes( $id( 'addtag' ).find( '.cmb2-wrap > .cmb2-metabox' ) );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.resetBoxes = function( $boxes ) {\n\t\t$.each( $boxes, function() {\n\t\t\tcmb.resetBox( $( this ) );\n\t\t});\n\t};\n\n\tcmb.resetBox = function( $box ) {\n\t\t$box.find( '.wp-picker-clear' ).trigger( 'click' );\n\t\t$box.find( '.cmb2-remove-file-button' ).trigger( 'click' );\n\t\t$box.find( '.cmb-row.cmb-repeatable-grouping:not(:first-of-type) .cmb-remove-group-row' ).click();\n\t\t$box.find( '.cmb-repeat-row:not(:first-child)' ).remove();\n\n\t\t$box.find( 'input:not([type=\"button\"]),select,textarea' ).each( function() {\n\t\t\tvar $element = $( this );\n\t\t\tvar tagName = $element.prop('tagName');\n\n\t\t\tif ( 'INPUT' === tagName ) {\n\t\t\t\tvar elType = $element.attr( 'type' );\n\t\t\t\tif ( 'checkbox' === elType || 'radio' === elType ) {\n\t\t\t\t\t$element.prop( 'checked', false );\n\t\t\t\t} else {\n\t\t\t\t\t$element.val( '' );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( 'SELECT' === tagName ) {\n\t\t\t\t$( 'option:selected', this ).prop( 'selected', false );\n\t\t\t}\n\t\t\tif ( 'TEXTAREA' === tagName ) {\n\t\t\t\t$element.html( '' );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.resetTitlesAndIterator = function( evt ) {\n\t\tif ( ! evt.group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $table = $( evt.target );\n\t\tvar groupTitle = $table.find( '.cmb-add-group-row' ).data( 'grouptitle' );\n\n\t\t// Loop repeatable group table rows\n\t\t$table.find( '.cmb-repeatable-grouping' ).each( function( rowindex ) {\n\t\t\tvar $row = $( this );\n\t\t\tvar prevIterator = parseInt( $row.data( 'iterator' ), 10 );\n\t\t\tif ( prevIterator === rowindex ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Reset rows iterator\n\t\t\t$row\n\t\t\t\t.attr( 'data-iterator', rowindex )\n\t\t\t\t.data( 'iterator', rowindex )\n\t\t\t\t.attr('id', getRowId( $row.attr('id'), rowindex ) )\n\t\t\t\t.find( cmb.repeatEls ).each( function() {\n\t\t\t\t\tcmb.updateNameAttr( $( this ), prevIterator, rowindex );\n\t\t\t\t});\n\n\t\t\tcmb.resetGroupTitles( $row, rowindex, groupTitle );\n\t\t});\n\t};\n\n\tcmb.resetGroupTitles = function( $row, newIterator, groupTitle ) {\n\t\tif ( groupTitle ) {\n\t\t\tvar $rowTitle = $row.find( 'h3.cmb-group-title' );\n\n\t\t\t// Reset rows title\n\t\t\tif ( $rowTitle.length ) {\n\t\t\t\t$rowTitle.text( groupTitle.replace( '{#}', parseInt( newIterator, 10 ) + 1 ) );\n\t\t\t}\n\t\t}\n\t};\n\n\tcmb.toggleHandle = function( evt ) {\n\t\tevt.preventDefault();\n\t\tcmb.trigger( 'postbox-toggled', $( this ).parent('.postbox').toggleClass('closed') );\n\t};\n\n\tcmb.toggleCheckBoxes = function( evt ) {\n\t\tevt.preventDefault();\n\t\tvar $this = $( this );\n\t\tvar $multicheck = $this.closest( '.cmb-td' ).find( 'input[type=checkbox]:not([disabled])' );\n\n\t\tvar $toggled = ! $this.data( 'checked' );\n\t\t$multicheck.prop( 'checked', $toggled ).trigger( 'change' );\n\t\t$this.data( 'checked', $toggled );\n\t};\n\n\tcmb.handleMedia = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $el = $( this );\n\t\tcmb.attach_id = ! $el.hasClass( 'cmb2-upload-list' ) ? $el.closest( '.cmb-td' ).find( '.cmb2-upload-file-id' ).val() : false;\n\t\t// Clean up default 0 value\n\t\tcmb.attach_id = '0' !== cmb.attach_id ? cmb.attach_id : false;\n\n\t\tcmb.handleFieldMedia( $el.prev('input.cmb2-upload-file'), $el.hasClass( 'cmb2-upload-list' ) );\n\t};\n\n\tcmb.handleFileClick = function( evt ) {\n\t\tif ( $( evt.target ).is( 'a' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevt.preventDefault();\n\n\t\tvar $el    = $( this );\n\t\tvar $td    = $el.closest( '.cmb-td' );\n\t\tvar isList = $td.find( '.cmb2-upload-button' ).hasClass( 'cmb2-upload-list' );\n\t\tcmb.attach_id = isList ? $el.find( 'input[type=\"hidden\"]' ).data( 'id' ) : $td.find( '.cmb2-upload-file-id' ).val();\n\n\t\tif ( cmb.attach_id ) {\n\t\t\tcmb.handleFieldMedia( $td.find( 'input.cmb2-upload-file' ), isList );\n\t\t}\n\t};\n\n\t// Leaving this in for back-compat...\n\tcmb._handleMedia = function( id, isList ) {\n\t\treturn cmb.handleFieldMedia( $id( id ), isList );\n\t};\n\n\tcmb.handleFieldMedia = function( $field, isList ) {\n\t\tif ( ! wp ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar id  = $field.attr('id');\n\t\tvar fieldData = $field.data();\n\t\tvar media, handlers;\n\n\t\t// Get/set unique id since actual id cold _not_ be unique due to bad replacements, etc...\n\t\tvar uid = fieldData.mediaid;\n\t\tif ( ! uid ) {\n\t\t\tuid = _.uniqueId();\n\t\t\t$field.attr('data-mediaid', uid).data('mediaid', uid);\n\t\t\tfieldData.mediaid = uid;\n\t\t}\n\n\t\thandlers          = cmb.mediaHandlers;\n\t\tmedia             = cmb.media;\n\t\tmedia.mediaid     = uid;\n\t\tmedia.field       = id;\n\t\tmedia.$field      = $field;\n\t\tmedia.fieldData   = fieldData;\n\t\tmedia.previewSize = media.fieldData.previewsize;\n\t\tmedia.sizeName    = media.fieldData.sizename;\n\t\tmedia.fieldName   = $field.attr('name');\n\t\tmedia.isList      = isList;\n\n\t\t// If this field's media frame already exists, reopen it.\n\t\tif ( uid in media.frames ) {\n\t\t\treturn media.frames[ uid ].open();\n\t\t}\n\n\t\t// Create the media frame.\n\t\tmedia.frames[ uid ] = wp.media( {\n\t\t\ttitle: cmb.metabox().find('label[for=\"' + id + '\"]').text(),\n\t\t\tlibrary : media.fieldData.queryargs || {},\n\t\t\tbutton: {\n\t\t\t\ttext: l10n.strings[ isList ? 'upload_files' : 'upload_file' ]\n\t\t\t},\n\t\t\tmultiple: isList ? 'add' : false\n\t\t} );\n\n\t\t// Enable the additional media filters: https://github.com/CMB2/CMB2/issues/873\n\t\tmedia.frames[ uid ].states.first().set( 'filterable', 'all' );\n\n\t\tcmb.trigger( 'cmb_media_modal_init', media );\n\n\t\thandlers.list = function( selection, returnIt ) {\n\n\t\t\t// Setup our fileGroup array\n\t\t\tvar fileGroup = [];\n\t\t\tvar attachmentHtml;\n\n\t\t\tif ( ! handlers.list.templates ) {\n\t\t\t\thandlers.list.templates = {\n\t\t\t\t\timage : wp.template( 'cmb2-list-image' ),\n\t\t\t\t\tfile  : wp.template( 'cmb2-list-file' ),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Loop through each attachment\n\t\t\tselection.each( function( attachment ) {\n\n\t\t\t\t// Image preview or standard generic output if it's not an image.\n\t\t\t\tattachmentHtml = handlers.getAttachmentHtml( attachment, 'list' );\n\n\t\t\t\t// Add our file to our fileGroup array\n\t\t\t\tfileGroup.push( attachmentHtml );\n\t\t\t});\n\n\t\t\tif ( ! returnIt ) {\n\t\t\t\t// Append each item from our fileGroup array to .cmb2-media-status\n\t\t\t\tmedia.$field.siblings( '.cmb2-media-status' ).append( fileGroup );\n\t\t\t} else {\n\t\t\t\treturn fileGroup;\n\t\t\t}\n\n\t\t};\n\n\t\thandlers.single = function( selection ) {\n\t\t\tif ( ! handlers.single.templates ) {\n\t\t\t\thandlers.single.templates = {\n\t\t\t\t\timage : wp.template( 'cmb2-single-image' ),\n\t\t\t\t\tfile  : wp.template( 'cmb2-single-file' ),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Only get one file from the uploader\n\t\t\tvar attachment = selection.first();\n\n\t\t\tmedia.$field.val( attachment.get( 'url' ) );\n\t\t\tmedia.$field.closest( '.cmb-td' ).find('.cmb2-upload-file-id')\n\t\t\t\t.val( attachment.get( 'id' ) );\n\n\t\t\t// Image preview or standard generic output if it's not an image.\n\t\t\tvar attachmentHtml = handlers.getAttachmentHtml( attachment, 'single' );\n\n\t\t\t// add/display our output\n\t\t\tmedia.$field.siblings( '.cmb2-media-status' ).slideDown().html( attachmentHtml );\n\t\t};\n\n\t\thandlers.getAttachmentHtml = function( attachment, templatesId ) {\n\t\t\tvar isImage = 'image' === attachment.get( 'type' );\n\t\t\tvar data    = handlers.prepareData( attachment, isImage );\n\n\t\t\t// Image preview or standard generic output if it's not an image.\n\t\t\treturn handlers[ templatesId ].templates[ isImage ? 'image' : 'file' ]( data );\n\t\t};\n\n\t\thandlers.prepareData = function( data, image ) {\n\t\t\tif ( image ) {\n\t\t\t\t// Set the correct image size data\n\t\t\t\thandlers.getImageData.call( data, 50 );\n\t\t\t}\n\n\t\t\tdata                   = data.toJSON();\n\t\t\tdata.mediaField        = media.field;\n\t\t\tdata.mediaFieldName    = media.fieldName;\n\t\t\tdata.stringRemoveImage = l10n.strings.remove_image;\n\t\t\tdata.stringFile        = l10n.strings.file;\n\t\t\tdata.stringDownload    = l10n.strings.download;\n\t\t\tdata.stringRemoveFile  = l10n.strings.remove_file;\n\n\t\t\treturn data;\n\t\t};\n\n\t\thandlers.getImageData = function( fallbackSize ) {\n\n\t\t\t// Preview size dimensions\n\t\t\tvar previewW = media.previewSize[0] || fallbackSize;\n\t\t\tvar previewH = media.previewSize[1] || fallbackSize;\n\n\t\t\t// Image dimensions and url\n\t\t\tvar url    = this.get( 'url' );\n\t\t\tvar width  = this.get( 'width' );\n\t\t\tvar height = this.get( 'height' );\n\t\t\tvar sizes  = this.get( 'sizes' );\n\n\t\t\t// Get the correct dimensions and url if a named size is set and exists\n\t\t\t// fallback to the 'large' size\n\t\t\tif ( sizes ) {\n\t\t\t\tif ( sizes[ media.sizeName ] ) {\n\t\t\t\t\turl    = sizes[ media.sizeName ].url;\n\t\t\t\t\twidth  = sizes[ media.sizeName ].width;\n\t\t\t\t\theight = sizes[ media.sizeName ].height;\n\t\t\t\t} else if ( sizes.large ) {\n\t\t\t\t\turl    = sizes.large.url;\n\t\t\t\t\twidth  = sizes.large.width;\n\t\t\t\t\theight = sizes.large.height;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fit the image in to the preview size, keeping the correct aspect ratio\n\t\t\tif ( width > previewW ) {\n\t\t\t\theight = Math.floor( previewW * height / width );\n\t\t\t\twidth = previewW;\n\t\t\t}\n\n\t\t\tif ( height > previewH ) {\n\t\t\t\twidth = Math.floor( previewH * width / height );\n\t\t\t\theight = previewH;\n\t\t\t}\n\n\t\t\tif ( ! width ) {\n\t\t\t\twidth = previewW;\n\t\t\t}\n\n\t\t\tif ( ! height ) {\n\t\t\t\theight = 'svg' === this.get( 'filename' ).split( '.' ).pop() ? '100%' : previewH;\n\t\t\t}\n\n\t\t\tthis.set( 'sizeUrl', url );\n\t\t\tthis.set( 'sizeWidth', width );\n\t\t\tthis.set( 'sizeHeight', height );\n\n\t\t\treturn this;\n\t\t};\n\n\t\thandlers.selectFile = function() {\n\t\t\tvar selection = media.frames[ uid ].state().get( 'selection' );\n\t\t\tvar type = isList ? 'list' : 'single';\n\n\t\t\tif ( cmb.attach_id && isList ) {\n\t\t\t\t$( '[data-id=\"'+ cmb.attach_id +'\"]' ).parents( 'li' ).replaceWith( handlers.list( selection, true ) );\n\t\t\t} else {\n\t\t\t\thandlers[type]( selection );\n\t\t\t}\n\n\t\t\tcmb.trigger( 'cmb_media_modal_select', selection, media );\n\t\t};\n\n\t\thandlers.openModal = function() {\n\t\t\tvar selection = media.frames[ uid ].state().get( 'selection' );\n\t\t\tvar attach;\n\n\t\t\tif ( ! cmb.attach_id ) {\n\t\t\t\tselection.reset();\n\t\t\t} else {\n\t\t\t\tattach = wp.media.attachment( cmb.attach_id );\n\t\t\t\tattach.fetch();\n\t\t\t\tselection.set( attach ? [ attach ] : [] );\n\t\t\t}\n\n\t\t\tcmb.trigger( 'cmb_media_modal_open', selection, media );\n\t\t};\n\n\t\t// When a file is selected, run a callback.\n\t\tmedia.frames[ uid ]\n\t\t\t.on( 'select', handlers.selectFile )\n\t\t\t.on( 'open', handlers.openModal );\n\n\t\t// Finally, open the modal\n\t\tmedia.frames[ uid ].open();\n\t};\n\n\tcmb.handleRemoveMedia = function( evt ) {\n\t\tevt.preventDefault();\n\t\tvar $this = $( this );\n\t\tif ( $this.is( '.cmb-attach-list .cmb2-remove-file-button' ) ) {\n\t\t\t$this.parents( '.cmb2-media-item' ).remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tvar $cell        = $this.closest( '.cmb-td' );\n\t\tcmb.media.$field = $cell.find('.cmb2-upload-file');\n\t\tcmb.media.field  = cmb.media.$field.attr('id');\n\n\t\tcmb.media.$field.val('');\n\t\t$cell.find('.cmb2-upload-file-id').val('');\n\t\t$this.parents('.cmb2-media-status').html('');\n\n\t\treturn false;\n\t};\n\n\tcmb.cleanRow = function( $row, prevNum, group ) {\n\t\tvar $elements = $row.find( cmb.repeatUpdate );\n\t\tif ( group ) {\n\n\t\t\tvar $other = $row.find( '[id]' ).not( cmb.repeatUpdate );\n\n\t\t\t// Remove extra ajaxed rows\n\t\t\t$row.find('.cmb-repeat-table .cmb-repeat-row:not(:first-child)').remove();\n\n\t\t\t// Update all elements w/ an ID\n\t\t\tif ( $other.length ) {\n\t\t\t\t$other.each( function() {\n\t\t\t\t\tvar $_this = $( this );\n\t\t\t\t\tvar oldID = $_this.attr( 'id' );\n\t\t\t\t\tvar newID = oldID.replace( '_'+ prevNum, '_'+ cmb.idNumber );\n\t\t\t\t\tvar $buttons = $row.find('[data-selector=\"'+ oldID +'\"]');\n\t\t\t\t\t$_this.attr( 'id', newID );\n\n\t\t\t\t\t// Replace data-selector vars\n\t\t\t\t\tif ( $buttons.length ) {\n\t\t\t\t\t\t$buttons.attr( 'data-selector', newID ).data( 'selector', newID );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t$elements.filter( ':checked' ).removeAttr( 'checked' );\n\t\t$elements.find( ':checked' ).removeAttr( 'checked' );\n\t\t$elements.filter( ':selected' ).removeAttr( 'selected' );\n\t\t$elements.find( ':selected' ).removeAttr( 'selected', false );\n\n\t\tcmb.resetGroupTitles( $row, cmb.idNumber, $row.data( 'title' ) );\n\n\t\t$elements.each( function() {\n\t\t\tcmb.elReplacements( $( this ), prevNum, group );\n\t\t} );\n\n\t\treturn cmb;\n\t};\n\n\tcmb.elReplacements = function( $newInput, prevNum, group ) {\n\t\tvar oldFor    = $newInput.attr( 'for' );\n\t\tvar oldVal    = $newInput.val();\n\t\tvar type      = $newInput.prop( 'type' );\n\t\tvar defVal    = cmb.getFieldArg( $newInput, 'default' );\n\t\tvar newVal    = 'undefined' !== typeof defVal && false !== defVal ? defVal : '';\n\t\tvar tagName   = $newInput.prop('tagName');\n\t\tvar checkable = 'radio' === type || 'checkbox' === type ? oldVal : false;\n\t\tvar attrs     = {};\n\t\tvar newID, oldID;\n\t\tif ( oldFor ) {\n\t\t\tattrs = { 'for' : oldFor.replace( '_'+ prevNum, '_'+ cmb.idNumber ) };\n\t\t} else {\n\t\t\tvar oldName = $newInput.attr( 'name' );\n\t\t\tvar newName;\n\t\t\toldID = $newInput.attr( 'id' );\n\n\t\t\t// Handle adding groups vs rows.\n\t\t\tif ( group ) {\n\t\t\t\t// Expect another bracket after group's index closing bracket.\n\t\t\t\tnewName = oldName ? oldName.replace( '['+ prevNum +'][', '['+ cmb.idNumber +'][' ) : '';\n\t\t\t\t// Expect another underscore after group's index trailing underscore.\n\t\t\t\tnewID   = oldID ? oldID.replace( '_' + prevNum + '_', '_' + cmb.idNumber + '_' ) : '';\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Row indexes are at the very end of the string.\n\t\t\t\tnewName = oldName ? cmb.replaceLast( oldName, '[' + prevNum + ']', '[' + cmb.idNumber + ']' ) : '';\n\t\t\t\tnewID   = oldID ? cmb.replaceLast( oldID, '_' + prevNum, '_' + cmb.idNumber ) : '';\n\t\t\t}\n\n\t\t\tattrs = {\n\t\t\t\tid: newID,\n\t\t\t\tname: newName\n\t\t\t};\n\n\t\t}\n\n\t\t// Clear out textarea values\n\t\tif ( 'TEXTAREA' === tagName ) {\n\t\t\t$newInput.html( newVal );\n\t\t}\n\n\t\tif ( 'SELECT' === tagName && 'undefined' !== typeof defVal ) {\n\t\t\tvar $toSelect = $newInput.find( '[value=\"'+ defVal + '\"]' );\n\t\t\tif ( $toSelect.length ) {\n\t\t\t\t$toSelect.attr( 'selected', 'selected' ).prop( 'selected', 'selected' );\n\t\t\t}\n\t\t}\n\n\t\tif ( checkable ) {\n\t\t\t$newInput.removeAttr( 'checked' );\n\t\t\tif ( 'undefined' !== typeof defVal && oldVal === defVal ) {\n\t\t\t\t$newInput.attr( 'checked', 'checked' ).prop( 'checked', 'checked' );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! group && $newInput[0].hasAttribute( 'data-iterator' ) ) {\n\t\t\tattrs['data-iterator'] = cmb.idNumber;\n\t\t}\n\n\t\t$newInput\n\t\t\t.removeClass( 'hasDatepicker' )\n\t\t\t.val( checkable ? checkable : newVal ).attr( attrs );\n\n\t\treturn $newInput;\n\t};\n\n\tcmb.newRowHousekeeping = function( $row ) {\n\t\tvar $colorPicker = $row.find( '.wp-picker-container' );\n\t\tvar $list        = $row.find( '.cmb2-media-status' );\n\n\t\tif ( $colorPicker.length ) {\n\t\t\t// Need to clean-up colorpicker before appending\n\t\t\t$colorPicker.each( function() {\n\t\t\t\tvar $td = $( this ).parent();\n\t\t\t\t$td.html( $td.find( 'input[type=\"text\"].cmb2-colorpicker' ).attr('style', '') );\n\t\t\t});\n\t\t}\n\n\t\t// Need to clean-up colorpicker before appending\n\t\tif ( $list.length ) {\n\t\t\t$list.empty();\n\t\t}\n\n\t\treturn cmb;\n\t};\n\n\tcmb.afterRowInsert = function( $row ) {\n\t\t// Init pickers from new row\n\t\tcmb.initPickers( $row.find('input[type=\"text\"].cmb2-timepicker'), $row.find('input[type=\"text\"].cmb2-datepicker'), $row.find('input[type=\"text\"].cmb2-colorpicker') );\n\t};\n\n\tcmb.updateNameAttr = function ( $el, prevIterator, newIterator ) {\n\t\tvar name = $el.attr( 'name' ); // get current name\n\n\t\t// If name is defined\n\t\tif ( 'undefined' !== typeof name ) {\n\t\t\tvar isFileList = $el.attr( 'id' ).indexOf('filelist');\n\n\t\t\t// Update field name attributes so data is not orphaned when a row is removed and post is saved\n\t\t\tvar from    = isFileList ? '[' + prevIterator + '][' : '[' + prevIterator + ']';\n\t\t\tvar to      = isFileList ? '[' + newIterator + '][' : '[' + newIterator + ']';\n\t\t\tvar newName = name.replace( from, to );\n\n\t\t\t// New name with replaced iterator\n\t\t\t$el.attr( 'name', newName );\n\t\t}\n\t};\n\n\tcmb.emptyValue = function( evt, row ) {\n\t\t$( cmb.noEmpty, row ).val( '' );\n\t};\n\n\tcmb.setDefaults = function( evt, row ) {\n\t\t$( cmb.noEmpty, row ).each( function() {\n\t\t\tvar $el = $(this);\n\t\t\tvar defVal = cmb.getFieldArg( $el, 'default' );\n\t\t\tif ( 'undefined' !== typeof defVal && false !== defVal ) {\n\t\t\t\t$el.val( defVal );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.addGroupRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this = $( this );\n\n\t\t// before anything significant happens\n\t\tcmb.triggerElement( $this, 'cmb2_add_group_row_start', $this );\n\n\t\tvar $table   = $id( $this.data('selector') );\n\t\tvar $oldRow  = $table.find('.cmb-repeatable-grouping').last();\n\t\tvar prevNum  = parseInt( $oldRow.data('iterator'), 10 );\n\t\tcmb.idNumber = parseInt( prevNum, 10 ) + 1;\n\t\tvar $row     = $oldRow.clone();\n\t\tvar nodeName = $row.prop('nodeName') || 'div';\n\n\t\t// Make sure the next number doesn't exist.\n\t\twhile ( $table.find( '.cmb-repeatable-grouping[data-iterator=\"'+ cmb.idNumber +'\"]' ).length > 0 ) {\n\t\t\tcmb.idNumber++;\n\t\t}\n\n\t\tcmb.newRowHousekeeping( $row.data( 'title', $this.data( 'grouptitle' ) ) ).cleanRow( $row, prevNum, true );\n\t\t$row.find( '.cmb-add-row-button' ).prop( 'disabled', false );\n\n\t\tvar $newRow = $( '<' + nodeName + ' id=\"'+ getRowId( $oldRow.attr('id'), cmb.idNumber ) +'\" class=\"postbox cmb-row cmb-repeatable-grouping\" data-iterator=\"'+ cmb.idNumber +'\">'+ $row.html() +'</' + nodeName + '>' );\n\t\t$oldRow.after( $newRow );\n\n\t\tcmb.afterRowInsert( $newRow );\n\t\tcmb.makeRepeatableSortable( $newRow );\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_add_row', group: true }, $newRow );\n\t};\n\n\tcmb.addAjaxRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this     = $( this );\n\t\tvar $table    = $id( $this.data('selector') );\n\t\tvar $row      = $table.find('.empty-row');\n\t\tvar prevNum   = parseInt( $row.find('[data-iterator]').data('iterator'), 10 );\n\t\tcmb.idNumber  = parseInt( prevNum, 10 ) + 1;\n\t\tvar $emptyrow = $row.clone();\n\n\t\tcmb.newRowHousekeeping( $emptyrow ).cleanRow( $emptyrow, prevNum );\n\n\t\t$row.removeClass('empty-row hidden').addClass('cmb-repeat-row');\n\t\t$row.after( $emptyrow );\n\n\t\tcmb.afterRowInsert( $emptyrow );\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_add_row', group: false }, $emptyrow, $row );\n\t};\n\n\tcmb.removeGroupRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this        = $( this );\n\t\tvar confirmation = $this.data('confirm');\n\n\t\t// Process further only if deletion confirmation enabled and user agreed.\n\t\tif ( ! cmb.resetRow.resetting && confirmation && ! window.confirm( confirmation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $table  = $id( $this.data('selector') );\n\t\tvar $parent = $this.parents('.cmb-repeatable-grouping');\n\t\tvar number  = $table.find('.cmb-repeatable-grouping').length;\n\n\t\tif ( number < 2 ) {\n\t\t\treturn cmb.resetRow( $parent.parents('.cmb-repeatable-group').find( '.cmb-add-group-row' ), $this );\n\t\t}\n\n\t\tcmb.triggerElement( $table, 'cmb2_remove_group_row_start', $this );\n\n\t\t$parent.remove();\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_remove_row', group: true } );\n\t};\n\n\tcmb.removeAjaxRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this = $( this );\n\n\t\t// Check if disabled\n\t\tif ( $this.hasClass( 'button-disabled' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $parent = $this.parents('.cmb-row');\n\t\tvar $table  = $this.parents('.cmb-repeat-table');\n\t\tvar number  = $table.find('.cmb-row').length;\n\n\t\tif ( number <= 2 ) {\n\t\t\treturn cmb.resetRow( $parent.find( '.cmb-add-row-button' ), $this );\n\t\t}\n\n\t\tif ( $parent.hasClass('empty-row') ) {\n\t\t\t$parent.prev().addClass( 'empty-row' ).removeClass('cmb-repeat-row');\n\t\t}\n\n\t\t$this.parents('.cmb-repeat-table .cmb-row').remove();\n\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_remove_row', group: false } );\n\t};\n\n\tcmb.resetRow = function( $addNewBtn, $removeBtn ) {\n\t\tcmb.resetRow.resetting = true;\n\t\t// Click the \"add new\" button followed by the \"remove this\" button\n\t\t// in order to reset the repeat row to empty values.\n\t\t$addNewBtn.trigger( 'click' );\n\t\t$removeBtn.trigger( 'click' );\n\t\tcmb.resetRow.resetting = false;\n\t};\n\n\tcmb.shiftRows = function( evt ) {\n\n\t\tevt.preventDefault();\n\n\t\tvar $this  = $( this );\n\t\tvar moveUp = $this.hasClass( 'move-up' ) ? true : false;\n\t\tvar $from  = $this.parents( '.cmb-repeatable-grouping' );\n\t\tvar $goto  = $from[ moveUp ? 'prev' : 'next' ]( '.cmb-repeatable-grouping' );\n\n\t\t// Before shift occurs.\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_enter', $this, $from, $goto );\n\n\t\tif ( ! $goto.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// About to shift\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_start', $this, $from, $goto );\n\n\t\tvar fromIterator = $from.attr('data-iterator');\n\t\tvar toIterator   = $goto.attr('data-iterator');\n\n\t\t// Replace name attributes in both groups.\n\t\t$from.attr( 'data-iterator', toIterator ).find( cmb.repeatEls ).each( function() {\n\t\t\tcmb.updateNameAttr( $( this ), fromIterator, toIterator );\n\t\t});\n\t\t$goto.attr( 'data-iterator', fromIterator ).find( cmb.repeatEls ).each( function() {\n\t\t\tcmb.updateNameAttr( $( this ), toIterator, fromIterator );\n\t\t});\n\n\t\t// Replace titles in both groups.\n\t\tvar groupTitle = $this.parents( '.cmb-repeatable-group' ).find('[data-grouptitle]').data( 'grouptitle' );\n\t\tif ( groupTitle ) {\n\t\t\tcmb.resetGroupTitles( $from, toIterator, groupTitle );\n\t\t\tcmb.resetGroupTitles( $goto, fromIterator, groupTitle );\n\t\t}\n\n\t\t// Now move the group to it's destination.\n\t\t$goto[moveUp ? 'before' : 'after']( $from );\n\n\t\t// Scroll to the top of the shifted group.\n\t\t$([document.documentElement, document.body]).animate({\n\t\t\tscrollTop: $from.offset().top - 50\n\t\t}, 300);\n\n\t\t// shift done\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_complete', $this, $from, $goto );\n\t};\n\n\tcmb.initPickers = function( $timePickers, $datePickers, $colorPickers ) {\n\t\tcmb.trigger( 'cmb_init_pickers', {\n\t\t\ttime: $timePickers,\n\t\t\tdate: $datePickers,\n\t\t\tcolor: $colorPickers\n\t\t} );\n\n\t\t// Initialize jQuery UI timepickers\n\t\tcmb.initDateTimePickers( $timePickers, 'timepicker', 'time_picker' );\n\t\t// Initialize jQuery UI datepickers\n\t\tcmb.initDateTimePickers( $datePickers, 'datepicker', 'date_picker' );\n\t\t// Initialize color picker\n\t\tcmb.initColorPickers( $colorPickers );\n\t};\n\n\tcmb.initDateTimePickers = function( $selector, method, defaultKey ) {\n\t\tif ( $selector.length ) {\n\t\t\t$selector[ method ]( 'destroy' ).each( function() {\n\t\t\t\tvar $this     = $( this );\n\t\t\t\tvar fieldOpts = $this.data( method ) || {};\n\t\t\t\tvar options   = $.extend( {}, cmb.defaults[ defaultKey ], fieldOpts );\n\t\t\t\t$this[ method ]( cmb.datePickerSetupOpts( fieldOpts, options, method ) );\n\t\t\t} );\n\t\t}\n\t};\n\n\tcmb.datePickerSetupOpts = function( fieldOpts, options, method ) {\n\t\tvar existing = $.extend( {}, options );\n\n\t\toptions.beforeShow = function( input, inst ) {\n\t\t\tif ( 'timepicker' === method ) {\n\t\t\t\tcmb.addTimePickerClasses( inst.dpDiv );\n\t\t\t}\n\n\t\t\t// Wrap datepicker w/ class to narrow the scope of jQuery UI CSS and prevent conflicts\n\t\t\t$id( 'ui-datepicker-div' ).addClass( 'cmb2-element' );\n\n\t\t\t// Let's be sure to call beforeShow if it was added\n\t\t\tif ( 'function' === typeof existing.beforeShow ) {\n\t\t\t\texisting.beforeShow( input, inst );\n\t\t\t}\n\t\t};\n\n\t\tif ( 'timepicker' === method ) {\n\t\t\toptions.onChangeMonthYear = function( year, month, inst, picker ) {\n\t\t\t\tcmb.addTimePickerClasses( inst.dpDiv );\n\n\t\t\t\t// Let's be sure to call onChangeMonthYear if it was added\n\t\t\t\tif ( 'function' === typeof existing.onChangeMonthYear ) {\n\t\t\t\t\texisting.onChangeMonthYear( year, month, inst, picker );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\toptions.onClose = function( dateText, inst ) {\n\t\t\t// Remove the class when we're done with it (and hide to remove FOUC).\n\t\t\tvar $picker = $id( 'ui-datepicker-div' ).removeClass( 'cmb2-element' ).hide();\n\t\t\tif ( 'timepicker' === method && ! $( inst.input ).val() ) {\n\t\t\t\t// Set the timepicker field value if it's empty.\n\t\t\t\tinst.input.val( $picker.find( '.ui_tpicker_time' ).text() );\n\t\t\t}\n\n\t\t\t// Let's be sure to call onClose if it was added\n\t\t\tif ( 'function' === typeof existing.onClose ) {\n\t\t\t\texisting.onClose( dateText, inst );\n\t\t\t}\n\t\t};\n\n\t\treturn options;\n\t};\n\n\t// Adds classes to timepicker buttons.\n\tcmb.addTimePickerClasses = function( $picker ) {\n\t\tvar func = cmb.addTimePickerClasses;\n\t\tfunc.count = func.count || 0;\n\n\t\t// Wait a bit to let the timepicker render, since these are pre-render events.\n\t\tsetTimeout( function() {\n\t\t\tif ( $picker.find( '.ui-priority-secondary' ).length ) {\n\t\t\t\t$picker.find( '.ui-priority-secondary' ).addClass( 'button-secondary' );\n\t\t\t\t$picker.find( '.ui-priority-primary' ).addClass( 'button-primary' );\n\t\t\t\tfunc.count = 0;\n\t\t\t} else if ( func.count < 5 ) {\n\t\t\t\tfunc.count++;\n\t\t\t\tfunc( $picker );\n\t\t\t}\n\t\t}, 10 );\n\t};\n\n\tcmb.initColorPickers = function( $selector ) {\n\t\tif ( ! $selector.length ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( 'object' === typeof jQuery.wp && 'function' === typeof jQuery.wp.wpColorPicker ) {\n\n\t\t\t$selector.each( function() {\n\t\t\t\tvar $this = $( this );\n\t\t\t\tvar fieldOpts = $this.data( 'colorpicker' ) || {};\n\t\t\t\t$this.wpColorPicker( $.extend( {}, cmb.defaults.color_picker, fieldOpts ) );\n\t\t\t} );\n\n\t\t} else {\n\t\t\t$selector.each( function( i ) {\n\t\t\t\t$( this ).after( '<div id=\"picker-' + i + '\" style=\"z-index: 1000; background: #EEE; border: 1px solid #CCC; position: absolute; display: block;\"></div>' );\n\t\t\t\t$id( 'picker-' + i ).hide().farbtastic( $( this ) );\n\t\t\t} )\n\t\t\t.focus( function() {\n\t\t\t\t$( this ).next().show();\n\t\t\t} )\n\t\t\t.blur( function() {\n\t\t\t\t$( this ).next().hide();\n\t\t\t} );\n\t\t}\n\t};\n\n\tcmb.initCodeEditors = function( $selector ) {\n\t\tcmb.trigger( 'cmb_init_code_editors', $selector );\n\n\t\tif ( ! cmb.defaults.code_editor || ! wp || ! wp.codeEditor || ! $selector.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$selector.each( function() {\n\t\t\twp.codeEditor.initialize(\n\t\t\t\tthis.id,\n\t\t\t\tcmb.codeEditorArgs( $( this ).data( 'codeeditor' ) )\n\t\t\t);\n\t\t} );\n\t};\n\n\tcmb.codeEditorArgs = function( overrides ) {\n\t\tvar props = [ 'codemirror', 'csslint', 'jshint', 'htmlhint' ];\n\t\tvar args = $.extend( {}, cmb.defaults.code_editor );\n\t\toverrides = overrides || {};\n\n\t\tfor ( var i = props.length - 1; i >= 0; i-- ) {\n\t\t\tif ( overrides.hasOwnProperty( props[i] ) ) {\n\t\t\t\targs[ props[i] ] = $.extend( {}, args[ props[i] ] || {}, overrides[ props[i] ] );\n\t\t\t}\n\t\t}\n\n\t\treturn args;\n\t};\n\n\tcmb.makeListSortable = function() {\n\t\tvar $filelist = cmb.metabox().find( '.cmb2-media-status.cmb-attach-list' );\n\t\tif ( $filelist.length ) {\n\t\t\t$filelist.sortable({ cursor: 'move' }).disableSelection();\n\t\t}\n\t};\n\n\tcmb.makeRepeatableSortable = function( $row ) {\n\t\tvar $repeatables = ($row || cmb.metabox()).find( '.cmb-repeat-table .cmb-field-list' );\n\n\t\tif ( $repeatables.length ) {\n\t\t\t$repeatables.sortable({\n\t\t\t\titems : '.cmb-repeat-row',\n\t\t\t\tcursor: 'move',\n\t\t\t\t// The default \"cancel\" attributes are: \"input,textarea,button,select,option\".\n\t\t\t\t// We are appending .CodeMirror.\n\t\t\t\t// See https://api.jqueryui.com/sortable/#option-cancel\n\t\t\t\tcancel: 'input,textarea,button,select,option,.CodeMirror'\n\t\t\t});\n\t\t}\n\t};\n\n\tcmb.maybeOembed = function( evt ) {\n\t\tvar $this = $( this );\n\n\t\tvar m = {\n\t\t\tfocusout : function() {\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t// if it's been 2 seconds, hide our spinner\n\t\t\t\t\tcmb.spinner( '.cmb2-metabox', true );\n\t\t\t\t}, 2000);\n\t\t\t},\n\t\t\tkeyup : function() {\n\t\t\t\tvar betw = function( min, max ) {\n\t\t\t\t\treturn ( evt.which <= max && evt.which >= min );\n\t\t\t\t};\n\t\t\t\t// Only Ajax on normal keystrokes\n\t\t\t\tif ( betw( 48, 90 ) || betw( 96, 111 ) || betw( 8, 9 ) || evt.which === 187 || evt.which === 190 ) {\n\t\t\t\t\t// fire our ajax function\n\t\t\t\t\tcmb.doAjax( $this, evt );\n\t\t\t\t}\n\t\t\t},\n\t\t\tpaste : function() {\n\t\t\t\t// paste event is fired before the value is filled, so wait a bit\n\t\t\t\tsetTimeout( function() { cmb.doAjax( $this ); }, 100);\n\t\t\t}\n\t\t};\n\n\t\tm[ evt.type ]();\n\t};\n\n\t/**\n\t * Resize oEmbed videos to fit in their respective metaboxes\n\t *\n\t * @since  0.9.4\n\t *\n\t * @return {return}\n\t */\n\tcmb.resizeoEmbeds = function() {\n\t\tcmb.metabox().each( function() {\n\t\t\tvar $this      = $( this );\n\t\t\tvar $tableWrap = $this.parents('.inside');\n\t\t\tvar isSide     = $this.parents('.inner-sidebar').length || $this.parents( '#side-sortables' ).length;\n\t\t\tvar isSmall    = isSide;\n\t\t\tvar isSmallest = false;\n\t\t\tif ( ! $tableWrap.length )  {\n\t\t\t\treturn true; // continue\n\t\t\t}\n\n\t\t\t// Calculate new width\n\t\t\tvar tableW = $tableWrap.width();\n\n\t\t\tif ( cmb.styleBreakPoint > tableW ) {\n\t\t\t\tisSmall    = true;\n\t\t\t\tisSmallest = ( cmb.styleBreakPoint - 62 ) > tableW;\n\t\t\t}\n\n\t\t\ttableW = isSmall ? tableW : Math.round(($tableWrap.width() * 0.82)*0.97);\n\t\t\tvar newWidth = tableW - 30;\n\t\t\tif ( isSmall && ! isSide && ! isSmallest ) {\n\t\t\t\tnewWidth = newWidth - 75;\n\t\t\t}\n\t\t\tif ( newWidth > 639 ) {\n\t\t\t\treturn true; // continue\n\t\t\t}\n\n\t\t\tvar $embeds   = $this.find('.cmb-type-oembed .embed-status');\n\t\t\tvar $children = $embeds.children().not('.cmb2-remove-wrapper');\n\t\t\tif ( ! $children.length ) {\n\t\t\t\treturn true; // continue\n\t\t\t}\n\n\t\t\t$children.each( function() {\n\t\t\t\tvar $this     = $( this );\n\t\t\t\tvar iwidth    = $this.width();\n\t\t\t\tvar iheight   = $this.height();\n\t\t\t\tvar _newWidth = newWidth;\n\t\t\t\tif ( $this.parents( '.cmb-repeat-row' ).length && ! isSmall ) {\n\t\t\t\t\t// Make room for our repeatable \"remove\" button column\n\t\t\t\t\t_newWidth = newWidth - 91;\n\t\t\t\t\t_newWidth = 785 > tableW ? _newWidth - 15 : _newWidth;\n\t\t\t\t}\n\t\t\t\t// Calc new height\n\t\t\t\tvar newHeight = Math.round((_newWidth * iheight)/iwidth);\n\t\t\t\t$this.width(_newWidth).height(newHeight);\n\t\t\t});\n\t\t});\n\t};\n\n\t// function for running our ajax\n\tcmb.doAjax = function( $obj ) {\n\t\t// get typed value\n\t\tvar oembed_url = $obj.val();\n\t\t// only proceed if the field contains more than 6 characters\n\t\tif ( oembed_url.length < 6 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get field id\n\t\tvar field_id         = $obj.attr('id');\n\t\tvar $context         = $obj.closest( '.cmb-td' );\n\t\tvar $embed_container = $context.find( '.embed-status' );\n\t\tvar $embed_wrap      = $context.find( '.embed_wrap' );\n\t\tvar $child_el        = $embed_container.find( ':first-child' );\n\t\tvar oembed_width     = $embed_container.length && $child_el.length ? $child_el.width() : $obj.width();\n\n\t\tcmb.log( 'oembed_url', oembed_url, field_id );\n\n\t\t// show our spinner\n\t\tcmb.spinner( $context );\n\t\t// clear out previous results\n\t\t$embed_wrap.html('');\n\t\t// and run our ajax function\n\t\tsetTimeout( function() {\n\t\t\t// if they haven't typed in 500 ms\n\t\t\tif ( $( '.cmb2-oembed:focus' ).val() !== oembed_url ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$.ajax({\n\t\t\t\ttype : 'post',\n\t\t\t\tdataType : 'json',\n\t\t\t\turl : l10n.ajaxurl,\n\t\t\t\tdata : {\n\t\t\t\t\t'action'          : 'cmb2_oembed_handler',\n\t\t\t\t\t'oembed_url'      : oembed_url,\n\t\t\t\t\t'oembed_width'    : oembed_width > 300 ? oembed_width : 300,\n\t\t\t\t\t'field_id'        : field_id,\n\t\t\t\t\t'object_id'       : $obj.data( 'objectid' ),\n\t\t\t\t\t'object_type'     : $obj.data( 'objecttype' ),\n\t\t\t\t\t'cmb2_ajax_nonce' : l10n.ajax_nonce\n\t\t\t\t},\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tcmb.log( response );\n\t\t\t\t\t// hide our spinner\n\t\t\t\t\tcmb.spinner( $context, true );\n\t\t\t\t\t// and populate our results from ajax response\n\t\t\t\t\t$embed_wrap.html( response.data );\n\t\t\t\t}\n\t\t\t});\n\n\t\t}, 500);\n\n\t};\n\n\t/**\n\t * Gets jQuery object containing all CMB metaboxes. Caches the result.\n\t *\n\t * @since  1.0.2\n\t *\n\t * @return {Object} jQuery object containing all CMB metaboxes.\n\t */\n\tcmb.metabox = function() {\n\t\tif ( cmb.$metabox ) {\n\t\t\treturn cmb.$metabox;\n\t\t}\n\t\tcmb.$metabox = $('.cmb2-wrap > .cmb2-metabox');\n\t\treturn cmb.$metabox;\n\t};\n\n\t/**\n\t * Starts/stops contextual spinner.\n\t *\n\t * @since  1.0.1\n\t *\n\t * @param  {object} $context The jQuery parent/context object.\n\t * @param  {bool} hide       Whether to hide the spinner (will show by default).\n\t *\n\t * @return {void}\n\t */\n\tcmb.spinner = function( $context, hide ) {\n\t\tvar m = hide ? 'removeClass' : 'addClass';\n\t\t$('.cmb-spinner', $context )[ m ]( 'is-active' );\n\t};\n\n\t/**\n\t * Triggers a jQuery event on the document object.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  {string} evtName The name of the event to trigger.\n\t *\n\t * @return {void}\n\t */\n\tcmb.trigger = function( evtName ) {\n\t\tvar args = Array.prototype.slice.call( arguments, 1 );\n\t\targs.push( cmb );\n\t\t$document.trigger( evtName, args );\n\t};\n\n\t/**\n\t * Triggers a jQuery event on the given jQuery object.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  {object} $el     The jQuery element object.\n\t * @param  {string} evtName The name of the event to trigger.\n\t *\n\t * @return {void}\n\t */\n\tcmb.triggerElement = function( $el, evtName ) {\n\t\tvar args = Array.prototype.slice.call( arguments, 2 );\n\t\targs.push( cmb );\n\t\t$el.trigger( evtName, args );\n\t};\n\n\t/**\n\t * Get an argument for a given field.\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {string|object} hash The field hash, id, or a jQuery object for a field.\n\t * @param  {string}        arg  The argument to get on the field.\n\t *\n\t * @return {mixed}              The argument value.\n\t */\n\tcmb.getFieldArg = function( hash, arg ) {\n\t\treturn cmb.getField( hash )[ arg ];\n\t};\n\n\t/**\n\t * Get a field object instances. Can be filtered by passing in a filter callback function.\n\t * e.g. `const fileFields = CMB2.getFields(f => 'file' === f.type);`\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {mixed} filterCb An optional filter callback function.\n\t *\n\t * @return array            An array of field object instances.\n\t */\n\tcmb.getFields = function( filterCb ) {\n\t\tif ( 'function' === typeof filterCb ) {\n\t\t\tvar fields = [];\n\t\t\t$.each( l10n.fields, function( hash, field ) {\n\t\t\t\tif ( filterCb( field, hash ) ) {\n\t\t\t\t\tfields.push( field );\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn fields;\n\t\t}\n\n\t\treturn l10n.fields;\n\t};\n\n\t/**\n\t * Get a field object instance by hash or id.\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {string|object} hash The field hash, id, or a jQuery object for a field.\n\t *\n\t * @return {object}        The field object or an empty object.\n\t */\n\tcmb.getField = function( hash ) {\n\t\tvar field = {};\n\t\thash = hash instanceof jQuery ? hash.data( 'hash' ) : hash;\n\t\tif ( hash ) {\n\t\t\ttry {\n\t\t\t\tif ( l10n.fields[ hash ] ) {\n\t\t\t\t\tthrow new Error( hash );\n\t\t\t\t}\n\n\t\t\t\tcmb.getFields( function( field ) {\n\t\t\t\t\tif ( 'function' === typeof hash ) {\n\t\t\t\t\t\tif ( hash( field ) ) {\n\t\t\t\t\t\t\tthrow new Error( field.hash );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else  if ( field.id && field.id === hash ) {\n\t\t\t\t\t\tthrow new Error( field.hash );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch( e ) {\n\t\t\t\tfield = l10n.fields[ e.message ];\n\t\t\t}\n\t\t}\n\n\t\treturn field;\n\t};\n\n\t/**\n\t * Safely log things if query var is set. Accepts same parameters as console.log.\n\t *\n\t * @since  1.0.0\n\t *\n\t * @return {void}\n\t */\n\tcmb.log = function() {\n\t\tif ( l10n.script_debug && console && 'function' === typeof console.log ) {\n\t\t\tconsole.log.apply(console, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Replace the last occurrence of a string.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @param  {string} string  String to search/replace.\n\t * @param  {string} search  String to search.\n\t * @param  {string} replace String to replace search with.\n\t *\n\t * @return {string}         Possibly modified string.\n\t */\n\tcmb.replaceLast = function( string, search, replace ) {\n\t\t// find the index of last time word was used\n\t\tvar n = string.lastIndexOf( search );\n\n\t\t// slice the string in 2, one from the start to the lastIndexOf\n\t\t// and then replace the word in the rest\n\t\treturn string.slice( 0, n ) + string.slice( n ).replace( search, replace );\n\t};\n\n\t// Kick it off!\n\t$( cmb.init );\n\n})(window, document, jQuery, window.CMB2);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/js/cmb2.min.js","ext":"js","size":31886,"mtime":1757324689,"type":"text","content":"window.CMB2=window.CMB2||{},function(window,document,$,cmb,undefined){\"use strict\";var $document,l10n=window.cmb2_l10,setTimeout=window.setTimeout,$id=function(selector){return $(document.getElementById(selector))},getRowId=function(id,newIterator){return id=id.split(\"-\"),id.splice(id.length-1,1),id.push(newIterator),id.join(\"-\")};cmb.$id=$id;var defaults={idNumber:!1,repeatEls:'input:not([type=\"button\"]),select,textarea,.cmb2-media-status',noEmpty:'input:not([type=\"button\"]):not([type=\"radio\"]):not([type=\"checkbox\"]),textarea',repeatUpdate:'input:not([type=\"button\"]),select,textarea,label',styleBreakPoint:450,mediaHandlers:{},defaults:{time_picker:l10n.defaults.time_picker,date_picker:l10n.defaults.date_picker,color_picker:l10n.defaults.color_picker||{},code_editor:l10n.defaults.code_editor},media:{frames:{}}};cmb.init=function(){$document=$(document),$.extend(cmb,defaults),cmb.trigger(\"cmb_pre_init\");var $metabox=cmb.metabox(),$repeatGroup=$metabox.find(\".cmb-repeatable-group\");cmb.initPickers($metabox.find('input[type=\"text\"].cmb2-timepicker'),$metabox.find('input[type=\"text\"].cmb2-datepicker'),$metabox.find('input[type=\"text\"].cmb2-colorpicker')),cmb.initCodeEditors($metabox.find(\".cmb2-textarea-code:not(.disable-codemirror)\")),$('<p><span class=\"button-secondary cmb-multicheck-toggle\">'+l10n.strings.check_toggle+\"</span></p>\").insertBefore(\".cmb2-checkbox-list:not(.no-select-all)\"),cmb.makeListSortable(),cmb.makeRepeatableSortable(),$metabox.on(\"change\",\".cmb2_upload_file\",function(){cmb.media.field=$(this).attr(\"id\"),$id(cmb.media.field+\"_id\").val(\"\")}).on(\"click\",\".cmb-multicheck-toggle\",cmb.toggleCheckBoxes).on(\"click\",\".cmb2-upload-button\",cmb.handleMedia).on(\"click\",\".cmb-attach-list li, .cmb2-media-status .img-status img, .cmb2-media-status .file-status > span\",cmb.handleFileClick).on(\"click\",\".cmb2-remove-file-button\",cmb.handleRemoveMedia).on(\"click\",\".cmb-add-group-row\",cmb.addGroupRow).on(\"click\",\".cmb-add-row-button\",cmb.addAjaxRow).on(\"click\",\".cmb-remove-group-row\",cmb.removeGroupRow).on(\"click\",\".cmb-remove-row-button\",cmb.removeAjaxRow).on(\"keyup paste focusout\",\".cmb2-oembed\",cmb.maybeOembed).on(\"cmb2_remove_row\",\".cmb-repeatable-group\",cmb.resetTitlesAndIterator).on(\"click\",\".cmbhandle, .cmbhandle + .cmbhandle-title\",cmb.toggleHandle),$repeatGroup.length&&$repeatGroup.on(\"cmb2_add_row\",cmb.emptyValue).on(\"cmb2_add_row\",cmb.setDefaults).filter(\".sortable\").each(function(){$(this).find(\".cmb-remove-group-row-button\").before('<a class=\"button-secondary cmb-shift-rows move-up alignleft\" href=\"#\"><span class=\"'+l10n.up_arrow_class+'\"></span></a> <a class=\"button-secondary cmb-shift-rows move-down alignleft\" href=\"#\"><span class=\"'+l10n.down_arrow_class+'\"></span></a>')}).on(\"click\",\".cmb-shift-rows\",cmb.shiftRows),setTimeout(cmb.resizeoEmbeds,500),$(window).on(\"resize\",cmb.resizeoEmbeds),$id(\"addtag\").length&&cmb.listenTagAdd(),$(document).on(\"cmb_init\",cmb.mceEnsureSave),cmb.trigger(\"cmb_init\")},cmb.mceEnsureSave=function(){wp.data&&wp.data.hasOwnProperty(\"subscribe\")&&cmb.canTinyMCE()&&wp.data.subscribe(function(){var editor=wp.data.hasOwnProperty(\"select\")?wp.data.select(\"core/editor\"):null;if(editor&&editor.isSavingPost&&editor.isSavingPost()&&window.tinyMCE.editors.length)for(var i=0;i<window.tinyMCE.editors.length;i++)window.tinyMCE.activeEditor!==window.tinyMCE.editors[i]&&window.tinyMCE.editors[i].save()})},cmb.canTinyMCE=function(){return l10n.user_can_richedit&&window.tinyMCE},cmb.listenTagAdd=function(){$document.ajaxSuccess(function(evt,xhr,settings){settings.data&&settings.data.length&&-1!==settings.data.indexOf(\"action=add-tag\")&&cmb.resetBoxes($id(\"addtag\").find(\".cmb2-wrap > .cmb2-metabox\"))})},cmb.resetBoxes=function($boxes){$.each($boxes,function(){cmb.resetBox($(this))})},cmb.resetBox=function($box){$box.find(\".wp-picker-clear\").trigger(\"click\"),$box.find(\".cmb2-remove-file-button\").trigger(\"click\"),$box.find(\".cmb-row.cmb-repeatable-grouping:not(:first-of-type) .cmb-remove-group-row\").click(),$box.find(\".cmb-repeat-row:not(:first-child)\").remove(),$box.find('input:not([type=\"button\"]),select,textarea').each(function(){var $element=$(this),tagName=$element.prop(\"tagName\");if(\"INPUT\"===tagName){var elType=$element.attr(\"type\");\"checkbox\"===elType||\"radio\"===elType?$element.prop(\"checked\",!1):$element.val(\"\")}\"SELECT\"===tagName&&$(\"option:selected\",this).prop(\"selected\",!1),\"TEXTAREA\"===tagName&&$element.html(\"\")})},cmb.resetTitlesAndIterator=function(evt){if(evt.group){var $table=$(evt.target),groupTitle=$table.find(\".cmb-add-group-row\").data(\"grouptitle\");$table.find(\".cmb-repeatable-grouping\").each(function(rowindex){var $row=$(this),prevIterator=parseInt($row.data(\"iterator\"),10);prevIterator!==rowindex&&($row.attr(\"data-iterator\",rowindex).data(\"iterator\",rowindex).attr(\"id\",getRowId($row.attr(\"id\"),rowindex)).find(cmb.repeatEls).each(function(){cmb.updateNameAttr($(this),prevIterator,rowindex)}),cmb.resetGroupTitles($row,rowindex,groupTitle))})}},cmb.resetGroupTitles=function($row,newIterator,groupTitle){if(groupTitle){var $rowTitle=$row.find(\"h3.cmb-group-title\");$rowTitle.length&&$rowTitle.text(groupTitle.replace(\"{#}\",parseInt(newIterator,10)+1))}},cmb.toggleHandle=function(evt){evt.preventDefault(),cmb.trigger(\"postbox-toggled\",$(this).parent(\".postbox\").toggleClass(\"closed\"))},cmb.toggleCheckBoxes=function(evt){evt.preventDefault();var $this=$(this),$multicheck=$this.closest(\".cmb-td\").find(\"input[type=checkbox]:not([disabled])\"),$toggled=!$this.data(\"checked\");$multicheck.prop(\"checked\",$toggled).trigger(\"change\"),$this.data(\"checked\",$toggled)},cmb.handleMedia=function(evt){evt.preventDefault();var $el=$(this);cmb.attach_id=!$el.hasClass(\"cmb2-upload-list\")&&$el.closest(\".cmb-td\").find(\".cmb2-upload-file-id\").val(),cmb.attach_id=\"0\"!==cmb.attach_id&&cmb.attach_id,cmb.handleFieldMedia($el.prev(\"input.cmb2-upload-file\"),$el.hasClass(\"cmb2-upload-list\"))},cmb.handleFileClick=function(evt){if(!$(evt.target).is(\"a\")){evt.preventDefault();var $el=$(this),$td=$el.closest(\".cmb-td\"),isList=$td.find(\".cmb2-upload-button\").hasClass(\"cmb2-upload-list\");cmb.attach_id=isList?$el.find('input[type=\"hidden\"]').data(\"id\"):$td.find(\".cmb2-upload-file-id\").val(),cmb.attach_id&&cmb.handleFieldMedia($td.find(\"input.cmb2-upload-file\"),isList)}},cmb._handleMedia=function(id,isList){return cmb.handleFieldMedia($id(id),isList)},cmb.handleFieldMedia=function($field,isList){if(wp){var media,handlers,id=$field.attr(\"id\"),fieldData=$field.data(),uid=fieldData.mediaid;if(uid||(uid=_.uniqueId(),$field.attr(\"data-mediaid\",uid).data(\"mediaid\",uid),fieldData.mediaid=uid),handlers=cmb.mediaHandlers,media=cmb.media,media.mediaid=uid,media.field=id,media.$field=$field,media.fieldData=fieldData,media.previewSize=media.fieldData.previewsize,media.sizeName=media.fieldData.sizename,media.fieldName=$field.attr(\"name\"),media.isList=isList,uid in media.frames)return media.frames[uid].open();media.frames[uid]=wp.media({title:cmb.metabox().find('label[for=\"'+id+'\"]').text(),library:media.fieldData.queryargs||{},button:{text:l10n.strings[isList?\"upload_files\":\"upload_file\"]},multiple:!!isList&&\"add\"}),media.frames[uid].states.first().set(\"filterable\",\"all\"),cmb.trigger(\"cmb_media_modal_init\",media),handlers.list=function(selection,returnIt){var attachmentHtml,fileGroup=[];if(handlers.list.templates||(handlers.list.templates={image:wp.template(\"cmb2-list-image\"),file:wp.template(\"cmb2-list-file\")}),selection.each(function(attachment){attachmentHtml=handlers.getAttachmentHtml(attachment,\"list\"),fileGroup.push(attachmentHtml)}),returnIt)return fileGroup;media.$field.siblings(\".cmb2-media-status\").append(fileGroup)},handlers.single=function(selection){handlers.single.templates||(handlers.single.templates={image:wp.template(\"cmb2-single-image\"),file:wp.template(\"cmb2-single-file\")});var attachment=selection.first();media.$field.val(attachment.get(\"url\")),media.$field.closest(\".cmb-td\").find(\".cmb2-upload-file-id\").val(attachment.get(\"id\"));var attachmentHtml=handlers.getAttachmentHtml(attachment,\"single\");media.$field.siblings(\".cmb2-media-status\").slideDown().html(attachmentHtml)},handlers.getAttachmentHtml=function(attachment,templatesId){var isImage=\"image\"===attachment.get(\"type\"),data=handlers.prepareData(attachment,isImage);return handlers[templatesId].templates[isImage?\"image\":\"file\"](data)},handlers.prepareData=function(data,image){return image&&handlers.getImageData.call(data,50),data=data.toJSON(),data.mediaField=media.field,data.mediaFieldName=media.fieldName,data.stringRemoveImage=l10n.strings.remove_image,data.stringFile=l10n.strings.file,data.stringDownload=l10n.strings.download,data.stringRemoveFile=l10n.strings.remove_file,data},handlers.getImageData=function(fallbackSize){var previewW=media.previewSize[0]||fallbackSize,previewH=media.previewSize[1]||fallbackSize,url=this.get(\"url\"),width=this.get(\"width\"),height=this.get(\"height\"),sizes=this.get(\"sizes\");return sizes&&(sizes[media.sizeName]?(url=sizes[media.sizeName].url,width=sizes[media.sizeName].width,height=sizes[media.sizeName].height):sizes.large&&(url=sizes.large.url,width=sizes.large.width,height=sizes.large.height)),width>previewW&&(height=Math.floor(previewW*height/width),width=previewW),height>previewH&&(width=Math.floor(previewH*width/height),height=previewH),width||(width=previewW),height||(height=\"svg\"===this.get(\"filename\").split(\".\").pop()?\"100%\":previewH),this.set(\"sizeUrl\",url),this.set(\"sizeWidth\",width),this.set(\"sizeHeight\",height),this},handlers.selectFile=function(){var selection=media.frames[uid].state().get(\"selection\"),type=isList?\"list\":\"single\";cmb.attach_id&&isList?$('[data-id=\"'+cmb.attach_id+'\"]').parents(\"li\").replaceWith(handlers.list(selection,!0)):handlers[type](selection),cmb.trigger(\"cmb_media_modal_select\",selection,media)},handlers.openModal=function(){var attach,selection=media.frames[uid].state().get(\"selection\");cmb.attach_id?(attach=wp.media.attachment(cmb.attach_id),attach.fetch(),selection.set(attach?[attach]:[])):selection.reset(),cmb.trigger(\"cmb_media_modal_open\",selection,media)},media.frames[uid].on(\"select\",handlers.selectFile).on(\"open\",handlers.openModal),media.frames[uid].open()}},cmb.handleRemoveMedia=function(evt){evt.preventDefault();var $this=$(this);if($this.is(\".cmb-attach-list .cmb2-remove-file-button\"))return $this.parents(\".cmb2-media-item\").remove(),!1;var $cell=$this.closest(\".cmb-td\");return cmb.media.$field=$cell.find(\".cmb2-upload-file\"),cmb.media.field=cmb.media.$field.attr(\"id\"),cmb.media.$field.val(\"\"),$cell.find(\".cmb2-upload-file-id\").val(\"\"),$this.parents(\".cmb2-media-status\").html(\"\"),!1},cmb.cleanRow=function($row,prevNum,group){var $elements=$row.find(cmb.repeatUpdate);if(group){var $other=$row.find(\"[id]\").not(cmb.repeatUpdate);$row.find(\".cmb-repeat-table .cmb-repeat-row:not(:first-child)\").remove(),$other.length&&$other.each(function(){var $_this=$(this),oldID=$_this.attr(\"id\"),newID=oldID.replace(\"_\"+prevNum,\"_\"+cmb.idNumber),$buttons=$row.find('[data-selector=\"'+oldID+'\"]');$_this.attr(\"id\",newID),$buttons.length&&$buttons.attr(\"data-selector\",newID).data(\"selector\",newID)})}return $elements.filter(\":checked\").removeAttr(\"checked\"),$elements.find(\":checked\").removeAttr(\"checked\"),$elements.filter(\":selected\").removeAttr(\"selected\"),$elements.find(\":selected\").removeAttr(\"selected\",!1),cmb.resetGroupTitles($row,cmb.idNumber,$row.data(\"title\")),$elements.each(function(){cmb.elReplacements($(this),prevNum,group)}),cmb},cmb.elReplacements=function($newInput,prevNum,group){var newID,oldID,oldFor=$newInput.attr(\"for\"),oldVal=$newInput.val(),type=$newInput.prop(\"type\"),defVal=cmb.getFieldArg($newInput,\"default\"),newVal=void 0!==defVal&&!1!==defVal?defVal:\"\",tagName=$newInput.prop(\"tagName\"),checkable=(\"radio\"===type||\"checkbox\"===type)&&oldVal,attrs={};if(oldFor)attrs={for:oldFor.replace(\"_\"+prevNum,\"_\"+cmb.idNumber)};else{var newName,oldName=$newInput.attr(\"name\");oldID=$newInput.attr(\"id\"),group?(newName=oldName?oldName.replace(\"[\"+prevNum+\"][\",\"[\"+cmb.idNumber+\"][\"):\"\",newID=oldID?oldID.replace(\"_\"+prevNum+\"_\",\"_\"+cmb.idNumber+\"_\"):\"\"):(newName=oldName?cmb.replaceLast(oldName,\"[\"+prevNum+\"]\",\"[\"+cmb.idNumber+\"]\"):\"\",newID=oldID?cmb.replaceLast(oldID,\"_\"+prevNum,\"_\"+cmb.idNumber):\"\"),attrs={id:newID,name:newName}}if(\"TEXTAREA\"===tagName&&$newInput.html(newVal),\"SELECT\"===tagName&&void 0!==defVal){var $toSelect=$newInput.find('[value=\"'+defVal+'\"]');$toSelect.length&&$toSelect.attr(\"selected\",\"selected\").prop(\"selected\",\"selected\")}return checkable&&($newInput.removeAttr(\"checked\"),void 0!==defVal&&oldVal===defVal&&$newInput.attr(\"checked\",\"checked\").prop(\"checked\",\"checked\")),!group&&$newInput[0].hasAttribute(\"data-iterator\")&&(attrs[\"data-iterator\"]=cmb.idNumber),$newInput.removeClass(\"hasDatepicker\").val(checkable||newVal).attr(attrs),$newInput},cmb.newRowHousekeeping=function($row){var $colorPicker=$row.find(\".wp-picker-container\"),$list=$row.find(\".cmb2-media-status\");return $colorPicker.length&&$colorPicker.each(function(){var $td=$(this).parent();$td.html($td.find('input[type=\"text\"].cmb2-colorpicker').attr(\"style\",\"\"))}),$list.length&&$list.empty(),cmb},cmb.afterRowInsert=function($row){cmb.initPickers($row.find('input[type=\"text\"].cmb2-timepicker'),$row.find('input[type=\"text\"].cmb2-datepicker'),$row.find('input[type=\"text\"].cmb2-colorpicker'))},cmb.updateNameAttr=function($el,prevIterator,newIterator){var name=$el.attr(\"name\");if(void 0!==name){var isFileList=$el.attr(\"id\").indexOf(\"filelist\"),from=isFileList?\"[\"+prevIterator+\"][\":\"[\"+prevIterator+\"]\",to=isFileList?\"[\"+newIterator+\"][\":\"[\"+newIterator+\"]\",newName=name.replace(from,to);$el.attr(\"name\",newName)}},cmb.emptyValue=function(evt,row){$(cmb.noEmpty,row).val(\"\")},cmb.setDefaults=function(evt,row){$(cmb.noEmpty,row).each(function(){var $el=$(this),defVal=cmb.getFieldArg($el,\"default\");void 0!==defVal&&!1!==defVal&&$el.val(defVal)})},cmb.addGroupRow=function(evt){evt.preventDefault();var $this=$(this);cmb.triggerElement($this,\"cmb2_add_group_row_start\",$this);var $table=$id($this.data(\"selector\")),$oldRow=$table.find(\".cmb-repeatable-grouping\").last(),prevNum=parseInt($oldRow.data(\"iterator\"),10);cmb.idNumber=parseInt(prevNum,10)+1;for(var $row=$oldRow.clone(),nodeName=$row.prop(\"nodeName\")||\"div\";$table.find('.cmb-repeatable-grouping[data-iterator=\"'+cmb.idNumber+'\"]').length>0;)cmb.idNumber++;cmb.newRowHousekeeping($row.data(\"title\",$this.data(\"grouptitle\"))).cleanRow($row,prevNum,!0),$row.find(\".cmb-add-row-button\").prop(\"disabled\",!1);var $newRow=$(\"<\"+nodeName+' id=\"'+getRowId($oldRow.attr(\"id\"),cmb.idNumber)+'\" class=\"postbox cmb-row cmb-repeatable-grouping\" data-iterator=\"'+cmb.idNumber+'\">'+$row.html()+\"</\"+nodeName+\">\");$oldRow.after($newRow),cmb.afterRowInsert($newRow),cmb.makeRepeatableSortable($newRow),cmb.triggerElement($table,{type:\"cmb2_add_row\",group:!0},$newRow)},cmb.addAjaxRow=function(evt){evt.preventDefault();var $this=$(this),$table=$id($this.data(\"selector\")),$row=$table.find(\".empty-row\"),prevNum=parseInt($row.find(\"[data-iterator]\").data(\"iterator\"),10);cmb.idNumber=parseInt(prevNum,10)+1;var $emptyrow=$row.clone();cmb.newRowHousekeeping($emptyrow).cleanRow($emptyrow,prevNum),$row.removeClass(\"empty-row hidden\").addClass(\"cmb-repeat-row\"),$row.after($emptyrow),cmb.afterRowInsert($emptyrow),cmb.triggerElement($table,{type:\"cmb2_add_row\",group:!1},$emptyrow,$row)},cmb.removeGroupRow=function(evt){evt.preventDefault();var $this=$(this),confirmation=$this.data(\"confirm\");if(cmb.resetRow.resetting||!confirmation||window.confirm(confirmation)){var $table=$id($this.data(\"selector\")),$parent=$this.parents(\".cmb-repeatable-grouping\");if($table.find(\".cmb-repeatable-grouping\").length<2)return cmb.resetRow($parent.parents(\".cmb-repeatable-group\").find(\".cmb-add-group-row\"),$this);cmb.triggerElement($table,\"cmb2_remove_group_row_start\",$this),$parent.remove(),cmb.triggerElement($table,{type:\"cmb2_remove_row\",group:!0})}},cmb.removeAjaxRow=function(evt){evt.preventDefault();var $this=$(this);if(!$this.hasClass(\"button-disabled\")){var $parent=$this.parents(\".cmb-row\"),$table=$this.parents(\".cmb-repeat-table\");if($table.find(\".cmb-row\").length<=2)return cmb.resetRow($parent.find(\".cmb-add-row-button\"),$this);$parent.hasClass(\"empty-row\")&&$parent.prev().addClass(\"empty-row\").removeClass(\"cmb-repeat-row\"),$this.parents(\".cmb-repeat-table .cmb-row\").remove(),cmb.triggerElement($table,{type:\"cmb2_remove_row\",group:!1})}},cmb.resetRow=function($addNewBtn,$removeBtn){cmb.resetRow.resetting=!0,$addNewBtn.trigger(\"click\"),$removeBtn.trigger(\"click\"),cmb.resetRow.resetting=!1},cmb.shiftRows=function(evt){evt.preventDefault();var $this=$(this),moveUp=!!$this.hasClass(\"move-up\"),$from=$this.parents(\".cmb-repeatable-grouping\"),$goto=$from[moveUp?\"prev\":\"next\"](\".cmb-repeatable-grouping\");if(cmb.triggerElement($this,\"cmb2_shift_rows_enter\",$this,$from,$goto),$goto.length){cmb.triggerElement($this,\"cmb2_shift_rows_start\",$this,$from,$goto);var fromIterator=$from.attr(\"data-iterator\"),toIterator=$goto.attr(\"data-iterator\");$from.attr(\"data-iterator\",toIterator).find(cmb.repeatEls).each(function(){cmb.updateNameAttr($(this),fromIterator,toIterator)}),$goto.attr(\"data-iterator\",fromIterator).find(cmb.repeatEls).each(function(){cmb.updateNameAttr($(this),toIterator,fromIterator)});var groupTitle=$this.parents(\".cmb-repeatable-group\").find(\"[data-grouptitle]\").data(\"grouptitle\");groupTitle&&(cmb.resetGroupTitles($from,toIterator,groupTitle),cmb.resetGroupTitles($goto,fromIterator,groupTitle)),$goto[moveUp?\"before\":\"after\"]($from),$([document.documentElement,document.body]).animate({scrollTop:$from.offset().top-50},300),cmb.triggerElement($this,\"cmb2_shift_rows_complete\",$this,$from,$goto)}},cmb.initPickers=function($timePickers,$datePickers,$colorPickers){cmb.trigger(\"cmb_init_pickers\",{time:$timePickers,date:$datePickers,color:$colorPickers}),cmb.initDateTimePickers($timePickers,\"timepicker\",\"time_picker\"),cmb.initDateTimePickers($datePickers,\"datepicker\",\"date_picker\"),cmb.initColorPickers($colorPickers)},cmb.initDateTimePickers=function($selector,method,defaultKey){$selector.length&&$selector[method](\"destroy\").each(function(){var $this=$(this),fieldOpts=$this.data(method)||{},options=$.extend({},cmb.defaults[defaultKey],fieldOpts);$this[method](cmb.datePickerSetupOpts(fieldOpts,options,method))})},cmb.datePickerSetupOpts=function(fieldOpts,options,method){var existing=$.extend({},options);return options.beforeShow=function(input,inst){\"timepicker\"===method&&cmb.addTimePickerClasses(inst.dpDiv),$id(\"ui-datepicker-div\").addClass(\"cmb2-element\"),\"function\"==typeof existing.beforeShow&&existing.beforeShow(input,inst)},\"timepicker\"===method&&(options.onChangeMonthYear=function(year,month,inst,picker){cmb.addTimePickerClasses(inst.dpDiv),\"function\"==typeof existing.onChangeMonthYear&&existing.onChangeMonthYear(year,month,inst,picker)}),options.onClose=function(dateText,inst){var $picker=$id(\"ui-datepicker-div\").removeClass(\"cmb2-element\").hide();\"timepicker\"!==method||$(inst.input).val()||inst.input.val($picker.find(\".ui_tpicker_time\").text()),\"function\"==typeof existing.onClose&&existing.onClose(dateText,inst)},options},cmb.addTimePickerClasses=function($picker){var func=cmb.addTimePickerClasses;func.count=func.count||0,setTimeout(function(){$picker.find(\".ui-priority-secondary\").length?($picker.find(\".ui-priority-secondary\").addClass(\"button-secondary\"),$picker.find(\".ui-priority-primary\").addClass(\"button-primary\"),func.count=0):func.count<5&&(func.count++,func($picker))},10)},cmb.initColorPickers=function($selector){$selector.length&&(\"object\"==typeof jQuery.wp&&\"function\"==typeof jQuery.wp.wpColorPicker?$selector.each(function(){var $this=$(this),fieldOpts=$this.data(\"colorpicker\")||{};$this.wpColorPicker($.extend({},cmb.defaults.color_picker,fieldOpts))}):$selector.each(function(i){$(this).after('<div id=\"picker-'+i+'\" style=\"z-index: 1000; background: #EEE; border: 1px solid #CCC; position: absolute; display: block;\"></div>'),$id(\"picker-\"+i).hide().farbtastic($(this))}).focus(function(){$(this).next().show()}).blur(function(){$(this).next().hide()}))},cmb.initCodeEditors=function($selector){cmb.trigger(\"cmb_init_code_editors\",$selector),cmb.defaults.code_editor&&wp&&wp.codeEditor&&$selector.length&&$selector.each(function(){wp.codeEditor.initialize(this.id,cmb.codeEditorArgs($(this).data(\"codeeditor\")))})},cmb.codeEditorArgs=function(overrides){var props=[\"codemirror\",\"csslint\",\"jshint\",\"htmlhint\"],args=$.extend({},cmb.defaults.code_editor);overrides=overrides||{};for(var i=props.length-1;i>=0;i--)overrides.hasOwnProperty(props[i])&&(args[props[i]]=$.extend({},args[props[i]]||{},overrides[props[i]]));return args},cmb.makeListSortable=function(){var $filelist=cmb.metabox().find(\".cmb2-media-status.cmb-attach-list\");$filelist.length&&$filelist.sortable({cursor:\"move\"}).disableSelection()},cmb.makeRepeatableSortable=function($row){var $repeatables=($row||cmb.metabox()).find(\".cmb-repeat-table .cmb-field-list\");$repeatables.length&&$repeatables.sortable({items:\".cmb-repeat-row\",cursor:\"move\",cancel:\"input,textarea,button,select,option,.CodeMirror\"})},cmb.maybeOembed=function(evt){var $this=$(this);({focusout:function(){setTimeout(function(){cmb.spinner(\".cmb2-metabox\",!0)},2e3)},keyup:function(){var betw=function(min,max){return evt.which<=max&&evt.which>=min};(betw(48,90)||betw(96,111)||betw(8,9)||187===evt.which||190===evt.which)&&cmb.doAjax($this,evt)},paste:function(){setTimeout(function(){cmb.doAjax($this)},100)}})[evt.type]()},cmb.resizeoEmbeds=function(){cmb.metabox().each(function(){var $this=$(this),$tableWrap=$this.parents(\".inside\"),isSide=$this.parents(\".inner-sidebar\").length||$this.parents(\"#side-sortables\").length,isSmall=isSide,isSmallest=!1;if(!$tableWrap.length)return!0;var tableW=$tableWrap.width();cmb.styleBreakPoint>tableW&&(isSmall=!0,isSmallest=cmb.styleBreakPoint-62>tableW),tableW=isSmall?tableW:Math.round(.82*$tableWrap.width()*.97);var newWidth=tableW-30;if(!isSmall||isSide||isSmallest||(newWidth-=75),newWidth>639)return!0;var $embeds=$this.find(\".cmb-type-oembed .embed-status\"),$children=$embeds.children().not(\".cmb2-remove-wrapper\");if(!$children.length)return!0;$children.each(function(){var $this=$(this),iwidth=$this.width(),iheight=$this.height(),_newWidth=newWidth;$this.parents(\".cmb-repeat-row\").length&&!isSmall&&(_newWidth=newWidth-91,_newWidth=785>tableW?_newWidth-15:_newWidth);var newHeight=Math.round(_newWidth*iheight/iwidth);$this.width(_newWidth).height(newHeight)})})},cmb.doAjax=function($obj){var oembed_url=$obj.val();if(!(oembed_url.length<6)){var field_id=$obj.attr(\"id\"),$context=$obj.closest(\".cmb-td\"),$embed_container=$context.find(\".embed-status\"),$embed_wrap=$context.find(\".embed_wrap\"),$child_el=$embed_container.find(\":first-child\"),oembed_width=$embed_container.length&&$child_el.length?$child_el.width():$obj.width();cmb.log(\"oembed_url\",oembed_url,field_id),cmb.spinner($context),$embed_wrap.html(\"\"),setTimeout(function(){$(\".cmb2-oembed:focus\").val()===oembed_url&&$.ajax({type:\"post\",dataType:\"json\",url:l10n.ajaxurl,data:{action:\"cmb2_oembed_handler\",oembed_url:oembed_url,oembed_width:oembed_width>300?oembed_width:300,field_id:field_id,object_id:$obj.data(\"objectid\"),object_type:$obj.data(\"objecttype\"),cmb2_ajax_nonce:l10n.ajax_nonce},success:function(response){cmb.log(response),cmb.spinner($context,!0),$embed_wrap.html(response.data)}})},500)}},cmb.metabox=function(){return cmb.$metabox?cmb.$metabox:(cmb.$metabox=$(\".cmb2-wrap > .cmb2-metabox\"),cmb.$metabox)},cmb.spinner=function($context,hide){var m=hide?\"removeClass\":\"addClass\";$(\".cmb-spinner\",$context)[m](\"is-active\")},cmb.trigger=function(evtName){var args=Array.prototype.slice.call(arguments,1);args.push(cmb),$document.trigger(evtName,args)},cmb.triggerElement=function($el,evtName){var args=Array.prototype.slice.call(arguments,2);args.push(cmb),$el.trigger(evtName,args)},cmb.getFieldArg=function(hash,arg){return cmb.getField(hash)[arg]},cmb.getFields=function(filterCb){if(\"function\"==typeof filterCb){var fields=[];return $.each(l10n.fields,function(hash,field){filterCb(field,hash)&&fields.push(field)}),fields}return l10n.fields},cmb.getField=function(hash){var field={};if(hash=hash instanceof jQuery?hash.data(\"hash\"):hash)try{if(l10n.fields[hash])throw new Error(hash);cmb.getFields(function(field){if(\"function\"==typeof hash){if(hash(field))throw new Error(field.hash)}else if(field.id&&field.id===hash)throw new Error(field.hash)})}catch(e){field=l10n.fields[e.message]}return field},cmb.log=function(){l10n.script_debug&&console&&\"function\"==typeof console.log&&console.log.apply(console,arguments)},cmb.replaceLast=function(string,search,replace){var n=string.lastIndexOf(search);return string.slice(0,n)+string.slice(n).replace(search,replace)},$(cmb.init)}(window,document,jQuery,window.CMB2),window.CMB2=window.CMB2||{},window.CMB2.wysiwyg=window.CMB2.wysiwyg||{},function(window,document,$,cmb,wysiwyg,undefined){\"use strict\";function delayedInit(){0===toBeDestroyed.length?toBeInitialized.forEach(function(toInit){toBeInitialized.splice(toBeInitialized.indexOf(toInit),1),wysiwyg.init.apply(wysiwyg,toInit)}):window.setTimeout(delayedInit,100)}function delayedDestroy(){toBeDestroyed.forEach(function(id){toBeDestroyed.splice(toBeDestroyed.indexOf(id),1),wysiwyg.destroy(id)})}function getGroupData(data){var groupid=data.groupid,fieldid=data.fieldid;return all[groupid]&&all[groupid][fieldid]||(all[groupid]=all[groupid]||{},all[groupid][fieldid]={template:wp.template(\"cmb2-wysiwyg-\"+groupid+\"-\"+fieldid),defaults:{mce:$.extend({},tinyMCEPreInit.mceInit[\"cmb2_i_\"+groupid+fieldid]),qt:$.extend({},tinyMCEPreInit.qtInit[\"cmb2_i_\"+groupid+fieldid])}},delete tinyMCEPreInit.mceInit[\"cmb2_i_\"+groupid+fieldid],delete tinyMCEPreInit.qtInit[\"cmb2_i_\"+groupid+fieldid]),all[groupid][fieldid]}function initOptions(options){var prop,newSettings,newQTS,nameRegex=new RegExp(\"cmb2_n_\"+options.groupid+options.fieldid,\"g\"),idRegex=new RegExp(\"cmb2_i_\"+options.groupid+options.fieldid,\"g\");if(void 0===tinyMCEPreInit.mceInit[options.id]){newSettings=$.extend({},options.defaults.mce);for(prop in newSettings)\"string\"==typeof newSettings[prop]&&(newSettings[prop]=newSettings[prop].replace(idRegex,options.id).replace(nameRegex,options.name));tinyMCEPreInit.mceInit[options.id]=newSettings}if(void 0===tinyMCEPreInit.qtInit[options.id]){newQTS=$.extend({},options.defaults.qt);for(prop in newQTS)\"string\"==typeof newQTS[prop]&&(newQTS[prop]=newQTS[prop].replace(idRegex,options.id).replace(nameRegex,options.name));tinyMCEPreInit.qtInit[options.id]=newQTS}}var toBeDestroyed=[],toBeInitialized=[],all=wysiwyg.all={};wysiwyg.initAll=function(){var $this,data,initiated;$(\".cmb2-wysiwyg-placeholder\").each(function(){$this=$(this),data=$this.data(),data.groupid&&(data.id=$this.attr(\"id\"),data.name=$this.attr(\"name\"),data.value=$this.val(),wysiwyg.init($this,data,!1),initiated=!0)}),!0===initiated&&(void 0!==window.QTags&&window.QTags._buttonsInit(),$(document).on(\"cmb2_add_row\",wysiwyg.addRow).on(\"cmb2_remove_group_row_start\",wysiwyg.destroyRowEditors).on(\"cmb2_shift_rows_start\",wysiwyg.shiftStart).on(\"cmb2_shift_rows_complete\",wysiwyg.shiftComplete))},wysiwyg.addRow=function(evt,$row){wysiwyg.initRow($row,evt)},wysiwyg.destroyRowEditors=function(evt,$btn){wysiwyg.destroy($btn.parents(\".cmb-repeatable-grouping\").find(\".wp-editor-area\").attr(\"id\"))},wysiwyg.shiftStart=function(evt,$btn,$from,$to){$from.add($to).find(\".wp-editor-wrap textarea\").each(function(){wysiwyg.destroy($(this).attr(\"id\"))})},wysiwyg.shiftComplete=function(evt,$btn,$from,$to){$from.add($to).each(function(){wysiwyg.initRow($(this),evt)})},wysiwyg.initRow=function($row,evt){var $toReplace,data,defVal;$row.find(\".cmb2-wysiwyg-inner-wrap\").each(function(){$toReplace=$(this),data=$toReplace.data(),defVal=cmb.getFieldArg(data.hash,\"default\",\"\"),defVal=void 0!==defVal&&!1!==defVal?defVal:\"\",data.iterator=$row.data(\"iterator\"),data.fieldid=data.id,data.id=data.groupid+\"_\"+data.iterator+\"_\"+data.fieldid,data.name=data.groupid+\"[\"+data.iterator+\"][\"+data.fieldid+\"]\",data.value=\"cmb2_add_row\"!==evt.type&&$toReplace.find(\".wp-editor-area\").length?$toReplace.find(\".wp-editor-area\").val():defVal,0===toBeDestroyed.length?wysiwyg.init($toReplace,data):(toBeInitialized.push([$toReplace,data]),window.setTimeout(delayedInit,100))})},wysiwyg.init=function($toReplace,data,buttonsInit){if(!data.groupid)return!1;var mceActive=cmb.canTinyMCE(),qtActive=\"function\"==typeof window.quicktags;$.extend(data,getGroupData(data)),initOptions(data),$toReplace.replaceWith(data.template(data)),mceActive&&window.tinyMCE.init(tinyMCEPreInit.mceInit[data.id]),qtActive&&window.quicktags(tinyMCEPreInit.qtInit[data.id]),mceActive&&$(document.getElementById(data.id)).parents(\".wp-editor-wrap\").removeClass(\"html-active\").addClass(\"tmce-active\"),!1!==buttonsInit&&void 0!==window.QTags&&window.QTags._buttonsInit()},wysiwyg.destroy=function(id){if(cmb.canTinyMCE()){var editor=tinyMCE.get(id);null!==editor&&void 0!==editor?(editor.destroy(),void 0===tinyMCEPreInit.mceInit[id]&&delete tinyMCEPreInit.mceInit[id],void 0===tinyMCEPreInit.qtInit[id]&&delete tinyMCEPreInit.qtInit[id]):-1===toBeDestroyed.indexOf(id)&&(toBeDestroyed.push(id),window.setTimeout(delayedDestroy,100))}},$(document).on(\"cmb_init\",wysiwyg.initAll)}(window,document,jQuery,window.CMB2,window.CMB2.wysiwyg),window.CMB2=window.CMB2||{},window.CMB2.charcounter=window.CMB2.charcounter||{},function(window,document,$,cmb,counter){\"use strict\";if(!wp.utils||!wp.utils.WordCounter)return cmb.log(\"Cannot find wp.utils!\");counter.counters={};var counters=counter.counters,wpCounter=new wp.utils.WordCounter;counter.updateCounter=function(field_id){if(!counters.hasOwnProperty(field_id))return null;var instance=counters[field_id],wysiwyg=instance.editor&&!instance.editor.isHidden(),text=wysiwyg?instance.editor.getContent({format:\"raw\"}):cmb.$id(field_id).val().trim(),count=wpCounter.count(text,instance.type),exceeded=instance.max&&count>instance.max,val=instance.max?instance.max-count:count;return instance.$el.parents(\".cmb2-char-counter-wrap\")[exceeded?\"addClass\":\"removeClass\"](\"cmb2-max-exceeded\"),instance.$el.val(val).outerWidth(8*String(val).length+15+\"px\"),count},counter.instantiate=function($el){var data=$el.data();if(!(data.fieldId in counters)){var instance={$el:$el,max:data.max,type:\"words\"===data.counterType?\"words\":\"characters_including_spaces\",editor:!1};counters[data.fieldId]=instance,counter.updateCounter(data.fieldId)}},counter.initAll=function(){$(\".cmb2-char-counter\").each(function(){counter.instantiate($(this))})},counter.initWysiwyg=function(evt,editor){editor.id in counters&&(counters[editor.id].editor=editor,editor.on(\"nodechange keyup\",counter.countWysiwyg))},counter.addRow=function(evt,$row){$row.find(\".cmb2-char-counter\").each(function(){var $this=$(this),id=$this.attr(\"id\"),field_id=id.replace(/^char-counter-/,\"\");$this.attr(\"data-field-id\",field_id).data(\"field-id\",field_id),counter.instantiate($this)})},counter.cleanCounters=function(){var field_id,remove=[];for(field_id in counters)document.getElementById(field_id)||remove.push(field_id);remove.length&&_.each(remove,function(field_id){delete counters[field_id]})},counter.countWysiwyg=_.throttle(function(evt){return evt.hasOwnProperty(\"element\")?counter.updateCounter($(evt.element).data(\"id\")):evt.hasOwnProperty(\"currentTarget\")?counter.updateCounter($(evt.currentTarget).data(\"id\")):void 0}),counter.countTextarea=_.throttle(function(evt){counter.updateCounter(evt.currentTarget.id)},400),$(document).on(\"cmb_init\",counter.initAll).on(\"tinymce-editor-init\",counter.initWysiwyg).on(\"cmb2_add_row\",counter.addRow).on(\"cmb2_remove_row\",counter.cleanCounters).on(\"input keyup\",\".cmb2-count-chars\",counter.countTextarea)}(window,document,jQuery,window.CMB2,window.CMB2.charcounter);"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php // Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/init.php","ext":"php","size":5433,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The initation loader for CMB2, and the main plugin file.\n *\n * @category     WordPress_Plugin\n * @package      CMB2\n * @author       CMB2 team\n * @license      GPL-2.0+\n * @link         https://cmb2.io\n *\n * Plugin Name:  CMB2\n * Plugin URI:   https://github.com/CMB2/CMB2\n * Description:  CMB2 will create metaboxes and forms with custom fields that will blow your mind.\n * Author:       CMB2 team\n * Author URI:   https://cmb2.io\n * Contributors: Justin Sternberg (@jtsternberg / dsgnwrks.pro)\n *               WebDevStudios (@webdevstudios / webdevstudios.com)\n *               Human Made (@humanmadeltd / hmn.md)\n *               Jared Atchison (@jaredatch / jaredatchison.com)\n *               Bill Erickson (@billerickson / billerickson.net)\n *               Andrew Norcross (@norcross / andrewnorcross.com)\n *\n * Version:      2.11.0\n *\n * Text Domain:  cmb2\n * Domain Path:  languages\n *\n *\n * Released under the GPL license\n * http://www.opensource.org/licenses/gpl-license.php\n *\n * This is an add-on for WordPress\n * https://wordpress.org/\n *\n * **********************************************************************\n * This program is free software; you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 2 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n * **********************************************************************\n */\n\n/**\n * *********************************************************************\n *               You should not edit the code below\n *               (or any code in the included files)\n *               or things might explode!\n * ***********************************************************************\n */\n\nif ( ! class_exists( 'CMB2_Bootstrap_2110', false ) ) {\n\n\t/**\n\t * Handles checking for and loading the newest version of CMB2\n\t *\n\t * @since  2.0.0\n\t *\n\t * @category  WordPress_Plugin\n\t * @package   CMB2\n\t * @author    CMB2 team\n\t * @license   GPL-2.0+\n\t * @link      https://cmb2.io\n\t */\n\tclass CMB2_Bootstrap_2110 {\n\n\t\t/**\n\t\t * Current version number\n\t\t *\n\t\t * @var   string\n\t\t * @since 1.0.0\n\t\t */\n\t\tconst VERSION = '2.11.0';\n\n\t\t/**\n\t\t * Current version hook priority.\n\t\t * Will decrement with each release\n\t\t *\n\t\t * @var   int\n\t\t * @since 2.0.0\n\t\t */\n\t\tconst PRIORITY = 9957;\n\n\t\t/**\n\t\t * Single instance of the CMB2_Bootstrap_2110 object\n\t\t *\n\t\t * @var CMB2_Bootstrap_2110\n\t\t */\n\t\tpublic static $single_instance = null;\n\n\t\t/**\n\t\t * Creates/returns the single instance CMB2_Bootstrap_2110 object\n\t\t *\n\t\t * @since  2.0.0\n\t\t * @return CMB2_Bootstrap_2110 Single instance object\n\t\t */\n\t\tpublic static function initiate() {\n\t\t\tif ( null === self::$single_instance ) {\n\t\t\t\tself::$single_instance = new self();\n\t\t\t}\n\t\t\treturn self::$single_instance;\n\t\t}\n\n\t\t/**\n\t\t * Starts the version checking process.\n\t\t * Creates CMB2_LOADED definition for early detection by other scripts\n\t\t *\n\t\t * Hooks CMB2 inclusion to the init hook on a high priority which decrements\n\t\t * (increasing the priority) with each version release.\n\t\t *\n\t\t * @since 2.0.0\n\t\t */\n\t\tprivate function __construct() {\n\t\t\t/**\n\t\t\t * A constant you can use to check if CMB2 is loaded\n\t\t\t * for your plugins/themes with CMB2 dependency\n\t\t\t */\n\t\t\tif ( ! defined( 'CMB2_LOADED' ) ) {\n\t\t\t\tdefine( 'CMB2_LOADED', self::PRIORITY );\n\t\t\t}\n\n\t\t\tif ( ! function_exists( 'add_action' ) ) {\n\t\t\t\t// We are running outside of the context of WordPress.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tadd_action( 'init', array( $this, 'include_cmb' ), self::PRIORITY );\n\t\t}\n\n\t\t/**\n\t\t * A final check if CMB2 exists before kicking off our CMB2 loading.\n\t\t * CMB2_VERSION and CMB2_DIR constants are set at this point.\n\t\t *\n\t\t * @since  2.0.0\n\t\t */\n\t\tpublic function include_cmb() {\n\t\t\tif ( class_exists( 'CMB2', false ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! defined( 'CMB2_VERSION' ) ) {\n\t\t\t\tdefine( 'CMB2_VERSION', self::VERSION );\n\t\t\t}\n\n\t\t\tif ( ! defined( 'CMB2_DIR' ) ) {\n\t\t\t\tdefine( 'CMB2_DIR', trailingslashit( dirname( __FILE__ ) ) );\n\t\t\t}\n\n\t\t\t$this->l10ni18n();\n\n\t\t\t// Include helper functions.\n\t\t\trequire_once CMB2_DIR . 'includes/CMB2_Base.php';\n\t\t\trequire_once CMB2_DIR . 'includes/CMB2.php';\n\t\t\trequire_once CMB2_DIR . 'includes/helper-functions.php';\n\n\t\t\t// Now kick off the class autoloader.\n\t\t\tspl_autoload_register( 'cmb2_autoload_classes' );\n\n\t\t\t// Kick the whole thing off.\n\t\t\trequire_once( cmb2_dir( 'bootstrap.php' ) );\n\t\t\tcmb2_bootstrap();\n\t\t}\n\n\t\t/**\n\t\t * Registers CMB2 text domain path\n\t\t *\n\t\t * @since  2.0.0\n\t\t */\n\t\tpublic function l10ni18n() {\n\n\t\t\t$loaded = load_plugin_textdomain( 'cmb2', false, '/languages/' );\n\n\t\t\tif ( ! $loaded ) {\n\t\t\t\t$loaded = load_muplugin_textdomain( 'cmb2', '/languages/' );\n\t\t\t}\n\n\t\t\tif ( ! $loaded ) {\n\t\t\t\t$loaded = load_theme_textdomain( 'cmb2', get_stylesheet_directory() . '/languages/' );\n\t\t\t}\n\n\t\t\tif ( ! $loaded ) {\n\t\t\t\t$locale = apply_filters( 'plugin_locale', function_exists( 'determine_locale' ) ? determine_locale() : get_locale(), 'cmb2' );\n\t\t\t\t$mofile = dirname( __FILE__ ) . '/languages/cmb2-' . $locale . '.mo';\n\t\t\t\tload_textdomain( 'cmb2', $mofile );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Make it so...\n\tCMB2_Bootstrap_2110::initiate();\n\n}// End if().\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/css/cmb2-rtl.css","ext":"css","size":51342,"mtime":1757324689,"type":"text","content":"/*!\n * CMB2 - v2.11.0 - 2024-04-02\n * https://cmb2.io\n * Copyright (c) 2024\n * Licensed GPLv2+\n */\n\n@charset \"UTF-8\";\n/*--------------------------------------------------------------\n * Main Wrap\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_main_wrap.scss */\n.cmb2-wrap {\n  margin: 0;\n}\n/* line 8, sass/partials/_main_wrap.scss */\n.cmb2-wrap input,\n.cmb2-wrap textarea {\n  max-width: 100%;\n}\n/* line 15, sass/partials/_main_wrap.scss */\n.cmb2-wrap input[type=\"text\"].cmb2-oembed {\n  width: 100%;\n}\n/* line 20, sass/partials/_main_wrap.scss */\n.cmb2-wrap textarea {\n  width: 500px;\n  padding: 8px;\n}\n/* line 24, sass/partials/_main_wrap.scss */\n.cmb2-wrap textarea.cmb2-textarea-code {\n  font-family: \"Courier 10 Pitch\", Courier, monospace;\n  line-height: 16px;\n}\n/* line 32, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-text-small, .cmb2-wrap input.cmb2-timepicker {\n  width: 100px;\n}\n/* line 38, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-text-money {\n  width: 90px;\n}\n/* line 43, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-text-medium {\n  width: 230px;\n}\n/* line 48, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-upload-file {\n  width: 65%;\n}\n/* line 52, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.ed_button {\n  padding: 2px 4px;\n}\n/* line 57, sass/partials/_main_wrap.scss */\n.cmb2-wrap input:not([type=\"hidden\"]) + input,\n.cmb2-wrap input:not([type=\"hidden\"]) + .button-secondary,\n.cmb2-wrap input:not([type=\"hidden\"]) + select {\n  margin-right: 20px;\n}\n/* line 65, sass/partials/_main_wrap.scss */\n.cmb2-wrap ul {\n  margin: 0;\n}\n/* line 69, sass/partials/_main_wrap.scss */\n.cmb2-wrap li {\n  font-size: 14px;\n  line-height: 16px;\n  margin: 1px 0 5px 0;\n}\n/* line 80, sass/partials/_main_wrap.scss */\n.cmb2-wrap select {\n  font-size: 14px;\n  margin-top: 3px;\n}\n/* line 85, sass/partials/_main_wrap.scss */\n.cmb2-wrap input:focus,\n.cmb2-wrap textarea:focus {\n  background: #fffff8;\n}\n/* line 90, sass/partials/_main_wrap.scss */\n.cmb2-wrap input[type=\"radio\"] {\n  margin: 0 0 0 5px;\n  padding: 0;\n}\n/* line 95, sass/partials/_main_wrap.scss */\n.cmb2-wrap input[type=\"checkbox\"] {\n  margin: 0 0 0 5px;\n  padding: 0;\n}\n/* line 100, sass/partials/_main_wrap.scss */\n.cmb2-wrap button,\n.cmb2-wrap .button-secondary {\n  white-space: nowrap;\n}\n/* line 105, sass/partials/_main_wrap.scss */\n.cmb2-wrap .mceLayout {\n  border: 1px solid #e9e9e9 !important;\n}\n/* line 109, sass/partials/_main_wrap.scss */\n.cmb2-wrap .mceIframeContainer {\n  background: #ffffff;\n}\n/* line 113, sass/partials/_main_wrap.scss */\n.cmb2-wrap .meta_mce {\n  width: 97%;\n}\n/* line 116, sass/partials/_main_wrap.scss */\n.cmb2-wrap .meta_mce textarea {\n  width: 100%;\n}\n/* line 122, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-multicheck-toggle {\n  margin-top: -1em;\n}\n/* line 127, sass/partials/_main_wrap.scss */\n.cmb2-wrap .wp-picker-clear.button,\n.cmb2-wrap .wp-picker-default.button {\n  margin-right: 6px;\n  padding: 2px 8px;\n}\n/* line 133, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-row {\n  margin: 0;\n}\n/* line 136, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-row:after {\n  content: '';\n  clear: both;\n  display: block;\n  width: 100%;\n}\n/* line 143, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description {\n  padding-top: 0;\n  padding-bottom: 1em;\n}\n\n/* line 154, sass/partials/_main_wrap.scss */\nbody.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n  margin: .1875rem;\n}\n@media screen and (max-width: 782px) {\n  /* line 154, sass/partials/_main_wrap.scss */\n  body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n    margin: .4375rem;\n  }\n}\n\n/* line 162, sass/partials/_main_wrap.scss */\n.cmb2-metabox {\n  clear: both;\n  margin: 0;\n}\n/* line 168, sass/partials/_main_wrap.scss */\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-th,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-th {\n  border: 0;\n}\n\n/* line 175, sass/partials/_main_wrap.scss */\n.cmb-add-row {\n  margin: 1.8em 0 0;\n}\n\n/* line 179, sass/partials/_main_wrap.scss */\n.cmb-nested .cmb-td,\n.cmb-repeatable-group .cmb-th,\n.cmb-repeatable-group:first-of-type {\n  border: 0;\n}\n\n/* line 185, sass/partials/_main_wrap.scss */\n.cmb-row:last-of-type,\n.cmb2-wrap .cmb-row:last-of-type,\n.cmb-repeatable-group:last-of-type {\n  border-bottom: 0;\n}\n\n/* line 191, sass/partials/_main_wrap.scss */\n.cmb-repeatable-grouping {\n  border: 1px solid #e9e9e9;\n  padding: 0 1em;\n}\n/* line 195, sass/partials/_main_wrap.scss */\n.cmb-repeatable-grouping.cmb-row {\n  margin: 0 0 0.8em;\n}\n\n/* line 203, sass/partials/_main_wrap.scss */\n.cmb-th {\n  color: #222222;\n  float: right;\n  font-weight: 600;\n  padding: 20px 0 20px 10px;\n  vertical-align: top;\n  width: 200px;\n}\n@media (max-width: 450px) {\n  /* line 203, sass/partials/_main_wrap.scss */\n  .cmb-th {\n    font-size: 1.2em;\n    display: block;\n    float: none;\n    padding-bottom: 1em;\n    text-align: right;\n    width: 100%;\n  }\n  /* line 27, sass/partials/_mixins.scss */\n  .cmb-th label {\n    display: block;\n    margin-top: 0;\n    margin-bottom: 0.5em;\n  }\n}\n\n/* line 216, sass/partials/_main_wrap.scss */\n.cmb-td {\n  line-height: 1.3;\n  max-width: 100%;\n  padding: 15px 10px;\n  vertical-align: middle;\n}\n\n/* line 225, sass/partials/_main_wrap.scss */\n.cmb-type-title .cmb-td {\n  padding: 0;\n}\n\n/* line 230, sass/partials/_main_wrap.scss */\n.cmb-th label {\n  display: block;\n  padding: 5px 0;\n}\n\n/* line 235, sass/partials/_main_wrap.scss */\n.cmb-th + .cmb-td {\n  float: right;\n}\n\n/* line 239, sass/partials/_main_wrap.scss */\n.cmb-td .cmb-td {\n  padding-bottom: 1em;\n}\n\n/* line 243, sass/partials/_main_wrap.scss */\n.cmb-remove-row {\n  text-align: left;\n}\n\n/* line 247, sass/partials/_main_wrap.scss */\n.empty-row.hidden {\n  display: none;\n}\n\n/* line 252, sass/partials/_main_wrap.scss */\n.cmb-repeat-table {\n  background-color: #fafafa;\n  border: 1px solid #e1e1e1;\n}\n/* line 256, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row {\n  position: relative;\n  counter-increment: el;\n  margin: 0;\n  padding: 10px 50px 10px 10px;\n  border-bottom: none !important;\n}\n/* line 264, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row + .cmb-repeat-row {\n  border-top: solid 1px #e9e9e9;\n}\n/* line 268, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper {\n  outline: dashed 2px #e9e9e9 !important;\n}\n/* line 272, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row:before {\n  content: counter(el);\n  display: block;\n  top: 0;\n  right: 0;\n  position: absolute;\n  width: 35px;\n  height: 100%;\n  line-height: 35px;\n  cursor: move;\n  color: #757575;\n  text-align: center;\n  border-left: solid 1px #e9e9e9;\n}\n/* line 289, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td {\n  margin: 0;\n  padding: 0;\n}\n/* line 296, sass/partials/_main_wrap.scss */\n.cmb-repeat-table + .cmb-add-row {\n  margin: 0;\n}\n/* line 299, sass/partials/_main_wrap.scss */\n.cmb-repeat-table + .cmb-add-row:before {\n  content: '';\n  width: 1px;\n  height: 1.6em;\n  display: block;\n  margin-right: 17px;\n  background-color: gainsboro;\n}\n/* line 309, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-remove-row {\n  top: 7px;\n  left: 7px;\n  position: absolute;\n  width: auto;\n  margin-right: 0;\n  padding: 0 !important;\n  display: none;\n}\n/* line 320, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button {\n  font-size: 20px;\n  text-indent: -1000px;\n  overflow: hidden;\n  position: relative;\n  height: auto;\n  line-height: 1;\n  padding: 0 10px 0;\n}\n/* line 331, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button:before {\n  content: \"\";\n  font-family: 'Dashicons';\n  speak: none;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n  text-indent: 0;\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  line-height: 1.3;\n}\n/* line 338, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row {\n  display: block;\n}\n\n/* line 346, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-th {\n  padding: 5px;\n}\n/* line 350, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-title {\n  background-color: #e9e9e9;\n  padding: 8px 2.2em 8px 12px;\n  margin: 0 -1em;\n  min-height: 1.5em;\n  font-size: 14px;\n  line-height: 1.4;\n}\n/* line 358, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-title h4 {\n  border: 0;\n  margin: 0;\n  font-size: 1.2em;\n  font-weight: 500;\n  padding: 0.5em 0.75em;\n}\n/* line 366, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-title .cmb-th {\n  display: block;\n  width: 100%;\n}\n/* line 372, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-description .cmb-th {\n  font-size: 1.2em;\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: right;\n  width: 100%;\n}\n/* line 27, sass/partials/_mixins.scss */\n.cmb-repeatable-group .cmb-group-description .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n/* line 376, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-shift-rows {\n  margin-left: 1em;\n}\n/* line 379, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2 {\n  margin-top: .15em;\n}\n/* line 383, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2 {\n  margin-top: .2em;\n}\n/* line 388, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb2-upload-button {\n  float: left;\n}\n\n/* line 394, sass/partials/_main_wrap.scss */\np.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n  margin: 0;\n  padding-top: .5em;\n}\n\n/* line 401, sass/partials/_main_wrap.scss */\nspan.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n}\n\n/* line 406, sass/partials/_main_wrap.scss */\n.cmb2-metabox-title {\n  margin: 0 0 5px 0;\n  padding: 5px 0 0 0;\n  font-size: 14px;\n}\n\n/* line 412, sass/partials/_main_wrap.scss */\n.cmb-inline ul {\n  padding: 4px 0 0 0;\n}\n\n/* line 416, sass/partials/_main_wrap.scss */\n.cmb-inline li {\n  display: inline-block;\n  padding-left: 18px;\n}\n\n/* line 421, sass/partials/_main_wrap.scss */\n.cmb-type-textarea-code pre {\n  margin: 0;\n}\n\n/* line 427, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status {\n  clear: none;\n  display: inline-block;\n  vertical-align: middle;\n  margin-left: 10px;\n  width: auto;\n}\n/* line 434, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status img {\n  max-width: 350px;\n  height: auto;\n}\n/* line 440, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status img,\n.cmb2-media-status .embed-status {\n  background: #eee;\n  border: 5px solid #ffffff;\n  outline: 1px solid #e9e9e9;\n  box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.3), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  background-image: linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0), linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0);\n  background-position: 0 0, 10px 10px;\n  background-size: 20px 20px;\n  border-radius: 2px;\n  -moz-border-radius: 2px;\n  margin: 15px 0 0 0;\n}\n/* line 454, sass/partials/_main_wrap.scss */\n.cmb2-media-status .embed-status {\n  float: right;\n  max-width: 800px;\n}\n/* line 459, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status, .cmb2-media-status .embed-status {\n  position: relative;\n}\n/* line 462, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status .cmb2-remove-file-button, .cmb2-media-status .embed-status .cmb2-remove-file-button {\n  background: url(../images/ico-delete.png);\n  height: 16px;\n  right: -5px;\n  position: absolute;\n  text-indent: -9999px;\n  top: -5px;\n  width: 16px;\n}\n/* line 476, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status .cmb2-remove-file-button {\n  top: 10px;\n}\n/* line 481, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status img, .cmb2-media-status .file-status > span {\n  cursor: pointer;\n}\n/* line 486, sass/partials/_main_wrap.scss */\n.cmb2-media-status.cmb-attach-list .img-status img, .cmb2-media-status.cmb-attach-list .file-status > span {\n  cursor: move;\n}\n\n/* line 493, sass/partials/_main_wrap.scss */\n.cmb-type-file-list .cmb2-media-status .img-status {\n  clear: none;\n  vertical-align: middle;\n  width: auto;\n  margin-left: 10px;\n  margin-bottom: 10px;\n  margin-top: 0;\n}\n\n/* line 502, sass/partials/_main_wrap.scss */\n.cmb-attach-list li {\n  clear: both;\n  display: inline-block;\n  width: 100%;\n  margin-top: 5px;\n  margin-bottom: 10px;\n}\n/* line 508, sass/partials/_main_wrap.scss */\n.cmb-attach-list li img {\n  float: right;\n  margin-left: 10px;\n}\n\n/* line 514, sass/partials/_main_wrap.scss */\n.cmb2-remove-wrapper {\n  margin: 0;\n}\n\n/* line 518, sass/partials/_main_wrap.scss */\n.child-cmb2 .cmb-th {\n  text-align: right;\n}\n\n/* line 522, sass/partials/_main_wrap.scss */\n.cmb2-indented-hierarchy {\n  padding-right: 1.5em;\n}\n\n@media (max-width: 450px) {\n  /* line 527, sass/partials/_main_wrap.scss */\n  .cmb-th,\n  .cmb-td,\n  .cmb-th + .cmb-td {\n    display: block;\n    float: none;\n    width: 100%;\n  }\n}\n/*--------------------------------------------------------------\n * Post Metaboxes\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_post_metaboxes.scss */\n#poststuff .cmb-group-title {\n  margin-right: -1em;\n  margin-left: -1em;\n  min-height: 1.5em;\n}\n\n/* line 11, sass/partials/_post_metaboxes.scss */\n#poststuff .repeatable .cmb-group-title {\n  padding-right: 2.2em;\n}\n\n/* line 17, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb2-wrap, .cmb-type-group .cmb2-wrap {\n  margin: 0;\n}\n/* line 20, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb2-wrap > .cmb-field-list > .cmb-row, .cmb-type-group .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.8em 0;\n}\n/* line 26, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed, .cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed {\n  width: 100%;\n}\n/* line 32, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-row, .cmb-type-group .cmb-row {\n  padding: 0 0 1.8em;\n  margin: 0 0 0.8em;\n}\n/* line 36, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-row .cmbhandle, .cmb-type-group .cmb-row .cmbhandle {\n  left: -1em;\n  position: relative;\n  color: #222222;\n}\n/* line 43, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-repeatable-grouping, .cmb-type-group .cmb-repeatable-grouping {\n  padding: 0 1em;\n  max-width: 100%;\n  min-width: 1px !important;\n}\n/* line 49, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-repeatable-group > .cmb-row, .cmb-type-group .cmb-repeatable-group > .cmb-row {\n  padding-bottom: 0;\n}\n/* line 53, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-th, .cmb-type-group .cmb-th {\n  width: 18%;\n  padding: 0 0 0 2%;\n}\n/* line 59, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-td, .cmb-type-group .cmb-td {\n  margin-bottom: 0;\n  padding: 0;\n  line-height: 1.3;\n}\n/* line 65, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-th + .cmb-td, .cmb-type-group .cmb-th + .cmb-td {\n  width: 80%;\n  float: left;\n}\n/* line 70, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-row:not(:last-of-type),\n.cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n.cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n  border-bottom: 1px solid #e9e9e9;\n}\n@media (max-width: 450px) {\n  /* line 70, sass/partials/_post_metaboxes.scss */\n  .cmb2-postbox .cmb-row:not(:last-of-type),\n  .cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n  .cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n    border-bottom: 0;\n  }\n}\n/* line 79, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-repeat-group-field,\n.cmb2-postbox .cmb-remove-field-row, .cmb-type-group .cmb-repeat-group-field,\n.cmb-type-group .cmb-remove-field-row {\n  padding-top: 1.8em;\n}\n/* line 85, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .button-secondary .dashicons, .cmb-type-group .button-secondary .dashicons {\n  line-height: 1.3;\n}\n/* line 89, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .button-secondary.move-up .dashicons, .cmb2-postbox .button-secondary.move-down .dashicons, .cmb-type-group .button-secondary.move-up .dashicons, .cmb-type-group .button-secondary.move-down .dashicons {\n  line-height: 1.1;\n}\n/* line 94, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons, .cmb-type-group .button-secondary.cmb-add-group-row .dashicons {\n  line-height: 1.5;\n}\n\n/*--------------------------------------------------------------\n * Context Metaboxes\n--------------------------------------------------------------*/\n/* Metabox collapse arrow indicators */\n/* line 8, sass/partials/_context_metaboxes.scss */\n.js .cmb2-postbox.context-box .handlediv {\n  text-align: center;\n}\n/* line 13, sass/partials/_context_metaboxes.scss */\n.js .cmb2-postbox.context-box .toggle-indicator:before {\n  content: \"\\f142\";\n  display: inline-block;\n  font: normal 20px/1 dashicons;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n/* line 26, sass/partials/_context_metaboxes.scss */\n.js .cmb2-postbox.context-box.closed .toggle-indicator:before {\n  content: \"\\f140\";\n}\n\n/* line 34, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box {\n  margin-bottom: 10px;\n}\n/* line 38, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-before_permalink-box {\n  margin-top: 10px;\n}\n/* line 42, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-after_title-box {\n  margin-top: 10px;\n}\n/* line 46, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-after_editor-box {\n  margin-top: 20px;\n  margin-bottom: 0;\n}\n/* line 51, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-form_top-box {\n  margin-top: 10px;\n}\n/* line 55, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-form_top-box .hndle {\n  font-size: 14px;\n  padding: 8px 12px;\n  margin: 0;\n  line-height: 1.4;\n}\n/* line 63, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box .hndle {\n  cursor: auto;\n}\n\n/* line 68, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap {\n  margin-top: 10px;\n}\n/* line 72, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap.cmb2-context-wrap-form_top {\n  margin-left: 300px;\n  width: auto;\n}\n/* line 79, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox {\n  padding: 10px;\n}\n/* line 84, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-th {\n  padding: 0 0 0 2%;\n  width: 18%;\n}\n/* line 89, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-td {\n  width: 80%;\n  padding: 0;\n}\n/* line 94, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-row {\n  margin-bottom: 10px;\n}\n/* line 97, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-row:last-of-type {\n  margin-bottom: 0;\n}\n\n/* one column on the post write/edit screen */\n@media only screen and (max-width: 850px) {\n  /* line 107, sass/partials/_context_metaboxes.scss */\n  .cmb2-context-wrap.cmb2-context-wrap-form_top {\n    margin-left: 0;\n  }\n}\n/*--------------------------------------------------------------\n * Options page\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_options-page.scss */\n.cmb2-options-page {\n  max-width: 1200px;\n}\n/* line 8, sass/partials/_options-page.scss */\n.cmb2-options-page.wrap > h2 {\n  margin-bottom: 1em;\n}\n/* line 12, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-metabox > .cmb-row {\n  padding: 1em;\n  margin-top: -1px;\n  background: #ffffff;\n  border: 1px solid #e9e9e9;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n/* line 19, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th {\n  padding: 0;\n  font-weight: initial;\n}\n/* line 24, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n  float: none;\n  padding: 0 1em 0 0;\n  margin-right: 200px;\n}\n@media (max-width: 450px) {\n  /* line 24, sass/partials/_options-page.scss */\n  .cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n    padding: 0;\n    margin-right: 0;\n  }\n}\n/* line 37, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-wrap .cmb-type-title {\n  margin-top: 1em;\n  padding: 0.6em 1em;\n  background-color: #fafafa;\n}\n/* line 42, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title {\n  font-size: 12px;\n  margin-top: 0;\n  margin-bottom: 0;\n  text-transform: uppercase;\n}\n/* line 49, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description {\n  padding-top: 0.25em;\n}\n/* line 55, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th {\n  padding: 0 0 0.8em 0;\n}\n/* line 59, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb-repeatable-group .cmb-group-name {\n  font-size: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n/* line 65, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb-repeatable-group .cmb-th > .cmb2-metabox-description {\n  font-weight: 400;\n  padding-bottom: 0 !important;\n}\n\n/*--------------------------------------------------------------\n * New-Term Page\n--------------------------------------------------------------*/\n/* line 6, sass/partials/_new_term.scss */\n#addtag .cmb-th {\n  float: none;\n  width: auto;\n  padding: 20px 0 0;\n}\n/* line 12, sass/partials/_new_term.scss */\n#addtag .cmb-td {\n  padding: 0;\n}\n/* line 16, sass/partials/_new_term.scss */\n#addtag .cmb-th + .cmb-td {\n  float: none;\n}\n/* line 20, sass/partials/_new_term.scss */\n#addtag select {\n  max-width: 100%;\n}\n/* line 24, sass/partials/_new_term.scss */\n#addtag .cmb2-metabox {\n  padding-bottom: 20px;\n}\n/* line 28, sass/partials/_new_term.scss */\n#addtag .cmb-row li label {\n  display: inline;\n}\n\n/*--------------------------------------------------------------\n * Misc.\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_misc.scss */\n#poststuff .cmb-repeatable-group h2 {\n  margin: 0;\n}\n\n/* line 12, sass/partials/_misc.scss */\n.edit-tags-php .cmb2-metabox-title,\n.profile-php .cmb2-metabox-title,\n.user-edit-php .cmb2-metabox-title {\n  font-size: 1.4em;\n}\n\n/* line 18, sass/partials/_misc.scss */\n.cmb2-postbox .cmb-spinner, .cmb2-no-box-wrap .cmb-spinner {\n  float: right;\n  display: none;\n}\n\n/* line 24, sass/partials/_misc.scss */\n.cmb-spinner {\n  display: none;\n}\n/* line 26, sass/partials/_misc.scss */\n.cmb-spinner.is-active {\n  display: block;\n}\n\n/*--------------------------------------------------------------\n * Sidebar Placement Adjustments\n--------------------------------------------------------------*/\n/* line 10, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap > .cmb-field-list > .cmb-row,\n#side-sortables .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.4em 0;\n}\n/* line 16, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker),\n#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker) {\n  width: 100%;\n}\n/* line 20, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input + input:not(.wp-picker-clear), .inner-sidebar .cmb2-wrap input + select,\n#side-sortables .cmb2-wrap input + input:not(.wp-picker-clear),\n#side-sortables .cmb2-wrap input + select {\n  margin-right: 0;\n  margin-top: 1em;\n  display: block;\n}\n/* line 26, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input.cmb2-text-money,\n#side-sortables .cmb2-wrap input.cmb2-text-money {\n  max-width: 70%;\n}\n/* line 28, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description,\n#side-sortables .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description {\n  display: block;\n}\n/* line 34, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap label,\n#side-sortables .cmb2-wrap label {\n  display: block;\n  font-weight: 700;\n  padding: 0 0 5px;\n}\n/* line 42, sass/partials/_sidebar_placements.scss */\n.inner-sidebar textarea,\n#side-sortables textarea {\n  max-width: 99%;\n}\n/* line 46, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-repeatable-group,\n#side-sortables .cmb-repeatable-group {\n  border-bottom: 1px solid #e9e9e9;\n}\n/* line 50, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-type-group > .cmb-td > .cmb-repeatable-group,\n#side-sortables .cmb-type-group > .cmb-td > .cmb-repeatable-group {\n  border-bottom: 0;\n  margin-bottom: -1.4em;\n}\n/* line 55, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-th,\n.inner-sidebar .cmb-td:not(.cmb-remove-row),\n.inner-sidebar .cmb-th + .cmb-td,\n#side-sortables .cmb-th,\n#side-sortables .cmb-td:not(.cmb-remove-row),\n#side-sortables .cmb-th + .cmb-td {\n  width: 100%;\n  display: block;\n  float: none;\n}\n/* line 63, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .closed .inside,\n#side-sortables .closed .inside {\n  display: none;\n}\n/* line 67, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-th,\n#side-sortables .cmb-th {\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: right;\n  width: 100%;\n  padding-right: 0;\n  padding-left: 0;\n}\n/* line 27, sass/partials/_mixins.scss */\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n/* line 14, sass/partials/_mixins.scss */\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  font-size: 14px;\n  line-height: 1.4em;\n}\n/* line 74, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-group-description .cmb-th,\n#side-sortables .cmb-group-description .cmb-th {\n  padding-top: 0;\n}\n/* line 77, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-group-description .cmb2-metabox-description,\n#side-sortables .cmb-group-description .cmb2-metabox-description {\n  padding: 0;\n}\n/* line 84, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-group-title .cmb-th,\n#side-sortables .cmb-group-title .cmb-th {\n  padding: 0;\n}\n/* line 90, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-repeatable-grouping + .cmb-repeatable-grouping,\n#side-sortables .cmb-repeatable-grouping + .cmb-repeatable-grouping {\n  margin-top: 1em;\n}\n/* line 99, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-media-status .img-status img,\n.inner-sidebar .cmb2-media-status .embed-status img,\n#side-sortables .cmb2-media-status .img-status img,\n#side-sortables .cmb2-media-status .embed-status img {\n  max-width: 90%;\n  height: auto;\n}\n/* line 107, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-list label,\n#side-sortables .cmb2-list label {\n  display: inline;\n  font-weight: normal;\n}\n/* line 112, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-metabox-description,\n#side-sortables .cmb2-metabox-description {\n  display: block;\n  padding: 7px 0 0;\n}\n/* line 119, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-type-checkbox .cmb-td label,\n.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description,\n#side-sortables .cmb-type-checkbox .cmb-td label,\n#side-sortables .cmb-type-checkbox .cmb2-metabox-description {\n  font-weight: normal;\n  display: inline;\n}\n/* line 126, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-row .cmb2-metabox-description,\n#side-sortables .cmb-row .cmb2-metabox-description {\n  padding-bottom: 1.8em;\n}\n/* line 130, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-metabox-title,\n#side-sortables .cmb2-metabox-title {\n  font-size: 1.2em;\n  font-style: italic;\n}\n/* line 135, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-remove-row,\n#side-sortables .cmb-remove-row {\n  clear: both;\n  padding-top: 12px;\n  padding-bottom: 0;\n}\n/* line 141, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-upload-button,\n#side-sortables .cmb2-upload-button {\n  clear: both;\n  margin-top: 12px;\n}\n\n/*--------------------------------------------------------------\n * Collapsible UI\n--------------------------------------------------------------*/\n/* line 6, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox .cmbhandle {\n  color: #757575;\n  float: left;\n  width: 27px;\n  height: 30px;\n  cursor: pointer;\n  left: -1em;\n  position: relative;\n}\n/* line 14, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox .cmbhandle:before {\n  content: '\\f142';\n  left: 12px;\n  font: normal 20px/1 'dashicons';\n  speak: none;\n  display: inline-block;\n  padding: 8px 10px;\n  top: 0;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n/* line 31, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox .postbox.closed .cmbhandle:before {\n  content: '\\f140';\n}\n/* line 37, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row {\n  -webkit-appearance: none !important;\n  background: none !important;\n  border: none !important;\n  position: absolute;\n  right: 0;\n  top: .5em;\n  line-height: 1em;\n  padding: 2px 6px 3px;\n  opacity: .5;\n}\n/* line 47, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]) {\n  cursor: pointer;\n  color: #a00;\n  opacity: 1;\n}\n/* line 51, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover {\n  color: #f00;\n}\n\n/*\n * jQuery UI CSS Framework 1.8.16\n *\n * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * http://docs.jquery.com/UI/Theming/API\n *\n * WordPress Styles adopted from \"jQuery UI Datepicker CSS for WordPress\"\n * https://github.com/stuttter/wp-datepicker-styling\n *\n */\n/* line 15, sass/partials/_jquery_ui.scss */\n* html .cmb2-element.ui-helper-clearfix {\n  height: 1%;\n}\n\n/* line 24, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker, .cmb2-element .ui-datepicker {\n  padding: 0;\n  margin: 0;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-top: none;\n  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  min-width: 17em;\n  width: auto;\n  /* Default Color Scheme */\n}\n/* line 38, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker *, .cmb2-element .ui-datepicker * {\n  padding: 0;\n  font-family: \"Open Sans\", sans-serif;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n}\n/* line 46, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker table, .cmb2-element .ui-datepicker table {\n  font-size: 13px;\n  margin: 0;\n  border: none;\n  border-collapse: collapse;\n}\n/* line 53, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background-image: none;\n  border: none;\n  color: #fff;\n  font-weight: normal;\n}\n/* line 61, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: transparent;\n  border-color: transparent;\n  cursor: pointer;\n}\n/* line 67, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-title, .cmb2-element .ui-datepicker .ui-datepicker-title {\n  margin: 0;\n  padding: 10px 0;\n  color: #fff;\n  font-size: 14px;\n  line-height: 14px;\n  text-align: center;\n}\n/* line 75, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-title select, .cmb2-element .ui-datepicker .ui-datepicker-title select {\n  margin-top: -8px;\n  margin-bottom: -8px;\n}\n/* line 81, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-next {\n  position: relative;\n  top: 0;\n  height: 34px;\n  width: 34px;\n}\n/* line 89, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next, .cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next {\n  border: none;\n}\n/* line 94, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-prev-hover {\n  right: 0;\n}\n/* line 99, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover, .cmb2-element .ui-datepicker .ui-datepicker-next,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover {\n  left: 0;\n}\n/* line 104, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next span,\n.cmb2-element.ui-datepicker .ui-datepicker-prev span, .cmb2-element .ui-datepicker .ui-datepicker-next span,\n.cmb2-element .ui-datepicker .ui-datepicker-prev span {\n  display: none;\n}\n/* line 109, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev, .cmb2-element .ui-datepicker .ui-datepicker-prev {\n  float: right;\n}\n/* line 113, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-next {\n  float: left;\n}\n/* line 117, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  font: normal 20px/34px 'dashicons';\n  padding-right: 7px;\n  color: #fff;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: 34px;\n  height: 34px;\n}\n/* line 129, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before {\n  content: '\\f341';\n}\n/* line 133, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  content: '\\f345';\n}\n/* line 137, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before, .cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before {\n  opacity: 0.7;\n}\n/* line 142, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker select.ui-datepicker-month,\n.cmb2-element.ui-datepicker select.ui-datepicker-year, .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.cmb2-element .ui-datepicker select.ui-datepicker-year {\n  width: 33%;\n  background: transparent;\n  border-color: transparent;\n  box-shadow: none;\n  color: #fff;\n}\n/* line 149, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker select.ui-datepicker-month option,\n.cmb2-element.ui-datepicker select.ui-datepicker-year option, .cmb2-element .ui-datepicker select.ui-datepicker-month option,\n.cmb2-element .ui-datepicker select.ui-datepicker-year option {\n  color: #333;\n}\n/* line 154, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  color: #fff;\n  font-weight: 600;\n}\n/* line 157, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker thead th, .cmb2-element .ui-datepicker thead th {\n  font-weight: normal;\n}\n/* line 162, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker th, .cmb2-element .ui-datepicker th {\n  padding: 10px;\n}\n/* line 166, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td, .cmb2-element .ui-datepicker td {\n  padding: 0;\n  border: 1px solid #f4f4f4;\n}\n/* line 171, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-other-month, .cmb2-element .ui-datepicker td.ui-datepicker-other-month {\n  border: transparent;\n}\n/* line 175, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end, .cmb2-element .ui-datepicker td.ui-datepicker-week-end {\n  background-color: #f4f4f4;\n  border: 1px solid #f4f4f4;\n}\n/* line 178, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today {\n  -webkit-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  -moz-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n}\n/* line 185, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background-color: #f0f0c0;\n}\n/* line 189, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-current-day, .cmb2-element .ui-datepicker td.ui-datepicker-current-day {\n  background: #bbdd88;\n}\n/* line 193, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td .ui-state-default, .cmb2-element .ui-datepicker td .ui-state-default {\n  background: transparent;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  width: auto;\n  display: block;\n  padding: 5px 10px;\n  font-weight: normal;\n  color: #444;\n}\n/* line 205, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default, .cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default {\n  opacity: 0.5;\n}\n/* line 210, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n/* line 215, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n/* line 219, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td .ui-state-hover, .cmb2-element.ui-datepicker td .ui-state-active, .cmb2-element .ui-datepicker td .ui-state-hover, .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #0073aa;\n  color: #fff;\n}\n/* line 224, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div, .cmb2-element .ui-datepicker .ui-timepicker-div {\n  font-size: 14px;\n}\n/* line 226, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl, .cmb2-element .ui-datepicker .ui-timepicker-div dl {\n  text-align: right;\n  padding: 0 .6em;\n}\n/* line 229, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dt, .cmb2-element .ui-datepicker .ui-timepicker-div dl dt {\n  float: right;\n  clear: right;\n  padding: 0 5px 0 0;\n}\n/* line 234, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd {\n  margin: 0 40% 10px 10px;\n}\n/* line 236, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd select {\n  width: 100%;\n}\n/* line 242, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane {\n  padding: .6em;\n  text-align: right;\n}\n/* line 246, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary {\n  padding: 0 10px 1px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n  margin: 0 .4em .4em .6em;\n}\n\n/* line 260, sass/partials/_jquery_ui.scss */\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n/* line 265, sass/partials/_jquery_ui.scss */\n.admin-color-fresh .cmb2-element.ui-datepicker thead, .admin-color-fresh .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n/* line 269, sass/partials/_jquery_ui.scss */\n.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #0073aa;\n  color: #fff;\n}\n\n/* line 277, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #52accc;\n}\n/* line 282, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker thead, .admin-color-blue .cmb2-element .ui-datepicker thead {\n  background: #4796b3;\n}\n/* line 291, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #096484;\n  color: #fff;\n}\n/* line 296, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n/* line 305, sass/partials/_jquery_ui.scss */\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #59524c;\n}\n/* line 310, sass/partials/_jquery_ui.scss */\n.admin-color-coffee .cmb2-element.ui-datepicker thead, .admin-color-coffee .cmb2-element .ui-datepicker thead {\n  background: #46403c;\n}\n/* line 314, sass/partials/_jquery_ui.scss */\n.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #c7a589;\n  color: #fff;\n}\n\n/* line 322, sass/partials/_jquery_ui.scss */\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #523f6d;\n}\n/* line 327, sass/partials/_jquery_ui.scss */\n.admin-color-ectoplasm .cmb2-element.ui-datepicker thead, .admin-color-ectoplasm .cmb2-element .ui-datepicker thead {\n  background: #413256;\n}\n/* line 331, sass/partials/_jquery_ui.scss */\n.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #a3b745;\n  color: #fff;\n}\n\n/* line 339, sass/partials/_jquery_ui.scss */\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #363b3f;\n}\n/* line 344, sass/partials/_jquery_ui.scss */\n.admin-color-midnight .cmb2-element.ui-datepicker thead, .admin-color-midnight .cmb2-element .ui-datepicker thead {\n  background: #26292c;\n}\n/* line 348, sass/partials/_jquery_ui.scss */\n.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #e14d43;\n  color: #fff;\n}\n\n/* line 356, sass/partials/_jquery_ui.scss */\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #738e96;\n}\n/* line 361, sass/partials/_jquery_ui.scss */\n.admin-color-ocean .cmb2-element.ui-datepicker thead, .admin-color-ocean .cmb2-element .ui-datepicker thead {\n  background: #627c83;\n}\n/* line 365, sass/partials/_jquery_ui.scss */\n.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #9ebaa0;\n  color: #fff;\n}\n\n/* line 373, sass/partials/_jquery_ui.scss */\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: #cf4944;\n}\n/* line 379, sass/partials/_jquery_ui.scss */\n.admin-color-sunrise .cmb2-element.ui-datepicker th, .admin-color-sunrise .cmb2-element .ui-datepicker th {\n  border-color: #be3631;\n  background: #be3631;\n}\n/* line 384, sass/partials/_jquery_ui.scss */\n.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #dd823b;\n  color: #fff;\n}\n\n/* line 392, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #e5e5e5;\n}\n/* line 397, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year, .admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year {\n  color: #555;\n}\n/* line 402, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker thead, .admin-color-light .cmb2-element .ui-datepicker thead {\n  background: #888;\n}\n/* line 406, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before, .admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  color: #555;\n}\n/* line 414, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #ccc;\n}\n/* line 418, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n/* line 426, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #56b274;\n}\n/* line 431, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead {\n  background: #36533f;\n}\n/* line 435, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #446950;\n  color: #fff;\n}\n\n/* line 443, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #4ca26a;\n}\n/* line 448, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-mint .cmb2-element.ui-datepicker thead, .admin-color-bbp-mint .cmb2-element .ui-datepicker thead {\n  background: #4f6d59;\n}\n/* line 452, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #5fb37c;\n  color: #fff;\n}\n\n/*--------------------------------------------------------------\n * Character counter\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap {\n  margin: .5em 0 1em;\n}\n/* line 8, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap input[type=\"text\"] {\n  font-size: 12px;\n  width: 25px;\n}\n/* line 14, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=\"text\"] {\n  border-color: #a00 !important;\n}\n/* line 17, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg {\n  display: inline-block;\n}\n\n/* line 23, sass/partials/_char_counter.scss */\n.cmb2-char-max-msg {\n  color: #a00;\n  display: none;\n  font-weight: 600;\n  margin-right: 1em;\n}\n\n/*# sourceMappingURL=cmb2.css.map */\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/css/cmb2.css","ext":"css","size":51330,"mtime":1757324689,"type":"text","content":"/*!\n * CMB2 - v2.11.0 - 2024-04-02\n * https://cmb2.io\n * Copyright (c) 2024\n * Licensed GPLv2+\n */\n\n@charset \"UTF-8\";\n/*--------------------------------------------------------------\n * Main Wrap\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_main_wrap.scss */\n.cmb2-wrap {\n  margin: 0;\n}\n/* line 8, sass/partials/_main_wrap.scss */\n.cmb2-wrap input,\n.cmb2-wrap textarea {\n  max-width: 100%;\n}\n/* line 15, sass/partials/_main_wrap.scss */\n.cmb2-wrap input[type=\"text\"].cmb2-oembed {\n  width: 100%;\n}\n/* line 20, sass/partials/_main_wrap.scss */\n.cmb2-wrap textarea {\n  width: 500px;\n  padding: 8px;\n}\n/* line 24, sass/partials/_main_wrap.scss */\n.cmb2-wrap textarea.cmb2-textarea-code {\n  font-family: \"Courier 10 Pitch\", Courier, monospace;\n  line-height: 16px;\n}\n/* line 32, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-text-small, .cmb2-wrap input.cmb2-timepicker {\n  width: 100px;\n}\n/* line 38, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-text-money {\n  width: 90px;\n}\n/* line 43, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-text-medium {\n  width: 230px;\n}\n/* line 48, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.cmb2-upload-file {\n  width: 65%;\n}\n/* line 52, sass/partials/_main_wrap.scss */\n.cmb2-wrap input.ed_button {\n  padding: 2px 4px;\n}\n/* line 57, sass/partials/_main_wrap.scss */\n.cmb2-wrap input:not([type=\"hidden\"]) + input,\n.cmb2-wrap input:not([type=\"hidden\"]) + .button-secondary,\n.cmb2-wrap input:not([type=\"hidden\"]) + select {\n  margin-left: 20px;\n}\n/* line 65, sass/partials/_main_wrap.scss */\n.cmb2-wrap ul {\n  margin: 0;\n}\n/* line 69, sass/partials/_main_wrap.scss */\n.cmb2-wrap li {\n  font-size: 14px;\n  line-height: 16px;\n  margin: 1px 0 5px 0;\n}\n/* line 80, sass/partials/_main_wrap.scss */\n.cmb2-wrap select {\n  font-size: 14px;\n  margin-top: 3px;\n}\n/* line 85, sass/partials/_main_wrap.scss */\n.cmb2-wrap input:focus,\n.cmb2-wrap textarea:focus {\n  background: #fffff8;\n}\n/* line 90, sass/partials/_main_wrap.scss */\n.cmb2-wrap input[type=\"radio\"] {\n  margin: 0 5px 0 0;\n  padding: 0;\n}\n/* line 95, sass/partials/_main_wrap.scss */\n.cmb2-wrap input[type=\"checkbox\"] {\n  margin: 0 5px 0 0;\n  padding: 0;\n}\n/* line 100, sass/partials/_main_wrap.scss */\n.cmb2-wrap button,\n.cmb2-wrap .button-secondary {\n  white-space: nowrap;\n}\n/* line 105, sass/partials/_main_wrap.scss */\n.cmb2-wrap .mceLayout {\n  border: 1px solid #e9e9e9 !important;\n}\n/* line 109, sass/partials/_main_wrap.scss */\n.cmb2-wrap .mceIframeContainer {\n  background: #ffffff;\n}\n/* line 113, sass/partials/_main_wrap.scss */\n.cmb2-wrap .meta_mce {\n  width: 97%;\n}\n/* line 116, sass/partials/_main_wrap.scss */\n.cmb2-wrap .meta_mce textarea {\n  width: 100%;\n}\n/* line 122, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-multicheck-toggle {\n  margin-top: -1em;\n}\n/* line 127, sass/partials/_main_wrap.scss */\n.cmb2-wrap .wp-picker-clear.button,\n.cmb2-wrap .wp-picker-default.button {\n  margin-left: 6px;\n  padding: 2px 8px;\n}\n/* line 133, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-row {\n  margin: 0;\n}\n/* line 136, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-row:after {\n  content: '';\n  clear: both;\n  display: block;\n  width: 100%;\n}\n/* line 143, sass/partials/_main_wrap.scss */\n.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description {\n  padding-top: 0;\n  padding-bottom: 1em;\n}\n\n/* line 154, sass/partials/_main_wrap.scss */\nbody.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n  margin: .1875rem;\n}\n@media screen and (max-width: 782px) {\n  /* line 154, sass/partials/_main_wrap.scss */\n  body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=\"radio\"]::before {\n    margin: .4375rem;\n  }\n}\n\n/* line 162, sass/partials/_main_wrap.scss */\n.cmb2-metabox {\n  clear: both;\n  margin: 0;\n}\n/* line 168, sass/partials/_main_wrap.scss */\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox > .cmb-row:first-of-type > .cmb-th,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-td,\n.cmb2-metabox .cmb-field-list > .cmb-row:first-of-type > .cmb-th {\n  border: 0;\n}\n\n/* line 175, sass/partials/_main_wrap.scss */\n.cmb-add-row {\n  margin: 1.8em 0 0;\n}\n\n/* line 179, sass/partials/_main_wrap.scss */\n.cmb-nested .cmb-td,\n.cmb-repeatable-group .cmb-th,\n.cmb-repeatable-group:first-of-type {\n  border: 0;\n}\n\n/* line 185, sass/partials/_main_wrap.scss */\n.cmb-row:last-of-type,\n.cmb2-wrap .cmb-row:last-of-type,\n.cmb-repeatable-group:last-of-type {\n  border-bottom: 0;\n}\n\n/* line 191, sass/partials/_main_wrap.scss */\n.cmb-repeatable-grouping {\n  border: 1px solid #e9e9e9;\n  padding: 0 1em;\n}\n/* line 195, sass/partials/_main_wrap.scss */\n.cmb-repeatable-grouping.cmb-row {\n  margin: 0 0 0.8em;\n}\n\n/* line 203, sass/partials/_main_wrap.scss */\n.cmb-th {\n  color: #222222;\n  float: left;\n  font-weight: 600;\n  padding: 20px 10px 20px 0;\n  vertical-align: top;\n  width: 200px;\n}\n@media (max-width: 450px) {\n  /* line 203, sass/partials/_main_wrap.scss */\n  .cmb-th {\n    font-size: 1.2em;\n    display: block;\n    float: none;\n    padding-bottom: 1em;\n    text-align: left;\n    width: 100%;\n  }\n  /* line 27, sass/partials/_mixins.scss */\n  .cmb-th label {\n    display: block;\n    margin-top: 0;\n    margin-bottom: 0.5em;\n  }\n}\n\n/* line 216, sass/partials/_main_wrap.scss */\n.cmb-td {\n  line-height: 1.3;\n  max-width: 100%;\n  padding: 15px 10px;\n  vertical-align: middle;\n}\n\n/* line 225, sass/partials/_main_wrap.scss */\n.cmb-type-title .cmb-td {\n  padding: 0;\n}\n\n/* line 230, sass/partials/_main_wrap.scss */\n.cmb-th label {\n  display: block;\n  padding: 5px 0;\n}\n\n/* line 235, sass/partials/_main_wrap.scss */\n.cmb-th + .cmb-td {\n  float: left;\n}\n\n/* line 239, sass/partials/_main_wrap.scss */\n.cmb-td .cmb-td {\n  padding-bottom: 1em;\n}\n\n/* line 243, sass/partials/_main_wrap.scss */\n.cmb-remove-row {\n  text-align: right;\n}\n\n/* line 247, sass/partials/_main_wrap.scss */\n.empty-row.hidden {\n  display: none;\n}\n\n/* line 252, sass/partials/_main_wrap.scss */\n.cmb-repeat-table {\n  background-color: #fafafa;\n  border: 1px solid #e1e1e1;\n}\n/* line 256, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row {\n  position: relative;\n  counter-increment: el;\n  margin: 0;\n  padding: 10px 10px 10px 50px;\n  border-bottom: none !important;\n}\n/* line 264, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row + .cmb-repeat-row {\n  border-top: solid 1px #e9e9e9;\n}\n/* line 268, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper {\n  outline: dashed 2px #e9e9e9 !important;\n}\n/* line 272, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row:before {\n  content: counter(el);\n  display: block;\n  top: 0;\n  left: 0;\n  position: absolute;\n  width: 35px;\n  height: 100%;\n  line-height: 35px;\n  cursor: move;\n  color: #757575;\n  text-align: center;\n  border-right: solid 1px #e9e9e9;\n}\n/* line 289, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td {\n  margin: 0;\n  padding: 0;\n}\n/* line 296, sass/partials/_main_wrap.scss */\n.cmb-repeat-table + .cmb-add-row {\n  margin: 0;\n}\n/* line 299, sass/partials/_main_wrap.scss */\n.cmb-repeat-table + .cmb-add-row:before {\n  content: '';\n  width: 1px;\n  height: 1.6em;\n  display: block;\n  margin-left: 17px;\n  background-color: gainsboro;\n}\n/* line 309, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-remove-row {\n  top: 7px;\n  right: 7px;\n  position: absolute;\n  width: auto;\n  margin-left: 0;\n  padding: 0 !important;\n  display: none;\n}\n/* line 320, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button {\n  font-size: 20px;\n  text-indent: -1000px;\n  overflow: hidden;\n  position: relative;\n  height: auto;\n  line-height: 1;\n  padding: 0 10px 0;\n}\n/* line 331, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-remove-row > .cmb-remove-row-button:before {\n  content: \"\";\n  font-family: 'Dashicons';\n  speak: none;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n  text-indent: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  text-align: center;\n  line-height: 1.3;\n}\n/* line 338, sass/partials/_main_wrap.scss */\n.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row {\n  display: block;\n}\n\n/* line 346, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-th {\n  padding: 5px;\n}\n/* line 350, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-title {\n  background-color: #e9e9e9;\n  padding: 8px 12px 8px 2.2em;\n  margin: 0 -1em;\n  min-height: 1.5em;\n  font-size: 14px;\n  line-height: 1.4;\n}\n/* line 358, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-title h4 {\n  border: 0;\n  margin: 0;\n  font-size: 1.2em;\n  font-weight: 500;\n  padding: 0.5em 0.75em;\n}\n/* line 366, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-title .cmb-th {\n  display: block;\n  width: 100%;\n}\n/* line 372, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-group-description .cmb-th {\n  font-size: 1.2em;\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: left;\n  width: 100%;\n}\n/* line 27, sass/partials/_mixins.scss */\n.cmb-repeatable-group .cmb-group-description .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n/* line 376, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-shift-rows {\n  margin-right: 1em;\n}\n/* line 379, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2 {\n  margin-top: .15em;\n}\n/* line 383, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2 {\n  margin-top: .2em;\n}\n/* line 388, sass/partials/_main_wrap.scss */\n.cmb-repeatable-group .cmb2-upload-button {\n  float: right;\n}\n\n/* line 394, sass/partials/_main_wrap.scss */\np.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n  margin: 0;\n  padding-top: .5em;\n}\n\n/* line 401, sass/partials/_main_wrap.scss */\nspan.cmb2-metabox-description {\n  color: #666;\n  letter-spacing: 0.01em;\n}\n\n/* line 406, sass/partials/_main_wrap.scss */\n.cmb2-metabox-title {\n  margin: 0 0 5px 0;\n  padding: 5px 0 0 0;\n  font-size: 14px;\n}\n\n/* line 412, sass/partials/_main_wrap.scss */\n.cmb-inline ul {\n  padding: 4px 0 0 0;\n}\n\n/* line 416, sass/partials/_main_wrap.scss */\n.cmb-inline li {\n  display: inline-block;\n  padding-right: 18px;\n}\n\n/* line 421, sass/partials/_main_wrap.scss */\n.cmb-type-textarea-code pre {\n  margin: 0;\n}\n\n/* line 427, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status {\n  clear: none;\n  display: inline-block;\n  vertical-align: middle;\n  margin-right: 10px;\n  width: auto;\n}\n/* line 434, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status img {\n  max-width: 350px;\n  height: auto;\n}\n/* line 440, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status img,\n.cmb2-media-status .embed-status {\n  background: #eee;\n  border: 5px solid #ffffff;\n  outline: 1px solid #e9e9e9;\n  box-shadow: inset 0 0 15px rgba(0, 0, 0, 0.3), inset 0 0 0 1px rgba(0, 0, 0, 0.05);\n  background-image: linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0), linear-gradient(45deg, #d0d0d0 25%, transparent 25%, transparent 75%, #d0d0d0 75%, #d0d0d0);\n  background-position: 0 0, 10px 10px;\n  background-size: 20px 20px;\n  border-radius: 2px;\n  -moz-border-radius: 2px;\n  margin: 15px 0 0 0;\n}\n/* line 454, sass/partials/_main_wrap.scss */\n.cmb2-media-status .embed-status {\n  float: left;\n  max-width: 800px;\n}\n/* line 459, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status, .cmb2-media-status .embed-status {\n  position: relative;\n}\n/* line 462, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status .cmb2-remove-file-button, .cmb2-media-status .embed-status .cmb2-remove-file-button {\n  background: url(../images/ico-delete.png);\n  height: 16px;\n  left: -5px;\n  position: absolute;\n  text-indent: -9999px;\n  top: -5px;\n  width: 16px;\n}\n/* line 476, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status .cmb2-remove-file-button {\n  top: 10px;\n}\n/* line 481, sass/partials/_main_wrap.scss */\n.cmb2-media-status .img-status img, .cmb2-media-status .file-status > span {\n  cursor: pointer;\n}\n/* line 486, sass/partials/_main_wrap.scss */\n.cmb2-media-status.cmb-attach-list .img-status img, .cmb2-media-status.cmb-attach-list .file-status > span {\n  cursor: move;\n}\n\n/* line 493, sass/partials/_main_wrap.scss */\n.cmb-type-file-list .cmb2-media-status .img-status {\n  clear: none;\n  vertical-align: middle;\n  width: auto;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  margin-top: 0;\n}\n\n/* line 502, sass/partials/_main_wrap.scss */\n.cmb-attach-list li {\n  clear: both;\n  display: inline-block;\n  width: 100%;\n  margin-top: 5px;\n  margin-bottom: 10px;\n}\n/* line 508, sass/partials/_main_wrap.scss */\n.cmb-attach-list li img {\n  float: left;\n  margin-right: 10px;\n}\n\n/* line 514, sass/partials/_main_wrap.scss */\n.cmb2-remove-wrapper {\n  margin: 0;\n}\n\n/* line 518, sass/partials/_main_wrap.scss */\n.child-cmb2 .cmb-th {\n  text-align: left;\n}\n\n/* line 522, sass/partials/_main_wrap.scss */\n.cmb2-indented-hierarchy {\n  padding-left: 1.5em;\n}\n\n@media (max-width: 450px) {\n  /* line 527, sass/partials/_main_wrap.scss */\n  .cmb-th,\n  .cmb-td,\n  .cmb-th + .cmb-td {\n    display: block;\n    float: none;\n    width: 100%;\n  }\n}\n/*--------------------------------------------------------------\n * Post Metaboxes\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_post_metaboxes.scss */\n#poststuff .cmb-group-title {\n  margin-left: -1em;\n  margin-right: -1em;\n  min-height: 1.5em;\n}\n\n/* line 11, sass/partials/_post_metaboxes.scss */\n#poststuff .repeatable .cmb-group-title {\n  padding-left: 2.2em;\n}\n\n/* line 17, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb2-wrap, .cmb-type-group .cmb2-wrap {\n  margin: 0;\n}\n/* line 20, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb2-wrap > .cmb-field-list > .cmb-row, .cmb-type-group .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.8em 0;\n}\n/* line 26, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed, .cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed {\n  width: 100%;\n}\n/* line 32, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-row, .cmb-type-group .cmb-row {\n  padding: 0 0 1.8em;\n  margin: 0 0 0.8em;\n}\n/* line 36, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-row .cmbhandle, .cmb-type-group .cmb-row .cmbhandle {\n  right: -1em;\n  position: relative;\n  color: #222222;\n}\n/* line 43, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-repeatable-grouping, .cmb-type-group .cmb-repeatable-grouping {\n  padding: 0 1em;\n  max-width: 100%;\n  min-width: 1px !important;\n}\n/* line 49, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-repeatable-group > .cmb-row, .cmb-type-group .cmb-repeatable-group > .cmb-row {\n  padding-bottom: 0;\n}\n/* line 53, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-th, .cmb-type-group .cmb-th {\n  width: 18%;\n  padding: 0 2% 0 0;\n}\n/* line 59, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-td, .cmb-type-group .cmb-td {\n  margin-bottom: 0;\n  padding: 0;\n  line-height: 1.3;\n}\n/* line 65, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-th + .cmb-td, .cmb-type-group .cmb-th + .cmb-td {\n  width: 80%;\n  float: right;\n}\n/* line 70, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-row:not(:last-of-type),\n.cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n.cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n  border-bottom: 1px solid #e9e9e9;\n}\n@media (max-width: 450px) {\n  /* line 70, sass/partials/_post_metaboxes.scss */\n  .cmb2-postbox .cmb-row:not(:last-of-type),\n  .cmb2-postbox .cmb-repeatable-group:not(:last-of-type), .cmb-type-group .cmb-row:not(:last-of-type),\n  .cmb-type-group .cmb-repeatable-group:not(:last-of-type) {\n    border-bottom: 0;\n  }\n}\n/* line 79, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .cmb-repeat-group-field,\n.cmb2-postbox .cmb-remove-field-row, .cmb-type-group .cmb-repeat-group-field,\n.cmb-type-group .cmb-remove-field-row {\n  padding-top: 1.8em;\n}\n/* line 85, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .button-secondary .dashicons, .cmb-type-group .button-secondary .dashicons {\n  line-height: 1.3;\n}\n/* line 89, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .button-secondary.move-up .dashicons, .cmb2-postbox .button-secondary.move-down .dashicons, .cmb-type-group .button-secondary.move-up .dashicons, .cmb-type-group .button-secondary.move-down .dashicons {\n  line-height: 1.1;\n}\n/* line 94, sass/partials/_post_metaboxes.scss */\n.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons, .cmb-type-group .button-secondary.cmb-add-group-row .dashicons {\n  line-height: 1.5;\n}\n\n/*--------------------------------------------------------------\n * Context Metaboxes\n--------------------------------------------------------------*/\n/* Metabox collapse arrow indicators */\n/* line 8, sass/partials/_context_metaboxes.scss */\n.js .cmb2-postbox.context-box .handlediv {\n  text-align: center;\n}\n/* line 13, sass/partials/_context_metaboxes.scss */\n.js .cmb2-postbox.context-box .toggle-indicator:before {\n  content: \"\\f142\";\n  display: inline-block;\n  font: normal 20px/1 dashicons;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n/* line 26, sass/partials/_context_metaboxes.scss */\n.js .cmb2-postbox.context-box.closed .toggle-indicator:before {\n  content: \"\\f140\";\n}\n\n/* line 34, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box {\n  margin-bottom: 10px;\n}\n/* line 38, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-before_permalink-box {\n  margin-top: 10px;\n}\n/* line 42, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-after_title-box {\n  margin-top: 10px;\n}\n/* line 46, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-after_editor-box {\n  margin-top: 20px;\n  margin-bottom: 0;\n}\n/* line 51, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-form_top-box {\n  margin-top: 10px;\n}\n/* line 55, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box.context-form_top-box .hndle {\n  font-size: 14px;\n  padding: 8px 12px;\n  margin: 0;\n  line-height: 1.4;\n}\n/* line 63, sass/partials/_context_metaboxes.scss */\n.cmb2-postbox.context-box .hndle {\n  cursor: auto;\n}\n\n/* line 68, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap {\n  margin-top: 10px;\n}\n/* line 72, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap.cmb2-context-wrap-form_top {\n  margin-right: 300px;\n  width: auto;\n}\n/* line 79, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox {\n  padding: 10px;\n}\n/* line 84, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-th {\n  padding: 0 2% 0 0;\n  width: 18%;\n}\n/* line 89, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-td {\n  width: 80%;\n  padding: 0;\n}\n/* line 94, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-row {\n  margin-bottom: 10px;\n}\n/* line 97, sass/partials/_context_metaboxes.scss */\n.cmb2-context-wrap .cmb-row:last-of-type {\n  margin-bottom: 0;\n}\n\n/* one column on the post write/edit screen */\n@media only screen and (max-width: 850px) {\n  /* line 107, sass/partials/_context_metaboxes.scss */\n  .cmb2-context-wrap.cmb2-context-wrap-form_top {\n    margin-right: 0;\n  }\n}\n/*--------------------------------------------------------------\n * Options page\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_options-page.scss */\n.cmb2-options-page {\n  max-width: 1200px;\n}\n/* line 8, sass/partials/_options-page.scss */\n.cmb2-options-page.wrap > h2 {\n  margin-bottom: 1em;\n}\n/* line 12, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-metabox > .cmb-row {\n  padding: 1em;\n  margin-top: -1px;\n  background: #ffffff;\n  border: 1px solid #e9e9e9;\n  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);\n}\n/* line 19, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th {\n  padding: 0;\n  font-weight: initial;\n}\n/* line 24, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n  float: none;\n  padding: 0 0 0 1em;\n  margin-left: 200px;\n}\n@media (max-width: 450px) {\n  /* line 24, sass/partials/_options-page.scss */\n  .cmb2-options-page .cmb2-metabox > .cmb-row > .cmb-th + .cmb-td {\n    padding: 0;\n    margin-left: 0;\n  }\n}\n/* line 37, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-wrap .cmb-type-title {\n  margin-top: 1em;\n  padding: 0.6em 1em;\n  background-color: #fafafa;\n}\n/* line 42, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title {\n  font-size: 12px;\n  margin-top: 0;\n  margin-bottom: 0;\n  text-transform: uppercase;\n}\n/* line 49, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description {\n  padding-top: 0.25em;\n}\n/* line 55, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th {\n  padding: 0 0 0.8em 0;\n}\n/* line 59, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb-repeatable-group .cmb-group-name {\n  font-size: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n/* line 65, sass/partials/_options-page.scss */\n.cmb2-options-page .cmb-repeatable-group .cmb-th > .cmb2-metabox-description {\n  font-weight: 400;\n  padding-bottom: 0 !important;\n}\n\n/*--------------------------------------------------------------\n * New-Term Page\n--------------------------------------------------------------*/\n/* line 6, sass/partials/_new_term.scss */\n#addtag .cmb-th {\n  float: none;\n  width: auto;\n  padding: 20px 0 0;\n}\n/* line 12, sass/partials/_new_term.scss */\n#addtag .cmb-td {\n  padding: 0;\n}\n/* line 16, sass/partials/_new_term.scss */\n#addtag .cmb-th + .cmb-td {\n  float: none;\n}\n/* line 20, sass/partials/_new_term.scss */\n#addtag select {\n  max-width: 100%;\n}\n/* line 24, sass/partials/_new_term.scss */\n#addtag .cmb2-metabox {\n  padding-bottom: 20px;\n}\n/* line 28, sass/partials/_new_term.scss */\n#addtag .cmb-row li label {\n  display: inline;\n}\n\n/*--------------------------------------------------------------\n * Misc.\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_misc.scss */\n#poststuff .cmb-repeatable-group h2 {\n  margin: 0;\n}\n\n/* line 12, sass/partials/_misc.scss */\n.edit-tags-php .cmb2-metabox-title,\n.profile-php .cmb2-metabox-title,\n.user-edit-php .cmb2-metabox-title {\n  font-size: 1.4em;\n}\n\n/* line 18, sass/partials/_misc.scss */\n.cmb2-postbox .cmb-spinner, .cmb2-no-box-wrap .cmb-spinner {\n  float: left;\n  display: none;\n}\n\n/* line 24, sass/partials/_misc.scss */\n.cmb-spinner {\n  display: none;\n}\n/* line 26, sass/partials/_misc.scss */\n.cmb-spinner.is-active {\n  display: block;\n}\n\n/*--------------------------------------------------------------\n * Sidebar Placement Adjustments\n--------------------------------------------------------------*/\n/* line 10, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap > .cmb-field-list > .cmb-row,\n#side-sortables .cmb2-wrap > .cmb-field-list > .cmb-row {\n  padding: 1.4em 0;\n}\n/* line 16, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker),\n#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker) {\n  width: 100%;\n}\n/* line 20, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input + input:not(.wp-picker-clear), .inner-sidebar .cmb2-wrap input + select,\n#side-sortables .cmb2-wrap input + input:not(.wp-picker-clear),\n#side-sortables .cmb2-wrap input + select {\n  margin-left: 0;\n  margin-top: 1em;\n  display: block;\n}\n/* line 26, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input.cmb2-text-money,\n#side-sortables .cmb2-wrap input.cmb2-text-money {\n  max-width: 70%;\n}\n/* line 28, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description,\n#side-sortables .cmb2-wrap input.cmb2-text-money + .cmb2-metabox-description {\n  display: block;\n}\n/* line 34, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-wrap label,\n#side-sortables .cmb2-wrap label {\n  display: block;\n  font-weight: 700;\n  padding: 0 0 5px;\n}\n/* line 42, sass/partials/_sidebar_placements.scss */\n.inner-sidebar textarea,\n#side-sortables textarea {\n  max-width: 99%;\n}\n/* line 46, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-repeatable-group,\n#side-sortables .cmb-repeatable-group {\n  border-bottom: 1px solid #e9e9e9;\n}\n/* line 50, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-type-group > .cmb-td > .cmb-repeatable-group,\n#side-sortables .cmb-type-group > .cmb-td > .cmb-repeatable-group {\n  border-bottom: 0;\n  margin-bottom: -1.4em;\n}\n/* line 55, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-th,\n.inner-sidebar .cmb-td:not(.cmb-remove-row),\n.inner-sidebar .cmb-th + .cmb-td,\n#side-sortables .cmb-th,\n#side-sortables .cmb-td:not(.cmb-remove-row),\n#side-sortables .cmb-th + .cmb-td {\n  width: 100%;\n  display: block;\n  float: none;\n}\n/* line 63, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .closed .inside,\n#side-sortables .closed .inside {\n  display: none;\n}\n/* line 67, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-th,\n#side-sortables .cmb-th {\n  display: block;\n  float: none;\n  padding-bottom: 1em;\n  text-align: left;\n  width: 100%;\n  padding-left: 0;\n  padding-right: 0;\n}\n/* line 27, sass/partials/_mixins.scss */\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  display: block;\n  margin-top: 0;\n  margin-bottom: 0.5em;\n}\n/* line 14, sass/partials/_mixins.scss */\n.inner-sidebar .cmb-th label,\n#side-sortables .cmb-th label {\n  font-size: 14px;\n  line-height: 1.4em;\n}\n/* line 74, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-group-description .cmb-th,\n#side-sortables .cmb-group-description .cmb-th {\n  padding-top: 0;\n}\n/* line 77, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-group-description .cmb2-metabox-description,\n#side-sortables .cmb-group-description .cmb2-metabox-description {\n  padding: 0;\n}\n/* line 84, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-group-title .cmb-th,\n#side-sortables .cmb-group-title .cmb-th {\n  padding: 0;\n}\n/* line 90, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-repeatable-grouping + .cmb-repeatable-grouping,\n#side-sortables .cmb-repeatable-grouping + .cmb-repeatable-grouping {\n  margin-top: 1em;\n}\n/* line 99, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-media-status .img-status img,\n.inner-sidebar .cmb2-media-status .embed-status img,\n#side-sortables .cmb2-media-status .img-status img,\n#side-sortables .cmb2-media-status .embed-status img {\n  max-width: 90%;\n  height: auto;\n}\n/* line 107, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-list label,\n#side-sortables .cmb2-list label {\n  display: inline;\n  font-weight: normal;\n}\n/* line 112, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-metabox-description,\n#side-sortables .cmb2-metabox-description {\n  display: block;\n  padding: 7px 0 0;\n}\n/* line 119, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-type-checkbox .cmb-td label,\n.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description,\n#side-sortables .cmb-type-checkbox .cmb-td label,\n#side-sortables .cmb-type-checkbox .cmb2-metabox-description {\n  font-weight: normal;\n  display: inline;\n}\n/* line 126, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-row .cmb2-metabox-description,\n#side-sortables .cmb-row .cmb2-metabox-description {\n  padding-bottom: 1.8em;\n}\n/* line 130, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-metabox-title,\n#side-sortables .cmb2-metabox-title {\n  font-size: 1.2em;\n  font-style: italic;\n}\n/* line 135, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb-remove-row,\n#side-sortables .cmb-remove-row {\n  clear: both;\n  padding-top: 12px;\n  padding-bottom: 0;\n}\n/* line 141, sass/partials/_sidebar_placements.scss */\n.inner-sidebar .cmb2-upload-button,\n#side-sortables .cmb2-upload-button {\n  clear: both;\n  margin-top: 12px;\n}\n\n/*--------------------------------------------------------------\n * Collapsible UI\n--------------------------------------------------------------*/\n/* line 6, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox .cmbhandle {\n  color: #757575;\n  float: right;\n  width: 27px;\n  height: 30px;\n  cursor: pointer;\n  right: -1em;\n  position: relative;\n}\n/* line 14, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox .cmbhandle:before {\n  content: '\\f142';\n  right: 12px;\n  font: normal 20px/1 'dashicons';\n  speak: none;\n  display: inline-block;\n  padding: 8px 10px;\n  top: 0;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-decoration: none !important;\n}\n/* line 31, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox .postbox.closed .cmbhandle:before {\n  content: '\\f140';\n}\n/* line 37, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row {\n  -webkit-appearance: none !important;\n  background: none !important;\n  border: none !important;\n  position: absolute;\n  left: 0;\n  top: .5em;\n  line-height: 1em;\n  padding: 2px 6px 3px;\n  opacity: .5;\n}\n/* line 47, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]) {\n  cursor: pointer;\n  color: #a00;\n  opacity: 1;\n}\n/* line 51, sass/partials/_collapsible_ui.scss */\n.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover {\n  color: #f00;\n}\n\n/*\n * jQuery UI CSS Framework 1.8.16\n *\n * Copyright 2011, AUTHORS.txt (http://jqueryui.com/about)\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://jquery.org/license\n *\n * http://docs.jquery.com/UI/Theming/API\n *\n * WordPress Styles adopted from \"jQuery UI Datepicker CSS for WordPress\"\n * https://github.com/stuttter/wp-datepicker-styling\n *\n */\n/* line 15, sass/partials/_jquery_ui.scss */\n* html .cmb2-element.ui-helper-clearfix {\n  height: 1%;\n}\n\n/* line 24, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker, .cmb2-element .ui-datepicker {\n  padding: 0;\n  margin: 0;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n  background-color: #fff;\n  border: 1px solid #dfdfdf;\n  border-top: none;\n  -webkit-box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.075);\n  min-width: 17em;\n  width: auto;\n  /* Default Color Scheme */\n}\n/* line 38, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker *, .cmb2-element .ui-datepicker * {\n  padding: 0;\n  font-family: \"Open Sans\", sans-serif;\n  -webkit-border-radius: 0;\n  -moz-border-radius: 0;\n  border-radius: 0;\n}\n/* line 46, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker table, .cmb2-element .ui-datepicker table {\n  font-size: 13px;\n  margin: 0;\n  border: none;\n  border-collapse: collapse;\n}\n/* line 53, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background-image: none;\n  border: none;\n  color: #fff;\n  font-weight: normal;\n}\n/* line 61, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: transparent;\n  border-color: transparent;\n  cursor: pointer;\n}\n/* line 67, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-title, .cmb2-element .ui-datepicker .ui-datepicker-title {\n  margin: 0;\n  padding: 10px 0;\n  color: #fff;\n  font-size: 14px;\n  line-height: 14px;\n  text-align: center;\n}\n/* line 75, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-title select, .cmb2-element .ui-datepicker .ui-datepicker-title select {\n  margin-top: -8px;\n  margin-bottom: -8px;\n}\n/* line 81, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-next {\n  position: relative;\n  top: 0;\n  height: 34px;\n  width: 34px;\n}\n/* line 89, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next, .cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next {\n  border: none;\n}\n/* line 94, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev,\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover, .cmb2-element .ui-datepicker .ui-datepicker-prev,\n.cmb2-element .ui-datepicker .ui-datepicker-prev-hover {\n  left: 0;\n}\n/* line 99, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover, .cmb2-element .ui-datepicker .ui-datepicker-next,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover {\n  right: 0;\n}\n/* line 104, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next span,\n.cmb2-element.ui-datepicker .ui-datepicker-prev span, .cmb2-element .ui-datepicker .ui-datepicker-next span,\n.cmb2-element .ui-datepicker .ui-datepicker-prev span {\n  display: none;\n}\n/* line 109, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev, .cmb2-element .ui-datepicker .ui-datepicker-prev {\n  float: left;\n}\n/* line 113, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next, .cmb2-element .ui-datepicker .ui-datepicker-next {\n  float: right;\n}\n/* line 117, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  font: normal 20px/34px 'dashicons';\n  padding-left: 7px;\n  color: #fff;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  width: 34px;\n  height: 34px;\n}\n/* line 129, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev:before, .cmb2-element .ui-datepicker .ui-datepicker-prev:before {\n  content: '\\f341';\n}\n/* line 133, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-next:before, .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  content: '\\f345';\n}\n/* line 137, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before, .cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,\n.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before {\n  opacity: 0.7;\n}\n/* line 142, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker select.ui-datepicker-month,\n.cmb2-element.ui-datepicker select.ui-datepicker-year, .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.cmb2-element .ui-datepicker select.ui-datepicker-year {\n  width: 33%;\n  background: transparent;\n  border-color: transparent;\n  box-shadow: none;\n  color: #fff;\n}\n/* line 149, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker select.ui-datepicker-month option,\n.cmb2-element.ui-datepicker select.ui-datepicker-year option, .cmb2-element .ui-datepicker select.ui-datepicker-month option,\n.cmb2-element .ui-datepicker select.ui-datepicker-year option {\n  color: #333;\n}\n/* line 154, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  color: #fff;\n  font-weight: 600;\n}\n/* line 157, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker thead th, .cmb2-element .ui-datepicker thead th {\n  font-weight: normal;\n}\n/* line 162, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker th, .cmb2-element .ui-datepicker th {\n  padding: 10px;\n}\n/* line 166, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td, .cmb2-element .ui-datepicker td {\n  padding: 0;\n  border: 1px solid #f4f4f4;\n}\n/* line 171, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-other-month, .cmb2-element .ui-datepicker td.ui-datepicker-other-month {\n  border: transparent;\n}\n/* line 175, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end, .cmb2-element .ui-datepicker td.ui-datepicker-week-end {\n  background-color: #f4f4f4;\n  border: 1px solid #f4f4f4;\n}\n/* line 178, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today {\n  -webkit-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  -moz-box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n  box-shadow: inset 0px 0px 1px 0px rgba(0, 0, 0, 0.1);\n}\n/* line 185, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-today, .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background-color: #f0f0c0;\n}\n/* line 189, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-datepicker-current-day, .cmb2-element .ui-datepicker td.ui-datepicker-current-day {\n  background: #bbdd88;\n}\n/* line 193, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td .ui-state-default, .cmb2-element .ui-datepicker td .ui-state-default {\n  background: transparent;\n  border: none;\n  text-align: center;\n  text-decoration: none;\n  width: auto;\n  display: block;\n  padding: 5px 10px;\n  font-weight: normal;\n  color: #444;\n}\n/* line 205, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default, .cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default {\n  opacity: 0.5;\n}\n/* line 210, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-widget-header,\n.cmb2-element.ui-datepicker .ui-datepicker-header, .cmb2-element .ui-datepicker .ui-widget-header,\n.cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n/* line 215, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker thead, .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n/* line 219, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker td .ui-state-hover, .cmb2-element.ui-datepicker td .ui-state-active, .cmb2-element .ui-datepicker td .ui-state-hover, .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #0073aa;\n  color: #fff;\n}\n/* line 224, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div, .cmb2-element .ui-datepicker .ui-timepicker-div {\n  font-size: 14px;\n}\n/* line 226, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl, .cmb2-element .ui-datepicker .ui-timepicker-div dl {\n  text-align: left;\n  padding: 0 .6em;\n}\n/* line 229, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dt, .cmb2-element .ui-datepicker .ui-timepicker-div dl dt {\n  float: left;\n  clear: left;\n  padding: 0 0 0 5px;\n}\n/* line 234, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd {\n  margin: 0 10px 10px 40%;\n}\n/* line 236, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select, .cmb2-element .ui-datepicker .ui-timepicker-div dl dd select {\n  width: 100%;\n}\n/* line 242, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane {\n  padding: .6em;\n  text-align: left;\n}\n/* line 246, sass/partials/_jquery_ui.scss */\n.cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element.ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-primary, .cmb2-element .ui-datepicker .ui-timepicker-div + .ui-datepicker-buttonpane .button-secondary {\n  padding: 0 10px 1px;\n  -webkit-border-radius: 3px;\n  -moz-border-radius: 3px;\n  border-radius: 3px;\n  margin: 0 .6em .4em .4em;\n}\n\n/* line 260, sass/partials/_jquery_ui.scss */\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #00a0d2;\n}\n/* line 265, sass/partials/_jquery_ui.scss */\n.admin-color-fresh .cmb2-element.ui-datepicker thead, .admin-color-fresh .cmb2-element .ui-datepicker thead {\n  background: #32373c;\n}\n/* line 269, sass/partials/_jquery_ui.scss */\n.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #0073aa;\n  color: #fff;\n}\n\n/* line 277, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #52accc;\n}\n/* line 282, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker thead, .admin-color-blue .cmb2-element .ui-datepicker thead {\n  background: #4796b3;\n}\n/* line 291, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #096484;\n  color: #fff;\n}\n/* line 296, sass/partials/_jquery_ui.scss */\n.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n/* line 305, sass/partials/_jquery_ui.scss */\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #59524c;\n}\n/* line 310, sass/partials/_jquery_ui.scss */\n.admin-color-coffee .cmb2-element.ui-datepicker thead, .admin-color-coffee .cmb2-element .ui-datepicker thead {\n  background: #46403c;\n}\n/* line 314, sass/partials/_jquery_ui.scss */\n.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #c7a589;\n  color: #fff;\n}\n\n/* line 322, sass/partials/_jquery_ui.scss */\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #523f6d;\n}\n/* line 327, sass/partials/_jquery_ui.scss */\n.admin-color-ectoplasm .cmb2-element.ui-datepicker thead, .admin-color-ectoplasm .cmb2-element .ui-datepicker thead {\n  background: #413256;\n}\n/* line 331, sass/partials/_jquery_ui.scss */\n.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #a3b745;\n  color: #fff;\n}\n\n/* line 339, sass/partials/_jquery_ui.scss */\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #363b3f;\n}\n/* line 344, sass/partials/_jquery_ui.scss */\n.admin-color-midnight .cmb2-element.ui-datepicker thead, .admin-color-midnight .cmb2-element .ui-datepicker thead {\n  background: #26292c;\n}\n/* line 348, sass/partials/_jquery_ui.scss */\n.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #e14d43;\n  color: #fff;\n}\n\n/* line 356, sass/partials/_jquery_ui.scss */\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #738e96;\n}\n/* line 361, sass/partials/_jquery_ui.scss */\n.admin-color-ocean .cmb2-element.ui-datepicker thead, .admin-color-ocean .cmb2-element .ui-datepicker thead {\n  background: #627c83;\n}\n/* line 365, sass/partials/_jquery_ui.scss */\n.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #9ebaa0;\n  color: #fff;\n}\n\n/* line 373, sass/partials/_jquery_ui.scss */\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,\n.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover {\n  background: #cf4944;\n}\n/* line 379, sass/partials/_jquery_ui.scss */\n.admin-color-sunrise .cmb2-element.ui-datepicker th, .admin-color-sunrise .cmb2-element .ui-datepicker th {\n  border-color: #be3631;\n  background: #be3631;\n}\n/* line 384, sass/partials/_jquery_ui.scss */\n.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #dd823b;\n  color: #fff;\n}\n\n/* line 392, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #e5e5e5;\n}\n/* line 397, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year, .admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,\n.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year {\n  color: #555;\n}\n/* line 402, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker thead, .admin-color-light .cmb2-element .ui-datepicker thead {\n  background: #888;\n}\n/* line 406, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before, .admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,\n.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,\n.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before {\n  color: #555;\n}\n/* line 414, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element.ui-datepicker td .ui-state-active, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover, .admin-color-light .cmb2-element .ui-datepicker td .ui-state-active {\n  background: #ccc;\n}\n/* line 418, sass/partials/_jquery_ui.scss */\n.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today, .admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today {\n  background: #eee;\n}\n\n/* line 426, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #56b274;\n}\n/* line 431, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead {\n  background: #36533f;\n}\n/* line 435, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #446950;\n  color: #fff;\n}\n\n/* line 443, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header, .admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,\n.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header {\n  background: #4ca26a;\n}\n/* line 448, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-mint .cmb2-element.ui-datepicker thead, .admin-color-bbp-mint .cmb2-element .ui-datepicker thead {\n  background: #4f6d59;\n}\n/* line 452, sass/partials/_jquery_ui.scss */\n.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover, .admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover {\n  background: #5fb37c;\n  color: #fff;\n}\n\n/*--------------------------------------------------------------\n * Character counter\n--------------------------------------------------------------*/\n/* line 5, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap {\n  margin: .5em 0 1em;\n}\n/* line 8, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap input[type=\"text\"] {\n  font-size: 12px;\n  width: 25px;\n}\n/* line 14, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=\"text\"] {\n  border-color: #a00 !important;\n}\n/* line 17, sass/partials/_char_counter.scss */\n.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg {\n  display: inline-block;\n}\n\n/* line 23, sass/partials/_char_counter.scss */\n.cmb2-char-max-msg {\n  color: #a00;\n  display: none;\n  font-weight: 600;\n  margin-left: 1em;\n}\n\n/*# sourceMappingURL=cmb2.css.map */\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/css/index.php","ext":"php","size":27,"mtime":1757324689,"type":"text","content":"<?php\n// Silence is golden\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/css/cmb2-rtl.min.css","ext":"css","size":32949,"mtime":1757324689,"type":"text","content":"@charset \"UTF-8\";.cmb2-wrap{margin:0}.cmb2-wrap input,.cmb2-wrap textarea{max-width:100%}.cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb2-wrap textarea{width:500px;padding:8px}.cmb2-wrap textarea.cmb2-textarea-code{font-family:\"Courier 10 Pitch\",Courier,monospace;line-height:16px}.cmb2-wrap input.cmb2-text-small,.cmb2-wrap input.cmb2-timepicker{width:100px}.cmb2-wrap input.cmb2-text-money{width:90px}.cmb2-wrap input.cmb2-text-medium{width:230px}.cmb2-wrap input.cmb2-upload-file{width:65%}.cmb2-wrap input.ed_button{padding:2px 4px}.cmb2-wrap input:not([type=hidden])+.button-secondary,.cmb2-wrap input:not([type=hidden])+input,.cmb2-wrap input:not([type=hidden])+select{margin-right:20px}.cmb2-wrap ul{margin:0}.cmb2-wrap li{font-size:14px;line-height:16px;margin:1px 0 5px 0}.cmb2-wrap select{font-size:14px;margin-top:3px}.cmb2-wrap input:focus,.cmb2-wrap textarea:focus{background:#fffff8}.cmb2-wrap input[type=radio]{margin:0 0 0 5px;padding:0}.cmb2-wrap input[type=checkbox]{margin:0 0 0 5px;padding:0}.cmb2-wrap .button-secondary,.cmb2-wrap button{white-space:nowrap}.cmb2-wrap .mceLayout{border:1px solid #e9e9e9!important}.cmb2-wrap .mceIframeContainer{background:#fff}.cmb2-wrap .meta_mce{width:97%}.cmb2-wrap .meta_mce textarea{width:100%}.cmb2-wrap .cmb-multicheck-toggle{margin-top:-1em}.cmb2-wrap .wp-picker-clear.button,.cmb2-wrap .wp-picker-default.button{margin-right:6px;padding:2px 8px}.cmb2-wrap .cmb-row{margin:0}.cmb2-wrap .cmb-row:after{content:'';clear:both;display:block;width:100%}.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description{padding-top:0;padding-bottom:1em}body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.1875rem}@media screen and (max-width:782px){body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.4375rem}}.cmb2-metabox{clear:both;margin:0}.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-th,.cmb2-metabox>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox>.cmb-row:first-of-type>.cmb-th{border:0}.cmb-add-row{margin:1.8em 0 0}.cmb-nested .cmb-td,.cmb-repeatable-group .cmb-th,.cmb-repeatable-group:first-of-type{border:0}.cmb-repeatable-group:last-of-type,.cmb-row:last-of-type,.cmb2-wrap .cmb-row:last-of-type{border-bottom:0}.cmb-repeatable-grouping{border:1px solid #e9e9e9;padding:0 1em}.cmb-repeatable-grouping.cmb-row{margin:0 0 .8em}.cmb-th{color:#222;float:right;font-weight:600;padding:20px 0 20px 10px;vertical-align:top;width:200px}@media (max-width:450px){.cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:right;width:100%}.cmb-th label{display:block;margin-top:0;margin-bottom:.5em}}.cmb-td{line-height:1.3;max-width:100%;padding:15px 10px;vertical-align:middle}.cmb-type-title .cmb-td{padding:0}.cmb-th label{display:block;padding:5px 0}.cmb-th+.cmb-td{float:right}.cmb-td .cmb-td{padding-bottom:1em}.cmb-remove-row{text-align:left}.empty-row.hidden{display:none}.cmb-repeat-table{background-color:#fafafa;border:1px solid #e1e1e1}.cmb-repeat-table .cmb-row.cmb-repeat-row{position:relative;counter-increment:el;margin:0;padding:10px 50px 10px 10px;border-bottom:none!important}.cmb-repeat-table .cmb-row.cmb-repeat-row+.cmb-repeat-row{border-top:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper{outline:dashed 2px #e9e9e9!important}.cmb-repeat-table .cmb-row.cmb-repeat-row:before{content:counter(el);display:block;top:0;right:0;position:absolute;width:35px;height:100%;line-height:35px;cursor:move;color:#757575;text-align:center;border-left:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td{margin:0;padding:0}.cmb-repeat-table+.cmb-add-row{margin:0}.cmb-repeat-table+.cmb-add-row:before{content:'';width:1px;height:1.6em;display:block;margin-right:17px;background-color:#dcdcdc}.cmb-repeat-table .cmb-remove-row{top:7px;left:7px;position:absolute;width:auto;margin-right:0;padding:0!important;display:none}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button{font-size:20px;text-indent:-1000px;overflow:hidden;position:relative;height:auto;line-height:1;padding:0 10px 0}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button:before{content:\"\";font-family:Dashicons;speak:none;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;margin:0;text-indent:0;position:absolute;top:0;right:0;width:100%;height:100%;text-align:center;line-height:1.3}.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row{display:block}.cmb-repeatable-group .cmb-th{padding:5px}.cmb-repeatable-group .cmb-group-title{background-color:#e9e9e9;padding:8px 2.2em 8px 12px;margin:0 -1em;min-height:1.5em;font-size:14px;line-height:1.4}.cmb-repeatable-group .cmb-group-title h4{border:0;margin:0;font-size:1.2em;font-weight:500;padding:.5em .75em}.cmb-repeatable-group .cmb-group-title .cmb-th{display:block;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:right;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}.cmb-repeatable-group .cmb-shift-rows{margin-left:1em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2{margin-top:.15em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2{margin-top:.2em}.cmb-repeatable-group .cmb2-upload-button{float:left}p.cmb2-metabox-description{color:#666;letter-spacing:.01em;margin:0;padding-top:.5em}span.cmb2-metabox-description{color:#666;letter-spacing:.01em}.cmb2-metabox-title{margin:0 0 5px 0;padding:5px 0 0 0;font-size:14px}.cmb-inline ul{padding:4px 0 0 0}.cmb-inline li{display:inline-block;padding-left:18px}.cmb-type-textarea-code pre{margin:0}.cmb2-media-status .img-status{clear:none;display:inline-block;vertical-align:middle;margin-left:10px;width:auto}.cmb2-media-status .img-status img{max-width:350px;height:auto}.cmb2-media-status .embed-status,.cmb2-media-status .img-status img{background:#eee;border:5px solid #fff;outline:1px solid #e9e9e9;box-shadow:inset 0 0 15px rgba(0,0,0,.3),inset 0 0 0 1px rgba(0,0,0,.05);background-image:linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0),linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0);background-position:0 0,10px 10px;background-size:20px 20px;border-radius:2px;-moz-border-radius:2px;margin:15px 0 0 0}.cmb2-media-status .embed-status{float:right;max-width:800px}.cmb2-media-status .embed-status,.cmb2-media-status .img-status{position:relative}.cmb2-media-status .embed-status .cmb2-remove-file-button,.cmb2-media-status .img-status .cmb2-remove-file-button{background:url(../images/ico-delete.png);height:16px;right:-5px;position:absolute;text-indent:-9999px;top:-5px;width:16px}.cmb2-media-status .img-status .cmb2-remove-file-button{top:10px}.cmb2-media-status .file-status>span,.cmb2-media-status .img-status img{cursor:pointer}.cmb2-media-status.cmb-attach-list .file-status>span,.cmb2-media-status.cmb-attach-list .img-status img{cursor:move}.cmb-type-file-list .cmb2-media-status .img-status{clear:none;vertical-align:middle;width:auto;margin-left:10px;margin-bottom:10px;margin-top:0}.cmb-attach-list li{clear:both;display:inline-block;width:100%;margin-top:5px;margin-bottom:10px}.cmb-attach-list li img{float:right;margin-left:10px}.cmb2-remove-wrapper{margin:0}.child-cmb2 .cmb-th{text-align:right}.cmb2-indented-hierarchy{padding-right:1.5em}@media (max-width:450px){.cmb-td,.cmb-th,.cmb-th+.cmb-td{display:block;float:none;width:100%}}#poststuff .cmb-group-title{margin-right:-1em;margin-left:-1em;min-height:1.5em}#poststuff .repeatable .cmb-group-title{padding-right:2.2em}.cmb-type-group .cmb2-wrap,.cmb2-postbox .cmb2-wrap{margin:0}.cmb-type-group .cmb2-wrap>.cmb-field-list>.cmb-row,.cmb2-postbox .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.8em 0}.cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed,.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb-type-group .cmb-row,.cmb2-postbox .cmb-row{padding:0 0 1.8em;margin:0 0 .8em}.cmb-type-group .cmb-row .cmbhandle,.cmb2-postbox .cmb-row .cmbhandle{left:-1em;position:relative;color:#222}.cmb-type-group .cmb-repeatable-grouping,.cmb2-postbox .cmb-repeatable-grouping{padding:0 1em;max-width:100%;min-width:1px!important}.cmb-type-group .cmb-repeatable-group>.cmb-row,.cmb2-postbox .cmb-repeatable-group>.cmb-row{padding-bottom:0}.cmb-type-group .cmb-th,.cmb2-postbox .cmb-th{width:18%;padding:0 0 0 2%}.cmb-type-group .cmb-td,.cmb2-postbox .cmb-td{margin-bottom:0;padding:0;line-height:1.3}.cmb-type-group .cmb-th+.cmb-td,.cmb2-postbox .cmb-th+.cmb-td{width:80%;float:left}.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:1px solid #e9e9e9}@media (max-width:450px){.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:0}}.cmb-type-group .cmb-remove-field-row,.cmb-type-group .cmb-repeat-group-field,.cmb2-postbox .cmb-remove-field-row,.cmb2-postbox .cmb-repeat-group-field{padding-top:1.8em}.cmb-type-group .button-secondary .dashicons,.cmb2-postbox .button-secondary .dashicons{line-height:1.3}.cmb-type-group .button-secondary.move-down .dashicons,.cmb-type-group .button-secondary.move-up .dashicons,.cmb2-postbox .button-secondary.move-down .dashicons,.cmb2-postbox .button-secondary.move-up .dashicons{line-height:1.1}.cmb-type-group .button-secondary.cmb-add-group-row .dashicons,.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons{line-height:1.5}.js .cmb2-postbox.context-box .handlediv{text-align:center}.js .cmb2-postbox.context-box .toggle-indicator:before{content:\"\\f142\";display:inline-block;font:normal 20px/1 dashicons;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.js .cmb2-postbox.context-box.closed .toggle-indicator:before{content:\"\\f140\"}.cmb2-postbox.context-box{margin-bottom:10px}.cmb2-postbox.context-box.context-before_permalink-box{margin-top:10px}.cmb2-postbox.context-box.context-after_title-box{margin-top:10px}.cmb2-postbox.context-box.context-after_editor-box{margin-top:20px;margin-bottom:0}.cmb2-postbox.context-box.context-form_top-box{margin-top:10px}.cmb2-postbox.context-box.context-form_top-box .hndle{font-size:14px;padding:8px 12px;margin:0;line-height:1.4}.cmb2-postbox.context-box .hndle{cursor:auto}.cmb2-context-wrap{margin-top:10px}.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-left:300px;width:auto}.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox{padding:10px}.cmb2-context-wrap .cmb-th{padding:0 0 0 2%;width:18%}.cmb2-context-wrap .cmb-td{width:80%;padding:0}.cmb2-context-wrap .cmb-row{margin-bottom:10px}.cmb2-context-wrap .cmb-row:last-of-type{margin-bottom:0}@media only screen and (max-width:850px){.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-left:0}}.cmb2-options-page{max-width:1200px}.cmb2-options-page.wrap>h2{margin-bottom:1em}.cmb2-options-page .cmb2-metabox>.cmb-row{padding:1em;margin-top:-1px;background:#fff;border:1px solid #e9e9e9;box-shadow:0 1px 1px rgba(0,0,0,.05)}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th{padding:0;font-weight:initial}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{float:none;padding:0 1em 0 0;margin-right:200px}@media (max-width:450px){.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{padding:0;margin-right:0}}.cmb2-options-page .cmb2-wrap .cmb-type-title{margin-top:1em;padding:.6em 1em;background-color:#fafafa}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title{font-size:12px;margin-top:0;margin-bottom:0;text-transform:uppercase}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description{padding-top:.25em}.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th{padding:0 0 .8em 0}.cmb2-options-page .cmb-repeatable-group .cmb-group-name{font-size:16px;margin-top:0;margin-bottom:0}.cmb2-options-page .cmb-repeatable-group .cmb-th>.cmb2-metabox-description{font-weight:400;padding-bottom:0!important}#addtag .cmb-th{float:none;width:auto;padding:20px 0 0}#addtag .cmb-td{padding:0}#addtag .cmb-th+.cmb-td{float:none}#addtag select{max-width:100%}#addtag .cmb2-metabox{padding-bottom:20px}#addtag .cmb-row li label{display:inline}#poststuff .cmb-repeatable-group h2{margin:0}.edit-tags-php .cmb2-metabox-title,.profile-php .cmb2-metabox-title,.user-edit-php .cmb2-metabox-title{font-size:1.4em}.cmb2-no-box-wrap .cmb-spinner,.cmb2-postbox .cmb-spinner{float:right;display:none}.cmb-spinner{display:none}.cmb-spinner.is-active{display:block}#side-sortables .cmb2-wrap>.cmb-field-list>.cmb-row,.inner-sidebar .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.4em 0}#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker),.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker){width:100%}#side-sortables .cmb2-wrap input+input:not(.wp-picker-clear),#side-sortables .cmb2-wrap input+select,.inner-sidebar .cmb2-wrap input+input:not(.wp-picker-clear),.inner-sidebar .cmb2-wrap input+select{margin-right:0;margin-top:1em;display:block}#side-sortables .cmb2-wrap input.cmb2-text-money,.inner-sidebar .cmb2-wrap input.cmb2-text-money{max-width:70%}#side-sortables .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description,.inner-sidebar .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description{display:block}#side-sortables .cmb2-wrap label,.inner-sidebar .cmb2-wrap label{display:block;font-weight:700;padding:0 0 5px}#side-sortables textarea,.inner-sidebar textarea{max-width:99%}#side-sortables .cmb-repeatable-group,.inner-sidebar .cmb-repeatable-group{border-bottom:1px solid #e9e9e9}#side-sortables .cmb-type-group>.cmb-td>.cmb-repeatable-group,.inner-sidebar .cmb-type-group>.cmb-td>.cmb-repeatable-group{border-bottom:0;margin-bottom:-1.4em}#side-sortables .cmb-td:not(.cmb-remove-row),#side-sortables .cmb-th,#side-sortables .cmb-th+.cmb-td,.inner-sidebar .cmb-td:not(.cmb-remove-row),.inner-sidebar .cmb-th,.inner-sidebar .cmb-th+.cmb-td{width:100%;display:block;float:none}#side-sortables .closed .inside,.inner-sidebar .closed .inside{display:none}#side-sortables .cmb-th,.inner-sidebar .cmb-th{display:block;float:none;padding-bottom:1em;text-align:right;width:100%;padding-right:0;padding-left:0}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{font-size:14px;line-height:1.4em}#side-sortables .cmb-group-description .cmb-th,.inner-sidebar .cmb-group-description .cmb-th{padding-top:0}#side-sortables .cmb-group-description .cmb2-metabox-description,.inner-sidebar .cmb-group-description .cmb2-metabox-description{padding:0}#side-sortables .cmb-group-title .cmb-th,.inner-sidebar .cmb-group-title .cmb-th{padding:0}#side-sortables .cmb-repeatable-grouping+.cmb-repeatable-grouping,.inner-sidebar .cmb-repeatable-grouping+.cmb-repeatable-grouping{margin-top:1em}#side-sortables .cmb2-media-status .embed-status img,#side-sortables .cmb2-media-status .img-status img,.inner-sidebar .cmb2-media-status .embed-status img,.inner-sidebar .cmb2-media-status .img-status img{max-width:90%;height:auto}#side-sortables .cmb2-list label,.inner-sidebar .cmb2-list label{display:inline;font-weight:400}#side-sortables .cmb2-metabox-description,.inner-sidebar .cmb2-metabox-description{display:block;padding:7px 0 0}#side-sortables .cmb-type-checkbox .cmb-td label,#side-sortables .cmb-type-checkbox .cmb2-metabox-description,.inner-sidebar .cmb-type-checkbox .cmb-td label,.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description{font-weight:400;display:inline}#side-sortables .cmb-row .cmb2-metabox-description,.inner-sidebar .cmb-row .cmb2-metabox-description{padding-bottom:1.8em}#side-sortables .cmb2-metabox-title,.inner-sidebar .cmb2-metabox-title{font-size:1.2em;font-style:italic}#side-sortables .cmb-remove-row,.inner-sidebar .cmb-remove-row{clear:both;padding-top:12px;padding-bottom:0}#side-sortables .cmb2-upload-button,.inner-sidebar .cmb2-upload-button{clear:both;margin-top:12px}.cmb2-metabox .cmbhandle{color:#757575;float:left;width:27px;height:30px;cursor:pointer;left:-1em;position:relative}.cmb2-metabox .cmbhandle:before{content:'\\f142';left:12px;font:normal 20px/1 dashicons;speak:none;display:inline-block;padding:8px 10px;top:0;position:relative;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.cmb2-metabox .postbox.closed .cmbhandle:before{content:'\\f140'}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row{-webkit-appearance:none!important;background:0 0!important;border:none!important;position:absolute;right:0;top:.5em;line-height:1em;padding:2px 6px 3px;opacity:.5}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]){cursor:pointer;color:#a00;opacity:1}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover{color:red}* html .cmb2-element.ui-helper-clearfix{height:1%}.cmb2-element .ui-datepicker,.cmb2-element.ui-datepicker{padding:0;margin:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;background-color:#fff;border:1px solid #dfdfdf;border-top:none;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.075);box-shadow:0 3px 6px rgba(0,0,0,.075);min-width:17em;width:auto}.cmb2-element .ui-datepicker *,.cmb2-element.ui-datepicker *{padding:0;font-family:\"Open Sans\",sans-serif;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.cmb2-element .ui-datepicker table,.cmb2-element.ui-datepicker table{font-size:13px;margin:0;border:none;border-collapse:collapse}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background-image:none;border:none;color:#fff;font-weight:400}.cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover{background:0 0;border-color:transparent;cursor:pointer}.cmb2-element .ui-datepicker .ui-datepicker-title,.cmb2-element.ui-datepicker .ui-datepicker-title{margin:0;padding:10px 0;color:#fff;font-size:14px;line-height:14px;text-align:center}.cmb2-element .ui-datepicker .ui-datepicker-title select,.cmb2-element.ui-datepicker .ui-datepicker-title select{margin-top:-8px;margin-bottom:-8px}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-prev{position:relative;top:0;height:34px;width:34px}.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev{border:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover,.cmb2-element.ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover{right:0}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-next-hover,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next-hover{left:0}.cmb2-element .ui-datepicker .ui-datepicker-next span,.cmb2-element .ui-datepicker .ui-datepicker-prev span,.cmb2-element.ui-datepicker .ui-datepicker-next span,.cmb2-element.ui-datepicker .ui-datepicker-prev span{display:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev{float:right}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next{float:left}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{font:normal 20px/34px dashicons;padding-right:7px;color:#fff;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:34px;height:34px}.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{content:'\\f341'}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before{content:'\\f345'}.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before{opacity:.7}.cmb2-element .ui-datepicker select.ui-datepicker-month,.cmb2-element .ui-datepicker select.ui-datepicker-year,.cmb2-element.ui-datepicker select.ui-datepicker-month,.cmb2-element.ui-datepicker select.ui-datepicker-year{width:33%;background:0 0;border-color:transparent;box-shadow:none;color:#fff}.cmb2-element .ui-datepicker select.ui-datepicker-month option,.cmb2-element .ui-datepicker select.ui-datepicker-year option,.cmb2-element.ui-datepicker select.ui-datepicker-month option,.cmb2-element.ui-datepicker select.ui-datepicker-year option{color:#333}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{color:#fff;font-weight:600}.cmb2-element .ui-datepicker thead th,.cmb2-element.ui-datepicker thead th{font-weight:400}.cmb2-element .ui-datepicker th,.cmb2-element.ui-datepicker th{padding:10px}.cmb2-element .ui-datepicker td,.cmb2-element.ui-datepicker td{padding:0;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-other-month,.cmb2-element.ui-datepicker td.ui-datepicker-other-month{border:transparent}.cmb2-element .ui-datepicker td.ui-datepicker-week-end,.cmb2-element.ui-datepicker td.ui-datepicker-week-end{background-color:#f4f4f4;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today{-webkit-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);-moz-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1)}.cmb2-element .ui-datepicker td.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-today{background-color:#f0f0c0}.cmb2-element .ui-datepicker td.ui-datepicker-current-day,.cmb2-element.ui-datepicker td.ui-datepicker-current-day{background:#bd8}.cmb2-element .ui-datepicker td .ui-state-default,.cmb2-element.ui-datepicker td .ui-state-default{background:0 0;border:none;text-align:center;text-decoration:none;width:auto;display:block;padding:5px 10px;font-weight:400;color:#444}.cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default,.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default{opacity:.5}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{background:#32373c}.cmb2-element .ui-datepicker td .ui-state-active,.cmb2-element .ui-datepicker td .ui-state-hover,.cmb2-element.ui-datepicker td .ui-state-active,.cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.cmb2-element .ui-datepicker .ui-timepicker-div,.cmb2-element.ui-datepicker .ui-timepicker-div{font-size:14px}.cmb2-element .ui-datepicker .ui-timepicker-div dl,.cmb2-element.ui-datepicker .ui-timepicker-div dl{text-align:right;padding:0 .6em}.cmb2-element .ui-datepicker .ui-timepicker-div dl dt,.cmb2-element.ui-datepicker .ui-timepicker-div dl dt{float:right;clear:right;padding:0 5px 0 0}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd{margin:0 40% 10px 10px}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd select,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select{width:100%}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane{padding:.6em;text-align:right}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary{padding:0 10px 1px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin:0 .4em .4em .6em}.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.admin-color-fresh .cmb2-element .ui-datepicker thead,.admin-color-fresh .cmb2-element.ui-datepicker thead{background:#32373c}.admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header{background:#52accc}.admin-color-blue .cmb2-element .ui-datepicker thead,.admin-color-blue .cmb2-element.ui-datepicker thead{background:#4796b3}.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover{background:#096484;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header{background:#59524c}.admin-color-coffee .cmb2-element .ui-datepicker thead,.admin-color-coffee .cmb2-element.ui-datepicker thead{background:#46403c}.admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover{background:#c7a589;color:#fff}.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header{background:#523f6d}.admin-color-ectoplasm .cmb2-element .ui-datepicker thead,.admin-color-ectoplasm .cmb2-element.ui-datepicker thead{background:#413256}.admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover{background:#a3b745;color:#fff}.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header{background:#363b3f}.admin-color-midnight .cmb2-element .ui-datepicker thead,.admin-color-midnight .cmb2-element.ui-datepicker thead{background:#26292c}.admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover{background:#e14d43;color:#fff}.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header{background:#738e96}.admin-color-ocean .cmb2-element .ui-datepicker thead,.admin-color-ocean .cmb2-element.ui-datepicker thead{background:#627c83}.admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover{background:#9ebaa0;color:#fff}.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header{background:#cf4944}.admin-color-sunrise .cmb2-element .ui-datepicker th,.admin-color-sunrise .cmb2-element.ui-datepicker th{border-color:#be3631;background:#be3631}.admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover{background:#dd823b;color:#fff}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header{background:#e5e5e5}.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year{color:#555}.admin-color-light .cmb2-element .ui-datepicker thead,.admin-color-light .cmb2-element.ui-datepicker thead{background:#888}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default{color:#555}.admin-color-light .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover{background:#ccc}.admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header{background:#56b274}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead{background:#36533f}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover{background:#446950;color:#fff}.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header{background:#4ca26a}.admin-color-bbp-mint .cmb2-element .ui-datepicker thead,.admin-color-bbp-mint .cmb2-element.ui-datepicker thead{background:#4f6d59}.admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover{background:#5fb37c;color:#fff}.cmb2-char-counter-wrap{margin:.5em 0 1em}.cmb2-char-counter-wrap input[type=text]{font-size:12px;width:25px}.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=text]{border-color:#a00!important}.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg{display:inline-block}.cmb2-char-max-msg{color:#a00;display:none;font-weight:600;margin-right:1em}"},{"base":"plugins","rel":"seo-by-rank-math/vendor/cmb2/cmb2/css/cmb2.min.css","ext":"css","size":32937,"mtime":1757324689,"type":"text","content":"@charset \"UTF-8\";.cmb2-wrap{margin:0}.cmb2-wrap input,.cmb2-wrap textarea{max-width:100%}.cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb2-wrap textarea{width:500px;padding:8px}.cmb2-wrap textarea.cmb2-textarea-code{font-family:\"Courier 10 Pitch\",Courier,monospace;line-height:16px}.cmb2-wrap input.cmb2-text-small,.cmb2-wrap input.cmb2-timepicker{width:100px}.cmb2-wrap input.cmb2-text-money{width:90px}.cmb2-wrap input.cmb2-text-medium{width:230px}.cmb2-wrap input.cmb2-upload-file{width:65%}.cmb2-wrap input.ed_button{padding:2px 4px}.cmb2-wrap input:not([type=hidden])+.button-secondary,.cmb2-wrap input:not([type=hidden])+input,.cmb2-wrap input:not([type=hidden])+select{margin-left:20px}.cmb2-wrap ul{margin:0}.cmb2-wrap li{font-size:14px;line-height:16px;margin:1px 0 5px 0}.cmb2-wrap select{font-size:14px;margin-top:3px}.cmb2-wrap input:focus,.cmb2-wrap textarea:focus{background:#fffff8}.cmb2-wrap input[type=radio]{margin:0 5px 0 0;padding:0}.cmb2-wrap input[type=checkbox]{margin:0 5px 0 0;padding:0}.cmb2-wrap .button-secondary,.cmb2-wrap button{white-space:nowrap}.cmb2-wrap .mceLayout{border:1px solid #e9e9e9!important}.cmb2-wrap .mceIframeContainer{background:#fff}.cmb2-wrap .meta_mce{width:97%}.cmb2-wrap .meta_mce textarea{width:100%}.cmb2-wrap .cmb-multicheck-toggle{margin-top:-1em}.cmb2-wrap .wp-picker-clear.button,.cmb2-wrap .wp-picker-default.button{margin-left:6px;padding:2px 8px}.cmb2-wrap .cmb-row{margin:0}.cmb2-wrap .cmb-row:after{content:'';clear:both;display:block;width:100%}.cmb2-wrap .cmb-row.cmb-repeat .cmb2-metabox-description{padding-top:0;padding-bottom:1em}body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.1875rem}@media screen and (max-width:782px){body.block-editor-page.branch-5-3 .cmb2-wrap .cmb-row .cmb2-radio-list input[type=radio]::before{margin:.4375rem}}.cmb2-metabox{clear:both;margin:0}.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox .cmb-field-list>.cmb-row:first-of-type>.cmb-th,.cmb2-metabox>.cmb-row:first-of-type>.cmb-td,.cmb2-metabox>.cmb-row:first-of-type>.cmb-th{border:0}.cmb-add-row{margin:1.8em 0 0}.cmb-nested .cmb-td,.cmb-repeatable-group .cmb-th,.cmb-repeatable-group:first-of-type{border:0}.cmb-repeatable-group:last-of-type,.cmb-row:last-of-type,.cmb2-wrap .cmb-row:last-of-type{border-bottom:0}.cmb-repeatable-grouping{border:1px solid #e9e9e9;padding:0 1em}.cmb-repeatable-grouping.cmb-row{margin:0 0 .8em}.cmb-th{color:#222;float:left;font-weight:600;padding:20px 10px 20px 0;vertical-align:top;width:200px}@media (max-width:450px){.cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:left;width:100%}.cmb-th label{display:block;margin-top:0;margin-bottom:.5em}}.cmb-td{line-height:1.3;max-width:100%;padding:15px 10px;vertical-align:middle}.cmb-type-title .cmb-td{padding:0}.cmb-th label{display:block;padding:5px 0}.cmb-th+.cmb-td{float:left}.cmb-td .cmb-td{padding-bottom:1em}.cmb-remove-row{text-align:right}.empty-row.hidden{display:none}.cmb-repeat-table{background-color:#fafafa;border:1px solid #e1e1e1}.cmb-repeat-table .cmb-row.cmb-repeat-row{position:relative;counter-increment:el;margin:0;padding:10px 10px 10px 50px;border-bottom:none!important}.cmb-repeat-table .cmb-row.cmb-repeat-row+.cmb-repeat-row{border-top:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row.ui-sortable-helper{outline:dashed 2px #e9e9e9!important}.cmb-repeat-table .cmb-row.cmb-repeat-row:before{content:counter(el);display:block;top:0;left:0;position:absolute;width:35px;height:100%;line-height:35px;cursor:move;color:#757575;text-align:center;border-right:solid 1px #e9e9e9}.cmb-repeat-table .cmb-row.cmb-repeat-row .cmb-td{margin:0;padding:0}.cmb-repeat-table+.cmb-add-row{margin:0}.cmb-repeat-table+.cmb-add-row:before{content:'';width:1px;height:1.6em;display:block;margin-left:17px;background-color:#dcdcdc}.cmb-repeat-table .cmb-remove-row{top:7px;right:7px;position:absolute;width:auto;margin-left:0;padding:0!important;display:none}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button{font-size:20px;text-indent:-1000px;overflow:hidden;position:relative;height:auto;line-height:1;padding:0 10px 0}.cmb-repeat-table .cmb-remove-row>.cmb-remove-row-button:before{content:\"\";font-family:Dashicons;speak:none;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;margin:0;text-indent:0;position:absolute;top:0;left:0;width:100%;height:100%;text-align:center;line-height:1.3}.cmb-repeat-table .cmb-repeat-row:hover .cmb-remove-row{display:block}.cmb-repeatable-group .cmb-th{padding:5px}.cmb-repeatable-group .cmb-group-title{background-color:#e9e9e9;padding:8px 12px 8px 2.2em;margin:0 -1em;min-height:1.5em;font-size:14px;line-height:1.4}.cmb-repeatable-group .cmb-group-title h4{border:0;margin:0;font-size:1.2em;font-weight:500;padding:.5em .75em}.cmb-repeatable-group .cmb-group-title .cmb-th{display:block;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th{font-size:1.2em;display:block;float:none;padding-bottom:1em;text-align:left;width:100%}.cmb-repeatable-group .cmb-group-description .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}.cmb-repeatable-group .cmb-shift-rows{margin-right:1em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-up-alt2{margin-top:.15em}.cmb-repeatable-group .cmb-shift-rows .dashicons-arrow-down-alt2{margin-top:.2em}.cmb-repeatable-group .cmb2-upload-button{float:right}p.cmb2-metabox-description{color:#666;letter-spacing:.01em;margin:0;padding-top:.5em}span.cmb2-metabox-description{color:#666;letter-spacing:.01em}.cmb2-metabox-title{margin:0 0 5px 0;padding:5px 0 0 0;font-size:14px}.cmb-inline ul{padding:4px 0 0 0}.cmb-inline li{display:inline-block;padding-right:18px}.cmb-type-textarea-code pre{margin:0}.cmb2-media-status .img-status{clear:none;display:inline-block;vertical-align:middle;margin-right:10px;width:auto}.cmb2-media-status .img-status img{max-width:350px;height:auto}.cmb2-media-status .embed-status,.cmb2-media-status .img-status img{background:#eee;border:5px solid #fff;outline:1px solid #e9e9e9;box-shadow:inset 0 0 15px rgba(0,0,0,.3),inset 0 0 0 1px rgba(0,0,0,.05);background-image:linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0),linear-gradient(45deg,#d0d0d0 25%,transparent 25%,transparent 75%,#d0d0d0 75%,#d0d0d0);background-position:0 0,10px 10px;background-size:20px 20px;border-radius:2px;-moz-border-radius:2px;margin:15px 0 0 0}.cmb2-media-status .embed-status{float:left;max-width:800px}.cmb2-media-status .embed-status,.cmb2-media-status .img-status{position:relative}.cmb2-media-status .embed-status .cmb2-remove-file-button,.cmb2-media-status .img-status .cmb2-remove-file-button{background:url(../images/ico-delete.png);height:16px;left:-5px;position:absolute;text-indent:-9999px;top:-5px;width:16px}.cmb2-media-status .img-status .cmb2-remove-file-button{top:10px}.cmb2-media-status .file-status>span,.cmb2-media-status .img-status img{cursor:pointer}.cmb2-media-status.cmb-attach-list .file-status>span,.cmb2-media-status.cmb-attach-list .img-status img{cursor:move}.cmb-type-file-list .cmb2-media-status .img-status{clear:none;vertical-align:middle;width:auto;margin-right:10px;margin-bottom:10px;margin-top:0}.cmb-attach-list li{clear:both;display:inline-block;width:100%;margin-top:5px;margin-bottom:10px}.cmb-attach-list li img{float:left;margin-right:10px}.cmb2-remove-wrapper{margin:0}.child-cmb2 .cmb-th{text-align:left}.cmb2-indented-hierarchy{padding-left:1.5em}@media (max-width:450px){.cmb-td,.cmb-th,.cmb-th+.cmb-td{display:block;float:none;width:100%}}#poststuff .cmb-group-title{margin-left:-1em;margin-right:-1em;min-height:1.5em}#poststuff .repeatable .cmb-group-title{padding-left:2.2em}.cmb-type-group .cmb2-wrap,.cmb2-postbox .cmb2-wrap{margin:0}.cmb-type-group .cmb2-wrap>.cmb-field-list>.cmb-row,.cmb2-postbox .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.8em 0}.cmb-type-group .cmb2-wrap input[type=text].cmb2-oembed,.cmb2-postbox .cmb2-wrap input[type=text].cmb2-oembed{width:100%}.cmb-type-group .cmb-row,.cmb2-postbox .cmb-row{padding:0 0 1.8em;margin:0 0 .8em}.cmb-type-group .cmb-row .cmbhandle,.cmb2-postbox .cmb-row .cmbhandle{right:-1em;position:relative;color:#222}.cmb-type-group .cmb-repeatable-grouping,.cmb2-postbox .cmb-repeatable-grouping{padding:0 1em;max-width:100%;min-width:1px!important}.cmb-type-group .cmb-repeatable-group>.cmb-row,.cmb2-postbox .cmb-repeatable-group>.cmb-row{padding-bottom:0}.cmb-type-group .cmb-th,.cmb2-postbox .cmb-th{width:18%;padding:0 2% 0 0}.cmb-type-group .cmb-td,.cmb2-postbox .cmb-td{margin-bottom:0;padding:0;line-height:1.3}.cmb-type-group .cmb-th+.cmb-td,.cmb2-postbox .cmb-th+.cmb-td{width:80%;float:right}.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:1px solid #e9e9e9}@media (max-width:450px){.cmb-type-group .cmb-repeatable-group:not(:last-of-type),.cmb-type-group .cmb-row:not(:last-of-type),.cmb2-postbox .cmb-repeatable-group:not(:last-of-type),.cmb2-postbox .cmb-row:not(:last-of-type){border-bottom:0}}.cmb-type-group .cmb-remove-field-row,.cmb-type-group .cmb-repeat-group-field,.cmb2-postbox .cmb-remove-field-row,.cmb2-postbox .cmb-repeat-group-field{padding-top:1.8em}.cmb-type-group .button-secondary .dashicons,.cmb2-postbox .button-secondary .dashicons{line-height:1.3}.cmb-type-group .button-secondary.move-down .dashicons,.cmb-type-group .button-secondary.move-up .dashicons,.cmb2-postbox .button-secondary.move-down .dashicons,.cmb2-postbox .button-secondary.move-up .dashicons{line-height:1.1}.cmb-type-group .button-secondary.cmb-add-group-row .dashicons,.cmb2-postbox .button-secondary.cmb-add-group-row .dashicons{line-height:1.5}.js .cmb2-postbox.context-box .handlediv{text-align:center}.js .cmb2-postbox.context-box .toggle-indicator:before{content:\"\\f142\";display:inline-block;font:normal 20px/1 dashicons;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.js .cmb2-postbox.context-box.closed .toggle-indicator:before{content:\"\\f140\"}.cmb2-postbox.context-box{margin-bottom:10px}.cmb2-postbox.context-box.context-before_permalink-box{margin-top:10px}.cmb2-postbox.context-box.context-after_title-box{margin-top:10px}.cmb2-postbox.context-box.context-after_editor-box{margin-top:20px;margin-bottom:0}.cmb2-postbox.context-box.context-form_top-box{margin-top:10px}.cmb2-postbox.context-box.context-form_top-box .hndle{font-size:14px;padding:8px 12px;margin:0;line-height:1.4}.cmb2-postbox.context-box .hndle{cursor:auto}.cmb2-context-wrap{margin-top:10px}.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-right:300px;width:auto}.cmb2-context-wrap.cmb2-context-wrap-no-title .cmb2-metabox{padding:10px}.cmb2-context-wrap .cmb-th{padding:0 2% 0 0;width:18%}.cmb2-context-wrap .cmb-td{width:80%;padding:0}.cmb2-context-wrap .cmb-row{margin-bottom:10px}.cmb2-context-wrap .cmb-row:last-of-type{margin-bottom:0}@media only screen and (max-width:850px){.cmb2-context-wrap.cmb2-context-wrap-form_top{margin-right:0}}.cmb2-options-page{max-width:1200px}.cmb2-options-page.wrap>h2{margin-bottom:1em}.cmb2-options-page .cmb2-metabox>.cmb-row{padding:1em;margin-top:-1px;background:#fff;border:1px solid #e9e9e9;box-shadow:0 1px 1px rgba(0,0,0,.05)}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th{padding:0;font-weight:initial}.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{float:none;padding:0 0 0 1em;margin-left:200px}@media (max-width:450px){.cmb2-options-page .cmb2-metabox>.cmb-row>.cmb-th+.cmb-td{padding:0;margin-left:0}}.cmb2-options-page .cmb2-wrap .cmb-type-title{margin-top:1em;padding:.6em 1em;background-color:#fafafa}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-title{font-size:12px;margin-top:0;margin-bottom:0;text-transform:uppercase}.cmb2-options-page .cmb2-wrap .cmb-type-title .cmb2-metabox-description{padding-top:.25em}.cmb2-options-page .cmb-repeatable-group .cmb-group-description .cmb-th{padding:0 0 .8em 0}.cmb2-options-page .cmb-repeatable-group .cmb-group-name{font-size:16px;margin-top:0;margin-bottom:0}.cmb2-options-page .cmb-repeatable-group .cmb-th>.cmb2-metabox-description{font-weight:400;padding-bottom:0!important}#addtag .cmb-th{float:none;width:auto;padding:20px 0 0}#addtag .cmb-td{padding:0}#addtag .cmb-th+.cmb-td{float:none}#addtag select{max-width:100%}#addtag .cmb2-metabox{padding-bottom:20px}#addtag .cmb-row li label{display:inline}#poststuff .cmb-repeatable-group h2{margin:0}.edit-tags-php .cmb2-metabox-title,.profile-php .cmb2-metabox-title,.user-edit-php .cmb2-metabox-title{font-size:1.4em}.cmb2-no-box-wrap .cmb-spinner,.cmb2-postbox .cmb-spinner{float:left;display:none}.cmb-spinner{display:none}.cmb-spinner.is-active{display:block}#side-sortables .cmb2-wrap>.cmb-field-list>.cmb-row,.inner-sidebar .cmb2-wrap>.cmb-field-list>.cmb-row{padding:1.4em 0}#side-sortables .cmb2-wrap input[type=text]:not(.wp-color-picker),.inner-sidebar .cmb2-wrap input[type=text]:not(.wp-color-picker){width:100%}#side-sortables .cmb2-wrap input+input:not(.wp-picker-clear),#side-sortables .cmb2-wrap input+select,.inner-sidebar .cmb2-wrap input+input:not(.wp-picker-clear),.inner-sidebar .cmb2-wrap input+select{margin-left:0;margin-top:1em;display:block}#side-sortables .cmb2-wrap input.cmb2-text-money,.inner-sidebar .cmb2-wrap input.cmb2-text-money{max-width:70%}#side-sortables .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description,.inner-sidebar .cmb2-wrap input.cmb2-text-money+.cmb2-metabox-description{display:block}#side-sortables .cmb2-wrap label,.inner-sidebar .cmb2-wrap label{display:block;font-weight:700;padding:0 0 5px}#side-sortables textarea,.inner-sidebar textarea{max-width:99%}#side-sortables .cmb-repeatable-group,.inner-sidebar .cmb-repeatable-group{border-bottom:1px solid #e9e9e9}#side-sortables .cmb-type-group>.cmb-td>.cmb-repeatable-group,.inner-sidebar .cmb-type-group>.cmb-td>.cmb-repeatable-group{border-bottom:0;margin-bottom:-1.4em}#side-sortables .cmb-td:not(.cmb-remove-row),#side-sortables .cmb-th,#side-sortables .cmb-th+.cmb-td,.inner-sidebar .cmb-td:not(.cmb-remove-row),.inner-sidebar .cmb-th,.inner-sidebar .cmb-th+.cmb-td{width:100%;display:block;float:none}#side-sortables .closed .inside,.inner-sidebar .closed .inside{display:none}#side-sortables .cmb-th,.inner-sidebar .cmb-th{display:block;float:none;padding-bottom:1em;text-align:left;width:100%;padding-left:0;padding-right:0}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{display:block;margin-top:0;margin-bottom:.5em}#side-sortables .cmb-th label,.inner-sidebar .cmb-th label{font-size:14px;line-height:1.4em}#side-sortables .cmb-group-description .cmb-th,.inner-sidebar .cmb-group-description .cmb-th{padding-top:0}#side-sortables .cmb-group-description .cmb2-metabox-description,.inner-sidebar .cmb-group-description .cmb2-metabox-description{padding:0}#side-sortables .cmb-group-title .cmb-th,.inner-sidebar .cmb-group-title .cmb-th{padding:0}#side-sortables .cmb-repeatable-grouping+.cmb-repeatable-grouping,.inner-sidebar .cmb-repeatable-grouping+.cmb-repeatable-grouping{margin-top:1em}#side-sortables .cmb2-media-status .embed-status img,#side-sortables .cmb2-media-status .img-status img,.inner-sidebar .cmb2-media-status .embed-status img,.inner-sidebar .cmb2-media-status .img-status img{max-width:90%;height:auto}#side-sortables .cmb2-list label,.inner-sidebar .cmb2-list label{display:inline;font-weight:400}#side-sortables .cmb2-metabox-description,.inner-sidebar .cmb2-metabox-description{display:block;padding:7px 0 0}#side-sortables .cmb-type-checkbox .cmb-td label,#side-sortables .cmb-type-checkbox .cmb2-metabox-description,.inner-sidebar .cmb-type-checkbox .cmb-td label,.inner-sidebar .cmb-type-checkbox .cmb2-metabox-description{font-weight:400;display:inline}#side-sortables .cmb-row .cmb2-metabox-description,.inner-sidebar .cmb-row .cmb2-metabox-description{padding-bottom:1.8em}#side-sortables .cmb2-metabox-title,.inner-sidebar .cmb2-metabox-title{font-size:1.2em;font-style:italic}#side-sortables .cmb-remove-row,.inner-sidebar .cmb-remove-row{clear:both;padding-top:12px;padding-bottom:0}#side-sortables .cmb2-upload-button,.inner-sidebar .cmb2-upload-button{clear:both;margin-top:12px}.cmb2-metabox .cmbhandle{color:#757575;float:right;width:27px;height:30px;cursor:pointer;right:-1em;position:relative}.cmb2-metabox .cmbhandle:before{content:'\\f142';right:12px;font:normal 20px/1 dashicons;speak:none;display:inline-block;padding:8px 10px;top:0;position:relative;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none!important}.cmb2-metabox .postbox.closed .cmbhandle:before{content:'\\f140'}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row{-webkit-appearance:none!important;background:0 0!important;border:none!important;position:absolute;left:0;top:.5em;line-height:1em;padding:2px 6px 3px;opacity:.5}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]){cursor:pointer;color:#a00;opacity:1}.cmb2-metabox button.dashicons-before.dashicons-no-alt.cmb-remove-group-row:not([disabled]):hover{color:red}* html .cmb2-element.ui-helper-clearfix{height:1%}.cmb2-element .ui-datepicker,.cmb2-element.ui-datepicker{padding:0;margin:0;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0;background-color:#fff;border:1px solid #dfdfdf;border-top:none;-webkit-box-shadow:0 3px 6px rgba(0,0,0,.075);box-shadow:0 3px 6px rgba(0,0,0,.075);min-width:17em;width:auto}.cmb2-element .ui-datepicker *,.cmb2-element.ui-datepicker *{padding:0;font-family:\"Open Sans\",sans-serif;-webkit-border-radius:0;-moz-border-radius:0;border-radius:0}.cmb2-element .ui-datepicker table,.cmb2-element.ui-datepicker table{font-size:13px;margin:0;border:none;border-collapse:collapse}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background-image:none;border:none;color:#fff;font-weight:400}.cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover{background:0 0;border-color:transparent;cursor:pointer}.cmb2-element .ui-datepicker .ui-datepicker-title,.cmb2-element.ui-datepicker .ui-datepicker-title{margin:0;padding:10px 0;color:#fff;font-size:14px;line-height:14px;text-align:center}.cmb2-element .ui-datepicker .ui-datepicker-title select,.cmb2-element.ui-datepicker .ui-datepicker-title select{margin-top:-8px;margin-bottom:-8px}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-prev{position:relative;top:0;height:34px;width:34px}.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element .ui-datepicker .ui-state-hover.ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-next,.cmb2-element.ui-datepicker .ui-state-hover.ui-datepicker-prev{border:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover,.cmb2-element.ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover{left:0}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element .ui-datepicker .ui-datepicker-next-hover,.cmb2-element.ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next-hover{right:0}.cmb2-element .ui-datepicker .ui-datepicker-next span,.cmb2-element .ui-datepicker .ui-datepicker-prev span,.cmb2-element.ui-datepicker .ui-datepicker-next span,.cmb2-element.ui-datepicker .ui-datepicker-prev span{display:none}.cmb2-element .ui-datepicker .ui-datepicker-prev,.cmb2-element.ui-datepicker .ui-datepicker-prev{float:left}.cmb2-element .ui-datepicker .ui-datepicker-next,.cmb2-element.ui-datepicker .ui-datepicker-next{float:right}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{font:normal 20px/34px dashicons;padding-left:7px;color:#fff;speak:none;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;width:34px;height:34px}.cmb2-element .ui-datepicker .ui-datepicker-prev:before,.cmb2-element.ui-datepicker .ui-datepicker-prev:before{content:'\\f341'}.cmb2-element .ui-datepicker .ui-datepicker-next:before,.cmb2-element.ui-datepicker .ui-datepicker-next:before{content:'\\f345'}.cmb2-element .ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element .ui-datepicker .ui-datepicker-prev-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-next-hover:before,.cmb2-element.ui-datepicker .ui-datepicker-prev-hover:before{opacity:.7}.cmb2-element .ui-datepicker select.ui-datepicker-month,.cmb2-element .ui-datepicker select.ui-datepicker-year,.cmb2-element.ui-datepicker select.ui-datepicker-month,.cmb2-element.ui-datepicker select.ui-datepicker-year{width:33%;background:0 0;border-color:transparent;box-shadow:none;color:#fff}.cmb2-element .ui-datepicker select.ui-datepicker-month option,.cmb2-element .ui-datepicker select.ui-datepicker-year option,.cmb2-element.ui-datepicker select.ui-datepicker-month option,.cmb2-element.ui-datepicker select.ui-datepicker-year option{color:#333}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{color:#fff;font-weight:600}.cmb2-element .ui-datepicker thead th,.cmb2-element.ui-datepicker thead th{font-weight:400}.cmb2-element .ui-datepicker th,.cmb2-element.ui-datepicker th{padding:10px}.cmb2-element .ui-datepicker td,.cmb2-element.ui-datepicker td{padding:0;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-other-month,.cmb2-element.ui-datepicker td.ui-datepicker-other-month{border:transparent}.cmb2-element .ui-datepicker td.ui-datepicker-week-end,.cmb2-element.ui-datepicker td.ui-datepicker-week-end{background-color:#f4f4f4;border:1px solid #f4f4f4}.cmb2-element .ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-week-end.ui-datepicker-today{-webkit-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);-moz-box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1);box-shadow:inset 0 0 1px 0 rgba(0,0,0,.1)}.cmb2-element .ui-datepicker td.ui-datepicker-today,.cmb2-element.ui-datepicker td.ui-datepicker-today{background-color:#f0f0c0}.cmb2-element .ui-datepicker td.ui-datepicker-current-day,.cmb2-element.ui-datepicker td.ui-datepicker-current-day{background:#bd8}.cmb2-element .ui-datepicker td .ui-state-default,.cmb2-element.ui-datepicker td .ui-state-default{background:0 0;border:none;text-align:center;text-decoration:none;width:auto;display:block;padding:5px 10px;font-weight:400;color:#444}.cmb2-element .ui-datepicker td.ui-state-disabled .ui-state-default,.cmb2-element.ui-datepicker td.ui-state-disabled .ui-state-default{opacity:.5}.cmb2-element .ui-datepicker .ui-datepicker-header,.cmb2-element .ui-datepicker .ui-widget-header,.cmb2-element.ui-datepicker .ui-datepicker-header,.cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.cmb2-element .ui-datepicker thead,.cmb2-element.ui-datepicker thead{background:#32373c}.cmb2-element .ui-datepicker td .ui-state-active,.cmb2-element .ui-datepicker td .ui-state-hover,.cmb2-element.ui-datepicker td .ui-state-active,.cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.cmb2-element .ui-datepicker .ui-timepicker-div,.cmb2-element.ui-datepicker .ui-timepicker-div{font-size:14px}.cmb2-element .ui-datepicker .ui-timepicker-div dl,.cmb2-element.ui-datepicker .ui-timepicker-div dl{text-align:left;padding:0 .6em}.cmb2-element .ui-datepicker .ui-timepicker-div dl dt,.cmb2-element.ui-datepicker .ui-timepicker-div dl dt{float:left;clear:left;padding:0 0 0 5px}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd{margin:0 10px 10px 40%}.cmb2-element .ui-datepicker .ui-timepicker-div dl dd select,.cmb2-element.ui-datepicker .ui-timepicker-div dl dd select{width:100%}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane{padding:.6em;text-align:left}.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element .ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-primary,.cmb2-element.ui-datepicker .ui-timepicker-div+.ui-datepicker-buttonpane .button-secondary{padding:0 10px 1px;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;margin:0 .6em .4em .4em}.admin-color-fresh .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-fresh .cmb2-element.ui-datepicker .ui-widget-header{background:#00a0d2}.admin-color-fresh .cmb2-element .ui-datepicker thead,.admin-color-fresh .cmb2-element.ui-datepicker thead{background:#32373c}.admin-color-fresh .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-fresh .cmb2-element.ui-datepicker td .ui-state-hover{background:#0073aa;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-blue .cmb2-element.ui-datepicker .ui-widget-header{background:#52accc}.admin-color-blue .cmb2-element .ui-datepicker thead,.admin-color-blue .cmb2-element.ui-datepicker thead{background:#4796b3}.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-blue .cmb2-element.ui-datepicker td .ui-state-hover{background:#096484;color:#fff}.admin-color-blue .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-blue .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-coffee .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-coffee .cmb2-element.ui-datepicker .ui-widget-header{background:#59524c}.admin-color-coffee .cmb2-element .ui-datepicker thead,.admin-color-coffee .cmb2-element.ui-datepicker thead{background:#46403c}.admin-color-coffee .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-coffee .cmb2-element.ui-datepicker td .ui-state-hover{background:#c7a589;color:#fff}.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ectoplasm .cmb2-element.ui-datepicker .ui-widget-header{background:#523f6d}.admin-color-ectoplasm .cmb2-element .ui-datepicker thead,.admin-color-ectoplasm .cmb2-element.ui-datepicker thead{background:#413256}.admin-color-ectoplasm .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ectoplasm .cmb2-element.ui-datepicker td .ui-state-hover{background:#a3b745;color:#fff}.admin-color-midnight .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-midnight .cmb2-element.ui-datepicker .ui-widget-header{background:#363b3f}.admin-color-midnight .cmb2-element .ui-datepicker thead,.admin-color-midnight .cmb2-element.ui-datepicker thead{background:#26292c}.admin-color-midnight .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-midnight .cmb2-element.ui-datepicker td .ui-state-hover{background:#e14d43;color:#fff}.admin-color-ocean .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-ocean .cmb2-element.ui-datepicker .ui-widget-header{background:#738e96}.admin-color-ocean .cmb2-element .ui-datepicker thead,.admin-color-ocean .cmb2-element.ui-datepicker thead{background:#627c83}.admin-color-ocean .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-ocean .cmb2-element.ui-datepicker td .ui-state-hover{background:#9ebaa0;color:#fff}.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-datepicker-header .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker .ui-widget-header{background:#cf4944}.admin-color-sunrise .cmb2-element .ui-datepicker th,.admin-color-sunrise .cmb2-element.ui-datepicker th{border-color:#be3631;background:#be3631}.admin-color-sunrise .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-sunrise .cmb2-element.ui-datepicker td .ui-state-hover{background:#dd823b;color:#fff}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-light .cmb2-element.ui-datepicker .ui-widget-header{background:#e5e5e5}.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element .ui-datepicker select.ui-datepicker-year,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-month,.admin-color-light .cmb2-element.ui-datepicker select.ui-datepicker-year{color:#555}.admin-color-light .cmb2-element .ui-datepicker thead,.admin-color-light .cmb2-element.ui-datepicker thead{background:#888}.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element .ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-default,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-next:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-prev:before,.admin-color-light .cmb2-element.ui-datepicker .ui-datepicker-title,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-default{color:#555}.admin-color-light .cmb2-element .ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-active,.admin-color-light .cmb2-element.ui-datepicker td .ui-state-hover{background:#ccc}.admin-color-light .cmb2-element .ui-datepicker td.ui-datepicker-today,.admin-color-light .cmb2-element.ui-datepicker td.ui-datepicker-today{background:#eee}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker .ui-widget-header{background:#56b274}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker thead,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker thead{background:#36533f}.admin-color-bbp-evergreen .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-evergreen .cmb2-element.ui-datepicker td .ui-state-hover{background:#446950;color:#fff}.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element .ui-datepicker .ui-widget-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-datepicker-header,.admin-color-bbp-mint .cmb2-element.ui-datepicker .ui-widget-header{background:#4ca26a}.admin-color-bbp-mint .cmb2-element .ui-datepicker thead,.admin-color-bbp-mint .cmb2-element.ui-datepicker thead{background:#4f6d59}.admin-color-bbp-mint .cmb2-element .ui-datepicker td .ui-state-hover,.admin-color-bbp-mint .cmb2-element.ui-datepicker td .ui-state-hover{background:#5fb37c;color:#fff}.cmb2-char-counter-wrap{margin:.5em 0 1em}.cmb2-char-counter-wrap input[type=text]{font-size:12px;width:25px}.cmb2-char-counter-wrap.cmb2-max-exceeded input[type=text]{border-color:#a00!important}.cmb2-char-counter-wrap.cmb2-max-exceeded .cmb2-char-max-msg{display:inline-block}.cmb2-char-max-msg{color:#a00;display:none;font-weight:600;margin-left:1em}"},{"base":"plugins","rel":"seo-by-rank-math/vendor/autoload.php","ext":"php","size":771,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload.php @generated by Composer\n\nif (PHP_VERSION_ID < 50600) {\n    if (!headers_sent()) {\n        header('HTTP/1.1 500 Internal Server Error');\n    }\n    $err = 'Composer 2.3.0 dropped support for autoloading on PHP <5.6 and you are running '.PHP_VERSION.', please upgrade PHP or use Composer 2.2 LTS via \"composer self-update --2.2\". Aborting.'.PHP_EOL;\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, $err);\n        } elseif (!headers_sent()) {\n            echo $err;\n        }\n    }\n    trigger_error(\n        $err,\n        E_USER_ERROR\n    );\n}\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInite0da7526f14e2b3495b4ae1c6b762524::getLoader();\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/WP_Async_Request.php","ext":"php","size":3718,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * WP Async Request\n *\n * @package WP-Background-Processing\n */\n\n/*\nLibrary URI: https://github.com/deliciousbrains/wp-background-processing/blob/fbbc56f2480910d7959972ec9ec0819a13c6150a/classes/wp-async-request.php\nAuthor: Delicious Brains Inc.\nAuthor URI: https://deliciousbrains.com/\nLicense: GNU General Public License v2.0\nLicense URI: https://github.com/deliciousbrains/wp-background-processing/commit/126d7945dd3d39f39cb6488ca08fe1fb66cb351a\n*/\n\nif ( ! class_exists( 'WP_Async_Request' ) ) {\n\n\t/**\n\t * Abstract WP_Async_Request class.\n\t *\n\t * @abstract\n\t */\n\tabstract class WP_Async_Request {\n\n\t\t/**\n\t\t * Prefix\n\t\t *\n\t\t * (default value: 'wp')\n\t\t *\n\t\t * @var string\n\t\t */\n\t\tprotected $prefix = 'wp';\n\n\t\t/**\n\t\t * Action\n\t\t *\n\t\t * (default value: 'async_request')\n\t\t *\n\t\t * @var string\n\t\t */\n\t\tprotected $action = 'async_request';\n\n\t\t/**\n\t\t * Identifier\n\t\t *\n\t\t * @var mixed\n\t\t */\n\t\tprotected $identifier;\n\n\t\t/**\n\t\t * Data\n\t\t *\n\t\t * (default value: array())\n\t\t *\n\t\t * @var array\n\t\t */\n\t\tprotected $data = array();\n\n\t\t/**\n\t\t * Initiate new async request\n\t\t */\n\t\tpublic function __construct() {\n\t\t\t$this->identifier = $this->prefix . '_' . $this->action;\n\n\t\t\tadd_action( 'wp_ajax_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t\tadd_action( 'wp_ajax_nopriv_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t}\n\n\t\t/**\n\t\t * Set data used during the request\n\t\t *\n\t\t * @param array $data Data.\n\t\t *\n\t\t * @return $this\n\t\t */\n\t\tpublic function data( $data ) {\n\t\t\t$this->data = $data;\n\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * Dispatch the async request\n\t\t *\n\t\t * @return array|WP_Error\n\t\t */\n\t\tpublic function dispatch() {\n\t\t\t$url  = add_query_arg( $this->get_query_args(), $this->get_query_url() );\n\t\t\t$args = $this->get_post_args();\n\n\t\t\treturn wp_remote_post( esc_url_raw( $url ), $args );\n\t\t}\n\n\t\t/**\n\t\t * Get query args\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tprotected function get_query_args() {\n\t\t\tif ( property_exists( $this, 'query_args' ) ) {\n\t\t\t\treturn $this->query_args;\n\t\t\t}\n\n\t\t\t$args = array(\n\t\t\t\t'action' => $this->identifier,\n\t\t\t\t'nonce'  => wp_create_nonce( $this->identifier ),\n\t\t\t);\n\n\t\t\t/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param array $url\n\t\t\t */\n\t\t\treturn apply_filters( $this->identifier . '_query_args', $args );\n\t\t}\n\n\t\t/**\n\t\t * Get query URL\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tprotected function get_query_url() {\n\t\t\tif ( property_exists( $this, 'query_url' ) ) {\n\t\t\t\treturn $this->query_url;\n\t\t\t}\n\n\t\t\t$url = admin_url( 'admin-ajax.php' );\n\n\t\t\t/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param string $url\n\t\t\t */\n\t\t\treturn apply_filters( $this->identifier . '_query_url', $url );\n\t\t}\n\n\t\t/**\n\t\t * Get post args\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tprotected function get_post_args() {\n\t\t\tif ( property_exists( $this, 'post_args' ) ) {\n\t\t\t\treturn $this->post_args;\n\t\t\t}\n\n\t\t\t$args = array(\n\t\t\t\t'timeout'   => 0.01,\n\t\t\t\t'blocking'  => false,\n\t\t\t\t'body'      => $this->data,\n\t\t\t\t'cookies'   => $_COOKIE,\n\t\t\t\t'sslverify' => apply_filters( 'https_local_ssl_verify', false ),\n\t\t\t);\n\n\t\t\t/**\n\t\t\t * Filters the post arguments used during an async request.\n\t\t\t *\n\t\t\t * @param array $args\n\t\t\t */\n\t\t\treturn apply_filters( $this->identifier . '_post_args', $args );\n\t\t}\n\n\t\t/**\n\t\t * Maybe handle\n\t\t *\n\t\t * Check for correct nonce and pass to handler.\n\t\t */\n\t\tpublic function maybe_handle() {\n\t\t\t// Don't lock up other requests while processing.\n\t\t\tsession_write_close();\n\n\t\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t\t$this->handle();\n\n\t\t\twp_die();\n\t\t}\n\n\t\t/**\n\t\t * Handle\n\t\t *\n\t\t * Override this method to perform any actions required\n\t\t * during the async request.\n\t\t */\n\t\tabstract protected function handle();\n\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_MinutesField.php","ext":"php","size":761,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Minutes field.  Allows: * , / -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\nclass CronExpression_MinutesField extends CronExpression_AbstractField\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('i'), $value);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 minute');\n        } else {\n            $date->modify('+1 minute');\n        }\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function validate($value)\n    {\n        return (bool) preg_match('/[\\*,\\/\\-0-9]+/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_FieldInterface.php","ext":"php","size":1138,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * CRON field interface\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\ninterface CronExpression_FieldInterface\n{\n    /**\n     * Check if the respective value of a DateTime field satisfies a CRON exp\n     *\n     * @param DateTime $date  DateTime object to check\n     * @param string   $value CRON expression to test against\n     *\n     * @return bool Returns TRUE if satisfied, FALSE otherwise\n     */\n    public function isSatisfiedBy(DateTime $date, $value);\n\n    /**\n     * When a CRON expression is not satisfied, this method is used to increment\n     * or decrement a DateTime object by the unit of the cron field\n     *\n     * @param DateTime $date   DateTime object to change\n     * @param bool     $invert (optional) Set to TRUE to decrement\n     *\n     * @return CronExpression_FieldInterface\n     */\n    public function increment(DateTime $date, $invert = false);\n\n    /**\n     * Validates a CRON expression for a given field\n     *\n     * @param string $value CRON expression value to validate\n     *\n     * @return bool Returns TRUE if valid, FALSE otherwise\n     */\n    public function validate($value);\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression.php","ext":"php","size":11615,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * CRON expression parser that can determine whether or not a CRON expression is\n * due to run, the next run date and previous run date of a CRON expression.\n * The determinations made by this class are accurate if checked run once per\n * minute (seconds are dropped from date time comparisons).\n *\n * Schedule parts must map to:\n * minute [0-59], hour [0-23], day of month, month [1-12|JAN-DEC], day of week\n * [1-7|MON-SUN], and an optional year.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n * @link http://en.wikipedia.org/wiki/Cron\n */\nclass CronExpression\n{\n    const MINUTE = 0;\n    const HOUR = 1;\n    const DAY = 2;\n    const MONTH = 3;\n    const WEEKDAY = 4;\n    const YEAR = 5;\n\n    /**\n     * @var array CRON expression parts\n     */\n    private $cronParts;\n\n    /**\n     * @var CronExpression_FieldFactory CRON field factory\n     */\n    private $fieldFactory;\n\n    /**\n     * @var array Order in which to test of cron parts\n     */\n    private static $order = array(self::YEAR, self::MONTH, self::DAY, self::WEEKDAY, self::HOUR, self::MINUTE);\n\n    /**\n     * Factory method to create a new CronExpression.\n     *\n     * @param string $expression The CRON expression to create.  There are\n     *      several special predefined values which can be used to substitute the\n     *      CRON expression:\n     *\n     *      @yearly, @annually) - Run once a year, midnight, Jan. 1 - 0 0 1 1 *\n     *      @monthly - Run once a month, midnight, first of month - 0 0 1 * *\n     *      @weekly - Run once a week, midnight on Sun - 0 0 * * 0\n     *      @daily - Run once a day, midnight - 0 0 * * *\n     *      @hourly - Run once an hour, first minute - 0 * * * *\n     *\n*@param CronExpression_FieldFactory $fieldFactory (optional) Field factory to use\n     *\n     * @return CronExpression\n     */\n    public static function factory($expression, ?CronExpression_FieldFactory $fieldFactory = null)\n    {\n        $mappings = array(\n            '@yearly' => '0 0 1 1 *',\n            '@annually' => '0 0 1 1 *',\n            '@monthly' => '0 0 1 * *',\n            '@weekly' => '0 0 * * 0',\n            '@daily' => '0 0 * * *',\n            '@hourly' => '0 * * * *'\n        );\n\n        if (isset($mappings[$expression])) {\n            $expression = $mappings[$expression];\n        }\n\n        return new self($expression, $fieldFactory ? $fieldFactory : new CronExpression_FieldFactory());\n    }\n\n    /**\n     * Parse a CRON expression\n     *\n     * @param string       $expression   CRON expression (e.g. '8 * * * *')\n     * @param CronExpression_FieldFactory $fieldFactory Factory to create cron fields\n     */\n    public function __construct($expression, CronExpression_FieldFactory $fieldFactory)\n    {\n        $this->fieldFactory = $fieldFactory;\n        $this->setExpression($expression);\n    }\n\n    /**\n     * Set or change the CRON expression\n     *\n     * @param string $value CRON expression (e.g. 8 * * * *)\n     *\n     * @return CronExpression\n     * @throws InvalidArgumentException if not a valid CRON expression\n     */\n    public function setExpression($value)\n    {\n        $this->cronParts = preg_split('/\\s/', $value, -1, PREG_SPLIT_NO_EMPTY);\n        if (count($this->cronParts) < 5) {\n            throw new InvalidArgumentException(\n                $value . ' is not a valid CRON expression'\n            );\n        }\n\n        foreach ($this->cronParts as $position => $part) {\n            $this->setPart($position, $part);\n        }\n\n        return $this;\n    }\n\n    /**\n     * Set part of the CRON expression\n     *\n     * @param int    $position The position of the CRON expression to set\n     * @param string $value    The value to set\n     *\n     * @return CronExpression\n     * @throws InvalidArgumentException if the value is not valid for the part\n     */\n    public function setPart($position, $value)\n    {\n        if (!$this->fieldFactory->getField($position)->validate($value)) {\n            throw new InvalidArgumentException(\n                'Invalid CRON field value ' . $value . ' as position ' . $position\n            );\n        }\n\n        $this->cronParts[$position] = $value;\n\n        return $this;\n    }\n\n    /**\n     * Get a next run date relative to the current date or a specific date\n     *\n     * @param string|DateTime $currentTime (optional) Relative calculation date\n     * @param int             $nth         (optional) Number of matches to skip before returning a\n     *     matching next run date.  0, the default, will return the current\n     *     date and time if the next run date falls on the current date and\n     *     time.  Setting this value to 1 will skip the first match and go to\n     *     the second match.  Setting this value to 2 will skip the first 2\n     *     matches and so on.\n     * @param bool $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     */\n    public function getNextRunDate($currentTime = 'now', $nth = 0, $allowCurrentDate = false)\n    {\n        return $this->getRunDate($currentTime, $nth, false, $allowCurrentDate);\n    }\n\n    /**\n     * Get a previous run date relative to the current date or a specific date\n     *\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param int             $nth              (optional) Number of matches to skip before returning\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     * @see CronExpression::getNextRunDate\n     */\n    public function getPreviousRunDate($currentTime = 'now', $nth = 0, $allowCurrentDate = false)\n    {\n        return $this->getRunDate($currentTime, $nth, true, $allowCurrentDate);\n    }\n\n    /**\n     * Get multiple run dates starting at the current date or a specific date\n     *\n     * @param int             $total            Set the total number of dates to calculate\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param bool            $invert           (optional) Set to TRUE to retrieve previous dates\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return array Returns an array of run dates\n     */\n    public function getMultipleRunDates($total, $currentTime = 'now', $invert = false, $allowCurrentDate = false)\n    {\n        $matches = array();\n        for ($i = 0; $i < max(0, $total); $i++) {\n            $matches[] = $this->getRunDate($currentTime, $i, $invert, $allowCurrentDate);\n        }\n\n        return $matches;\n    }\n\n    /**\n     * Get all or part of the CRON expression\n     *\n     * @param string $part (optional) Specify the part to retrieve or NULL to\n     *      get the full cron schedule string.\n     *\n     * @return string|null Returns the CRON expression, a part of the\n     *      CRON expression, or NULL if the part was specified but not found\n     */\n    public function getExpression($part = null)\n    {\n        if (null === $part) {\n            return implode(' ', $this->cronParts);\n        } elseif (array_key_exists($part, $this->cronParts)) {\n            return $this->cronParts[$part];\n        }\n\n        return null;\n    }\n\n    /**\n     * Helper method to output the full expression.\n     *\n     * @return string Full CRON expression\n     */\n    public function __toString()\n    {\n        return $this->getExpression();\n    }\n\n    /**\n     * Determine if the cron is due to run based on the current date or a\n     * specific date.  This method assumes that the current number of\n     * seconds are irrelevant, and should be called once per minute.\n     *\n     * @param string|DateTime $currentTime (optional) Relative calculation date\n     *\n     * @return bool Returns TRUE if the cron is due to run or FALSE if not\n     */\n    public function isDue($currentTime = 'now')\n    {\n        if ('now' === $currentTime) {\n            $currentDate = date('Y-m-d H:i');\n            $currentTime = strtotime($currentDate);\n        } elseif ($currentTime instanceof DateTime) {\n            $currentDate = $currentTime->format('Y-m-d H:i');\n            $currentTime = strtotime($currentDate);\n        } else {\n            $currentTime = new DateTime($currentTime);\n            $currentTime->setTime($currentTime->format('H'), $currentTime->format('i'), 0);\n            $currentDate = $currentTime->format('Y-m-d H:i');\n            $currentTime = (int)($currentTime->getTimestamp());\n        }\n\n        return $this->getNextRunDate($currentDate, 0, true)->getTimestamp() == $currentTime;\n    }\n\n    /**\n     * Get the next or previous run date of the expression relative to a date\n     *\n     * @param string|DateTime $currentTime      (optional) Relative calculation date\n     * @param int             $nth              (optional) Number of matches to skip before returning\n     * @param bool            $invert           (optional) Set to TRUE to go backwards in time\n     * @param bool            $allowCurrentDate (optional) Set to TRUE to return the\n     *     current date if it matches the cron expression\n     *\n     * @return DateTime\n     * @throws RuntimeException on too many iterations\n     */\n    protected function getRunDate($currentTime = null, $nth = 0, $invert = false, $allowCurrentDate = false)\n    {\n        if ($currentTime instanceof DateTime) {\n            $currentDate = $currentTime;\n        } else {\n            $currentDate = new DateTime($currentTime ? $currentTime : 'now');\n            $currentDate->setTimezone(new DateTimeZone(date_default_timezone_get()));\n        }\n\n        $currentDate->setTime($currentDate->format('H'), $currentDate->format('i'), 0);\n        $nextRun = clone $currentDate;\n        $nth = (int) $nth;\n\n        // Set a hard limit to bail on an impossible date\n        for ($i = 0; $i < 1000; $i++) {\n\n            foreach (self::$order as $position) {\n                $part = $this->getExpression($position);\n                if (null === $part) {\n                    continue;\n                }\n\n                $satisfied = false;\n                // Get the field object used to validate this part\n                $field = $this->fieldFactory->getField($position);\n                // Check if this is singular or a list\n                if (strpos($part, ',') === false) {\n                    $satisfied = $field->isSatisfiedBy($nextRun, $part);\n                } else {\n                    foreach (array_map('trim', explode(',', $part)) as $listPart) {\n                        if ($field->isSatisfiedBy($nextRun, $listPart)) {\n                            $satisfied = true;\n                            break;\n                        }\n                    }\n                }\n\n                // If the field is not satisfied, then start over\n                if (!$satisfied) {\n                    $field->increment($nextRun, $invert);\n                    continue 2;\n                }\n            }\n\n            // Skip this match if needed\n            if ((!$allowCurrentDate && $nextRun == $currentDate) || --$nth > -1) {\n                $this->fieldFactory->getField(0)->increment($nextRun, $invert);\n                continue;\n            }\n\n            return $nextRun;\n        }\n\n        // @codeCoverageIgnoreStart\n        throw new RuntimeException('Impossible CRON expression');\n        // @codeCoverageIgnoreEnd\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_HoursField.php","ext":"php","size":1157,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Hours field.  Allows: * , / -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\nclass CronExpression_HoursField extends CronExpression_AbstractField\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('H'), $value);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function increment(DateTime $date, $invert = false)\n    {\n        // Change timezone to UTC temporarily. This will\n        // allow us to go back or forwards and hour even\n        // if DST will be changed between the hours.\n        $timezone = $date->getTimezone();\n        $date->setTimezone(new DateTimeZone('UTC'));\n        if ($invert) {\n            $date->modify('-1 hour');\n            $date->setTime($date->format('H'), 59);\n        } else {\n            $date->modify('+1 hour');\n            $date->setTime($date->format('H'), 0);\n        }\n        $date->setTimezone($timezone);\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function validate($value)\n    {\n        return (bool) preg_match('/[\\*,\\/\\-0-9]+/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_DayOfMonthField.php","ext":"php","size":3596,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Day of month field.  Allows: * , / - ? L W\n *\n * 'L' stands for \"last\" and specifies the last day of the month.\n *\n * The 'W' character is used to specify the weekday (Monday-Friday) nearest the\n * given day. As an example, if you were to specify \"15W\" as the value for the\n * day-of-month field, the meaning is: \"the nearest weekday to the 15th of the\n * month\". So if the 15th is a Saturday, the trigger will fire on Friday the\n * 14th. If the 15th is a Sunday, the trigger will fire on Monday the 16th. If\n * the 15th is a Tuesday, then it will fire on Tuesday the 15th. However if you\n * specify \"1W\" as the value for day-of-month, and the 1st is a Saturday, the\n * trigger will fire on Monday the 3rd, as it will not 'jump' over the boundary\n * of a month's days. The 'W' character can only be specified when the\n * day-of-month is a single day, not a range or list of days.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\nclass CronExpression_DayOfMonthField extends CronExpression_AbstractField\n{\n    /**\n     * Get the nearest day of the week for a given day in a month\n     *\n     * @param int $currentYear  Current year\n     * @param int $currentMonth Current month\n     * @param int $targetDay    Target day of the month\n     *\n     * @return DateTime Returns the nearest date\n     */\n    private static function getNearestWeekday($currentYear, $currentMonth, $targetDay)\n    {\n        $tday = str_pad($targetDay, 2, '0', STR_PAD_LEFT);\n        $target = new DateTime(\"$currentYear-$currentMonth-$tday\");\n        $currentWeekday = (int) $target->format('N');\n\n        if ($currentWeekday < 6) {\n            return $target;\n        }\n\n        $lastDayOfMonth = $target->format('t');\n\n        foreach (array(-1, 1, -2, 2) as $i) {\n            $adjusted = $targetDay + $i;\n            if ($adjusted > 0 && $adjusted <= $lastDayOfMonth) {\n                $target->setDate($currentYear, $currentMonth, $adjusted);\n                if ($target->format('N') < 6 && $target->format('m') == $currentMonth) {\n                    return $target;\n                }\n            }\n        }\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        // ? states that the field value is to be skipped\n        if ($value == '?') {\n            return true;\n        }\n\n        $fieldValue = $date->format('d');\n\n        // Check to see if this is the last day of the month\n        if ($value == 'L') {\n            return $fieldValue == $date->format('t');\n        }\n\n        // Check to see if this is the nearest weekday to a particular value\n        if (strpos($value, 'W')) {\n            // Parse the target day\n            $targetDay = substr($value, 0, strpos($value, 'W'));\n            // Find out if the current day is the nearest day of the week\n            return $date->format('j') == self::getNearestWeekday(\n                $date->format('Y'),\n                $date->format('m'),\n                $targetDay\n            )->format('j');\n        }\n\n        return $this->isSatisfied($date->format('d'), $value);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('previous day');\n            $date->setTime(23, 59);\n        } else {\n            $date->modify('next day');\n            $date->setTime(0, 0);\n        }\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function validate($value)\n    {\n        return (bool) preg_match('/[\\*,\\/\\-\\?LW0-9A-Za-z]+/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_MonthField.php","ext":"php","size":1399,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Month field.  Allows: * , / -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\nclass CronExpression_MonthField extends CronExpression_AbstractField\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        // Convert text month values to integers\n        $value = str_ireplace(\n            array(\n                'JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN',\n                'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'\n            ),\n            range(1, 12),\n            $value\n        );\n\n        return $this->isSatisfied($date->format('m'), $value);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            // $date->modify('last day of previous month'); // remove for php 5.2 compat\n            $date->modify('previous month');\n            $date->modify($date->format('Y-m-t'));\n            $date->setTime(23, 59);\n        } else {\n            //$date->modify('first day of next month'); // remove for php 5.2 compat\n            $date->modify('next month');\n            $date->modify($date->format('Y-m-01'));\n            $date->setTime(0, 0);\n        }\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function validate($value)\n    {\n        return (bool) preg_match('/[\\*,\\/\\-0-9A-Z]+/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_FieldFactory.php","ext":"php","size":1745,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * CRON field factory implementing a flyweight factory\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n * @link http://en.wikipedia.org/wiki/Cron\n */\nclass CronExpression_FieldFactory\n{\n    /**\n     * @var array Cache of instantiated fields\n     */\n    private $fields = array();\n\n    /**\n     * Get an instance of a field object for a cron expression position\n     *\n     * @param int $position CRON expression position value to retrieve\n     *\n     * @return CronExpression_FieldInterface\n     * @throws InvalidArgumentException if a position is not valid\n     */\n    public function getField($position)\n    {\n        if (!isset($this->fields[$position])) {\n            switch ($position) {\n                case 0:\n                    $this->fields[$position] = new CronExpression_MinutesField();\n                    break;\n                case 1:\n                    $this->fields[$position] = new CronExpression_HoursField();\n                    break;\n                case 2:\n                    $this->fields[$position] = new CronExpression_DayOfMonthField();\n                    break;\n                case 3:\n                    $this->fields[$position] = new CronExpression_MonthField();\n                    break;\n                case 4:\n                    $this->fields[$position] = new CronExpression_DayOfWeekField();\n                    break;\n                case 5:\n                    $this->fields[$position] = new CronExpression_YearField();\n                    break;\n                default:\n                    throw new InvalidArgumentException(\n                        $position . ' is not a valid position'\n                    );\n            }\n        }\n\n        return $this->fields[$position];\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_DayOfWeekField.php","ext":"php","size":3921,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Day of week field.  Allows: * / , - ? L #\n *\n * Days of the week can be represented as a number 0-7 (0|7 = Sunday)\n * or as a three letter string: SUN, MON, TUE, WED, THU, FRI, SAT.\n *\n * 'L' stands for \"last\". It allows you to specify constructs such as\n * \"the last Friday\" of a given month.\n *\n * '#' is allowed for the day-of-week field, and must be followed by a\n * number between one and five. It allows you to specify constructs such as\n * \"the second Friday\" of a given month.\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\nclass CronExpression_DayOfWeekField extends CronExpression_AbstractField\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        if ($value == '?') {\n            return true;\n        }\n\n        // Convert text day of the week values to integers\n        $value = str_ireplace(\n            array('SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'),\n            range(0, 6),\n            $value\n        );\n\n        $currentYear = $date->format('Y');\n        $currentMonth = $date->format('m');\n        $lastDayOfMonth = $date->format('t');\n\n        // Find out if this is the last specific weekday of the month\n        if (strpos($value, 'L')) {\n            $weekday = str_replace('7', '0', substr($value, 0, strpos($value, 'L')));\n            $tdate = clone $date;\n            $tdate->setDate($currentYear, $currentMonth, $lastDayOfMonth);\n            while ($tdate->format('w') != $weekday) {\n                $tdate->setDate($currentYear, $currentMonth, --$lastDayOfMonth);\n            }\n\n            return $date->format('j') == $lastDayOfMonth;\n        }\n\n        // Handle # hash tokens\n        if (strpos($value, '#')) {\n            list($weekday, $nth) = explode('#', $value);\n            // Validate the hash fields\n            if ($weekday < 1 || $weekday > 5) {\n                throw new InvalidArgumentException(\"Weekday must be a value between 1 and 5. {$weekday} given\");\n            }\n            if ($nth > 5) {\n                throw new InvalidArgumentException('There are never more than 5 of a given weekday in a month');\n            }\n            // The current weekday must match the targeted weekday to proceed\n            if ($date->format('N') != $weekday) {\n                return false;\n            }\n\n            $tdate = clone $date;\n            $tdate->setDate($currentYear, $currentMonth, 1);\n            $dayCount = 0;\n            $currentDay = 1;\n            while ($currentDay < $lastDayOfMonth + 1) {\n                if ($tdate->format('N') == $weekday) {\n                    if (++$dayCount >= $nth) {\n                        break;\n                    }\n                }\n                $tdate->setDate($currentYear, $currentMonth, ++$currentDay);\n            }\n\n            return $date->format('j') == $currentDay;\n        }\n\n        // Handle day of the week values\n        if (strpos($value, '-')) {\n            $parts = explode('-', $value);\n            if ($parts[0] == '7') {\n                $parts[0] = '0';\n            } elseif ($parts[1] == '0') {\n                $parts[1] = '7';\n            }\n            $value = implode('-', $parts);\n        }\n\n        // Test to see which Sunday to use -- 0 == 7 == Sunday\n        $format = in_array(7, str_split($value)) ? 'N' : 'w';\n        $fieldValue = $date->format($format);\n\n        return $this->isSatisfied($fieldValue, $value);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 day');\n            $date->setTime(23, 59, 0);\n        } else {\n            $date->modify('+1 day');\n            $date->setTime(0, 0, 0);\n        }\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function validate($value)\n    {\n        return (bool) preg_match('/[\\*,\\/\\-0-9A-Z]+/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_YearField.php","ext":"php","size":937,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Year field.  Allows: * , / -\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\nclass CronExpression_YearField extends CronExpression_AbstractField\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function isSatisfiedBy(DateTime $date, $value)\n    {\n        return $this->isSatisfied($date->format('Y'), $value);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function increment(DateTime $date, $invert = false)\n    {\n        if ($invert) {\n            $date->modify('-1 year');\n            $date->setDate($date->format('Y'), 12, 31);\n            $date->setTime(23, 59, 0);\n        } else {\n            $date->modify('+1 year');\n            $date->setDate($date->format('Y'), 1, 1);\n            $date->setTime(0, 0, 0);\n        }\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function validate($value)\n    {\n        return (bool) preg_match('/[\\*,\\/\\-0-9]+/', $value);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/lib/cron-expression/CronExpression_AbstractField.php","ext":"php","size":2576,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Abstract CRON expression field\n *\n * @author Michael Dowling <mtdowling@gmail.com>\n */\nabstract class CronExpression_AbstractField implements CronExpression_FieldInterface\n{\n    /**\n     * Check to see if a field is satisfied by a value\n     *\n     * @param string $dateValue Date value to check\n     * @param string $value     Value to test\n     *\n     * @return bool\n     */\n    public function isSatisfied($dateValue, $value)\n    {\n        if ($this->isIncrementsOfRanges($value)) {\n            return $this->isInIncrementsOfRanges($dateValue, $value);\n        } elseif ($this->isRange($value)) {\n            return $this->isInRange($dateValue, $value);\n        }\n\n        return $value == '*' || $dateValue == $value;\n    }\n\n    /**\n     * Check if a value is a range\n     *\n     * @param string $value Value to test\n     *\n     * @return bool\n     */\n    public function isRange($value)\n    {\n        return strpos($value, '-') !== false;\n    }\n\n    /**\n     * Check if a value is an increments of ranges\n     *\n     * @param string $value Value to test\n     *\n     * @return bool\n     */\n    public function isIncrementsOfRanges($value)\n    {\n        return strpos($value, '/') !== false;\n    }\n\n    /**\n     * Test if a value is within a range\n     *\n     * @param string $dateValue Set date value\n     * @param string $value     Value to test\n     *\n     * @return bool\n     */\n    public function isInRange($dateValue, $value)\n    {\n        $parts = array_map('trim', explode('-', $value, 2));\n\n        return $dateValue >= $parts[0] && $dateValue <= $parts[1];\n    }\n\n    /**\n     * Test if a value is within an increments of ranges (offset[-to]/step size)\n     *\n     * @param string $dateValue Set date value\n     * @param string $value     Value to test\n     *\n     * @return bool\n     */\n    public function isInIncrementsOfRanges($dateValue, $value)\n    {\n        $parts = array_map('trim', explode('/', $value, 2));\n        $stepSize = isset($parts[1]) ? $parts[1] : 0;\n        if ($parts[0] == '*' || $parts[0] === '0') {\n            return (int) $dateValue % $stepSize == 0;\n        }\n\n        $range = explode('-', $parts[0], 2);\n        $offset = $range[0];\n        $to = isset($range[1]) ? $range[1] : $dateValue;\n        // Ensure that the date value is within the range\n        if ($dateValue < $offset || $dateValue > $to) {\n            return false;\n        }\n\n        for ($i = $offset; $i <= $to; $i+= $stepSize) {\n            if ($i == $dateValue) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/functions.php","ext":"php","size":19736,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * General API functions for scheduling actions\n *\n * @package ActionScheduler.\n */\n\n/**\n * Enqueue an action to run one time, as soon as possible\n *\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n */\nfunction as_enqueue_async_action( $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing async\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the enqueued action ID (enqueued using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priority   Action priority.\n\t * @param bool     $unique     Unique action.\n\t */\n\t$pre = apply_filters( 'pre_as_enqueue_async_action', null, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'async',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n/**\n * Schedule an action to run one time\n *\n * @param int    $timestamp When the job will run.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n */\nfunction as_schedule_single_action( $timestamp, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing single\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param int      $timestamp  When the action will run.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priorities Action priority.\n\t * @param bool     $unique     Unique action.\n\t */\n\t$pre = apply_filters( 'pre_as_schedule_single_action', null, $timestamp, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'single',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n/**\n * Schedule a recurring action\n *\n * @param int    $timestamp When the first instance of the job will run.\n * @param int    $interval_in_seconds How long to wait between runs.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n */\nfunction as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t$interval = (int) $interval_in_seconds;\n\n\t// We expect an integer and allow it to be passed using float and string types, but otherwise\n\t// should reject unexpected values.\n\t// phpcs:ignore WordPress.PHP.StrictComparisons.LooseComparison\n\tif ( ! is_numeric( $interval_in_seconds ) || $interval_in_seconds != $interval ) {\n\t\t_doing_it_wrong(\n\t\t\t__METHOD__,\n\t\t\tsprintf(\n\t\t\t\t/* translators: 1: provided value 2: provided type. */\n\t\t\t\tesc_html__( 'An integer was expected but \"%1$s\" (%2$s) was received.', 'action-scheduler' ),\n\t\t\t\tesc_html( $interval_in_seconds ),\n\t\t\t\tesc_html( gettype( $interval_in_seconds ) )\n\t\t\t),\n\t\t\t'3.6.0'\n\t\t);\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing recurring\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option          The value to return instead of the option value.\n\t * @param int      $timestamp           When the action will run.\n\t * @param int      $interval_in_seconds How long to wait between runs.\n\t * @param string   $hook                Action hook.\n\t * @param array    $args                Action arguments.\n\t * @param string   $group               Action group.\n\t * @param int      $priority            Action priority.\n\t * @param bool     $unique              Unique action.\n\t */\n\t$pre = apply_filters( 'pre_as_schedule_recurring_action', null, $timestamp, $interval_in_seconds, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'recurring',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'pattern'   => $interval_in_seconds,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n/**\n * Schedule an action that recurs on a cron-like schedule.\n *\n * @param int    $timestamp The first instance of the action will be scheduled\n *           to run at a time calculated after this timestamp matching the cron\n *           expression. This can be used to delay the first instance of the action.\n * @param string $schedule A cron-link schedule string.\n * @see http://en.wikipedia.org/wiki/Cron\n *   *    *    *    *    *    *\n *   ┬    ┬    ┬    ┬    ┬    ┬\n *   |    |    |    |    |    |\n *   |    |    |    |    |    + year [optional]\n *   |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7)\n *   |    |    |    +---------- month (1 - 12)\n *   |    |    +--------------- day of month (1 - 31)\n *   |    +-------------------- hour (0 - 23)\n *   +------------------------- min (0 - 59)\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @param bool   $unique Whether the action should be unique. It will not be scheduled if another pending or running action has the same hook and group parameters.\n * @param int    $priority Lower values take precedence over higher values. Defaults to 10, with acceptable values falling in the range 0-255.\n *\n * @return int The action ID. Zero if there was an error scheduling the action.\n */\nfunction as_schedule_cron_action( $timestamp, $schedule, $hook, $args = array(), $group = '', $unique = false, $priority = 10 ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Provides an opportunity to short-circuit the default process for enqueuing cron\n\t * actions.\n\t *\n\t * Returning a value other than null from the filter will short-circuit the normal\n\t * process. The expectation in such a scenario is that callbacks will return an integer\n\t * representing the scheduled action ID (scheduled using some alternative process) or else\n\t * zero.\n\t *\n\t * @param int|null $pre_option The value to return instead of the option value.\n\t * @param int      $timestamp  When the action will run.\n\t * @param string   $schedule   Cron-like schedule string.\n\t * @param string   $hook       Action hook.\n\t * @param array    $args       Action arguments.\n\t * @param string   $group      Action group.\n\t * @param int      $priority   Action priority.\n\t * @param bool     $unique     Unique action.\n\t */\n\t$pre = apply_filters( 'pre_as_schedule_cron_action', null, $timestamp, $schedule, $hook, $args, $group, $priority, $unique );\n\tif ( null !== $pre ) {\n\t\treturn is_int( $pre ) ? $pre : 0;\n\t}\n\n\treturn ActionScheduler::factory()->create(\n\t\tarray(\n\t\t\t'type'      => 'cron',\n\t\t\t'hook'      => $hook,\n\t\t\t'arguments' => $args,\n\t\t\t'when'      => $timestamp,\n\t\t\t'pattern'   => $schedule,\n\t\t\t'group'     => $group,\n\t\t\t'unique'    => $unique,\n\t\t\t'priority'  => $priority,\n\t\t)\n\t);\n}\n\n/**\n * Cancel the next occurrence of a scheduled action.\n *\n * While only the next instance of a recurring or cron action is unscheduled by this method, that will also prevent\n * all future instances of that recurring or cron action from being run. Recurring and cron actions are scheduled in\n * a sequence instead of all being scheduled at once. Each successive occurrence of a recurring action is scheduled\n * only after the former action is run. If the next instance is never run, because it's unscheduled by this function,\n * then the following instance will never be scheduled (or exist), which is effectively the same as being unscheduled\n * by this method also.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n *\n * @return int|null The scheduled action ID if a scheduled action was found, or null if no matching action found.\n */\nfunction as_unschedule_action( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'status'  => ActionScheduler_Store::STATUS_PENDING,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $params );\n\n\tif ( $action_id ) {\n\t\ttry {\n\t\t\tActionScheduler::store()->cancel_action( $action_id );\n\t\t} catch ( Exception $exception ) {\n\t\t\tActionScheduler::logger()->log(\n\t\t\t\t$action_id,\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %1$s is the name of the hook to be cancelled, %2$s is the exception message. */\n\t\t\t\t\t__( 'Caught exception while cancelling action \"%1$s\": %2$s', 'action-scheduler' ),\n\t\t\t\t\t$hook,\n\t\t\t\t\t$exception->getMessage()\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$action_id = null;\n\t\t}\n\t}\n\n\treturn $action_id;\n}\n\n/**\n * Cancel all occurrences of a scheduled action.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n */\nfunction as_unschedule_all_actions( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn;\n\t}\n\tif ( empty( $args ) ) {\n\t\tif ( ! empty( $hook ) && empty( $group ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_hook( $hook );\n\t\t\treturn;\n\t\t}\n\t\tif ( ! empty( $group ) && empty( $hook ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_group( $group );\n\t\t\treturn;\n\t\t}\n\t}\n\tdo {\n\t\t$unscheduled_action = as_unschedule_action( $hook, $args, $group );\n\t} while ( ! empty( $unscheduled_action ) );\n}\n\n/**\n * Check if there is an existing action in the queue with a given hook, args and group combination.\n *\n * An action in the queue could be pending, in-progress or async. If the is pending for a time in\n * future, its scheduled date will be returned as a timestamp. If it is currently being run, or an\n * async action sitting in the queue waiting to be processed, in which case boolean true will be\n * returned. Or there may be no async, in-progress or pending action for this hook, in which case,\n * boolean false will be the return value.\n *\n * @param string $hook Name of the hook to search for.\n * @param array  $args Arguments of the action to be searched.\n * @param string $group Group of the action to be searched.\n *\n * @return int|bool The timestamp for the next occurrence of a pending scheduled action, true for an async or in-progress action or false if there is no matching action.\n */\nfunction as_next_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_RUNNING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( $action_id ) {\n\t\treturn true;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_PENDING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( null === $action_id ) {\n\t\treturn false;\n\t}\n\n\t$action         = ActionScheduler::store()->fetch_action( $action_id );\n\t$scheduled_date = $action->get_schedule()->get_date();\n\tif ( $scheduled_date ) {\n\t\treturn (int) $scheduled_date->format( 'U' );\n\t} elseif ( null === $scheduled_date ) { // pending async action with NullSchedule.\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Check if there is a scheduled action in the queue but more efficiently than as_next_scheduled_action().\n *\n * It's recommended to use this function when you need to know whether a specific action is currently scheduled\n * (pending or in-progress).\n *\n * @since 3.3.0\n *\n * @param string $hook  The hook of the action.\n * @param array  $args  Args that have been passed to the action. Null will matches any args.\n * @param string $group The group the job is assigned to.\n *\n * @return bool True if a matching action is pending or in-progress, false otherwise.\n */\nfunction as_has_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$query_args = array(\n\t\t'hook'    => $hook,\n\t\t'status'  => array( ActionScheduler_Store::STATUS_RUNNING, ActionScheduler_Store::STATUS_PENDING ),\n\t\t'group'   => $group,\n\t\t'orderby' => 'none',\n\t);\n\n\tif ( null !== $args ) {\n\t\t$query_args['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $query_args );\n\n\treturn null !== $action_id;\n}\n\n/**\n * Find scheduled actions\n *\n * @param array  $args Possible arguments, with their default values.\n *         'hook' => '' - the name of the action that will be triggered.\n *         'args' => NULL - the args array that will be passed with the action.\n *         'date' => NULL - the scheduled date of the action. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *         'date_compare' => '<=' - operator for testing \"date\". accepted values are '!=', '>', '>=', '<', '<=', '='.\n *         'modified' => NULL - the date the action was last updated. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *         'modified_compare' => '<=' - operator for testing \"modified\". accepted values are '!=', '>', '>=', '<', '<=', '='.\n *         'group' => '' - the group the action belongs to.\n *         'status' => '' - ActionScheduler_Store::STATUS_COMPLETE or ActionScheduler_Store::STATUS_PENDING.\n *         'claimed' => NULL - TRUE to find claimed actions, FALSE to find unclaimed actions, a string to find a specific claim ID.\n *         'per_page' => 5 - Number of results to return.\n *         'offset' => 0.\n *         'orderby' => 'date' - accepted values are 'hook', 'group', 'modified', 'date' or 'none'.\n *         'order' => 'ASC'.\n *\n * @param string $return_format OBJECT, ARRAY_A, or ids.\n *\n * @return array\n */\nfunction as_get_scheduled_actions( $args = array(), $return_format = OBJECT ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn array();\n\t}\n\t$store = ActionScheduler::store();\n\tforeach ( array( 'date', 'modified' ) as $key ) {\n\t\tif ( isset( $args[ $key ] ) ) {\n\t\t\t$args[ $key ] = as_get_datetime_object( $args[ $key ] );\n\t\t}\n\t}\n\t$ids = $store->query_actions( $args );\n\n\tif ( 'ids' === $return_format || 'int' === $return_format ) {\n\t\treturn $ids;\n\t}\n\n\t$actions = array();\n\tforeach ( $ids as $action_id ) {\n\t\t$actions[ $action_id ] = $store->fetch_action( $action_id );\n\t}\n\n\tif ( ARRAY_A === $return_format ) {\n\t\tforeach ( $actions as $action_id => $action_object ) {\n\t\t\t$actions[ $action_id ] = get_object_vars( $action_object );\n\t\t}\n\t}\n\n\treturn $actions;\n}\n\n/**\n * Helper function to create an instance of DateTime based on a given\n * string and timezone. By default, will return the current date/time\n * in the UTC timezone.\n *\n * Needed because new DateTime() called without an explicit timezone\n * will create a date/time in PHP's timezone, but we need to have\n * assurance that a date/time uses the right timezone (which we almost\n * always want to be UTC), which means we need to always include the\n * timezone when instantiating datetimes rather than leaving it up to\n * the PHP default.\n *\n * @param mixed  $date_string A date/time string. Valid formats are explained in http://php.net/manual/en/datetime.formats.php.\n * @param string $timezone A timezone identifier, like UTC or Europe/Lisbon. The list of valid identifiers is available http://php.net/manual/en/timezones.php.\n *\n * @return ActionScheduler_DateTime\n */\nfunction as_get_datetime_object( $date_string = null, $timezone = 'UTC' ) {\n\tif ( is_object( $date_string ) && $date_string instanceof DateTime ) {\n\t\t$date = new ActionScheduler_DateTime( $date_string->format( 'Y-m-d H:i:s' ), new DateTimeZone( $timezone ) );\n\t} elseif ( is_numeric( $date_string ) ) {\n\t\t$date = new ActionScheduler_DateTime( '@' . $date_string, new DateTimeZone( $timezone ) );\n\t} else {\n\t\t$date = new ActionScheduler_DateTime( null === $date_string ? 'now' : $date_string, new DateTimeZone( $timezone ) );\n\t}\n\treturn $date;\n}\n\n/**\n * Check if a specific feature is supported by the current version of Action Scheduler.\n *\n * @since 3.9.3\n *\n * @param string $feature The feature to check support for.\n *\n * @return bool True if the feature is supported, false otherwise.\n */\nfunction as_supports( string $feature ): bool {\n\t$supported_features = array( 'ensure_recurring_actions_hook' );\n\n\treturn in_array( $feature, $supported_features, true );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/license.txt","ext":"txt","size":35149,"mtime":1757324689,"type":"text","content":"                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/action-scheduler.php","ext":"php","size":3023,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * Plugin Name: Action Scheduler\n * Plugin URI: https://actionscheduler.org\n * Description: A robust scheduling library for use in WordPress plugins.\n * Author: Automattic\n * Author URI: https://automattic.com/\n * Version: 3.9.3\n * License: GPLv3\n * Requires at least: 6.5\n * Tested up to: 6.8\n * Requires PHP: 7.2\n *\n * Copyright 2019 Automattic, Inc.  (https://automattic.com/contact/)\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n *\n * @package ActionScheduler\n */\n\nif ( ! function_exists( 'action_scheduler_register_3_dot_9_dot_3' ) && function_exists( 'add_action' ) ) { // WRCS: DEFINED_VERSION.\n\n\tif ( ! class_exists( 'ActionScheduler_Versions', false ) ) {\n\t\trequire_once __DIR__ . '/classes/ActionScheduler_Versions.php';\n\t\tadd_action( 'plugins_loaded', array( 'ActionScheduler_Versions', 'initialize_latest_version' ), 1, 0 );\n\t}\n\n\tadd_action( 'plugins_loaded', 'action_scheduler_register_3_dot_9_dot_3', 0, 0 ); // WRCS: DEFINED_VERSION.\n\n\t// phpcs:disable Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace\n\t/**\n\t * Registers this version of Action Scheduler.\n\t */\n\tfunction action_scheduler_register_3_dot_9_dot_3() { // WRCS: DEFINED_VERSION.\n\t\t$versions = ActionScheduler_Versions::instance();\n\t\t$versions->register( '3.9.3', 'action_scheduler_initialize_3_dot_9_dot_3' ); // WRCS: DEFINED_VERSION.\n\t}\n\n\t// phpcs:disable Generic.Functions.OpeningFunctionBraceKernighanRitchie.ContentAfterBrace\n\t/**\n\t * Initializes this version of Action Scheduler.\n\t */\n\tfunction action_scheduler_initialize_3_dot_9_dot_3() { // WRCS: DEFINED_VERSION.\n\t\t// A final safety check is required even here, because historic versions of Action Scheduler\n\t\t// followed a different pattern (in some unusual cases, we could reach this point and the\n\t\t// ActionScheduler class is already defined—so we need to guard against that).\n\t\tif ( ! class_exists( 'ActionScheduler', false ) ) {\n\t\t\trequire_once __DIR__ . '/classes/abstracts/ActionScheduler.php';\n\t\t\tActionScheduler::init( __FILE__ );\n\t\t}\n\t}\n\n\t// Support usage in themes - load this version if no plugin has loaded a version yet.\n\tif ( did_action( 'plugins_loaded' ) && ! doing_action( 'plugins_loaded' ) && ! class_exists( 'ActionScheduler', false ) ) {\n\t\taction_scheduler_initialize_3_dot_9_dot_3(); // WRCS: DEFINED_VERSION.\n\t\tdo_action( 'action_scheduler_pre_theme_init' );\n\t\tActionScheduler_Versions::initialize_latest_version();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/deprecated/ActionScheduler_Schedule_Deprecated.php","ext":"php","size":832,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Abstract_Schedule\n */\nabstract class ActionScheduler_Schedule_Deprecated implements ActionScheduler_Schedule {\n\n\t/**\n\t * Get the date & time this schedule was created to run, or calculate when it should be run\n\t * after a given date & time.\n\t *\n\t * @param DateTime $after DateTime to calculate against.\n\t *\n\t * @return DateTime|null\n\t */\n\tpublic function next( ?DateTime $after = null ) {\n\t\tif ( empty( $after ) ) {\n\t\t\t$return_value       = $this->get_date();\n\t\t\t$replacement_method = 'get_date()';\n\t\t} else {\n\t\t\t$return_value       = $this->get_next( $after );\n\t\t\t$replacement_method = 'get_next( $after )';\n\t\t}\n\n\t\t_deprecated_function( __METHOD__, '3.0.0', __CLASS__ . '::' . $replacement_method ); // phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\n\t\treturn $return_value;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/deprecated/functions.php","ext":"php","size":5273,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * Deprecated API functions for scheduling actions\n *\n * Functions with the wc prefix were deprecated to avoid confusion with\n * Action Scheduler being included in WooCommerce core, and it providing\n * a different set of APIs for working with the action queue.\n *\n * @package ActionScheduler\n */\n\n/**\n * Schedule an action to run one time.\n *\n * @param int    $timestamp When the job will run.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @return string The job ID\n */\nfunction wc_schedule_single_action( $timestamp, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_single_action()' );\n\treturn as_schedule_single_action( $timestamp, $hook, $args, $group );\n}\n\n/**\n * Schedule a recurring action.\n *\n * @param int    $timestamp When the first instance of the job will run.\n * @param int    $interval_in_seconds How long to wait between runs.\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @deprecated 2.1.0\n *\n * @return string The job ID\n */\nfunction wc_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_recurring_action()' );\n\treturn as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args, $group );\n}\n\n/**\n * Schedule an action that recurs on a cron-like schedule.\n *\n * @param int    $timestamp The schedule will start on or after this time.\n * @param string $schedule A cron-link schedule string.\n * @see http://en.wikipedia.org/wiki/Cron\n *   *    *    *    *    *    *\n *   ┬    ┬    ┬    ┬    ┬    ┬\n *   |    |    |    |    |    |\n *   |    |    |    |    |    + year [optional]\n *   |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7)\n *   |    |    |    +---------- month (1 - 12)\n *   |    |    +--------------- day of month (1 - 31)\n *   |    +-------------------- hour (0 - 23)\n *   +------------------------- min (0 - 59)\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @deprecated 2.1.0\n *\n * @return string The job ID\n */\nfunction wc_schedule_cron_action( $timestamp, $schedule, $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_schedule_cron_action()' );\n\treturn as_schedule_cron_action( $timestamp, $schedule, $hook, $args, $group );\n}\n\n/**\n * Cancel the next occurrence of a job.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array  $args Args that would have been passed to the job.\n * @param string $group Action's group.\n *\n * @deprecated 2.1.0\n */\nfunction wc_unschedule_action( $hook, $args = array(), $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_unschedule_action()' );\n\tas_unschedule_action( $hook, $args, $group );\n}\n\n/**\n * Get next scheduled action.\n *\n * @param string $hook Action's hook.\n * @param array  $args Action's args.\n * @param string $group Action's group.\n *\n * @deprecated 2.1.0\n *\n * @return int|bool The timestamp for the next occurrence, or false if nothing was found\n */\nfunction wc_next_scheduled_action( $hook, $args = null, $group = '' ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_next_scheduled_action()' );\n\treturn as_next_scheduled_action( $hook, $args, $group );\n}\n\n/**\n * Find scheduled actions\n *\n * @param array  $args Possible arguments, with their default values:\n *        'hook' => '' - the name of the action that will be triggered\n *        'args' => NULL - the args array that will be passed with the action\n *        'date' => NULL - the scheduled date of the action. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'date_compare' => '<=' - operator for testing \"date\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'modified' => NULL - the date the action was last updated. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'modified_compare' => '<=' - operator for testing \"modified\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'group' => '' - the group the action belongs to\n *        'status' => '' - ActionScheduler_Store::STATUS_COMPLETE or ActionScheduler_Store::STATUS_PENDING\n *        'claimed' => NULL - TRUE to find claimed actions, FALSE to find unclaimed actions, a string to find a specific claim ID\n *        'per_page' => 5 - Number of results to return\n *        'offset' => 0\n *        'orderby' => 'date' - accepted values are 'hook', 'group', 'modified', or 'date'\n *        'order' => 'ASC'.\n * @param string $return_format OBJECT, ARRAY_A, or ids.\n *\n * @deprecated 2.1.0\n *\n * @return array\n */\nfunction wc_get_scheduled_actions( $args = array(), $return_format = OBJECT ) {\n\t_deprecated_function( __FUNCTION__, '2.1.0', 'as_get_scheduled_actions()' );\n\treturn as_get_scheduled_actions( $args, $return_format );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/deprecated/ActionScheduler_AdminView_Deprecated.php","ext":"php","size":5466,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_AdminView_Deprecated\n *\n * Store deprecated public functions previously found in the ActionScheduler_AdminView class.\n * Keeps them out of the way of the main class.\n *\n * @codeCoverageIgnore\n */\nclass ActionScheduler_AdminView_Deprecated {\n\n\t/**\n\t * Adjust parameters for custom post type.\n\t *\n\t * @param array $args Args.\n\t */\n\tpublic function action_scheduler_post_type_args( $args ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $args;\n\t}\n\n\t/**\n\t * Customise the post status related views displayed on the Scheduled Actions administration screen.\n\t *\n\t * @param array $views An associative array of views and view labels which can be used to filter the 'scheduled-action' posts displayed on the Scheduled Actions administration screen.\n\t * @return array $views An associative array of views and view labels which can be used to filter the 'scheduled-action' posts displayed on the Scheduled Actions administration screen.\n\t */\n\tpublic function list_table_views( $views ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $views;\n\t}\n\n\t/**\n\t * Do not include the \"Edit\" action for the Scheduled Actions administration screen.\n\t *\n\t * Hooked to the 'bulk_actions-edit-action-scheduler' filter.\n\t *\n\t * @param array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t * @return array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t */\n\tpublic function bulk_actions( $actions ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $actions;\n\t}\n\n\t/**\n\t * Completely customer the columns displayed on the Scheduled Actions administration screen.\n\t *\n\t * Because we can't filter the content of the default title and date columns, we need to recreate our own\n\t * custom columns for displaying those post fields. For the column content, @see self::list_table_column_content().\n\t *\n\t * @param array $columns An associative array of columns that are use for the table on the Scheduled Actions administration screen.\n\t * @return array $columns An associative array of columns that are use for the table on the Scheduled Actions administration screen.\n\t */\n\tpublic function list_table_columns( $columns ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $columns;\n\t}\n\n\t/**\n\t * Make our custom title & date columns use defaulting title & date sorting.\n\t *\n\t * @param array $columns An associative array of columns that can be used to sort the table on the Scheduled Actions administration screen.\n\t * @return array $columns An associative array of columns that can be used to sort the table on the Scheduled Actions administration screen.\n\t */\n\tpublic static function list_table_sortable_columns( $columns ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $columns;\n\t}\n\n\t/**\n\t * Print the content for our custom columns.\n\t *\n\t * @param string $column_name The key for the column for which we should output our content.\n\t * @param int    $post_id The ID of the 'scheduled-action' post for which this row relates.\n\t */\n\tpublic static function list_table_column_content( $column_name, $post_id ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t/**\n\t * Hide the inline \"Edit\" action for all 'scheduled-action' posts.\n\t *\n\t * Hooked to the 'post_row_actions' filter.\n\t *\n\t * @param array   $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t * @param WP_Post $post The 'scheduled-action' post object.\n\t * @return array $actions An associative array of actions which can be performed on the 'scheduled-action' post type.\n\t */\n\tpublic static function row_actions( $actions, $post ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $actions;\n\t}\n\n\t/**\n\t * Run an action when triggered from the Action Scheduler administration screen.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic static function maybe_execute_action() {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t/**\n\t * Convert an interval of seconds into a two part human friendly string.\n\t *\n\t * The WordPress human_time_diff() function only calculates the time difference to one degree, meaning\n\t * even if an action is 1 day and 11 hours away, it will display \"1 day\". This function goes one step\n\t * further to display two degrees of accuracy.\n\t *\n\t * Based on Crontrol::interval() function by Edward Dale: https://wordpress.org/plugins/wp-crontrol/\n\t *\n\t * @return void\n\t */\n\tpublic static function admin_notices() {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t/**\n\t * Filter search queries to allow searching by Claim ID (i.e. post_password).\n\t *\n\t * @param string   $orderby MySQL orderby string.\n\t * @param WP_Query $query Instance of a WP_Query object.\n\t * @return void\n\t */\n\tpublic function custom_orderby( $orderby, $query ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t/**\n\t * Filter search queries to allow searching by Claim ID (i.e. post_password).\n\t *\n\t * @param string   $search MySQL search string.\n\t * @param WP_Query $query Instance of a WP_Query object.\n\t * @return void\n\t */\n\tpublic function search_post_password( $search, $query ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t}\n\n\t/**\n\t * Change messages when a scheduled action is updated.\n\t *\n\t * @param  array $messages Messages.\n\t * @return array\n\t */\n\tpublic function post_updated_messages( $messages ) {\n\t\t_deprecated_function( __METHOD__, '2.0.0' );\n\t\treturn $messages;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/deprecated/ActionScheduler_Abstract_QueueRunner_Deprecated.php","ext":"php","size":852,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Abstract class with common Queue Cleaner functionality.\n */\nabstract class ActionScheduler_Abstract_QueueRunner_Deprecated {\n\n\t/**\n\t * Get the maximum number of seconds a batch can run for.\n\t *\n\t * @deprecated 2.1.1\n\t * @return int The number of seconds.\n\t */\n\tprotected function get_maximum_execution_time() {\n\t\t_deprecated_function( __METHOD__, '2.1.1', 'ActionScheduler_Abstract_QueueRunner::get_time_limit()' );\n\n\t\t$maximum_execution_time = 30;\n\n\t\t// Apply deprecated filter.\n\t\tif ( has_filter( 'action_scheduler_maximum_execution_time' ) ) {\n\t\t\t_deprecated_function( 'action_scheduler_maximum_execution_time', '2.1.1', 'action_scheduler_queue_runner_time_limit' );\n\t\t\t$maximum_execution_time = apply_filters( 'action_scheduler_maximum_execution_time', $maximum_execution_time );\n\t\t}\n\n\t\treturn absint( $maximum_execution_time );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/deprecated/ActionScheduler_Store_Deprecated.php","ext":"php","size":1059,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Store_Deprecated\n *\n * @codeCoverageIgnore\n */\nabstract class ActionScheduler_Store_Deprecated {\n\n\t/**\n\t * Mark an action that failed to fetch correctly as failed.\n\t *\n\t * @since 2.2.6\n\t *\n\t * @param int $action_id The ID of the action.\n\t */\n\tpublic function mark_failed_fetch_action( $action_id ) {\n\t\t_deprecated_function( __METHOD__, '3.0.0', 'ActionScheduler_Store::mark_failure()' );\n\t\tself::$store->mark_failure( $action_id );\n\t}\n\n\t/**\n\t * Add base hooks\n\t *\n\t * @since 2.2.6\n\t */\n\tprotected static function hook() {\n\t\t_deprecated_function( __METHOD__, '3.0.0' );\n\t}\n\n\t/**\n\t * Remove base hooks\n\t *\n\t * @since 2.2.6\n\t */\n\tprotected static function unhook() {\n\t\t_deprecated_function( __METHOD__, '3.0.0' );\n\t}\n\n\t/**\n\t * Get the site's local time.\n\t *\n\t * @deprecated 2.1.0\n\t * @return DateTimeZone\n\t */\n\tprotected function get_local_timezone() {\n\t\t_deprecated_function( __FUNCTION__, '2.1.0', 'ActionScheduler_TimezoneHelper::set_local_timezone()' );\n\t\treturn ActionScheduler_TimezoneHelper::get_local_timezone();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_ActionClaim.php","ext":"php","size":652,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_ActionClaim\n */\nclass ActionScheduler_ActionClaim {\n\t/**\n\t * Claim ID.\n\t *\n\t * @var string\n\t */\n\tprivate $id = '';\n\n\t/**\n\t * Claimed action IDs.\n\t *\n\t * @var int[]\n\t */\n\tprivate $action_ids = array();\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string $id Claim ID.\n\t * @param int[]  $action_ids Action IDs.\n\t */\n\tpublic function __construct( $id, array $action_ids ) {\n\t\t$this->id         = $id;\n\t\t$this->action_ids = $action_ids;\n\t}\n\n\t/**\n\t * Get claim ID.\n\t */\n\tpublic function get_id() {\n\t\treturn $this->id;\n\t}\n\n\t/**\n\t * Get IDs of claimed actions.\n\t */\n\tpublic function get_actions() {\n\t\treturn $this->action_ids;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_LogEntry.php","ext":"php","size":1942,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_LogEntry\n */\nclass ActionScheduler_LogEntry {\n\n\t/**\n\t * Action's ID for log entry.\n\t *\n\t * @var int $action_id\n\t */\n\tprotected $action_id = '';\n\n\t/**\n\t * Log entry's message.\n\t *\n\t * @var string $message\n\t */\n\tprotected $message = '';\n\n\t/**\n\t * Log entry's date.\n\t *\n\t * @var Datetime $date\n\t */\n\tprotected $date;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param mixed    $action_id Action ID.\n\t * @param string   $message   Message.\n\t * @param Datetime $date      Datetime object with the time when this log entry was created. If this parameter is\n\t *                            not provided a new Datetime object (with current time) will be created.\n\t */\n\tpublic function __construct( $action_id, $message, $date = null ) {\n\t\t/*\n\t\t * ActionScheduler_wpCommentLogger::get_entry() previously passed a 3rd param of $comment->comment_type\n\t\t * to ActionScheduler_LogEntry::__construct(), goodness knows why, and the Follow-up Emails plugin\n\t\t * hard-codes loading its own version of ActionScheduler_wpCommentLogger with that out-dated method,\n\t\t * goodness knows why, so we need to guard against that here instead of using a DateTime type declaration\n\t\t * for the constructor's 3rd param of $date and causing a fatal error with older versions of FUE.\n\t\t */\n\t\tif ( null !== $date && ! is_a( $date, 'DateTime' ) ) {\n\t\t\t_doing_it_wrong( __METHOD__, 'The third parameter must be a valid DateTime instance, or null.', '2.0.0' );\n\t\t\t$date = null;\n\t\t}\n\n\t\t$this->action_id = $action_id;\n\t\t$this->message   = $message;\n\t\t$this->date      = $date ? $date : new Datetime();\n\t}\n\n\t/**\n\t * Returns the date when this log entry was created\n\t *\n\t * @return Datetime\n\t */\n\tpublic function get_date() {\n\t\treturn $this->date;\n\t}\n\n\t/**\n\t * Get action ID of log entry.\n\t */\n\tpublic function get_action_id() {\n\t\treturn $this->action_id;\n\t}\n\n\t/**\n\t * Get log entry message.\n\t */\n\tpublic function get_message() {\n\t\treturn $this->message;\n\t}\n}\n\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_NullLogEntry.php","ext":"php","size":330,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_NullLogEntry\n */\nclass ActionScheduler_NullLogEntry extends ActionScheduler_LogEntry {\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string $action_id Action ID.\n\t * @param string $message   Log entry.\n\t */\n\tpublic function __construct( $action_id = '', $message = '' ) {\n\t\t// nothing to see here.\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_DataController.php","ext":"php","size":5769,"mtime":1757324689,"type":"text","content":"<?php\n\nuse Action_Scheduler\\Migration\\Controller;\n\n/**\n * Class ActionScheduler_DataController\n *\n * The main plugin/initialization class for the data stores.\n *\n * Responsible for hooking everything up with WordPress.\n *\n * @package Action_Scheduler\n *\n * @since 3.0.0\n */\nclass ActionScheduler_DataController {\n\t/** Action data store class name. */\n\tconst DATASTORE_CLASS = 'ActionScheduler_DBStore';\n\n\t/** Logger data store class name. */\n\tconst LOGGER_CLASS = 'ActionScheduler_DBLogger';\n\n\t/** Migration status option name. */\n\tconst STATUS_FLAG = 'action_scheduler_migration_status';\n\n\t/** Migration status option value. */\n\tconst STATUS_COMPLETE = 'complete';\n\n\t/** Migration minimum required PHP version. */\n\tconst MIN_PHP_VERSION = '5.5';\n\n\t/**\n\t * Instance.\n\t *\n\t * @var ActionScheduler_DataController\n\t */\n\tprivate static $instance;\n\n\t/**\n\t * Sleep time in seconds.\n\t *\n\t * @var int\n\t */\n\tprivate static $sleep_time = 0;\n\n\t/**\n\t * Tick count required for freeing memory.\n\t *\n\t * @var int\n\t */\n\tprivate static $free_ticks = 50;\n\n\t/**\n\t * Get a flag indicating whether the migration environment dependencies are met.\n\t *\n\t * @return bool\n\t */\n\tpublic static function dependencies_met() {\n\t\t$php_support = version_compare( PHP_VERSION, self::MIN_PHP_VERSION, '>=' );\n\t\treturn $php_support && apply_filters( 'action_scheduler_migration_dependencies_met', true );\n\t}\n\n\t/**\n\t * Get a flag indicating whether the migration is complete.\n\t *\n\t * @return bool Whether the flag has been set marking the migration as complete\n\t */\n\tpublic static function is_migration_complete() {\n\t\treturn get_option( self::STATUS_FLAG ) === self::STATUS_COMPLETE;\n\t}\n\n\t/**\n\t * Mark the migration as complete.\n\t */\n\tpublic static function mark_migration_complete() {\n\t\tupdate_option( self::STATUS_FLAG, self::STATUS_COMPLETE );\n\t}\n\n\t/**\n\t * Unmark migration when a plugin is de-activated. Will not work in case of silent activation, for example in an update.\n\t * We do this to mitigate the bug of lost actions which happens if there was an AS 2.x to AS 3.x migration in the past, but that plugin is now\n\t * deactivated and the site was running on AS 2.x again.\n\t */\n\tpublic static function mark_migration_incomplete() {\n\t\tdelete_option( self::STATUS_FLAG );\n\t}\n\n\t/**\n\t * Set the action store class name.\n\t *\n\t * @param string $class Classname of the store class.\n\t *\n\t * @return string\n\t */\n\tpublic static function set_store_class( $class ) {\n\t\treturn self::DATASTORE_CLASS;\n\t}\n\n\t/**\n\t * Set the action logger class name.\n\t *\n\t * @param string $class Classname of the logger class.\n\t *\n\t * @return string\n\t */\n\tpublic static function set_logger_class( $class ) {\n\t\treturn self::LOGGER_CLASS;\n\t}\n\n\t/**\n\t * Set the sleep time in seconds.\n\t *\n\t * @param integer $sleep_time The number of seconds to pause before resuming operation.\n\t */\n\tpublic static function set_sleep_time( $sleep_time ) {\n\t\tself::$sleep_time = (int) $sleep_time;\n\t}\n\n\t/**\n\t * Set the tick count required for freeing memory.\n\t *\n\t * @param integer $free_ticks The number of ticks to free memory on.\n\t */\n\tpublic static function set_free_ticks( $free_ticks ) {\n\t\tself::$free_ticks = (int) $free_ticks;\n\t}\n\n\t/**\n\t * Free memory if conditions are met.\n\t *\n\t * @param int $ticks Current tick count.\n\t */\n\tpublic static function maybe_free_memory( $ticks ) {\n\t\tif ( self::$free_ticks && 0 === $ticks % self::$free_ticks ) {\n\t\t\tself::free_memory();\n\t\t}\n\t}\n\n\t/**\n\t * Reduce memory footprint by clearing the database query and object caches.\n\t */\n\tpublic static function free_memory() {\n\t\tif ( 0 < self::$sleep_time ) {\n\t\t\t/* translators: %d: amount of time */\n\t\t\t\\WP_CLI::warning( sprintf( _n( 'Stopped the insanity for %d second', 'Stopped the insanity for %d seconds', self::$sleep_time, 'action-scheduler' ), self::$sleep_time ) );\n\t\t\tsleep( self::$sleep_time );\n\t\t}\n\n\t\t\\WP_CLI::warning( __( 'Attempting to reduce used memory...', 'action-scheduler' ) );\n\n\t\t/**\n\t\t * Globals.\n\t\t *\n\t\t * @var $wpdb            \\wpdb\n\t\t * @var $wp_object_cache \\WP_Object_Cache\n\t\t */\n\t\tglobal $wpdb, $wp_object_cache;\n\n\t\t$wpdb->queries = array();\n\n\t\tif ( ! is_a( $wp_object_cache, 'WP_Object_Cache' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Not all drop-ins support these props, however, there may be existing installations that rely on these being cleared.\n\t\tif ( property_exists( $wp_object_cache, 'group_ops' ) ) {\n\t\t\t$wp_object_cache->group_ops = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'stats' ) ) {\n\t\t\t$wp_object_cache->stats = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'memcache_debug' ) ) {\n\t\t\t$wp_object_cache->memcache_debug = array();\n\t\t}\n\t\tif ( property_exists( $wp_object_cache, 'cache' ) ) {\n\t\t\t$wp_object_cache->cache = array();\n\t\t}\n\n\t\tif ( is_callable( array( $wp_object_cache, '__remoteset' ) ) ) {\n\t\t\tcall_user_func( array( $wp_object_cache, '__remoteset' ) ); // important!\n\t\t}\n\t}\n\n\t/**\n\t * Connect to table datastores if migration is complete.\n\t * Otherwise, proceed with the migration if the dependencies have been met.\n\t */\n\tpublic static function init() {\n\t\tif ( self::is_migration_complete() ) {\n\t\t\tadd_filter( 'action_scheduler_store_class', array( 'ActionScheduler_DataController', 'set_store_class' ), 100 );\n\t\t\tadd_filter( 'action_scheduler_logger_class', array( 'ActionScheduler_DataController', 'set_logger_class' ), 100 );\n\t\t\tadd_action( 'deactivate_plugin', array( 'ActionScheduler_DataController', 'mark_migration_incomplete' ) );\n\t\t} elseif ( self::dependencies_met() ) {\n\t\t\tController::init();\n\t\t}\n\n\t\tadd_action( 'action_scheduler/progress_tick', array( 'ActionScheduler_DataController', 'maybe_free_memory' ) );\n\t}\n\n\t/**\n\t * Singleton factory.\n\t */\n\tpublic static function instance() {\n\t\tif ( ! isset( self::$instance ) ) {\n\t\t\tself::$instance = new static();\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_ActionFactory.php","ext":"php","size":16303,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_ActionFactory\n */\nclass ActionScheduler_ActionFactory {\n\n\t/**\n\t * Return stored actions for given params.\n\t *\n\t * @param string                        $status The action's status in the data store.\n\t * @param string                        $hook The hook to trigger when this action runs.\n\t * @param array                         $args Args to pass to callbacks when the hook is triggered.\n\t * @param ActionScheduler_Schedule|null $schedule The action's schedule.\n\t * @param string                        $group A group to put the action in.\n\t * phpcs:ignore Squiz.Commenting.FunctionComment.ExtraParamComment\n\t * @param int                           $priority The action priority.\n\t *\n\t * @return ActionScheduler_Action An instance of the stored action.\n\t */\n\tpublic function get_stored_action( $status, $hook, array $args = array(), ?ActionScheduler_Schedule $schedule = null, $group = '' ) {\n\t\t// The 6th parameter ($priority) is not formally declared in the method signature to maintain compatibility with\n\t\t// third-party subclasses created before this param was added.\n\t\t$priority = func_num_args() >= 6 ? (int) func_get_arg( 5 ) : 10;\n\n\t\tswitch ( $status ) {\n\t\t\tcase ActionScheduler_Store::STATUS_PENDING:\n\t\t\t\t$action_class = 'ActionScheduler_Action';\n\t\t\t\tbreak;\n\t\t\tcase ActionScheduler_Store::STATUS_CANCELED:\n\t\t\t\t$action_class = 'ActionScheduler_CanceledAction';\n\t\t\t\tif ( ! is_null( $schedule ) && ! is_a( $schedule, 'ActionScheduler_CanceledSchedule' ) && ! is_a( $schedule, 'ActionScheduler_NullSchedule' ) ) {\n\t\t\t\t\t$schedule = new ActionScheduler_CanceledSchedule( $schedule->get_date() );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\t$action_class = 'ActionScheduler_FinishedAction';\n\t\t\t\tbreak;\n\t\t}\n\n\t\t$action_class = apply_filters( 'action_scheduler_stored_action_class', $action_class, $status, $hook, $args, $schedule, $group );\n\n\t\t$action = new $action_class( $hook, $args, $schedule, $group );\n\t\t$action->set_priority( $priority );\n\n\t\t/**\n\t\t * Allow 3rd party code to change the instantiated action for a given hook, args, schedule and group.\n\t\t *\n\t\t * @param ActionScheduler_Action   $action The instantiated action.\n\t\t * @param string                   $hook The instantiated action's hook.\n\t\t * @param array                    $args The instantiated action's args.\n\t\t * @param ActionScheduler_Schedule $schedule The instantiated action's schedule.\n\t\t * @param string                   $group The instantiated action's group.\n\t\t * @param int                      $priority The action priority.\n\t\t */\n\t\treturn apply_filters( 'action_scheduler_stored_action_instance', $action, $hook, $args, $schedule, $group, $priority );\n\t}\n\n\t/**\n\t * Enqueue an action to run one time, as soon as possible (rather a specific scheduled time).\n\t *\n\t * This method creates a new action using the NullSchedule. In practice, this results in an action scheduled to\n\t * execute \"now\". Therefore, it will generally run as soon as possible but is not prioritized ahead of other actions\n\t * that are already past-due.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t */\n\tpublic function async( $hook, $args = array(), $group = '' ) {\n\t\treturn $this->async_unique( $hook, $args, $group, false );\n\t}\n\n\t/**\n\t * Same as async, but also supports $unique param.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether to ensure the action is unique.\n\t *\n\t * @return int The ID of the stored action.\n\t */\n\tpublic function async_unique( $hook, $args = array(), $group = '', $unique = true ) {\n\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action, $unique ) : $this->store( $action );\n\t}\n\n\t/**\n\t * Create single action.\n\t *\n\t * @param string $hook  The hook to trigger when this action runs.\n\t * @param array  $args  Args to pass when the hook is triggered.\n\t * @param int    $when  Unix timestamp when the action will run.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t */\n\tpublic function single( $hook, $args = array(), $when = null, $group = '' ) {\n\t\treturn $this->single_unique( $hook, $args, $when, $group, false );\n\t}\n\n\t/**\n\t * Create single action only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $when Unix timestamp when the action will run.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t */\n\tpublic function single_unique( $hook, $args = array(), $when = null, $group = '', $unique = true ) {\n\t\t$date     = as_get_datetime_object( $when );\n\t\t$schedule = new ActionScheduler_SimpleSchedule( $date );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t/**\n\t * Create the first instance of an action recurring on a given interval.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $first Unix timestamp for the first run.\n\t * @param int    $interval Seconds between runs.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t */\n\tpublic function recurring( $hook, $args = array(), $first = null, $interval = null, $group = '' ) {\n\t\treturn $this->recurring_unique( $hook, $args, $first, $interval, $group, false );\n\t}\n\n\t/**\n\t * Create the first instance of an action recurring on a given interval only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $first Unix timestamp for the first run.\n\t * @param int    $interval Seconds between runs.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t */\n\tpublic function recurring_unique( $hook, $args = array(), $first = null, $interval = null, $group = '', $unique = true ) {\n\t\tif ( empty( $interval ) ) {\n\t\t\treturn $this->single_unique( $hook, $args, $first, $group, $unique );\n\t\t}\n\t\t$date     = as_get_datetime_object( $first );\n\t\t$schedule = new ActionScheduler_IntervalSchedule( $date, $interval );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t/**\n\t * Create the first instance of an action recurring on a Cron schedule.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $base_timestamp The first instance of the action will be scheduled\n\t *        to run at a time calculated after this timestamp matching the cron\n\t *        expression. This can be used to delay the first instance of the action.\n\t * @param int    $schedule A cron definition string.\n\t * @param string $group A group to put the action in.\n\t *\n\t * @return int The ID of the stored action.\n\t */\n\tpublic function cron( $hook, $args = array(), $base_timestamp = null, $schedule = null, $group = '' ) {\n\t\treturn $this->cron_unique( $hook, $args, $base_timestamp, $schedule, $group, false );\n\t}\n\n\n\t/**\n\t * Create the first instance of an action recurring on a Cron schedule only if there is no pending or running action with same name and params.\n\t *\n\t * @param string $hook The hook to trigger when this action runs.\n\t * @param array  $args Args to pass when the hook is triggered.\n\t * @param int    $base_timestamp The first instance of the action will be scheduled\n\t *        to run at a time calculated after this timestamp matching the cron\n\t *        expression. This can be used to delay the first instance of the action.\n\t * @param int    $schedule A cron definition string.\n\t * @param string $group A group to put the action in.\n\t * @param bool   $unique Whether action scheduled should be unique.\n\t *\n\t * @return int The ID of the stored action.\n\t **/\n\tpublic function cron_unique( $hook, $args = array(), $base_timestamp = null, $schedule = null, $group = '', $unique = true ) {\n\t\tif ( empty( $schedule ) ) {\n\t\t\treturn $this->single_unique( $hook, $args, $base_timestamp, $group, $unique );\n\t\t}\n\t\t$date     = as_get_datetime_object( $base_timestamp );\n\t\t$cron     = CronExpression::factory( $schedule );\n\t\t$schedule = new ActionScheduler_CronSchedule( $date, $cron );\n\t\t$action   = new ActionScheduler_Action( $hook, $args, $schedule, $group );\n\t\treturn $unique ? $this->store_unique_action( $action ) : $this->store( $action );\n\t}\n\n\t/**\n\t * Create a successive instance of a recurring or cron action.\n\t *\n\t * Importantly, the action will be rescheduled to run based on the current date/time.\n\t * That means when the action is scheduled to run in the past, the next scheduled date\n\t * will be pushed forward. For example, if a recurring action set to run every hour\n\t * was scheduled to run 5 seconds ago, it will be next scheduled for 1 hour in the\n\t * future, which is 1 hour and 5 seconds from when it was last scheduled to run.\n\t *\n\t * Alternatively, if the action is scheduled to run in the future, and is run early,\n\t * likely via manual intervention, then its schedule will change based on the time now.\n\t * For example, if a recurring action set to run every day, and is run 12 hours early,\n\t * it will run again in 24 hours, not 36 hours.\n\t *\n\t * This slippage is less of an issue with Cron actions, as the specific run time can\n\t * be set for them to run, e.g. 1am each day. In those cases, and entire period would\n\t * need to be missed before there was any change is scheduled, e.g. in the case of an\n\t * action scheduled for 1am each day, the action would need to run an entire day late.\n\t *\n\t * @param ActionScheduler_Action $action The existing action.\n\t *\n\t * @return string The ID of the stored action\n\t * @throws InvalidArgumentException If $action is not a recurring action.\n\t */\n\tpublic function repeat( $action ) {\n\t\t$schedule = $action->get_schedule();\n\t\t$next     = $schedule->get_next( as_get_datetime_object() );\n\n\t\tif ( is_null( $next ) || ! $schedule->is_recurring() ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid action - must be a recurring action.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$schedule_class = get_class( $schedule );\n\t\t$new_schedule   = new $schedule( $next, $schedule->get_recurrence(), $schedule->get_first_date() );\n\t\t$new_action     = new ActionScheduler_Action( $action->get_hook(), $action->get_args(), $new_schedule, $action->get_group() );\n\t\t$new_action->set_priority( $action->get_priority() );\n\t\treturn $this->store( $new_action );\n\t}\n\n\t/**\n\t * Creates a scheduled action.\n\t *\n\t * This general purpose method can be used in place of specific methods such as async(),\n\t * async_unique(), single() or single_unique(), etc.\n\t *\n\t * @internal Not intended for public use, should not be overridden by subclasses.\n\t *\n\t * @param array $options {\n\t *     Describes the action we wish to schedule.\n\t *\n\t *     @type string     $type      Must be one of 'async', 'cron', 'recurring', or 'single'.\n\t *     @type string     $hook      The hook to be executed.\n\t *     @type array      $arguments Arguments to be passed to the callback.\n\t *     @type string     $group     The action group.\n\t *     @type bool       $unique    If the action should be unique.\n\t *     @type int        $when      Timestamp. Indicates when the action, or first instance of the action in the case\n\t *                                 of recurring or cron actions, becomes due.\n\t *     @type int|string $pattern   Recurrence pattern. This is either an interval in seconds for recurring actions\n\t *                                 or a cron expression for cron actions.\n\t *     @type int        $priority  Lower values means higher priority. Should be in the range 0-255.\n\t * }\n\t *\n\t * @return int The action ID. Zero if there was an error scheduling the action.\n\t */\n\tpublic function create( array $options = array() ) {\n\t\t$defaults = array(\n\t\t\t'type'      => 'single',\n\t\t\t'hook'      => '',\n\t\t\t'arguments' => array(),\n\t\t\t'group'     => '',\n\t\t\t'unique'    => false,\n\t\t\t'when'      => time(),\n\t\t\t'pattern'   => null,\n\t\t\t'priority'  => 10,\n\t\t);\n\n\t\t$options = array_merge( $defaults, $options );\n\n\t\t// Cron/recurring actions without a pattern are treated as single actions (this gives calling code the ability\n\t\t// to use functions like as_schedule_recurring_action() to schedule recurring as well as single actions).\n\t\tif ( ( 'cron' === $options['type'] || 'recurring' === $options['type'] ) && empty( $options['pattern'] ) ) {\n\t\t\t$options['type'] = 'single';\n\t\t}\n\n\t\tswitch ( $options['type'] ) {\n\t\t\tcase 'async':\n\t\t\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t\t\tbreak;\n\n\t\t\tcase 'cron':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$cron     = CronExpression::factory( $options['pattern'] );\n\t\t\t\t$schedule = new ActionScheduler_CronSchedule( $date, $cron );\n\t\t\t\tbreak;\n\n\t\t\tcase 'recurring':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$schedule = new ActionScheduler_IntervalSchedule( $date, $options['pattern'] );\n\t\t\t\tbreak;\n\n\t\t\tcase 'single':\n\t\t\t\t$date     = as_get_datetime_object( $options['when'] );\n\t\t\t\t$schedule = new ActionScheduler_SimpleSchedule( $date );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\t\terror_log( \"Unknown action type '{$options['type']}' specified when trying to create an action for '{$options['hook']}'.\" );\n\t\t\t\treturn 0;\n\t\t}\n\n\t\t$action = new ActionScheduler_Action( $options['hook'], $options['arguments'], $schedule, $options['group'] );\n\t\t$action->set_priority( $options['priority'] );\n\n\t\t$action_id = 0;\n\t\ttry {\n\t\t\t$action_id = $options['unique'] ? $this->store_unique_action( $action ) : $this->store( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\terror_log(\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %1$s is the name of the hook to be enqueued, %2$s is the exception message. */\n\t\t\t\t\t__( 'Caught exception while enqueuing action \"%1$s\": %2$s', 'action-scheduler' ),\n\t\t\t\t\t$options['hook'],\n\t\t\t\t\t$e->getMessage()\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\treturn $action_id;\n\t}\n\n\t/**\n\t * Save action to database.\n\t *\n\t * @param ActionScheduler_Action $action Action object to save.\n\t *\n\t * @return int The ID of the stored action\n\t */\n\tprotected function store( ActionScheduler_Action $action ) {\n\t\t$store = ActionScheduler_Store::instance();\n\t\treturn $store->save_action( $action );\n\t}\n\n\t/**\n\t * Store action if it's unique.\n\t *\n\t * @param ActionScheduler_Action $action Action object to store.\n\t *\n\t * @return int ID of the created action. Will be 0 if action was not created.\n\t */\n\tprotected function store_unique_action( ActionScheduler_Action $action ) {\n\t\t$store = ActionScheduler_Store::instance();\n\t\tif ( method_exists( $store, 'save_unique_action' ) ) {\n\t\t\treturn $store->save_unique_action( $action );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Fallback to non-unique action if the store doesn't support unique actions.\n\t\t\t * We try to save the action as unique, accepting that there might be a race condition.\n\t\t\t * This is likely still better than giving up on unique actions entirely.\n\t\t\t */\n\t\t\t$existing_action_id = (int) $store->find_action(\n\t\t\t\t$action->get_hook(),\n\t\t\t\tarray(\n\t\t\t\t\t'args'   => $action->get_args(),\n\t\t\t\t\t'status' => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t\t\t'group'  => $action->get_group(),\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ( $existing_action_id > 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn $store->save_action( $action );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_AdminView.php","ext":"php","size":10627,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_AdminView\n *\n * @codeCoverageIgnore\n */\nclass ActionScheduler_AdminView extends ActionScheduler_AdminView_Deprecated {\n\n\t/**\n\t * Instance.\n\t *\n\t * @var null|self\n\t */\n\tprivate static $admin_view = null;\n\n\t/**\n\t * Screen ID.\n\t *\n\t * @var string\n\t */\n\tprivate static $screen_id = 'tools_page_action-scheduler';\n\n\t/**\n\t * ActionScheduler_ListTable instance.\n\t *\n\t * @var ActionScheduler_ListTable\n\t */\n\tprotected $list_table;\n\n\t/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_AdminView\n\t * @codeCoverageIgnore\n\t */\n\tpublic static function instance() {\n\n\t\tif ( empty( self::$admin_view ) ) {\n\t\t\t$class            = apply_filters( 'action_scheduler_admin_view_class', 'ActionScheduler_AdminView' );\n\t\t\tself::$admin_view = new $class();\n\t\t}\n\n\t\treturn self::$admin_view;\n\t}\n\n\t/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\tif ( is_admin() && ( ! defined( 'DOING_AJAX' ) || ! DOING_AJAX ) ) {\n\n\t\t\tif ( class_exists( 'WooCommerce' ) ) {\n\t\t\t\tadd_action( 'woocommerce_admin_status_content_action-scheduler', array( $this, 'render_admin_ui' ) );\n\t\t\t\tadd_action( 'woocommerce_system_status_report', array( $this, 'system_status_report' ) );\n\t\t\t\tadd_filter( 'woocommerce_admin_status_tabs', array( $this, 'register_system_status_tab' ) );\n\t\t\t}\n\n\t\t\tadd_action( 'admin_menu', array( $this, 'register_menu' ) );\n\t\t\tadd_action( 'admin_notices', array( $this, 'maybe_check_pastdue_actions' ) );\n\t\t\tadd_action( 'current_screen', array( $this, 'add_help_tabs' ) );\n\t\t}\n\t}\n\n\t/**\n\t * Print system status report.\n\t */\n\tpublic function system_status_report() {\n\t\t$table = new ActionScheduler_wcSystemStatus( ActionScheduler::store() );\n\t\t$table->render();\n\t}\n\n\t/**\n\t * Registers action-scheduler into WooCommerce > System status.\n\t *\n\t * @param array $tabs An associative array of tab key => label.\n\t * @return array $tabs An associative array of tab key => label, including Action Scheduler's tabs\n\t */\n\tpublic function register_system_status_tab( array $tabs ) {\n\t\t$tabs['action-scheduler'] = __( 'Scheduled Actions', 'action-scheduler' );\n\n\t\treturn $tabs;\n\t}\n\n\t/**\n\t * Include Action Scheduler's administration under the Tools menu.\n\t *\n\t * A menu under the Tools menu is important for backward compatibility (as that's\n\t * where it started), and also provides more convenient access than the WooCommerce\n\t * System Status page, and for sites where WooCommerce isn't active.\n\t */\n\tpublic function register_menu() {\n\t\t$hook_suffix = add_submenu_page(\n\t\t\t'tools.php',\n\t\t\t__( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t__( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t'manage_options',\n\t\t\t'action-scheduler',\n\t\t\tarray( $this, 'render_admin_ui' )\n\t\t);\n\t\tadd_action( 'load-' . $hook_suffix, array( $this, 'process_admin_ui' ) );\n\t}\n\n\t/**\n\t * Triggers processing of any pending actions.\n\t */\n\tpublic function process_admin_ui() {\n\t\t$this->get_list_table();\n\t}\n\n\t/**\n\t * Renders the Admin UI\n\t */\n\tpublic function render_admin_ui() {\n\t\t$table = $this->get_list_table();\n\t\t$table->display_page();\n\t}\n\n\t/**\n\t * Get the admin UI object and process any requested actions.\n\t *\n\t * @return ActionScheduler_ListTable\n\t */\n\tprotected function get_list_table() {\n\t\tif ( null === $this->list_table ) {\n\t\t\t$this->list_table = new ActionScheduler_ListTable( ActionScheduler::store(), ActionScheduler::logger(), ActionScheduler::runner() );\n\t\t\t$this->list_table->process_actions();\n\t\t}\n\n\t\treturn $this->list_table;\n\t}\n\n\t/**\n\t * Action: admin_notices\n\t *\n\t * Maybe check past-due actions, and print notice.\n\t *\n\t * @uses $this->check_pastdue_actions()\n\t */\n\tpublic function maybe_check_pastdue_actions() {\n\n\t\t// Filter to prevent checking actions (ex: inappropriate user).\n\t\tif ( ! apply_filters( 'action_scheduler_check_pastdue_actions', current_user_can( 'manage_options' ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get last check transient.\n\t\t$last_check = get_transient( 'action_scheduler_last_pastdue_actions_check' );\n\n\t\t// If transient exists, we're within interval, so bail.\n\t\tif ( ! empty( $last_check ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Perform the check.\n\t\t$this->check_pastdue_actions();\n\t}\n\n\t/**\n\t * Check past-due actions, and print notice.\n\t */\n\tprotected function check_pastdue_actions() {\n\n\t\t// Set thresholds.\n\t\t$threshold_seconds = (int) apply_filters( 'action_scheduler_pastdue_actions_seconds', DAY_IN_SECONDS );\n\t\t$threshold_min     = (int) apply_filters( 'action_scheduler_pastdue_actions_min', 1 );\n\n\t\t// Set fallback value for past-due actions count.\n\t\t$num_pastdue_actions = 0;\n\n\t\t// Allow third-parties to preempt the default check logic.\n\t\t$check = apply_filters( 'action_scheduler_pastdue_actions_check_pre', null );\n\n\t\t// If no third-party preempted and there are no past-due actions, return early.\n\t\tif ( ! is_null( $check ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Scheduled actions query arguments.\n\t\t$query_args = array(\n\t\t\t'date'     => as_get_datetime_object( time() - $threshold_seconds ),\n\t\t\t'status'   => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t'per_page' => $threshold_min,\n\t\t);\n\n\t\t// If no third-party preempted, run default check.\n\t\tif ( is_null( $check ) ) {\n\t\t\t$store               = ActionScheduler_Store::instance();\n\t\t\t$num_pastdue_actions = (int) $store->query_actions( $query_args, 'count' );\n\n\t\t\t// Check if past-due actions count is greater than or equal to threshold.\n\t\t\t$check = ( $num_pastdue_actions >= $threshold_min );\n\t\t\t$check = (bool) apply_filters( 'action_scheduler_pastdue_actions_check', $check, $num_pastdue_actions, $threshold_seconds, $threshold_min );\n\t\t}\n\n\t\t// If check failed, set transient and abort.\n\t\tif ( ! boolval( $check ) ) {\n\t\t\t$interval = apply_filters( 'action_scheduler_pastdue_actions_check_interval', round( $threshold_seconds / 4 ), $threshold_seconds );\n\t\t\tset_transient( 'action_scheduler_last_pastdue_actions_check', time(), $interval );\n\n\t\t\treturn;\n\t\t}\n\n\t\t$actions_url = add_query_arg(\n\t\t\tarray(\n\t\t\t\t'page'   => 'action-scheduler',\n\t\t\t\t'status' => 'past-due',\n\t\t\t\t'order'  => 'asc',\n\t\t\t),\n\t\t\tadmin_url( 'tools.php' )\n\t\t);\n\n\t\t// Print notice.\n\t\techo '<div class=\"notice notice-warning\"><p>';\n\t\tprintf(\n\t\t\twp_kses(\n\t\t\t\t// translators: 1) is the number of affected actions, 2) is a link to an admin screen.\n\t\t\t\t_n(\n\t\t\t\t\t'<strong>Action Scheduler:</strong> %1$d <a href=\"%2$s\">past-due action</a> found; something may be wrong. <a href=\"https://actionscheduler.org/faq/#my-site-has-past-due-actions-what-can-i-do\" target=\"_blank\">Read documentation &raquo;</a>',\n\t\t\t\t\t'<strong>Action Scheduler:</strong> %1$d <a href=\"%2$s\">past-due actions</a> found; something may be wrong. <a href=\"https://actionscheduler.org/faq/#my-site-has-past-due-actions-what-can-i-do\" target=\"_blank\">Read documentation &raquo;</a>',\n\t\t\t\t\t$num_pastdue_actions,\n\t\t\t\t\t'action-scheduler'\n\t\t\t\t),\n\t\t\t\tarray(\n\t\t\t\t\t'strong' => array(),\n\t\t\t\t\t'a'      => array(\n\t\t\t\t\t\t'href'   => true,\n\t\t\t\t\t\t'target' => true,\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t),\n\t\t\tabsint( $num_pastdue_actions ),\n\t\t\tesc_attr( esc_url( $actions_url ) )\n\t\t);\n\t\techo '</p></div>';\n\n\t\t// Facilitate third-parties to evaluate and print notices.\n\t\tdo_action( 'action_scheduler_pastdue_actions_extra_notices', $query_args );\n\t}\n\n\t/**\n\t * Provide more information about the screen and its data in the help tab.\n\t */\n\tpublic function add_help_tabs() {\n\t\t$screen = get_current_screen();\n\n\t\tif ( ! $screen || self::$screen_id !== $screen->id ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$as_version       = ActionScheduler_Versions::instance()->latest_version();\n\t\t$as_source        = ActionScheduler_SystemInformation::active_source();\n\t\t$as_source_path   = ActionScheduler_SystemInformation::active_source_path();\n\t\t$as_source_markup = sprintf( '<code>%s</code>', esc_html( $as_source_path ) );\n\n\t\tif ( ! empty( $as_source ) ) {\n\t\t\t$as_source_markup = sprintf(\n\t\t\t\t'%s: <abbr title=\"%s\">%s</abbr>',\n\t\t\t\tucfirst( $as_source['type'] ),\n\t\t\t\tesc_attr( $as_source_path ),\n\t\t\t\tesc_html( $as_source['name'] )\n\t\t\t);\n\t\t}\n\n\t\t$screen->add_help_tab(\n\t\t\tarray(\n\t\t\t\t'id'      => 'action_scheduler_about',\n\t\t\t\t'title'   => __( 'About', 'action-scheduler' ),\n\t\t\t\t'content' =>\n\t\t\t\t\t// translators: %s is the Action Scheduler version.\n\t\t\t\t\t'<h2>' . sprintf( __( 'About Action Scheduler %s', 'action-scheduler' ), $as_version ) . '</h2>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\t__( 'Action Scheduler is a scalable, traceable job queue for background processing large sets of actions. Action Scheduler works by triggering an action hook to run at some time in the future. Scheduled actions can also be scheduled to run on a recurring schedule.', 'action-scheduler' ) .\n\t\t\t\t\t'</p>' .\n\t\t\t\t\t'<h3>' . esc_html__( 'Source', 'action-scheduler' ) . '</h3>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\tesc_html__( 'Action Scheduler is currently being loaded from the following location. This can be useful when debugging, or if requested by the support team.', 'action-scheduler' ) .\n\t\t\t\t\t'</p>' .\n\t\t\t\t\t'<p>' . $as_source_markup . '</p>' .\n\t\t\t\t\t'<h3>' . esc_html__( 'WP CLI', 'action-scheduler' ) . '</h3>' .\n\t\t\t\t\t'<p>' .\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t/* translators: %1$s is WP CLI command (not translatable) */\n\t\t\t\t\t\t\tesc_html__( 'WP CLI commands are available: execute %1$s for a list of available commands.', 'action-scheduler' ),\n\t\t\t\t\t\t\t'<code>wp help action-scheduler</code>'\n\t\t\t\t\t\t) .\n\t\t\t\t\t'</p>',\n\t\t\t)\n\t\t);\n\n\t\t$screen->add_help_tab(\n\t\t\tarray(\n\t\t\t\t'id'      => 'action_scheduler_columns',\n\t\t\t\t'title'   => __( 'Columns', 'action-scheduler' ),\n\t\t\t\t'content' =>\n\t\t\t\t\t'<h2>' . __( 'Scheduled Action Columns', 'action-scheduler' ) . '</h2>' .\n\t\t\t\t\t'<ul>' .\n\t\t\t\t\tsprintf( '<li><strong>%1$s</strong>: %2$s</li>', __( 'Hook', 'action-scheduler' ), __( 'Name of the action hook that will be triggered.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s</strong>: %2$s</li>', __( 'Status', 'action-scheduler' ), __( 'Action statuses are Pending, Complete, Canceled, Failed', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s</strong>: %2$s</li>', __( 'Arguments', 'action-scheduler' ), __( 'Optional data array passed to the action hook.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s</strong>: %2$s</li>', __( 'Group', 'action-scheduler' ), __( 'Optional action group.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s</strong>: %2$s</li>', __( 'Recurrence', 'action-scheduler' ), __( 'The action\\'s schedule frequency.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s</strong>: %2$s</li>', __( 'Scheduled', 'action-scheduler' ), __( 'The date/time the action is/was scheduled to run.', 'action-scheduler' ) ) .\n\t\t\t\t\tsprintf( '<li><strong>%1$s</strong>: %2$s</li>', __( 'Log', 'action-scheduler' ), __( 'Activity log for the action.', 'action-scheduler' ) ) .\n\t\t\t\t\t'</ul>',\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_RecurringActionScheduler.php","ext":"php","size":3123,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_RecurringActionScheduler\n *\n * This class ensures that the `action_scheduler_ensure_recurring_actions` hook is triggered on a daily interval. This\n * simplifies the process for other plugins to register their recurring actions without requiring each plugin to query\n * or schedule actions independently on every request.\n */\nclass ActionScheduler_RecurringActionScheduler {\n\n\t/**\n\t * @var string The hook of the scheduled recurring action that is run to trigger the\n\t *      `action_scheduler_ensure_recurring_actions` hook that plugins should use.  We can't directly have the\n\t *      scheduled action hook be the hook plugins should use because the actions will show as failed if no plugin\n\t *      was actively hooked into it.\n\t */\n\tprivate const RUN_SCHEDULED_RECURRING_ACTIONS_HOOK = 'action_scheduler_run_recurring_actions_schedule_hook';\n\n\t/**\n\t * Initialize the instance.  Should only be run on a single instance per request.\n\t *\n\t * @return void\n\t */\n\tpublic function init(): void {\n\t\tadd_action( self::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK, array( $this, 'run_recurring_scheduler_hook' ) );\n\t\tif ( is_admin() && ( ! defined( 'DOING_AJAX' ) || ! DOING_AJAX ) ) {\n\t\t\tadd_action( 'action_scheduler_init', array( $this, 'schedule_recurring_scheduler_hook' ) );\n\t\t}\n\t}\n\n\t/**\n\t * Schedule the recurring `action_scheduler_ensure_recurring_actions` action if not already scheduled.\n\t *\n\t * @return void\n\t */\n\tpublic function schedule_recurring_scheduler_hook(): void {\n\t\tif ( false === wp_cache_get( 'as_is_ensure_recurring_actions_scheduled' ) ) {\n\t\t\tif ( ! as_has_scheduled_action( self::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK ) ) {\n\t\t\t\tas_schedule_recurring_action(\n\t\t\t\t\ttime(),\n\t\t\t\t\tDAY_IN_SECONDS,\n\t\t\t\t\tself::RUN_SCHEDULED_RECURRING_ACTIONS_HOOK,\n\t\t\t\t\t[],\n\t\t\t\t\t'ActionScheduler',\n\t\t\t\t\ttrue,\n\t\t\t\t\t20\n\t\t\t\t);\n\t\t\t}\n\t\t\twp_cache_set( 'as_is_ensure_recurring_actions_scheduled', true, HOUR_IN_SECONDS );\n\t\t}\n\t}\n\n\t/**\n\t * Trigger the hook to allow other plugins to schedule their recurring actions.\n\t *\n\t * @return void\n\t */\n\tpublic function run_recurring_scheduler_hook(): void {\n\t\t/**\n\t\t * Fires to allow extensions to verify and ensure their recurring actions are scheduled.\n\t\t *\n\t\t * This action is scheduled to trigger once every 24 hrs for the purpose of having 3rd party plugins verify that\n\t\t * any previously scheduled recurring actions are still scheduled. Because recurring actions could stop getting\n\t\t * rescheduled by default due to excessive failures, database issues, or other interruptions, extensions can use\n\t\t * this hook to check for the existence of their recurring actions and reschedule them if necessary.\n\t\t *\n\t\t * Example usage:\n\t\t *\n\t\t * add_action('action_scheduler_ensure_recurring_actions', function() {\n\t\t *     // Check if the recurring action is scheduled, and reschedule if missing.\n\t\t *     if ( ! as_has_scheduled_action('my_recurring_action') ) {\n\t\t *         as_schedule_recurring_action( time(), HOUR_IN_SECONDS, 'my_recurring_action' );\n\t\t *     }\n\t\t * });\n\t\t *\n\t\t * @since 3.9.3\n\t\t */\n\t\tdo_action( 'action_scheduler_ensure_recurring_actions' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_QueueRunner.php","ext":"php","size":9720,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_QueueRunner\n */\nclass ActionScheduler_QueueRunner extends ActionScheduler_Abstract_QueueRunner {\n\tconst WP_CRON_HOOK = 'action_scheduler_run_queue';\n\n\tconst WP_CRON_SCHEDULE = 'every_minute';\n\n\t/**\n\t * ActionScheduler_AsyncRequest_QueueRunner instance.\n\t *\n\t * @var ActionScheduler_AsyncRequest_QueueRunner\n\t */\n\tprotected $async_request;\n\n\t/**\n\t * ActionScheduler_QueueRunner instance.\n\t *\n\t * @var ActionScheduler_QueueRunner\n\t */\n\tprivate static $runner = null;\n\n\t/**\n\t * Number of processed actions.\n\t *\n\t * @var int\n\t */\n\tprivate $processed_actions_count = 0;\n\n\t/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_QueueRunner\n\t * @codeCoverageIgnore\n\t */\n\tpublic static function instance() {\n\t\tif ( empty( self::$runner ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_queue_runner_class', 'ActionScheduler_QueueRunner' );\n\t\t\tself::$runner = new $class();\n\t\t}\n\n\t\treturn self::$runner;\n\t}\n\n\t/**\n\t * ActionScheduler_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null                    $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null        $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null             $cleaner Cleaner object.\n\t * @param ActionScheduler_AsyncRequest_QueueRunner|null $async_request Async request runner object.\n\t */\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null, ?ActionScheduler_AsyncRequest_QueueRunner $async_request = null ) {\n\t\tparent::__construct( $store, $monitor, $cleaner );\n\n\t\tif ( is_null( $async_request ) ) {\n\t\t\t$async_request = new ActionScheduler_AsyncRequest_QueueRunner( $this->store );\n\t\t}\n\n\t\t$this->async_request = $async_request;\n\t}\n\n\t/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\n\t\tadd_filter( 'cron_schedules', array( self::instance(), 'add_wp_cron_schedule' ) ); // phpcs:ignore WordPress.WP.CronInterval.CronSchedulesInterval\n\n\t\t// Check for and remove any WP Cron hook scheduled by Action Scheduler < 3.0.0, which didn't include the $context param.\n\t\t$next_timestamp = wp_next_scheduled( self::WP_CRON_HOOK );\n\t\tif ( $next_timestamp ) {\n\t\t\twp_unschedule_event( $next_timestamp, self::WP_CRON_HOOK );\n\t\t}\n\n\t\t$cron_context = array( 'WP Cron' );\n\n\t\tif ( ! wp_next_scheduled( self::WP_CRON_HOOK, $cron_context ) ) {\n\t\t\t$schedule = apply_filters( 'action_scheduler_run_schedule', self::WP_CRON_SCHEDULE );\n\t\t\twp_schedule_event( time(), $schedule, self::WP_CRON_HOOK, $cron_context );\n\t\t}\n\n\t\tadd_action( self::WP_CRON_HOOK, array( self::instance(), 'run' ) );\n\t\t$this->hook_dispatch_async_request();\n\t}\n\n\t/**\n\t * Hook check for dispatching an async request.\n\t */\n\tpublic function hook_dispatch_async_request() {\n\t\tadd_action( 'shutdown', array( $this, 'maybe_dispatch_async_request' ) );\n\t}\n\n\t/**\n\t * Unhook check for dispatching an async request.\n\t */\n\tpublic function unhook_dispatch_async_request() {\n\t\tremove_action( 'shutdown', array( $this, 'maybe_dispatch_async_request' ) );\n\t}\n\n\t/**\n\t * Check if we should dispatch an async request to process actions.\n\t *\n\t * This method is attached to 'shutdown', so is called frequently. To avoid slowing down\n\t * the site, it mitigates the work performed in each request by:\n\t * 1. checking if it's in the admin context and then\n\t * 2. haven't run on the 'shutdown' hook within the lock time (60 seconds by default)\n\t * 3. haven't exceeded the number of allowed batches.\n\t *\n\t * The order of these checks is important, because they run from a check on a value:\n\t * 1. in memory - is_admin() maps to $GLOBALS or the WP_ADMIN constant\n\t * 2. in memory - transients use autoloaded options by default\n\t * 3. from a database query - has_maximum_concurrent_batches() run the query\n\t *    $this->store->get_claim_count() to find the current number of claims in the DB.\n\t *\n\t * If all of these conditions are met, then we request an async runner check whether it\n\t * should dispatch a request to process pending actions.\n\t */\n\tpublic function maybe_dispatch_async_request() {\n\t\t// Only start an async queue at most once every 60 seconds.\n\t\tif (\n\t\t\tis_admin()\n\t\t\t&& ! ActionScheduler::lock()->is_locked( 'async-request-runner' )\n\t\t\t&& ActionScheduler::lock()->set( 'async-request-runner' )\n\t\t) {\n\t\t\t$this->async_request->maybe_dispatch();\n\t\t}\n\t}\n\n\t/**\n\t * Process actions in the queue. Attached to self::WP_CRON_HOOK i.e. 'action_scheduler_run_queue'\n\t *\n\t * The $context param of this method defaults to 'WP Cron', because prior to Action Scheduler 3.0.0\n\t * that was the only context in which this method was run, and the self::WP_CRON_HOOK hook had no context\n\t * passed along with it. New code calling this method directly, or by triggering the self::WP_CRON_HOOK,\n\t * should set a context as the first parameter. For an example of this, refer to the code seen in\n\t *\n\t * @see ActionScheduler_AsyncRequest_QueueRunner::handle()\n\t *\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t */\n\tpublic function run( $context = 'WP Cron' ) {\n\t\tActionScheduler_Compatibility::raise_memory_limit();\n\t\tActionScheduler_Compatibility::raise_time_limit( $this->get_time_limit() );\n\t\tdo_action( 'action_scheduler_before_process_queue' );\n\t\t$this->run_cleanup();\n\n\t\t$this->processed_actions_count = 0;\n\t\tif ( false === $this->has_maximum_concurrent_batches() ) {\n\t\t\tdo {\n\t\t\t\t$batch_size                     = apply_filters( 'action_scheduler_queue_runner_batch_size', 25 );\n\t\t\t\t$processed_actions_in_batch     = $this->do_batch( $batch_size, $context );\n\t\t\t\t$this->processed_actions_count += $processed_actions_in_batch;\n\t\t\t} while ( $processed_actions_in_batch > 0 && ! $this->batch_limits_exceeded( $this->processed_actions_count ) ); // keep going until we run out of actions, time, or memory.\n\t\t}\n\n\t\tdo_action( 'action_scheduler_after_process_queue' );\n\t\treturn $this->processed_actions_count;\n\t}\n\n\t/**\n\t * Process a batch of actions pending in the queue.\n\t *\n\t * Actions are processed by claiming a set of pending actions then processing each one until either the batch\n\t * size is completed, or memory or time limits are reached, defined by @see $this->batch_limits_exceeded().\n\t *\n\t * @param int    $size The maximum number of actions to process in the batch.\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *                        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t */\n\tprotected function do_batch( $size = 100, $context = '' ) {\n\t\t$claim = $this->store->stake_claim( $size );\n\t\t$this->monitor->attach( $claim );\n\t\t$processed_actions = 0;\n\n\t\tforeach ( $claim->get_actions() as $action_id ) {\n\t\t\t// bail if we lost the claim.\n\t\t\tif ( ! in_array( $action_id, $this->store->find_actions_by_claim_id( $claim->get_id() ), true ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$this->process_action( $action_id, $context );\n\t\t\t$processed_actions++;\n\n\t\t\tif ( $this->batch_limits_exceeded( $processed_actions + $this->processed_actions_count ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t$this->store->release_claim( $claim );\n\t\t$this->monitor->detach();\n\t\t$this->clear_caches();\n\t\treturn $processed_actions;\n\t}\n\n\t/**\n\t * Flush the cache if possible (intended for use after a batch of actions has been processed).\n\t *\n\t * This is useful because running large batches can eat up memory and because invalid data can accrue in the\n\t * runtime cache, which may lead to unexpected results.\n\t */\n\tprotected function clear_caches() {\n\t\t/*\n\t\t * Calling wp_cache_flush_runtime() lets us clear the runtime cache without invalidating the external object\n\t\t * cache, so we will always prefer this method (as compared to calling wp_cache_flush()) when it is available.\n\t\t *\n\t\t * However, this function was only introduced in WordPress 6.0. Additionally, the preferred way of detecting if\n\t\t * it is supported changed in WordPress 6.1 so we use two different methods to decide if we should utilize it.\n\t\t */\n\t\t$flushing_runtime_cache_explicitly_supported = function_exists( 'wp_cache_supports' ) && wp_cache_supports( 'flush_runtime' );\n\t\t$flushing_runtime_cache_implicitly_supported = ! function_exists( 'wp_cache_supports' ) && function_exists( 'wp_cache_flush_runtime' );\n\n\t\tif ( $flushing_runtime_cache_explicitly_supported || $flushing_runtime_cache_implicitly_supported ) {\n\t\t\twp_cache_flush_runtime();\n\t\t} elseif (\n\t\t\t! wp_using_ext_object_cache()\n\t\t\t/**\n\t\t\t * When an external object cache is in use, and when wp_cache_flush_runtime() is not available, then\n\t\t\t * normally the cache will not be flushed after processing a batch of actions (to avoid a performance\n\t\t\t * penalty for other processes).\n\t\t\t *\n\t\t\t * This filter makes it possible to override this behavior and always flush the cache, even if an external\n\t\t\t * object cache is in use.\n\t\t\t *\n\t\t\t * @since 1.0\n\t\t\t *\n\t\t\t * @param bool $flush_cache If the cache should be flushed.\n\t\t\t */\n\t\t\t|| apply_filters( 'action_scheduler_queue_runner_flush_cache', false )\n\t\t) {\n\t\t\twp_cache_flush();\n\t\t}\n\t}\n\n\t/**\n\t * Add schedule to WP cron.\n\t *\n\t * @param array<string, array<string, int|string>> $schedules Schedules.\n\t * @return array<string, array<string, int|string>>\n\t */\n\tpublic function add_wp_cron_schedule( $schedules ) {\n\t\t$schedules['every_minute'] = array(\n\t\t\t'interval' => 60, // in seconds.\n\t\t\t'display'  => __( 'Every minute', 'action-scheduler' ),\n\t\t);\n\n\t\treturn $schedules;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_SystemInformation.php","ext":"php","size":2497,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Provides information about active and registered instances of Action Scheduler.\n */\nclass ActionScheduler_SystemInformation {\n\t/**\n\t * Returns information about the plugin or theme which contains the current active version\n\t * of Action Scheduler.\n\t *\n\t * If this cannot be determined, or if Action Scheduler is being loaded via some other\n\t * method, then it will return an empty array. Otherwise, if populated, the array will\n\t * look like the following:\n\t *\n\t *     [\n\t *         'type' => 'plugin', # or 'theme'\n\t *         'name' => 'Name',\n\t *     ]\n\t *\n\t * @return array\n\t */\n\tpublic static function active_source(): array {\n\t\t$plugins      = get_plugins();\n\t\t$plugin_files = array_keys( $plugins );\n\n\t\tforeach ( $plugin_files as $plugin_file ) {\n\t\t\t$plugin_path = trailingslashit( WP_PLUGIN_DIR ) . dirname( $plugin_file );\n\t\t\t$plugin_file = trailingslashit( WP_PLUGIN_DIR ) . $plugin_file;\n\n\t\t\tif ( 0 !== strpos( dirname( __DIR__ ), $plugin_path ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$plugin_data = get_plugin_data( $plugin_file );\n\n\t\t\tif ( ! is_array( $plugin_data ) || empty( $plugin_data['Name'] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'type' => 'plugin',\n\t\t\t\t'name' => $plugin_data['Name'],\n\t\t\t);\n\t\t}\n\n\t\t$themes = (array) search_theme_directories();\n\n\t\tforeach ( $themes as $slug => $data ) {\n\t\t\t$needle = trailingslashit( $data['theme_root'] ) . $slug . '/';\n\n\t\t\tif ( 0 !== strpos( __FILE__, $needle ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$theme = wp_get_theme( $slug );\n\n\t\t\tif ( ! is_object( $theme ) || ! is_a( $theme, \\WP_Theme::class ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'type' => 'theme',\n\t\t\t\t// phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\t\t\t'name' => $theme->Name,\n\t\t\t);\n\t\t}\n\n\t\treturn array();\n\t}\n\n\t/**\n\t * Returns the directory path for the currently active installation of Action Scheduler.\n\t *\n\t * @return string\n\t */\n\tpublic static function active_source_path(): string {\n\t\treturn trailingslashit( dirname( __DIR__ ) );\n\t}\n\n\t/**\n\t * Get registered sources.\n\t *\n\t * It is not always possible to obtain this information. For instance, if earlier versions (<=3.9.0) of\n\t * Action Scheduler register themselves first, then the necessary data about registered sources will\n\t * not be available.\n\t *\n\t * @return array<string, string>\n\t */\n\tpublic static function get_sources() {\n\t\t$versions = ActionScheduler_Versions::instance();\n\t\treturn method_exists( $versions, 'get_sources' ) ? $versions->get_sources() : array();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_Exception.php","ext":"php","size":207,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * ActionScheduler Exception Interface.\n *\n * Facilitates catching Exceptions unique to Action Scheduler.\n *\n * @package ActionScheduler\n * @since 2.1.0\n */\ninterface ActionScheduler_Exception {}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_DateTime.php","ext":"php","size":2060,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * ActionScheduler DateTime class.\n *\n * This is a custom extension to DateTime that\n */\nclass ActionScheduler_DateTime extends DateTime {\n\n\t/**\n\t * UTC offset.\n\t *\n\t * Only used when a timezone is not set. When a timezone string is\n\t * used, this will be set to 0.\n\t *\n\t * @var int\n\t */\n\tprotected $utcOffset = 0; // phpcs:ignore WordPress.NamingConventions.ValidVariableName.PropertyNotSnakeCase\n\n\t/**\n\t * Get the unix timestamp of the current object.\n\t *\n\t * Missing in PHP 5.2 so just here so it can be supported consistently.\n\t *\n\t * @return int\n\t */\n\t#[\\ReturnTypeWillChange]\n\tpublic function getTimestamp() {\n\t\treturn method_exists( 'DateTime', 'getTimestamp' ) ? parent::getTimestamp() : $this->format( 'U' );\n\t}\n\n\t/**\n\t * Set the UTC offset.\n\t *\n\t * This represents a fixed offset instead of a timezone setting.\n\t *\n\t * @param string|int $offset UTC offset value.\n\t */\n\tpublic function setUtcOffset( $offset ) {\n\t\t$this->utcOffset = intval( $offset ); // phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t}\n\n\t/**\n\t * Returns the timezone offset.\n\t *\n\t * @return int\n\t * @link http://php.net/manual/en/datetime.getoffset.php\n\t */\n\t#[\\ReturnTypeWillChange]\n\tpublic function getOffset() {\n\t\treturn $this->utcOffset ? $this->utcOffset : parent::getOffset(); // phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t}\n\n\t/**\n\t * Set the TimeZone associated with the DateTime\n\t *\n\t * @param DateTimeZone $timezone Timezone object.\n\t *\n\t * @return static\n\t * @link http://php.net/manual/en/datetime.settimezone.php\n\t */\n\t#[\\ReturnTypeWillChange]\n\tpublic function setTimezone( $timezone ) {\n\t\t$this->utcOffset = 0; // phpcs:ignore WordPress.NamingConventions.ValidVariableName.UsedPropertyNotSnakeCase\n\t\tparent::setTimezone( $timezone );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Get the timestamp with the WordPress timezone offset added or subtracted.\n\t *\n\t * @since  3.0.0\n\t * @return int\n\t */\n\tpublic function getOffsetTimestamp() {\n\t\treturn $this->getTimestamp() + $this->getOffset();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schedules/ActionScheduler_IntervalSchedule.php","ext":"php","size":2633,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_IntervalSchedule\n */\nclass ActionScheduler_IntervalSchedule extends ActionScheduler_Abstract_RecurringSchedule implements ActionScheduler_Schedule {\n\n\t/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t */\n\tprivate $start_timestamp = null;\n\n\t/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t */\n\tprivate $interval_in_seconds = null;\n\n\t/**\n\t * Calculate when this schedule should start after a given date & time using\n\t * the number of seconds between recurrences.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime\n\t */\n\tprotected function calculate_next( DateTime $after ) {\n\t\t$after->modify( '+' . (int) $this->get_recurrence() . ' seconds' );\n\t\treturn $after;\n\t}\n\n\t/**\n\t * Schedule interval in seconds.\n\t *\n\t * @return int\n\t */\n\tpublic function interval_in_seconds() {\n\t\t_deprecated_function( __METHOD__, '3.0.0', '(int)ActionScheduler_Abstract_RecurringSchedule::get_recurrence()' );\n\t\treturn (int) $this->get_recurrence();\n\t}\n\n\t/**\n\t * Serialize interval schedules with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, recurring schedules used different property names to\n\t * refer to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * possibility of infinite loops if downgrading to Action Scheduler < 3.0.0, we need to\n\t * also store the data with the old property names so if it's unserialized in AS < 3.0,\n\t * the schedule doesn't end up with a null/false/0 recurrence.\n\t *\n\t * @return array\n\t */\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->start_timestamp     = $this->scheduled_timestamp;\n\t\t$this->interval_in_seconds = $this->recurrence;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'start_timestamp',\n\t\t\t\t'interval_in_seconds',\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Unserialize interval schedules serialized/stored prior to AS 3.0.0\n\t *\n\t * For more background, @see ActionScheduler_Abstract_RecurringSchedule::__wakeup().\n\t */\n\tpublic function __wakeup() {\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->start_timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->start_timestamp;\n\t\t\tunset( $this->start_timestamp );\n\t\t}\n\n\t\tif ( is_null( $this->recurrence ) && ! is_null( $this->interval_in_seconds ) ) {\n\t\t\t$this->recurrence = $this->interval_in_seconds;\n\t\t\tunset( $this->interval_in_seconds );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schedules/ActionScheduler_CanceledSchedule.php","ext":"php","size":1647,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_SimpleSchedule\n */\nclass ActionScheduler_CanceledSchedule extends ActionScheduler_SimpleSchedule {\n\n\t/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t */\n\tprivate $timestamp = null;\n\n\t/**\n\t * Calculate when the next instance of this schedule would run based on a given date & time.\n\t *\n\t * @param DateTime $after Timestamp.\n\t *\n\t * @return DateTime|null\n\t */\n\tpublic function calculate_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Cancelled actions should never have a next schedule, even if get_next()\n\t * is called with $after < $this->scheduled_date.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime|null\n\t */\n\tpublic function get_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Action is not recurring.\n\t *\n\t * @return bool\n\t */\n\tpublic function is_recurring() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Unserialize recurring schedules serialized/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To maintain backward\n\t * compatibility with schedules serialized and stored prior to 3.0, we need to correctly\n\t * map the old property names with matching visibility.\n\t */\n\tpublic function __wakeup() {\n\t\tif ( ! is_null( $this->timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->timestamp;\n\t\t\tunset( $this->timestamp );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schedules/ActionScheduler_NullSchedule.php","ext":"php","size":709,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_NullSchedule\n */\nclass ActionScheduler_NullSchedule extends ActionScheduler_SimpleSchedule {\n\n\t/**\n\t * DateTime instance.\n\t *\n\t * @var DateTime|null\n\t */\n\tprotected $scheduled_date;\n\n\t/**\n\t * Make the $date param optional and default to null.\n\t *\n\t * @param null|DateTime $date The date & time to run the action.\n\t */\n\tpublic function __construct( ?DateTime $date = null ) {\n\t\t$this->scheduled_date = null;\n\t}\n\n\t/**\n\t * This schedule has no scheduled DateTime, so we need to override the parent __sleep().\n\t *\n\t * @return array\n\t */\n\tpublic function __sleep() {\n\t\treturn array();\n\t}\n\n\t/**\n\t * Wakeup.\n\t */\n\tpublic function __wakeup() {\n\t\t$this->scheduled_date = null;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schedules/ActionScheduler_CronSchedule.php","ext":"php","size":3831,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_CronSchedule\n */\nclass ActionScheduler_CronSchedule extends ActionScheduler_Abstract_RecurringSchedule implements ActionScheduler_Schedule {\n\n\t/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t */\n\tprivate $start_timestamp = null;\n\n\t/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null\n\t */\n\tprivate $cron = null;\n\n\t/**\n\t * Wrapper for parent constructor to accept a cron expression string and map it to a CronExpression for this\n\t * objects $recurrence property.\n\t *\n\t * @param DateTime              $start The date & time to run the action at or after. If $start aligns with the CronSchedule passed via $recurrence, it will be used. If it does not align, the first matching date after it will be used.\n\t * @param CronExpression|string $recurrence The CronExpression used to calculate the schedule's next instance.\n\t * @param DateTime|null         $first (Optional) The date & time the first instance of this interval schedule ran. Default null, meaning this is the first instance.\n\t */\n\tpublic function __construct( DateTime $start, $recurrence, ?DateTime $first = null ) {\n\t\tif ( ! is_a( $recurrence, 'CronExpression' ) ) {\n\t\t\t$recurrence = CronExpression::factory( $recurrence );\n\t\t}\n\n\t\t// For backward compatibility, we need to make sure the date is set to the first matching cron date, not whatever date is passed in. Importantly, by passing true as the 3rd param, if $start matches the cron expression, then it will be used. This was previously handled in the now deprecated next() method.\n\t\t$date = $recurrence->getNextRunDate( $start, 0, true );\n\n\t\t// parent::__construct() will set this to $date by default, but that may be different to $start now.\n\t\t$first = empty( $first ) ? $start : $first;\n\n\t\tparent::__construct( $date, $recurrence, $first );\n\t}\n\n\t/**\n\t * Calculate when an instance of this schedule would start based on a given\n\t * date & time using its the CronExpression.\n\t *\n\t * @param DateTime $after Timestamp.\n\t * @return DateTime\n\t */\n\tprotected function calculate_next( DateTime $after ) {\n\t\treturn $this->recurrence->getNextRunDate( $after, 0, false );\n\t}\n\n\t/**\n\t * Get the schedule's recurrence.\n\t *\n\t * @return string\n\t */\n\tpublic function get_recurrence() {\n\t\treturn strval( $this->recurrence );\n\t}\n\n\t/**\n\t * Serialize cron schedules with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, recurring schedules used different property names to\n\t * refer to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * possibility of infinite loops if downgrading to Action Scheduler < 3.0.0, we need to\n\t * also store the data with the old property names so if it's unserialized in AS < 3.0,\n\t * the schedule doesn't end up with a null recurrence.\n\t *\n\t * @return array\n\t */\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->start_timestamp = $this->scheduled_timestamp;\n\t\t$this->cron            = $this->recurrence;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'start_timestamp',\n\t\t\t\t'cron',\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Unserialize cron schedules serialized/stored prior to AS 3.0.0\n\t *\n\t * For more background, @see ActionScheduler_Abstract_RecurringSchedule::__wakeup().\n\t */\n\tpublic function __wakeup() {\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->start_timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->start_timestamp;\n\t\t\tunset( $this->start_timestamp );\n\t\t}\n\n\t\tif ( is_null( $this->recurrence ) && ! is_null( $this->cron ) ) {\n\t\t\t$this->recurrence = $this->cron;\n\t\t\tunset( $this->cron );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schedules/ActionScheduler_Schedule.php","ext":"php","size":456,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Schedule\n */\ninterface ActionScheduler_Schedule {\n\t/**\n\t * Get the date & time this schedule was created to run, or calculate when it should be run\n\t * after a given date & time.\n\t *\n\t * @param null|DateTime $after Timestamp.\n\t * @return DateTime|null\n\t */\n\tpublic function next( ?DateTime $after = null );\n\n\t/**\n\t * Identify the schedule as (not) recurring.\n\t *\n\t * @return bool\n\t */\n\tpublic function is_recurring();\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schedules/ActionScheduler_SimpleSchedule.php","ext":"php","size":2367,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_SimpleSchedule\n */\nclass ActionScheduler_SimpleSchedule extends ActionScheduler_Abstract_Schedule {\n\n\t/**\n\t * Deprecated property @see $this->__wakeup() for details.\n\t *\n\t * @var null|DateTime\n\t */\n\tprivate $timestamp = null;\n\n\t/**\n\t * Calculate when this schedule should start after a given date & time using\n\t * the number of seconds between recurrences.\n\t *\n\t * @param DateTime $after Timestamp.\n\t *\n\t * @return DateTime|null\n\t */\n\tpublic function calculate_next( DateTime $after ) {\n\t\treturn null;\n\t}\n\n\t/**\n\t * Schedule is not recurring.\n\t *\n\t * @return bool\n\t */\n\tpublic function is_recurring() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Serialize schedule with data required prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To guard against the\n\t * scheduled date for single actions always being seen as \"now\" if downgrading to\n\t * Action Scheduler < 3.0.0, we need to also store the data with the old property names\n\t * so if it's unserialized in AS < 3.0, the schedule doesn't end up with a null recurrence.\n\t *\n\t * @return array\n\t */\n\tpublic function __sleep() {\n\n\t\t$sleep_params = parent::__sleep();\n\n\t\t$this->timestamp = $this->scheduled_timestamp;\n\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'timestamp',\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Unserialize recurring schedules serialized/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. Action Scheduler 3.0.0\n\t * aligned properties and property names for better inheritance. To maintain backward\n\t * compatibility with schedules serialized and stored prior to 3.0, we need to correctly\n\t * map the old property names with matching visibility.\n\t */\n\tpublic function __wakeup() {\n\n\t\tif ( is_null( $this->scheduled_timestamp ) && ! is_null( $this->timestamp ) ) {\n\t\t\t$this->scheduled_timestamp = $this->timestamp;\n\t\t\tunset( $this->timestamp );\n\t\t}\n\t\tparent::__wakeup();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Abstract_QueueRunner.php","ext":"php","size":13770,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Abstract class with common Queue Cleaner functionality.\n */\nabstract class ActionScheduler_Abstract_QueueRunner extends ActionScheduler_Abstract_QueueRunner_Deprecated {\n\n\t/**\n\t * ActionScheduler_QueueCleaner instance.\n\t *\n\t * @var ActionScheduler_QueueCleaner\n\t */\n\tprotected $cleaner;\n\n\t/**\n\t * ActionScheduler_FatalErrorMonitor instance.\n\t *\n\t * @var ActionScheduler_FatalErrorMonitor\n\t */\n\tprotected $monitor;\n\n\t/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprotected $store;\n\n\t/**\n\t * The created time.\n\t *\n\t * Represents when the queue runner was constructed and used when calculating how long a PHP request has been running.\n\t * For this reason it should be as close as possible to the PHP request start time.\n\t *\n\t * @var int\n\t */\n\tprivate $created_time;\n\n\t/**\n\t * ActionScheduler_Abstract_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null             $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null      $cleaner Cleaner object.\n\t */\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null ) {\n\n\t\t$this->created_time = microtime( true );\n\n\t\t$this->store   = $store ? $store : ActionScheduler_Store::instance();\n\t\t$this->monitor = $monitor ? $monitor : new ActionScheduler_FatalErrorMonitor( $this->store );\n\t\t$this->cleaner = $cleaner ? $cleaner : new ActionScheduler_QueueCleaner( $this->store );\n\t}\n\n\t/**\n\t * Process an individual action.\n\t *\n\t * @param int    $action_id The action ID to process.\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *                        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @throws \\Exception When error running action.\n\t */\n\tpublic function process_action( $action_id, $context = '' ) {\n\t\t// Temporarily override the error handler while we process the current action.\n\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_set_error_handler\n\t\tset_error_handler(\n\t\t\t/**\n\t\t\t * Temporary error handler which can catch errors and convert them into exceptions. This facilitates more\n\t\t\t * robust error handling across all supported PHP versions.\n\t\t\t *\n\t\t\t * @throws Exception\n\t\t\t *\n\t\t\t * @param int    $type    Error level expressed as an integer.\n\t\t\t * @param string $message Error message.\n\t\t\t */\n\t\t\tfunction ( $type, $message ) {\n\t\t\t\tthrow new Exception( $message );\n\t\t\t},\n\t\t\tE_USER_ERROR | E_RECOVERABLE_ERROR\n\t\t);\n\n\t\t/*\n\t\t * The nested try/catch structure is required because we potentially need to convert thrown errors into\n\t\t * exceptions (and an exception thrown from a catch block cannot be caught by a later catch block in the *same*\n\t\t * structure).\n\t\t */\n\t\ttry {\n\t\t\ttry {\n\t\t\t\t$valid_action = true;\n\n\t\t\t\tdo_action( 'action_scheduler_before_execute', $action_id, $context );\n\n\t\t\t\tif ( ActionScheduler_Store::STATUS_PENDING !== $this->store->get_status( $action_id ) ) {\n\t\t\t\t\t$valid_action = false;\n\t\t\t\t\tdo_action( 'action_scheduler_execution_ignored', $action_id, $context );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tdo_action( 'action_scheduler_begin_execute', $action_id, $context );\n\n\t\t\t\t$action = $this->store->fetch_action( $action_id );\n\t\t\t\t$this->store->log_execution( $action_id );\n\t\t\t\t$action->execute();\n\t\t\t\tdo_action( 'action_scheduler_after_execute', $action_id, $action, $context );\n\t\t\t\t$this->store->mark_complete( $action_id );\n\t\t\t} catch ( Throwable $e ) {\n\t\t\t\t// Throwable is defined when executing under PHP 7.0 and up. We convert it to an exception, for\n\t\t\t\t// compatibility with ActionScheduler_Logger.\n\t\t\t\tthrow new Exception( $e->getMessage(), $e->getCode(), $e );\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t// This catch block exists for compatibility with PHP 5.6.\n\t\t\t$this->handle_action_error( $action_id, $e, $context, $valid_action );\n\t\t} finally {\n\t\t\trestore_error_handler();\n\t\t}\n\n\t\tif ( isset( $action ) && is_a( $action, 'ActionScheduler_Action' ) && $action->get_schedule()->is_recurring() ) {\n\t\t\t$this->schedule_next_instance( $action, $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Marks actions as either having failed execution or failed validation, as appropriate.\n\t *\n\t * @param int       $action_id    Action ID.\n\t * @param Exception $e            Exception instance.\n\t * @param string    $context      Execution context.\n\t * @param bool      $valid_action If the action is valid.\n\t *\n\t * @return void\n\t */\n\tprivate function handle_action_error( $action_id, $e, $context, $valid_action ) {\n\t\tif ( $valid_action ) {\n\t\t\t$this->store->mark_failure( $action_id );\n\t\t\t/**\n\t\t\t * Runs when action execution fails.\n\t\t\t *\n\t\t\t * @param int       $action_id Action ID.\n\t\t\t * @param Exception $e         Exception instance.\n\t\t\t * @param string    $context   Execution context.\n\t\t\t */\n\t\t\tdo_action( 'action_scheduler_failed_execution', $action_id, $e, $context );\n\t\t} else {\n\t\t\t/**\n\t\t\t * Runs when action validation fails.\n\t\t\t *\n\t\t\t * @param int       $action_id Action ID.\n\t\t\t * @param Exception $e         Exception instance.\n\t\t\t * @param string    $context   Execution context.\n\t\t\t */\n\t\t\tdo_action( 'action_scheduler_failed_validation', $action_id, $e, $context );\n\t\t}\n\t}\n\n\t/**\n\t * Schedule the next instance of the action if necessary.\n\t *\n\t * @param ActionScheduler_Action $action Action.\n\t * @param int                    $action_id Action ID.\n\t */\n\tprotected function schedule_next_instance( ActionScheduler_Action $action, $action_id ) {\n\t\t// If a recurring action has been consistently failing, we may wish to stop rescheduling it.\n\t\tif (\n\t\t\tActionScheduler_Store::STATUS_FAILED === $this->store->get_status( $action_id )\n\t\t\t&& $this->recurring_action_is_consistently_failing( $action, $action_id )\n\t\t) {\n\t\t\tActionScheduler_Logger::instance()->log(\n\t\t\t\t$action_id,\n\t\t\t\t__( 'This action appears to be consistently failing. A new instance will not be scheduled.', 'action-scheduler' )\n\t\t\t);\n\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tActionScheduler::factory()->repeat( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\tdo_action( 'action_scheduler_failed_to_schedule_next_instance', $action_id, $e, $action );\n\t\t}\n\t}\n\n\t/**\n\t * Determine if the specified recurring action has been consistently failing.\n\t *\n\t * @param ActionScheduler_Action $action    The recurring action to be rescheduled.\n\t * @param int                    $action_id The ID of the recurring action.\n\t *\n\t * @return bool\n\t */\n\tprivate function recurring_action_is_consistently_failing( ActionScheduler_Action $action, $action_id ) {\n\t\t/**\n\t\t * Controls the failure threshold for recurring actions.\n\t\t *\n\t\t * Before rescheduling a recurring action, we look at its status. If it failed, we then check if all of the most\n\t\t * recent actions (upto the threshold set by this filter) sharing the same hook have also failed: if they have,\n\t\t * that is considered consistent failure and a new instance of the action will not be scheduled.\n\t\t *\n\t\t * @param int $failure_threshold Number of actions of the same hook to examine for failure. Defaults to 5.\n\t\t */\n\t\t$consistent_failure_threshold = (int) apply_filters( 'action_scheduler_recurring_action_failure_threshold', 5 );\n\n\t\t// This query should find the earliest *failing* action (for the hook we are interested in) within our threshold.\n\t\t$query_args = array(\n\t\t\t'hook'         => $action->get_hook(),\n\t\t\t'status'       => ActionScheduler_Store::STATUS_FAILED,\n\t\t\t'date'         => date_create( 'now', timezone_open( 'UTC' ) )->format( 'Y-m-d H:i:s' ),\n\t\t\t'date_compare' => '<',\n\t\t\t'per_page'     => 1,\n\t\t\t'offset'       => $consistent_failure_threshold - 1,\n\t\t);\n\n\t\t$first_failing_action_id = $this->store->query_actions( $query_args );\n\n\t\t// If we didn't retrieve an action ID, then there haven't been enough failures for us to worry about.\n\t\tif ( empty( $first_failing_action_id ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Now let's fetch the first action (having the same hook) of *any status* within the same window.\n\t\tunset( $query_args['status'] );\n\t\t$first_action_id_with_the_same_hook = $this->store->query_actions( $query_args );\n\n\t\t/**\n\t\t * If a recurring action is assessed as consistently failing, it will not be rescheduled. This hook provides a\n\t\t * way to observe and optionally override that assessment.\n\t\t *\n\t\t * @param bool                   $is_consistently_failing If the action is considered to be consistently failing.\n\t\t * @param ActionScheduler_Action $action                  The action being assessed.\n\t\t */\n\t\treturn (bool) apply_filters(\n\t\t\t'action_scheduler_recurring_action_is_consistently_failing',\n\t\t\t$first_action_id_with_the_same_hook === $first_failing_action_id,\n\t\t\t$action\n\t\t);\n\t}\n\n\t/**\n\t * Run the queue cleaner.\n\t */\n\tprotected function run_cleanup() {\n\t\t$this->cleaner->clean( 10 * $this->get_time_limit() );\n\t}\n\n\t/**\n\t * Get the number of concurrent batches a runner allows.\n\t *\n\t * @return int\n\t */\n\tpublic function get_allowed_concurrent_batches() {\n\t\treturn apply_filters( 'action_scheduler_queue_runner_concurrent_batches', 1 );\n\t}\n\n\t/**\n\t * Check if the number of allowed concurrent batches is met or exceeded.\n\t *\n\t * @return bool\n\t */\n\tpublic function has_maximum_concurrent_batches() {\n\t\treturn $this->store->get_claim_count() >= $this->get_allowed_concurrent_batches();\n\t}\n\n\t/**\n\t * Get the maximum number of seconds a batch can run for.\n\t *\n\t * @return int The number of seconds.\n\t */\n\tprotected function get_time_limit() {\n\n\t\t$time_limit = 30;\n\n\t\t// Apply deprecated filter from deprecated get_maximum_execution_time() method.\n\t\tif ( has_filter( 'action_scheduler_maximum_execution_time' ) ) {\n\t\t\t_deprecated_function( 'action_scheduler_maximum_execution_time', '2.1.1', 'action_scheduler_queue_runner_time_limit' );\n\t\t\t$time_limit = apply_filters( 'action_scheduler_maximum_execution_time', $time_limit );\n\t\t}\n\n\t\treturn absint( apply_filters( 'action_scheduler_queue_runner_time_limit', $time_limit ) );\n\t}\n\n\t/**\n\t * Get the number of seconds the process has been running.\n\t *\n\t * @return int The number of seconds.\n\t */\n\tprotected function get_execution_time() {\n\t\t$execution_time = microtime( true ) - $this->created_time;\n\n\t\t// Get the CPU time if the hosting environment uses it rather than wall-clock time to calculate a process's execution time.\n\t\tif ( function_exists( 'getrusage' ) && apply_filters( 'action_scheduler_use_cpu_execution_time', defined( 'PANTHEON_ENVIRONMENT' ) ) ) {\n\t\t\t$resource_usages = getrusage();\n\n\t\t\tif ( isset( $resource_usages['ru_stime.tv_usec'], $resource_usages['ru_stime.tv_usec'] ) ) {\n\t\t\t\t$execution_time = $resource_usages['ru_stime.tv_sec'] + ( $resource_usages['ru_stime.tv_usec'] / 1000000 );\n\t\t\t}\n\t\t}\n\n\t\treturn $execution_time;\n\t}\n\n\t/**\n\t * Check if the host's max execution time is (likely) to be exceeded if processing more actions.\n\t *\n\t * @param int $processed_actions The number of actions processed so far - used to determine the likelihood of exceeding the time limit if processing another action.\n\t * @return bool\n\t */\n\tprotected function time_likely_to_be_exceeded( $processed_actions ) {\n\t\t$execution_time     = $this->get_execution_time();\n\t\t$max_execution_time = $this->get_time_limit();\n\n\t\t// Safety against division by zero errors.\n\t\tif ( 0 === $processed_actions ) {\n\t\t\treturn $execution_time >= $max_execution_time;\n\t\t}\n\n\t\t$time_per_action       = $execution_time / $processed_actions;\n\t\t$estimated_time        = $execution_time + ( $time_per_action * 3 );\n\t\t$likely_to_be_exceeded = $estimated_time > $max_execution_time;\n\n\t\treturn apply_filters( 'action_scheduler_maximum_execution_time_likely_to_be_exceeded', $likely_to_be_exceeded, $this, $processed_actions, $execution_time, $max_execution_time );\n\t}\n\n\t/**\n\t * Get memory limit\n\t *\n\t * Based on WP_Background_Process::get_memory_limit()\n\t *\n\t * @return int\n\t */\n\tprotected function get_memory_limit() {\n\t\tif ( function_exists( 'ini_get' ) ) {\n\t\t\t$memory_limit = ini_get( 'memory_limit' );\n\t\t} else {\n\t\t\t$memory_limit = '128M'; // Sensible default, and minimum required by WooCommerce.\n\t\t}\n\n\t\tif ( ! $memory_limit || -1 === $memory_limit || '-1' === $memory_limit ) {\n\t\t\t// Unlimited, set to 32GB.\n\t\t\t$memory_limit = '32G';\n\t\t}\n\n\t\treturn ActionScheduler_Compatibility::convert_hr_to_bytes( $memory_limit );\n\t}\n\n\t/**\n\t * Memory exceeded\n\t *\n\t * Ensures the batch process never exceeds 90% of the maximum WordPress memory.\n\t *\n\t * Based on WP_Background_Process::memory_exceeded()\n\t *\n\t * @return bool\n\t */\n\tprotected function memory_exceeded() {\n\n\t\t$memory_limit    = $this->get_memory_limit() * 0.90;\n\t\t$current_memory  = memory_get_usage( true );\n\t\t$memory_exceeded = $current_memory >= $memory_limit;\n\n\t\treturn apply_filters( 'action_scheduler_memory_exceeded', $memory_exceeded, $this );\n\t}\n\n\t/**\n\t * See if the batch limits have been exceeded, which is when memory usage is almost at\n\t * the maximum limit, or the time to process more actions will exceed the max time limit.\n\t *\n\t * Based on WC_Background_Process::batch_limits_exceeded()\n\t *\n\t * @param int $processed_actions The number of actions processed so far - used to determine the likelihood of exceeding the time limit if processing another action.\n\t * @return bool\n\t */\n\tprotected function batch_limits_exceeded( $processed_actions ) {\n\t\treturn $this->memory_exceeded() || $this->time_likely_to_be_exceeded( $processed_actions );\n\t}\n\n\t/**\n\t * Process actions in the queue.\n\t *\n\t * @param string $context Optional identifier for the context in which this action is being processed, e.g. 'WP CLI' or 'WP Cron'\n\t *        Generally, this should be capitalised and not localised as it's a proper noun.\n\t * @return int The number of actions processed.\n\t */\n\tabstract public function run( $context = '' );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Abstract_RecurringSchedule.php","ext":"php","size":3302,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Abstract_RecurringSchedule\n */\nabstract class ActionScheduler_Abstract_RecurringSchedule extends ActionScheduler_Abstract_Schedule {\n\n\t/**\n\t * The date & time the first instance of this schedule was setup to run (which may not be this instance).\n\t *\n\t * Schedule objects are attached to an action object. Each schedule stores the run date for that\n\t * object as the start date - @see $this->start - and logic to calculate the next run date after\n\t * that - @see $this->calculate_next(). The $first_date property also keeps a record of when the very\n\t * first instance of this chain of schedules ran.\n\t *\n\t * @var DateTime\n\t */\n\tprivate $first_date = null;\n\n\t/**\n\t * Timestamp equivalent of @see $this->first_date\n\t *\n\t * @var int\n\t */\n\tprotected $first_timestamp = null;\n\n\t/**\n\t * The recurrence between each time an action is run using this schedule.\n\t * Used to calculate the start date & time. Can be a number of seconds, in the\n\t * case of ActionScheduler_IntervalSchedule, or a cron expression, as in the\n\t * case of ActionScheduler_CronSchedule. Or something else.\n\t *\n\t * @var mixed\n\t */\n\tprotected $recurrence;\n\n\t/**\n\t * Construct.\n\t *\n\t * @param DateTime      $date The date & time to run the action.\n\t * @param mixed         $recurrence The data used to determine the schedule's recurrence.\n\t * @param DateTime|null $first (Optional) The date & time the first instance of this interval schedule ran. Default null, meaning this is the first instance.\n\t */\n\tpublic function __construct( DateTime $date, $recurrence, ?DateTime $first = null ) {\n\t\tparent::__construct( $date );\n\t\t$this->first_date = empty( $first ) ? $date : $first;\n\t\t$this->recurrence = $recurrence;\n\t}\n\n\t/**\n\t * Schedule is recurring.\n\t *\n\t * @return bool\n\t */\n\tpublic function is_recurring() {\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get the date & time of the first schedule in this recurring series.\n\t *\n\t * @return DateTime|null\n\t */\n\tpublic function get_first_date() {\n\t\treturn clone $this->first_date;\n\t}\n\n\t/**\n\t * Get the schedule's recurrence.\n\t *\n\t * @return string\n\t */\n\tpublic function get_recurrence() {\n\t\treturn $this->recurrence;\n\t}\n\n\t/**\n\t * For PHP 5.2 compat, since DateTime objects can't be serialized\n\t *\n\t * @return array\n\t */\n\tpublic function __sleep() {\n\t\t$sleep_params          = parent::__sleep();\n\t\t$this->first_timestamp = $this->first_date->getTimestamp();\n\t\treturn array_merge(\n\t\t\t$sleep_params,\n\t\t\tarray(\n\t\t\t\t'first_timestamp',\n\t\t\t\t'recurrence',\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Unserialize recurring schedules serialized/stored prior to AS 3.0.0\n\t *\n\t * Prior to Action Scheduler 3.0.0, schedules used different property names to refer\n\t * to equivalent data. For example, ActionScheduler_IntervalSchedule::start_timestamp\n\t * was the same as ActionScheduler_SimpleSchedule::timestamp. This was addressed in\n\t * Action Scheduler 3.0.0, where properties and property names were aligned for better\n\t * inheritance. To maintain backward compatibility with scheduled serialized and stored\n\t * prior to 3.0, we need to correctly map the old property names.\n\t */\n\tpublic function __wakeup() {\n\t\tparent::__wakeup();\n\t\tif ( $this->first_timestamp > 0 ) {\n\t\t\t$this->first_date = as_get_datetime_object( $this->first_timestamp );\n\t\t} else {\n\t\t\t$this->first_date = $this->get_date();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Abstract_Schedule.php","ext":"php","size":1895,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Abstract_Schedule\n */\nabstract class ActionScheduler_Abstract_Schedule extends ActionScheduler_Schedule_Deprecated {\n\n\t/**\n\t * The date & time the schedule is set to run.\n\t *\n\t * @var DateTime\n\t */\n\tprivate $scheduled_date = null;\n\n\t/**\n\t * Timestamp equivalent of @see $this->scheduled_date\n\t *\n\t * @var int\n\t */\n\tprotected $scheduled_timestamp = null;\n\n\t/**\n\t * Construct.\n\t *\n\t * @param DateTime $date The date & time to run the action.\n\t */\n\tpublic function __construct( DateTime $date ) {\n\t\t$this->scheduled_date = $date;\n\t}\n\n\t/**\n\t * Check if a schedule should recur.\n\t *\n\t * @return bool\n\t */\n\tabstract public function is_recurring();\n\n\t/**\n\t * Calculate when the next instance of this schedule would run based on a given date & time.\n\t *\n\t * @param DateTime $after Start timestamp.\n\t * @return DateTime\n\t */\n\tabstract protected function calculate_next( DateTime $after );\n\n\t/**\n\t * Get the next date & time when this schedule should run after a given date & time.\n\t *\n\t * @param DateTime $after Start timestamp.\n\t * @return DateTime|null\n\t */\n\tpublic function get_next( DateTime $after ) {\n\t\t$after = clone $after;\n\t\tif ( $after > $this->scheduled_date ) {\n\t\t\t$after = $this->calculate_next( $after );\n\t\t\treturn $after;\n\t\t}\n\t\treturn clone $this->scheduled_date;\n\t}\n\n\t/**\n\t * Get the date & time the schedule is set to run.\n\t *\n\t * @return DateTime|null\n\t */\n\tpublic function get_date() {\n\t\treturn $this->scheduled_date;\n\t}\n\n\t/**\n\t * For PHP 5.2 compat, because DateTime objects can't be serialized\n\t *\n\t * @return array\n\t */\n\tpublic function __sleep() {\n\t\t$this->scheduled_timestamp = $this->scheduled_date->getTimestamp();\n\t\treturn array(\n\t\t\t'scheduled_timestamp',\n\t\t);\n\t}\n\n\t/**\n\t * Wakeup.\n\t */\n\tpublic function __wakeup() {\n\t\t$this->scheduled_date = as_get_datetime_object( $this->scheduled_timestamp );\n\t\tunset( $this->scheduled_timestamp );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Store.php","ext":"php","size":14393,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Store\n *\n * @codeCoverageIgnore\n */\nabstract class ActionScheduler_Store extends ActionScheduler_Store_Deprecated {\n\tconst STATUS_COMPLETE = 'complete';\n\tconst STATUS_PENDING  = 'pending';\n\tconst STATUS_RUNNING  = 'in-progress';\n\tconst STATUS_FAILED   = 'failed';\n\tconst STATUS_CANCELED = 'canceled';\n\tconst DEFAULT_CLASS   = 'ActionScheduler_wpPostStore';\n\n\t/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate static $store = null;\n\n\t/**\n\t * Maximum length of args.\n\t *\n\t * @var int\n\t */\n\tprotected static $max_args_length = 191;\n\n\t/**\n\t * Save action.\n\t *\n\t * @param ActionScheduler_Action $action Action to save.\n\t * @param null|DateTime          $scheduled_date Optional Date of the first instance\n\t *                                               to store. Otherwise uses the first date of the action's\n\t *                                               schedule.\n\t *\n\t * @return int The action ID\n\t */\n\tabstract public function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null );\n\n\t/**\n\t * Get action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_Action\n\t */\n\tabstract public function fetch_action( $action_id );\n\n\t/**\n\t * Find an action.\n\t *\n\t * Note: the query ordering changes based on the passed 'status' value.\n\t *\n\t * @param string $hook Action hook.\n\t * @param array  $params Parameters of the action to find.\n\t *\n\t * @return string|null ID of the next action matching the criteria or NULL if not found.\n\t */\n\tpublic function find_action( $hook, $params = array() ) {\n\t\t$params = wp_parse_args(\n\t\t\t$params,\n\t\t\tarray(\n\t\t\t\t'args'   => null,\n\t\t\t\t'status' => self::STATUS_PENDING,\n\t\t\t\t'group'  => '',\n\t\t\t)\n\t\t);\n\n\t\t// These params are fixed for this method.\n\t\t$params['hook']     = $hook;\n\t\t$params['orderby']  = 'date';\n\t\t$params['per_page'] = 1;\n\n\t\tif ( ! empty( $params['status'] ) ) {\n\t\t\tif ( self::STATUS_PENDING === $params['status'] ) {\n\t\t\t\t$params['order'] = 'ASC'; // Find the next action that matches.\n\t\t\t} else {\n\t\t\t\t$params['order'] = 'DESC'; // Find the most recent action that matches.\n\t\t\t}\n\t\t}\n\n\t\t$results = $this->query_actions( $params );\n\n\t\treturn empty( $results ) ? null : $results[0];\n\t}\n\n\t/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @param array  $query {\n\t *      Query filtering options.\n\t *\n\t *      @type string       $hook             The name of the actions. Optional.\n\t *      @type string|array $status           The status or statuses of the actions. Optional.\n\t *      @type array        $args             The args array of the actions. Optional.\n\t *      @type DateTime     $date             The scheduled date of the action. Used in UTC timezone. Optional.\n\t *      @type string       $date_compare     Operator for selecting by $date param. Accepted values are '!=', '>', '>=', '<', '<=', '='. Defaults to '<='.\n\t *      @type DateTime     $modified         The last modified date of the action. Used in UTC timezone. Optional.\n\t *      @type string       $modified_compare Operator for comparing $modified param. Accepted values are '!=', '>', '>=', '<', '<=', '='. Defaults to '<='.\n\t *      @type string       $group            The group the action belongs to. Optional.\n\t *      @type bool|int     $claimed          TRUE to find claimed actions, FALSE to find unclaimed actions, an int to find a specific claim ID. Optional.\n\t *      @type int          $per_page         Number of results to return. Defaults to 5.\n\t *      @type int          $offset           The query pagination offset. Defaults to 0.\n\t *      @type int          $orderby          Accepted values are 'hook', 'group', 'modified', 'date' or 'none'. Defaults to 'date'.\n\t *      @type string       $order            Accepted values are 'ASC' or 'DESC'. Defaults to 'ASC'.\n\t * }\n\t * @param string $query_type Whether to select or count the results. Default, select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t */\n\tabstract public function query_actions( $query = array(), $query_type = 'select' );\n\n\t/**\n\t * Run query to get a single action ID.\n\t *\n\t * @since 3.3.0\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage but 'per_page' and 'offset' can't be used.\n\t *\n\t * @param array $query Query parameters.\n\t *\n\t * @return int|null\n\t */\n\tpublic function query_action( $query ) {\n\t\t$query['per_page'] = 1;\n\t\t$query['offset']   = 0;\n\t\t$results           = $this->query_actions( $query );\n\n\t\tif ( empty( $results ) ) {\n\t\t\treturn null;\n\t\t} else {\n\t\t\treturn (int) $results[0];\n\t\t}\n\t}\n\n\t/**\n\t * Get a count of all actions in the store, grouped by status\n\t *\n\t * @return array\n\t */\n\tabstract public function action_counts();\n\n\t/**\n\t * Get additional action counts.\n\t *\n\t * - add past-due actions\n\t *\n\t * @return array\n\t */\n\tpublic function extra_action_counts() {\n\t\t$extra_actions = array();\n\n\t\t$pastdue_action_counts = (int) $this->query_actions(\n\t\t\tarray(\n\t\t\t\t'status' => self::STATUS_PENDING,\n\t\t\t\t'date'   => as_get_datetime_object(),\n\t\t\t),\n\t\t\t'count'\n\t\t);\n\n\t\tif ( $pastdue_action_counts ) {\n\t\t\t$extra_actions['past-due'] = $pastdue_action_counts;\n\t\t}\n\n\t\t/**\n\t\t * Allows 3rd party code to add extra action counts (used in filters in the list table).\n\t\t *\n\t\t * @since 3.5.0\n\t\t * @param $extra_actions array Array with format action_count_identifier => action count.\n\t\t */\n\t\treturn apply_filters( 'action_scheduler_extra_action_counts', $extra_actions );\n\t}\n\n\t/**\n\t * Cancel action.\n\t *\n\t * @param string $action_id Action ID.\n\t */\n\tabstract public function cancel_action( $action_id );\n\n\t/**\n\t * Delete action.\n\t *\n\t * @param string $action_id Action ID.\n\t */\n\tabstract public function delete_action( $action_id );\n\n\t/**\n\t * Get action's schedule or run timestamp.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return DateTime The date the action is schedule to run, or the date that it ran.\n\t */\n\tabstract public function get_date( $action_id );\n\n\n\t/**\n\t * Make a claim.\n\t *\n\t * @param int           $max_actions Maximum number of actions to claim.\n\t * @param DateTime|null $before_date Claim only actions schedule before the given date. Defaults to now.\n\t * @param array         $hooks       Claim only actions with a hook or hooks.\n\t * @param string        $group       Claim only actions in the given group.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t */\n\tabstract public function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' );\n\n\t/**\n\t * Get claim count.\n\t *\n\t * @return int\n\t */\n\tabstract public function get_claim_count();\n\n\t/**\n\t * Release the claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t */\n\tabstract public function release_claim( ActionScheduler_ActionClaim $claim );\n\n\t/**\n\t * Un-claim the action.\n\t *\n\t * @param string $action_id Action ID.\n\t */\n\tabstract public function unclaim_action( $action_id );\n\n\t/**\n\t * Mark action as failed.\n\t *\n\t * @param string $action_id Action ID.\n\t */\n\tabstract public function mark_failure( $action_id );\n\n\t/**\n\t * Log action's execution.\n\t *\n\t * @param string $action_id Actoin ID.\n\t */\n\tabstract public function log_execution( $action_id );\n\n\t/**\n\t * Mark action as complete.\n\t *\n\t * @param string $action_id Action ID.\n\t */\n\tabstract public function mark_complete( $action_id );\n\n\t/**\n\t * Get action's status.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return string\n\t */\n\tabstract public function get_status( $action_id );\n\n\t/**\n\t * Get action's claim ID.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return mixed\n\t */\n\tabstract public function get_claim_id( $action_id );\n\n\t/**\n\t * Find actions by claim ID.\n\t *\n\t * @param string $claim_id Claim ID.\n\t * @return array\n\t */\n\tabstract public function find_actions_by_claim_id( $claim_id );\n\n\t/**\n\t * Validate SQL operator.\n\t *\n\t * @param string $comparison_operator Operator.\n\t * @return string\n\t */\n\tprotected function validate_sql_comparator( $comparison_operator ) {\n\t\tif ( in_array( $comparison_operator, array( '!=', '>', '>=', '<', '<=', '=' ), true ) ) {\n\t\t\treturn $comparison_operator;\n\t\t}\n\n\t\treturn '=';\n\t}\n\n\t/**\n\t * Get the time MySQL formatted date/time string for an action's (next) scheduled date.\n\t *\n\t * @param ActionScheduler_Action $action Action.\n\t * @param null|DateTime          $scheduled_date Action's schedule date (optional).\n\t * @return string\n\t */\n\tprotected function get_scheduled_date_string( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$next = is_null( $scheduled_date ) ? $action->get_schedule()->get_date() : $scheduled_date;\n\n\t\tif ( ! $next ) {\n\t\t\t$next = date_create();\n\t\t}\n\n\t\t$next->setTimezone( new DateTimeZone( 'UTC' ) );\n\n\t\treturn $next->format( 'Y-m-d H:i:s' );\n\t}\n\n\t/**\n\t * Get the time MySQL formatted date/time string for an action's (next) scheduled date.\n\t *\n\t * @param ActionScheduler_Action|null $action Action.\n\t * @param null|DateTime               $scheduled_date Action's scheduled date (optional).\n\t * @return string\n\t */\n\tprotected function get_scheduled_date_string_local( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$next = is_null( $scheduled_date ) ? $action->get_schedule()->get_date() : $scheduled_date;\n\n\t\tif ( ! $next ) {\n\t\t\t$next = date_create();\n\t\t}\n\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $next );\n\t\treturn $next->format( 'Y-m-d H:i:s' );\n\t}\n\n\t/**\n\t * Validate that we could decode action arguments.\n\t *\n\t * @param mixed $args      The decoded arguments.\n\t * @param int   $action_id The action ID.\n\t *\n\t * @throws ActionScheduler_InvalidActionException When the decoded arguments are invalid.\n\t */\n\tprotected function validate_args( $args, $action_id ) {\n\t\t// Ensure we have an array of args.\n\t\tif ( ! is_array( $args ) ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_decoding_args( $action_id );\n\t\t}\n\n\t\t// Validate JSON decoding if possible.\n\t\tif ( function_exists( 'json_last_error' ) && JSON_ERROR_NONE !== json_last_error() ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_decoding_args( $action_id, $args );\n\t\t}\n\t}\n\n\t/**\n\t * Validate a ActionScheduler_Schedule object.\n\t *\n\t * @param mixed $schedule  The unserialized ActionScheduler_Schedule object.\n\t * @param int   $action_id The action ID.\n\t *\n\t * @throws ActionScheduler_InvalidActionException When the schedule is invalid.\n\t */\n\tprotected function validate_schedule( $schedule, $action_id ) {\n\t\tif ( empty( $schedule ) || ! is_a( $schedule, 'ActionScheduler_Schedule' ) ) {\n\t\t\tthrow ActionScheduler_InvalidActionException::from_schedule( $action_id, $schedule );\n\t\t}\n\t}\n\n\t/**\n\t * InnoDB indexes have a maximum size of 767 bytes by default, which is only 191 characters with utf8mb4.\n\t *\n\t * Previously, AS wasn't concerned about args length, as we used the (unindex) post_content column. However,\n\t * with custom tables, we use an indexed VARCHAR column instead.\n\t *\n\t * @param  ActionScheduler_Action $action Action to be validated.\n\t * @throws InvalidArgumentException When json encoded args is too long.\n\t */\n\tprotected function validate_action( ActionScheduler_Action $action ) {\n\t\tif ( strlen( wp_json_encode( $action->get_args() ) ) > static::$max_args_length ) {\n\t\t\t// translators: %d is a number (maximum length of action arguments).\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'ActionScheduler_Action::$args too long. To ensure the args column can be indexed, action args should not be more than %d characters when encoded as JSON.', 'action-scheduler' ), static::$max_args_length ) );\n\t\t}\n\t}\n\n\t/**\n\t * Cancel pending actions by hook.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $hook Hook name.\n\t *\n\t * @return void\n\t */\n\tpublic function cancel_actions_by_hook( $hook ) {\n\t\t$action_ids = true;\n\t\twhile ( ! empty( $action_ids ) ) {\n\t\t\t$action_ids = $this->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'hook'     => $hook,\n\t\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t\t'per_page' => 1000,\n\t\t\t\t\t'orderby'  => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$this->bulk_cancel_actions( $action_ids );\n\t\t}\n\t}\n\n\t/**\n\t * Cancel pending actions by group.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $group Group slug.\n\t *\n\t * @return void\n\t */\n\tpublic function cancel_actions_by_group( $group ) {\n\t\t$action_ids = true;\n\t\twhile ( ! empty( $action_ids ) ) {\n\t\t\t$action_ids = $this->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'group'    => $group,\n\t\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t\t'per_page' => 1000,\n\t\t\t\t\t'orderby'  => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$this->bulk_cancel_actions( $action_ids );\n\t\t}\n\t}\n\n\t/**\n\t * Cancel a set of action IDs.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param int[] $action_ids List of action IDs.\n\t *\n\t * @return void\n\t */\n\tprivate function bulk_cancel_actions( $action_ids ) {\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$this->cancel_action( $action_id );\n\t\t}\n\n\t\tdo_action( 'action_scheduler_bulk_cancel_actions', $action_ids );\n\t}\n\n\t/**\n\t * Get status labels.\n\t *\n\t * @return array<string, string>\n\t */\n\tpublic function get_status_labels() {\n\t\treturn array(\n\t\t\tself::STATUS_COMPLETE => __( 'Complete', 'action-scheduler' ),\n\t\t\tself::STATUS_PENDING  => __( 'Pending', 'action-scheduler' ),\n\t\t\tself::STATUS_RUNNING  => __( 'In-progress', 'action-scheduler' ),\n\t\t\tself::STATUS_FAILED   => __( 'Failed', 'action-scheduler' ),\n\t\t\tself::STATUS_CANCELED => __( 'Canceled', 'action-scheduler' ),\n\t\t);\n\t}\n\n\t/**\n\t * Check if there are any pending scheduled actions due to run.\n\t *\n\t * @return string\n\t */\n\tpublic function has_pending_actions_due() {\n\t\t$pending_actions = $this->query_actions(\n\t\t\tarray(\n\t\t\t\t'per_page' => 1,\n\t\t\t\t'date'     => as_get_datetime_object(),\n\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t'orderby'  => 'none',\n\t\t\t),\n\t\t\t'count'\n\t\t);\n\n\t\treturn ! empty( $pending_actions );\n\t}\n\n\t/**\n\t * Callable initialization function optionally overridden in derived classes.\n\t */\n\tpublic function init() {}\n\n\t/**\n\t * Callable function to mark an action as migrated optionally overridden in derived classes.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function mark_migrated( $action_id ) {}\n\n\t/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Store\n\t */\n\tpublic static function instance() {\n\t\tif ( empty( self::$store ) ) {\n\t\t\t$class       = apply_filters( 'action_scheduler_store_class', self::DEFAULT_CLASS );\n\t\t\tself::$store = new $class();\n\t\t}\n\t\treturn self::$store;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_TimezoneHelper.php","ext":"php","size":4877,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_TimezoneHelper\n */\nabstract class ActionScheduler_TimezoneHelper {\n\n\t/**\n\t * DateTimeZone object.\n\t *\n\t * @var null|DateTimeZone\n\t */\n\tprivate static $local_timezone = null;\n\n\t/**\n\t * Set a DateTime's timezone to the WordPress site's timezone, or a UTC offset\n\t * if no timezone string is available.\n\t *\n\t * @since  2.1.0\n\t *\n\t * @param DateTime $date Timestamp.\n\t * @return ActionScheduler_DateTime\n\t */\n\tpublic static function set_local_timezone( DateTime $date ) {\n\n\t\t// Accept a DateTime for easier backward compatibility, even though we require methods on ActionScheduler_DateTime.\n\t\tif ( ! is_a( $date, 'ActionScheduler_DateTime' ) ) {\n\t\t\t$date = as_get_datetime_object( $date->format( 'U' ) );\n\t\t}\n\n\t\tif ( get_option( 'timezone_string' ) ) {\n\t\t\t$date->setTimezone( new DateTimeZone( self::get_local_timezone_string() ) );\n\t\t} else {\n\t\t\t$date->setUtcOffset( self::get_local_timezone_offset() );\n\t\t}\n\n\t\treturn $date;\n\t}\n\n\t/**\n\t * Helper to retrieve the timezone string for a site until a WP core method exists\n\t * (see https://core.trac.wordpress.org/ticket/24730).\n\t *\n\t * Adapted from wc_timezone_string() and https://secure.php.net/manual/en/function.timezone-name-from-abbr.php#89155.\n\t *\n\t * If no timezone string is set, and its not possible to match the UTC offset set for the site to a timezone\n\t * string, then an empty string will be returned, and the UTC offset should be used to set a DateTime's\n\t * timezone.\n\t *\n\t * @since 2.1.0\n\t * @param bool $reset Unused.\n\t * @return string PHP timezone string for the site or empty if no timezone string is available.\n\t */\n\tprotected static function get_local_timezone_string( $reset = false ) {\n\t\t// If site timezone string exists, return it.\n\t\t$timezone = get_option( 'timezone_string' );\n\t\tif ( $timezone ) {\n\t\t\treturn $timezone;\n\t\t}\n\n\t\t// Get UTC offset, if it isn't set then return UTC.\n\t\t$utc_offset = intval( get_option( 'gmt_offset', 0 ) );\n\t\tif ( 0 === $utc_offset ) {\n\t\t\treturn 'UTC';\n\t\t}\n\n\t\t// Adjust UTC offset from hours to seconds.\n\t\t$utc_offset *= 3600;\n\n\t\t// Attempt to guess the timezone string from the UTC offset.\n\t\t$timezone = timezone_name_from_abbr( '', $utc_offset );\n\t\tif ( $timezone ) {\n\t\t\treturn $timezone;\n\t\t}\n\n\t\t// Last try, guess timezone string manually.\n\t\tforeach ( timezone_abbreviations_list() as $abbr ) {\n\t\t\tforeach ( $abbr as $city ) {\n\t\t\t\tif ( (bool) date( 'I' ) === (bool) $city['dst'] && $city['timezone_id'] && intval( $city['offset'] ) === $utc_offset ) { // phpcs:ignore WordPress.DateTime.RestrictedFunctions.date_date\t -- we are actually interested in the runtime timezone.\n\t\t\t\t\treturn $city['timezone_id'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// No timezone string.\n\t\treturn '';\n\t}\n\n\t/**\n\t * Get timezone offset in seconds.\n\t *\n\t * @since  2.1.0\n\t * @return float\n\t */\n\tprotected static function get_local_timezone_offset() {\n\t\t$timezone = get_option( 'timezone_string' );\n\n\t\tif ( $timezone ) {\n\t\t\t$timezone_object = new DateTimeZone( $timezone );\n\t\t\treturn $timezone_object->getOffset( new DateTime( 'now' ) );\n\t\t} else {\n\t\t\treturn floatval( get_option( 'gmt_offset', 0 ) ) * HOUR_IN_SECONDS;\n\t\t}\n\t}\n\n\t/**\n\t * Get local timezone.\n\t *\n\t * @param bool $reset Toggle to discard stored value.\n\t * @deprecated 2.1.0\n\t */\n\tpublic static function get_local_timezone( $reset = false ) {\n\t\t_deprecated_function( __FUNCTION__, '2.1.0', 'ActionScheduler_TimezoneHelper::set_local_timezone()' );\n\t\tif ( $reset ) {\n\t\t\tself::$local_timezone = null;\n\t\t}\n\t\tif ( ! isset( self::$local_timezone ) ) {\n\t\t\t$tzstring = get_option( 'timezone_string' );\n\n\t\t\tif ( empty( $tzstring ) ) {\n\t\t\t\t$gmt_offset = absint( get_option( 'gmt_offset' ) );\n\t\t\t\tif ( 0 === $gmt_offset ) {\n\t\t\t\t\t$tzstring = 'UTC';\n\t\t\t\t} else {\n\t\t\t\t\t$gmt_offset *= HOUR_IN_SECONDS;\n\t\t\t\t\t$tzstring    = timezone_name_from_abbr( '', $gmt_offset, 1 );\n\n\t\t\t\t\t// If there's no timezone string, try again with no DST.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$tzstring = timezone_name_from_abbr( '', $gmt_offset, 0 );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Try mapping to the first abbreviation we can find.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$is_dst = date( 'I' ); // phpcs:ignore WordPress.DateTime.RestrictedFunctions.date_date\t -- we are actually interested in the runtime timezone.\n\t\t\t\t\t\tforeach ( timezone_abbreviations_list() as $abbr ) {\n\t\t\t\t\t\t\tforeach ( $abbr as $city ) {\n\t\t\t\t\t\t\t\tif ( $city['dst'] === $is_dst && $city['offset'] === $gmt_offset ) {\n\t\t\t\t\t\t\t\t\t// If there's no valid timezone ID, keep looking.\n\t\t\t\t\t\t\t\t\tif ( is_null( $city['timezone_id'] ) ) {\n\t\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t$tzstring = $city['timezone_id'];\n\t\t\t\t\t\t\t\t\tbreak 2;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// If we still have no valid string, then fall back to UTC.\n\t\t\t\t\tif ( false === $tzstring ) {\n\t\t\t\t\t\t$tzstring = 'UTC';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tself::$local_timezone = new DateTimeZone( $tzstring );\n\t\t}\n\t\treturn self::$local_timezone;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler.php","ext":"php","size":11405,"mtime":1757324689,"type":"text","content":"<?php\n\nuse Action_Scheduler\\WP_CLI\\Migration_Command;\nuse Action_Scheduler\\Migration\\Controller;\n\n/**\n * Class ActionScheduler\n *\n * @codeCoverageIgnore\n */\nabstract class ActionScheduler {\n\n\t/**\n\t * Plugin file path.\n\t *\n\t * @var string\n\t */\n\tprivate static $plugin_file = '';\n\n\t/**\n\t * ActionScheduler_ActionFactory instance.\n\t *\n\t * @var ActionScheduler_ActionFactory\n\t */\n\tprivate static $factory = null;\n\n\t/**\n\t * Data store is initialized.\n\t *\n\t * @var bool\n\t */\n\tprivate static $data_store_initialized = false;\n\n\t/**\n\t * Factory.\n\t */\n\tpublic static function factory() {\n\t\tif ( ! isset( self::$factory ) ) {\n\t\t\tself::$factory = new ActionScheduler_ActionFactory();\n\t\t}\n\t\treturn self::$factory;\n\t}\n\n\t/**\n\t * Get Store instance.\n\t */\n\tpublic static function store() {\n\t\treturn ActionScheduler_Store::instance();\n\t}\n\n\t/**\n\t * Get Lock instance.\n\t */\n\tpublic static function lock() {\n\t\treturn ActionScheduler_Lock::instance();\n\t}\n\n\t/**\n\t * Get Logger instance.\n\t */\n\tpublic static function logger() {\n\t\treturn ActionScheduler_Logger::instance();\n\t}\n\n\t/**\n\t * Get QueueRunner instance.\n\t */\n\tpublic static function runner() {\n\t\treturn ActionScheduler_QueueRunner::instance();\n\t}\n\n\t/**\n\t * Get AdminView instance.\n\t */\n\tpublic static function admin_view() {\n\t\treturn ActionScheduler_AdminView::instance();\n\t}\n\n\t/**\n\t * Get the absolute system path to the plugin directory, or a file therein\n\t *\n\t * @static\n\t * @param string $path Path relative to plugin directory.\n\t * @return string\n\t */\n\tpublic static function plugin_path( $path ) {\n\t\t$base = dirname( self::$plugin_file );\n\t\tif ( $path ) {\n\t\t\treturn trailingslashit( $base ) . $path;\n\t\t} else {\n\t\t\treturn untrailingslashit( $base );\n\t\t}\n\t}\n\n\t/**\n\t * Get the absolute URL to the plugin directory, or a file therein\n\t *\n\t * @static\n\t * @param string $path Path relative to plugin directory.\n\t * @return string\n\t */\n\tpublic static function plugin_url( $path ) {\n\t\treturn plugins_url( $path, self::$plugin_file );\n\t}\n\n\t/**\n\t * Autoload.\n\t *\n\t * @param string $class Class name.\n\t */\n\tpublic static function autoload( $class ) {\n\t\t$d           = DIRECTORY_SEPARATOR;\n\t\t$classes_dir = self::plugin_path( 'classes' . $d );\n\t\t$separator   = strrpos( $class, '\\\\' );\n\t\tif ( false !== $separator ) {\n\t\t\tif ( 0 !== strpos( $class, 'Action_Scheduler' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$class = substr( $class, $separator + 1 );\n\t\t}\n\n\t\tif ( 'Deprecated' === substr( $class, -10 ) ) {\n\t\t\t$dir = self::plugin_path( 'deprecated' . $d );\n\t\t} elseif ( self::is_class_abstract( $class ) ) {\n\t\t\t$dir = $classes_dir . 'abstracts' . $d;\n\t\t} elseif ( self::is_class_migration( $class ) ) {\n\t\t\t$dir = $classes_dir . 'migration' . $d;\n\t\t} elseif ( 'Schedule' === substr( $class, -8 ) ) {\n\t\t\t$dir = $classes_dir . 'schedules' . $d;\n\t\t} elseif ( 'Action' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'actions' . $d;\n\t\t} elseif ( 'Schema' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'schema' . $d;\n\t\t} elseif ( strpos( $class, 'ActionScheduler' ) === 0 ) {\n\t\t\t$segments = explode( '_', $class );\n\t\t\t$type     = isset( $segments[1] ) ? $segments[1] : '';\n\n\t\t\tswitch ( $type ) {\n\t\t\t\tcase 'WPCLI':\n\t\t\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'DBLogger':\n\t\t\t\tcase 'DBStore':\n\t\t\t\tcase 'HybridStore':\n\t\t\t\tcase 'wpPostStore':\n\t\t\t\tcase 'wpCommentLogger':\n\t\t\t\t\t$dir = $classes_dir . 'data-stores' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$dir = $classes_dir;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} elseif ( self::is_class_cli( $class ) ) {\n\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t} elseif ( strpos( $class, 'CronExpression' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d . 'cron-expression' . $d );\n\t\t} elseif ( strpos( $class, 'WP_Async_Request' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d );\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( file_exists( $dir . \"{$class}.php\" ) ) {\n\t\t\tinclude $dir . \"{$class}.php\";\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Initialize the plugin\n\t *\n\t * @static\n\t * @param string $plugin_file Plugin file path.\n\t */\n\tpublic static function init( $plugin_file ) {\n\t\tself::$plugin_file = $plugin_file;\n\t\tspl_autoload_register( array( __CLASS__, 'autoload' ) );\n\n\t\t/**\n\t\t * Fires in the early stages of Action Scheduler init hook.\n\t\t */\n\t\tdo_action( 'action_scheduler_pre_init' );\n\n\t\trequire_once self::plugin_path( 'functions.php' );\n\t\tActionScheduler_DataController::init();\n\n\t\t$store                      = self::store();\n\t\t$logger                     = self::logger();\n\t\t$runner                     = self::runner();\n\t\t$admin_view                 = self::admin_view();\n\t\t$recurring_action_scheduler = new ActionScheduler_RecurringActionScheduler();\n\n\t\t// Ensure initialization on plugin activation.\n\t\tif ( ! did_action( 'init' ) ) {\n\t\t\t// phpcs:ignore Squiz.PHP.CommentedOutCode\n\t\t\tadd_action( 'init', array( $admin_view, 'init' ), 0, 0 ); // run before $store::init().\n\t\t\tadd_action( 'init', array( $store, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $logger, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $runner, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $recurring_action_scheduler, 'init' ), 1, 0 );\n\n\t\t\tadd_action(\n\t\t\t\t'init',\n\t\t\t\t/**\n\t\t\t\t * Runs after the active store's init() method has been called.\n\t\t\t\t *\n\t\t\t\t * It would probably be preferable to have $store->init() (or it's parent method) set this itself,\n\t\t\t\t * once it has initialized, however that would cause problems in cases where a custom data store is in\n\t\t\t\t * use and it has not yet been updated to follow that same logic.\n\t\t\t\t */\n\t\t\t\tfunction () {\n\t\t\t\t\tself::$data_store_initialized = true;\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Fires when Action Scheduler is ready: it is safe to use the procedural API after this point.\n\t\t\t\t\t *\n\t\t\t\t\t * @since 3.5.5\n\t\t\t\t\t */\n\t\t\t\t\tdo_action( 'action_scheduler_init' );\n\t\t\t\t},\n\t\t\t\t1\n\t\t\t);\n\t\t} else {\n\t\t\t$admin_view->init();\n\t\t\t$store->init();\n\t\t\t$logger->init();\n\t\t\t$runner->init();\n\t\t\t$recurring_action_scheduler->init();\n\t\t\tself::$data_store_initialized = true;\n\n\t\t\t/**\n\t\t\t * Fires when Action Scheduler is ready: it is safe to use the procedural API after this point.\n\t\t\t *\n\t\t\t * @since 3.5.5\n\t\t\t */\n\t\t\tdo_action( 'action_scheduler_init' );\n\t\t}\n\n\t\tif ( apply_filters( 'action_scheduler_load_deprecated_functions', true ) ) {\n\t\t\trequire_once self::plugin_path( 'deprecated/functions.php' );\n\t\t}\n\n\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\tWP_CLI::add_command( 'action-scheduler', 'ActionScheduler_WPCLI_Scheduler_command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler', 'ActionScheduler_WPCLI_Clean_Command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler action', '\\Action_Scheduler\\WP_CLI\\Action_Command' );\n\t\t\tWP_CLI::add_command( 'action-scheduler', '\\Action_Scheduler\\WP_CLI\\System_Command' );\n\t\t\tif ( ! ActionScheduler_DataController::is_migration_complete() && Controller::instance()->allow_migration() ) {\n\t\t\t\t$command = new Migration_Command();\n\t\t\t\t$command->register();\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Handle WP comment cleanup after migration.\n\t\t */\n\t\tif ( is_a( $logger, 'ActionScheduler_DBLogger' ) && ActionScheduler_DataController::is_migration_complete() && ActionScheduler_WPCommentCleaner::has_logs() ) {\n\t\t\tActionScheduler_WPCommentCleaner::init();\n\t\t}\n\n\t\tadd_action( 'action_scheduler/migration_complete', 'ActionScheduler_WPCommentCleaner::maybe_schedule_cleanup' );\n\t}\n\n\t/**\n\t * Check whether the AS data store has been initialized.\n\t *\n\t * @param string $function_name The name of the function being called. Optional. Default `null`.\n\t * @return bool\n\t */\n\tpublic static function is_initialized( $function_name = null ) {\n\t\tif ( ! self::$data_store_initialized && ! empty( $function_name ) ) {\n\t\t\t$message = sprintf(\n\t\t\t\t/* translators: %s function name. */\n\t\t\t\t__( '%s() was called before the Action Scheduler data store was initialized', 'action-scheduler' ),\n\t\t\t\tesc_attr( $function_name )\n\t\t\t);\n\t\t\t_doing_it_wrong( esc_html( $function_name ), esc_html( $message ), '3.1.6' );\n\t\t}\n\n\t\treturn self::$data_store_initialized;\n\t}\n\n\t/**\n\t * Determine if the class is one of our abstract classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t */\n\tprotected static function is_class_abstract( $class ) {\n\t\tstatic $abstracts = array(\n\t\t\t'ActionScheduler'                            => true,\n\t\t\t'ActionScheduler_Abstract_ListTable'         => true,\n\t\t\t'ActionScheduler_Abstract_QueueRunner'       => true,\n\t\t\t'ActionScheduler_Abstract_Schedule'          => true,\n\t\t\t'ActionScheduler_Abstract_RecurringSchedule' => true,\n\t\t\t'ActionScheduler_Lock'                       => true,\n\t\t\t'ActionScheduler_Logger'                     => true,\n\t\t\t'ActionScheduler_Abstract_Schema'            => true,\n\t\t\t'ActionScheduler_Store'                      => true,\n\t\t\t'ActionScheduler_TimezoneHelper'             => true,\n\t\t\t'ActionScheduler_WPCLI_Command'              => true,\n\t\t);\n\n\t\treturn isset( $abstracts[ $class ] ) && $abstracts[ $class ];\n\t}\n\n\t/**\n\t * Determine if the class is one of our migration classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t */\n\tprotected static function is_class_migration( $class ) {\n\t\tstatic $migration_segments = array(\n\t\t\t'ActionMigrator'  => true,\n\t\t\t'BatchFetcher'    => true,\n\t\t\t'DBStoreMigrator' => true,\n\t\t\t'DryRun'          => true,\n\t\t\t'LogMigrator'     => true,\n\t\t\t'Config'          => true,\n\t\t\t'Controller'      => true,\n\t\t\t'Runner'          => true,\n\t\t\t'Scheduler'       => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment  = isset( $segments[1] ) ? $segments[1] : $class;\n\n\t\treturn isset( $migration_segments[ $segment ] ) && $migration_segments[ $segment ];\n\t}\n\n\t/**\n\t * Determine if the class is one of our WP CLI classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t */\n\tprotected static function is_class_cli( $class ) {\n\t\tstatic $cli_segments = array(\n\t\t\t'QueueRunner'                             => true,\n\t\t\t'Command'                                 => true,\n\t\t\t'ProgressBar'                             => true,\n\t\t\t'\\Action_Scheduler\\WP_CLI\\Action_Command' => true,\n\t\t\t'\\Action_Scheduler\\WP_CLI\\System_Command' => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment  = isset( $segments[1] ) ? $segments[1] : $class;\n\n\t\treturn isset( $cli_segments[ $segment ] ) && $cli_segments[ $segment ];\n\t}\n\n\t/**\n\t * Clone.\n\t */\n\tfinal public function __clone() {\n\t\ttrigger_error( 'Singleton. No cloning allowed!', E_USER_ERROR ); // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t}\n\n\t/**\n\t * Wakeup.\n\t */\n\tfinal public function __wakeup() {\n\t\ttrigger_error( 'Singleton. No serialization allowed!', E_USER_ERROR ); // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_trigger_error\n\t}\n\n\t/**\n\t * Construct.\n\t */\n\tfinal private function __construct() {}\n\n\t/** Deprecated **/\n\n\t/**\n\t * Get DateTime object.\n\t *\n\t * @param null|string $when     Date/time string.\n\t * @param string      $timezone Timezone string.\n\t */\n\tpublic static function get_datetime_object( $when = null, $timezone = 'UTC' ) {\n\t\t_deprecated_function( __METHOD__, '2.0', 'wcs_add_months()' );\n\t\treturn as_get_datetime_object( $when, $timezone );\n\t}\n\n\t/**\n\t * Issue deprecated warning if an Action Scheduler function is called in the shutdown hook.\n\t *\n\t * @param string $function_name The name of the function being called.\n\t * @deprecated 3.1.6.\n\t */\n\tpublic static function check_shutdown_hook( $function_name ) {\n\t\t_deprecated_function( __FUNCTION__, '3.1.6' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Lock.php","ext":"php","size":1823,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Abstract class for setting a basic lock to throttle some action.\n *\n * Class ActionScheduler_Lock\n */\nabstract class ActionScheduler_Lock {\n\n\t/**\n\t * Instance.\n\t *\n\t * @var ActionScheduler_Lock\n\t */\n\tprivate static $locker = null;\n\n\t/**\n\t * Duration of lock.\n\t *\n\t * @var int\n\t */\n\tprotected static $lock_duration = MINUTE_IN_SECONDS;\n\n\t/**\n\t * Check if a lock is set for a given lock type.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool\n\t */\n\tpublic function is_locked( $lock_type ) {\n\t\treturn ( $this->get_expiration( $lock_type ) >= time() );\n\t}\n\n\t/**\n\t * Set a lock.\n\t *\n\t * To prevent race conditions, implementations should avoid setting the lock if the lock is already held.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool\n\t */\n\tabstract public function set( $lock_type );\n\n\t/**\n\t * If a lock is set, return the timestamp it was set to expiry.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool|int False if no lock is set, otherwise the timestamp for when the lock is set to expire.\n\t */\n\tabstract public function get_expiration( $lock_type );\n\n\t/**\n\t * Get the amount of time to set for a given lock. 60 seconds by default.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return int\n\t */\n\tprotected function get_duration( $lock_type ) {\n\t\treturn apply_filters( 'action_scheduler_lock_duration', self::$lock_duration, $lock_type );\n\t}\n\n\t/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Lock\n\t */\n\tpublic static function instance() {\n\t\tif ( empty( self::$locker ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_lock_class', 'ActionScheduler_OptionLock' );\n\t\t\tself::$locker = new $class();\n\t\t}\n\t\treturn self::$locker;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Logger.php","ext":"php","size":8021,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Logger\n *\n * @codeCoverageIgnore\n */\nabstract class ActionScheduler_Logger {\n\n\t/**\n\t * Instance.\n\t *\n\t * @var null|self\n\t */\n\tprivate static $logger = null;\n\n\t/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Logger\n\t */\n\tpublic static function instance() {\n\t\tif ( empty( self::$logger ) ) {\n\t\t\t$class        = apply_filters( 'action_scheduler_logger_class', 'ActionScheduler_wpCommentLogger' );\n\t\t\tself::$logger = new $class();\n\t\t}\n\t\treturn self::$logger;\n\t}\n\n\t/**\n\t * Create log entry.\n\t *\n\t * @param string        $action_id Action ID.\n\t * @param string        $message   Log message.\n\t * @param DateTime|null $date      Log date.\n\t *\n\t * @return string The log entry ID\n\t */\n\tabstract public function log( $action_id, $message, ?DateTime $date = null );\n\n\t/**\n\t * Get action's log entry.\n\t *\n\t * @param string $entry_id Entry ID.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t */\n\tabstract public function get_entry( $entry_id );\n\n\t/**\n\t * Get action's logs.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t */\n\tabstract public function get_logs( $action_id );\n\n\n\t/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\t$this->hook_stored_action();\n\t\tadd_action( 'action_scheduler_canceled_action', array( $this, 'log_canceled_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_begin_execute', array( $this, 'log_started_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'log_completed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'log_failed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_action', array( $this, 'log_timed_out_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_unexpected_shutdown', array( $this, 'log_unexpected_shutdown' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_reset_action', array( $this, 'log_reset_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'log_ignored_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_fetch_action', array( $this, 'log_failed_fetch_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_to_schedule_next_instance', array( $this, 'log_failed_schedule_next_instance' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_bulk_cancel_actions', array( $this, 'bulk_log_cancel_actions' ), 10, 1 );\n\t}\n\n\t/**\n\t * Register callback for storing action.\n\t */\n\tpublic function hook_stored_action() {\n\t\tadd_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\t/**\n\t * Unhook callback for storing action.\n\t */\n\tpublic function unhook_stored_action() {\n\t\tremove_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\t/**\n\t * Log action stored.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function log_stored_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action created', 'action-scheduler' ) );\n\t}\n\n\t/**\n\t * Log action cancellation.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function log_canceled_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action canceled', 'action-scheduler' ) );\n\t}\n\n\t/**\n\t * Log action start.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $context Action execution context.\n\t */\n\tpublic function log_started_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: %s: context */\n\t\t\t$message = sprintf( __( 'action started via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action started', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t/**\n\t * Log action completion.\n\t *\n\t * @param int                         $action_id Action ID.\n\t * @param null|ActionScheduler_Action $action Action.\n\t * @param string                      $context Action execution context.\n\t */\n\tpublic function log_completed_action( $action_id, $action = null, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: %s: context */\n\t\t\t$message = sprintf( __( 'action complete via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action complete', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t/**\n\t * Log action failure.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception.\n\t * @param string    $context Action execution context.\n\t */\n\tpublic function log_failed_action( $action_id, Exception $exception, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: 1: context 2: exception message */\n\t\t\t$message = sprintf( __( 'action failed via %1$s: %2$s', 'action-scheduler' ), $context, $exception->getMessage() );\n\t\t} else {\n\t\t\t/* translators: %s: exception message */\n\t\t\t$message = sprintf( __( 'action failed: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t/**\n\t * Log action timeout.\n\t *\n\t * @param int    $action_id  Action ID.\n\t * @param string $timeout Timeout.\n\t */\n\tpublic function log_timed_out_action( $action_id, $timeout ) {\n\t\t/* translators: %s: amount of time */\n\t\t$this->log( $action_id, sprintf( __( 'action marked as failed after %s seconds. Unknown error occurred. Check server, PHP and database error logs to diagnose cause.', 'action-scheduler' ), $timeout ) );\n\t}\n\n\t/**\n\t * Log unexpected shutdown.\n\t *\n\t * @param int     $action_id Action ID.\n\t * @param mixed[] $error     Error.\n\t */\n\tpublic function log_unexpected_shutdown( $action_id, $error ) {\n\t\tif ( ! empty( $error ) ) {\n\t\t\t/* translators: 1: error message 2: filename 3: line */\n\t\t\t$this->log( $action_id, sprintf( __( 'unexpected shutdown: PHP Fatal error %1$s in %2$s on line %3$s', 'action-scheduler' ), $error['message'], $error['file'], $error['line'] ) );\n\t\t}\n\t}\n\n\t/**\n\t * Log action reset.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function log_reset_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action reset', 'action-scheduler' ) );\n\t}\n\n\t/**\n\t * Log ignored action.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $context Action execution context.\n\t */\n\tpublic function log_ignored_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: %s: context */\n\t\t\t$message = sprintf( __( 'action ignored via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action ignored', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t/**\n\t * Log the failure of fetching the action.\n\t *\n\t * @param string         $action_id Action ID.\n\t * @param null|Exception $exception The exception which occurred when fetching the action. NULL by default for backward compatibility.\n\t */\n\tpublic function log_failed_fetch_action( $action_id, ?Exception $exception = null ) {\n\n\t\tif ( ! is_null( $exception ) ) {\n\t\t\t/* translators: %s: exception message */\n\t\t\t$log_message = sprintf( __( 'There was a failure fetching this action: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t} else {\n\t\t\t$log_message = __( 'There was a failure fetching this action', 'action-scheduler' );\n\t\t}\n\n\t\t$this->log( $action_id, $log_message );\n\t}\n\n\t/**\n\t * Log the failure of scheduling the action's next instance.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception object.\n\t */\n\tpublic function log_failed_schedule_next_instance( $action_id, Exception $exception ) {\n\t\t/* translators: %s: exception message */\n\t\t$this->log( $action_id, sprintf( __( 'There was a failure scheduling the next instance of this action: %s', 'action-scheduler' ), $exception->getMessage() ) );\n\t}\n\n\t/**\n\t * Bulk add cancel action log entries.\n\t *\n\t * Implemented here for backward compatibility. Should be implemented in parent loggers\n\t * for more performant bulk logging.\n\t *\n\t * @param array $action_ids List of action ID.\n\t */\n\tpublic function bulk_log_cancel_actions( $action_ids ) {\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$this->log_canceled_action( $action_id );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Abstract_Schema.php","ext":"php","size":4899,"mtime":1757324689,"type":"text","content":"<?php\n\n\n/**\n * Class ActionScheduler_Abstract_Schema\n *\n * @package Action_Scheduler\n *\n * @codeCoverageIgnore\n *\n * Utility class for creating/updating custom tables\n */\nabstract class ActionScheduler_Abstract_Schema {\n\n\t/**\n\t * Increment this value in derived class to trigger a schema update.\n\t *\n\t * @var int\n\t */\n\tprotected $schema_version = 1;\n\n\t/**\n\t * Schema version stored in database.\n\t *\n\t * @var string\n\t */\n\tprotected $db_version;\n\n\t/**\n\t * Names of tables that will be registered by this class.\n\t *\n\t * @var array\n\t */\n\tprotected $tables = array();\n\n\t/**\n\t * Can optionally be used by concrete classes to carry out additional initialization work\n\t * as needed.\n\t */\n\tpublic function init() {}\n\n\t/**\n\t * Register tables with WordPress, and create them if needed.\n\t *\n\t * @param bool $force_update Optional. Default false. Use true to always run the schema update.\n\t *\n\t * @return void\n\t */\n\tpublic function register_tables( $force_update = false ) {\n\t\tglobal $wpdb;\n\n\t\t// make WP aware of our tables.\n\t\tforeach ( $this->tables as $table ) {\n\t\t\t$wpdb->tables[] = $table;\n\t\t\t$name           = $this->get_full_table_name( $table );\n\t\t\t$wpdb->$table   = $name;\n\t\t}\n\n\t\t// create the tables.\n\t\tif ( $this->schema_update_required() || $force_update ) {\n\t\t\tforeach ( $this->tables as $table ) {\n\t\t\t\t/**\n\t\t\t\t * Allow custom processing before updating a table schema.\n\t\t\t\t *\n\t\t\t\t * @param string $table Name of table being updated.\n\t\t\t\t * @param string $db_version Existing version of the table being updated.\n\t\t\t\t */\n\t\t\t\tdo_action( 'action_scheduler_before_schema_update', $table, $this->db_version );\n\t\t\t\t$this->update_table( $table );\n\t\t\t}\n\t\t\t$this->mark_schema_update_complete();\n\t\t}\n\t}\n\n\t/**\n\t * Get table definition.\n\t *\n\t * @param string $table The name of the table.\n\t *\n\t * @return string The CREATE TABLE statement, suitable for passing to dbDelta\n\t */\n\tabstract protected function get_table_definition( $table );\n\n\t/**\n\t * Determine if the database schema is out of date\n\t * by comparing the integer found in $this->schema_version\n\t * with the option set in the WordPress options table\n\t *\n\t * @return bool\n\t */\n\tprivate function schema_update_required() {\n\t\t$option_name      = 'schema-' . static::class;\n\t\t$this->db_version = get_option( $option_name, 0 );\n\n\t\t// Check for schema option stored by the Action Scheduler Custom Tables plugin in case site has migrated from that plugin with an older schema.\n\t\tif ( 0 === $this->db_version ) {\n\n\t\t\t$plugin_option_name = 'schema-';\n\n\t\t\tswitch ( static::class ) {\n\t\t\t\tcase 'ActionScheduler_StoreSchema':\n\t\t\t\t\t$plugin_option_name .= 'Action_Scheduler\\Custom_Tables\\DB_Store_Table_Maker';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ActionScheduler_LoggerSchema':\n\t\t\t\t\t$plugin_option_name .= 'Action_Scheduler\\Custom_Tables\\DB_Logger_Table_Maker';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$this->db_version = get_option( $plugin_option_name, 0 );\n\n\t\t\tdelete_option( $plugin_option_name );\n\t\t}\n\n\t\treturn version_compare( $this->db_version, $this->schema_version, '<' );\n\t}\n\n\t/**\n\t * Update the option in WordPress to indicate that\n\t * our schema is now up to date\n\t *\n\t * @return void\n\t */\n\tprivate function mark_schema_update_complete() {\n\t\t$option_name = 'schema-' . static::class;\n\n\t\t// work around race conditions and ensure that our option updates.\n\t\t$value_to_save = (string) $this->schema_version . '.0.' . time();\n\n\t\tupdate_option( $option_name, $value_to_save );\n\t}\n\n\t/**\n\t * Update the schema for the given table\n\t *\n\t * @param string $table The name of the table to update.\n\t *\n\t * @return void\n\t */\n\tprivate function update_table( $table ) {\n\t\trequire_once ABSPATH . 'wp-admin/includes/upgrade.php';\n\t\t$definition = $this->get_table_definition( $table );\n\t\tif ( $definition ) {\n\t\t\t$updated = dbDelta( $definition );\n\t\t\tforeach ( $updated as $updated_table => $update_description ) {\n\t\t\t\tif ( strpos( $update_description, 'Created table' ) === 0 ) {\n\t\t\t\t\tdo_action( 'action_scheduler/created_table', $updated_table, $table ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get full table name.\n\t *\n\t * @param string $table Table name.\n\t *\n\t * @return string The full name of the table, including the\n\t *                table prefix for the current blog\n\t */\n\tprotected function get_full_table_name( $table ) {\n\t\treturn $GLOBALS['wpdb']->prefix . $table;\n\t}\n\n\t/**\n\t * Confirms that all of the tables registered by this schema class have been created.\n\t *\n\t * @return bool\n\t */\n\tpublic function tables_exist() {\n\t\tglobal $wpdb;\n\n\t\t$tables_exist = true;\n\n\t\tforeach ( $this->tables as $table_name ) {\n\t\t\t$table_name     = $wpdb->prefix . $table_name;\n\t\t\t$pattern        = str_replace( '_', '\\\\_', $table_name );\n\t\t\t$existing_table = $wpdb->get_var( $wpdb->prepare( 'SHOW TABLES LIKE %s', $pattern ) );\n\n\t\t\tif ( $existing_table !== $table_name ) {\n\t\t\t\t$tables_exist = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn $tables_exist;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_Abstract_ListTable.php","ext":"php","size":25135,"mtime":1757324689,"type":"text","content":"<?php\n\nif ( ! class_exists( 'WP_List_Table' ) ) {\n\trequire_once ABSPATH . 'wp-admin/includes/class-wp-list-table.php';\n}\n\n/**\n * Action Scheduler Abstract List Table class\n *\n * This abstract class enhances WP_List_Table making it ready to use.\n *\n * By extending this class we can focus on describing how our table looks like,\n * which columns needs to be shown, filter, ordered by and more and forget about the details.\n *\n * This class supports:\n *  - Bulk actions\n *  - Search\n *  - Sortable columns\n *  - Automatic translations of the columns\n *\n * @codeCoverageIgnore\n * @since  2.0.0\n */\nabstract class ActionScheduler_Abstract_ListTable extends WP_List_Table {\n\n\t/**\n\t * The table name\n\t *\n\t * @var string\n\t */\n\tprotected $table_name;\n\n\t/**\n\t * Package name, used to get options from WP_List_Table::get_items_per_page.\n\t *\n\t * @var string\n\t */\n\tprotected $package;\n\n\t/**\n\t * How many items do we render per page?\n\t *\n\t * @var int\n\t */\n\tprotected $items_per_page = 10;\n\n\t/**\n\t * Enables search in this table listing. If this array\n\t * is empty it means the listing is not searchable.\n\t *\n\t * @var array\n\t */\n\tprotected $search_by = array();\n\n\t/**\n\t * Columns to show in the table listing. It is a key => value pair. The\n\t * key must much the table column name and the value is the label, which is\n\t * automatically translated.\n\t *\n\t * @var array\n\t */\n\tprotected $columns = array();\n\n\t/**\n\t * Defines the row-actions. It expects an array where the key\n\t * is the column name and the value is an array of actions.\n\t *\n\t * The array of actions are key => value, where key is the method name\n\t * (with the prefix row_action_<key>) and the value is the label\n\t * and title.\n\t *\n\t * @var array\n\t */\n\tprotected $row_actions = array();\n\n\t/**\n\t * The Primary key of our table\n\t *\n\t * @var string\n\t */\n\tprotected $ID = 'ID';\n\n\t/**\n\t * Enables sorting, it expects an array\n\t * of columns (the column names are the values)\n\t *\n\t * @var array\n\t */\n\tprotected $sort_by = array();\n\n\t/**\n\t * The default sort order\n\t *\n\t * @var string\n\t */\n\tprotected $filter_by = array();\n\n\t/**\n\t * The status name => count combinations for this table's items. Used to display status filters.\n\t *\n\t * @var array\n\t */\n\tprotected $status_counts = array();\n\n\t/**\n\t * Notices to display when loading the table. Array of arrays of form array( 'class' => {updated|error}, 'message' => 'This is the notice text display.' ).\n\t *\n\t * @var array\n\t */\n\tprotected $admin_notices = array();\n\n\t/**\n\t * Localised string displayed in the <h1> element above the able.\n\t *\n\t * @var string\n\t */\n\tprotected $table_header;\n\n\t/**\n\t * Enables bulk actions. It must be an array where the key is the action name\n\t * and the value is the label (which is translated automatically). It is important\n\t * to notice that it will check that the method exists (`bulk_$name`) and will throw\n\t * an exception if it does not exists.\n\t *\n\t * This class will automatically check if the current request has a bulk action, will do the\n\t * validations and afterwards will execute the bulk method, with two arguments. The first argument\n\t * is the array with primary keys, the second argument is a string with a list of the primary keys,\n\t * escaped and ready to use (with `IN`).\n\t *\n\t * @var array\n\t */\n\tprotected $bulk_actions = array();\n\n\t/**\n\t * Makes translation easier, it basically just wraps\n\t * `_x` with some default (the package name).\n\t *\n\t * @param string $text The new text to translate.\n\t * @param string $context The context of the text.\n\t * @return string|void The translated text.\n\t *\n\t * @deprecated 3.0.0 Use `_x()` instead.\n\t */\n\tprotected function translate( $text, $context = '' ) {\n\t\treturn $text;\n\t}\n\n\t/**\n\t * Reads `$this->bulk_actions` and returns an array that WP_List_Table understands. It\n\t * also validates that the bulk method handler exists. It throws an exception because\n\t * this is a library meant for developers and missing a bulk method is a development-time error.\n\t *\n\t * @return array\n\t *\n\t * @throws RuntimeException Throws RuntimeException when the bulk action does not have a callback method.\n\t */\n\tprotected function get_bulk_actions() {\n\t\t$actions = array();\n\n\t\tforeach ( $this->bulk_actions as $action => $label ) {\n\t\t\tif ( ! is_callable( array( $this, 'bulk_' . $action ) ) ) {\n\t\t\t\tthrow new RuntimeException( \"The bulk action $action does not have a callback method\" );\n\t\t\t}\n\n\t\t\t$actions[ $action ] = $label;\n\t\t}\n\n\t\treturn $actions;\n\t}\n\n\t/**\n\t * Checks if the current request has a bulk action. If that is the case it will validate and will\n\t * execute the bulk method handler. Regardless if the action is valid or not it will redirect to\n\t * the previous page removing the current arguments that makes this request a bulk action.\n\t */\n\tprotected function process_bulk_action() {\n\t\tglobal $wpdb;\n\t\t// Detect when a bulk action is being triggered.\n\t\t$action = $this->current_action();\n\t\tif ( ! $action ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcheck_admin_referer( 'bulk-' . $this->_args['plural'] );\n\n\t\t$method = 'bulk_' . $action;\n\t\tif ( array_key_exists( $action, $this->bulk_actions ) && is_callable( array( $this, $method ) ) && ! empty( $_GET['ID'] ) && is_array( $_GET['ID'] ) ) {\n\t\t\t$ids_sql = '(' . implode( ',', array_fill( 0, count( $_GET['ID'] ), '%s' ) ) . ')';\n\t\t\t$id      = array_map( 'absint', $_GET['ID'] );\n\t\t\t$this->$method( $id, $wpdb->prepare( $ids_sql, $id ) ); //phpcs:ignore WordPress.DB.PreparedSQL\n\t\t}\n\n\t\tif ( isset( $_SERVER['REQUEST_URI'] ) ) {\n\t\t\twp_safe_redirect(\n\t\t\t\tremove_query_arg(\n\t\t\t\t\tarray( '_wp_http_referer', '_wpnonce', 'ID', 'action', 'action2' ),\n\t\t\t\t\tesc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) )\n\t\t\t\t)\n\t\t\t);\n\t\t\texit;\n\t\t}\n\t}\n\n\t/**\n\t * Default code for deleting entries.\n\t * validated already by process_bulk_action()\n\t *\n\t * @param array  $ids ids of the items to delete.\n\t * @param string $ids_sql the sql for the ids.\n\t * @return void\n\t */\n\tprotected function bulk_delete( array $ids, $ids_sql ) {\n\t\t$store = ActionScheduler::store();\n\t\tforeach ( $ids as $action_id ) {\n\t\t\t$store->delete( $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Prepares the _column_headers property which is used by WP_Table_List at rendering.\n\t * It merges the columns and the sortable columns.\n\t */\n\tprotected function prepare_column_headers() {\n\t\t$this->_column_headers = array(\n\t\t\t$this->get_columns(),\n\t\t\tget_hidden_columns( $this->screen ),\n\t\t\t$this->get_sortable_columns(),\n\t\t);\n\t}\n\n\t/**\n\t * Reads $this->sort_by and returns the columns name in a format that WP_Table_List\n\t * expects\n\t */\n\tpublic function get_sortable_columns() {\n\t\t$sort_by = array();\n\t\tforeach ( $this->sort_by as $column ) {\n\t\t\t$sort_by[ $column ] = array( $column, true );\n\t\t}\n\t\treturn $sort_by;\n\t}\n\n\t/**\n\t * Returns the columns names for rendering. It adds a checkbox for selecting everything\n\t * as the first column\n\t */\n\tpublic function get_columns() {\n\t\t$columns = array_merge(\n\t\t\tarray( 'cb' => '<input type=\"checkbox\" />' ),\n\t\t\t$this->columns\n\t\t);\n\n\t\treturn $columns;\n\t}\n\n\t/**\n\t * Get prepared LIMIT clause for items query\n\t *\n\t * @global wpdb $wpdb\n\t *\n\t * @return string Prepared LIMIT clause for items query.\n\t */\n\tprotected function get_items_query_limit() {\n\t\tglobal $wpdb;\n\n\t\t$per_page = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\t\treturn $wpdb->prepare( 'LIMIT %d', $per_page );\n\t}\n\n\t/**\n\t * Returns the number of items to offset/skip for this current view.\n\t *\n\t * @return int\n\t */\n\tprotected function get_items_offset() {\n\t\t$per_page     = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\t\t$current_page = $this->get_pagenum();\n\t\tif ( 1 < $current_page ) {\n\t\t\t$offset = $per_page * ( $current_page - 1 );\n\t\t} else {\n\t\t\t$offset = 0;\n\t\t}\n\n\t\treturn $offset;\n\t}\n\n\t/**\n\t * Get prepared OFFSET clause for items query\n\t *\n\t * @global wpdb $wpdb\n\t *\n\t * @return string Prepared OFFSET clause for items query.\n\t */\n\tprotected function get_items_query_offset() {\n\t\tglobal $wpdb;\n\n\t\treturn $wpdb->prepare( 'OFFSET %d', $this->get_items_offset() );\n\t}\n\n\t/**\n\t * Prepares the ORDER BY sql statement. It uses `$this->sort_by` to know which\n\t * columns are sortable. This requests validates the orderby $_GET parameter is a valid\n\t * column and sortable. It will also use order (ASC|DESC) using DESC by default.\n\t */\n\tprotected function get_items_query_order() {\n\t\tif ( empty( $this->sort_by ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$orderby = esc_sql( $this->get_request_orderby() );\n\t\t$order   = esc_sql( $this->get_request_order() );\n\n\t\treturn \"ORDER BY {$orderby} {$order}\";\n\t}\n\n\t/**\n\t * Querystring arguments to persist between form submissions.\n\t *\n\t * @since 3.7.3\n\t *\n\t * @return string[]\n\t */\n\tprotected function get_request_query_args_to_persist() {\n\t\treturn array_merge(\n\t\t\t$this->sort_by,\n\t\t\tarray(\n\t\t\t\t'page',\n\t\t\t\t'status',\n\t\t\t\t'tab',\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Return the sortable column specified for this request to order the results by, if any.\n\t *\n\t * @return string\n\t */\n\tprotected function get_request_orderby() {\n\n\t\t$valid_sortable_columns = array_values( $this->sort_by );\n\n\t\tif ( ! empty( $_GET['orderby'] ) && in_array( $_GET['orderby'], $valid_sortable_columns, true ) ) { //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t$orderby = sanitize_text_field( wp_unslash( $_GET['orderby'] ) ); //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t} else {\n\t\t\t$orderby = $valid_sortable_columns[0];\n\t\t}\n\n\t\treturn $orderby;\n\t}\n\n\t/**\n\t * Return the sortable column order specified for this request.\n\t *\n\t * @return string\n\t */\n\tprotected function get_request_order() {\n\n\t\tif ( ! empty( $_GET['order'] ) && 'desc' === strtolower( sanitize_text_field( wp_unslash( $_GET['order'] ) ) ) ) { //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t$order = 'DESC';\n\t\t} else {\n\t\t\t$order = 'ASC';\n\t\t}\n\n\t\treturn $order;\n\t}\n\n\t/**\n\t * Return the status filter for this request, if any.\n\t *\n\t * @return string\n\t */\n\tprotected function get_request_status() {\n\t\t$status = ( ! empty( $_GET['status'] ) ) ? sanitize_text_field( wp_unslash( $_GET['status'] ) ) : ''; //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\treturn $status;\n\t}\n\n\t/**\n\t * Return the search filter for this request, if any.\n\t *\n\t * @return string\n\t */\n\tprotected function get_request_search_query() {\n\t\t$search_query = ( ! empty( $_GET['s'] ) ) ? sanitize_text_field( wp_unslash( $_GET['s'] ) ) : ''; //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\treturn $search_query;\n\t}\n\n\t/**\n\t * Process and return the columns name. This is meant for using with SQL, this means it\n\t * always includes the primary key.\n\t *\n\t * @return array\n\t */\n\tprotected function get_table_columns() {\n\t\t$columns = array_keys( $this->columns );\n\t\tif ( ! in_array( $this->ID, $columns, true ) ) {\n\t\t\t$columns[] = $this->ID;\n\t\t}\n\n\t\treturn $columns;\n\t}\n\n\t/**\n\t * Check if the current request is doing a \"full text\" search. If that is the case\n\t * prepares the SQL to search texts using LIKE.\n\t *\n\t * If the current request does not have any search or if this list table does not support\n\t * that feature it will return an empty string.\n\t *\n\t * @return string\n\t */\n\tprotected function get_items_query_search() {\n\t\tglobal $wpdb;\n\n\t\tif ( empty( $_GET['s'] ) || empty( $this->search_by ) ) { //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\treturn '';\n\t\t}\n\n\t\t$search_string = sanitize_text_field( wp_unslash( $_GET['s'] ) ); //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\n\t\t$filter = array();\n\t\tforeach ( $this->search_by as $column ) {\n\t\t\t$wild     = '%';\n\t\t\t$sql_like = $wild . $wpdb->esc_like( $search_string ) . $wild;\n\t\t\t$filter[] = $wpdb->prepare( '`' . $column . '` LIKE %s', $sql_like ); // phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\treturn implode( ' OR ', $filter );\n\t}\n\n\t/**\n\t * Prepares the SQL to filter rows by the options defined at `$this->filter_by`. Before trusting\n\t * any data sent by the user it validates that it is a valid option.\n\t */\n\tprotected function get_items_query_filters() {\n\t\tglobal $wpdb;\n\n\t\tif ( ! $this->filter_by || empty( $_GET['filter_by'] ) || ! is_array( $_GET['filter_by'] ) ) { //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\treturn '';\n\t\t}\n\n\t\t$filter = array();\n\n\t\tforeach ( $this->filter_by as $column => $options ) {\n\t\t\tif ( empty( $_GET['filter_by'][ $column ] ) || empty( $options[ $_GET['filter_by'][ $column ] ] ) ) { //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$filter[] = $wpdb->prepare( \"`$column` = %s\", sanitize_text_field( wp_unslash( $_GET['filter_by'][ $column ] ) ) ); //phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t}\n\n\t\treturn implode( ' AND ', $filter );\n\n\t}\n\n\t/**\n\t * Prepares the data to feed WP_Table_List.\n\t *\n\t * This has the core for selecting, sorting and filtering data. To keep the code simple\n\t * its logic is split among many methods (get_items_query_*).\n\t *\n\t * Beside populating the items this function will also count all the records that matches\n\t * the filtering criteria and will do fill the pagination variables.\n\t */\n\tpublic function prepare_items() {\n\t\tglobal $wpdb;\n\n\t\t$this->process_bulk_action();\n\n\t\t$this->process_row_actions();\n\n\t\tif ( ! empty( $_REQUEST['_wp_http_referer'] && ! empty( $_SERVER['REQUEST_URI'] ) ) ) { //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t// _wp_http_referer is used only on bulk actions, we remove it to keep the $_GET shorter\n\t\t\twp_safe_redirect( remove_query_arg( array( '_wp_http_referer', '_wpnonce' ), esc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) ) ) );\n\t\t\texit;\n\t\t}\n\n\t\t$this->prepare_column_headers();\n\n\t\t$limit   = $this->get_items_query_limit();\n\t\t$offset  = $this->get_items_query_offset();\n\t\t$order   = $this->get_items_query_order();\n\t\t$where   = array_filter(\n\t\t\tarray(\n\t\t\t\t$this->get_items_query_search(),\n\t\t\t\t$this->get_items_query_filters(),\n\t\t\t)\n\t\t);\n\t\t$columns = '`' . implode( '`, `', $this->get_table_columns() ) . '`';\n\n\t\tif ( ! empty( $where ) ) {\n\t\t\t$where = 'WHERE (' . implode( ') AND (', $where ) . ')';\n\t\t} else {\n\t\t\t$where = '';\n\t\t}\n\n\t\t$sql = \"SELECT $columns FROM {$this->table_name} {$where} {$order} {$limit} {$offset}\";\n\n\t\t$this->set_items( $wpdb->get_results( $sql, ARRAY_A ) ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\t$query_count = \"SELECT COUNT({$this->ID}) FROM {$this->table_name} {$where}\";\n\t\t$total_items = $wpdb->get_var( $query_count ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$per_page    = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\t\t$this->set_pagination_args(\n\t\t\tarray(\n\t\t\t\t'total_items' => $total_items,\n\t\t\t\t'per_page'    => $per_page,\n\t\t\t\t'total_pages' => ceil( $total_items / $per_page ),\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Display the table.\n\t *\n\t * @param string $which The name of the table.\n\t */\n\tpublic function extra_tablenav( $which ) {\n\t\tif ( ! $this->filter_by || 'top' !== $which ) {\n\t\t\treturn;\n\t\t}\n\n\t\techo '<div class=\"alignleft actions\">';\n\n\t\tforeach ( $this->filter_by as $id => $options ) {\n\t\t\t$default = ! empty( $_GET['filter_by'][ $id ] ) ? sanitize_text_field( wp_unslash( $_GET['filter_by'][ $id ] ) ) : ''; //phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\tif ( empty( $options[ $default ] ) ) {\n\t\t\t\t$default = '';\n\t\t\t}\n\n\t\t\techo '<select name=\"filter_by[' . esc_attr( $id ) . ']\" class=\"first\" id=\"filter-by-' . esc_attr( $id ) . '\">';\n\n\t\t\tforeach ( $options as $value => $label ) {\n\t\t\t\techo '<option value=\"' . esc_attr( $value ) . '\" ' . esc_html( $value === $default ? 'selected' : '' ) . '>'\n\t\t\t\t\t. esc_html( $label )\n\t\t\t\t. '</option>';\n\t\t\t}\n\n\t\t\techo '</select>';\n\t\t}\n\n\t\tsubmit_button( esc_html__( 'Filter', 'action-scheduler' ), '', 'filter_action', false, array( 'id' => 'post-query-submit' ) );\n\t\techo '</div>';\n\t}\n\n\t/**\n\t * Set the data for displaying. It will attempt to unserialize (There is a chance that some columns\n\t * are serialized). This can be override in child classes for further data transformation.\n\t *\n\t * @param array $items Items array.\n\t */\n\tprotected function set_items( array $items ) {\n\t\t$this->items = array();\n\t\tforeach ( $items as $item ) {\n\t\t\t$this->items[ $item[ $this->ID ] ] = array_map( 'maybe_unserialize', $item );\n\t\t}\n\t}\n\n\t/**\n\t * Renders the checkbox for each row, this is the first column and it is named ID regardless\n\t * of how the primary key is named (to keep the code simpler). The bulk actions will do the proper\n\t * name transformation though using `$this->ID`.\n\t *\n\t * @param array $row The row to render.\n\t */\n\tpublic function column_cb( $row ) {\n\t\treturn '<input name=\"ID[]\" type=\"checkbox\" value=\"' . esc_attr( $row[ $this->ID ] ) . '\" />';\n\t}\n\n\t/**\n\t * Renders the row-actions.\n\t *\n\t * This method renders the action menu, it reads the definition from the $row_actions property,\n\t * and it checks that the row action method exists before rendering it.\n\t *\n\t * @param array  $row Row to be rendered.\n\t * @param string $column_name Column name.\n\t * @return string\n\t */\n\tprotected function maybe_render_actions( $row, $column_name ) {\n\t\tif ( empty( $this->row_actions[ $column_name ] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$row_id = $row[ $this->ID ];\n\n\t\t$actions      = '<div class=\"row-actions\">';\n\t\t$action_count = 0;\n\t\tforeach ( $this->row_actions[ $column_name ] as $action_key => $action ) {\n\n\t\t\t$action_count++;\n\n\t\t\tif ( ! method_exists( $this, 'row_action_' . $action_key ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$action_link = ! empty( $action['link'] ) ? $action['link'] : add_query_arg(\n\t\t\t\tarray(\n\t\t\t\t\t'row_action' => $action_key,\n\t\t\t\t\t'row_id'     => $row_id,\n\t\t\t\t\t'nonce'      => wp_create_nonce( $action_key . '::' . $row_id ),\n\t\t\t\t)\n\t\t\t);\n\t\t\t$span_class  = ! empty( $action['class'] ) ? $action['class'] : $action_key;\n\t\t\t$separator   = ( $action_count < count( $this->row_actions[ $column_name ] ) ) ? ' | ' : '';\n\n\t\t\t$actions .= sprintf( '<span class=\"%s\">', esc_attr( $span_class ) );\n\t\t\t$actions .= sprintf( '<a href=\"%1$s\" title=\"%2$s\">%3$s</a>', esc_url( $action_link ), esc_attr( $action['desc'] ), esc_html( $action['name'] ) );\n\t\t\t$actions .= sprintf( '%s</span>', $separator );\n\t\t}\n\t\t$actions .= '</div>';\n\t\treturn $actions;\n\t}\n\n\t/**\n\t * Process the bulk actions.\n\t *\n\t * @return void\n\t */\n\tprotected function process_row_actions() {\n\t\t$parameters = array( 'row_action', 'row_id', 'nonce' );\n\t\tforeach ( $parameters as $parameter ) {\n\t\t\tif ( empty( $_REQUEST[ $parameter ] ) ) { // phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t$action = sanitize_text_field( wp_unslash( $_REQUEST['row_action'] ) ); // phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotValidated\n\t\t$row_id = sanitize_text_field( wp_unslash( $_REQUEST['row_id'] ) ); // phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotValidated\n\t\t$nonce  = sanitize_text_field( wp_unslash( $_REQUEST['nonce'] ) ); // phpcs:ignore WordPress.Security.NonceVerification.Recommended, WordPress.Security.ValidatedSanitizedInput.InputNotValidated\n\t\t$method = 'row_action_' . $action; // phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\n\t\tif ( wp_verify_nonce( $nonce, $action . '::' . $row_id ) && method_exists( $this, $method ) ) {\n\t\t\t$this->$method( sanitize_text_field( wp_unslash( $row_id ) ) ); // phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t}\n\n\t\tif ( isset( $_SERVER['REQUEST_URI'] ) ) {\n\t\t\twp_safe_redirect(\n\t\t\t\tremove_query_arg(\n\t\t\t\t\tarray( 'row_id', 'row_action', 'nonce' ),\n\t\t\t\t\tesc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) )\n\t\t\t\t)\n\t\t\t);\n\t\t\texit;\n\t\t}\n\t}\n\n\t/**\n\t * Default column formatting, it will escape everything for security.\n\t *\n\t * @param array  $item The item array.\n\t * @param string $column_name Column name to display.\n\t *\n\t * @return string\n\t */\n\tpublic function column_default( $item, $column_name ) {\n\t\t$column_html  = esc_html( $item[ $column_name ] );\n\t\t$column_html .= $this->maybe_render_actions( $item, $column_name );\n\t\treturn $column_html;\n\t}\n\n\t/**\n\t * Display the table heading and search query, if any\n\t */\n\tprotected function display_header() {\n\t\techo '<h1 class=\"wp-heading-inline\">' . esc_attr( $this->table_header ) . '</h1>';\n\t\tif ( $this->get_request_search_query() ) {\n\t\t\t/* translators: %s: search query */\n\t\t\techo '<span class=\"subtitle\">' . esc_attr( sprintf( __( 'Search results for \"%s\"', 'action-scheduler' ), $this->get_request_search_query() ) ) . '</span>';\n\t\t}\n\t\techo '<hr class=\"wp-header-end\">';\n\t}\n\n\t/**\n\t * Display the table heading and search query, if any\n\t */\n\tprotected function display_admin_notices() {\n\t\tforeach ( $this->admin_notices as $notice ) {\n\t\t\techo '<div id=\"message\" class=\"' . esc_attr( $notice['class'] ) . '\">';\n\t\t\techo '\t<p>' . wp_kses_post( $notice['message'] ) . '</p>';\n\t\t\techo '</div>';\n\t\t}\n\t}\n\n\t/**\n\t * Prints the available statuses so the user can click to filter.\n\t */\n\tprotected function display_filter_by_status() {\n\n\t\t$status_list_items = array();\n\t\t$request_status    = $this->get_request_status();\n\n\t\t// Helper to set 'all' filter when not set on status counts passed in.\n\t\tif ( ! isset( $this->status_counts['all'] ) ) {\n\t\t\t$all_count = array_sum( $this->status_counts );\n\t\t\tif ( isset( $this->status_counts['past-due'] ) ) {\n\t\t\t\t$all_count -= $this->status_counts['past-due'];\n\t\t\t}\n\t\t\t$this->status_counts = array( 'all' => $all_count ) + $this->status_counts;\n\t\t}\n\n\t\t// Translated status labels.\n\t\t$status_labels             = ActionScheduler_Store::instance()->get_status_labels();\n\t\t$status_labels['all']      = esc_html_x( 'All', 'status labels', 'action-scheduler' );\n\t\t$status_labels['past-due'] = esc_html_x( 'Past-due', 'status labels', 'action-scheduler' );\n\n\t\tforeach ( $this->status_counts as $status_slug => $count ) {\n\n\t\t\tif ( 0 === $count ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( $status_slug === $request_status || ( empty( $request_status ) && 'all' === $status_slug ) ) {\n\t\t\t\t$status_list_item = '<li class=\"%1$s\"><a href=\"%2$s\" class=\"current\">%3$s</a> (%4$d)</li>';\n\t\t\t} else {\n\t\t\t\t$status_list_item = '<li class=\"%1$s\"><a href=\"%2$s\">%3$s</a> (%4$d)</li>';\n\t\t\t}\n\n\t\t\t$status_name         = isset( $status_labels[ $status_slug ] ) ? $status_labels[ $status_slug ] : ucfirst( $status_slug );\n\t\t\t$status_filter_url   = ( 'all' === $status_slug ) ? remove_query_arg( 'status' ) : add_query_arg( 'status', $status_slug );\n\t\t\t$status_filter_url   = remove_query_arg( array( 'paged', 's' ), $status_filter_url );\n\t\t\t$status_list_items[] = sprintf( $status_list_item, esc_attr( $status_slug ), esc_url( $status_filter_url ), esc_html( $status_name ), absint( $count ) );\n\t\t}\n\n\t\tif ( $status_list_items ) {\n\t\t\techo '<ul class=\"subsubsub\">';\n\t\t\techo implode( \" | \\n\", $status_list_items ); // phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\t\t\techo '</ul>';\n\t\t}\n\t}\n\n\t/**\n\t * Renders the table list, we override the original class to render the table inside a form\n\t * and to render any needed HTML (like the search box). By doing so the callee of a function can simple\n\t * forget about any extra HTML.\n\t */\n\tprotected function display_table() {\n\t\techo '<form id=\"' . esc_attr( $this->_args['plural'] ) . '-filter\" method=\"get\">';\n\t\tforeach ( $this->get_request_query_args_to_persist() as $arg ) {\n\t\t\t$arg_value = isset( $_GET[ $arg ] ) ? sanitize_text_field( wp_unslash( $_GET[ $arg ] ) ) : ''; // phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\tif ( ! $arg_value ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\techo '<input type=\"hidden\" name=\"' . esc_attr( $arg ) . '\" value=\"' . esc_attr( $arg_value ) . '\" />';\n\t\t}\n\n\t\tif ( ! empty( $this->search_by ) ) {\n\t\t\techo $this->search_box( $this->get_search_box_button_text(), 'plugin' ); // phpcs:ignore WordPress.Security.EscapeOutput.OutputNotEscaped\n\t\t}\n\t\tparent::display();\n\t\techo '</form>';\n\t}\n\n\t/**\n\t * Process any pending actions.\n\t */\n\tpublic function process_actions() {\n\t\t$this->process_bulk_action();\n\t\t$this->process_row_actions();\n\n\t\tif ( ! empty( $_REQUEST['_wp_http_referer'] ) && ! empty( $_SERVER['REQUEST_URI'] ) ) { // phpcs:ignore WordPress.Security.NonceVerification.Recommended\n\t\t\t// _wp_http_referer is used only on bulk actions, we remove it to keep the $_GET shorter\n\t\t\twp_safe_redirect( remove_query_arg( array( '_wp_http_referer', '_wpnonce' ), esc_url_raw( wp_unslash( $_SERVER['REQUEST_URI'] ) ) ) );\n\t\t\texit;\n\t\t}\n\t}\n\n\t/**\n\t * Render the list table page, including header, notices, status filters and table.\n\t */\n\tpublic function display_page() {\n\t\t$this->prepare_items();\n\n\t\techo '<div class=\"wrap\">';\n\t\t$this->display_header();\n\t\t$this->display_admin_notices();\n\t\t$this->display_filter_by_status();\n\t\t$this->display_table();\n\t\techo '</div>';\n\t}\n\n\t/**\n\t * Get the text to display in the search box on the list table.\n\t */\n\tprotected function get_search_box_placeholder() {\n\t\treturn esc_html__( 'Search', 'action-scheduler' );\n\t}\n\n\t/**\n\t * Gets the screen per_page option name.\n\t *\n\t * @return string\n\t */\n\tprotected function get_per_page_option_name() {\n\t\treturn $this->package . '_items_per_page';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/abstracts/ActionScheduler_WPCLI_Command.php","ext":"php","size":2107,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Abstract for WP-CLI commands.\n */\nabstract class ActionScheduler_WPCLI_Command extends \\WP_CLI_Command {\n\n\tconst DATE_FORMAT = 'Y-m-d H:i:s O';\n\n\t/**\n\t * Keyed arguments.\n\t *\n\t * @var string[]\n\t */\n\tprotected $args;\n\n\t/**\n\t * Positional arguments.\n\t *\n\t * @var array<string, string>\n\t */\n\tprotected $assoc_args;\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string[]              $args       Positional arguments.\n\t * @param array<string, string> $assoc_args Keyed arguments.\n\t * @throws \\Exception When loading a CLI command file outside of WP CLI context.\n\t */\n\tpublic function __construct( array $args, array $assoc_args ) {\n\t\tif ( ! defined( 'WP_CLI' ) || ! constant( 'WP_CLI' ) ) {\n\t\t\t/* translators: %s php class name */\n\t\t\tthrow new \\Exception( sprintf( __( 'The %s class can only be run within WP CLI.', 'action-scheduler' ), get_class( $this ) ) );\n\t\t}\n\n\t\t$this->args       = $args;\n\t\t$this->assoc_args = $assoc_args;\n\t}\n\n\t/**\n\t * Execute command.\n\t */\n\tabstract public function execute();\n\n\t/**\n\t * Get the scheduled date in a human friendly format.\n\t *\n\t * @see ActionScheduler_ListTable::get_schedule_display_string()\n\t * @param ActionScheduler_Schedule $schedule Schedule.\n\t * @return string\n\t */\n\tprotected function get_schedule_display_string( ActionScheduler_Schedule $schedule ) {\n\n\t\t$schedule_display_string = '';\n\n\t\tif ( ! $schedule->get_date() ) {\n\t\t\treturn '0000-00-00 00:00:00';\n\t\t}\n\n\t\t$next_timestamp = $schedule->get_date()->getTimestamp();\n\n\t\t$schedule_display_string .= $schedule->get_date()->format( static::DATE_FORMAT );\n\n\t\treturn $schedule_display_string;\n\t}\n\n\t/**\n\t * Transforms arguments with '__' from CSV into expected arrays.\n\t *\n\t * @see \\WP_CLI\\CommandWithDBObject::process_csv_arguments_to_arrays()\n\t * @link https://github.com/wp-cli/entity-command/blob/c270cc9a2367cb8f5845f26a6b5e203397c91392/src/WP_CLI/CommandWithDBObject.php#L99\n\t * @return void\n\t */\n\tprotected function process_csv_arguments_to_arrays() {\n\t\tforeach ( $this->assoc_args as $k => $v ) {\n\t\t\tif ( false !== strpos( $k, '__' ) ) {\n\t\t\t\t$this->assoc_args[ $k ] = explode( ',', $v );\n\t\t\t}\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_QueueCleaner.php","ext":"php","size":8071,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_QueueCleaner\n */\nclass ActionScheduler_QueueCleaner {\n\n\t/**\n\t * The batch size.\n\t *\n\t * @var int\n\t */\n\tprotected $batch_size;\n\n\t/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $store = null;\n\n\t/**\n\t * 31 days in seconds.\n\t *\n\t * @var int\n\t */\n\tprivate $month_in_seconds = 2678400;\n\n\t/**\n\t * Default list of statuses purged by the cleaner process.\n\t *\n\t * @var string[]\n\t */\n\tprivate $default_statuses_to_purge = array(\n\t\tActionScheduler_Store::STATUS_COMPLETE,\n\t\tActionScheduler_Store::STATUS_CANCELED,\n\t);\n\n\t/**\n\t * ActionScheduler_QueueCleaner constructor.\n\t *\n\t * @param ActionScheduler_Store|null $store      The store instance.\n\t * @param int                        $batch_size The batch size.\n\t */\n\tpublic function __construct( ?ActionScheduler_Store $store = null, $batch_size = 20 ) {\n\t\t$this->store      = $store ? $store : ActionScheduler_Store::instance();\n\t\t$this->batch_size = $batch_size;\n\t}\n\n\t/**\n\t * Default queue cleaner process used by queue runner.\n\t *\n\t * @return array\n\t */\n\tpublic function delete_old_actions() {\n\t\t/**\n\t\t * Filter the minimum scheduled date age for action deletion.\n\t\t *\n\t\t * @param int $retention_period Minimum scheduled age in seconds of the actions to be deleted.\n\t\t */\n\t\t$lifespan = apply_filters( 'action_scheduler_retention_period', $this->month_in_seconds );\n\n\t\ttry {\n\t\t\t$cutoff = as_get_datetime_object( $lifespan . ' seconds ago' );\n\t\t} catch ( Exception $e ) {\n\t\t\t_doing_it_wrong(\n\t\t\t\t__METHOD__,\n\t\t\t\tsprintf(\n\t\t\t\t\t/* Translators: %s is the exception message. */\n\t\t\t\t\tesc_html__( 'It was not possible to determine a valid cut-off time: %s.', 'action-scheduler' ),\n\t\t\t\t\tesc_html( $e->getMessage() )\n\t\t\t\t),\n\t\t\t\t'3.5.5'\n\t\t\t);\n\n\t\t\treturn array();\n\t\t}\n\n\t\t/**\n\t\t * Filter the statuses when cleaning the queue.\n\t\t *\n\t\t * @param string[] $default_statuses_to_purge Action statuses to clean.\n\t\t */\n\t\t$statuses_to_purge = (array) apply_filters( 'action_scheduler_default_cleaner_statuses', $this->default_statuses_to_purge );\n\n\t\treturn $this->clean_actions( $statuses_to_purge, $cutoff, $this->get_batch_size() );\n\t}\n\n\t/**\n\t * Delete selected actions limited by status and date.\n\t *\n\t * @param string[] $statuses_to_purge List of action statuses to purge. Defaults to canceled, complete.\n\t * @param DateTime $cutoff_date Date limit for selecting actions. Defaults to 31 days ago.\n\t * @param int|null $batch_size Maximum number of actions per status to delete. Defaults to 20.\n\t * @param string   $context Calling process context. Defaults to `old`.\n\t * @return array Actions deleted.\n\t */\n\tpublic function clean_actions( array $statuses_to_purge, DateTime $cutoff_date, $batch_size = null, $context = 'old' ) {\n\t\t$batch_size = ! is_null( $batch_size ) ? $batch_size : $this->batch_size;\n\t\t$cutoff     = ! is_null( $cutoff_date ) ? $cutoff_date : as_get_datetime_object( $this->month_in_seconds . ' seconds ago' );\n\t\t$lifespan   = time() - $cutoff->getTimestamp();\n\n\t\tif ( empty( $statuses_to_purge ) ) {\n\t\t\t$statuses_to_purge = $this->default_statuses_to_purge;\n\t\t}\n\n\t\t$deleted_actions = array();\n\n\t\tforeach ( $statuses_to_purge as $status ) {\n\t\t\t$actions_to_delete = $this->store->query_actions(\n\t\t\t\tarray(\n\t\t\t\t\t'status'           => $status,\n\t\t\t\t\t'modified'         => $cutoff,\n\t\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t\t'per_page'         => $batch_size,\n\t\t\t\t\t'orderby'          => 'none',\n\t\t\t\t)\n\t\t\t);\n\n\t\t\t$deleted_actions = array_merge( $deleted_actions, $this->delete_actions( $actions_to_delete, $lifespan, $context ) );\n\t\t}\n\n\t\treturn $deleted_actions;\n\t}\n\n\t/**\n\t * Delete actions.\n\t *\n\t * @param int[]  $actions_to_delete List of action IDs to delete.\n\t * @param int    $lifespan Minimum scheduled age in seconds of the actions being deleted.\n\t * @param string $context Context of the delete request.\n\t * @return array Deleted action IDs.\n\t */\n\tprivate function delete_actions( array $actions_to_delete, $lifespan = null, $context = 'old' ) {\n\t\t$deleted_actions = array();\n\n\t\tif ( is_null( $lifespan ) ) {\n\t\t\t$lifespan = $this->month_in_seconds;\n\t\t}\n\n\t\tforeach ( $actions_to_delete as $action_id ) {\n\t\t\ttry {\n\t\t\t\t$this->store->delete_action( $action_id );\n\t\t\t\t$deleted_actions[] = $action_id;\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\t/**\n\t\t\t\t * Notify 3rd party code of exceptions when deleting a completed action older than the retention period\n\t\t\t\t *\n\t\t\t\t * This hook provides a way for 3rd party code to log or otherwise handle exceptions relating to their\n\t\t\t\t * actions.\n\t\t\t\t *\n\t\t\t\t * @param int $action_id The scheduled actions ID in the data store\n\t\t\t\t * @param Exception $e The exception thrown when attempting to delete the action from the data store\n\t\t\t\t * @param int $lifespan The retention period, in seconds, for old actions\n\t\t\t\t * @param int $count_of_actions_to_delete The number of old actions being deleted in this batch\n\t\t\t\t * @since 2.0.0\n\t\t\t\t */\n\t\t\t\tdo_action( \"action_scheduler_failed_{$context}_action_deletion\", $action_id, $e, $lifespan, count( $actions_to_delete ) );\n\t\t\t}\n\t\t}\n\t\treturn $deleted_actions;\n\t}\n\n\t/**\n\t * Unclaim pending actions that have not been run within a given time limit.\n\t *\n\t * When called by ActionScheduler_Abstract_QueueRunner::run_cleanup(), the time limit passed\n\t * as a parameter is 10x the time limit used for queue processing.\n\t *\n\t * @param int $time_limit The number of seconds to allow a queue to run before unclaiming its pending actions. Default 300 (5 minutes).\n\t */\n\tpublic function reset_timeouts( $time_limit = 300 ) {\n\t\t$timeout = apply_filters( 'action_scheduler_timeout_period', $time_limit );\n\n\t\tif ( $timeout < 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$cutoff           = as_get_datetime_object( $timeout . ' seconds ago' );\n\t\t$actions_to_reset = $this->store->query_actions(\n\t\t\tarray(\n\t\t\t\t'status'           => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t\t'modified'         => $cutoff,\n\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t'claimed'          => true,\n\t\t\t\t'per_page'         => $this->get_batch_size(),\n\t\t\t\t'orderby'          => 'none',\n\t\t\t)\n\t\t);\n\n\t\tforeach ( $actions_to_reset as $action_id ) {\n\t\t\t$this->store->unclaim_action( $action_id );\n\t\t\tdo_action( 'action_scheduler_reset_action', $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Mark actions that have been running for more than a given time limit as failed, based on\n\t * the assumption some uncatchable and unloggable fatal error occurred during processing.\n\t *\n\t * When called by ActionScheduler_Abstract_QueueRunner::run_cleanup(), the time limit passed\n\t * as a parameter is 10x the time limit used for queue processing.\n\t *\n\t * @param int $time_limit The number of seconds to allow an action to run before it is considered to have failed. Default 300 (5 minutes).\n\t */\n\tpublic function mark_failures( $time_limit = 300 ) {\n\t\t$timeout = apply_filters( 'action_scheduler_failure_period', $time_limit );\n\n\t\tif ( $timeout < 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$cutoff           = as_get_datetime_object( $timeout . ' seconds ago' );\n\t\t$actions_to_reset = $this->store->query_actions(\n\t\t\tarray(\n\t\t\t\t'status'           => ActionScheduler_Store::STATUS_RUNNING,\n\t\t\t\t'modified'         => $cutoff,\n\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t'per_page'         => $this->get_batch_size(),\n\t\t\t\t'orderby'          => 'none',\n\t\t\t)\n\t\t);\n\n\t\tforeach ( $actions_to_reset as $action_id ) {\n\t\t\t$this->store->mark_failure( $action_id );\n\t\t\tdo_action( 'action_scheduler_failed_action', $action_id, $timeout );\n\t\t}\n\t}\n\n\t/**\n\t * Do all of the cleaning actions.\n\t *\n\t * @param int $time_limit The number of seconds to use as the timeout and failure period. Default 300 (5 minutes).\n\t */\n\tpublic function clean( $time_limit = 300 ) {\n\t\t$this->delete_old_actions();\n\t\t$this->reset_timeouts( $time_limit );\n\t\t$this->mark_failures( $time_limit );\n\t}\n\n\t/**\n\t * Get the batch size for cleaning the queue.\n\t *\n\t * @return int\n\t */\n\tprotected function get_batch_size() {\n\t\t/**\n\t\t * Filter the batch size when cleaning the queue.\n\t\t *\n\t\t * @param int $batch_size The number of actions to clean in one batch.\n\t\t */\n\t\treturn absint( apply_filters( 'action_scheduler_cleanup_batch_size', $this->batch_size ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_ListTable.php","ext":"php","size":21622,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Implements the admin view of the actions.\n *\n * @codeCoverageIgnore\n */\nclass ActionScheduler_ListTable extends ActionScheduler_Abstract_ListTable {\n\n\t/**\n\t * The package name.\n\t *\n\t * @var string\n\t */\n\tprotected $package = 'action-scheduler';\n\n\t/**\n\t * Columns to show (name => label).\n\t *\n\t * @var array\n\t */\n\tprotected $columns = array();\n\n\t/**\n\t * Actions (name => label).\n\t *\n\t * @var array\n\t */\n\tprotected $row_actions = array();\n\n\t/**\n\t * The active data stores\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprotected $store;\n\n\t/**\n\t * A logger to use for getting action logs to display\n\t *\n\t * @var ActionScheduler_Logger\n\t */\n\tprotected $logger;\n\n\t/**\n\t * A ActionScheduler_QueueRunner runner instance (or child class)\n\t *\n\t * @var ActionScheduler_QueueRunner\n\t */\n\tprotected $runner;\n\n\t/**\n\t * Bulk actions. The key of the array is the method name of the implementation.\n\t * Example: bulk_<key>(array $ids, string $sql_in).\n\t *\n\t * See the comments in the parent class for further details\n\t *\n\t * @var array\n\t */\n\tprotected $bulk_actions = array();\n\n\t/**\n\t * Flag variable to render our notifications, if any, once.\n\t *\n\t * @var bool\n\t */\n\tprotected static $did_notification = false;\n\n\t/**\n\t * Array of seconds for common time periods, like week or month, alongside an internationalised string representation, i.e. \"Day\" or \"Days\"\n\t *\n\t * @var array\n\t */\n\tprivate static $time_periods;\n\n\t/**\n\t * Sets the current data store object into `store->action` and initialises the object.\n\t *\n\t * @param ActionScheduler_Store       $store Store object.\n\t * @param ActionScheduler_Logger      $logger Logger object.\n\t * @param ActionScheduler_QueueRunner $runner Runner object.\n\t */\n\tpublic function __construct( ActionScheduler_Store $store, ActionScheduler_Logger $logger, ActionScheduler_QueueRunner $runner ) {\n\n\t\t$this->store  = $store;\n\t\t$this->logger = $logger;\n\t\t$this->runner = $runner;\n\n\t\t$this->table_header = __( 'Scheduled Actions', 'action-scheduler' );\n\n\t\t$this->bulk_actions = array(\n\t\t\t'delete' => __( 'Delete', 'action-scheduler' ),\n\t\t);\n\n\t\t$this->columns = array(\n\t\t\t'hook'        => __( 'Hook', 'action-scheduler' ),\n\t\t\t'status'      => __( 'Status', 'action-scheduler' ),\n\t\t\t'args'        => __( 'Arguments', 'action-scheduler' ),\n\t\t\t'group'       => __( 'Group', 'action-scheduler' ),\n\t\t\t'recurrence'  => __( 'Recurrence', 'action-scheduler' ),\n\t\t\t'schedule'    => __( 'Scheduled Date', 'action-scheduler' ),\n\t\t\t'log_entries' => __( 'Log', 'action-scheduler' ),\n\t\t);\n\n\t\t$this->sort_by = array(\n\t\t\t'schedule',\n\t\t\t'hook',\n\t\t\t'group',\n\t\t);\n\n\t\t$this->search_by = array(\n\t\t\t'hook',\n\t\t\t'args',\n\t\t\t'claim_id',\n\t\t);\n\n\t\t$request_status = $this->get_request_status();\n\n\t\tif ( empty( $request_status ) ) {\n\t\t\t$this->sort_by[] = 'status';\n\t\t} elseif ( in_array( $request_status, array( 'in-progress', 'failed' ), true ) ) {\n\t\t\t$this->columns  += array( 'claim_id' => __( 'Claim ID', 'action-scheduler' ) );\n\t\t\t$this->sort_by[] = 'claim_id';\n\t\t}\n\n\t\t$this->row_actions = array(\n\t\t\t'hook' => array(\n\t\t\t\t'run'    => array(\n\t\t\t\t\t'name' => __( 'Run', 'action-scheduler' ),\n\t\t\t\t\t'desc' => __( 'Process the action now as if it were run as part of a queue', 'action-scheduler' ),\n\t\t\t\t),\n\t\t\t\t'cancel' => array(\n\t\t\t\t\t'name'  => __( 'Cancel', 'action-scheduler' ),\n\t\t\t\t\t'desc'  => __( 'Cancel the action now to avoid it being run in future', 'action-scheduler' ),\n\t\t\t\t\t'class' => 'cancel trash',\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\tself::$time_periods = array(\n\t\t\tarray(\n\t\t\t\t'seconds' => YEAR_IN_SECONDS,\n\t\t\t\t/* translators: %s: amount of time */\n\t\t\t\t'names'   => _n_noop( '%s year', '%s years', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => MONTH_IN_SECONDS,\n\t\t\t\t/* translators: %s: amount of time */\n\t\t\t\t'names'   => _n_noop( '%s month', '%s months', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => WEEK_IN_SECONDS,\n\t\t\t\t/* translators: %s: amount of time */\n\t\t\t\t'names'   => _n_noop( '%s week', '%s weeks', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => DAY_IN_SECONDS,\n\t\t\t\t/* translators: %s: amount of time */\n\t\t\t\t'names'   => _n_noop( '%s day', '%s days', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => HOUR_IN_SECONDS,\n\t\t\t\t/* translators: %s: amount of time */\n\t\t\t\t'names'   => _n_noop( '%s hour', '%s hours', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => MINUTE_IN_SECONDS,\n\t\t\t\t/* translators: %s: amount of time */\n\t\t\t\t'names'   => _n_noop( '%s minute', '%s minutes', 'action-scheduler' ),\n\t\t\t),\n\t\t\tarray(\n\t\t\t\t'seconds' => 1,\n\t\t\t\t/* translators: %s: amount of time */\n\t\t\t\t'names'   => _n_noop( '%s second', '%s seconds', 'action-scheduler' ),\n\t\t\t),\n\t\t);\n\n\t\tparent::__construct(\n\t\t\tarray(\n\t\t\t\t'singular' => 'action-scheduler',\n\t\t\t\t'plural'   => 'action-scheduler',\n\t\t\t\t'ajax'     => false,\n\t\t\t)\n\t\t);\n\n\t\tadd_screen_option(\n\t\t\t'per_page',\n\t\t\tarray(\n\t\t\t\t'default' => $this->items_per_page,\n\t\t\t)\n\t\t);\n\n\t\tadd_filter( 'set_screen_option_' . $this->get_per_page_option_name(), array( $this, 'set_items_per_page_option' ), 10, 3 );\n\t\tset_screen_options();\n\t}\n\n\t/**\n\t * Handles setting the items_per_page option for this screen.\n\t *\n\t * @param mixed  $status Default false (to skip saving the current option).\n\t * @param string $option Screen option name.\n\t * @param int    $value  Screen option value.\n\t * @return int\n\t */\n\tpublic function set_items_per_page_option( $status, $option, $value ) {\n\t\treturn $value;\n\t}\n\t/**\n\t * Convert an interval of seconds into a two part human friendly string.\n\t *\n\t * The WordPress human_time_diff() function only calculates the time difference to one degree, meaning\n\t * even if an action is 1 day and 11 hours away, it will display \"1 day\". This function goes one step\n\t * further to display two degrees of accuracy.\n\t *\n\t * Inspired by the Crontrol::interval() function by Edward Dale: https://wordpress.org/plugins/wp-crontrol/\n\t *\n\t * @param int $interval A interval in seconds.\n\t * @param int $periods_to_include Depth of time periods to include, e.g. for an interval of 70, and $periods_to_include of 2, both minutes and seconds would be included. With a value of 1, only minutes would be included.\n\t * @return string A human friendly string representation of the interval.\n\t */\n\tprivate static function human_interval( $interval, $periods_to_include = 2 ) {\n\n\t\tif ( $interval <= 0 ) {\n\t\t\treturn __( 'Now!', 'action-scheduler' );\n\t\t}\n\n\t\t$output           = '';\n\t\t$num_time_periods = count( self::$time_periods );\n\n\t\tfor ( $time_period_index = 0, $periods_included = 0, $seconds_remaining = $interval; $time_period_index < $num_time_periods && $seconds_remaining > 0 && $periods_included < $periods_to_include; $time_period_index++ ) {\n\n\t\t\t$periods_in_interval = floor( $seconds_remaining / self::$time_periods[ $time_period_index ]['seconds'] );\n\n\t\t\tif ( $periods_in_interval > 0 ) {\n\t\t\t\tif ( ! empty( $output ) ) {\n\t\t\t\t\t$output .= ' ';\n\t\t\t\t}\n\t\t\t\t$output            .= sprintf( translate_nooped_plural( self::$time_periods[ $time_period_index ]['names'], $periods_in_interval, 'action-scheduler' ), $periods_in_interval );\n\t\t\t\t$seconds_remaining -= $periods_in_interval * self::$time_periods[ $time_period_index ]['seconds'];\n\t\t\t\t$periods_included++;\n\t\t\t}\n\t\t}\n\n\t\treturn $output;\n\t}\n\n\t/**\n\t * Returns the recurrence of an action or 'Non-repeating'. The output is human readable.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t *\n\t * @return string\n\t */\n\tprotected function get_recurrence( $action ) {\n\t\t$schedule = $action->get_schedule();\n\t\tif ( $schedule->is_recurring() && method_exists( $schedule, 'get_recurrence' ) ) {\n\t\t\t$recurrence = $schedule->get_recurrence();\n\n\t\t\tif ( is_numeric( $recurrence ) ) {\n\t\t\t\t/* translators: %s: time interval */\n\t\t\t\treturn sprintf( __( 'Every %s', 'action-scheduler' ), self::human_interval( $recurrence ) );\n\t\t\t} else {\n\t\t\t\treturn $recurrence;\n\t\t\t}\n\t\t}\n\n\t\treturn __( 'Non-repeating', 'action-scheduler' );\n\t}\n\n\t/**\n\t * Serializes the argument of an action to render it in a human friendly format.\n\t *\n\t * @param array $row The array representation of the current row of the table.\n\t *\n\t * @return string\n\t */\n\tpublic function column_args( array $row ) {\n\t\tif ( empty( $row['args'] ) ) {\n\t\t\treturn apply_filters( 'action_scheduler_list_table_column_args', '', $row );\n\t\t}\n\n\t\t$row_html = '<ul>';\n\t\tforeach ( $row['args'] as $key => $value ) {\n\t\t\t$row_html .= sprintf( '<li><code>%s => %s</code></li>', esc_html( var_export( $key, true ) ), esc_html( var_export( $value, true ) ) ); // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t}\n\t\t$row_html .= '</ul>';\n\n\t\treturn apply_filters( 'action_scheduler_list_table_column_args', $row_html, $row );\n\t}\n\n\t/**\n\t * Prints the logs entries inline. We do so to avoid loading Javascript and other hacks to show it in a modal.\n\t *\n\t * @param array $row Action array.\n\t * @return string\n\t */\n\tpublic function column_log_entries( array $row ) {\n\n\t\t$log_entries_html = '<ol>';\n\n\t\t$timezone = new DateTimezone( 'UTC' );\n\n\t\tforeach ( $row['log_entries'] as $log_entry ) {\n\t\t\t$log_entries_html .= $this->get_log_entry_html( $log_entry, $timezone );\n\t\t}\n\n\t\t$log_entries_html .= '</ol>';\n\n\t\treturn $log_entries_html;\n\t}\n\n\t/**\n\t * Prints the logs entries inline. We do so to avoid loading Javascript and other hacks to show it in a modal.\n\t *\n\t * @param ActionScheduler_LogEntry $log_entry Log entry object.\n\t * @param DateTimezone             $timezone Timestamp.\n\t * @return string\n\t */\n\tprotected function get_log_entry_html( ActionScheduler_LogEntry $log_entry, DateTimezone $timezone ) {\n\t\t$date = $log_entry->get_date();\n\t\t$date->setTimezone( $timezone );\n\t\treturn sprintf( '<li><strong>%s</strong><br/>%s</li>', esc_html( $date->format( 'Y-m-d H:i:s O' ) ), esc_html( $log_entry->get_message() ) );\n\t}\n\n\t/**\n\t * Only display row actions for pending actions.\n\t *\n\t * @param array  $row         Row to render.\n\t * @param string $column_name Current row.\n\t *\n\t * @return string\n\t */\n\tprotected function maybe_render_actions( $row, $column_name ) {\n\t\tif ( 'pending' === strtolower( $row['status_name'] ) ) {\n\t\t\treturn parent::maybe_render_actions( $row, $column_name );\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Renders admin notifications\n\t *\n\t * Notifications:\n\t *  1. When the maximum number of tasks are being executed simultaneously.\n\t *  2. Notifications when a task is manually executed.\n\t *  3. Tables are missing.\n\t */\n\tpublic function display_admin_notices() {\n\t\tglobal $wpdb;\n\n\t\tif ( ( is_a( $this->store, 'ActionScheduler_HybridStore' ) || is_a( $this->store, 'ActionScheduler_DBStore' ) ) && apply_filters( 'action_scheduler_enable_recreate_data_store', true ) ) {\n\t\t\t$table_list = array(\n\t\t\t\t'actionscheduler_actions',\n\t\t\t\t'actionscheduler_logs',\n\t\t\t\t'actionscheduler_groups',\n\t\t\t\t'actionscheduler_claims',\n\t\t\t);\n\n\t\t\t$found_tables = $wpdb->get_col( \"SHOW TABLES LIKE '{$wpdb->prefix}actionscheduler%'\" ); // phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t\tforeach ( $table_list as $table_name ) {\n\t\t\t\tif ( ! in_array( $wpdb->prefix . $table_name, $found_tables, true ) ) {\n\t\t\t\t\t$this->admin_notices[] = array(\n\t\t\t\t\t\t'class'   => 'error',\n\t\t\t\t\t\t'message' => __( 'It appears one or more database tables were missing. Attempting to re-create the missing table(s).', 'action-scheduler' ),\n\t\t\t\t\t);\n\t\t\t\t\t$this->recreate_tables();\n\t\t\t\t\tparent::display_admin_notices();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->runner->has_maximum_concurrent_batches() ) {\n\t\t\t$claim_count           = $this->store->get_claim_count();\n\t\t\t$this->admin_notices[] = array(\n\t\t\t\t'class'   => 'updated',\n\t\t\t\t'message' => sprintf(\n\t\t\t\t\t/* translators: %s: amount of claims */\n\t\t\t\t\t_n(\n\t\t\t\t\t\t'Maximum simultaneous queues already in progress (%s queue). No additional queues will begin processing until the current queues are complete.',\n\t\t\t\t\t\t'Maximum simultaneous queues already in progress (%s queues). No additional queues will begin processing until the current queues are complete.',\n\t\t\t\t\t\t$claim_count,\n\t\t\t\t\t\t'action-scheduler'\n\t\t\t\t\t),\n\t\t\t\t\t$claim_count\n\t\t\t\t),\n\t\t\t);\n\t\t} elseif ( $this->store->has_pending_actions_due() ) {\n\n\t\t\t$async_request_lock_expiration = ActionScheduler::lock()->get_expiration( 'async-request-runner' );\n\n\t\t\t// No lock set or lock expired.\n\t\t\tif ( false === $async_request_lock_expiration || $async_request_lock_expiration < time() ) {\n\t\t\t\t$in_progress_url = add_query_arg( 'status', 'in-progress', remove_query_arg( 'status' ) );\n\t\t\t\t/* translators: %s: process URL */\n\t\t\t\t$async_request_message = sprintf( __( 'A new queue has begun processing. <a href=\"%s\">View actions in-progress &raquo;</a>', 'action-scheduler' ), esc_url( $in_progress_url ) );\n\t\t\t} else {\n\t\t\t\t/* translators: %d: seconds */\n\t\t\t\t$async_request_message = sprintf( __( 'The next queue will begin processing in approximately %d seconds.', 'action-scheduler' ), $async_request_lock_expiration - time() );\n\t\t\t}\n\n\t\t\t$this->admin_notices[] = array(\n\t\t\t\t'class'   => 'notice notice-info',\n\t\t\t\t'message' => $async_request_message,\n\t\t\t);\n\t\t}\n\n\t\t$notification = get_transient( 'action_scheduler_admin_notice' );\n\n\t\tif ( is_array( $notification ) ) {\n\t\t\tdelete_transient( 'action_scheduler_admin_notice' );\n\n\t\t\t$action           = $this->store->fetch_action( $notification['action_id'] );\n\t\t\t$action_hook_html = '<strong><code>' . $action->get_hook() . '</code></strong>';\n\n\t\t\tif ( 1 === absint( $notification['success'] ) ) {\n\t\t\t\t$class = 'updated';\n\t\t\t\tswitch ( $notification['row_action_type'] ) {\n\t\t\t\t\tcase 'run':\n\t\t\t\t\t\t/* translators: %s: action HTML */\n\t\t\t\t\t\t$action_message_html = sprintf( __( 'Successfully executed action: %s', 'action-scheduler' ), $action_hook_html );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'cancel':\n\t\t\t\t\t\t/* translators: %s: action HTML */\n\t\t\t\t\t\t$action_message_html = sprintf( __( 'Successfully canceled action: %s', 'action-scheduler' ), $action_hook_html );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t/* translators: %s: action HTML */\n\t\t\t\t\t\t$action_message_html = sprintf( __( 'Successfully processed change for action: %s', 'action-scheduler' ), $action_hook_html );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$class = 'error';\n\t\t\t\t/* translators: 1: action HTML 2: action ID 3: error message */\n\t\t\t\t$action_message_html = sprintf( __( 'Could not process change for action: \"%1$s\" (ID: %2$d). Error: %3$s', 'action-scheduler' ), $action_hook_html, esc_html( $notification['action_id'] ), esc_html( $notification['error_message'] ) );\n\t\t\t}\n\n\t\t\t$action_message_html = apply_filters( 'action_scheduler_admin_notice_html', $action_message_html, $action, $notification );\n\n\t\t\t$this->admin_notices[] = array(\n\t\t\t\t'class'   => $class,\n\t\t\t\t'message' => $action_message_html,\n\t\t\t);\n\t\t}\n\n\t\tparent::display_admin_notices();\n\t}\n\n\t/**\n\t * Prints the scheduled date in a human friendly format.\n\t *\n\t * @param array $row The array representation of the current row of the table.\n\t *\n\t * @return string\n\t */\n\tpublic function column_schedule( $row ) {\n\t\treturn $this->get_schedule_display_string( $row['schedule'] );\n\t}\n\n\t/**\n\t * Get the scheduled date in a human friendly format.\n\t *\n\t * @param ActionScheduler_Schedule $schedule Action's schedule.\n\t * @return string\n\t */\n\tprotected function get_schedule_display_string( ActionScheduler_Schedule $schedule ) {\n\n\t\t$schedule_display_string = '';\n\n\t\tif ( is_a( $schedule, 'ActionScheduler_NullSchedule' ) ) {\n\t\t\treturn __( 'async', 'action-scheduler' );\n\t\t}\n\n\t\tif ( ! method_exists( $schedule, 'get_date' ) || ! $schedule->get_date() ) {\n\t\t\treturn '0000-00-00 00:00:00';\n\t\t}\n\n\t\t$next_timestamp = $schedule->get_date()->getTimestamp();\n\n\t\t$schedule_display_string .= $schedule->get_date()->format( 'Y-m-d H:i:s O' );\n\t\t$schedule_display_string .= '<br/>';\n\n\t\tif ( gmdate( 'U' ) > $next_timestamp ) {\n\t\t\t/* translators: %s: date interval */\n\t\t\t$schedule_display_string .= sprintf( __( ' (%s ago)', 'action-scheduler' ), self::human_interval( gmdate( 'U' ) - $next_timestamp ) );\n\t\t} else {\n\t\t\t/* translators: %s: date interval */\n\t\t\t$schedule_display_string .= sprintf( __( ' (%s)', 'action-scheduler' ), self::human_interval( $next_timestamp - gmdate( 'U' ) ) );\n\t\t}\n\n\t\treturn $schedule_display_string;\n\t}\n\n\t/**\n\t * Bulk delete.\n\t *\n\t * Deletes actions based on their ID. This is the handler for the bulk delete. It assumes the data\n\t * properly validated by the callee and it will delete the actions without any extra validation.\n\t *\n\t * @param int[]  $ids Action IDs.\n\t * @param string $ids_sql Inherited and unused.\n\t */\n\tprotected function bulk_delete( array $ids, $ids_sql ) {\n\t\tforeach ( $ids as $id ) {\n\t\t\ttry {\n\t\t\t\t$this->store->delete_action( $id );\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\t// A possible reason for an exception would include a scenario where the same action is deleted by a\n\t\t\t\t// concurrent request.\n\t\t\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_error_log\n\t\t\t\terror_log(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: 1: action ID 2: exception message. */\n\t\t\t\t\t\t__( 'Action Scheduler was unable to delete action %1$d. Reason: %2$s', 'action-scheduler' ),\n\t\t\t\t\t\t$id,\n\t\t\t\t\t\t$e->getMessage()\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Implements the logic behind running an action. ActionScheduler_Abstract_ListTable validates the request and their\n\t * parameters are valid.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tprotected function row_action_cancel( $action_id ) {\n\t\t$this->process_row_action( $action_id, 'cancel' );\n\t}\n\n\t/**\n\t * Implements the logic behind running an action. ActionScheduler_Abstract_ListTable validates the request and their\n\t * parameters are valid.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tprotected function row_action_run( $action_id ) {\n\t\t$this->process_row_action( $action_id, 'run' );\n\t}\n\n\t/**\n\t * Force the data store schema updates.\n\t */\n\tprotected function recreate_tables() {\n\t\tif ( is_a( $this->store, 'ActionScheduler_HybridStore' ) ) {\n\t\t\t$store = $this->store;\n\t\t} else {\n\t\t\t$store = new ActionScheduler_HybridStore();\n\t\t}\n\t\tadd_action( 'action_scheduler/created_table', array( $store, 'set_autoincrement' ), 10, 2 );\n\n\t\t$store_schema  = new ActionScheduler_StoreSchema();\n\t\t$logger_schema = new ActionScheduler_LoggerSchema();\n\t\t$store_schema->register_tables( true );\n\t\t$logger_schema->register_tables( true );\n\n\t\tremove_action( 'action_scheduler/created_table', array( $store, 'set_autoincrement' ), 10 );\n\t}\n\t/**\n\t * Implements the logic behind processing an action once an action link is clicked on the list table.\n\t *\n\t * @param int    $action_id Action ID.\n\t * @param string $row_action_type The type of action to perform on the action.\n\t */\n\tprotected function process_row_action( $action_id, $row_action_type ) {\n\t\ttry {\n\t\t\tswitch ( $row_action_type ) {\n\t\t\t\tcase 'run':\n\t\t\t\t\t$this->runner->process_action( $action_id, 'Admin List Table' );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'cancel':\n\t\t\t\t\t$this->store->cancel_action( $action_id );\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t$success       = 1;\n\t\t\t$error_message = '';\n\t\t} catch ( Exception $e ) {\n\t\t\t$success       = 0;\n\t\t\t$error_message = $e->getMessage();\n\t\t}\n\n\t\tset_transient( 'action_scheduler_admin_notice', compact( 'action_id', 'success', 'error_message', 'row_action_type' ), 30 );\n\t}\n\n\t/**\n\t * {@inheritDoc}\n\t */\n\tpublic function prepare_items() {\n\t\t$this->prepare_column_headers();\n\n\t\t$per_page = $this->get_items_per_page( $this->get_per_page_option_name(), $this->items_per_page );\n\n\t\t$query = array(\n\t\t\t'per_page' => $per_page,\n\t\t\t'offset'   => $this->get_items_offset(),\n\t\t\t'status'   => $this->get_request_status(),\n\t\t\t'orderby'  => $this->get_request_orderby(),\n\t\t\t'order'    => $this->get_request_order(),\n\t\t\t'search'   => $this->get_request_search_query(),\n\t\t);\n\n\t\t/**\n\t\t * Change query arguments to query for past-due actions.\n\t\t * Past-due actions have the 'pending' status and are in the past.\n\t\t * This is needed because registering 'past-due' as a status is overkill.\n\t\t */\n\t\tif ( 'past-due' === $this->get_request_status() ) {\n\t\t\t$query['status'] = ActionScheduler_Store::STATUS_PENDING;\n\t\t\t$query['date']   = as_get_datetime_object();\n\t\t}\n\n\t\t$this->items = array();\n\n\t\t$total_items = $this->store->query_actions( $query, 'count' );\n\n\t\t$status_labels = $this->store->get_status_labels();\n\n\t\tforeach ( $this->store->query_actions( $query ) as $action_id ) {\n\t\t\ttry {\n\t\t\t\t$action = $this->store->fetch_action( $action_id );\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( is_a( $action, 'ActionScheduler_NullAction' ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$this->items[ $action_id ] = array(\n\t\t\t\t'ID'          => $action_id,\n\t\t\t\t'hook'        => $action->get_hook(),\n\t\t\t\t'status_name' => $this->store->get_status( $action_id ),\n\t\t\t\t'status'      => $status_labels[ $this->store->get_status( $action_id ) ],\n\t\t\t\t'args'        => $action->get_args(),\n\t\t\t\t'group'       => $action->get_group(),\n\t\t\t\t'log_entries' => $this->logger->get_logs( $action_id ),\n\t\t\t\t'claim_id'    => $this->store->get_claim_id( $action_id ),\n\t\t\t\t'recurrence'  => $this->get_recurrence( $action ),\n\t\t\t\t'schedule'    => $action->get_schedule(),\n\t\t\t);\n\t\t}\n\n\t\t$this->set_pagination_args(\n\t\t\tarray(\n\t\t\t\t'total_items' => $total_items,\n\t\t\t\t'per_page'    => $per_page,\n\t\t\t\t'total_pages' => ceil( $total_items / $per_page ),\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Prints the available statuses so the user can click to filter.\n\t */\n\tprotected function display_filter_by_status() {\n\t\t$this->status_counts = $this->store->action_counts() + $this->store->extra_action_counts();\n\t\tparent::display_filter_by_status();\n\t}\n\n\t/**\n\t * Get the text to display in the search box on the list table.\n\t */\n\tprotected function get_search_box_button_text() {\n\t\treturn __( 'Search hook, args and claim ID', 'action-scheduler' );\n\t}\n\n\t/**\n\t * {@inheritDoc}\n\t */\n\tprotected function get_per_page_option_name() {\n\t\treturn str_replace( '-', '_', $this->screen->id ) . '_per_page';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schema/ActionScheduler_StoreSchema.php","ext":"php","size":5263,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_StoreSchema\n *\n * @codeCoverageIgnore\n *\n * Creates custom tables for storing scheduled actions\n */\nclass ActionScheduler_StoreSchema extends ActionScheduler_Abstract_Schema {\n\tconst ACTIONS_TABLE = 'actionscheduler_actions';\n\tconst CLAIMS_TABLE  = 'actionscheduler_claims';\n\tconst GROUPS_TABLE  = 'actionscheduler_groups';\n\tconst DEFAULT_DATE  = '0000-00-00 00:00:00';\n\n\t/**\n\t * Schema version.\n\t *\n\t * Increment this value to trigger a schema update.\n\t *\n\t * @var int\n\t */\n\tprotected $schema_version = 8;\n\n\t/**\n\t * Construct.\n\t */\n\tpublic function __construct() {\n\t\t$this->tables = array(\n\t\t\tself::ACTIONS_TABLE,\n\t\t\tself::CLAIMS_TABLE,\n\t\t\tself::GROUPS_TABLE,\n\t\t);\n\t}\n\n\t/**\n\t * Performs additional setup work required to support this schema.\n\t */\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler_before_schema_update', array( $this, 'update_schema_5_0' ), 10, 2 );\n\t}\n\n\t/**\n\t * Get table definition.\n\t *\n\t * @param string $table Table name.\n\t */\n\tprotected function get_table_definition( $table ) {\n\t\tglobal $wpdb;\n\t\t$table_name      = $wpdb->$table;\n\t\t$charset_collate = $wpdb->get_charset_collate();\n\t\t$default_date    = self::DEFAULT_DATE;\n\t\t// phpcs:ignore Squiz.PHP.CommentedOutCode\n\t\t$max_index_length = 191; // @see wp_get_db_schema()\n\n\t\t$hook_status_scheduled_date_gmt_max_index_length = $max_index_length - 20 - 8; // - status, - scheduled_date_gmt\n\n\t\tswitch ( $table ) {\n\n\t\t\tcase self::ACTIONS_TABLE:\n\t\t\t\treturn \"CREATE TABLE {$table_name} (\n\t\t\t\t        action_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        hook varchar(191) NOT NULL,\n\t\t\t\t        status varchar(20) NOT NULL,\n\t\t\t\t        scheduled_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        scheduled_date_local datetime NULL default '{$default_date}',\n\t\t\t\t        priority tinyint unsigned NOT NULL default '10',\n\t\t\t\t        args varchar($max_index_length),\n\t\t\t\t        schedule longtext,\n\t\t\t\t        group_id bigint(20) unsigned NOT NULL default '0',\n\t\t\t\t        attempts int(11) NOT NULL default '0',\n\t\t\t\t        last_attempt_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        last_attempt_local datetime NULL default '{$default_date}',\n\t\t\t\t        claim_id bigint(20) unsigned NOT NULL default '0',\n\t\t\t\t        extended_args varchar(8000) DEFAULT NULL,\n\t\t\t\t        PRIMARY KEY  (action_id),\n\t\t\t\t        KEY hook_status_scheduled_date_gmt (hook($hook_status_scheduled_date_gmt_max_index_length), status, scheduled_date_gmt),\n\t\t\t\t        KEY status_scheduled_date_gmt (status, scheduled_date_gmt),\n\t\t\t\t        KEY scheduled_date_gmt (scheduled_date_gmt),\n\t\t\t\t        KEY args (args($max_index_length)),\n\t\t\t\t        KEY group_id (group_id),\n\t\t\t\t        KEY last_attempt_gmt (last_attempt_gmt),\n\t\t\t\t        KEY `claim_id_status_priority_scheduled_date_gmt` (`claim_id`,`status`,`priority`,`scheduled_date_gmt`),\n\t\t\t\t        KEY `status_last_attempt_gmt` (`status`,`last_attempt_gmt`),\n\t\t\t\t        KEY `status_claim_id` (`status`,`claim_id`)\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tcase self::CLAIMS_TABLE:\n\t\t\t\treturn \"CREATE TABLE {$table_name} (\n\t\t\t\t        claim_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        date_created_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        PRIMARY KEY  (claim_id),\n\t\t\t\t        KEY date_created_gmt (date_created_gmt)\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tcase self::GROUPS_TABLE:\n\t\t\t\treturn \"CREATE TABLE {$table_name} (\n\t\t\t\t        group_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        slug varchar(255) NOT NULL,\n\t\t\t\t        PRIMARY KEY  (group_id),\n\t\t\t\t        KEY slug (slug($max_index_length))\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Update the actions table schema, allowing datetime fields to be NULL.\n\t *\n\t * This is needed because the NOT NULL constraint causes a conflict with some versions of MySQL\n\t * configured with sql_mode=NO_ZERO_DATE, which can for instance lead to tables not being created.\n\t *\n\t * Most other schema updates happen via ActionScheduler_Abstract_Schema::update_table(), however\n\t * that method relies on dbDelta() and this change is not possible when using that function.\n\t *\n\t * @param string $table Name of table being updated.\n\t * @param string $db_version The existing schema version of the table.\n\t */\n\tpublic function update_schema_5_0( $table, $db_version ) {\n\t\tglobal $wpdb;\n\n\t\tif ( 'actionscheduler_actions' !== $table || version_compare( $db_version, '5', '>=' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// phpcs:disable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t$table_name   = $wpdb->prefix . 'actionscheduler_actions';\n\t\t$table_list   = $wpdb->get_col( \"SHOW TABLES LIKE '{$table_name}'\" );\n\t\t$default_date = self::DEFAULT_DATE;\n\n\t\tif ( ! empty( $table_list ) ) {\n\t\t\t$query = \"\n\t\t\t\tALTER TABLE {$table_name}\n\t\t\t\tMODIFY COLUMN scheduled_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN scheduled_date_local datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN last_attempt_gmt datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN last_attempt_local datetime NULL default '{$default_date}'\n\t\t\";\n\t\t\t$wpdb->query( $query ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\t// phpcs:enable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/schema/ActionScheduler_LoggerSchema.php","ext":"php","size":3002,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_LoggerSchema\n *\n * @codeCoverageIgnore\n *\n * Creates a custom table for storing action logs\n */\nclass ActionScheduler_LoggerSchema extends ActionScheduler_Abstract_Schema {\n\tconst LOG_TABLE = 'actionscheduler_logs';\n\n\t/**\n\t * Schema version.\n\t *\n\t * Increment this value to trigger a schema update.\n\t *\n\t * @var int\n\t */\n\tprotected $schema_version = 3;\n\n\t/**\n\t * Construct.\n\t */\n\tpublic function __construct() {\n\t\t$this->tables = array(\n\t\t\tself::LOG_TABLE,\n\t\t);\n\t}\n\n\t/**\n\t * Performs additional setup work required to support this schema.\n\t */\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler_before_schema_update', array( $this, 'update_schema_3_0' ), 10, 2 );\n\t}\n\n\t/**\n\t * Get table definition.\n\t *\n\t * @param string $table Table name.\n\t */\n\tprotected function get_table_definition( $table ) {\n\t\tglobal $wpdb;\n\t\t$table_name      = $wpdb->$table;\n\t\t$charset_collate = $wpdb->get_charset_collate();\n\t\tswitch ( $table ) {\n\n\t\t\tcase self::LOG_TABLE:\n\t\t\t\t$default_date = ActionScheduler_StoreSchema::DEFAULT_DATE;\n\t\t\t\treturn \"CREATE TABLE $table_name (\n\t\t\t\t        log_id bigint(20) unsigned NOT NULL auto_increment,\n\t\t\t\t        action_id bigint(20) unsigned NOT NULL,\n\t\t\t\t        message text NOT NULL,\n\t\t\t\t        log_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\t        log_date_local datetime NULL default '{$default_date}',\n\t\t\t\t        PRIMARY KEY  (log_id),\n\t\t\t\t        KEY action_id (action_id),\n\t\t\t\t        KEY log_date_gmt (log_date_gmt)\n\t\t\t\t        ) $charset_collate\";\n\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\t/**\n\t * Update the logs table schema, allowing datetime fields to be NULL.\n\t *\n\t * This is needed because the NOT NULL constraint causes a conflict with some versions of MySQL\n\t * configured with sql_mode=NO_ZERO_DATE, which can for instance lead to tables not being created.\n\t *\n\t * Most other schema updates happen via ActionScheduler_Abstract_Schema::update_table(), however\n\t * that method relies on dbDelta() and this change is not possible when using that function.\n\t *\n\t * @param string $table Name of table being updated.\n\t * @param string $db_version The existing schema version of the table.\n\t */\n\tpublic function update_schema_3_0( $table, $db_version ) {\n\t\tglobal $wpdb;\n\n\t\tif ( 'actionscheduler_logs' !== $table || version_compare( $db_version, '3', '>=' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// phpcs:disable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t$table_name   = $wpdb->prefix . 'actionscheduler_logs';\n\t\t$table_list   = $wpdb->get_col( \"SHOW TABLES LIKE '{$table_name}'\" );\n\t\t$default_date = ActionScheduler_StoreSchema::DEFAULT_DATE;\n\n\t\tif ( ! empty( $table_list ) ) {\n\t\t\t$query = \"\n\t\t\t\tALTER TABLE {$table_name}\n\t\t\t\tMODIFY COLUMN log_date_gmt datetime NULL default '{$default_date}',\n\t\t\t\tMODIFY COLUMN log_date_local datetime NULL default '{$default_date}'\n\t\t\t\";\n\t\t\t$wpdb->query( $query ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\t// phpcs:enable WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_Compatibility.php","ext":"php","size":3904,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Compatibility\n */\nclass ActionScheduler_Compatibility {\n\t/**\n\t * Converts a shorthand byte value to an integer byte value.\n\t *\n\t * Wrapper for wp_convert_hr_to_bytes(), moved to load.php in WordPress 4.6 from media.php\n\t *\n\t * @link https://secure.php.net/manual/en/function.ini-get.php\n\t * @link https://secure.php.net/manual/en/faq.using.php#faq.using.shorthandbytes\n\t *\n\t * @param string $value A (PHP ini) byte value, either shorthand or ordinary.\n\t * @return int An integer byte value.\n\t */\n\tpublic static function convert_hr_to_bytes( $value ) {\n\t\tif ( function_exists( 'wp_convert_hr_to_bytes' ) ) {\n\t\t\treturn wp_convert_hr_to_bytes( $value );\n\t\t}\n\n\t\t$value = strtolower( trim( $value ) );\n\t\t$bytes = (int) $value;\n\n\t\tif ( false !== strpos( $value, 'g' ) ) {\n\t\t\t$bytes *= GB_IN_BYTES;\n\t\t} elseif ( false !== strpos( $value, 'm' ) ) {\n\t\t\t$bytes *= MB_IN_BYTES;\n\t\t} elseif ( false !== strpos( $value, 'k' ) ) {\n\t\t\t$bytes *= KB_IN_BYTES;\n\t\t}\n\n\t\t// Deal with large (float) values which run into the maximum integer size.\n\t\treturn min( $bytes, PHP_INT_MAX );\n\t}\n\n\t/**\n\t * Attempts to raise the PHP memory limit for memory intensive processes.\n\t *\n\t * Only allows raising the existing limit and prevents lowering it.\n\t *\n\t * Wrapper for wp_raise_memory_limit(), added in WordPress v4.6.0\n\t *\n\t * @return bool|int|string The limit that was set or false on failure.\n\t */\n\tpublic static function raise_memory_limit() {\n\t\tif ( function_exists( 'wp_raise_memory_limit' ) ) {\n\t\t\treturn wp_raise_memory_limit( 'admin' );\n\t\t}\n\n\t\t$current_limit     = @ini_get( 'memory_limit' ); // phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t$current_limit_int = self::convert_hr_to_bytes( $current_limit );\n\n\t\tif ( -1 === $current_limit_int ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$wp_max_limit       = WP_MAX_MEMORY_LIMIT;\n\t\t$wp_max_limit_int   = self::convert_hr_to_bytes( $wp_max_limit );\n\t\t$filtered_limit     = apply_filters( 'admin_memory_limit', $wp_max_limit );\n\t\t$filtered_limit_int = self::convert_hr_to_bytes( $filtered_limit );\n\n\t\t// phpcs:disable WordPress.PHP.IniSet.memory_limit_Blacklisted\n\t\t// phpcs:disable WordPress.PHP.NoSilencedErrors.Discouraged\n\n\t\tif ( -1 === $filtered_limit_int || ( $filtered_limit_int > $wp_max_limit_int && $filtered_limit_int > $current_limit_int ) ) {\n\t\t\tif ( false !== @ini_set( 'memory_limit', $filtered_limit ) ) {\n\t\t\t\treturn $filtered_limit;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} elseif ( -1 === $wp_max_limit_int || $wp_max_limit_int > $current_limit_int ) {\n\t\t\tif ( false !== @ini_set( 'memory_limit', $wp_max_limit ) ) {\n\t\t\t\treturn $wp_max_limit;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// phpcs:enable\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Attempts to raise the PHP timeout for time intensive processes.\n\t *\n\t * Only allows raising the existing limit and prevents lowering it. Wrapper for wc_set_time_limit(), when available.\n\t *\n\t * @param int $limit The time limit in seconds.\n\t */\n\tpublic static function raise_time_limit( $limit = 0 ) {\n\t\t$limit              = (int) $limit;\n\t\t$max_execution_time = (int) ini_get( 'max_execution_time' );\n\n\t\t// If the max execution time is already set to zero (unlimited), there is no reason to make a further change.\n\t\tif ( 0 === $max_execution_time ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Whichever of $max_execution_time or $limit is higher is the amount by which we raise the time limit.\n\t\t$raise_by = 0 === $limit || $limit > $max_execution_time ? $limit : $max_execution_time;\n\n\t\tif ( function_exists( 'wc_set_time_limit' ) ) {\n\t\t\twc_set_time_limit( $raise_by );\n\t\t} elseif ( function_exists( 'set_time_limit' ) && false === strpos( ini_get( 'disable_functions' ), 'set_time_limit' ) && ! ini_get( 'safe_mode' ) ) { // phpcs:ignore PHPCompatibility.IniDirectives.RemovedIniDirectives.safe_modeDeprecatedRemoved\n\t\t\t@set_time_limit( $raise_by ); // phpcs:ignore WordPress.PHP.NoSilencedErrors.Discouraged\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_Versions.php","ext":"php","size":3690,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Versions\n */\nclass ActionScheduler_Versions {\n\t/**\n\t * ActionScheduler_Versions instance.\n\t *\n\t * @var ActionScheduler_Versions\n\t */\n\tprivate static $instance = null;\n\n\t/**\n\t * Versions.\n\t *\n\t * @var array<string, callable>\n\t */\n\tprivate $versions = array();\n\n\t/**\n\t * Registered sources.\n\t *\n\t * @var array<string, string>\n\t */\n\tprivate $sources = array();\n\n\t/**\n\t * Register version's callback.\n\t *\n\t * @param string   $version_string          Action Scheduler version.\n\t * @param callable $initialization_callback Callback to initialize the version.\n\t */\n\tpublic function register( $version_string, $initialization_callback ) {\n\t\tif ( isset( $this->versions[ $version_string ] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_debug_backtrace\n\t\t$backtrace = debug_backtrace( DEBUG_BACKTRACE_IGNORE_ARGS );\n\t\t$source    = $backtrace[0]['file'];\n\n\t\t$this->versions[ $version_string ] = $initialization_callback;\n\t\t$this->sources[ $source ]          = $version_string;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get all versions.\n\t */\n\tpublic function get_versions() {\n\t\treturn $this->versions;\n\t}\n\n\t/**\n\t * Get registered sources.\n\t *\n\t * Use with caution: this method is only available as of Action Scheduler's 3.9.1\n\t * release and, owing to the way Action Scheduler is loaded, it's possible that the\n\t * class definition used at runtime will belong to an earlier version.\n\t *\n\t * @since 3.9.1\n\t *\n\t * @return array<string, string>\n\t */\n\tpublic function get_sources() {\n\t\treturn $this->sources;\n\t}\n\n\t/**\n\t * Get latest version registered.\n\t */\n\tpublic function latest_version() {\n\t\t$keys = array_keys( $this->versions );\n\t\tif ( empty( $keys ) ) {\n\t\t\treturn false;\n\t\t}\n\t\tuasort( $keys, 'version_compare' );\n\t\treturn end( $keys );\n\t}\n\n\t/**\n\t * Get callback for latest registered version.\n\t */\n\tpublic function latest_version_callback() {\n\t\t$latest = $this->latest_version();\n\n\t\tif ( empty( $latest ) || ! isset( $this->versions[ $latest ] ) ) {\n\t\t\treturn '__return_null';\n\t\t}\n\n\t\treturn $this->versions[ $latest ];\n\t}\n\n\t/**\n\t * Get instance.\n\t *\n\t * @return ActionScheduler_Versions\n\t * @codeCoverageIgnore\n\t */\n\tpublic static function instance() {\n\t\tif ( empty( self::$instance ) ) {\n\t\t\tself::$instance = new self();\n\t\t}\n\t\treturn self::$instance;\n\t}\n\n\t/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic static function initialize_latest_version() {\n\t\t$self = self::instance();\n\t\tcall_user_func( $self->latest_version_callback() );\n\t}\n\n\t/**\n\t * Returns information about the plugin or theme which contains the current active version\n\t * of Action Scheduler.\n\t *\n\t * If this cannot be determined, or if Action Scheduler is being loaded via some other\n\t * method, then it will return an empty array. Otherwise, if populated, the array will\n\t * look like the following:\n\t *\n\t *     [\n\t *         'type' => 'plugin', # or 'theme'\n\t *         'name' => 'Name',\n\t *     ]\n\t *\n\t * @deprecated 3.9.2 Use ActionScheduler_SystemInformation::active_source().\n\t *\n\t * @return array\n\t */\n\tpublic function active_source(): array {\n\t\t_deprecated_function( __METHOD__, '3.9.2', 'ActionScheduler_SystemInformation::active_source()' );\n\t\treturn ActionScheduler_SystemInformation::active_source();\n\t}\n\n\t/**\n\t * Returns the directory path for the currently active installation of Action Scheduler.\n\t *\n\t * @deprecated 3.9.2 Use ActionScheduler_SystemInformation::active_source_path().\n\t *\n\t * @return string\n\t */\n\tpublic function active_source_path(): string {\n\t\t_deprecated_function( __METHOD__, '3.9.2', 'ActionScheduler_SystemInformation::active_source_path()' );\n\t\treturn ActionScheduler_SystemInformation::active_source_path();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_wcSystemStatus.php","ext":"php","size":5279,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_wcSystemStatus\n */\nclass ActionScheduler_wcSystemStatus {\n\n\t/**\n\t * The active data stores\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprotected $store;\n\n\t/**\n\t * Constructor method for ActionScheduler_wcSystemStatus.\n\t *\n\t * @param ActionScheduler_Store $store Active store object.\n\t *\n\t * @return void\n\t */\n\tpublic function __construct( $store ) {\n\t\t$this->store = $store;\n\t}\n\n\t/**\n\t * Display action data, including number of actions grouped by status and the oldest & newest action in each status.\n\t *\n\t * Helpful to identify issues, like a clogged queue.\n\t */\n\tpublic function render() {\n\t\t$action_counts     = $this->store->action_counts();\n\t\t$status_labels     = $this->store->get_status_labels();\n\t\t$oldest_and_newest = $this->get_oldest_and_newest( array_keys( $status_labels ) );\n\n\t\t$this->get_template( $status_labels, $action_counts, $oldest_and_newest );\n\t}\n\n\t/**\n\t * Get oldest and newest scheduled dates for a given set of statuses.\n\t *\n\t * @param array $status_keys Set of statuses to find oldest & newest action for.\n\t * @return array\n\t */\n\tprotected function get_oldest_and_newest( $status_keys ) {\n\n\t\t$oldest_and_newest = array();\n\n\t\tforeach ( $status_keys as $status ) {\n\t\t\t$oldest_and_newest[ $status ] = array(\n\t\t\t\t'oldest' => '&ndash;',\n\t\t\t\t'newest' => '&ndash;',\n\t\t\t);\n\n\t\t\tif ( 'in-progress' === $status ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$oldest_and_newest[ $status ]['oldest'] = $this->get_action_status_date( $status, 'oldest' );\n\t\t\t$oldest_and_newest[ $status ]['newest'] = $this->get_action_status_date( $status, 'newest' );\n\t\t}\n\n\t\treturn $oldest_and_newest;\n\t}\n\n\t/**\n\t * Get oldest or newest scheduled date for a given status.\n\t *\n\t * @param string $status Action status label/name string.\n\t * @param string $date_type Oldest or Newest.\n\t * @return DateTime\n\t */\n\tprotected function get_action_status_date( $status, $date_type = 'oldest' ) {\n\n\t\t$order = 'oldest' === $date_type ? 'ASC' : 'DESC';\n\n\t\t$action = $this->store->query_actions(\n\t\t\tarray(\n\t\t\t\t'status'   => $status,\n\t\t\t\t'per_page' => 1,\n\t\t\t\t'order'    => $order,\n\t\t\t)\n\t\t);\n\n\t\tif ( ! empty( $action ) ) {\n\t\t\t$date_object = $this->store->get_date( $action[0] );\n\t\t\t$action_date = $date_object->format( 'Y-m-d H:i:s O' );\n\t\t} else {\n\t\t\t$action_date = '&ndash;';\n\t\t}\n\n\t\treturn $action_date;\n\t}\n\n\t/**\n\t * Get oldest or newest scheduled date for a given status.\n\t *\n\t * @param array $status_labels Set of statuses to find oldest & newest action for.\n\t * @param array $action_counts Number of actions grouped by status.\n\t * @param array $oldest_and_newest Date of the oldest and newest action with each status.\n\t */\n\tprotected function get_template( $status_labels, $action_counts, $oldest_and_newest ) {\n\t\t$as_version   = ActionScheduler_Versions::instance()->latest_version();\n\t\t$as_datastore = get_class( ActionScheduler_Store::instance() );\n\t\t?>\n\n\t\t<table class=\"wc_status_table widefat\" cellspacing=\"0\">\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th colspan=\"5\" data-export-label=\"Action Scheduler\"><h2><?php esc_html_e( 'Action Scheduler', 'action-scheduler' ); ?><?php echo wc_help_tip( esc_html__( 'This section shows details of Action Scheduler.', 'action-scheduler' ) ); ?></h2></th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"2\" data-export-label=\"Version\"><?php esc_html_e( 'Version:', 'action-scheduler' ); ?></td>\n\t\t\t\t\t<td colspan=\"3\"><?php echo esc_html( $as_version ); ?></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td colspan=\"2\" data-export-label=\"Data store\"><?php esc_html_e( 'Data store:', 'action-scheduler' ); ?></td>\n\t\t\t\t\t<td colspan=\"3\"><?php echo esc_html( $as_datastore ); ?></td>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Action Status', 'action-scheduler' ); ?></strong></td>\n\t\t\t\t\t<td class=\"help\">&nbsp;</td>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Count', 'action-scheduler' ); ?></strong></td>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Oldest Scheduled Date', 'action-scheduler' ); ?></strong></td>\n\t\t\t\t\t<td><strong><?php esc_html_e( 'Newest Scheduled Date', 'action-scheduler' ); ?></strong></td>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<?php\n\t\t\t\tforeach ( $action_counts as $status => $count ) {\n\t\t\t\t\t// WC uses the 3rd column for export, so we need to display more data in that (hidden when viewed as part of the table) and add an empty 2nd column.\n\t\t\t\t\tprintf(\n\t\t\t\t\t\t'<tr><td>%1$s</td><td>&nbsp;</td><td>%2$s<span style=\"display: none;\">, Oldest: %3$s, Newest: %4$s</span></td><td>%3$s</td><td>%4$s</td></tr>',\n\t\t\t\t\t\tesc_html( $status_labels[ $status ] ),\n\t\t\t\t\t\tesc_html( number_format_i18n( $count ) ),\n\t\t\t\t\t\tesc_html( $oldest_and_newest[ $status ]['oldest'] ),\n\t\t\t\t\t\tesc_html( $oldest_and_newest[ $status ]['newest'] )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t</tbody>\n\t\t</table>\n\n\t\t<?php\n\t}\n\n\t/**\n\t * Is triggered when invoking inaccessible methods in an object context.\n\t *\n\t * @param string $name Name of method called.\n\t * @param array  $arguments Parameters to invoke the method with.\n\t *\n\t * @return mixed\n\t * @link https://php.net/manual/en/language.oop5.overloading.php#language.oop5.overloading.methods\n\t */\n\tpublic function __call( $name, $arguments ) {\n\t\tswitch ( $name ) {\n\t\t\tcase 'print':\n\t\t\t\t_deprecated_function( __CLASS__ . '::print()', '2.2.4', __CLASS__ . '::render()' );\n\t\t\t\treturn call_user_func_array( array( $this, 'render' ), $arguments );\n\t\t}\n\n\t\treturn null;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/ActionScheduler_WPCLI_QueueRunner.php","ext":"php","size":6361,"mtime":1757324689,"type":"text","content":"<?php\n\nuse Action_Scheduler\\WP_CLI\\ProgressBar;\n\n/**\n * WP CLI Queue runner.\n *\n * This class can only be called from within a WP CLI instance.\n */\nclass ActionScheduler_WPCLI_QueueRunner extends ActionScheduler_Abstract_QueueRunner {\n\n\t/**\n\t * Claimed actions.\n\t *\n\t * @var array\n\t */\n\tprotected $actions;\n\n\t/**\n\t * ActionScheduler_ActionClaim instance.\n\t *\n\t * @var ActionScheduler_ActionClaim\n\t */\n\tprotected $claim;\n\n\t/**\n\t * Progress bar instance.\n\t *\n\t * @var \\cli\\progress\\Bar\n\t */\n\tprotected $progress_bar;\n\n\t/**\n\t * ActionScheduler_WPCLI_QueueRunner constructor.\n\t *\n\t * @param ActionScheduler_Store|null             $store Store object.\n\t * @param ActionScheduler_FatalErrorMonitor|null $monitor Monitor object.\n\t * @param ActionScheduler_QueueCleaner|null      $cleaner Cleaner object.\n\t *\n\t * @throws Exception When this is not run within WP CLI.\n\t */\n\tpublic function __construct( ?ActionScheduler_Store $store = null, ?ActionScheduler_FatalErrorMonitor $monitor = null, ?ActionScheduler_QueueCleaner $cleaner = null ) {\n\t\tif ( ! ( defined( 'WP_CLI' ) && WP_CLI ) ) {\n\t\t\t/* translators: %s php class name */\n\t\t\tthrow new Exception( sprintf( __( 'The %s class can only be run within WP CLI.', 'action-scheduler' ), __CLASS__ ) );\n\t\t}\n\n\t\tparent::__construct( $store, $monitor, $cleaner );\n\t}\n\n\t/**\n\t * Set up the Queue before processing.\n\t *\n\t * @param int    $batch_size The batch size to process.\n\t * @param array  $hooks      The hooks being used to filter the actions claimed in this batch.\n\t * @param string $group      The group of actions to claim with this batch.\n\t * @param bool   $force      Whether to force running even with too many concurrent processes.\n\t *\n\t * @return int The number of actions that will be run.\n\t * @throws \\WP_CLI\\ExitException When there are too many concurrent batches.\n\t */\n\tpublic function setup( $batch_size, $hooks = array(), $group = '', $force = false ) {\n\t\t$this->run_cleanup();\n\t\t$this->add_hooks();\n\n\t\t// Check to make sure there aren't too many concurrent processes running.\n\t\tif ( $this->has_maximum_concurrent_batches() ) {\n\t\t\tif ( $force ) {\n\t\t\t\tWP_CLI::warning( __( 'There are too many concurrent batches, but the run is forced to continue.', 'action-scheduler' ) );\n\t\t\t} else {\n\t\t\t\tWP_CLI::error( __( 'There are too many concurrent batches.', 'action-scheduler' ) );\n\t\t\t}\n\t\t}\n\n\t\t// Stake a claim and store it.\n\t\t$this->claim = $this->store->stake_claim( $batch_size, null, $hooks, $group );\n\t\t$this->monitor->attach( $this->claim );\n\t\t$this->actions = $this->claim->get_actions();\n\n\t\treturn count( $this->actions );\n\t}\n\n\t/**\n\t * Add our hooks to the appropriate actions.\n\t */\n\tprotected function add_hooks() {\n\t\tadd_action( 'action_scheduler_before_execute', array( $this, 'before_execute' ) );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'after_execute' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'action_failed' ), 10, 2 );\n\t}\n\n\t/**\n\t * Set up the WP CLI progress bar.\n\t */\n\tprotected function setup_progress_bar() {\n\t\t$count              = count( $this->actions );\n\t\t$this->progress_bar = new ProgressBar(\n\t\t\t/* translators: %d: amount of actions */\n\t\t\tsprintf( _n( 'Running %d action', 'Running %d actions', $count, 'action-scheduler' ), $count ),\n\t\t\t$count\n\t\t);\n\t}\n\n\t/**\n\t * Process actions in the queue.\n\t *\n\t * @param string $context Optional runner context. Default 'WP CLI'.\n\t *\n\t * @return int The number of actions processed.\n\t */\n\tpublic function run( $context = 'WP CLI' ) {\n\t\tdo_action( 'action_scheduler_before_process_queue' );\n\t\t$this->setup_progress_bar();\n\t\tforeach ( $this->actions as $action_id ) {\n\t\t\t// Error if we lost the claim.\n\t\t\tif ( ! in_array( $action_id, $this->store->find_actions_by_claim_id( $this->claim->get_id() ), true ) ) {\n\t\t\t\tWP_CLI::warning( __( 'The claim has been lost. Aborting current batch.', 'action-scheduler' ) );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$this->process_action( $action_id, $context );\n\t\t\t$this->progress_bar->tick();\n\t\t}\n\n\t\t$completed = $this->progress_bar->current();\n\t\t$this->progress_bar->finish();\n\t\t$this->store->release_claim( $this->claim );\n\t\tdo_action( 'action_scheduler_after_process_queue' );\n\n\t\treturn $completed;\n\t}\n\n\t/**\n\t * Handle WP CLI message when the action is starting.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function before_execute( $action_id ) {\n\t\t/* translators: %s refers to the action ID */\n\t\tWP_CLI::log( sprintf( __( 'Started processing action %s', 'action-scheduler' ), $action_id ) );\n\t}\n\n\t/**\n\t * Handle WP CLI message when the action has completed.\n\t *\n\t * @param int                         $action_id ActionID.\n\t * @param null|ActionScheduler_Action $action The instance of the action. Default to null for backward compatibility.\n\t */\n\tpublic function after_execute( $action_id, $action = null ) {\n\t\t// backward compatibility.\n\t\tif ( null === $action ) {\n\t\t\t$action = $this->store->fetch_action( $action_id );\n\t\t}\n\t\t/* translators: 1: action ID 2: hook name */\n\t\tWP_CLI::log( sprintf( __( 'Completed processing action %1$s with hook: %2$s', 'action-scheduler' ), $action_id, $action->get_hook() ) );\n\t}\n\n\t/**\n\t * Handle WP CLI message when the action has failed.\n\t *\n\t * @param int       $action_id Action ID.\n\t * @param Exception $exception Exception.\n\t * @throws \\WP_CLI\\ExitException With failure message.\n\t */\n\tpublic function action_failed( $action_id, $exception ) {\n\t\tWP_CLI::error(\n\t\t\t/* translators: 1: action ID 2: exception message */\n\t\t\tsprintf( __( 'Error processing action %1$s: %2$s', 'action-scheduler' ), $action_id, $exception->getMessage() ),\n\t\t\tfalse\n\t\t);\n\t}\n\n\t/**\n\t * Sleep and help avoid hitting memory limit\n\t *\n\t * @param int $sleep_time Amount of seconds to sleep.\n\t * @deprecated 3.0.0\n\t */\n\tprotected function stop_the_insanity( $sleep_time = 0 ) {\n\t\t_deprecated_function( 'ActionScheduler_WPCLI_QueueRunner::stop_the_insanity', '3.0.0', 'ActionScheduler_DataController::free_memory' );\n\n\t\tActionScheduler_DataController::free_memory();\n\t}\n\n\t/**\n\t * Maybe trigger the stop_the_insanity() method to free up memory.\n\t */\n\tprotected function maybe_stop_the_insanity() {\n\t\t// The value returned by progress_bar->current() might be padded. Remove padding, and convert to int.\n\t\t$current_iteration = intval( trim( $this->progress_bar->current() ) );\n\t\tif ( 0 === $current_iteration % 50 ) {\n\t\t\t$this->stop_the_insanity();\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Migration_Command.php","ext":"php","size":5048,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\WP_CLI;\n\nuse Action_Scheduler\\Migration\\Config;\nuse Action_Scheduler\\Migration\\Runner;\nuse Action_Scheduler\\Migration\\Scheduler;\nuse Action_Scheduler\\Migration\\Controller;\nuse WP_CLI;\nuse WP_CLI_Command;\n\n/**\n * Class Migration_Command\n *\n * @package Action_Scheduler\\WP_CLI\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass Migration_Command extends WP_CLI_Command {\n\n\t/**\n\t * Number of actions migrated.\n\t *\n\t * @var int\n\t */\n\tprivate $total_processed = 0;\n\n\t/**\n\t * Register the command with WP-CLI\n\t */\n\tpublic function register() {\n\t\tif ( ! defined( 'WP_CLI' ) || ! WP_CLI ) {\n\t\t\treturn;\n\t\t}\n\n\t\tWP_CLI::add_command(\n\t\t\t'action-scheduler migrate',\n\t\t\tarray( $this, 'migrate' ),\n\t\t\tarray(\n\t\t\t\t'shortdesc' => 'Migrates actions to the DB tables store',\n\t\t\t\t'synopsis'  => array(\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'assoc',\n\t\t\t\t\t\t'name'        => 'batch-size',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'default'     => 100,\n\t\t\t\t\t\t'description' => 'The number of actions to process in each batch',\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'assoc',\n\t\t\t\t\t\t'name'        => 'free-memory-on',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'default'     => 50,\n\t\t\t\t\t\t'description' => 'The number of actions to process between freeing memory. 0 disables freeing memory',\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'assoc',\n\t\t\t\t\t\t'name'        => 'pause',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'default'     => 0,\n\t\t\t\t\t\t'description' => 'The number of seconds to pause when freeing memory',\n\t\t\t\t\t),\n\t\t\t\t\tarray(\n\t\t\t\t\t\t'type'        => 'flag',\n\t\t\t\t\t\t'name'        => 'dry-run',\n\t\t\t\t\t\t'optional'    => true,\n\t\t\t\t\t\t'description' => 'Reports on the actions that would have been migrated, but does not change any data',\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Process the data migration.\n\t *\n\t * @param array $positional_args Required for WP CLI. Not used in migration.\n\t * @param array $assoc_args Optional arguments.\n\t *\n\t * @return void\n\t */\n\tpublic function migrate( $positional_args, $assoc_args ) {\n\t\t$this->init_logging();\n\n\t\t$config = $this->get_migration_config( $assoc_args );\n\t\t$runner = new Runner( $config );\n\t\t$runner->init_destination();\n\n\t\t$batch_size = isset( $assoc_args['batch-size'] ) ? (int) $assoc_args['batch-size'] : 100;\n\t\t$free_on    = isset( $assoc_args['free-memory-on'] ) ? (int) $assoc_args['free-memory-on'] : 50;\n\t\t$sleep      = isset( $assoc_args['pause'] ) ? (int) $assoc_args['pause'] : 0;\n\t\t\\ActionScheduler_DataController::set_free_ticks( $free_on );\n\t\t\\ActionScheduler_DataController::set_sleep_time( $sleep );\n\n\t\tdo {\n\t\t\t$actions_processed      = $runner->run( $batch_size );\n\t\t\t$this->total_processed += $actions_processed;\n\t\t} while ( $actions_processed > 0 );\n\n\t\tif ( ! $config->get_dry_run() ) {\n\t\t\t// let the scheduler know that there's nothing left to do.\n\t\t\t$scheduler = new Scheduler();\n\t\t\t$scheduler->mark_complete();\n\t\t}\n\n\t\tWP_CLI::success( sprintf( '%s complete. %d actions processed.', $config->get_dry_run() ? 'Dry run' : 'Migration', $this->total_processed ) );\n\t}\n\n\t/**\n\t * Build the config object used to create the Runner\n\t *\n\t * @param array $args Optional arguments.\n\t *\n\t * @return ActionScheduler\\Migration\\Config\n\t */\n\tprivate function get_migration_config( $args ) {\n\t\t$args = wp_parse_args(\n\t\t\t$args,\n\t\t\tarray(\n\t\t\t\t'dry-run' => false,\n\t\t\t)\n\t\t);\n\n\t\t$config = Controller::instance()->get_migration_config_object();\n\t\t$config->set_dry_run( ! empty( $args['dry-run'] ) );\n\n\t\treturn $config;\n\t}\n\n\t/**\n\t * Hook command line logging into migration actions.\n\t */\n\tprivate function init_logging() {\n\t\tadd_action(\n\t\t\t'action_scheduler/migrate_action_dry_run',\n\t\t\tfunction ( $action_id ) {\n\t\t\t\tWP_CLI::debug( sprintf( 'Dry-run: migrated action %d', $action_id ) );\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler/no_action_to_migrate',\n\t\t\tfunction ( $action_id ) {\n\t\t\t\tWP_CLI::debug( sprintf( 'No action found to migrate for ID %d', $action_id ) );\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler/migrate_action_failed',\n\t\t\tfunction ( $action_id ) {\n\t\t\t\tWP_CLI::warning( sprintf( 'Failed migrating action with ID %d', $action_id ) );\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler/migrate_action_incomplete',\n\t\t\tfunction ( $source_id, $destination_id ) {\n\t\t\t\tWP_CLI::warning( sprintf( 'Unable to remove source action with ID %d after migrating to new ID %d', $source_id, $destination_id ) );\n\t\t\t},\n\t\t\t10,\n\t\t\t2\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler/migrated_action',\n\t\t\tfunction ( $source_id, $destination_id ) {\n\t\t\t\tWP_CLI::debug( sprintf( 'Migrated source action with ID %d to new store with ID %d', $source_id, $destination_id ) );\n\t\t\t},\n\t\t\t10,\n\t\t\t2\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler/migration_batch_starting',\n\t\t\tfunction ( $batch ) {\n\t\t\t\tWP_CLI::debug( 'Beginning migration of batch: ' . print_r( $batch, true ) ); // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_print_r\n\t\t\t}\n\t\t);\n\n\t\tadd_action(\n\t\t\t'action_scheduler/migration_batch_complete',\n\t\t\tfunction ( $batch ) {\n\t\t\t\tWP_CLI::log( sprintf( 'Completed migration of %d actions', count( $batch ) ) );\n\t\t\t}\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/Next_Command.php","ext":"php","size":1859,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n// phpcs:disable WordPress.Security.EscapeOutput.OutputNotEscaped -- Escaping output is not necessary in WP CLI.\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n/**\n * WP-CLI command: action-scheduler action next\n */\nclass Next_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t/**\n\t * Execute command.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$hook          = $this->args[0];\n\t\t$group         = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$callback_args = get_flag_value( $this->assoc_args, 'args', null );\n\t\t$raw           = (bool) get_flag_value( $this->assoc_args, 'raw', false );\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\tif ( $raw ) {\n\t\t\t\\WP_CLI::line( as_next_scheduled_action( $hook, $callback_args, $group ) );\n\t\t\treturn;\n\t\t}\n\n\t\t$params = array(\n\t\t\t'hook'    => $hook,\n\t\t\t'orderby' => 'date',\n\t\t\t'order'   => 'ASC',\n\t\t\t'group'   => $group,\n\t\t);\n\n\t\tif ( is_array( $callback_args ) ) {\n\t\t\t$params['args'] = $callback_args;\n\t\t}\n\n\t\t$params['status'] = \\ActionScheduler_Store::STATUS_RUNNING;\n\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t\\WP_CLI::debug( 'ActionScheduler()::store()->query_action( ' . var_export( $params, true ) . ' )' );\n\n\t\t$store     = \\ActionScheduler::store();\n\t\t$action_id = $store->query_action( $params );\n\n\t\tif ( $action_id ) {\n\t\t\techo $action_id;\n\t\t\treturn;\n\t\t}\n\n\t\t$params['status'] = \\ActionScheduler_Store::STATUS_PENDING;\n\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t\\WP_CLI::debug( 'ActionScheduler()::store()->query_action( ' . var_export( $params, true ) . ' )' );\n\n\t\t$action_id = $store->query_action( $params );\n\n\t\tif ( $action_id ) {\n\t\t\techo $action_id;\n\t\t\treturn;\n\t\t}\n\n\t\t\\WP_CLI::warning( 'No matching next action.' );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/Delete_Command.php","ext":"php","size":2661,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n/**\n * WP-CLI command: action-scheduler action delete\n */\nclass Delete_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t/**\n\t * Array of action IDs to delete.\n\t *\n\t * @var int[]\n\t */\n\tprotected $action_ids = array();\n\n\t/**\n\t * Number of deleted, failed, and total actions deleted.\n\t *\n\t * @var array<string, int>\n\t */\n\tprotected $action_counts = array(\n\t\t'deleted' => 0,\n\t\t'failed'  => 0,\n\t\t'total'   => 0,\n\t);\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string[]              $args       Positional arguments.\n\t * @param array<string, string> $assoc_args Keyed arguments.\n\t */\n\tpublic function __construct( array $args, array $assoc_args ) {\n\t\tparent::__construct( $args, $assoc_args );\n\n\t\t$this->action_ids             = array_map( 'absint', $args );\n\t\t$this->action_counts['total'] = count( $this->action_ids );\n\n\t\tadd_action( 'action_scheduler_deleted_action', array( $this, 'on_action_deleted' ) );\n\t}\n\n\t/**\n\t * Execute.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$store = \\ActionScheduler::store();\n\n\t\t$progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d: number of actions to be deleted */\n\t\t\t\t_n( 'Deleting %d action', 'Deleting %d actions', $this->action_counts['total'], 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['total'] )\n\t\t\t),\n\t\t\t$this->action_counts['total']\n\t\t);\n\n\t\tforeach ( $this->action_ids as $action_id ) {\n\t\t\ttry {\n\t\t\t\t$store->delete_action( $action_id );\n\t\t\t} catch ( \\Exception $e ) {\n\t\t\t\t$this->action_counts['failed']++;\n\t\t\t\t\\WP_CLI::warning( $e->getMessage() );\n\t\t\t}\n\n\t\t\t$progress_bar->tick();\n\t\t}\n\n\t\t$progress_bar->finish();\n\n\t\t/* translators: %1$d: number of actions deleted */\n\t\t$format = _n( 'Deleted %1$d action', 'Deleted %1$d actions', $this->action_counts['deleted'], 'action-scheduler' ) . ', ';\n\t\t/* translators: %2$d: number of actions deletions failed */\n\t\t$format .= _n( '%2$d failure.', '%2$d failures.', $this->action_counts['failed'], 'action-scheduler' );\n\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t$format,\n\t\t\t\tnumber_format_i18n( $this->action_counts['deleted'] ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['failed'] )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Action: action_scheduler_deleted_action\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t */\n\tpublic function on_action_deleted( $action_id ) {\n\t\tif ( 'action_scheduler_deleted_action' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['deleted']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d was deleted.', $action_id ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/List_Command.php","ext":"php","size":3127,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n// phpcs:disable WordPress.Security.EscapeOutput.OutputNotEscaped -- Escaping output is not necessary in WP CLI.\n\n/**\n * WP-CLI command: action-scheduler action list\n */\nclass List_Command extends \\ActionScheduler_WPCLI_Command {\n\n\tconst PARAMETERS = array(\n\t\t'hook',\n\t\t'args',\n\t\t'date',\n\t\t'date_compare',\n\t\t'modified',\n\t\t'modified_compare',\n\t\t'group',\n\t\t'status',\n\t\t'claimed',\n\t\t'per_page',\n\t\t'offset',\n\t\t'orderby',\n\t\t'order',\n\t);\n\n\t/**\n\t * Execute command.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$store  = \\ActionScheduler::store();\n\t\t$logger = \\ActionScheduler::logger();\n\n\t\t$fields = array(\n\t\t\t'id',\n\t\t\t'hook',\n\t\t\t'status',\n\t\t\t'group',\n\t\t\t'recurring',\n\t\t\t'scheduled_date',\n\t\t);\n\n\t\t$this->process_csv_arguments_to_arrays();\n\n\t\tif ( ! empty( $this->assoc_args['fields'] ) ) {\n\t\t\t$fields = $this->assoc_args['fields'];\n\t\t}\n\n\t\t$formatter  = new \\WP_CLI\\Formatter( $this->assoc_args, $fields );\n\t\t$query_args = $this->assoc_args;\n\n\t\t/**\n\t\t * The `claimed` parameter expects a boolean or integer:\n\t\t * check for string 'false', and set explicitly to `false` boolean.\n\t\t */\n\t\tif ( array_key_exists( 'claimed', $query_args ) && 'false' === strtolower( $query_args['claimed'] ) ) {\n\t\t\t$query_args['claimed'] = false;\n\t\t}\n\n\t\t$return_format = 'OBJECT';\n\n\t\tif ( in_array( $formatter->format, array( 'ids', 'count' ), true ) ) {\n\t\t\t$return_format = '\\'ids\\'';\n\t\t}\n\n\t\t// phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t$params = var_export( $query_args, true );\n\n\t\tif ( empty( $query_args ) ) {\n\t\t\t$params = 'array()';\n\t\t}\n\n\t\t\\WP_CLI::debug(\n\t\t\tsprintf(\n\t\t\t\t'as_get_scheduled_actions( %s, %s )',\n\t\t\t\t$params,\n\t\t\t\t$return_format\n\t\t\t)\n\t\t);\n\n\t\tif ( ! empty( $query_args['args'] ) ) {\n\t\t\t$query_args['args'] = json_decode( $query_args['args'], true );\n\t\t}\n\n\t\tswitch ( $formatter->format ) {\n\n\t\t\tcase 'ids':\n\t\t\t\t$actions = as_get_scheduled_actions( $query_args, 'ids' );\n\t\t\t\techo implode( ' ', $actions );\n\t\t\t\tbreak;\n\n\t\t\tcase 'count':\n\t\t\t\t$actions = as_get_scheduled_actions( $query_args, 'ids' );\n\t\t\t\t$formatter->display_items( $actions );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t$actions = as_get_scheduled_actions( $query_args, OBJECT );\n\n\t\t\t\t$actions_arr = array();\n\n\t\t\t\tforeach ( $actions as $action_id => $action ) {\n\t\t\t\t\t$action_arr = array(\n\t\t\t\t\t\t'id'             => $action_id,\n\t\t\t\t\t\t'hook'           => $action->get_hook(),\n\t\t\t\t\t\t'status'         => $store->get_status( $action_id ),\n\t\t\t\t\t\t'args'           => $action->get_args(),\n\t\t\t\t\t\t'group'          => $action->get_group(),\n\t\t\t\t\t\t'recurring'      => $action->get_schedule()->is_recurring() ? 'yes' : 'no',\n\t\t\t\t\t\t'scheduled_date' => $this->get_schedule_display_string( $action->get_schedule() ),\n\t\t\t\t\t\t'log_entries'    => array(),\n\t\t\t\t\t);\n\n\t\t\t\t\tforeach ( $logger->get_logs( $action_id ) as $log_entry ) {\n\t\t\t\t\t\t$action_arr['log_entries'][] = array(\n\t\t\t\t\t\t\t'date'    => $log_entry->get_date()->format( static::DATE_FORMAT ),\n\t\t\t\t\t\t\t'message' => $log_entry->get_message(),\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\t$actions_arr[] = $action_arr;\n\t\t\t\t}\n\n\t\t\t\t$formatter->display_items( $actions_arr );\n\t\t\t\tbreak;\n\n\t\t}\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/Generate_Command.php","ext":"php","size":3551,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n/**\n * WP-CLI command: action-scheduler action generate\n */\nclass Generate_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t/**\n\t * Execute command.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$hook           = $this->args[0];\n\t\t$schedule_start = $this->args[1];\n\t\t$callback_args  = get_flag_value( $this->assoc_args, 'args', array() );\n\t\t$group          = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$interval       = (int) get_flag_value( $this->assoc_args, 'interval', 0 ); // avoid absint() to support negative intervals\n\t\t$count          = absint( get_flag_value( $this->assoc_args, 'count', 1 ) );\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\t$schedule_start = as_get_datetime_object( $schedule_start );\n\n\t\t$function_args = array(\n\t\t\t'start'         => absint( $schedule_start->format( 'U' ) ),\n\t\t\t'interval'      => $interval,\n\t\t\t'count'         => $count,\n\t\t\t'hook'          => $hook,\n\t\t\t'callback_args' => $callback_args,\n\t\t\t'group'         => $group,\n\t\t);\n\n\t\t$function_args = array_values( $function_args );\n\n\t\ttry {\n\t\t\t$actions_added = $this->generate( ...$function_args );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$num_actions_added = count( (array) $actions_added );\n\n\t\t$this->print_success( $num_actions_added, 'single' );\n\t}\n\n\t/**\n\t * Schedule multiple single actions.\n\t *\n\t * @param int    $schedule_start Starting timestamp of first action.\n\t * @param int    $interval How long to wait between runs.\n\t * @param int    $count Limit number of actions to schedule.\n\t * @param string $hook The hook to trigger.\n\t * @param array  $args Arguments to pass when the hook triggers.\n\t * @param string $group The group to assign this job to.\n\t * @return int[] IDs of actions added.\n\t */\n\tprotected function generate( $schedule_start, $interval, $count, $hook, array $args = array(), $group = '' ) {\n\t\t$actions_added = array();\n\n\t\t$progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d is number of actions to create */\n\t\t\t\t_n( 'Creating %d action', 'Creating %d actions', $count, 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $count )\n\t\t\t),\n\t\t\t$count\n\t\t);\n\n\t\tfor ( $i = 0; $i < $count; $i++ ) {\n\t\t\t$actions_added[] = as_schedule_single_action( $schedule_start + ( $i * $interval ), $hook, $args, $group );\n\t\t\t$progress_bar->tick();\n\t\t}\n\n\t\t$progress_bar->finish();\n\n\t\treturn $actions_added;\n\t}\n\n\t/**\n\t * Print a success message with the action ID.\n\t *\n\t * @param int    $actions_added Number of actions generated.\n\t * @param string $action_type   Type of actions scheduled.\n\t * @return void\n\t */\n\tprotected function print_success( $actions_added, $action_type ) {\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %1$d refers to the total number of tasks added, %2$s is the action type */\n\t\t\t\t_n( '%1$d %2$s action scheduled.', '%1$d %2$s actions scheduled.', $actions_added, 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $actions_added ),\n\t\t\t\t$action_type\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param \\Exception $e The error object.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t * @return void\n\t */\n\tprotected function print_error( \\Exception $e ) {\n\t\t\\WP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s refers to the exception error message. */\n\t\t\t\t__( 'There was an error creating the scheduled action: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/Create_Command.php","ext":"php","size":4458,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n/**\n * WP-CLI command: action-scheduler action create\n */\nclass Create_Command extends \\ActionScheduler_WPCLI_Command {\n\n\tconst ASYNC_OPTS = array( 'async', 0 );\n\n\t/**\n\t * Execute command.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$hook           = $this->args[0];\n\t\t$schedule_start = $this->args[1];\n\t\t$callback_args  = get_flag_value( $this->assoc_args, 'args', array() );\n\t\t$group          = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$interval       = absint( get_flag_value( $this->assoc_args, 'interval', 0 ) );\n\t\t$cron           = get_flag_value( $this->assoc_args, 'cron', '' );\n\t\t$unique         = get_flag_value( $this->assoc_args, 'unique', false );\n\t\t$priority       = absint( get_flag_value( $this->assoc_args, 'priority', 10 ) );\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\t$function_args = array(\n\t\t\t'start'         => $schedule_start,\n\t\t\t'cron'          => $cron,\n\t\t\t'interval'      => $interval,\n\t\t\t'hook'          => $hook,\n\t\t\t'callback_args' => $callback_args,\n\t\t\t'group'         => $group,\n\t\t\t'unique'        => $unique,\n\t\t\t'priority'      => $priority,\n\t\t);\n\n\t\ttry {\n\t\t\t// Generate schedule start if appropriate.\n\t\t\tif ( ! in_array( $schedule_start, static::ASYNC_OPTS, true ) ) {\n\t\t\t\t$schedule_start         = as_get_datetime_object( $schedule_start );\n\t\t\t\t$function_args['start'] = $schedule_start->format( 'U' );\n\t\t\t}\n\t\t} catch ( \\Exception $e ) {\n\t\t\t\\WP_CLI::error( $e->getMessage() );\n\t\t}\n\n\t\t// Default to creating single action.\n\t\t$action_type = 'single';\n\t\t$function    = 'as_schedule_single_action';\n\n\t\tif ( ! empty( $interval ) ) { // Creating recurring action.\n\t\t\t$action_type = 'recurring';\n\t\t\t$function    = 'as_schedule_recurring_action';\n\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'start', 'interval', 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t} elseif ( ! empty( $cron ) ) { // Creating cron action.\n\t\t\t$action_type = 'cron';\n\t\t\t$function    = 'as_schedule_cron_action';\n\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'start', 'cron', 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t} elseif ( in_array( $function_args['start'], static::ASYNC_OPTS, true ) ) { // Enqueue async action.\n\t\t\t$action_type = 'async';\n\t\t\t$function    = 'as_enqueue_async_action';\n\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t} else { // Enqueue single action.\n\t\t\t$function_args = array_filter(\n\t\t\t\t$function_args,\n\t\t\t\tstatic function( $key ) {\n\t\t\t\t\treturn in_array( $key, array( 'start', 'hook', 'callback_args', 'group', 'unique', 'priority' ), true );\n\t\t\t\t},\n\t\t\t\tARRAY_FILTER_USE_KEY\n\t\t\t);\n\t\t}\n\n\t\t$function_args = array_values( $function_args );\n\n\t\ttry {\n\t\t\t$action_id = call_user_func_array( $function, $function_args );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\tif ( 0 === $action_id ) {\n\t\t\t$e = new \\Exception( __( 'Unable to create a scheduled action.', 'action-scheduler' ) );\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$this->print_success( $action_id, $action_type );\n\t}\n\n\t/**\n\t * Print a success message with the action ID.\n\t *\n\t * @param int    $action_id   Created action ID.\n\t * @param string $action_type Type of action.\n\t *\n\t * @return void\n\t */\n\tprotected function print_success( $action_id, $action_type ) {\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %1$s: type of action, %2$d: ID of the created action */\n\t\t\t\t__( '%1$s action (%2$d) scheduled.', 'action-scheduler' ),\n\t\t\t\tucfirst( $action_type ),\n\t\t\t\t$action_id\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param \\Exception $e The error object.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t * @return void\n\t */\n\tprotected function print_error( \\Exception $e ) {\n\t\t\\WP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s refers to the exception error message. */\n\t\t\t\t__( 'There was an error creating the scheduled action: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/Run_Command.php","ext":"php","size":4721,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n/**\n * WP-CLI command: action-scheduler action run\n */\nclass Run_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t/**\n\t * Array of action IDs to execute.\n\t *\n\t * @var int[]\n\t */\n\tprotected $action_ids = array();\n\n\t/**\n\t * Number of executed, failed, ignored, invalid, and total actions.\n\t *\n\t * @var array<string, int>\n\t */\n\tprotected $action_counts = array(\n\t\t'executed' => 0,\n\t\t'failed'   => 0,\n\t\t'ignored'  => 0,\n\t\t'invalid'  => 0,\n\t\t'total'    => 0,\n\t);\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string[]              $args       Positional arguments.\n\t * @param array<string, string> $assoc_args Keyed arguments.\n\t */\n\tpublic function __construct( array $args, array $assoc_args ) {\n\t\tparent::__construct( $args, $assoc_args );\n\n\t\t$this->action_ids             = array_map( 'absint', $args );\n\t\t$this->action_counts['total'] = count( $this->action_ids );\n\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'on_action_ignored' ) );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'on_action_executed' ) );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'on_action_failed' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_validation', array( $this, 'on_action_invalid' ), 10, 2 );\n\t}\n\n\t/**\n\t * Execute.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$runner = \\ActionScheduler::runner();\n\n\t\t$progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d: number of actions */\n\t\t\t\t_n( 'Executing %d action', 'Executing %d actions', $this->action_counts['total'], 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['total'] )\n\t\t\t),\n\t\t\t$this->action_counts['total']\n\t\t);\n\n\t\tforeach ( $this->action_ids as $action_id ) {\n\t\t\t$runner->process_action( $action_id, 'Action Scheduler CLI' );\n\t\t\t$progress_bar->tick();\n\t\t}\n\n\t\t$progress_bar->finish();\n\n\t\tforeach ( array(\n\t\t\t'ignored',\n\t\t\t'invalid',\n\t\t\t'failed',\n\t\t) as $type ) {\n\t\t\t$count = $this->action_counts[ $type ];\n\n\t\t\tif ( empty( $count ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * translators:\n\t\t\t * %1$d: count of actions evaluated.\n\t\t\t * %2$s: type of action evaluated.\n\t\t\t */\n\t\t\t$format = _n( '%1$d action %2$s.', '%1$d actions %2$s.', $count, 'action-scheduler' );\n\n\t\t\t\\WP_CLI::warning(\n\t\t\t\tsprintf(\n\t\t\t\t\t$format,\n\t\t\t\t\tnumber_format_i18n( $count ),\n\t\t\t\t\t$type\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\t\\WP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d: number of executed actions */\n\t\t\t\t_n( 'Executed %d action.', 'Executed %d actions.', $this->action_counts['executed'], 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $this->action_counts['executed'] )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Action: action_scheduler_execution_ignored\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t */\n\tpublic function on_action_ignored( $action_id ) {\n\t\tif ( 'action_scheduler_execution_ignored' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['ignored']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d was ignored.', $action_id ) );\n\t}\n\n\t/**\n\t * Action: action_scheduler_after_execute\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t */\n\tpublic function on_action_executed( $action_id ) {\n\t\tif ( 'action_scheduler_after_execute' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['executed']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d was executed.', $action_id ) );\n\t}\n\n\t/**\n\t * Action: action_scheduler_failed_execution\n\t *\n\t * @param int        $action_id Action ID.\n\t * @param \\Exception $e         Exception.\n\t * @return void\n\t */\n\tpublic function on_action_failed( $action_id, \\Exception $e ) {\n\t\tif ( 'action_scheduler_failed_execution' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['failed']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d failed execution: %s', $action_id, $e->getMessage() ) );\n\t}\n\n\t/**\n\t * Action: action_scheduler_failed_validation\n\t *\n\t * @param int        $action_id Action ID.\n\t * @param \\Exception $e         Exception.\n\t * @return void\n\t */\n\tpublic function on_action_invalid( $action_id, \\Exception $e ) {\n\t\tif ( 'action_scheduler_failed_validation' !== current_action() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_id = absint( $action_id );\n\n\t\tif ( ! in_array( $action_id, $this->action_ids, true ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->action_counts['invalid']++;\n\t\t\\WP_CLI::debug( sprintf( 'Action %d failed validation: %s', $action_id, $e->getMessage() ) );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/Cancel_Command.php","ext":"php","size":3336,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n/**\n * WP-CLI command: action-scheduler action cancel\n */\nclass Cancel_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t/**\n\t * Execute command.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$hook          = '';\n\t\t$group         = get_flag_value( $this->assoc_args, 'group', '' );\n\t\t$callback_args = get_flag_value( $this->assoc_args, 'args', null );\n\t\t$all           = get_flag_value( $this->assoc_args, 'all', false );\n\n\t\tif ( ! empty( $this->args[0] ) ) {\n\t\t\t$hook = $this->args[0];\n\t\t}\n\n\t\tif ( ! empty( $callback_args ) ) {\n\t\t\t$callback_args = json_decode( $callback_args, true );\n\t\t}\n\n\t\tif ( $all ) {\n\t\t\t$this->cancel_all( $hook, $callback_args, $group );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->cancel_single( $hook, $callback_args, $group );\n\t}\n\n\t/**\n\t * Cancel single action.\n\t *\n\t * @param string $hook The hook that the job will trigger.\n\t * @param array  $callback_args Args that would have been passed to the job.\n\t * @param string $group The group the job is assigned to.\n\t * @return void\n\t */\n\tprotected function cancel_single( $hook, $callback_args, $group ) {\n\t\tif ( empty( $hook ) ) {\n\t\t\t\\WP_CLI::error( __( 'Please specify hook of action to cancel.', 'action-scheduler' ) );\n\t\t}\n\n\t\ttry {\n\t\t\t$result = as_unschedule_action( $hook, $callback_args, $group );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e, false );\n\t\t}\n\n\t\tif ( null === $result ) {\n\t\t\t$e = new \\Exception( __( 'Unable to cancel scheduled action: check the logs.', 'action-scheduler' ) );\n\t\t\t$this->print_error( $e, false );\n\t\t}\n\n\t\t$this->print_success( false );\n\t}\n\n\t/**\n\t * Cancel all actions.\n\t *\n\t * @param string $hook The hook that the job will trigger.\n\t * @param array  $callback_args Args that would have been passed to the job.\n\t * @param string $group The group the job is assigned to.\n\t * @return void\n\t */\n\tprotected function cancel_all( $hook, $callback_args, $group ) {\n\t\tif ( empty( $hook ) && empty( $group ) ) {\n\t\t\t\\WP_CLI::error( __( 'Please specify hook and/or group of actions to cancel.', 'action-scheduler' ) );\n\t\t}\n\n\t\ttry {\n\t\t\t$result = as_unschedule_all_actions( $hook, $callback_args, $group );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$this->print_error( $e, $multiple );\n\t\t}\n\n\t\t/**\n\t\t * Because as_unschedule_all_actions() does not provide a result,\n\t\t * neither confirm or deny actions cancelled.\n\t\t */\n\t\t\\WP_CLI::success( __( 'Request to cancel scheduled actions completed.', 'action-scheduler' ) );\n\t}\n\n\t/**\n\t * Print a success message.\n\t *\n\t * @return void\n\t */\n\tprotected function print_success() {\n\t\t\\WP_CLI::success( __( 'Scheduled action cancelled.', 'action-scheduler' ) );\n\t}\n\n\t/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param \\Exception $e The error object.\n\t * @param bool       $multiple Boolean if multiple actions.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t * @return void\n\t */\n\tprotected function print_error( \\Exception $e, $multiple ) {\n\t\t\\WP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %1$s: singular or plural %2$s: refers to the exception error message. */\n\t\t\t\t__( 'There was an error cancelling the %1$s: %2$s', 'action-scheduler' ),\n\t\t\t\t$multiple ? __( 'scheduled actions', 'action-scheduler' ) : __( 'scheduled action', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action/Get_Command.php","ext":"php","size":2208,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI\\Action;\n\n/**\n * WP-CLI command: action-scheduler action get\n */\nclass Get_Command extends \\ActionScheduler_WPCLI_Command {\n\n\t/**\n\t * Execute command.\n\t *\n\t * @return void\n\t */\n\tpublic function execute() {\n\t\t$action_id = $this->args[0];\n\t\t$store     = \\ActionScheduler::store();\n\t\t$logger    = \\ActionScheduler::logger();\n\t\t$action    = $store->fetch_action( $action_id );\n\n\t\tif ( is_a( $action, ActionScheduler_NullAction::class ) ) {\n\t\t\t/* translators: %d is action ID. */\n\t\t\t\\WP_CLI::error( sprintf( esc_html__( 'Unable to retrieve action %d.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\n\t\t$only_logs   = ! empty( $this->assoc_args['field'] ) && 'log_entries' === $this->assoc_args['field'];\n\t\t$only_logs   = $only_logs || ( ! empty( $this->assoc_args['fields'] ) && 'log_entries' === $this->assoc_args['fields'] );\n\t\t$log_entries = array();\n\n\t\tforeach ( $logger->get_logs( $action_id ) as $log_entry ) {\n\t\t\t$log_entries[] = array(\n\t\t\t\t'date'    => $log_entry->get_date()->format( static::DATE_FORMAT ),\n\t\t\t\t'message' => $log_entry->get_message(),\n\t\t\t);\n\t\t}\n\n\t\tif ( $only_logs ) {\n\t\t\t$args = array(\n\t\t\t\t'format' => \\WP_CLI\\Utils\\get_flag_value( $this->assoc_args, 'format', 'table' ),\n\t\t\t);\n\n\t\t\t$formatter = new \\WP_CLI\\Formatter( $args, array( 'date', 'message' ) );\n\t\t\t$formatter->display_items( $log_entries );\n\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\t$status = $store->get_status( $action_id );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t\\WP_CLI::error( $e->getMessage() );\n\t\t}\n\n\t\t$action_arr = array(\n\t\t\t'id'             => $this->args[0],\n\t\t\t'hook'           => $action->get_hook(),\n\t\t\t'status'         => $status,\n\t\t\t'args'           => $action->get_args(),\n\t\t\t'group'          => $action->get_group(),\n\t\t\t'recurring'      => $action->get_schedule()->is_recurring() ? 'yes' : 'no',\n\t\t\t'scheduled_date' => $this->get_schedule_display_string( $action->get_schedule() ),\n\t\t\t'log_entries'    => $log_entries,\n\t\t);\n\n\t\t$fields = array_keys( $action_arr );\n\n\t\tif ( ! empty( $this->assoc_args['fields'] ) ) {\n\t\t\t$fields = explode( ',', $this->assoc_args['fields'] );\n\t\t}\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $this->assoc_args, $fields );\n\t\t$formatter->display_item( $action_arr );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/Action_Command.php","ext":"php","size":8340,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI;\n\n/**\n * Action command for Action Scheduler.\n */\nclass Action_Command extends \\WP_CLI_Command {\n\n\t/**\n\t * Cancel the next occurrence or all occurrences of a scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [<hook>]\n\t * : Name of the action hook.\n\t *\n\t * [--group=<group>]\n\t * : The group the job is assigned to.\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments assigned to the job.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--all]\n\t * : Cancel all occurrences of a scheduled action.\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t */\n\tpublic function cancel( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/Cancel_Command.php';\n\t\t$command = new Action\\Cancel_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t/**\n\t * Creates a new scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <hook>\n\t * : Name of the action hook.\n\t *\n\t * <start>\n\t * : A unix timestamp representing the date you want the action to start. Also 'async' or 'now' to enqueue an async action.\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments to pass to callbacks when the hook triggers.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--cron=<cron>]\n\t * : A cron-like schedule string (https://crontab.guru/).\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * [--group=<group>]\n\t * : The group to assign this job to.\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * [--interval=<interval>]\n\t * : Number of seconds to wait between runs.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     wp action-scheduler action create hook_async async\n\t *     wp action-scheduler action create hook_single 1627147598\n\t *     wp action-scheduler action create hook_recurring 1627148188 --interval=5\n\t *     wp action-scheduler action create hook_cron 1627147655 --cron='5 4 * * *'\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t */\n\tpublic function create( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/Create_Command.php';\n\t\t$command = new Action\\Create_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t/**\n\t * Delete existing scheduled action(s).\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>...\n\t * : One or more IDs of actions to delete.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Delete the action with id 100\n\t *     $ wp action-scheduler action delete 100\n\t *\n\t *     # Delete the actions with ids 100 and 200\n\t *     $ wp action-scheduler action delete 100 200\n\t *\n\t *     # Delete the first five pending actions in 'action-scheduler' group\n\t *     $ wp action-scheduler action delete $( wp action-scheduler action list --status=pending --group=action-scheduler --format=ids )\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t */\n\tpublic function delete( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/Delete_Command.php';\n\t\t$command = new Action\\Delete_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t/**\n\t * Generates some scheduled actions.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <hook>\n\t * : Name of the action hook.\n\t *\n\t * <start>\n\t * : The Unix timestamp representing the date you want the action to start.\n\t *\n\t * [--count=<count>]\n\t * : Number of actions to create.\n\t * ---\n\t * default: 1\n\t * ---\n\t *\n\t * [--interval=<interval>]\n\t * : Number of seconds to wait between runs.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments to pass to callbacks when the hook triggers.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--group=<group>]\n\t * : The group to assign this job to.\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     wp action-scheduler action generate test_multiple 1627147598 --count=5 --interval=5\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t */\n\tpublic function generate( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/Generate_Command.php';\n\t\t$command = new Action\\Generate_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t/**\n\t * Get details about a scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>\n\t * : The ID of the action to get.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * [--field=<field>]\n\t * : Instead of returning the whole action, returns the value of a single field.\n\t *\n\t * [--fields=<fields>]\n\t * : Limit the output to specific fields (comma-separated). Defaults to all fields.\n\t *\n\t * [--format=<format>]\n\t * : Render output in a particular format.\n\t * ---\n\t * default: table\n\t * options:\n\t *   - table\n\t *   - csv\n\t *   - json\n\t *   - yaml\n\t * ---\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t */\n\tpublic function get( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/Get_Command.php';\n\t\t$command = new Action\\Get_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t/**\n\t * Get a list of scheduled actions.\n\t *\n\t * Display actions based on all arguments supported by\n\t * [as_get_scheduled_actions()](https://actionscheduler.org/api/#function-reference--as_get_scheduled_actions).\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--<field>=<value>]\n\t * : One or more arguments to pass to as_get_scheduled_actions().\n\t *\n\t * [--field=<field>]\n\t * : Prints the value of a single property for each action.\n\t *\n\t * [--fields=<fields>]\n\t * : Limit the output to specific object properties.\n\t *\n\t * [--format=<format>]\n\t * : Render output in a particular format.\n\t * ---\n\t * default: table\n\t * options:\n\t *   - table\n\t *   - csv\n\t *   - ids\n\t *   - json\n\t *   - count\n\t *   - yaml\n\t * ---\n\t *\n\t * ## AVAILABLE FIELDS\n\t *\n\t * These fields will be displayed by default for each action:\n\t *\n\t * * id\n\t * * hook\n\t * * status\n\t * * group\n\t * * recurring\n\t * * scheduled_date\n\t *\n\t * These fields are optionally available:\n\t *\n\t * * args\n\t * * log_entries\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t *\n\t * @subcommand list\n\t */\n\tpublic function subcommand_list( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/List_Command.php';\n\t\t$command = new Action\\List_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t/**\n\t * Get logs for a scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>\n\t * : The ID of the action to get.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * @param array $args Positional arguments.\n\t * @return void\n\t */\n\tpublic function logs( array $args ) {\n\t\t$command = sprintf( 'action-scheduler action get %d --field=log_entries', $args[0] );\n\t\tWP_CLI::runcommand( $command );\n\t}\n\n\t/**\n\t * Get the ID or timestamp of the next scheduled action.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <hook>\n\t * : The hook of the next scheduled action.\n\t *\n\t * [--args=<args>]\n\t * : JSON object of arguments to search for next scheduled action.\n\t * ---\n\t * default: []\n\t * ---\n\t *\n\t * [--group=<group>]\n\t * : The group to which the next scheduled action is assigned.\n\t * ---\n\t * default: ''\n\t * ---\n\t *\n\t * [--raw]\n\t * : Display the raw output of as_next_scheduled_action() (timestamp or boolean).\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t */\n\tpublic function next( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/Next_Command.php';\n\t\t$command = new Action\\Next_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n\t/**\n\t * Run existing scheduled action(s).\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>...\n\t * : One or more IDs of actions to run.\n\t * ---\n\t * default: 0\n\t * ---\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Run the action with id 100\n\t *     $ wp action-scheduler action run 100\n\t *\n\t *     # Run the actions with ids 100 and 200\n\t *     $ wp action-scheduler action run 100 200\n\t *\n\t *     # Run the first five pending actions in 'action-scheduler' group\n\t *     $ wp action-scheduler action run $( wp action-scheduler action list --status=pending --group=action-scheduler --format=ids )\n\t *\n\t * @param array $args       Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @return void\n\t */\n\tpublic function run( array $args, array $assoc_args ) {\n\t\trequire_once 'Action/Run_Command.php';\n\t\t$command = new Action\\Run_Command( $args, $assoc_args );\n\t\t$command->execute();\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/ActionScheduler_WPCLI_Scheduler_command.php","ext":"php","size":6855,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Commands for Action Scheduler.\n */\nclass ActionScheduler_WPCLI_Scheduler_command extends WP_CLI_Command {\n\n\t/**\n\t * Force tables schema creation for Action Scheduler\n\t *\n\t * ## OPTIONS\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t *\n\t * @subcommand fix-schema\n\t */\n\tpublic function fix_schema( $args, $assoc_args ) {\n\t\t$schema_classes = array( ActionScheduler_LoggerSchema::class, ActionScheduler_StoreSchema::class );\n\n\t\tforeach ( $schema_classes as $classname ) {\n\t\t\tif ( is_subclass_of( $classname, ActionScheduler_Abstract_Schema::class ) ) {\n\t\t\t\t$obj = new $classname();\n\t\t\t\t$obj->init();\n\t\t\t\t$obj->register_tables( true );\n\n\t\t\t\tWP_CLI::success(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: %s refers to the schema name*/\n\t\t\t\t\t\t__( 'Registered schema for %s', 'action-scheduler' ),\n\t\t\t\t\t\t$classname\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Run the Action Scheduler\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--batch-size=<size>]\n\t * : The maximum number of actions to run. Defaults to 100.\n\t *\n\t * [--batches=<size>]\n\t * : Limit execution to a number of batches. Defaults to 0, meaning batches will continue being executed until all actions are complete.\n\t *\n\t * [--cleanup-batch-size=<size>]\n\t * : The maximum number of actions to clean up. Defaults to the value of --batch-size.\n\t *\n\t * [--hooks=<hooks>]\n\t * : Only run actions with the specified hook. Omitting this option runs actions with any hook. Define multiple hooks as a comma separated string (without spaces), e.g. `--hooks=hook_one,hook_two,hook_three`\n\t *\n\t * [--group=<group>]\n\t * : Only run actions from the specified group. Omitting this option runs actions from all groups.\n\t *\n\t * [--exclude-groups=<groups>]\n\t * : Run actions from all groups except the specified group(s). Define multiple groups as a comma separated string (without spaces), e.g. '--group_a,group_b'. This option is ignored when `--group` is used.\n\t *\n\t * [--free-memory-on=<count>]\n\t * : The number of actions to process between freeing memory. 0 disables freeing memory. Default 50.\n\t *\n\t * [--pause=<seconds>]\n\t * : The number of seconds to pause when freeing memory. Default no pause.\n\t *\n\t * [--force]\n\t * : Whether to force execution despite the maximum number of concurrent processes being exceeded.\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t *\n\t * @subcommand run\n\t */\n\tpublic function run( $args, $assoc_args ) {\n\t\t// Handle passed arguments.\n\t\t$batch          = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batch-size', 100 ) );\n\t\t$batches        = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batches', 0 ) );\n\t\t$clean          = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'cleanup-batch-size', $batch ) );\n\t\t$hooks          = explode( ',', WP_CLI\\Utils\\get_flag_value( $assoc_args, 'hooks', '' ) );\n\t\t$hooks          = array_filter( array_map( 'trim', $hooks ) );\n\t\t$group          = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'group', '' );\n\t\t$exclude_groups = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'exclude-groups', '' );\n\t\t$free_on        = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'free-memory-on', 50 );\n\t\t$sleep          = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'pause', 0 );\n\t\t$force          = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'force', false );\n\n\t\tActionScheduler_DataController::set_free_ticks( $free_on );\n\t\tActionScheduler_DataController::set_sleep_time( $sleep );\n\n\t\t$batches_completed = 0;\n\t\t$actions_completed = 0;\n\t\t$unlimited         = 0 === $batches;\n\t\tif ( is_callable( array( ActionScheduler::store(), 'set_claim_filter' ) ) ) {\n\t\t\t$exclude_groups = $this->parse_comma_separated_string( $exclude_groups );\n\n\t\t\tif ( ! empty( $exclude_groups ) ) {\n\t\t\t\tActionScheduler::store()->set_claim_filter( 'exclude-groups', $exclude_groups );\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\t// Custom queue cleaner instance.\n\t\t\t$cleaner = new ActionScheduler_QueueCleaner( null, $clean );\n\n\t\t\t// Get the queue runner instance.\n\t\t\t$runner = new ActionScheduler_WPCLI_QueueRunner( null, null, $cleaner );\n\n\t\t\t// Determine how many tasks will be run in the first batch.\n\t\t\t$total = $runner->setup( $batch, $hooks, $group, $force );\n\n\t\t\t// Run actions for as long as possible.\n\t\t\twhile ( $total > 0 ) {\n\t\t\t\t$this->print_total_actions( $total );\n\t\t\t\t$actions_completed += $runner->run();\n\t\t\t\t$batches_completed++;\n\n\t\t\t\t// Maybe set up tasks for the next batch.\n\t\t\t\t$total = ( $unlimited || $batches_completed < $batches ) ? $runner->setup( $batch, $hooks, $group, $force ) : 0;\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$this->print_total_batches( $batches_completed );\n\t\t$this->print_success( $actions_completed );\n\t}\n\n\t/**\n\t * Converts a string of comma-separated values into an array of those same values.\n\t *\n\t * @param string $string The string of one or more comma separated values.\n\t *\n\t * @return array\n\t */\n\tprivate function parse_comma_separated_string( $string ): array {\n\t\treturn array_filter( str_getcsv( $string ) );\n\t}\n\n\t/**\n\t * Print WP CLI message about how many actions are about to be processed.\n\t *\n\t * @param int $total Number of actions found.\n\t */\n\tprotected function print_total_actions( $total ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to how many scheduled tasks were found to run */\n\t\t\t\t_n( 'Found %d scheduled task', 'Found %d scheduled tasks', $total, 'action-scheduler' ),\n\t\t\t\t$total\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Print WP CLI message about how many batches of actions were processed.\n\t *\n\t * @param int $batches_completed Number of completed batches.\n\t */\n\tprotected function print_total_batches( $batches_completed ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to the total number of batches executed */\n\t\t\t\t_n( '%d batch executed.', '%d batches executed.', $batches_completed, 'action-scheduler' ),\n\t\t\t\t$batches_completed\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param Exception $e The error object.\n\t *\n\t * @throws \\WP_CLI\\ExitException Under some conditions WP CLI may throw an exception.\n\t */\n\tprotected function print_error( Exception $e ) {\n\t\tWP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s refers to the exception error message */\n\t\t\t\t__( 'There was an error running the action scheduler: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Print a success message with the number of completed actions.\n\t *\n\t * @param int $actions_completed Number of completed actions.\n\t */\n\tprotected function print_success( $actions_completed ) {\n\t\tWP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to the total number of tasks completed */\n\t\t\t\t_n( '%d scheduled task completed.', '%d scheduled tasks completed.', $actions_completed, 'action-scheduler' ),\n\t\t\t\t$actions_completed\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/ProgressBar.php","ext":"php","size":2766,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI;\n\n/**\n * WP_CLI progress bar for Action Scheduler.\n */\n\n/**\n * Class ProgressBar\n *\n * @package Action_Scheduler\\WP_CLI\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass ProgressBar {\n\n\t/**\n\t * Current number of ticks.\n\t *\n\t * @var integer\n\t */\n\tprotected $total_ticks;\n\n\t/**\n\t * Total number of ticks.\n\t *\n\t * @var integer\n\t */\n\tprotected $count;\n\n\t/**\n\t * Progress bar update interval.\n\t *\n\t * @var integer\n\t */\n\tprotected $interval;\n\n\t/**\n\t * Progress bar message.\n\t *\n\t * @var string\n\t */\n\tprotected $message;\n\n\t/**\n\t * Instance.\n\t *\n\t * @var \\cli\\progress\\Bar\n\t */\n\tprotected $progress_bar;\n\n\t/**\n\t * ProgressBar constructor.\n\t *\n\t * @param string  $message    Text to display before the progress bar.\n\t * @param integer $count      Total number of ticks to be performed.\n\t * @param integer $interval   Optional. The interval in milliseconds between updates. Default 100.\n\t *\n\t * @throws \\Exception When this is not run within WP CLI.\n\t */\n\tpublic function __construct( $message, $count, $interval = 100 ) {\n\t\tif ( ! ( defined( 'WP_CLI' ) && WP_CLI ) ) {\n\t\t\t/* translators: %s php class name */\n\t\t\tthrow new \\Exception( sprintf( __( 'The %s class can only be run within WP CLI.', 'action-scheduler' ), __CLASS__ ) );\n\t\t}\n\n\t\t$this->total_ticks = 0;\n\t\t$this->message     = $message;\n\t\t$this->count       = $count;\n\t\t$this->interval    = $interval;\n\t}\n\n\t/**\n\t * Increment the progress bar ticks.\n\t */\n\tpublic function tick() {\n\t\tif ( null === $this->progress_bar ) {\n\t\t\t$this->setup_progress_bar();\n\t\t}\n\n\t\t$this->progress_bar->tick();\n\t\t$this->total_ticks++;\n\n\t\tdo_action( 'action_scheduler/progress_tick', $this->total_ticks ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t/**\n\t * Get the progress bar tick count.\n\t *\n\t * @return int\n\t */\n\tpublic function current() {\n\t\treturn $this->progress_bar ? $this->progress_bar->current() : 0;\n\t}\n\n\t/**\n\t * Finish the current progress bar.\n\t */\n\tpublic function finish() {\n\t\tif ( null !== $this->progress_bar ) {\n\t\t\t$this->progress_bar->finish();\n\t\t}\n\n\t\t$this->progress_bar = null;\n\t}\n\n\t/**\n\t * Set the message used when creating the progress bar.\n\t *\n\t * @param string $message The message to be used when the next progress bar is created.\n\t */\n\tpublic function set_message( $message ) {\n\t\t$this->message = $message;\n\t}\n\n\t/**\n\t * Set the count for a new progress bar.\n\t *\n\t * @param integer $count The total number of ticks expected to complete.\n\t */\n\tpublic function set_count( $count ) {\n\t\t$this->count = $count;\n\t\t$this->finish();\n\t}\n\n\t/**\n\t * Set up the progress bar.\n\t */\n\tprotected function setup_progress_bar() {\n\t\t$this->progress_bar = \\WP_CLI\\Utils\\make_progress_bar(\n\t\t\t$this->message,\n\t\t\t$this->count,\n\t\t\t$this->interval\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/System_Command.php","ext":"php","size":7237,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\WP_CLI;\n\n// phpcs:disable WordPress.Security.EscapeOutput.OutputNotEscaped -- Escaping output is not necessary in WP CLI.\n\nuse ActionScheduler_SystemInformation;\nuse WP_CLI;\nuse function \\WP_CLI\\Utils\\get_flag_value;\n\n/**\n * System info WP-CLI commands for Action Scheduler.\n */\nclass System_Command {\n\n\t/**\n\t * Data store for querying actions\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprotected $store;\n\n\t/**\n\t * Construct.\n\t */\n\tpublic function __construct() {\n\t\t$this->store = \\ActionScheduler::store();\n\t}\n\n\t/**\n\t * Print in-use data store class.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t *\n\t * @subcommand data-store\n\t */\n\tpublic function datastore( array $args, array $assoc_args ) {\n\t\techo $this->get_current_datastore();\n\t}\n\n\t/**\n\t * Print in-use runner class.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t */\n\tpublic function runner( array $args, array $assoc_args ) {\n\t\techo $this->get_current_runner();\n\t}\n\n\t/**\n\t * Get system status.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t */\n\tpublic function status( array $args, array $assoc_args ) {\n\t\t/**\n\t\t * Get runner status.\n\t\t *\n\t\t * @link https://github.com/woocommerce/action-scheduler-disable-default-runner\n\t\t */\n\t\t$runner_enabled = has_action( 'action_scheduler_run_queue', array( \\ActionScheduler::runner(), 'run' ) );\n\n\t\t\\WP_CLI::line( sprintf( 'Data store: %s', $this->get_current_datastore() ) );\n\t\t\\WP_CLI::line( sprintf( 'Runner: %s%s', $this->get_current_runner(), ( $runner_enabled ? '' : ' (disabled)' ) ) );\n\t\t\\WP_CLI::line( sprintf( 'Version: %s', $this->get_latest_version() ) );\n\n\t\t$rows              = array();\n\t\t$action_counts     = $this->store->action_counts();\n\t\t$oldest_and_newest = $this->get_oldest_and_newest( array_keys( $action_counts ) );\n\n\t\tforeach ( $action_counts as $status => $count ) {\n\t\t\t$rows[] = array(\n\t\t\t\t'status' => $status,\n\t\t\t\t'count'  => $count,\n\t\t\t\t'oldest' => $oldest_and_newest[ $status ]['oldest'],\n\t\t\t\t'newest' => $oldest_and_newest[ $status ]['newest'],\n\t\t\t);\n\t\t}\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $assoc_args, array( 'status', 'count', 'oldest', 'newest' ) );\n\t\t$formatter->display_items( $rows );\n\t}\n\n\t/**\n\t * Display the active version, or all registered versions.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--all]\n\t * : List all registered versions.\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @return void\n\t */\n\tpublic function version( array $args, array $assoc_args ) {\n\t\t$all    = (bool) get_flag_value( $assoc_args, 'all' );\n\t\t$latest = $this->get_latest_version();\n\n\t\tif ( ! $all ) {\n\t\t\techo $latest;\n\t\t\t\\WP_CLI::halt( 0 );\n\t\t}\n\n\t\t$instance = \\ActionScheduler_Versions::instance();\n\t\t$versions = $instance->get_versions();\n\t\t$rows     = array();\n\n\t\tforeach ( $versions as $version => $callback ) {\n\t\t\t$active = $version === $latest;\n\n\t\t\t$rows[ $version ] = array(\n\t\t\t\t'version'  => $version,\n\t\t\t\t'callback' => $callback,\n\t\t\t\t'active'   => $active ? 'yes' : 'no',\n\t\t\t);\n\t\t}\n\n\t\tuksort( $rows, 'version_compare' );\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $assoc_args, array( 'version', 'callback', 'active' ) );\n\t\t$formatter->display_items( $rows );\n\t}\n\n\t/**\n\t * Display the current source, or all registered sources.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--all]\n\t * : List all registered sources.\n\t *\n\t * [--fullpath]\n\t * : List full path of source(s).\n\t *\n\t * @param array $args       Positional args.\n\t * @param array $assoc_args Keyed args.\n\t * @uses ActionScheduler_SystemInformation::active_source_path()\n\t * @uses \\WP_CLI\\Formatter::display_items()\n\t * @uses $this->get_latest_version()\n\t * @return void\n\t */\n\tpublic function source( array $args, array $assoc_args ) {\n\t\t$all      = (bool) get_flag_value( $assoc_args, 'all' );\n\t\t$fullpath = (bool) get_flag_value( $assoc_args, 'fullpath' );\n\t\t$source   = ActionScheduler_SystemInformation::active_source_path();\n\t\t$path     = $source;\n\n\t\tif ( ! $fullpath ) {\n\t\t\t$path = str_replace( ABSPATH, '', $path );\n\t\t}\n\n\t\tif ( ! $all ) {\n\t\t\techo $path;\n\t\t\t\\WP_CLI::halt( 0 );\n\t\t}\n\n\t\t$sources = ActionScheduler_SystemInformation::get_sources();\n\n\t\tif ( empty( $sources ) ) {\n\t\t\tWP_CLI::log( __( 'Detailed information about registered sources is not currently available.', 'action-scheduler' ) );\n\t\t\treturn;\n\t\t}\n\n\t\t$rows = array();\n\n\t\tforeach ( $sources as $check_source => $version ) {\n\t\t\t$active = dirname( $check_source ) === $source;\n\t\t\t$path   = $check_source;\n\n\t\t\tif ( ! $fullpath ) {\n\t\t\t\t$path = str_replace( ABSPATH, '', $path );\n\t\t\t}\n\n\t\t\t$rows[ $check_source ] = array(\n\t\t\t\t'source'  => $path,\n\t\t\t\t'version' => $version,\n\t\t\t\t'active'  => $active ? 'yes' : 'no',\n\t\t\t);\n\t\t}\n\n\t\tksort( $rows );\n\n\t\t\\WP_CLI::log( PHP_EOL . 'Please note there can only be one unique registered instance of Action Scheduler per ' . PHP_EOL . 'version number, so this list may not include all the currently present copies of ' . PHP_EOL . 'Action Scheduler.' . PHP_EOL );\n\n\t\t$formatter = new \\WP_CLI\\Formatter( $assoc_args, array( 'source', 'version', 'active' ) );\n\t\t$formatter->display_items( $rows );\n\t}\n\n\t/**\n\t * Get current data store.\n\t *\n\t * @return string\n\t */\n\tprotected function get_current_datastore() {\n\t\treturn get_class( $this->store );\n\t}\n\n\t/**\n\t * Get latest version.\n\t *\n\t * @param null|\\ActionScheduler_Versions $instance Versions.\n\t * @return string\n\t */\n\tprotected function get_latest_version( $instance = null ) {\n\t\tif ( is_null( $instance ) ) {\n\t\t\t$instance = \\ActionScheduler_Versions::instance();\n\t\t}\n\n\t\treturn $instance->latest_version();\n\t}\n\n\t/**\n\t * Get current runner.\n\t *\n\t * @return string\n\t */\n\tprotected function get_current_runner() {\n\t\treturn get_class( \\ActionScheduler::runner() );\n\t}\n\n\t/**\n\t * Get oldest and newest scheduled dates for a given set of statuses.\n\t *\n\t * @param array $status_keys Set of statuses to find oldest & newest action for.\n\t * @return array\n\t */\n\tprotected function get_oldest_and_newest( $status_keys ) {\n\t\t$oldest_and_newest = array();\n\n\t\tforeach ( $status_keys as $status ) {\n\t\t\t$oldest_and_newest[ $status ] = array(\n\t\t\t\t'oldest' => '&ndash;',\n\t\t\t\t'newest' => '&ndash;',\n\t\t\t);\n\n\t\t\tif ( 'in-progress' === $status ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$oldest_and_newest[ $status ]['oldest'] = $this->get_action_status_date( $status, 'oldest' );\n\t\t\t$oldest_and_newest[ $status ]['newest'] = $this->get_action_status_date( $status, 'newest' );\n\t\t}\n\n\t\treturn $oldest_and_newest;\n\t}\n\n\t/**\n\t * Get oldest or newest scheduled date for a given status.\n\t *\n\t * @param string $status Action status label/name string.\n\t * @param string $date_type Oldest or Newest.\n\t * @return string\n\t */\n\tprotected function get_action_status_date( $status, $date_type = 'oldest' ) {\n\t\t$order = 'oldest' === $date_type ? 'ASC' : 'DESC';\n\n\t\t$args = array(\n\t\t\t'status'   => $status,\n\t\t\t'per_page' => 1,\n\t\t\t'order'    => $order,\n\t\t);\n\n\t\t$action = $this->store->query_actions( $args );\n\n\t\tif ( ! empty( $action ) ) {\n\t\t\t$date_object = $this->store->get_date( $action[0] );\n\t\t\t$action_date = $date_object->format( 'Y-m-d H:i:s O' );\n\t\t} else {\n\t\t\t$action_date = '&ndash;';\n\t\t}\n\n\t\treturn $action_date;\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/WP_CLI/ActionScheduler_WPCLI_Clean_Command.php","ext":"php","size":3827,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Commands for Action Scheduler.\n */\nclass ActionScheduler_WPCLI_Clean_Command extends WP_CLI_Command {\n\t/**\n\t * Run the Action Scheduler Queue Cleaner\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--batch-size=<size>]\n\t * : The maximum number of actions to delete per batch. Defaults to 20.\n\t *\n\t * [--batches=<size>]\n\t * : Limit execution to a number of batches. Defaults to 0, meaning batches will continue all eligible actions are deleted.\n\t *\n\t * [--status=<status>]\n\t * : Only clean actions with the specified status. Defaults to Canceled, Completed. Define multiple statuses as a comma separated string (without spaces), e.g. `--status=complete,failed,canceled`\n\t *\n\t * [--before=<datestring>]\n\t * : Only delete actions with scheduled date older than this. Defaults to 31 days. e.g `--before='7 days ago'`, `--before='02-Feb-2020 20:20:20'`\n\t *\n\t * [--pause=<seconds>]\n\t * : The number of seconds to pause between batches. Default no pause.\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t *\n\t * @subcommand clean\n\t */\n\tpublic function clean( $args, $assoc_args ) {\n\t\t// Handle passed arguments.\n\t\t$batch   = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batch-size', 20 ) );\n\t\t$batches = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batches', 0 ) );\n\t\t$status  = explode( ',', WP_CLI\\Utils\\get_flag_value( $assoc_args, 'status', '' ) );\n\t\t$status  = array_filter( array_map( 'trim', $status ) );\n\t\t$before  = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'before', '' );\n\t\t$sleep   = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'pause', 0 );\n\n\t\t$batches_completed = 0;\n\t\t$actions_deleted   = 0;\n\t\t$unlimited         = 0 === $batches;\n\t\ttry {\n\t\t\t$lifespan = as_get_datetime_object( $before );\n\t\t} catch ( Exception $e ) {\n\t\t\t$lifespan = null;\n\t\t}\n\n\t\ttry {\n\t\t\t// Custom queue cleaner instance.\n\t\t\t$cleaner = new ActionScheduler_QueueCleaner( null, $batch );\n\n\t\t\t// Clean actions for as long as possible.\n\t\t\twhile ( $unlimited || $batches_completed < $batches ) {\n\t\t\t\tif ( $sleep && $batches_completed > 0 ) {\n\t\t\t\t\tsleep( $sleep );\n\t\t\t\t}\n\n\t\t\t\t$deleted = count( $cleaner->clean_actions( $status, $lifespan, null, 'CLI' ) );\n\t\t\t\tif ( $deleted <= 0 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t$actions_deleted += $deleted;\n\t\t\t\t$batches_completed++;\n\t\t\t\t$this->print_success( $deleted );\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$this->print_total_batches( $batches_completed );\n\t\tif ( $batches_completed > 1 ) {\n\t\t\t$this->print_success( $actions_deleted );\n\t\t}\n\t}\n\n\t/**\n\t * Print WP CLI message about how many batches of actions were processed.\n\t *\n\t * @param int $batches_processed Number of batches processed.\n\t */\n\tprotected function print_total_batches( int $batches_processed ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to the total number of batches processed */\n\t\t\t\t_n( '%d batch processed.', '%d batches processed.', $batches_processed, 'action-scheduler' ),\n\t\t\t\t$batches_processed\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @param Exception $e The error object.\n\t */\n\tprotected function print_error( Exception $e ) {\n\t\tWP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s refers to the exception error message */\n\t\t\t\t__( 'There was an error deleting an action: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Print a success message with the number of completed actions.\n\t *\n\t * @param int $actions_deleted Number of deleted actions.\n\t */\n\tprotected function print_success( int $actions_deleted ) {\n\t\tWP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to the total number of actions deleted */\n\t\t\t\t_n( '%d action deleted.', '%d actions deleted.', $actions_deleted, 'action-scheduler' ),\n\t\t\t\t$actions_deleted\n\t\t\t)\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_AsyncRequest_QueueRunner.php","ext":"php","size":2163,"mtime":1757324689,"type":"text","content":"<?php\n\ndefined( 'ABSPATH' ) || exit;\n\n/**\n * ActionScheduler_AsyncRequest_QueueRunner class.\n */\nclass ActionScheduler_AsyncRequest_QueueRunner extends WP_Async_Request {\n\n\t/**\n\t * Data store for querying actions\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprotected $store;\n\n\t/**\n\t * Prefix for ajax hooks\n\t *\n\t * @var string\n\t */\n\tprotected $prefix = 'as';\n\n\t/**\n\t * Action for ajax hooks\n\t *\n\t * @var string\n\t */\n\tprotected $action = 'async_request_queue_runner';\n\n\t/**\n\t * Initiate new async request.\n\t *\n\t * @param ActionScheduler_Store $store Store object.\n\t */\n\tpublic function __construct( ActionScheduler_Store $store ) {\n\t\tparent::__construct();\n\t\t$this->store = $store;\n\t}\n\n\t/**\n\t * Handle async requests\n\t *\n\t * Run a queue, and maybe dispatch another async request to run another queue\n\t * if there are still pending actions after completing a queue in this request.\n\t */\n\tprotected function handle() {\n\t\tdo_action( 'action_scheduler_run_queue', 'Async Request' ); // run a queue in the same way as WP Cron, but declare the Async Request context.\n\n\t\t$sleep_seconds = $this->get_sleep_seconds();\n\n\t\tif ( $sleep_seconds ) {\n\t\t\tsleep( $sleep_seconds );\n\t\t}\n\n\t\t$this->maybe_dispatch();\n\t}\n\n\t/**\n\t * If the async request runner is needed and allowed to run, dispatch a request.\n\t */\n\tpublic function maybe_dispatch() {\n\t\tif ( ! $this->allow() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->dispatch();\n\t\tActionScheduler_QueueRunner::instance()->unhook_dispatch_async_request();\n\t}\n\n\t/**\n\t * Only allow async requests when needed.\n\t *\n\t * Also allow 3rd party code to disable running actions via async requests.\n\t */\n\tprotected function allow() {\n\n\t\tif ( ! has_action( 'action_scheduler_run_queue' ) || ActionScheduler::runner()->has_maximum_concurrent_batches() || ! $this->store->has_pending_actions_due() ) {\n\t\t\t$allow = false;\n\t\t} else {\n\t\t\t$allow = true;\n\t\t}\n\n\t\treturn apply_filters( 'action_scheduler_allow_async_request_runner', $allow );\n\t}\n\n\t/**\n\t * Chaining async requests can crash MySQL. A brief sleep call in PHP prevents that.\n\t */\n\tprotected function get_sleep_seconds() {\n\t\treturn apply_filters( 'action_scheduler_async_request_sleep_seconds', 5, $this );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/DryRun_LogMigrator.php","ext":"php","size":459,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n/**\n * Class DryRun_LogMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @codeCoverageIgnore\n */\nclass DryRun_LogMigrator extends LogMigrator {\n\t/**\n\t * Simulate migrating an action log.\n\t *\n\t * @param int $source_action_id Source logger object.\n\t * @param int $destination_action_id Destination logger object.\n\t */\n\tpublic function migrate( $source_action_id, $destination_action_id ) {\n\t\t// no-op.\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/DryRun_ActionMigrator.php","ext":"php","size":554,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n/**\n * Class DryRun_ActionMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass DryRun_ActionMigrator extends ActionMigrator {\n\t/**\n\t * Simulate migrating an action.\n\t *\n\t * @param int $source_action_id Action ID.\n\t *\n\t * @return int\n\t */\n\tpublic function migrate( $source_action_id ) {\n\t\tdo_action( 'action_scheduler/migrate_action_dry_run', $source_action_id ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\treturn 0;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/Scheduler.php","ext":"php","size":3112,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n/**\n * Class Scheduler\n *\n * @package Action_Scheduler\\WP_CLI\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass Scheduler {\n\t/** Migration action hook. */\n\tconst HOOK = 'action_scheduler/migration_hook';\n\n\t/** Migration action group. */\n\tconst GROUP = 'action-scheduler-migration';\n\n\t/**\n\t * Set up the callback for the scheduled job.\n\t */\n\tpublic function hook() {\n\t\tadd_action( self::HOOK, array( $this, 'run_migration' ), 10, 0 );\n\t}\n\n\t/**\n\t * Remove the callback for the scheduled job.\n\t */\n\tpublic function unhook() {\n\t\tremove_action( self::HOOK, array( $this, 'run_migration' ), 10 );\n\t}\n\n\t/**\n\t * The migration callback.\n\t */\n\tpublic function run_migration() {\n\t\t$migration_runner = $this->get_migration_runner();\n\t\t$count            = $migration_runner->run( $this->get_batch_size() );\n\n\t\tif ( 0 === $count ) {\n\t\t\t$this->mark_complete();\n\t\t} else {\n\t\t\t$this->schedule_migration( time() + $this->get_schedule_interval() );\n\t\t}\n\t}\n\n\t/**\n\t * Mark the migration complete.\n\t */\n\tpublic function mark_complete() {\n\t\t$this->unschedule_migration();\n\n\t\t\\ActionScheduler_DataController::mark_migration_complete();\n\t\tdo_action( 'action_scheduler/migration_complete' ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t/**\n\t * Get a flag indicating whether the migration is scheduled.\n\t *\n\t * @return bool Whether there is a pending action in the store to handle the migration\n\t */\n\tpublic function is_migration_scheduled() {\n\t\t$next = as_next_scheduled_action( self::HOOK );\n\n\t\treturn ! empty( $next );\n\t}\n\n\t/**\n\t * Schedule the migration.\n\t *\n\t * @param int $when Optional timestamp to run the next migration batch. Defaults to now.\n\t *\n\t * @return string The action ID\n\t */\n\tpublic function schedule_migration( $when = 0 ) {\n\t\t$next = as_next_scheduled_action( self::HOOK );\n\n\t\tif ( ! empty( $next ) ) {\n\t\t\treturn $next;\n\t\t}\n\n\t\tif ( empty( $when ) ) {\n\t\t\t$when = time() + MINUTE_IN_SECONDS;\n\t\t}\n\n\t\treturn as_schedule_single_action( $when, self::HOOK, array(), self::GROUP );\n\t}\n\n\t/**\n\t * Remove the scheduled migration action.\n\t */\n\tpublic function unschedule_migration() {\n\t\tas_unschedule_action( self::HOOK, null, self::GROUP );\n\t}\n\n\t/**\n\t * Get migration batch schedule interval.\n\t *\n\t * @return int Seconds between migration runs. Defaults to 0 seconds to allow chaining migration via Async Runners.\n\t */\n\tprivate function get_schedule_interval() {\n\t\treturn (int) apply_filters( 'action_scheduler/migration_interval', 0 ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t/**\n\t * Get migration batch size.\n\t *\n\t * @return int Number of actions to migrate in each batch. Defaults to 250.\n\t */\n\tprivate function get_batch_size() {\n\t\treturn (int) apply_filters( 'action_scheduler/migration_batch_size', 250 ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t/**\n\t * Get migration runner object.\n\t *\n\t * @return Runner\n\t */\n\tprivate function get_migration_runner() {\n\t\t$config = Controller::instance()->get_migration_config_object();\n\n\t\treturn new Runner( $config );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/Runner.php","ext":"php","size":4220,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n/**\n * Class Runner\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass Runner {\n\t/**\n\t * Source store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $source_store;\n\n\t/**\n\t * Destination store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $destination_store;\n\n\t/**\n\t * Source logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t */\n\tprivate $source_logger;\n\n\t/**\n\t * Destination logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t */\n\tprivate $destination_logger;\n\n\t/**\n\t * Batch fetcher instance.\n\t *\n\t * @var BatchFetcher\n\t */\n\tprivate $batch_fetcher;\n\n\t/**\n\t * Action migrator instance.\n\t *\n\t * @var ActionMigrator\n\t */\n\tprivate $action_migrator;\n\n\t/**\n\t * Log migrator instance.\n\t *\n\t * @var LogMigrator\n\t */\n\tprivate $log_migrator;\n\n\t/**\n\t * Progress bar instance.\n\t *\n\t * @var ProgressBar\n\t */\n\tprivate $progress_bar;\n\n\t/**\n\t * Runner constructor.\n\t *\n\t * @param Config $config Migration configuration object.\n\t */\n\tpublic function __construct( Config $config ) {\n\t\t$this->source_store       = $config->get_source_store();\n\t\t$this->destination_store  = $config->get_destination_store();\n\t\t$this->source_logger      = $config->get_source_logger();\n\t\t$this->destination_logger = $config->get_destination_logger();\n\n\t\t$this->batch_fetcher = new BatchFetcher( $this->source_store );\n\t\tif ( $config->get_dry_run() ) {\n\t\t\t$this->log_migrator    = new DryRun_LogMigrator( $this->source_logger, $this->destination_logger );\n\t\t\t$this->action_migrator = new DryRun_ActionMigrator( $this->source_store, $this->destination_store, $this->log_migrator );\n\t\t} else {\n\t\t\t$this->log_migrator    = new LogMigrator( $this->source_logger, $this->destination_logger );\n\t\t\t$this->action_migrator = new ActionMigrator( $this->source_store, $this->destination_store, $this->log_migrator );\n\t\t}\n\n\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\t$this->progress_bar = $config->get_progress_bar();\n\t\t}\n\t}\n\n\t/**\n\t * Run migration batch.\n\t *\n\t * @param int $batch_size Optional batch size. Default 10.\n\t *\n\t * @return int Size of batch processed.\n\t */\n\tpublic function run( $batch_size = 10 ) {\n\t\t$batch      = $this->batch_fetcher->fetch( $batch_size );\n\t\t$batch_size = count( $batch );\n\n\t\tif ( ! $batch_size ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif ( $this->progress_bar ) {\n\t\t\t/* translators: %d: amount of actions */\n\t\t\t$this->progress_bar->set_message( sprintf( _n( 'Migrating %d action', 'Migrating %d actions', $batch_size, 'action-scheduler' ), $batch_size ) );\n\t\t\t$this->progress_bar->set_count( $batch_size );\n\t\t}\n\n\t\t$this->migrate_actions( $batch );\n\n\t\treturn $batch_size;\n\t}\n\n\t/**\n\t * Migration a batch of actions.\n\t *\n\t * @param array $action_ids List of action IDs to migrate.\n\t */\n\tpublic function migrate_actions( array $action_ids ) {\n\t\tdo_action( 'action_scheduler/migration_batch_starting', $action_ids ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\\ActionScheduler::logger()->unhook_stored_action();\n\t\t$this->destination_logger->unhook_stored_action();\n\n\t\tforeach ( $action_ids as $source_action_id ) {\n\t\t\t$destination_action_id = $this->action_migrator->migrate( $source_action_id );\n\t\t\tif ( $destination_action_id ) {\n\t\t\t\t$this->destination_logger->log(\n\t\t\t\t\t$destination_action_id,\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: 1: source action ID 2: source store class 3: destination action ID 4: destination store class */\n\t\t\t\t\t\t__( 'Migrated action with ID %1$d in %2$s to ID %3$d in %4$s', 'action-scheduler' ),\n\t\t\t\t\t\t$source_action_id,\n\t\t\t\t\t\tget_class( $this->source_store ),\n\t\t\t\t\t\t$destination_action_id,\n\t\t\t\t\t\tget_class( $this->destination_store )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif ( $this->progress_bar ) {\n\t\t\t\t$this->progress_bar->tick();\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->progress_bar ) {\n\t\t\t$this->progress_bar->finish();\n\t\t}\n\n\t\t\\ActionScheduler::logger()->hook_stored_action();\n\n\t\tdo_action( 'action_scheduler/migration_batch_complete', $action_ids ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t/**\n\t * Initialize destination store and logger.\n\t */\n\tpublic function init_destination() {\n\t\t$this->destination_store->init();\n\t\t$this->destination_logger->init();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/ActionMigrator.php","ext":"php","size":4267,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\n/**\n * Class ActionMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass ActionMigrator {\n\t/**\n\t * Source store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $source;\n\n\t/**\n\t * Destination store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $destination;\n\n\t/**\n\t * LogMigrator instance.\n\t *\n\t * @var LogMigrator\n\t */\n\tprivate $log_migrator;\n\n\t/**\n\t * ActionMigrator constructor.\n\t *\n\t * @param \\ActionScheduler_Store $source_store Source store object.\n\t * @param \\ActionScheduler_Store $destination_store Destination store object.\n\t * @param LogMigrator            $log_migrator Log migrator object.\n\t */\n\tpublic function __construct( \\ActionScheduler_Store $source_store, \\ActionScheduler_Store $destination_store, LogMigrator $log_migrator ) {\n\t\t$this->source       = $source_store;\n\t\t$this->destination  = $destination_store;\n\t\t$this->log_migrator = $log_migrator;\n\t}\n\n\t/**\n\t * Migrate an action.\n\t *\n\t * @param int $source_action_id Action ID.\n\t *\n\t * @return int 0|new action ID\n\t * @throws \\RuntimeException When unable to delete action from the source store.\n\t */\n\tpublic function migrate( $source_action_id ) {\n\t\ttry {\n\t\t\t$action = $this->source->fetch_action( $source_action_id );\n\t\t\t$status = $this->source->get_status( $source_action_id );\n\t\t} catch ( \\Exception $e ) {\n\t\t\t$action = null;\n\t\t\t$status = '';\n\t\t}\n\n\t\tif ( is_null( $action ) || empty( $status ) || ! $action->get_schedule()->get_date() ) {\n\t\t\t// null action or empty status means the fetch operation failed or the action didn't exist.\n\t\t\t// null schedule means it's missing vital data.\n\t\t\t// delete it and move on.\n\t\t\ttry {\n\t\t\t\t$this->source->delete_action( $source_action_id );\n\t\t\t} catch ( \\Exception $e ) { // phpcs:ignore Generic.CodeAnalysis.EmptyStatement.DetectedCatch\n\t\t\t\t// nothing to do, it didn't exist in the first place.\n\t\t\t}\n\t\t\tdo_action( 'action_scheduler/no_action_to_migrate', $source_action_id, $this->source, $this->destination ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\treturn 0;\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Make sure the last attempt date is set correctly for completed and failed actions.\n\t\t\t$last_attempt_date = ( \\ActionScheduler_Store::STATUS_PENDING !== $status ) ? $this->source->get_date( $source_action_id ) : null;\n\n\t\t\t$destination_action_id = $this->destination->save_action( $action, null, $last_attempt_date );\n\t\t} catch ( \\Exception $e ) {\n\t\t\tdo_action( 'action_scheduler/migrate_action_failed', $source_action_id, $this->source, $this->destination ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\treturn 0; // could not save the action in the new store.\n\t\t}\n\n\t\ttry {\n\t\t\tswitch ( $status ) {\n\t\t\t\tcase \\ActionScheduler_Store::STATUS_FAILED:\n\t\t\t\t\t$this->destination->mark_failure( $destination_action_id );\n\t\t\t\t\tbreak;\n\t\t\t\tcase \\ActionScheduler_Store::STATUS_CANCELED:\n\t\t\t\t\t$this->destination->cancel_action( $destination_action_id );\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$this->log_migrator->migrate( $source_action_id, $destination_action_id );\n\t\t\t$this->source->delete_action( $source_action_id );\n\n\t\t\t$test_action = $this->source->fetch_action( $source_action_id );\n\t\t\tif ( ! is_a( $test_action, 'ActionScheduler_NullAction' ) ) {\n\t\t\t\t// translators: %s is an action ID.\n\t\t\t\tthrow new \\RuntimeException( sprintf( __( 'Unable to remove source migrated action %s', 'action-scheduler' ), $source_action_id ) );\n\t\t\t}\n\t\t\tdo_action( 'action_scheduler/migrated_action', $source_action_id, $destination_action_id, $this->source, $this->destination ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\n\t\t\treturn $destination_action_id;\n\t\t} catch ( \\Exception $e ) {\n\t\t\t// could not delete from the old store.\n\t\t\t$this->source->mark_migrated( $source_action_id );\n\n\t\t\t// phpcs:disable WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t\t\tdo_action( 'action_scheduler/migrate_action_incomplete', $source_action_id, $destination_action_id, $this->source, $this->destination );\n\t\t\tdo_action( 'action_scheduler/migrated_action', $source_action_id, $destination_action_id, $this->source, $this->destination );\n\t\t\t// phpcs:enable\n\n\t\t\treturn $destination_action_id;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/Config.php","ext":"php","size":4206,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\nuse Action_Scheduler\\WP_CLI\\ProgressBar;\nuse ActionScheduler_Logger as Logger;\nuse ActionScheduler_Store as Store;\n\n/**\n * Class Config\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * A config builder for the ActionScheduler\\Migration\\Runner class\n */\nclass Config {\n\t/**\n\t * Source store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $source_store;\n\n\t/**\n\t * Source logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t */\n\tprivate $source_logger;\n\n\t/**\n\t * Destination store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $destination_store;\n\n\t/**\n\t * Destination logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t */\n\tprivate $destination_logger;\n\n\t/**\n\t * Progress bar object.\n\t *\n\t * @var Action_Scheduler\\WP_CLI\\ProgressBar\n\t */\n\tprivate $progress_bar;\n\n\t/**\n\t * Flag indicating a dryrun.\n\t *\n\t * @var bool\n\t */\n\tprivate $dry_run = false;\n\n\t/**\n\t * Config constructor.\n\t */\n\tpublic function __construct() {\n\n\t}\n\n\t/**\n\t * Get the configured source store.\n\t *\n\t * @return ActionScheduler_Store\n\t * @throws \\RuntimeException When source store is not configured.\n\t */\n\tpublic function get_source_store() {\n\t\tif ( empty( $this->source_store ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Source store must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->source_store;\n\t}\n\n\t/**\n\t * Set the configured source store.\n\t *\n\t * @param ActionScheduler_Store $store Source store object.\n\t */\n\tpublic function set_source_store( Store $store ) {\n\t\t$this->source_store = $store;\n\t}\n\n\t/**\n\t * Get the configured source logger.\n\t *\n\t * @return ActionScheduler_Logger\n\t * @throws \\RuntimeException When source logger is not configured.\n\t */\n\tpublic function get_source_logger() {\n\t\tif ( empty( $this->source_logger ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Source logger must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->source_logger;\n\t}\n\n\t/**\n\t * Set the configured source logger.\n\t *\n\t * @param ActionScheduler_Logger $logger Logger object.\n\t */\n\tpublic function set_source_logger( Logger $logger ) {\n\t\t$this->source_logger = $logger;\n\t}\n\n\t/**\n\t * Get the configured destination store.\n\t *\n\t * @return ActionScheduler_Store\n\t * @throws \\RuntimeException When destination store is not configured.\n\t */\n\tpublic function get_destination_store() {\n\t\tif ( empty( $this->destination_store ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Destination store must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->destination_store;\n\t}\n\n\t/**\n\t * Set the configured destination store.\n\t *\n\t * @param ActionScheduler_Store $store Action store object.\n\t */\n\tpublic function set_destination_store( Store $store ) {\n\t\t$this->destination_store = $store;\n\t}\n\n\t/**\n\t * Get the configured destination logger.\n\t *\n\t * @return ActionScheduler_Logger\n\t * @throws \\RuntimeException When destination logger is not configured.\n\t */\n\tpublic function get_destination_logger() {\n\t\tif ( empty( $this->destination_logger ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Destination logger must be configured before running a migration', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->destination_logger;\n\t}\n\n\t/**\n\t * Set the configured destination logger.\n\t *\n\t * @param ActionScheduler_Logger $logger Logger object.\n\t */\n\tpublic function set_destination_logger( Logger $logger ) {\n\t\t$this->destination_logger = $logger;\n\t}\n\n\t/**\n\t * Get flag indicating whether it's a dry run.\n\t *\n\t * @return bool\n\t */\n\tpublic function get_dry_run() {\n\t\treturn $this->dry_run;\n\t}\n\n\t/**\n\t * Set flag indicating whether it's a dry run.\n\t *\n\t * @param bool $dry_run Dry run toggle.\n\t */\n\tpublic function set_dry_run( $dry_run ) {\n\t\t$this->dry_run = (bool) $dry_run;\n\t}\n\n\t/**\n\t * Get progress bar object.\n\t *\n\t * @return ActionScheduler\\WPCLI\\ProgressBar\n\t */\n\tpublic function get_progress_bar() {\n\t\treturn $this->progress_bar;\n\t}\n\n\t/**\n\t * Set progress bar object.\n\t *\n\t * @param ActionScheduler\\WPCLI\\ProgressBar $progress_bar Progress bar object.\n\t */\n\tpublic function set_progress_bar( ProgressBar $progress_bar ) {\n\t\t$this->progress_bar = $progress_bar;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/BatchFetcher.php","ext":"php","size":1768,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\Migration;\n\nuse ActionScheduler_Store as Store;\n\n/**\n * Class BatchFetcher\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass BatchFetcher {\n\t/**\n\t * Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $store;\n\n\t/**\n\t * BatchFetcher constructor.\n\t *\n\t * @param ActionScheduler_Store $source_store Source store object.\n\t */\n\tpublic function __construct( Store $source_store ) {\n\t\t$this->store = $source_store;\n\t}\n\n\t/**\n\t * Retrieve a list of actions.\n\t *\n\t * @param int $count The number of actions to retrieve.\n\t *\n\t * @return int[] A list of action IDs\n\t */\n\tpublic function fetch( $count = 10 ) {\n\t\tforeach ( $this->get_query_strategies( $count ) as $query ) {\n\t\t\t$action_ids = $this->store->query_actions( $query );\n\t\t\tif ( ! empty( $action_ids ) ) {\n\t\t\t\treturn $action_ids;\n\t\t\t}\n\t\t}\n\n\t\treturn array();\n\t}\n\n\t/**\n\t * Generate a list of prioritized of action search parameters.\n\t *\n\t * @param int $count Number of actions to find.\n\t *\n\t * @return array\n\t */\n\tprivate function get_query_strategies( $count ) {\n\t\t$now  = as_get_datetime_object();\n\t\t$args = array(\n\t\t\t'date'     => $now,\n\t\t\t'per_page' => $count,\n\t\t\t'offset'   => 0,\n\t\t\t'orderby'  => 'date',\n\t\t\t'order'    => 'ASC',\n\t\t);\n\n\t\t$priorities = array(\n\t\t\tStore::STATUS_PENDING,\n\t\t\tStore::STATUS_FAILED,\n\t\t\tStore::STATUS_CANCELED,\n\t\t\tStore::STATUS_COMPLETE,\n\t\t\tStore::STATUS_RUNNING,\n\t\t\t'', // any other unanticipated status.\n\t\t);\n\n\t\tforeach ( $priorities as $status ) {\n\t\t\tyield wp_parse_args(\n\t\t\t\tarray(\n\t\t\t\t\t'status'       => $status,\n\t\t\t\t\t'date_compare' => '<=',\n\t\t\t\t),\n\t\t\t\t$args\n\t\t\t);\n\n\t\t\tyield wp_parse_args(\n\t\t\t\tarray(\n\t\t\t\t\t'status'       => $status,\n\t\t\t\t\t'date_compare' => '>=',\n\t\t\t\t),\n\t\t\t\t$args\n\t\t\t);\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/LogMigrator.php","ext":"php","size":1313,"mtime":1757324689,"type":"text","content":"<?php\n\n\nnamespace Action_Scheduler\\Migration;\n\nuse ActionScheduler_Logger;\n\n/**\n * Class LogMigrator\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass LogMigrator {\n\t/**\n\t * Source logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t */\n\tprivate $source;\n\n\t/**\n\t * Destination logger instance.\n\t *\n\t * @var ActionScheduler_Logger\n\t */\n\tprivate $destination;\n\n\t/**\n\t * ActionMigrator constructor.\n\t *\n\t * @param ActionScheduler_Logger $source_logger Source logger object.\n\t * @param ActionScheduler_Logger $destination_logger Destination logger object.\n\t */\n\tpublic function __construct( ActionScheduler_Logger $source_logger, ActionScheduler_Logger $destination_logger ) {\n\t\t$this->source      = $source_logger;\n\t\t$this->destination = $destination_logger;\n\t}\n\n\t/**\n\t * Migrate an action log.\n\t *\n\t * @param int $source_action_id Source logger object.\n\t * @param int $destination_action_id Destination logger object.\n\t */\n\tpublic function migrate( $source_action_id, $destination_action_id ) {\n\t\t$logs = $this->source->get_logs( $source_action_id );\n\n\t\tforeach ( $logs as $log ) {\n\t\t\tif ( absint( $log->get_action_id() ) === absint( $source_action_id ) ) {\n\t\t\t\t$this->destination->log( $destination_action_id, $log->get_message(), $log->get_date() );\n\t\t\t}\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/Controller.php","ext":"php","size":6524,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace Action_Scheduler\\Migration;\n\nuse ActionScheduler_DataController;\nuse ActionScheduler_LoggerSchema;\nuse ActionScheduler_StoreSchema;\nuse Action_Scheduler\\WP_CLI\\ProgressBar;\n\n/**\n * Class Controller\n *\n * The main plugin/initialization class for migration to custom tables.\n *\n * @package Action_Scheduler\\Migration\n *\n * @since 3.0.0\n *\n * @codeCoverageIgnore\n */\nclass Controller {\n\t/**\n\t * Instance.\n\t *\n\t * @var self\n\t */\n\tprivate static $instance;\n\n\t/**\n\t * Scheduler instance.\n\t *\n\t * @var Action_Scheduler\\Migration\\Scheduler\n\t */\n\tprivate $migration_scheduler;\n\n\t/**\n\t * Class name of the store object.\n\t *\n\t * @var string\n\t */\n\tprivate $store_classname;\n\n\t/**\n\t * Class name of the logger object.\n\t *\n\t * @var string\n\t */\n\tprivate $logger_classname;\n\n\t/**\n\t * Flag to indicate migrating custom store.\n\t *\n\t * @var bool\n\t */\n\tprivate $migrate_custom_store;\n\n\t/**\n\t * Controller constructor.\n\t *\n\t * @param Scheduler $migration_scheduler Migration scheduler object.\n\t */\n\tprotected function __construct( Scheduler $migration_scheduler ) {\n\t\t$this->migration_scheduler = $migration_scheduler;\n\t\t$this->store_classname     = '';\n\t}\n\n\t/**\n\t * Set the action store class name.\n\t *\n\t * @param string $class Classname of the store class.\n\t *\n\t * @return string\n\t */\n\tpublic function get_store_class( $class ) {\n\t\tif ( \\ActionScheduler_DataController::is_migration_complete() ) {\n\t\t\treturn \\ActionScheduler_DataController::DATASTORE_CLASS;\n\t\t} elseif ( \\ActionScheduler_Store::DEFAULT_CLASS !== $class ) {\n\t\t\t$this->store_classname = $class;\n\t\t\treturn $class;\n\t\t} else {\n\t\t\treturn 'ActionScheduler_HybridStore';\n\t\t}\n\t}\n\n\t/**\n\t * Set the action logger class name.\n\t *\n\t * @param string $class Classname of the logger class.\n\t *\n\t * @return string\n\t */\n\tpublic function get_logger_class( $class ) {\n\t\t\\ActionScheduler_Store::instance();\n\n\t\tif ( $this->has_custom_datastore() ) {\n\t\t\t$this->logger_classname = $class;\n\t\t\treturn $class;\n\t\t} else {\n\t\t\treturn \\ActionScheduler_DataController::LOGGER_CLASS;\n\t\t}\n\t}\n\n\t/**\n\t * Get flag indicating whether a custom datastore is in use.\n\t *\n\t * @return bool\n\t */\n\tpublic function has_custom_datastore() {\n\t\treturn (bool) $this->store_classname;\n\t}\n\n\t/**\n\t * Set up the background migration process.\n\t *\n\t * @return void\n\t */\n\tpublic function schedule_migration() {\n\t\t$logging_tables = new ActionScheduler_LoggerSchema();\n\t\t$store_tables   = new ActionScheduler_StoreSchema();\n\n\t\t/*\n\t\t * In some unusual cases, the expected tables may not have been created. In such cases\n\t\t * we do not schedule a migration as doing so will lead to fatal error conditions.\n\t\t *\n\t\t * In such cases the user will likely visit the Tools > Scheduled Actions screen to\n\t\t * investigate, and will see appropriate messaging (this step also triggers an attempt\n\t\t * to rebuild any missing tables).\n\t\t *\n\t\t * @see https://github.com/woocommerce/action-scheduler/issues/653\n\t\t */\n\t\tif (\n\t\t\tActionScheduler_DataController::is_migration_complete()\n\t\t\t|| $this->migration_scheduler->is_migration_scheduled()\n\t\t\t|| ! $store_tables->tables_exist()\n\t\t\t|| ! $logging_tables->tables_exist()\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->migration_scheduler->schedule_migration();\n\t}\n\n\t/**\n\t * Get the default migration config object\n\t *\n\t * @return ActionScheduler\\Migration\\Config\n\t */\n\tpublic function get_migration_config_object() {\n\t\tstatic $config = null;\n\n\t\tif ( ! $config ) {\n\t\t\t$source_store  = $this->store_classname ? new $this->store_classname() : new \\ActionScheduler_wpPostStore();\n\t\t\t$source_logger = $this->logger_classname ? new $this->logger_classname() : new \\ActionScheduler_wpCommentLogger();\n\n\t\t\t$config = new Config();\n\t\t\t$config->set_source_store( $source_store );\n\t\t\t$config->set_source_logger( $source_logger );\n\t\t\t$config->set_destination_store( new \\ActionScheduler_DBStoreMigrator() );\n\t\t\t$config->set_destination_logger( new \\ActionScheduler_DBLogger() );\n\n\t\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\t\t$config->set_progress_bar( new ProgressBar( '', 0 ) );\n\t\t\t}\n\t\t}\n\n\t\treturn apply_filters( 'action_scheduler/migration_config', $config ); // phpcs:ignore WordPress.NamingConventions.ValidHookName.UseUnderscores\n\t}\n\n\t/**\n\t * Hook dashboard migration notice.\n\t */\n\tpublic function hook_admin_notices() {\n\t\tif ( ! $this->allow_migration() || \\ActionScheduler_DataController::is_migration_complete() ) {\n\t\t\treturn;\n\t\t}\n\t\tadd_action( 'admin_notices', array( $this, 'display_migration_notice' ), 10, 0 );\n\t}\n\n\t/**\n\t * Show a dashboard notice that migration is in progress.\n\t */\n\tpublic function display_migration_notice() {\n\t\tprintf( '<div class=\"notice notice-warning\"><p>%s</p></div>', esc_html__( 'Action Scheduler migration in progress. The list of scheduled actions may be incomplete.', 'action-scheduler' ) );\n\t}\n\n\t/**\n\t * Add store classes. Hook migration.\n\t */\n\tprivate function hook() {\n\t\tadd_filter( 'action_scheduler_store_class', array( $this, 'get_store_class' ), 100, 1 );\n\t\tadd_filter( 'action_scheduler_logger_class', array( $this, 'get_logger_class' ), 100, 1 );\n\t\tadd_action( 'init', array( $this, 'maybe_hook_migration' ) );\n\t\tadd_action( 'wp_loaded', array( $this, 'schedule_migration' ) );\n\n\t\t// Action Scheduler may be displayed as a Tools screen or WooCommerce > Status administration screen.\n\t\tadd_action( 'load-tools_page_action-scheduler', array( $this, 'hook_admin_notices' ), 10, 0 );\n\t\tadd_action( 'load-woocommerce_page_wc-status', array( $this, 'hook_admin_notices' ), 10, 0 );\n\t}\n\n\t/**\n\t * Possibly hook the migration scheduler action.\n\t */\n\tpublic function maybe_hook_migration() {\n\t\tif ( ! $this->allow_migration() || \\ActionScheduler_DataController::is_migration_complete() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->migration_scheduler->hook();\n\t}\n\n\t/**\n\t * Allow datastores to enable migration to AS tables.\n\t */\n\tpublic function allow_migration() {\n\t\tif ( ! \\ActionScheduler_DataController::dependencies_met() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( null === $this->migrate_custom_store ) {\n\t\t\t$this->migrate_custom_store = apply_filters( 'action_scheduler_migrate_data_store', false );\n\t\t}\n\n\t\treturn ( ! $this->has_custom_datastore() ) || $this->migrate_custom_store;\n\t}\n\n\t/**\n\t * Proceed with the migration if the dependencies have been met.\n\t */\n\tpublic static function init() {\n\t\tif ( \\ActionScheduler_DataController::dependencies_met() ) {\n\t\t\tself::instance()->hook();\n\t\t}\n\t}\n\n\t/**\n\t * Singleton factory.\n\t */\n\tpublic static function instance() {\n\t\tif ( ! isset( self::$instance ) ) {\n\t\t\tself::$instance = new static( new Scheduler() );\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/migration/ActionScheduler_DBStoreMigrator.php","ext":"php","size":1835,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_DBStoreMigrator\n *\n * A class for direct saving of actions to the table data store during migration.\n *\n * @since 3.0.0\n */\nclass ActionScheduler_DBStoreMigrator extends ActionScheduler_DBStore {\n\n\t/**\n\t * Save an action with optional last attempt date.\n\t *\n\t * Normally, saving an action sets its attempted date to 0000-00-00 00:00:00 because when an action is first saved,\n\t * it can't have been attempted yet, but migrated completed actions will have an attempted date, so we need to save\n\t * that when first saving the action.\n\t *\n\t * @param ActionScheduler_Action $action Action to migrate.\n\t * @param null|DateTime          $scheduled_date Optional date of the first instance to store.\n\t * @param null|DateTime          $last_attempt_date Optional date the action was last attempted.\n\t *\n\t * @return string The action ID\n\t * @throws \\RuntimeException When the action is not saved.\n\t */\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null, ?DateTime $last_attempt_date = null ) {\n\t\ttry {\n\t\t\t/**\n\t\t\t * Global.\n\t\t\t *\n\t\t\t * @var \\wpdb $wpdb\n\t\t\t */\n\t\t\tglobal $wpdb;\n\n\t\t\t$action_id = parent::save_action( $action, $scheduled_date );\n\n\t\t\tif ( null !== $last_attempt_date ) {\n\t\t\t\t$data = array(\n\t\t\t\t\t'last_attempt_gmt'   => $this->get_scheduled_date_string( $action, $last_attempt_date ),\n\t\t\t\t\t'last_attempt_local' => $this->get_scheduled_date_string_local( $action, $last_attempt_date ),\n\t\t\t\t);\n\n\t\t\t\t$wpdb->update( $wpdb->actionscheduler_actions, $data, array( 'action_id' => $action_id ), array( '%s', '%s' ), array( '%d' ) );\n\t\t\t}\n\n\t\t\treturn $action_id;\n\t\t} catch ( \\Exception $e ) {\n\t\t\t// translators: %s is an error message.\n\t\t\tthrow new \\RuntimeException( sprintf( __( 'Error saving action: %s', 'action-scheduler' ), $e->getMessage() ), 0 );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_FatalErrorMonitor.php","ext":"php","size":2565,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_FatalErrorMonitor\n */\nclass ActionScheduler_FatalErrorMonitor {\n\n\t/**\n\t * ActionScheduler_ActionClaim instance.\n\t *\n\t * @var ActionScheduler_ActionClaim\n\t */\n\tprivate $claim = null;\n\n\t/**\n\t * ActionScheduler_Store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $store = null;\n\n\t/**\n\t * Current action's ID.\n\t *\n\t * @var int\n\t */\n\tprivate $action_id = 0;\n\n\t/**\n\t * Construct.\n\t *\n\t * @param ActionScheduler_Store $store Action store.\n\t */\n\tpublic function __construct( ActionScheduler_Store $store ) {\n\t\t$this->store = $store;\n\t}\n\n\t/**\n\t * Start monitoring.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claimed actions.\n\t */\n\tpublic function attach( ActionScheduler_ActionClaim $claim ) {\n\t\t$this->claim = $claim;\n\t\tadd_action( 'shutdown', array( $this, 'handle_unexpected_shutdown' ) );\n\t\tadd_action( 'action_scheduler_before_execute', array( $this, 'track_current_action' ), 0, 1 );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'untrack_action' ), 0, 0 );\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'untrack_action' ), 0, 0 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'untrack_action' ), 0, 0 );\n\t}\n\n\t/**\n\t * Stop monitoring.\n\t */\n\tpublic function detach() {\n\t\t$this->claim = null;\n\t\t$this->untrack_action();\n\t\tremove_action( 'shutdown', array( $this, 'handle_unexpected_shutdown' ) );\n\t\tremove_action( 'action_scheduler_before_execute', array( $this, 'track_current_action' ), 0 );\n\t\tremove_action( 'action_scheduler_after_execute', array( $this, 'untrack_action' ), 0 );\n\t\tremove_action( 'action_scheduler_execution_ignored', array( $this, 'untrack_action' ), 0 );\n\t\tremove_action( 'action_scheduler_failed_execution', array( $this, 'untrack_action' ), 0 );\n\t}\n\n\t/**\n\t * Track specified action.\n\t *\n\t * @param int $action_id Action ID to track.\n\t */\n\tpublic function track_current_action( $action_id ) {\n\t\t$this->action_id = $action_id;\n\t}\n\n\t/**\n\t * Un-track action.\n\t */\n\tpublic function untrack_action() {\n\t\t$this->action_id = 0;\n\t}\n\n\t/**\n\t * Handle unexpected shutdown.\n\t */\n\tpublic function handle_unexpected_shutdown() {\n\t\t$error = error_get_last();\n\n\t\tif ( $error ) {\n\t\t\tif ( in_array( $error['type'], array( E_ERROR, E_PARSE, E_COMPILE_ERROR, E_USER_ERROR, E_RECOVERABLE_ERROR ), true ) ) {\n\t\t\t\tif ( ! empty( $this->action_id ) ) {\n\t\t\t\t\t$this->store->mark_failure( $this->action_id );\n\t\t\t\t\tdo_action( 'action_scheduler_unexpected_shutdown', $this->action_id, $error );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$this->store->release_claim( $this->claim );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_OptionLock.php","ext":"php","size":4076,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Provide a way to set simple transient locks to block behaviour\n * for up-to a given duration.\n *\n * Class ActionScheduler_OptionLock\n *\n * @since 3.0.0\n */\nclass ActionScheduler_OptionLock extends ActionScheduler_Lock {\n\n\t/**\n\t * Set a lock using options for a given amount of time (60 seconds by default).\n\t *\n\t * Using an autoloaded option avoids running database queries or other resource intensive tasks\n\t * on frequently triggered hooks, like 'init' or 'shutdown'.\n\t *\n\t * For example, ActionScheduler_QueueRunner->maybe_dispatch_async_request() uses a lock to avoid\n\t * calling ActionScheduler_QueueRunner->has_maximum_concurrent_batches() every time the 'shutdown',\n\t * hook is triggered, because that method calls ActionScheduler_QueueRunner->store->get_claim_count()\n\t * to find the current number of claims in the database.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @bool True if lock value has changed, false if not or if set failed.\n\t */\n\tpublic function set( $lock_type ) {\n\t\tglobal $wpdb;\n\n\t\t$lock_key            = $this->get_key( $lock_type );\n\t\t$existing_lock_value = $this->get_existing_lock( $lock_type );\n\t\t$new_lock_value      = $this->new_lock_value( $lock_type );\n\n\t\t// The lock may not exist yet, or may have been deleted.\n\t\tif ( empty( $existing_lock_value ) ) {\n\t\t\treturn (bool) $wpdb->insert(\n\t\t\t\t$wpdb->options,\n\t\t\t\tarray(\n\t\t\t\t\t'option_name'  => $lock_key,\n\t\t\t\t\t'option_value' => $new_lock_value,\n\t\t\t\t\t'autoload'     => 'no',\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif ( $this->get_expiration_from( $existing_lock_value ) >= time() ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Otherwise, try to obtain the lock.\n\t\treturn (bool) $wpdb->update(\n\t\t\t$wpdb->options,\n\t\t\tarray( 'option_value' => $new_lock_value ),\n\t\t\tarray(\n\t\t\t\t'option_name'  => $lock_key,\n\t\t\t\t'option_value' => $existing_lock_value,\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * If a lock is set, return the timestamp it was set to expiry.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return bool|int False if no lock is set, otherwise the timestamp for when the lock is set to expire.\n\t */\n\tpublic function get_expiration( $lock_type ) {\n\t\treturn $this->get_expiration_from( $this->get_existing_lock( $lock_type ) );\n\t}\n\n\t/**\n\t * Given the lock string, derives the lock expiration timestamp (or false if it cannot be determined).\n\t *\n\t * @param string $lock_value String containing a timestamp, or pipe-separated combination of unique value and timestamp.\n\t *\n\t * @return false|int\n\t */\n\tprivate function get_expiration_from( $lock_value ) {\n\t\t$lock_string = explode( '|', $lock_value );\n\n\t\t// Old style lock?\n\t\tif ( count( $lock_string ) === 1 && is_numeric( $lock_string[0] ) ) {\n\t\t\treturn (int) $lock_string[0];\n\t\t}\n\n\t\t// New style lock?\n\t\tif ( count( $lock_string ) === 2 && is_numeric( $lock_string[1] ) ) {\n\t\t\treturn (int) $lock_string[1];\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get the key to use for storing the lock in the transient\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t * @return string\n\t */\n\tprotected function get_key( $lock_type ) {\n\t\treturn sprintf( 'action_scheduler_lock_%s', $lock_type );\n\t}\n\n\t/**\n\t * Supplies the existing lock value, or an empty string if not set.\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t *\n\t * @return string\n\t */\n\tprivate function get_existing_lock( $lock_type ) {\n\t\tglobal $wpdb;\n\n\t\t// Now grab the existing lock value, if there is one.\n\t\treturn (string) $wpdb->get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT option_value FROM $wpdb->options WHERE option_name = %s\",\n\t\t\t\t$this->get_key( $lock_type )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Supplies a lock value consisting of a unique value and the current timestamp, which are separated by a pipe\n\t * character.\n\t *\n\t * Example: (string) \"649de012e6b262.09774912|1688068114\"\n\t *\n\t * @param string $lock_type A string to identify different lock types.\n\t *\n\t * @return string\n\t */\n\tprivate function new_lock_value( $lock_type ) {\n\t\treturn uniqid( '', true ) . '|' . ( time() + $this->get_duration( $lock_type ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_WPCommentCleaner.php","ext":"php","size":4529,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_WPCommentCleaner\n *\n * @since 3.0.0\n */\nclass ActionScheduler_WPCommentCleaner {\n\n\t/**\n\t * Post migration hook used to cleanup the WP comment table.\n\t *\n\t * @var string\n\t */\n\tprotected static $cleanup_hook = 'action_scheduler/cleanup_wp_comment_logs';\n\n\t/**\n\t * An instance of the ActionScheduler_wpCommentLogger class to interact with the comments table.\n\t *\n\t * This instance should only be used as an interface. It should not be initialized.\n\t *\n\t * @var ActionScheduler_wpCommentLogger\n\t */\n\tprotected static $wp_comment_logger = null;\n\n\t/**\n\t * The key used to store the cached value of whether there are logs in the WP comment table.\n\t *\n\t * @var string\n\t */\n\tprotected static $has_logs_option_key = 'as_has_wp_comment_logs';\n\n\t/**\n\t * Initialize the class and attach callbacks.\n\t */\n\tpublic static function init() {\n\t\tif ( empty( self::$wp_comment_logger ) ) {\n\t\t\tself::$wp_comment_logger = new ActionScheduler_wpCommentLogger();\n\t\t}\n\n\t\tadd_action( self::$cleanup_hook, array( __CLASS__, 'delete_all_action_comments' ) );\n\n\t\t// While there are orphaned logs left in the comments table, we need to attach the callbacks which filter comment counts.\n\t\tadd_action( 'pre_get_comments', array( self::$wp_comment_logger, 'filter_comment_queries' ), 10, 1 );\n\t\tadd_action( 'wp_count_comments', array( self::$wp_comment_logger, 'filter_comment_count' ), 20, 2 ); // run after WC_Comments::wp_count_comments() to make sure we exclude order notes and action logs.\n\t\tadd_action( 'comment_feed_where', array( self::$wp_comment_logger, 'filter_comment_feed' ), 10, 2 );\n\n\t\t// Action Scheduler may be displayed as a Tools screen or WooCommerce > Status administration screen.\n\t\tadd_action( 'load-tools_page_action-scheduler', array( __CLASS__, 'register_admin_notice' ) );\n\t\tadd_action( 'load-woocommerce_page_wc-status', array( __CLASS__, 'register_admin_notice' ) );\n\t}\n\n\t/**\n\t * Determines if there are log entries in the wp comments table.\n\t *\n\t * Uses the flag set on migration completion set by @see self::maybe_schedule_cleanup().\n\t *\n\t * @return boolean Whether there are scheduled action comments in the comments table.\n\t */\n\tpublic static function has_logs() {\n\t\treturn 'yes' === get_option( self::$has_logs_option_key );\n\t}\n\n\t/**\n\t * Schedules the WP Post comment table cleanup to run in 6 months if it's not already scheduled.\n\t * Attached to the migration complete hook 'action_scheduler/migration_complete'.\n\t */\n\tpublic static function maybe_schedule_cleanup() {\n\t\t$has_logs = 'no';\n\n\t\t$args = array(\n\t\t\t'type'   => ActionScheduler_wpCommentLogger::TYPE,\n\t\t\t'number' => 1,\n\t\t\t'fields' => 'ids',\n\t\t);\n\n\t\tif ( (bool) get_comments( $args ) ) {\n\t\t\t$has_logs = 'yes';\n\n\t\t\tif ( ! as_next_scheduled_action( self::$cleanup_hook ) ) {\n\t\t\t\tas_schedule_single_action( gmdate( 'U' ) + ( 6 * MONTH_IN_SECONDS ), self::$cleanup_hook );\n\t\t\t}\n\t\t}\n\n\t\tupdate_option( self::$has_logs_option_key, $has_logs, true );\n\t}\n\n\t/**\n\t * Delete all action comments from the WP Comments table.\n\t */\n\tpublic static function delete_all_action_comments() {\n\t\tglobal $wpdb;\n\n\t\t$wpdb->delete(\n\t\t\t$wpdb->comments,\n\t\t\tarray(\n\t\t\t\t'comment_type'  => ActionScheduler_wpCommentLogger::TYPE,\n\t\t\t\t'comment_agent' => ActionScheduler_wpCommentLogger::AGENT,\n\t\t\t)\n\t\t);\n\n\t\tupdate_option( self::$has_logs_option_key, 'no', true );\n\t}\n\n\t/**\n\t * Registers admin notices about the orphaned action logs.\n\t */\n\tpublic static function register_admin_notice() {\n\t\tadd_action( 'admin_notices', array( __CLASS__, 'print_admin_notice' ) );\n\t}\n\n\t/**\n\t * Prints details about the orphaned action logs and includes information on where to learn more.\n\t */\n\tpublic static function print_admin_notice() {\n\t\t$next_cleanup_message        = '';\n\t\t$next_scheduled_cleanup_hook = as_next_scheduled_action( self::$cleanup_hook );\n\n\t\tif ( $next_scheduled_cleanup_hook ) {\n\t\t\t/* translators: %s: date interval */\n\t\t\t$next_cleanup_message = sprintf( __( 'This data will be deleted in %s.', 'action-scheduler' ), human_time_diff( gmdate( 'U' ), $next_scheduled_cleanup_hook ) );\n\t\t}\n\n\t\t$notice = sprintf(\n\t\t\t/* translators: 1: next cleanup message 2: github issue URL */\n\t\t\t__( 'Action Scheduler has migrated data to custom tables; however, orphaned log entries exist in the WordPress Comments table. %1$s <a href=\"%2$s\">Learn more &raquo;</a>', 'action-scheduler' ),\n\t\t\t$next_cleanup_message,\n\t\t\t'https://github.com/woocommerce/action-scheduler/issues/368'\n\t\t);\n\n\t\techo '<div class=\"notice notice-warning\"><p>' . wp_kses_post( $notice ) . '</p></div>';\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/actions/ActionScheduler_NullAction.php","ext":"php","size":601,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_NullAction\n */\nclass ActionScheduler_NullAction extends ActionScheduler_Action {\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string                        $hook Action hook.\n\t * @param mixed[]                       $args Action arguments.\n\t * @param null|ActionScheduler_Schedule $schedule Action schedule.\n\t */\n\tpublic function __construct( $hook = '', array $args = array(), ?ActionScheduler_Schedule $schedule = null ) {\n\t\t$this->set_schedule( new ActionScheduler_NullSchedule() );\n\t}\n\n\t/**\n\t * Execute action.\n\t */\n\tpublic function execute() {\n\t\t// don't execute.\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/actions/ActionScheduler_CanceledAction.php","ext":"php","size":883,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_CanceledAction\n *\n * Stored action which was canceled and therefore acts like a finished action but should always return a null schedule,\n * regardless of schedule passed to its constructor.\n */\nclass ActionScheduler_CanceledAction extends ActionScheduler_FinishedAction {\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string                        $hook Action's hook.\n\t * @param array                         $args Action's arguments.\n\t * @param null|ActionScheduler_Schedule $schedule Action's schedule.\n\t * @param string                        $group Action's group.\n\t */\n\tpublic function __construct( $hook, array $args = array(), ?ActionScheduler_Schedule $schedule = null, $group = '' ) {\n\t\tparent::__construct( $hook, $args, $schedule, $group );\n\t\tif ( is_null( $schedule ) ) {\n\t\t\t$this->set_schedule( new ActionScheduler_NullSchedule() );\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/actions/ActionScheduler_FinishedAction.php","ext":"php","size":296,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_FinishedAction\n */\nclass ActionScheduler_FinishedAction extends ActionScheduler_Action {\n\n\t/**\n\t * Execute action.\n\t */\n\tpublic function execute() {\n\t\t// don't execute.\n\t}\n\n\t/**\n\t * Get finished state.\n\t */\n\tpublic function is_finished() {\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/actions/ActionScheduler_Action.php","ext":"php","size":3912,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_Action\n */\nclass ActionScheduler_Action {\n\t/**\n\t * Action's hook.\n\t *\n\t * @var string\n\t */\n\tprotected $hook = '';\n\n\t/**\n\t * Action's args.\n\t *\n\t * @var array<string, mixed>\n\t */\n\tprotected $args = array();\n\n\t/**\n\t * Action's schedule.\n\t *\n\t * @var ActionScheduler_Schedule\n\t */\n\tprotected $schedule = null;\n\n\t/**\n\t * Action's group.\n\t *\n\t * @var string\n\t */\n\tprotected $group = '';\n\n\t/**\n\t * Priorities are conceptually similar to those used for regular WordPress actions.\n\t * Like those, a lower priority takes precedence over a higher priority and the default\n\t * is 10.\n\t *\n\t * Unlike regular WordPress actions, the priority of a scheduled action is strictly an\n\t * integer and should be kept within the bounds 0-255 (anything outside the bounds will\n\t * be brought back into the acceptable range).\n\t *\n\t * @var int\n\t */\n\tprotected $priority = 10;\n\n\t/**\n\t * Construct.\n\t *\n\t * @param string                        $hook Action's hook.\n\t * @param mixed[]                       $args Action's arguments.\n\t * @param null|ActionScheduler_Schedule $schedule Action's schedule.\n\t * @param string                        $group Action's group.\n\t */\n\tpublic function __construct( $hook, array $args = array(), ?ActionScheduler_Schedule $schedule = null, $group = '' ) {\n\t\t$schedule = empty( $schedule ) ? new ActionScheduler_NullSchedule() : $schedule;\n\t\t$this->set_hook( $hook );\n\t\t$this->set_schedule( $schedule );\n\t\t$this->set_args( $args );\n\t\t$this->set_group( $group );\n\t}\n\n\t/**\n\t * Executes the action.\n\t *\n\t * If no callbacks are registered, an exception will be thrown and the action will not be\n\t * fired. This is useful to help detect cases where the code responsible for setting up\n\t * a scheduled action no longer exists.\n\t *\n\t * @throws Exception If no callbacks are registered for this action.\n\t */\n\tpublic function execute() {\n\t\t$hook = $this->get_hook();\n\n\t\tif ( ! has_action( $hook ) ) {\n\t\t\tthrow new Exception(\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: 1: action hook. */\n\t\t\t\t\t__( 'Scheduled action for %1$s will not be executed as no callbacks are registered.', 'action-scheduler' ),\n\t\t\t\t\t$hook\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tdo_action_ref_array( $hook, array_values( $this->get_args() ) );\n\t}\n\n\t/**\n\t * Set action's hook.\n\t *\n\t * @param string $hook Action's hook.\n\t */\n\tprotected function set_hook( $hook ) {\n\t\t$this->hook = $hook;\n\t}\n\n\t/**\n\t * Get action's hook.\n\t */\n\tpublic function get_hook() {\n\t\treturn $this->hook;\n\t}\n\n\t/**\n\t * Set action's schedule.\n\t *\n\t * @param ActionScheduler_Schedule $schedule Action's schedule.\n\t */\n\tprotected function set_schedule( ActionScheduler_Schedule $schedule ) {\n\t\t$this->schedule = $schedule;\n\t}\n\n\t/**\n\t * Action's schedule.\n\t *\n\t * @return ActionScheduler_Schedule\n\t */\n\tpublic function get_schedule() {\n\t\treturn $this->schedule;\n\t}\n\n\t/**\n\t * Set action's args.\n\t *\n\t * @param mixed[] $args Action's arguments.\n\t */\n\tprotected function set_args( array $args ) {\n\t\t$this->args = $args;\n\t}\n\n\t/**\n\t * Get action's args.\n\t */\n\tpublic function get_args() {\n\t\treturn $this->args;\n\t}\n\n\t/**\n\t * Section action's group.\n\t *\n\t * @param string $group Action's group.\n\t */\n\tprotected function set_group( $group ) {\n\t\t$this->group = $group;\n\t}\n\n\t/**\n\t * Action's group.\n\t *\n\t * @return string\n\t */\n\tpublic function get_group() {\n\t\treturn $this->group;\n\t}\n\n\t/**\n\t * Action has not finished.\n\t *\n\t * @return bool\n\t */\n\tpublic function is_finished() {\n\t\treturn false;\n\t}\n\n\t/**\n\t * Sets the priority of the action.\n\t *\n\t * @param int $priority Priority level (lower is higher priority). Should be in the range 0-255.\n\t *\n\t * @return void\n\t */\n\tpublic function set_priority( $priority ) {\n\t\tif ( $priority < 0 ) {\n\t\t\t$priority = 0;\n\t\t} elseif ( $priority > 255 ) {\n\t\t\t$priority = 255;\n\t\t}\n\n\t\t$this->priority = (int) $priority;\n\t}\n\n\t/**\n\t * Gets the action priority.\n\t *\n\t * @return int\n\t */\n\tpublic function get_priority() {\n\t\treturn $this->priority;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_DBLogger.php","ext":"php","size":4496,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_DBLogger\n *\n * Action logs data table data store.\n *\n * @since 3.0.0\n */\nclass ActionScheduler_DBLogger extends ActionScheduler_Logger {\n\n\t/**\n\t * Add a record to an action log.\n\t *\n\t * @param int           $action_id Action ID.\n\t * @param string        $message Message to be saved in the log entry.\n\t * @param DateTime|null $date Timestamp of the log entry.\n\t *\n\t * @return int     The log entry ID.\n\t */\n\tpublic function log( $action_id, $message, ?DateTime $date = null ) {\n\t\tif ( empty( $date ) ) {\n\t\t\t$date = as_get_datetime_object();\n\t\t} else {\n\t\t\t$date = clone $date;\n\t\t}\n\n\t\t$date_gmt = $date->format( 'Y-m-d H:i:s' );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\t$date_local = $date->format( 'Y-m-d H:i:s' );\n\n\t\t/** @var \\wpdb $wpdb */ //phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$wpdb->insert(\n\t\t\t$wpdb->actionscheduler_logs,\n\t\t\tarray(\n\t\t\t\t'action_id'      => $action_id,\n\t\t\t\t'message'        => $message,\n\t\t\t\t'log_date_gmt'   => $date_gmt,\n\t\t\t\t'log_date_local' => $date_local,\n\t\t\t),\n\t\t\tarray( '%d', '%s', '%s', '%s' )\n\t\t);\n\n\t\treturn $wpdb->insert_id;\n\t}\n\n\t/**\n\t * Retrieve an action log entry.\n\t *\n\t * @param int $entry_id Log entry ID.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t */\n\tpublic function get_entry( $entry_id ) {\n\t\t/** @var \\wpdb $wpdb */ //phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$entry = $wpdb->get_row( $wpdb->prepare( \"SELECT * FROM {$wpdb->actionscheduler_logs} WHERE log_id=%d\", $entry_id ) );\n\n\t\treturn $this->create_entry_from_db_record( $entry );\n\t}\n\n\t/**\n\t * Create an action log entry from a database record.\n\t *\n\t * @param object $record Log entry database record object.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t */\n\tprivate function create_entry_from_db_record( $record ) {\n\t\tif ( empty( $record ) ) {\n\t\t\treturn new ActionScheduler_NullLogEntry();\n\t\t}\n\n\t\tif ( is_null( $record->log_date_gmt ) ) {\n\t\t\t$date = as_get_datetime_object( ActionScheduler_StoreSchema::DEFAULT_DATE );\n\t\t} else {\n\t\t\t$date = as_get_datetime_object( $record->log_date_gmt );\n\t\t}\n\n\t\treturn new ActionScheduler_LogEntry( $record->action_id, $record->message, $date );\n\t}\n\n\t/**\n\t * Retrieve an action's log entries from the database.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t */\n\tpublic function get_logs( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */ //phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\n\t\t$records = $wpdb->get_results( $wpdb->prepare( \"SELECT * FROM {$wpdb->actionscheduler_logs} WHERE action_id=%d\", $action_id ) );\n\n\t\treturn array_map( array( $this, 'create_entry_from_db_record' ), $records );\n\t}\n\n\t/**\n\t * Initialize the data store.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\t$table_maker = new ActionScheduler_LoggerSchema();\n\t\t$table_maker->init();\n\t\t$table_maker->register_tables();\n\n\t\tparent::init();\n\n\t\tadd_action( 'action_scheduler_deleted_action', array( $this, 'clear_deleted_action_logs' ), 10, 1 );\n\t}\n\n\t/**\n\t * Delete the action logs for an action.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function clear_deleted_action_logs( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */ //phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$wpdb->delete( $wpdb->actionscheduler_logs, array( 'action_id' => $action_id ), array( '%d' ) );\n\t}\n\n\t/**\n\t * Bulk add cancel action log entries.\n\t *\n\t * @param array $action_ids List of action ID.\n\t */\n\tpublic function bulk_log_cancel_actions( $action_ids ) {\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t/** @var \\wpdb $wpdb */ //phpcs:ignore Generic.Commenting.DocComment.MissingShort\n\t\tglobal $wpdb;\n\t\t$date     = as_get_datetime_object();\n\t\t$date_gmt = $date->format( 'Y-m-d H:i:s' );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\t$date_local = $date->format( 'Y-m-d H:i:s' );\n\t\t$message    = __( 'action canceled', 'action-scheduler' );\n\t\t$format     = '(%d, ' . $wpdb->prepare( '%s, %s, %s', $message, $date_gmt, $date_local ) . ')';\n\t\t$sql_query  = \"INSERT {$wpdb->actionscheduler_logs} (action_id, message, log_date_gmt, log_date_local) VALUES \";\n\t\t$value_rows = array();\n\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$value_rows[] = $wpdb->prepare( $format, $action_id ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\t\t$sql_query .= implode( ',', $value_rows );\n\n\t\t$wpdb->query( $sql_query ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_wpPostStore.php","ext":"php","size":36619,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_wpPostStore\n */\nclass ActionScheduler_wpPostStore extends ActionScheduler_Store {\n\tconst POST_TYPE         = 'scheduled-action';\n\tconst GROUP_TAXONOMY    = 'action-group';\n\tconst SCHEDULE_META_KEY = '_action_manager_schedule';\n\tconst DEPENDENCIES_MET  = 'as-post-store-dependencies-met';\n\n\t/**\n\t * Used to share information about the before_date property of claims internally.\n\t *\n\t * This is used in preference to passing the same information as a method param\n\t * for backwards-compatibility reasons.\n\t *\n\t * @var DateTime|null\n\t */\n\tprivate $claim_before_date = null;\n\n\t/**\n\t * Local Timezone.\n\t *\n\t * @var DateTimeZone\n\t */\n\tprotected $local_timezone = null;\n\n\t/**\n\t * Save action.\n\t *\n\t * @param ActionScheduler_Action $action Scheduled Action.\n\t * @param DateTime|null          $scheduled_date Scheduled Date.\n\t *\n\t * @throws RuntimeException Throws an exception if the action could not be saved.\n\t * @return int\n\t */\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\ttry {\n\t\t\t$this->validate_action( $action );\n\t\t\t$post_array = $this->create_post_array( $action, $scheduled_date );\n\t\t\t$post_id    = $this->save_post_array( $post_array );\n\t\t\t$this->save_post_schedule( $post_id, $action->get_schedule() );\n\t\t\t$this->save_action_group( $post_id, $action->get_group() );\n\t\t\tdo_action( 'action_scheduler_stored_action', $post_id );\n\t\t\treturn $post_id;\n\t\t} catch ( Exception $e ) {\n\t\t\t/* translators: %s: action error message */\n\t\t\tthrow new RuntimeException( sprintf( __( 'Error saving action: %s', 'action-scheduler' ), $e->getMessage() ), 0 );\n\t\t}\n\t}\n\n\t/**\n\t * Create post array.\n\t *\n\t * @param ActionScheduler_Action $action Scheduled Action.\n\t * @param DateTime|null          $scheduled_date Scheduled Date.\n\t *\n\t * @return array Returns an array of post data.\n\t */\n\tprotected function create_post_array( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\t$post = array(\n\t\t\t'post_type'     => self::POST_TYPE,\n\t\t\t'post_title'    => $action->get_hook(),\n\t\t\t'post_content'  => wp_json_encode( $action->get_args() ),\n\t\t\t'post_status'   => ( $action->is_finished() ? 'publish' : 'pending' ),\n\t\t\t'post_date_gmt' => $this->get_scheduled_date_string( $action, $scheduled_date ),\n\t\t\t'post_date'     => $this->get_scheduled_date_string_local( $action, $scheduled_date ),\n\t\t);\n\t\treturn $post;\n\t}\n\n\t/**\n\t * Save post array.\n\t *\n\t * @param array $post_array Post array.\n\t * @return int Returns the post ID.\n\t * @throws RuntimeException Throws an exception if the action could not be saved.\n\t */\n\tprotected function save_post_array( $post_array ) {\n\t\tadd_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10, 1 );\n\t\tadd_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10, 5 );\n\n\t\t$has_kses = false !== has_filter( 'content_save_pre', 'wp_filter_post_kses' );\n\n\t\tif ( $has_kses ) {\n\t\t\t// Prevent KSES from corrupting JSON in post_content.\n\t\t\tkses_remove_filters();\n\t\t}\n\n\t\t$post_id = wp_insert_post( $post_array );\n\n\t\tif ( $has_kses ) {\n\t\t\tkses_init_filters();\n\t\t}\n\n\t\tremove_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10 );\n\t\tremove_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10 );\n\n\t\tif ( is_wp_error( $post_id ) || empty( $post_id ) ) {\n\t\t\tthrow new RuntimeException( __( 'Unable to save action.', 'action-scheduler' ) );\n\t\t}\n\t\treturn $post_id;\n\t}\n\n\t/**\n\t * Filter insert post data.\n\t *\n\t * @param array $postdata Post data to filter.\n\t *\n\t * @return array\n\t */\n\tpublic function filter_insert_post_data( $postdata ) {\n\t\tif ( self::POST_TYPE === $postdata['post_type'] ) {\n\t\t\t$postdata['post_author'] = 0;\n\t\t\tif ( 'future' === $postdata['post_status'] ) {\n\t\t\t\t$postdata['post_status'] = 'publish';\n\t\t\t}\n\t\t}\n\t\treturn $postdata;\n\t}\n\n\t/**\n\t * Create a (probably unique) post name for scheduled actions in a more performant manner than wp_unique_post_slug().\n\t *\n\t * When an action's post status is transitioned to something other than 'draft', 'pending' or 'auto-draft, like 'publish'\n\t * or 'failed' or 'trash', WordPress will find a unique slug (stored in post_name column) using the wp_unique_post_slug()\n\t * function. This is done to ensure URL uniqueness. The approach taken by wp_unique_post_slug() is to iterate over existing\n\t * post_name values that match, and append a number 1 greater than the largest. This makes sense when manually creating a\n\t * post from the Edit Post screen. It becomes a bottleneck when automatically processing thousands of actions, with a\n\t * database containing thousands of related post_name values.\n\t *\n\t * WordPress 5.1 introduces the 'pre_wp_unique_post_slug' filter for plugins to address this issue.\n\t *\n\t * We can short-circuit WordPress's wp_unique_post_slug() approach using the 'pre_wp_unique_post_slug' filter. This\n\t * method is available to be used as a callback on that filter. It provides a more scalable approach to generating a\n\t * post_name/slug that is probably unique. Because Action Scheduler never actually uses the post_name field, or an\n\t * action's slug, being probably unique is good enough.\n\t *\n\t * For more backstory on this issue, see:\n\t * - https://github.com/woocommerce/action-scheduler/issues/44 and\n\t * - https://core.trac.wordpress.org/ticket/21112\n\t *\n\t * @param string $override_slug Short-circuit return value.\n\t * @param string $slug          The desired slug (post_name).\n\t * @param int    $post_ID       Post ID.\n\t * @param string $post_status   The post status.\n\t * @param string $post_type     Post type.\n\t * @return string\n\t */\n\tpublic function set_unique_post_slug( $override_slug, $slug, $post_ID, $post_status, $post_type ) {\n\t\tif ( self::POST_TYPE === $post_type ) {\n\t\t\t$override_slug = uniqid( self::POST_TYPE . '-', true ) . '-' . wp_generate_password( 32, false );\n\t\t}\n\t\treturn $override_slug;\n\t}\n\n\t/**\n\t * Save post schedule.\n\t *\n\t * @param int    $post_id  Post ID of the scheduled action.\n\t * @param string $schedule Schedule to save.\n\t *\n\t * @return void\n\t */\n\tprotected function save_post_schedule( $post_id, $schedule ) {\n\t\tupdate_post_meta( $post_id, self::SCHEDULE_META_KEY, $schedule );\n\t}\n\n\t/**\n\t * Save action group.\n\t *\n\t * @param int    $post_id Post ID.\n\t * @param string $group   Group to save.\n\t * @return void\n\t */\n\tprotected function save_action_group( $post_id, $group ) {\n\t\tif ( empty( $group ) ) {\n\t\t\twp_set_object_terms( $post_id, array(), self::GROUP_TAXONOMY, false );\n\t\t} else {\n\t\t\twp_set_object_terms( $post_id, array( $group ), self::GROUP_TAXONOMY, false );\n\t\t}\n\t}\n\n\t/**\n\t * Fetch actions.\n\t *\n\t * @param int $action_id Action ID.\n\t * @return object\n\t */\n\tpublic function fetch_action( $action_id ) {\n\t\t$post = $this->get_post( $action_id );\n\t\tif ( empty( $post ) || self::POST_TYPE !== $post->post_type ) {\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\ttry {\n\t\t\t$action = $this->make_action_from_post( $post );\n\t\t} catch ( ActionScheduler_InvalidActionException $exception ) {\n\t\t\tdo_action( 'action_scheduler_failed_fetch_action', $post->ID, $exception );\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\treturn $action;\n\t}\n\n\t/**\n\t * Get post.\n\t *\n\t * @param string $action_id - Action ID.\n\t * @return WP_Post|null\n\t */\n\tprotected function get_post( $action_id ) {\n\t\tif ( empty( $action_id ) ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn get_post( $action_id );\n\t}\n\n\t/**\n\t * Get NULL action.\n\t *\n\t * @return ActionScheduler_NullAction\n\t */\n\tprotected function get_null_action() {\n\t\treturn new ActionScheduler_NullAction();\n\t}\n\n\t/**\n\t * Make action from post.\n\t *\n\t * @param WP_Post $post Post object.\n\t * @return WP_Post\n\t */\n\tprotected function make_action_from_post( $post ) {\n\t\t$hook = $post->post_title;\n\n\t\t$args = json_decode( $post->post_content, true );\n\t\t$this->validate_args( $args, $post->ID );\n\n\t\t$schedule = get_post_meta( $post->ID, self::SCHEDULE_META_KEY, true );\n\t\t$this->validate_schedule( $schedule, $post->ID );\n\n\t\t$group = wp_get_object_terms( $post->ID, self::GROUP_TAXONOMY, array( 'fields' => 'names' ) );\n\t\t$group = empty( $group ) ? '' : reset( $group );\n\n\t\treturn ActionScheduler::factory()->get_stored_action( $this->get_action_status_by_post_status( $post->post_status ), $hook, $args, $schedule, $group );\n\t}\n\n\t/**\n\t * Get action status by post status.\n\t *\n\t * @param string $post_status Post status.\n\t *\n\t * @throws InvalidArgumentException Throw InvalidArgumentException if $post_status not in known status fields returned by $this->get_status_labels().\n\t * @return string\n\t */\n\tprotected function get_action_status_by_post_status( $post_status ) {\n\n\t\tswitch ( $post_status ) {\n\t\t\tcase 'publish':\n\t\t\t\t$action_status = self::STATUS_COMPLETE;\n\t\t\t\tbreak;\n\t\t\tcase 'trash':\n\t\t\t\t$action_status = self::STATUS_CANCELED;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ( ! array_key_exists( $post_status, $this->get_status_labels() ) ) {\n\t\t\t\t\tthrow new InvalidArgumentException( sprintf( 'Invalid post status: \"%s\". No matching action status available.', $post_status ) );\n\t\t\t\t}\n\t\t\t\t$action_status = $post_status;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $action_status;\n\t}\n\n\t/**\n\t * Get post status by action status.\n\t *\n\t * @param string $action_status Action status.\n\t *\n\t * @throws InvalidArgumentException Throws InvalidArgumentException if $post_status not in known status fields returned by $this->get_status_labels().\n\t * @return string\n\t */\n\tprotected function get_post_status_by_action_status( $action_status ) {\n\n\t\tswitch ( $action_status ) {\n\t\t\tcase self::STATUS_COMPLETE:\n\t\t\t\t$post_status = 'publish';\n\t\t\t\tbreak;\n\t\t\tcase self::STATUS_CANCELED:\n\t\t\t\t$post_status = 'trash';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif ( ! array_key_exists( $action_status, $this->get_status_labels() ) ) {\n\t\t\t\t\tthrow new InvalidArgumentException( sprintf( 'Invalid action status: \"%s\".', $action_status ) );\n\t\t\t\t}\n\t\t\t\t$post_status = $action_status;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn $post_status;\n\t}\n\n\t/**\n\t * Returns the SQL statement to query (or count) actions.\n\t *\n\t * @param array  $query            - Filtering options.\n\t * @param string $select_or_count  - Whether the SQL should select and return the IDs or just the row count.\n\t *\n\t * @throws InvalidArgumentException - Throw InvalidArgumentException if $select_or_count not count or select.\n\t * @return string SQL statement. The returned SQL is already properly escaped.\n\t */\n\tprotected function get_query_actions_sql( array $query, $select_or_count = 'select' ) {\n\n\t\tif ( ! in_array( $select_or_count, array( 'select', 'count' ), true ) ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid schedule. Cannot save action.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$query = wp_parse_args(\n\t\t\t$query,\n\t\t\tarray(\n\t\t\t\t'hook'             => '',\n\t\t\t\t'args'             => null,\n\t\t\t\t'date'             => null,\n\t\t\t\t'date_compare'     => '<=',\n\t\t\t\t'modified'         => null,\n\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t'group'            => '',\n\t\t\t\t'status'           => '',\n\t\t\t\t'claimed'          => null,\n\t\t\t\t'per_page'         => 5,\n\t\t\t\t'offset'           => 0,\n\t\t\t\t'orderby'          => 'date',\n\t\t\t\t'order'            => 'ASC',\n\t\t\t\t'search'           => '',\n\t\t\t)\n\t\t);\n\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\t\t$sql        = ( 'count' === $select_or_count ) ? 'SELECT count(p.ID)' : 'SELECT p.ID ';\n\t\t$sql       .= \"FROM {$wpdb->posts} p\";\n\t\t$sql_params = array();\n\t\tif ( empty( $query['group'] ) && 'group' === $query['orderby'] ) {\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->term_relationships} tr ON tr.object_id=p.ID\";\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->term_taxonomy} tt ON tr.term_taxonomy_id=tt.term_taxonomy_id\";\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->terms} t ON tt.term_id=t.term_id\";\n\t\t} elseif ( ! empty( $query['group'] ) ) {\n\t\t\t$sql         .= \" INNER JOIN {$wpdb->term_relationships} tr ON tr.object_id=p.ID\";\n\t\t\t$sql         .= \" INNER JOIN {$wpdb->term_taxonomy} tt ON tr.term_taxonomy_id=tt.term_taxonomy_id\";\n\t\t\t$sql         .= \" INNER JOIN {$wpdb->terms} t ON tt.term_id=t.term_id\";\n\t\t\t$sql         .= ' AND t.slug=%s';\n\t\t\t$sql_params[] = $query['group'];\n\t\t}\n\t\t$sql         .= ' WHERE post_type=%s';\n\t\t$sql_params[] = self::POST_TYPE;\n\t\tif ( $query['hook'] ) {\n\t\t\t$sql         .= ' AND p.post_title=%s';\n\t\t\t$sql_params[] = $query['hook'];\n\t\t}\n\t\tif ( ! is_null( $query['args'] ) ) {\n\t\t\t$sql         .= ' AND p.post_content=%s';\n\t\t\t$sql_params[] = wp_json_encode( $query['args'] );\n\t\t}\n\n\t\tif ( $query['status'] ) {\n\t\t\t$post_statuses = array_map( array( $this, 'get_post_status_by_action_status' ), (array) $query['status'] );\n\t\t\t$placeholders  = array_fill( 0, count( $post_statuses ), '%s' );\n\t\t\t$sql          .= ' AND p.post_status IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$sql_params    = array_merge( $sql_params, array_values( $post_statuses ) );\n\t\t}\n\n\t\tif ( $query['date'] instanceof DateTime ) {\n\t\t\t$date = clone $query['date'];\n\t\t\t$date->setTimezone( new DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $date->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['date_compare'] );\n\t\t\t$sql         .= \" AND p.post_date_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( $query['modified'] instanceof DateTime ) {\n\t\t\t$modified = clone $query['modified'];\n\t\t\t$modified->setTimezone( new DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $modified->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['modified_compare'] );\n\t\t\t$sql         .= \" AND p.post_modified_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( true === $query['claimed'] ) {\n\t\t\t$sql .= \" AND p.post_password != ''\";\n\t\t} elseif ( false === $query['claimed'] ) {\n\t\t\t$sql .= \" AND p.post_password = ''\";\n\t\t} elseif ( ! is_null( $query['claimed'] ) ) {\n\t\t\t$sql         .= ' AND p.post_password = %s';\n\t\t\t$sql_params[] = $query['claimed'];\n\t\t}\n\n\t\tif ( ! empty( $query['search'] ) ) {\n\t\t\t$sql .= ' AND (p.post_title LIKE %s OR p.post_content LIKE %s OR p.post_password LIKE %s)';\n\t\t\tfor ( $i = 0; $i < 3; $i++ ) {\n\t\t\t\t$sql_params[] = sprintf( '%%%s%%', $query['search'] );\n\t\t\t}\n\t\t}\n\n\t\tif ( 'select' === $select_or_count ) {\n\t\t\tswitch ( $query['orderby'] ) {\n\t\t\t\tcase 'hook':\n\t\t\t\t\t$orderby = 'p.post_title';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\t$orderby = 't.name';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'status':\n\t\t\t\t\t$orderby = 'p.post_status';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'modified':\n\t\t\t\t\t$orderby = 'p.post_modified';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'claim_id':\n\t\t\t\t\t$orderby = 'p.post_password';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'schedule':\n\t\t\t\tcase 'date':\n\t\t\t\tdefault:\n\t\t\t\t\t$orderby = 'p.post_date_gmt';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( 'ASC' === strtoupper( $query['order'] ) ) {\n\t\t\t\t$order = 'ASC';\n\t\t\t} else {\n\t\t\t\t$order = 'DESC';\n\t\t\t}\n\t\t\t$sql .= \" ORDER BY $orderby $order\";\n\t\t\tif ( $query['per_page'] > 0 ) {\n\t\t\t\t$sql         .= ' LIMIT %d, %d';\n\t\t\t\t$sql_params[] = $query['offset'];\n\t\t\t\t$sql_params[] = $query['per_page'];\n\t\t\t}\n\t\t}\n\n\t\treturn $wpdb->prepare( $sql, $sql_params ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage.\n\t *\n\t * @param array  $query      Query filtering options.\n\t * @param string $query_type Whether to select or count the results. Defaults to select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t */\n\tpublic function query_actions( $query = array(), $query_type = 'select' ) {\n\t\t/**\n\t\t * Global $wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$sql = $this->get_query_actions_sql( $query, $query_type );\n\n\t\treturn ( 'count' === $query_type ) ? $wpdb->get_var( $sql ) : $wpdb->get_col( $sql ); // phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery,WordPress.DB.DirectDatabaseQuery.NoCaching,WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t/**\n\t * Get a count of all actions in the store, grouped by status\n\t *\n\t * @return array\n\t */\n\tpublic function action_counts() {\n\n\t\t$action_counts_by_status = array();\n\t\t$action_stati_and_labels = $this->get_status_labels();\n\t\t$posts_count_by_status   = (array) wp_count_posts( self::POST_TYPE, 'readable' );\n\n\t\tforeach ( $posts_count_by_status as $post_status_name => $count ) {\n\n\t\t\ttry {\n\t\t\t\t$action_status_name = $this->get_action_status_by_post_status( $post_status_name );\n\t\t\t} catch ( Exception $e ) {\n\t\t\t\t// Ignore any post statuses that aren't for actions.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif ( array_key_exists( $action_status_name, $action_stati_and_labels ) ) {\n\t\t\t\t$action_counts_by_status[ $action_status_name ] = $count;\n\t\t\t}\n\t\t}\n\n\t\treturn $action_counts_by_status;\n\t}\n\n\t/**\n\t * Cancel action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @throws InvalidArgumentException If $action_id is not identified.\n\t */\n\tpublic function cancel_action( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to cancel this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_canceled_action', $action_id );\n\t\tadd_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10, 5 );\n\t\twp_trash_post( $action_id );\n\t\tremove_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10 );\n\t}\n\n\t/**\n\t * Delete action.\n\t *\n\t * @param int $action_id Action ID.\n\t * @return void\n\t * @throws InvalidArgumentException If action is not identified.\n\t */\n\tpublic function delete_action( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to delete this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_deleted_action', $action_id );\n\n\t\twp_delete_post( $action_id, true );\n\t}\n\n\t/**\n\t * Get date for claim id.\n\t *\n\t * @param int $action_id Action ID.\n\t * @return ActionScheduler_DateTime The date the action is schedule to run, or the date that it ran.\n\t */\n\tpublic function get_date( $action_id ) {\n\t\t$next = $this->get_date_gmt( $action_id );\n\t\treturn ActionScheduler_TimezoneHelper::set_local_timezone( $next );\n\t}\n\n\t/**\n\t * Get Date GMT.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @throws InvalidArgumentException If $action_id is not identified.\n\t * @return ActionScheduler_DateTime The date the action is schedule to run, or the date that it ran.\n\t */\n\tpublic function get_date_gmt( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to determine the date of this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tif ( 'publish' === $post->post_status ) {\n\t\t\treturn as_get_datetime_object( $post->post_modified_gmt );\n\t\t} else {\n\t\t\treturn as_get_datetime_object( $post->post_date_gmt );\n\t\t}\n\t}\n\n\t/**\n\t * Stake claim.\n\t *\n\t * @param int           $max_actions Maximum number of actions.\n\t * @param DateTime|null $before_date Jobs must be schedule before this date. Defaults to now.\n\t * @param array         $hooks       Claim only actions with a hook or hooks.\n\t * @param string        $group       Claim only actions in the given group.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t * @throws RuntimeException When there is an error staking a claim.\n\t * @throws InvalidArgumentException When the given group is not valid.\n\t */\n\tpublic function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t$this->claim_before_date = $before_date;\n\t\t$claim_id                = $this->generate_claim_id();\n\t\t$this->claim_actions( $claim_id, $max_actions, $before_date, $hooks, $group );\n\t\t$action_ids              = $this->find_actions_by_claim_id( $claim_id );\n\t\t$this->claim_before_date = null;\n\n\t\treturn new ActionScheduler_ActionClaim( $claim_id, $action_ids );\n\t}\n\n\t/**\n\t * Get claim count.\n\t *\n\t * @return int\n\t */\n\tpublic function get_claim_count() {\n\t\tglobal $wpdb;\n\n\t\t// phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery,WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\treturn $wpdb->get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT COUNT(DISTINCT post_password) FROM {$wpdb->posts} WHERE post_password != '' AND post_type = %s AND post_status IN ('in-progress','pending')\",\n\t\t\t\tarray( self::POST_TYPE )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Generate claim id.\n\t *\n\t * @return string\n\t */\n\tprotected function generate_claim_id() {\n\t\t$claim_id = md5( microtime( true ) . wp_rand( 0, 1000 ) );\n\t\treturn substr( $claim_id, 0, 20 ); // to fit in db field with 20 char limit.\n\t}\n\n\t/**\n\t * Claim actions.\n\t *\n\t * @param string        $claim_id    Claim ID.\n\t * @param int           $limit       Limit.\n\t * @param DateTime|null $before_date Should use UTC timezone.\n\t * @param array         $hooks       Claim only actions with a hook or hooks.\n\t * @param string        $group       Claim only actions in the given group.\n\t *\n\t * @return int The number of actions that were claimed.\n\t * @throws RuntimeException  When there is a database error.\n\t */\n\tprotected function claim_actions( $claim_id, $limit, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t// Set up initial variables.\n\t\t$date      = null === $before_date ? as_get_datetime_object() : clone $before_date;\n\t\t$limit_ids = ! empty( $group );\n\t\t$ids       = $limit_ids ? $this->get_actions_by_group( $group, $limit, $date ) : array();\n\n\t\t// If limiting by IDs and no posts found, then return early since we have nothing to update.\n\t\tif ( $limit_ids && 0 === count( $ids ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t/*\n\t\t * Build up custom query to update the affected posts. Parameters are built as a separate array\n\t\t * to make it easier to identify where they are in the query.\n\t\t *\n\t\t * We can't use $wpdb->update() here because of the \"ID IN ...\" clause.\n\t\t */\n\t\t$update = \"UPDATE {$wpdb->posts} SET post_password = %s, post_modified_gmt = %s, post_modified = %s\";\n\t\t$params = array(\n\t\t\t$claim_id,\n\t\t\tcurrent_time( 'mysql', true ),\n\t\t\tcurrent_time( 'mysql' ),\n\t\t);\n\n\t\t// Build initial WHERE clause.\n\t\t$where    = \"WHERE post_type = %s AND post_status = %s AND post_password = ''\";\n\t\t$params[] = self::POST_TYPE;\n\t\t$params[] = ActionScheduler_Store::STATUS_PENDING;\n\n\t\tif ( ! empty( $hooks ) ) {\n\t\t\t$placeholders = array_fill( 0, count( $hooks ), '%s' );\n\t\t\t$where       .= ' AND post_title IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$params       = array_merge( $params, array_values( $hooks ) );\n\t\t}\n\n\t\t/*\n\t\t * Add the IDs to the WHERE clause. IDs not escaped because they came directly from a prior DB query.\n\t\t *\n\t\t * If we're not limiting by IDs, then include the post_date_gmt clause.\n\t\t */\n\t\tif ( $limit_ids ) {\n\t\t\t$where .= ' AND ID IN (' . join( ',', $ids ) . ')';\n\t\t} else {\n\t\t\t$where   .= ' AND post_date_gmt <= %s';\n\t\t\t$params[] = $date->format( 'Y-m-d H:i:s' );\n\t\t}\n\n\t\t// Add the ORDER BY clause and,ms limit.\n\t\t$order    = 'ORDER BY menu_order ASC, post_date_gmt ASC, ID ASC LIMIT %d';\n\t\t$params[] = $limit;\n\n\t\t// Run the query and gather results.\n\t\t$rows_affected = $wpdb->query( $wpdb->prepare( \"{$update} {$where} {$order}\", $params ) ); // phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared, WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare\n\n\t\tif ( false === $rows_affected ) {\n\t\t\tthrow new RuntimeException( __( 'Unable to claim actions. Database error.', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn (int) $rows_affected;\n\t}\n\n\t/**\n\t * Get IDs of actions within a certain group and up to a certain date/time.\n\t *\n\t * @param string   $group The group to use in finding actions.\n\t * @param int      $limit The number of actions to retrieve.\n\t * @param DateTime $date  DateTime object representing cutoff time for actions. Actions retrieved will be\n\t *                        up to and including this DateTime.\n\t *\n\t * @return array IDs of actions in the appropriate group and before the appropriate time.\n\t * @throws InvalidArgumentException When the group does not exist.\n\t */\n\tprotected function get_actions_by_group( $group, $limit, DateTime $date ) {\n\t\t// Ensure the group exists before continuing.\n\t\tif ( ! term_exists( $group, self::GROUP_TAXONOMY ) ) {\n\t\t\t/* translators: %s is the group name */\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'The group \"%s\" does not exist.', 'action-scheduler' ), $group ) );\n\t\t}\n\n\t\t// Set up a query for post IDs to use later.\n\t\t$query      = new WP_Query();\n\t\t$query_args = array(\n\t\t\t'fields'           => 'ids',\n\t\t\t'post_type'        => self::POST_TYPE,\n\t\t\t'post_status'      => ActionScheduler_Store::STATUS_PENDING,\n\t\t\t'has_password'     => false,\n\t\t\t'posts_per_page'   => $limit * 3,\n\t\t\t'suppress_filters' => true, // phpcs:ignore WordPressVIPMinimum.Performance.WPQueryParams.SuppressFilters_suppress_filters\n\t\t\t'no_found_rows'    => true,\n\t\t\t'orderby'          => array(\n\t\t\t\t'menu_order' => 'ASC',\n\t\t\t\t'date'       => 'ASC',\n\t\t\t\t'ID'         => 'ASC',\n\t\t\t),\n\t\t\t'date_query'       => array(\n\t\t\t\t'column'    => 'post_date_gmt',\n\t\t\t\t'before'    => $date->format( 'Y-m-d H:i' ),\n\t\t\t\t'inclusive' => true,\n\t\t\t),\n\t\t\t'tax_query'        => array( // phpcs:ignore WordPress.DB.SlowDBQuery\n\t\t\t\tarray(\n\t\t\t\t\t'taxonomy'         => self::GROUP_TAXONOMY,\n\t\t\t\t\t'field'            => 'slug',\n\t\t\t\t\t'terms'            => $group,\n\t\t\t\t\t'include_children' => false,\n\t\t\t\t),\n\t\t\t),\n\t\t);\n\n\t\treturn $query->query( $query_args );\n\t}\n\n\t/**\n\t * Find actions by claim ID.\n\t *\n\t * @param string $claim_id Claim ID.\n\t * @return array\n\t */\n\tpublic function find_actions_by_claim_id( $claim_id ) {\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$action_ids  = array();\n\t\t$before_date = isset( $this->claim_before_date ) ? $this->claim_before_date : as_get_datetime_object();\n\t\t$cut_off     = $before_date->format( 'Y-m-d H:i:s' );\n\n\t\t// phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$results = $wpdb->get_results(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT ID, post_date_gmt FROM {$wpdb->posts} WHERE post_type = %s AND post_password = %s\",\n\t\t\t\tarray(\n\t\t\t\t\tself::POST_TYPE,\n\t\t\t\t\t$claim_id,\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\t// Verify that the scheduled date for each action is within the expected bounds (in some unusual\n\t\t// cases, we cannot depend on MySQL to honor all of the WHERE conditions we specify).\n\t\tforeach ( $results as $claimed_action ) {\n\t\t\tif ( $claimed_action->post_date_gmt <= $cut_off ) {\n\t\t\t\t$action_ids[] = absint( $claimed_action->ID );\n\t\t\t}\n\t\t}\n\n\t\treturn $action_ids;\n\t}\n\n\t/**\n\t * Release pending actions from a claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object to release.\n\t * @return void\n\t * @throws RuntimeException When the claim is not unlocked.\n\t */\n\tpublic function release_claim( ActionScheduler_ActionClaim $claim ) {\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$claim_id = $claim->get_id();\n\t\tif ( trim( $claim_id ) === '' ) {\n\t\t\t// Verify that the claim_id is valid before attempting to release it.\n\t\t\treturn;\n\t\t}\n\n\t\t// Only attempt to release pending actions to be claimed again. Running and complete actions are no longer relevant outside of admin/analytics.\n\t\t// phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$action_ids = $wpdb->get_col(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT ID, post_date_gmt FROM {$wpdb->posts} WHERE post_type = %s AND post_password = %s AND post_status = %s\",\n\t\t\t\tself::POST_TYPE,\n\t\t\t\t$claim_id,\n\t\t\t\tself::STATUS_PENDING\n\t\t\t)\n\t\t);\n\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn; // nothing to do.\n\t\t}\n\t\t$action_id_string = implode( ',', array_map( 'intval', $action_ids ) );\n\n\t\t// phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$result = $wpdb->query(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"UPDATE {$wpdb->posts} SET post_password = '' WHERE ID IN ($action_id_string) AND post_password = %s\", //phpcs:ignore\n\t\t\t\tarray(\n\t\t\t\t\t$claim->get_id(),\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\tif ( false === $result ) {\n\t\t\t/* translators: %s: claim ID */\n\t\t\tthrow new RuntimeException( sprintf( __( 'Unable to unlock claim %s. Database error.', 'action-scheduler' ), $claim->get_id() ) );\n\t\t}\n\t}\n\n\t/**\n\t * Unclaim action.\n\t *\n\t * @param string $action_id Action ID.\n\t * @throws RuntimeException When unable to unlock claim on action ID.\n\t */\n\tpublic function unclaim_action( $action_id ) {\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t//phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$result = $wpdb->query(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"UPDATE {$wpdb->posts} SET post_password = '' WHERE ID = %d AND post_type = %s\",\n\t\t\t\t$action_id,\n\t\t\t\tself::POST_TYPE\n\t\t\t)\n\t\t);\n\t\tif ( false === $result ) {\n\t\t\t/* translators: %s: action ID */\n\t\t\tthrow new RuntimeException( sprintf( __( 'Unable to unlock claim on action %s. Database error.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t}\n\n\t/**\n\t * Mark failure on action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws RuntimeException When unable to mark failure on action ID.\n\t */\n\tpublic function mark_failure( $action_id ) {\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t// phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$result = $wpdb->query(\n\t\t\t$wpdb->prepare( \"UPDATE {$wpdb->posts} SET post_status = %s WHERE ID = %d AND post_type = %s\", self::STATUS_FAILED, $action_id, self::POST_TYPE )\n\t\t);\n\t\tif ( false === $result ) {\n\t\t\t/* translators: %s: action ID */\n\t\t\tthrow new RuntimeException( sprintf( __( 'Unable to mark failure on action %s. Database error.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t}\n\n\t/**\n\t * Return an action's claim ID, as stored in the post password column\n\t *\n\t * @param int $action_id Action ID.\n\t * @return mixed\n\t */\n\tpublic function get_claim_id( $action_id ) {\n\t\treturn $this->get_post_column( $action_id, 'post_password' );\n\t}\n\n\t/**\n\t * Return an action's status, as stored in the post status column\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return mixed\n\t * @throws InvalidArgumentException When the action ID is invalid.\n\t */\n\tpublic function get_status( $action_id ) {\n\t\t$status = $this->get_post_column( $action_id, 'post_status' );\n\n\t\tif ( null === $status ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid action ID. No status found.', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn $this->get_action_status_by_post_status( $status );\n\t}\n\n\t/**\n\t * Get post column\n\t *\n\t * @param string $action_id Action ID.\n\t * @param string $column_name Column Name.\n\t *\n\t * @return string|null\n\t */\n\tprivate function get_post_column( $action_id, $column_name ) {\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t// phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\treturn $wpdb->get_var(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT {$column_name} FROM {$wpdb->posts} WHERE ID=%d AND post_type=%s\", // phpcs:ignore\n\t\t\t\t$action_id,\n\t\t\t\tself::POST_TYPE\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Log Execution.\n\t *\n\t * @throws Exception If the action status cannot be updated to self::STATUS_RUNNING ('in-progress').\n\t *\n\t * @param string $action_id Action ID.\n\t */\n\tpublic function log_execution( $action_id ) {\n\t\t/**\n\t\t * Global wpdb object.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t// phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t$status_updated = $wpdb->query(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"UPDATE {$wpdb->posts} SET menu_order = menu_order+1, post_status=%s, post_modified_gmt = %s, post_modified = %s WHERE ID = %d AND post_type = %s\",\n\t\t\t\tself::STATUS_RUNNING,\n\t\t\t\tcurrent_time( 'mysql', true ),\n\t\t\t\tcurrent_time( 'mysql' ),\n\t\t\t\t$action_id,\n\t\t\t\tself::POST_TYPE\n\t\t\t)\n\t\t);\n\n\t\tif ( ! $status_updated ) {\n\t\t\tthrow new Exception(\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: 1: action ID. 2: status slug. */\n\t\t\t\t\t__( 'Unable to update the status of action %1$d to %2$s.', 'action-scheduler' ),\n\t\t\t\t\t$action_id,\n\t\t\t\t\tself::STATUS_RUNNING\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Record that an action was completed.\n\t *\n\t * @param string $action_id ID of the completed action.\n\t *\n\t * @throws InvalidArgumentException When the action ID is invalid.\n\t * @throws RuntimeException         When there was an error executing the action.\n\t */\n\tpublic function mark_complete( $action_id ) {\n\t\t$post = get_post( $action_id );\n\t\tif ( empty( $post ) || ( self::POST_TYPE !== $post->post_type ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to mark this action as having completed. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tadd_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10, 1 );\n\t\tadd_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10, 5 );\n\t\t$result = wp_update_post(\n\t\t\tarray(\n\t\t\t\t'ID'          => $action_id,\n\t\t\t\t'post_status' => 'publish',\n\t\t\t),\n\t\t\ttrue\n\t\t);\n\t\tremove_filter( 'wp_insert_post_data', array( $this, 'filter_insert_post_data' ), 10 );\n\t\tremove_filter( 'pre_wp_unique_post_slug', array( $this, 'set_unique_post_slug' ), 10 );\n\t\tif ( is_wp_error( $result ) ) {\n\t\t\tthrow new RuntimeException( $result->get_error_message() );\n\t\t}\n\n\t\t/**\n\t\t * Fires after a scheduled action has been completed.\n\t\t *\n\t\t * @since 3.4.2\n\t\t *\n\t\t * @param int $action_id Action ID.\n\t\t */\n\t\tdo_action( 'action_scheduler_completed_action', $action_id );\n\t}\n\n\t/**\n\t * Mark action as migrated when there is an error deleting the action.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function mark_migrated( $action_id ) {\n\t\twp_update_post(\n\t\t\tarray(\n\t\t\t\t'ID'          => $action_id,\n\t\t\t\t'post_status' => 'migrated',\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Determine whether the post store can be migrated.\n\t *\n\t * @param [type] $setting - Setting value.\n\t * @return bool\n\t */\n\tpublic function migration_dependencies_met( $setting ) {\n\t\tglobal $wpdb;\n\n\t\t$dependencies_met = get_transient( self::DEPENDENCIES_MET );\n\t\tif ( empty( $dependencies_met ) ) {\n\t\t\t$maximum_args_length = apply_filters( 'action_scheduler_maximum_args_length', 191 );\n\t\t\t$found_action        = $wpdb->get_var( // phpcs:ignore WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT ID FROM {$wpdb->posts} WHERE post_type = %s AND CHAR_LENGTH(post_content) > %d LIMIT 1\",\n\t\t\t\t\t$maximum_args_length,\n\t\t\t\t\tself::POST_TYPE\n\t\t\t\t)\n\t\t\t);\n\t\t\t$dependencies_met    = $found_action ? 'no' : 'yes';\n\t\t\tset_transient( self::DEPENDENCIES_MET, $dependencies_met, DAY_IN_SECONDS );\n\t\t}\n\n\t\treturn 'yes' === $dependencies_met ? $setting : false;\n\t}\n\n\t/**\n\t * InnoDB indexes have a maximum size of 767 bytes by default, which is only 191 characters with utf8mb4.\n\t *\n\t * Previously, AS wasn't concerned about args length, as we used the (unindex) post_content column. However,\n\t * as we prepare to move to custom tables, and can use an indexed VARCHAR column instead, we want to warn\n\t * developers of this impending requirement.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t */\n\tprotected function validate_action( ActionScheduler_Action $action ) {\n\t\ttry {\n\t\t\tparent::validate_action( $action );\n\t\t} catch ( Exception $e ) {\n\t\t\t/* translators: %s is the error message */\n\t\t\t$message = sprintf( __( '%s Support for strings longer than this will be removed in a future version.', 'action-scheduler' ), $e->getMessage() );\n\t\t\t_doing_it_wrong( 'ActionScheduler_Action::$args', esc_html( $message ), '2.1.0' );\n\t\t}\n\t}\n\n\t/**\n\t * (@codeCoverageIgnore)\n\t */\n\tpublic function init() {\n\t\tadd_filter( 'action_scheduler_migration_dependencies_met', array( $this, 'migration_dependencies_met' ) );\n\n\t\t$post_type_registrar = new ActionScheduler_wpPostStore_PostTypeRegistrar();\n\t\t$post_type_registrar->register();\n\n\t\t$post_status_registrar = new ActionScheduler_wpPostStore_PostStatusRegistrar();\n\t\t$post_status_registrar->register();\n\n\t\t$taxonomy_registrar = new ActionScheduler_wpPostStore_TaxonomyRegistrar();\n\t\t$taxonomy_registrar->register();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_wpPostStore_PostTypeRegistrar.php","ext":"php","size":1993,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_wpPostStore_PostTypeRegistrar\n *\n * @codeCoverageIgnore\n */\nclass ActionScheduler_wpPostStore_PostTypeRegistrar {\n\t/**\n\t * Registrar.\n\t */\n\tpublic function register() {\n\t\tregister_post_type( ActionScheduler_wpPostStore::POST_TYPE, $this->post_type_args() );\n\t}\n\n\t/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t */\n\tprotected function post_type_args() {\n\t\t$args = array(\n\t\t\t'label'        => __( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t'description'  => __( 'Scheduled actions are hooks triggered on a certain date and time.', 'action-scheduler' ),\n\t\t\t'public'       => false,\n\t\t\t'map_meta_cap' => true,\n\t\t\t'hierarchical' => false,\n\t\t\t'supports'     => array( 'title', 'editor', 'comments' ),\n\t\t\t'rewrite'      => false,\n\t\t\t'query_var'    => false,\n\t\t\t'can_export'   => true,\n\t\t\t'ep_mask'      => EP_NONE,\n\t\t\t'labels'       => array(\n\t\t\t\t'name'               => __( 'Scheduled Actions', 'action-scheduler' ),\n\t\t\t\t'singular_name'      => __( 'Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'menu_name'          => _x( 'Scheduled Actions', 'Admin menu name', 'action-scheduler' ),\n\t\t\t\t'add_new'            => __( 'Add', 'action-scheduler' ),\n\t\t\t\t'add_new_item'       => __( 'Add New Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'edit'               => __( 'Edit', 'action-scheduler' ),\n\t\t\t\t'edit_item'          => __( 'Edit Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'new_item'           => __( 'New Scheduled Action', 'action-scheduler' ),\n\t\t\t\t'view'               => __( 'View Action', 'action-scheduler' ),\n\t\t\t\t'view_item'          => __( 'View Action', 'action-scheduler' ),\n\t\t\t\t'search_items'       => __( 'Search Scheduled Actions', 'action-scheduler' ),\n\t\t\t\t'not_found'          => __( 'No actions found', 'action-scheduler' ),\n\t\t\t\t'not_found_in_trash' => __( 'No actions found in trash', 'action-scheduler' ),\n\t\t\t),\n\t\t);\n\n\t\t$args = apply_filters( 'action_scheduler_post_type_args', $args );\n\t\treturn $args;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_DBStore.php","ext":"php","size":41169,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_DBStore\n *\n * Action data table data store.\n *\n * @since 3.0.0\n */\nclass ActionScheduler_DBStore extends ActionScheduler_Store {\n\n\t/**\n\t * Used to share information about the before_date property of claims internally.\n\t *\n\t * This is used in preference to passing the same information as a method param\n\t * for backwards-compatibility reasons.\n\t *\n\t * @var DateTime|null\n\t */\n\tprivate $claim_before_date = null;\n\n\t/**\n\t * Maximum length of args.\n\t *\n\t * @var int\n\t */\n\tprotected static $max_args_length = 8000;\n\n\t/**\n\t * Maximum length of index.\n\t *\n\t * @var int\n\t */\n\tprotected static $max_index_length = 191;\n\n\t/**\n\t * List of claim filters.\n\t *\n\t * @var array\n\t */\n\tprotected $claim_filters = array(\n\t\t'group'          => '',\n\t\t'hooks'          => '',\n\t\t'exclude-groups' => '',\n\t);\n\n\t/**\n\t * Initialize the data store\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\t$table_maker = new ActionScheduler_StoreSchema();\n\t\t$table_maker->init();\n\t\t$table_maker->register_tables();\n\t}\n\n\t/**\n\t * Save an action, checks if this is a unique action before actually saving.\n\t *\n\t * @param ActionScheduler_Action $action         Action object.\n\t * @param DateTime|null          $scheduled_date Optional schedule date. Default null.\n\t *\n\t * @return int                  Action ID.\n\t * @throws RuntimeException     Throws exception when saving the action fails.\n\t */\n\tpublic function save_unique_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\treturn $this->save_action_to_db( $action, $scheduled_date, true );\n\t}\n\n\t/**\n\t * Save an action. Can save duplicate action as well, prefer using `save_unique_action` instead.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t * @param DateTime|null          $scheduled_date Optional schedule date. Default null.\n\t *\n\t * @return int Action ID.\n\t * @throws RuntimeException     Throws exception when saving the action fails.\n\t */\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $scheduled_date = null ) {\n\t\treturn $this->save_action_to_db( $action, $scheduled_date, false );\n\t}\n\n\t/**\n\t * Save an action.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t * @param ?DateTime              $date Optional schedule date. Default null.\n\t * @param bool                   $unique Whether the action should be unique.\n\t *\n\t * @return int Action ID.\n\t * @throws \\RuntimeException     Throws exception when saving the action fails.\n\t */\n\tprivate function save_action_to_db( ActionScheduler_Action $action, ?DateTime $date = null, $unique = false ) {\n\t\tglobal $wpdb;\n\n\t\ttry {\n\t\t\t$this->validate_action( $action );\n\n\t\t\t$data = array(\n\t\t\t\t'hook'                 => $action->get_hook(),\n\t\t\t\t'status'               => ( $action->is_finished() ? self::STATUS_COMPLETE : self::STATUS_PENDING ),\n\t\t\t\t'scheduled_date_gmt'   => $this->get_scheduled_date_string( $action, $date ),\n\t\t\t\t'scheduled_date_local' => $this->get_scheduled_date_string_local( $action, $date ),\n\t\t\t\t'schedule'             => serialize( $action->get_schedule() ), // phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.serialize_serialize\n\t\t\t\t'group_id'             => current( $this->get_group_ids( $action->get_group() ) ),\n\t\t\t\t'priority'             => $action->get_priority(),\n\t\t\t);\n\n\t\t\t$args = wp_json_encode( $action->get_args() );\n\t\t\tif ( strlen( $args ) <= static::$max_index_length ) {\n\t\t\t\t$data['args'] = $args;\n\t\t\t} else {\n\t\t\t\t$data['args']          = $this->hash_args( $args );\n\t\t\t\t$data['extended_args'] = $args;\n\t\t\t}\n\n\t\t\t$insert_sql = $this->build_insert_sql( $data, $unique );\n\n\t\t\t// phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared -- $insert_sql should be already prepared.\n\t\t\t$wpdb->query( $insert_sql );\n\t\t\t$action_id = $wpdb->insert_id;\n\n\t\t\tif ( is_wp_error( $action_id ) ) {\n\t\t\t\tthrow new \\RuntimeException( $action_id->get_error_message() );\n\t\t\t} elseif ( empty( $action_id ) ) {\n\t\t\t\tif ( $unique ) {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t\tthrow new \\RuntimeException( $wpdb->last_error ? $wpdb->last_error : __( 'Database error.', 'action-scheduler' ) );\n\t\t\t}\n\n\t\t\tdo_action( 'action_scheduler_stored_action', $action_id );\n\n\t\t\treturn $action_id;\n\t\t} catch ( \\Exception $e ) {\n\t\t\t/* translators: %s: error message */\n\t\t\tthrow new \\RuntimeException( sprintf( __( 'Error saving action: %s', 'action-scheduler' ), $e->getMessage() ), 0 );\n\t\t}\n\t}\n\n\t/**\n\t * Helper function to build insert query.\n\t *\n\t * @param array $data Row data for action.\n\t * @param bool  $unique Whether the action should be unique.\n\t *\n\t * @return string Insert query.\n\t */\n\tprivate function build_insert_sql( array $data, $unique ) {\n\t\tglobal $wpdb;\n\n\t\t$columns      = array_keys( $data );\n\t\t$values       = array_values( $data );\n\t\t$placeholders = array_map( array( $this, 'get_placeholder_for_column' ), $columns );\n\n\t\t$table_name = ! empty( $wpdb->actionscheduler_actions ) ? $wpdb->actionscheduler_actions : $wpdb->prefix . 'actionscheduler_actions';\n\n\t\t$column_sql      = '`' . implode( '`, `', $columns ) . '`';\n\t\t$placeholder_sql = implode( ', ', $placeholders );\n\t\t$where_clause    = $this->build_where_clause_for_insert( $data, $table_name, $unique );\n\n\t\t// phpcs:disable WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.PreparedSQL.InterpolatedNotPrepared, WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare\t -- $column_sql and $where_clause are already prepared. $placeholder_sql is hardcoded.\n\t\t$insert_query = $wpdb->prepare(\n\t\t\t\"\nINSERT INTO $table_name ( $column_sql )\nSELECT $placeholder_sql FROM DUAL\nWHERE ( $where_clause ) IS NULL\",\n\t\t\t$values\n\t\t);\n\t\t// phpcs:enable\n\n\t\treturn $insert_query;\n\t}\n\n\t/**\n\t * Helper method to build where clause for action insert statement.\n\t *\n\t * @param array  $data Row data for action.\n\t * @param string $table_name Action table name.\n\t * @param bool   $unique Where action should be unique.\n\t *\n\t * @return string Where clause to be used with insert.\n\t */\n\tprivate function build_where_clause_for_insert( $data, $table_name, $unique ) {\n\t\tglobal $wpdb;\n\n\t\tif ( ! $unique ) {\n\t\t\treturn 'SELECT NULL FROM DUAL';\n\t\t}\n\n\t\t$pending_statuses            = array(\n\t\t\tActionScheduler_Store::STATUS_PENDING,\n\t\t\tActionScheduler_Store::STATUS_RUNNING,\n\t\t);\n\t\t$pending_status_placeholders = implode( ', ', array_fill( 0, count( $pending_statuses ), '%s' ) );\n\n\t\t// phpcs:disable WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.PreparedSQL.InterpolatedNotPrepared, WordPress.DB.PreparedSQLPlaceholders.ReplacementsWrongNumber -- $pending_status_placeholders is hardcoded.\n\t\t$where_clause = $wpdb->prepare(\n\t\t\t\"\nSELECT action_id FROM $table_name\nWHERE status IN ( $pending_status_placeholders )\nAND hook = %s\nAND `group_id` = %d\n\",\n\t\t\tarray_merge(\n\t\t\t\t$pending_statuses,\n\t\t\t\tarray(\n\t\t\t\t\t$data['hook'],\n\t\t\t\t\t$data['group_id'],\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\t\t// phpcs:enable\n\n\t\treturn \"$where_clause\" . ' LIMIT 1';\n\t}\n\n\t/**\n\t * Helper method to get $wpdb->prepare placeholder for a given column name.\n\t *\n\t * @param string $column_name Name of column in actions table.\n\t *\n\t * @return string Placeholder to use for given column.\n\t */\n\tprivate function get_placeholder_for_column( $column_name ) {\n\t\t$string_columns = array(\n\t\t\t'hook',\n\t\t\t'status',\n\t\t\t'scheduled_date_gmt',\n\t\t\t'scheduled_date_local',\n\t\t\t'args',\n\t\t\t'schedule',\n\t\t\t'last_attempt_gmt',\n\t\t\t'last_attempt_local',\n\t\t\t'extended_args',\n\t\t);\n\n\t\treturn in_array( $column_name, $string_columns, true ) ? '%s' : '%d';\n\t}\n\n\t/**\n\t * Generate a hash from json_encoded $args using MD5 as this isn't for security.\n\t *\n\t * @param string $args JSON encoded action args.\n\t * @return string\n\t */\n\tprotected function hash_args( $args ) {\n\t\treturn md5( $args );\n\t}\n\n\t/**\n\t * Get action args query param value from action args.\n\t *\n\t * @param array $args Action args.\n\t * @return string\n\t */\n\tprotected function get_args_for_query( $args ) {\n\t\t$encoded = wp_json_encode( $args );\n\t\tif ( strlen( $encoded ) <= static::$max_index_length ) {\n\t\t\treturn $encoded;\n\t\t}\n\t\treturn $this->hash_args( $encoded );\n\t}\n\t/**\n\t * Get a group's ID based on its name/slug.\n\t *\n\t * @param string|array $slugs                The string name of a group, or names for several groups.\n\t * @param bool         $create_if_not_exists Whether to create the group if it does not already exist. Default, true - create the group.\n\t *\n\t * @return array The group IDs, if they exist or were successfully created. May be empty.\n\t */\n\tprotected function get_group_ids( $slugs, $create_if_not_exists = true ) {\n\t\t$slugs     = (array) $slugs;\n\t\t$group_ids = array();\n\n\t\tif ( empty( $slugs ) ) {\n\t\t\treturn array();\n\t\t}\n\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\tforeach ( $slugs as $slug ) {\n\t\t\t$group_id = (int) $wpdb->get_var( $wpdb->prepare( \"SELECT group_id FROM {$wpdb->actionscheduler_groups} WHERE slug=%s\", $slug ) );\n\n\t\t\tif ( empty( $group_id ) && $create_if_not_exists ) {\n\t\t\t\t$group_id = $this->create_group( $slug );\n\t\t\t}\n\n\t\t\tif ( $group_id ) {\n\t\t\t\t$group_ids[] = $group_id;\n\t\t\t}\n\t\t}\n\n\t\treturn $group_ids;\n\t}\n\n\t/**\n\t * Create an action group.\n\t *\n\t * @param string $slug Group slug.\n\t *\n\t * @return int Group ID.\n\t */\n\tprotected function create_group( $slug ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$wpdb->insert( $wpdb->actionscheduler_groups, array( 'slug' => $slug ) );\n\n\t\treturn (int) $wpdb->insert_id;\n\t}\n\n\t/**\n\t * Retrieve an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return ActionScheduler_Action\n\t */\n\tpublic function fetch_action( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$data = $wpdb->get_row(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT a.*, g.slug AS `group` FROM {$wpdb->actionscheduler_actions} a LEFT JOIN {$wpdb->actionscheduler_groups} g ON a.group_id=g.group_id WHERE a.action_id=%d\",\n\t\t\t\t$action_id\n\t\t\t)\n\t\t);\n\n\t\tif ( empty( $data ) ) {\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\tif ( ! empty( $data->extended_args ) ) {\n\t\t\t$data->args = $data->extended_args;\n\t\t\tunset( $data->extended_args );\n\t\t}\n\n\t\t// Convert NULL dates to zero dates.\n\t\t$date_fields = array(\n\t\t\t'scheduled_date_gmt',\n\t\t\t'scheduled_date_local',\n\t\t\t'last_attempt_gmt',\n\t\t\t'last_attempt_gmt',\n\t\t);\n\t\tforeach ( $date_fields as $date_field ) {\n\t\t\tif ( is_null( $data->$date_field ) ) {\n\t\t\t\t$data->$date_field = ActionScheduler_StoreSchema::DEFAULT_DATE;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\t$action = $this->make_action_from_db_record( $data );\n\t\t} catch ( ActionScheduler_InvalidActionException $exception ) {\n\t\t\tdo_action( 'action_scheduler_failed_fetch_action', $action_id, $exception );\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\treturn $action;\n\t}\n\n\t/**\n\t * Create a null action.\n\t *\n\t * @return ActionScheduler_NullAction\n\t */\n\tprotected function get_null_action() {\n\t\treturn new ActionScheduler_NullAction();\n\t}\n\n\t/**\n\t * Create an action from a database record.\n\t *\n\t * @param object $data Action database record.\n\t *\n\t * @return ActionScheduler_Action|ActionScheduler_CanceledAction|ActionScheduler_FinishedAction\n\t */\n\tprotected function make_action_from_db_record( $data ) {\n\n\t\t$hook     = $data->hook;\n\t\t$args     = json_decode( $data->args, true );\n\t\t$schedule = unserialize( $data->schedule ); // phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.serialize_unserialize\n\n\t\t$this->validate_args( $args, $data->action_id );\n\t\t$this->validate_schedule( $schedule, $data->action_id );\n\n\t\tif ( empty( $schedule ) ) {\n\t\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t}\n\t\t$group = $data->group ? $data->group : '';\n\n\t\treturn ActionScheduler::factory()->get_stored_action( $data->status, $data->hook, $args, $schedule, $group, $data->priority );\n\t}\n\n\t/**\n\t * Returns the SQL statement to query (or count) actions.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @param array  $query Filtering options.\n\t * @param string $select_or_count  Whether the SQL should select and return the IDs or just the row count.\n\t *\n\t * @return string SQL statement already properly escaped.\n\t * @throws \\InvalidArgumentException If the query is invalid.\n\t * @throws \\RuntimeException When \"unknown partial args matching value\".\n\t */\n\tprotected function get_query_actions_sql( array $query, $select_or_count = 'select' ) {\n\n\t\tif ( ! in_array( $select_or_count, array( 'select', 'count' ), true ) ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid value for select or count parameter. Cannot query actions.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$query = wp_parse_args(\n\t\t\t$query,\n\t\t\tarray(\n\t\t\t\t'hook'                  => '',\n\t\t\t\t'args'                  => null,\n\t\t\t\t'partial_args_matching' => 'off', // can be 'like' or 'json'.\n\t\t\t\t'date'                  => null,\n\t\t\t\t'date_compare'          => '<=',\n\t\t\t\t'modified'              => null,\n\t\t\t\t'modified_compare'      => '<=',\n\t\t\t\t'group'                 => '',\n\t\t\t\t'status'                => '',\n\t\t\t\t'claimed'               => null,\n\t\t\t\t'per_page'              => 5,\n\t\t\t\t'offset'                => 0,\n\t\t\t\t'orderby'               => 'date',\n\t\t\t\t'order'                 => 'ASC',\n\t\t\t)\n\t\t);\n\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$db_server_info = is_callable( array( $wpdb, 'db_server_info' ) ) ? $wpdb->db_server_info() : $wpdb->db_version();\n\t\tif ( false !== strpos( $db_server_info, 'MariaDB' ) ) {\n\t\t\t$supports_json = version_compare(\n\t\t\t\tPHP_VERSION_ID >= 80016 ? $wpdb->db_version() : preg_replace( '/[^0-9.].*/', '', str_replace( '5.5.5-', '', $db_server_info ) ),\n\t\t\t\t'10.2',\n\t\t\t\t'>='\n\t\t\t);\n\t\t} else {\n\t\t\t$supports_json = version_compare( $wpdb->db_version(), '5.7', '>=' );\n\t\t}\n\n\t\t$sql        = ( 'count' === $select_or_count ) ? 'SELECT count(a.action_id)' : 'SELECT a.action_id';\n\t\t$sql       .= \" FROM {$wpdb->actionscheduler_actions} a\";\n\t\t$sql_params = array();\n\n\t\tif ( ! empty( $query['group'] ) || 'group' === $query['orderby'] ) {\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->actionscheduler_groups} g ON g.group_id=a.group_id\";\n\t\t}\n\n\t\t$sql .= ' WHERE 1=1';\n\n\t\tif ( ! empty( $query['group'] ) ) {\n\t\t\t$sql         .= ' AND g.slug=%s';\n\t\t\t$sql_params[] = $query['group'];\n\t\t}\n\n\t\tif ( ! empty( $query['hook'] ) ) {\n\t\t\t$sql         .= ' AND a.hook=%s';\n\t\t\t$sql_params[] = $query['hook'];\n\t\t}\n\n\t\tif ( ! is_null( $query['args'] ) ) {\n\t\t\tswitch ( $query['partial_args_matching'] ) {\n\t\t\t\tcase 'json':\n\t\t\t\t\tif ( ! $supports_json ) {\n\t\t\t\t\t\tthrow new \\RuntimeException( __( 'JSON partial matching not supported in your environment. Please check your MySQL/MariaDB version.', 'action-scheduler' ) );\n\t\t\t\t\t}\n\t\t\t\t\t$supported_types = array(\n\t\t\t\t\t\t'integer' => '%d',\n\t\t\t\t\t\t'boolean' => '%s',\n\t\t\t\t\t\t'double'  => '%f',\n\t\t\t\t\t\t'string'  => '%s',\n\t\t\t\t\t);\n\t\t\t\t\tforeach ( $query['args'] as $key => $value ) {\n\t\t\t\t\t\t$value_type = gettype( $value );\n\t\t\t\t\t\tif ( 'boolean' === $value_type ) {\n\t\t\t\t\t\t\t$value = $value ? 'true' : 'false';\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$placeholder = isset( $supported_types[ $value_type ] ) ? $supported_types[ $value_type ] : false;\n\t\t\t\t\t\tif ( ! $placeholder ) {\n\t\t\t\t\t\t\tthrow new \\RuntimeException(\n\t\t\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t\t\t/* translators: %s: provided value type */\n\t\t\t\t\t\t\t\t\t__( 'The value type for the JSON partial matching is not supported. Must be either integer, boolean, double or string. %s type provided.', 'action-scheduler' ),\n\t\t\t\t\t\t\t\t\t$value_type\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$sql         .= ' AND JSON_EXTRACT(a.args, %s)=' . $placeholder;\n\t\t\t\t\t\t$sql_params[] = '$.' . $key;\n\t\t\t\t\t\t$sql_params[] = $value;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'like':\n\t\t\t\t\tforeach ( $query['args'] as $key => $value ) {\n\t\t\t\t\t\t$sql         .= ' AND a.args LIKE %s';\n\t\t\t\t\t\t$json_partial = $wpdb->esc_like( trim( wp_json_encode( array( $key => $value ) ), '{}' ) );\n\t\t\t\t\t\t$sql_params[] = \"%{$json_partial}%\";\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'off':\n\t\t\t\t\t$sql         .= ' AND a.args=%s';\n\t\t\t\t\t$sql_params[] = $this->get_args_for_query( $query['args'] );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new \\RuntimeException( __( 'Unknown partial args matching value.', 'action-scheduler' ) );\n\t\t\t}\n\t\t}\n\n\t\tif ( $query['status'] ) {\n\t\t\t$statuses     = (array) $query['status'];\n\t\t\t$placeholders = array_fill( 0, count( $statuses ), '%s' );\n\t\t\t$sql         .= ' AND a.status IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$sql_params   = array_merge( $sql_params, array_values( $statuses ) );\n\t\t}\n\n\t\tif ( $query['date'] instanceof \\DateTime ) {\n\t\t\t$date = clone $query['date'];\n\t\t\t$date->setTimezone( new \\DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $date->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['date_compare'] );\n\t\t\t$sql         .= \" AND a.scheduled_date_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( $query['modified'] instanceof \\DateTime ) {\n\t\t\t$modified = clone $query['modified'];\n\t\t\t$modified->setTimezone( new \\DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $modified->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['modified_compare'] );\n\t\t\t$sql         .= \" AND a.last_attempt_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( true === $query['claimed'] ) {\n\t\t\t$sql .= ' AND a.claim_id != 0';\n\t\t} elseif ( false === $query['claimed'] ) {\n\t\t\t$sql .= ' AND a.claim_id = 0';\n\t\t} elseif ( ! is_null( $query['claimed'] ) ) {\n\t\t\t$sql         .= ' AND a.claim_id = %d';\n\t\t\t$sql_params[] = $query['claimed'];\n\t\t}\n\n\t\tif ( ! empty( $query['search'] ) ) {\n\t\t\t$sql .= ' AND (a.hook LIKE %s OR (a.extended_args IS NULL AND a.args LIKE %s) OR a.extended_args LIKE %s';\n\t\t\tfor ( $i = 0; $i < 3; $i++ ) {\n\t\t\t\t$sql_params[] = sprintf( '%%%s%%', $query['search'] );\n\t\t\t}\n\n\t\t\t$search_claim_id = (int) $query['search'];\n\t\t\tif ( $search_claim_id ) {\n\t\t\t\t$sql         .= ' OR a.claim_id = %d';\n\t\t\t\t$sql_params[] = $search_claim_id;\n\t\t\t}\n\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\tif ( 'select' === $select_or_count ) {\n\t\t\tif ( 'ASC' === strtoupper( $query['order'] ) ) {\n\t\t\t\t$order = 'ASC';\n\t\t\t} else {\n\t\t\t\t$order = 'DESC';\n\t\t\t}\n\t\t\tswitch ( $query['orderby'] ) {\n\t\t\t\tcase 'hook':\n\t\t\t\t\t$sql .= \" ORDER BY a.hook $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\t$sql .= \" ORDER BY g.slug $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'modified':\n\t\t\t\t\t$sql .= \" ORDER BY a.last_attempt_gmt $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'none':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'action_id':\n\t\t\t\t\t$sql .= \" ORDER BY a.action_id $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'date':\n\t\t\t\tdefault:\n\t\t\t\t\t$sql .= \" ORDER BY a.scheduled_date_gmt $order\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( $query['per_page'] > 0 ) {\n\t\t\t\t$sql         .= ' LIMIT %d, %d';\n\t\t\t\t$sql_params[] = $query['offset'];\n\t\t\t\t$sql_params[] = $query['per_page'];\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $sql_params ) ) {\n\t\t\t$sql = $wpdb->prepare( $sql, $sql_params ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\n\t\treturn $sql;\n\t}\n\n\t/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since 3.3.0 $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage.\n\t *\n\t * @param array  $query      Query filtering options.\n\t * @param string $query_type Whether to select or count the results. Defaults to select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t */\n\tpublic function query_actions( $query = array(), $query_type = 'select' ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$sql = $this->get_query_actions_sql( $query, $query_type );\n\n\t\treturn ( 'count' === $query_type ) ? $wpdb->get_var( $sql ) : $wpdb->get_col( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.DirectDatabaseQuery.NoSql, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t}\n\n\t/**\n\t * Get a count of all actions in the store, grouped by status.\n\t *\n\t * @return array Set of 'status' => int $count pairs for statuses with 1 or more actions of that status.\n\t */\n\tpublic function action_counts() {\n\t\tglobal $wpdb;\n\n\t\t$sql  = \"SELECT a.status, count(a.status) as 'count'\";\n\t\t$sql .= \" FROM {$wpdb->actionscheduler_actions} a\";\n\t\t$sql .= ' GROUP BY a.status';\n\n\t\t$actions_count_by_status = array();\n\t\t$action_stati_and_labels = $this->get_status_labels();\n\n\t\tforeach ( $wpdb->get_results( $sql ) as $action_data ) { // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t\t// Ignore any actions with invalid status.\n\t\t\tif ( array_key_exists( $action_data->status, $action_stati_and_labels ) ) {\n\t\t\t\t$actions_count_by_status[ $action_data->status ] = $action_data->count;\n\t\t\t}\n\t\t}\n\n\t\treturn $actions_count_by_status;\n\t}\n\n\t/**\n\t * Cancel an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws \\InvalidArgumentException If the action update failed.\n\t */\n\tpublic function cancel_action( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'status' => self::STATUS_CANCELED ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( false === $updated ) {\n\t\t\t/* translators: %s: action ID */\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to cancel this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_canceled_action', $action_id );\n\t}\n\n\t/**\n\t * Cancel pending actions by hook.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $hook Hook name.\n\t *\n\t * @return void\n\t */\n\tpublic function cancel_actions_by_hook( $hook ) {\n\t\t$this->bulk_cancel_actions( array( 'hook' => $hook ) );\n\t}\n\n\t/**\n\t * Cancel pending actions by group.\n\t *\n\t * @param string $group Group slug.\n\t *\n\t * @return void\n\t */\n\tpublic function cancel_actions_by_group( $group ) {\n\t\t$this->bulk_cancel_actions( array( 'group' => $group ) );\n\t}\n\n\t/**\n\t * Bulk cancel actions.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $query_args Query parameters.\n\t */\n\tprotected function bulk_cancel_actions( $query_args ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\tif ( ! is_array( $query_args ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't cancel actions that are already canceled.\n\t\tif ( isset( $query_args['status'] ) && self::STATUS_CANCELED === $query_args['status'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_ids = true;\n\t\t$query_args = wp_parse_args(\n\t\t\t$query_args,\n\t\t\tarray(\n\t\t\t\t'per_page' => 1000,\n\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t'orderby'  => 'none',\n\t\t\t)\n\t\t);\n\n\t\twhile ( $action_ids ) {\n\t\t\t$action_ids = $this->query_actions( $query_args );\n\t\t\tif ( empty( $action_ids ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$format     = array_fill( 0, count( $action_ids ), '%d' );\n\t\t\t$query_in   = '(' . implode( ',', $format ) . ')';\n\t\t\t$parameters = $action_ids;\n\t\t\tarray_unshift( $parameters, self::STATUS_CANCELED );\n\n\t\t\t$wpdb->query(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"UPDATE {$wpdb->actionscheduler_actions} SET status = %s WHERE action_id IN {$query_in}\", // phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t\t\t\t$parameters\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tdo_action( 'action_scheduler_bulk_cancel_actions', $action_ids );\n\t\t}\n\t}\n\n\t/**\n\t * Delete an action.\n\t *\n\t * @param int $action_id Action ID.\n\t * @throws \\InvalidArgumentException If the action deletion failed.\n\t */\n\tpublic function delete_action( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$deleted = $wpdb->delete( $wpdb->actionscheduler_actions, array( 'action_id' => $action_id ), array( '%d' ) );\n\t\tif ( empty( $deleted ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to delete this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_deleted_action', $action_id );\n\t}\n\n\t/**\n\t * Get the schedule date for an action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return \\DateTime The local date the action is scheduled to run, or the date that it ran.\n\t */\n\tpublic function get_date( $action_id ) {\n\t\t$date = $this->get_date_gmt( $action_id );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\treturn $date;\n\t}\n\n\t/**\n\t * Get the GMT schedule date for an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @throws \\InvalidArgumentException If action cannot be identified.\n\t * @return \\DateTime The GMT date the action is scheduled to run, or the date that it ran.\n\t */\n\tprotected function get_date_gmt( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$record = $wpdb->get_row( $wpdb->prepare( \"SELECT * FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\", $action_id ) );\n\t\tif ( empty( $record ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to determine the date of this action. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tif ( self::STATUS_PENDING === $record->status ) {\n\t\t\treturn as_get_datetime_object( $record->scheduled_date_gmt );\n\t\t} else {\n\t\t\treturn as_get_datetime_object( $record->last_attempt_gmt );\n\t\t}\n\t}\n\n\t/**\n\t * Stake a claim on actions.\n\t *\n\t * @param int           $max_actions Maximum number of action to include in claim.\n\t * @param DateTime|null $before_date Jobs must be schedule before this date. Defaults to now.\n\t * @param array         $hooks Hooks to filter for.\n\t * @param string        $group Group to filter for.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t */\n\tpublic function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t$claim_id = $this->generate_claim_id();\n\n\t\t$this->claim_before_date = $before_date;\n\t\t$this->claim_actions( $claim_id, $max_actions, $before_date, $hooks, $group );\n\t\t$action_ids              = $this->find_actions_by_claim_id( $claim_id );\n\t\t$this->claim_before_date = null;\n\n\t\treturn new ActionScheduler_ActionClaim( $claim_id, $action_ids );\n\t}\n\n\t/**\n\t * Generate a new action claim.\n\t *\n\t * @return int Claim ID.\n\t */\n\tprotected function generate_claim_id() {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$now = as_get_datetime_object();\n\t\t$wpdb->insert( $wpdb->actionscheduler_claims, array( 'date_created_gmt' => $now->format( 'Y-m-d H:i:s' ) ) );\n\n\t\treturn $wpdb->insert_id;\n\t}\n\n\t/**\n\t * Set a claim filter.\n\t *\n\t * @param string $filter_name Claim filter name.\n\t * @param mixed  $filter_values Values to filter.\n\t * @return void\n\t */\n\tpublic function set_claim_filter( $filter_name, $filter_values ) {\n\t\tif ( isset( $this->claim_filters[ $filter_name ] ) ) {\n\t\t\t$this->claim_filters[ $filter_name ] = $filter_values;\n\t\t}\n\t}\n\n\t/**\n\t * Get the claim filter value.\n\t *\n\t * @param string $filter_name Claim filter name.\n\t * @return mixed\n\t */\n\tpublic function get_claim_filter( $filter_name ) {\n\t\tif ( isset( $this->claim_filters[ $filter_name ] ) ) {\n\t\t\treturn $this->claim_filters[ $filter_name ];\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Mark actions claimed.\n\t *\n\t * @param string        $claim_id Claim Id.\n\t * @param int           $limit Number of action to include in claim.\n\t * @param DateTime|null $before_date Should use UTC timezone.\n\t * @param array         $hooks Hooks to filter for.\n\t * @param string        $group Group to filter for.\n\t *\n\t * @return int The number of actions that were claimed.\n\t * @throws \\InvalidArgumentException Throws InvalidArgumentException if group doesn't exist.\n\t * @throws \\RuntimeException Throws RuntimeException if unable to claim action.\n\t */\n\tprotected function claim_actions( $claim_id, $limit, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\t\t$now  = as_get_datetime_object();\n\t\t$date = is_null( $before_date ) ? $now : clone $before_date;\n\n\t\t// Set claim filters.\n\t\tif ( ! empty( $hooks ) ) {\n\t\t\t$this->set_claim_filter( 'hooks', $hooks );\n\t\t} else {\n\t\t\t$hooks = $this->get_claim_filter( 'hooks' );\n\t\t}\n\t\tif ( ! empty( $group ) ) {\n\t\t\t$this->set_claim_filter( 'group', $group );\n\t\t} else {\n\t\t\t$group = $this->get_claim_filter( 'group' );\n\t\t}\n\n\t\t$where        = 'WHERE claim_id = 0 AND scheduled_date_gmt <= %s AND status=%s';\n\t\t$where_params = array(\n\t\t\t$date->format( 'Y-m-d H:i:s' ),\n\t\t\tself::STATUS_PENDING,\n\t\t);\n\n\t\tif ( ! empty( $hooks ) ) {\n\t\t\t$placeholders = array_fill( 0, count( $hooks ), '%s' );\n\t\t\t$where        .= ' AND hook IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$where_params = array_merge( $where_params, array_values( $hooks ) );\n\t\t}\n\n\t\t$group_operator = 'IN';\n\t\tif ( empty( $group ) ) {\n\t\t\t$group          = $this->get_claim_filter( 'exclude-groups' );\n\t\t\t$group_operator = 'NOT IN';\n\t\t}\n\n\t\tif ( ! empty( $group ) ) {\n\t\t\t$group_ids = $this->get_group_ids( $group, false );\n\n\t\t\t// throw exception if no matching group(s) found, this matches ActionScheduler_wpPostStore's behaviour.\n\t\t\tif ( empty( $group_ids ) ) {\n\t\t\t\tthrow new InvalidArgumentException(\n\t\t\t\t\tsprintf(\n\t\t\t\t\t\t/* translators: %s: group name(s) */\n\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t'The group \"%s\" does not exist.',\n\t\t\t\t\t\t\t'The groups \"%s\" do not exist.',\n\t\t\t\t\t\t\tis_array( $group ) ? count( $group ) : 1,\n\t\t\t\t\t\t\t'action-scheduler'\n\t\t\t\t\t\t),\n\t\t\t\t\t\t$group\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t$id_list = implode( ',', array_map( 'intval', $group_ids ) );\n\t\t\t$where  .= \" AND group_id {$group_operator} ( $id_list )\";\n\t\t}\n\n\t\t/**\n\t\t * Sets the order-by clause used in the action claim query.\n\t\t *\n\t\t * @param string $order_by_sql\n\t\t * @param string $claim_id Claim Id.\n\t\t * @param array  $hooks    Hooks to filter for.\n\t\t *\n\t\t * @since 3.8.3 Made $claim_id and $hooks available.\n\t\t * @since 3.4.0\n\t\t */\n\t\t$order       = apply_filters( 'action_scheduler_claim_actions_order_by', 'ORDER BY priority ASC, attempts ASC, scheduled_date_gmt ASC, action_id ASC', $claim_id, $hooks );\n\t\t$skip_locked = $this->db_supports_skip_locked() ? ' SKIP LOCKED' : '';\n\n\t\t// Selecting the action_ids that we plan to claim, while skipping any locked rows to avoid deadlocking.\n\t\t$select_sql = $wpdb->prepare( \"SELECT action_id from {$wpdb->actionscheduler_actions} {$where} {$order} LIMIT %d FOR UPDATE{$skip_locked}\", array_merge( $where_params, array( $limit ) ) );\n\n\t\t// Now place it into an UPDATE statement by joining the result sets, allowing for the SKIP LOCKED behavior to take effect.\n\t\t$update_sql    = \"UPDATE {$wpdb->actionscheduler_actions} t1 JOIN ( $select_sql ) t2 ON t1.action_id = t2.action_id SET claim_id=%d, last_attempt_gmt=%s, last_attempt_local=%s\";\n\t\t$update_params = array(\n\t\t\t$claim_id,\n\t\t\t$now->format( 'Y-m-d H:i:s' ),\n\t\t\tcurrent_time( 'mysql' ),\n\t\t);\n\n\t\t$rows_affected = $wpdb->query( $wpdb->prepare( $update_sql, $update_params ) );\n\t\tif ( false === $rows_affected ) {\n\t\t\t$error = empty( $wpdb->last_error )\n\t\t\t\t? _x( 'unknown', 'database error', 'action-scheduler' )\n\t\t\t\t: $wpdb->last_error;\n\t\t\tthrow new \\RuntimeException(\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: %s database error. */\n\t\t\t\t\t__( 'Unable to claim actions. Database error: %s.', 'action-scheduler' ),\n\t\t\t\t\t$error\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn (int) $rows_affected;\n\t}\n\n\t/**\n\t * Determines whether the database supports using SKIP LOCKED. This logic mimicks the $wpdb::has_cap() logic.\n\t *\n\t * SKIP_LOCKED support was added to MariaDB in 10.6.0 and to MySQL in 8.0.1\n\t *\n\t * @return bool\n\t */\n\tprivate function db_supports_skip_locked() {\n\t\tglobal $wpdb;\n\t\t$db_version     = $wpdb->db_version();\n\t\t$db_server_info = $wpdb->db_server_info();\n\t\t$is_mariadb     = ( false !== strpos( $db_server_info, 'MariaDB' ) );\n\n\t\tif ( $is_mariadb &&\n\t\t     '5.5.5' === $db_version &&\n\t\t     PHP_VERSION_ID < 80016 // PHP 8.0.15 or older.\n\t\t) {\n\t\t\t/*\n\t\t\t * Account for MariaDB version being prefixed with '5.5.5-' on older PHP versions.\n\t\t\t */\n\t\t\t$db_server_info = preg_replace( '/^5\\.5\\.5-(.*)/', '$1', $db_server_info );\n\t\t\t$db_version     = preg_replace( '/[^0-9.].*/', '', $db_server_info );\n\t\t}\n\n\t\t$is_supported = ( $is_mariadb && version_compare( $db_version, '10.6.0', '>=' ) ) ||\n\t\t                ( ! $is_mariadb && version_compare( $db_version, '8.0.1', '>=' ) );\n\n\t\t/**\n\t\t * Filter whether the database supports the SKIP LOCKED modifier for queries.\n\t\t *\n\t\t * @param bool $is_supported Whether SKIP LOCKED is supported.\n\t\t *\n\t\t * @since 3.9.3\n\t\t */\n\t\treturn apply_filters( 'action_scheduler_db_supports_skip_locked', $is_supported );\n\t}\n\n\t/**\n\t * Get the number of active claims.\n\t *\n\t * @return int\n\t */\n\tpublic function get_claim_count() {\n\t\tglobal $wpdb;\n\n\t\t$sql = \"SELECT COUNT(DISTINCT claim_id) FROM {$wpdb->actionscheduler_actions} WHERE claim_id != 0 AND status IN ( %s, %s)\";\n\t\t$sql = $wpdb->prepare( $sql, array( self::STATUS_PENDING, self::STATUS_RUNNING ) ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\treturn (int) $wpdb->get_var( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t/**\n\t * Return an action's claim ID, as stored in the claim_id column.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return mixed\n\t */\n\tpublic function get_claim_id( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$sql = \"SELECT claim_id FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\";\n\t\t$sql = $wpdb->prepare( $sql, $action_id ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\treturn (int) $wpdb->get_var( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t/**\n\t * Retrieve the action IDs of action in a claim.\n\t *\n\t * @param  int $claim_id Claim ID.\n\t * @return int[]\n\t */\n\tpublic function find_actions_by_claim_id( $claim_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$action_ids  = array();\n\t\t$before_date = isset( $this->claim_before_date ) ? $this->claim_before_date : as_get_datetime_object();\n\t\t$cut_off     = $before_date->format( 'Y-m-d H:i:s' );\n\n\t\t$sql = $wpdb->prepare(\n\t\t\t\"SELECT action_id, scheduled_date_gmt FROM {$wpdb->actionscheduler_actions} WHERE claim_id = %d ORDER BY priority ASC, attempts ASC, scheduled_date_gmt ASC, action_id ASC\",\n\t\t\t$claim_id\n\t\t);\n\n\t\t// Verify that the scheduled date for each action is within the expected bounds (in some unusual\n\t\t// cases, we cannot depend on MySQL to honor all of the WHERE conditions we specify).\n\t\tforeach ( $wpdb->get_results( $sql ) as $claimed_action ) { // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t\tif ( $claimed_action->scheduled_date_gmt <= $cut_off ) {\n\t\t\t\t$action_ids[] = absint( $claimed_action->action_id );\n\t\t\t}\n\t\t}\n\n\t\treturn $action_ids;\n\t}\n\n\t/**\n\t * Release pending actions from a claim and delete the claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t * @throws \\RuntimeException When unable to release actions from claim.\n\t */\n\tpublic function release_claim( ActionScheduler_ActionClaim $claim ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\tif ( 0 === intval( $claim->get_id() ) ) {\n\t\t\t// Verify that the claim_id is valid before attempting to release it.\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * Deadlock warning: This function modifies actions to release them from claims that have been processed. Earlier, we used to it in a atomic query, i.e. we would update all actions belonging to a particular claim_id with claim_id = 0.\n\t\t * While this was functionally correct, it would cause deadlock, since this update query will hold a lock on the claim_id_.. index on the action table.\n\t\t * This allowed the possibility of a race condition, where the claimer query is also running at the same time, then the claimer query will also try to acquire a lock on the claim_id_.. index, and in this case if claim release query has already progressed to the point of acquiring the lock, but have not updated yet, it would cause a deadlock.\n\t\t *\n\t\t * We resolve this by getting all the actions_id that we want to release claim from in a separate query, and then releasing the claim on each of them. This way, our lock is acquired on the action_id index instead of the claim_id index. Note that the lock on claim_id will still be acquired, but it will only when we actually make the update, rather than when we select the actions.\n\t\t *\n\t\t * We only release pending actions in order for them to be claimed by another process.\n\t\t */\n\t\t$action_ids = $wpdb->get_col( $wpdb->prepare( \"SELECT action_id FROM {$wpdb->actionscheduler_actions} WHERE claim_id = %d AND status = %s\", $claim->get_id(), self::STATUS_PENDING ) );\n\n\t\t$row_updates = 0;\n\t\tif ( count( $action_ids ) > 0 ) {\n\t\t\t$action_id_string = implode( ',', array_map( 'absint', $action_ids ) );\n\t\t\t$row_updates      = $wpdb->query( \"UPDATE {$wpdb->actionscheduler_actions} SET claim_id = 0 WHERE action_id IN ({$action_id_string})\" ); // phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t}\n\n\t\t$wpdb->delete( $wpdb->actionscheduler_claims, array( 'claim_id' => $claim->get_id() ), array( '%d' ) );\n\n\t\tif ( $row_updates < count( $action_ids ) ) {\n\t\t\tthrow new RuntimeException(\n\t\t\t\tsprintf(\n\t\t\t\t\t// translators: %d is an id.\n\t\t\t\t\t__( 'Unable to release actions from claim id %d.', 'action-scheduler' ),\n\t\t\t\t\t$claim->get_id()\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Remove the claim from an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t */\n\tpublic function unclaim_action( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'claim_id' => 0 ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t}\n\n\t/**\n\t * Mark an action as failed.\n\t *\n\t * @param int $action_id Action ID.\n\t * @throws \\InvalidArgumentException Throw an exception if action was not updated.\n\t */\n\tpublic function mark_failure( $action_id ) {\n\t\t/**\n\t\t * Global.\n\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'status' => self::STATUS_FAILED ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( empty( $updated ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to mark this action as having failed. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t}\n\n\t/**\n\t * Add execution message to action log.\n\t *\n\t * @throws Exception If the action status cannot be updated to self::STATUS_RUNNING ('in-progress').\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t */\n\tpublic function log_execution( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$sql = \"UPDATE {$wpdb->actionscheduler_actions} SET attempts = attempts+1, status=%s, last_attempt_gmt = %s, last_attempt_local = %s WHERE action_id = %d\";\n\t\t$sql = $wpdb->prepare( $sql, self::STATUS_RUNNING, current_time( 'mysql', true ), current_time( 'mysql' ), $action_id ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\t// phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$status_updated = $wpdb->query( $sql );\n\n\t\tif ( ! $status_updated ) {\n\t\t\tthrow new Exception(\n\t\t\t\tsprintf(\n\t\t\t\t\t/* translators: 1: action ID. 2: status slug. */\n\t\t\t\t\t__( 'Unable to update the status of action %1$d to %2$s.', 'action-scheduler' ),\n\t\t\t\t\t$action_id,\n\t\t\t\t\tself::STATUS_RUNNING\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Mark an action as complete.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws \\InvalidArgumentException Throw an exception if action was not updated.\n\t */\n\tpublic function mark_complete( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray(\n\t\t\t\t'status'             => self::STATUS_COMPLETE,\n\t\t\t\t'last_attempt_gmt'   => current_time( 'mysql', true ),\n\t\t\t\t'last_attempt_local' => current_time( 'mysql' ),\n\t\t\t),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( empty( $updated ) ) {\n\t\t\t/* translators: %s is the action ID */\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s: we were unable to mark this action as having completed. It may may have been deleted by another process.', 'action-scheduler' ), $action_id ) );\n\t\t}\n\n\t\t/**\n\t\t * Fires after a scheduled action has been completed.\n\t\t *\n\t\t * @since 3.4.2\n\t\t *\n\t\t * @param int $action_id Action ID.\n\t\t */\n\t\tdo_action( 'action_scheduler_completed_action', $action_id );\n\t}\n\n\t/**\n\t * Get an action's status.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return string\n\t * @throws \\InvalidArgumentException Throw an exception if not status was found for action_id.\n\t * @throws \\RuntimeException Throw an exception if action status could not be retrieved.\n\t */\n\tpublic function get_status( $action_id ) {\n\t\t/**\n\t\t * Global.\n\t\t *\n\t\t * @var \\wpdb $wpdb\n\t\t */\n\t\tglobal $wpdb;\n\n\t\t$sql    = \"SELECT status FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\";\n\t\t$sql    = $wpdb->prepare( $sql, $action_id ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$status = $wpdb->get_var( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\tif ( is_null( $status ) ) {\n\t\t\tthrow new \\InvalidArgumentException( __( 'Invalid action ID. No status found.', 'action-scheduler' ) );\n\t\t} elseif ( empty( $status ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Unknown status found for action.', 'action-scheduler' ) );\n\t\t} else {\n\t\t\treturn $status;\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_wpPostStore_PostStatusRegistrar.php","ext":"php","size":1858,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_wpPostStore_PostStatusRegistrar\n *\n * @codeCoverageIgnore\n */\nclass ActionScheduler_wpPostStore_PostStatusRegistrar {\n\n\t/**\n\t * Registrar.\n\t */\n\tpublic function register() {\n\t\tregister_post_status( ActionScheduler_Store::STATUS_RUNNING, array_merge( $this->post_status_args(), $this->post_status_running_labels() ) );\n\t\tregister_post_status( ActionScheduler_Store::STATUS_FAILED, array_merge( $this->post_status_args(), $this->post_status_failed_labels() ) );\n\t}\n\n\t/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t */\n\tprotected function post_status_args() {\n\t\t$args = array(\n\t\t\t'public'                    => false,\n\t\t\t'exclude_from_search'       => false,\n\t\t\t'show_in_admin_all_list'    => true,\n\t\t\t'show_in_admin_status_list' => true,\n\t\t);\n\n\t\treturn apply_filters( 'action_scheduler_post_status_args', $args );\n\t}\n\n\t/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t */\n\tprotected function post_status_failed_labels() {\n\t\t$labels = array(\n\t\t\t'label'       => _x( 'Failed', 'post', 'action-scheduler' ),\n\t\t\t/* translators: %s: count */\n\t\t\t'label_count' => _n_noop( 'Failed <span class=\"count\">(%s)</span>', 'Failed <span class=\"count\">(%s)</span>', 'action-scheduler' ),\n\t\t);\n\n\t\treturn apply_filters( 'action_scheduler_post_status_failed_labels', $labels );\n\t}\n\n\t/**\n\t * Build the args array for the post type definition\n\t *\n\t * @return array\n\t */\n\tprotected function post_status_running_labels() {\n\t\t$labels = array(\n\t\t\t'label'       => _x( 'In-Progress', 'post', 'action-scheduler' ),\n\t\t\t/* translators: %s: count */\n\t\t\t'label_count' => _n_noop( 'In-Progress <span class=\"count\">(%s)</span>', 'In-Progress <span class=\"count\">(%s)</span>', 'action-scheduler' ),\n\t\t);\n\n\t\treturn apply_filters( 'action_scheduler_post_status_running_labels', $labels );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_wpCommentLogger.php","ext":"php","size":7707,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_wpCommentLogger\n */\nclass ActionScheduler_wpCommentLogger extends ActionScheduler_Logger {\n\tconst AGENT = 'ActionScheduler';\n\tconst TYPE  = 'action_log';\n\n\t/**\n\t * Create log entry.\n\t *\n\t * @param string        $action_id Action ID.\n\t * @param string        $message   Action log's message.\n\t * @param DateTime|null $date      Action log's timestamp.\n\t *\n\t * @return string The log entry ID\n\t */\n\tpublic function log( $action_id, $message, ?DateTime $date = null ) {\n\t\tif ( empty( $date ) ) {\n\t\t\t$date = as_get_datetime_object();\n\t\t} else {\n\t\t\t$date = as_get_datetime_object( clone $date );\n\t\t}\n\t\t$comment_id = $this->create_wp_comment( $action_id, $message, $date );\n\t\treturn $comment_id;\n\t}\n\n\t/**\n\t * Create comment.\n\t *\n\t * @param int      $action_id Action ID.\n\t * @param string   $message Action log's message.\n\t * @param DateTime $date Action log entry's timestamp.\n\t */\n\tprotected function create_wp_comment( $action_id, $message, DateTime $date ) {\n\n\t\t$comment_date_gmt = $date->format( 'Y-m-d H:i:s' );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\t$comment_data = array(\n\t\t\t'comment_post_ID'  => $action_id,\n\t\t\t'comment_date'     => $date->format( 'Y-m-d H:i:s' ),\n\t\t\t'comment_date_gmt' => $comment_date_gmt,\n\t\t\t'comment_author'   => self::AGENT,\n\t\t\t'comment_content'  => $message,\n\t\t\t'comment_agent'    => self::AGENT,\n\t\t\t'comment_type'     => self::TYPE,\n\t\t);\n\n\t\treturn wp_insert_comment( $comment_data );\n\t}\n\n\t/**\n\t * Get single log entry for action.\n\t *\n\t * @param string $entry_id Entry ID.\n\t *\n\t * @return ActionScheduler_LogEntry\n\t */\n\tpublic function get_entry( $entry_id ) {\n\t\t$comment = $this->get_comment( $entry_id );\n\n\t\tif ( empty( $comment ) || self::TYPE !== $comment->comment_type ) {\n\t\t\treturn new ActionScheduler_NullLogEntry();\n\t\t}\n\n\t\t$date = as_get_datetime_object( $comment->comment_date_gmt );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\treturn new ActionScheduler_LogEntry( $comment->comment_post_ID, $comment->comment_content, $date );\n\t}\n\n\t/**\n\t * Get action's logs.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t */\n\tpublic function get_logs( $action_id ) {\n\t\t$status = 'all';\n\t\t$logs   = array();\n\n\t\tif ( get_post_status( $action_id ) === 'trash' ) {\n\t\t\t$status = 'post-trashed';\n\t\t}\n\n\t\t$comments = get_comments(\n\t\t\tarray(\n\t\t\t\t'post_id' => $action_id,\n\t\t\t\t'orderby' => 'comment_date_gmt',\n\t\t\t\t'order'   => 'ASC',\n\t\t\t\t'type'    => self::TYPE,\n\t\t\t\t'status'  => $status,\n\t\t\t)\n\t\t);\n\n\t\tforeach ( $comments as $c ) {\n\t\t\t$entry = $this->get_entry( $c );\n\n\t\t\tif ( ! empty( $entry ) ) {\n\t\t\t\t$logs[] = $entry;\n\t\t\t}\n\t\t}\n\n\t\treturn $logs;\n\t}\n\n\t/**\n\t * Get comment.\n\t *\n\t * @param int $comment_id Comment ID.\n\t */\n\tprotected function get_comment( $comment_id ) {\n\t\treturn get_comment( $comment_id );\n\t}\n\n\t/**\n\t * Filter comment queries.\n\t *\n\t * @param WP_Comment_Query $query Comment query object.\n\t */\n\tpublic function filter_comment_queries( $query ) {\n\t\tforeach ( array( 'ID', 'parent', 'post_author', 'post_name', 'post_parent', 'type', 'post_type', 'post_id', 'post_ID' ) as $key ) {\n\t\t\tif ( ! empty( $query->query_vars[ $key ] ) ) {\n\t\t\t\treturn; // don't slow down queries that wouldn't include action_log comments anyway.\n\t\t\t}\n\t\t}\n\t\t$query->query_vars['action_log_filter'] = true;\n\t\tadd_filter( 'comments_clauses', array( $this, 'filter_comment_query_clauses' ), 10, 2 );\n\t}\n\n\t/**\n\t * Filter comment queries.\n\t *\n\t * @param array            $clauses Query's clauses.\n\t * @param WP_Comment_Query $query Query object.\n\t *\n\t * @return array\n\t */\n\tpublic function filter_comment_query_clauses( $clauses, $query ) {\n\t\tif ( ! empty( $query->query_vars['action_log_filter'] ) ) {\n\t\t\t$clauses['where'] .= $this->get_where_clause();\n\t\t}\n\t\treturn $clauses;\n\t}\n\n\t/**\n\t * Make sure Action Scheduler logs are excluded from comment feeds, which use WP_Query, not\n\t * the WP_Comment_Query class handled by @see self::filter_comment_queries().\n\t *\n\t * @param string   $where Query's `where` clause.\n\t * @param WP_Query $query Query object.\n\t *\n\t * @return string\n\t */\n\tpublic function filter_comment_feed( $where, $query ) {\n\t\tif ( is_comment_feed() ) {\n\t\t\t$where .= $this->get_where_clause();\n\t\t}\n\t\treturn $where;\n\t}\n\n\t/**\n\t * Return a SQL clause to exclude Action Scheduler comments.\n\t *\n\t * @return string\n\t */\n\tprotected function get_where_clause() {\n\t\tglobal $wpdb;\n\t\treturn sprintf( \" AND {$wpdb->comments}.comment_type != '%s'\", self::TYPE );\n\t}\n\n\t/**\n\t * Remove action log entries from wp_count_comments()\n\t *\n\t * @param array $stats   Comment count.\n\t * @param int   $post_id Post ID.\n\t *\n\t * @return object\n\t */\n\tpublic function filter_comment_count( $stats, $post_id ) {\n\t\tglobal $wpdb;\n\n\t\tif ( 0 === $post_id ) {\n\t\t\t$stats = $this->get_comment_count();\n\t\t}\n\n\t\treturn $stats;\n\t}\n\n\t/**\n\t * Retrieve the comment counts from our cache, or the database if the cached version isn't set.\n\t *\n\t * @return object\n\t */\n\tprotected function get_comment_count() {\n\t\tglobal $wpdb;\n\n\t\t$stats = get_transient( 'as_comment_count' );\n\n\t\tif ( ! $stats ) {\n\t\t\t$stats    = array();\n\t\t\t$count    = $wpdb->get_results( \"SELECT comment_approved, COUNT( * ) AS num_comments FROM {$wpdb->comments} WHERE comment_type NOT IN('order_note','action_log') GROUP BY comment_approved\", ARRAY_A );\n\t\t\t$total    = 0;\n\t\t\t$stats    = array();\n\t\t\t$approved = array(\n\t\t\t\t'0'            => 'moderated',\n\t\t\t\t'1'            => 'approved',\n\t\t\t\t'spam'         => 'spam',\n\t\t\t\t'trash'        => 'trash',\n\t\t\t\t'post-trashed' => 'post-trashed',\n\t\t\t);\n\n\t\t\tforeach ( (array) $count as $row ) {\n\t\t\t\t// Don't count post-trashed toward totals.\n\t\t\t\tif ( 'post-trashed' !== $row['comment_approved'] && 'trash' !== $row['comment_approved'] ) {\n\t\t\t\t\t$total += $row['num_comments'];\n\t\t\t\t}\n\t\t\t\tif ( isset( $approved[ $row['comment_approved'] ] ) ) {\n\t\t\t\t\t$stats[ $approved[ $row['comment_approved'] ] ] = $row['num_comments'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$stats['total_comments'] = $total;\n\t\t\t$stats['all']            = $total;\n\n\t\t\tforeach ( $approved as $key ) {\n\t\t\t\tif ( empty( $stats[ $key ] ) ) {\n\t\t\t\t\t$stats[ $key ] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$stats = (object) $stats;\n\t\t\tset_transient( 'as_comment_count', $stats );\n\t\t}\n\n\t\treturn $stats;\n\t}\n\n\t/**\n\t * Delete comment count cache whenever there is new comment or the status of a comment changes. Cache\n\t * will be regenerated next time ActionScheduler_wpCommentLogger::filter_comment_count() is called.\n\t */\n\tpublic function delete_comment_count_cache() {\n\t\tdelete_transient( 'as_comment_count' );\n\t}\n\n\t/**\n\t * Initialize.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler_before_process_queue', array( $this, 'disable_comment_counting' ), 10, 0 );\n\t\tadd_action( 'action_scheduler_after_process_queue', array( $this, 'enable_comment_counting' ), 10, 0 );\n\n\t\tparent::init();\n\n\t\tadd_action( 'pre_get_comments', array( $this, 'filter_comment_queries' ), 10, 1 );\n\t\tadd_action( 'wp_count_comments', array( $this, 'filter_comment_count' ), 20, 2 ); // run after WC_Comments::wp_count_comments() to make sure we exclude order notes and action logs.\n\t\tadd_action( 'comment_feed_where', array( $this, 'filter_comment_feed' ), 10, 2 );\n\n\t\t// Delete comments count cache whenever there is a new comment or a comment status changes.\n\t\tadd_action( 'wp_insert_comment', array( $this, 'delete_comment_count_cache' ) );\n\t\tadd_action( 'wp_set_comment_status', array( $this, 'delete_comment_count_cache' ) );\n\t}\n\n\t/**\n\t * Defer comment counting.\n\t */\n\tpublic function disable_comment_counting() {\n\t\twp_defer_comment_counting( true );\n\t}\n\n\t/**\n\t * Enable comment counting.\n\t */\n\tpublic function enable_comment_counting() {\n\t\twp_defer_comment_counting( false );\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_HybridStore.php","ext":"php","size":12678,"mtime":1757324689,"type":"text","content":"<?php\n\nuse ActionScheduler_Store as Store;\nuse Action_Scheduler\\Migration\\Runner;\nuse Action_Scheduler\\Migration\\Config;\nuse Action_Scheduler\\Migration\\Controller;\n\n/**\n * Class ActionScheduler_HybridStore\n *\n * A wrapper around multiple stores that fetches data from both.\n *\n * @since 3.0.0\n */\nclass ActionScheduler_HybridStore extends Store {\n\tconst DEMARKATION_OPTION = 'action_scheduler_hybrid_store_demarkation';\n\n\t/**\n\t * Primary store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $primary_store;\n\n\t/**\n\t * Secondary store instance.\n\t *\n\t * @var ActionScheduler_Store\n\t */\n\tprivate $secondary_store;\n\n\t/**\n\t * Runner instance.\n\t *\n\t * @var Action_Scheduler\\Migration\\Runner\n\t */\n\tprivate $migration_runner;\n\n\t/**\n\t * The dividing line between IDs of actions created\n\t * by the primary and secondary stores.\n\t *\n\t * @var int\n\t *\n\t * Methods that accept an action ID will compare the ID against\n\t * this to determine which store will contain that ID. In almost\n\t * all cases, the ID should come from the primary store, but if\n\t * client code is bypassing the API functions and fetching IDs\n\t * from elsewhere, then there is a chance that an unmigrated ID\n\t * might be requested.\n\t */\n\tprivate $demarkation_id = 0;\n\n\t/**\n\t * ActionScheduler_HybridStore constructor.\n\t *\n\t * @param Config|null $config Migration config object.\n\t */\n\tpublic function __construct( ?Config $config = null ) {\n\t\t$this->demarkation_id = (int) get_option( self::DEMARKATION_OPTION, 0 );\n\t\tif ( empty( $config ) ) {\n\t\t\t$config = Controller::instance()->get_migration_config_object();\n\t\t}\n\t\t$this->primary_store    = $config->get_destination_store();\n\t\t$this->secondary_store  = $config->get_source_store();\n\t\t$this->migration_runner = new Runner( $config );\n\t}\n\n\t/**\n\t * Initialize the table data store tables.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\tadd_action( 'action_scheduler/created_table', array( $this, 'set_autoincrement' ), 10, 2 );\n\t\t$this->primary_store->init();\n\t\t$this->secondary_store->init();\n\t\tremove_action( 'action_scheduler/created_table', array( $this, 'set_autoincrement' ), 10 );\n\t}\n\n\t/**\n\t * When the actions table is created, set its autoincrement\n\t * value to be one higher than the posts table to ensure that\n\t * there are no ID collisions.\n\t *\n\t * @param string $table_name Table name.\n\t * @param string $table_suffix Suffix of table name.\n\t *\n\t * @return void\n\t * @codeCoverageIgnore\n\t */\n\tpublic function set_autoincrement( $table_name, $table_suffix ) {\n\t\tif ( ActionScheduler_StoreSchema::ACTIONS_TABLE === $table_suffix ) {\n\t\t\tif ( empty( $this->demarkation_id ) ) {\n\t\t\t\t$this->demarkation_id = $this->set_demarkation_id();\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Global.\n\t\t\t *\n\t\t\t * @var \\wpdb $wpdb\n\t\t\t */\n\t\t\tglobal $wpdb;\n\n\t\t\t/**\n\t\t\t * A default date of '0000-00-00 00:00:00' is invalid in MySQL 5.7 when configured with\n\t\t\t * sql_mode including both STRICT_TRANS_TABLES and NO_ZERO_DATE.\n\t\t\t */\n\t\t\t$default_date = new DateTime( 'tomorrow' );\n\t\t\t$null_action  = new ActionScheduler_NullAction();\n\t\t\t$date_gmt     = $this->get_scheduled_date_string( $null_action, $default_date );\n\t\t\t$date_local   = $this->get_scheduled_date_string_local( $null_action, $default_date );\n\n\t\t\t$row_count = $wpdb->insert(\n\t\t\t\t$wpdb->{ActionScheduler_StoreSchema::ACTIONS_TABLE},\n\t\t\t\tarray(\n\t\t\t\t\t'action_id'            => $this->demarkation_id,\n\t\t\t\t\t'hook'                 => '',\n\t\t\t\t\t'status'               => '',\n\t\t\t\t\t'scheduled_date_gmt'   => $date_gmt,\n\t\t\t\t\t'scheduled_date_local' => $date_local,\n\t\t\t\t\t'last_attempt_gmt'     => $date_gmt,\n\t\t\t\t\t'last_attempt_local'   => $date_local,\n\t\t\t\t)\n\t\t\t);\n\t\t\tif ( $row_count > 0 ) {\n\t\t\t\t$wpdb->delete(\n\t\t\t\t\t$wpdb->{ActionScheduler_StoreSchema::ACTIONS_TABLE},\n\t\t\t\t\tarray( 'action_id' => $this->demarkation_id )\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Store the demarkation id in WP options.\n\t *\n\t * @param int $id The ID to set as the demarkation point between the two stores\n\t *                Leave null to use the next ID from the WP posts table.\n\t *\n\t * @return int The new ID.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tprivate function set_demarkation_id( $id = null ) {\n\t\tif ( empty( $id ) ) {\n\t\t\t/**\n\t\t\t * Global.\n\t\t\t *\n\t\t\t * @var \\wpdb $wpdb\n\t\t\t */\n\t\t\tglobal $wpdb;\n\n\t\t\t$id = (int) $wpdb->get_var( \"SELECT MAX(ID) FROM $wpdb->posts\" );\n\t\t\t$id++;\n\t\t}\n\t\tupdate_option( self::DEMARKATION_OPTION, $id );\n\n\t\treturn $id;\n\t}\n\n\t/**\n\t * Find the first matching action from the secondary store.\n\t * If it exists, migrate it to the primary store immediately.\n\t * After it migrates, the secondary store will logically contain\n\t * the next matching action, so return the result thence.\n\t *\n\t * @param string $hook Action's hook.\n\t * @param array  $params Action's arguments.\n\t *\n\t * @return string\n\t */\n\tpublic function find_action( $hook, $params = array() ) {\n\t\t$found_unmigrated_action = $this->secondary_store->find_action( $hook, $params );\n\t\tif ( ! empty( $found_unmigrated_action ) ) {\n\t\t\t$this->migrate( array( $found_unmigrated_action ) );\n\t\t}\n\n\t\treturn $this->primary_store->find_action( $hook, $params );\n\t}\n\n\t/**\n\t * Find actions matching the query in the secondary source first.\n\t * If any are found, migrate them immediately. Then the secondary\n\t * store will contain the canonical results.\n\t *\n\t * @param array  $query Query arguments.\n\t * @param string $query_type Whether to select or count the results. Default, select.\n\t *\n\t * @return int[]\n\t */\n\tpublic function query_actions( $query = array(), $query_type = 'select' ) {\n\t\t$found_unmigrated_actions = $this->secondary_store->query_actions( $query, 'select' );\n\t\tif ( ! empty( $found_unmigrated_actions ) ) {\n\t\t\t$this->migrate( $found_unmigrated_actions );\n\t\t}\n\n\t\treturn $this->primary_store->query_actions( $query, $query_type );\n\t}\n\n\t/**\n\t * Get a count of all actions in the store, grouped by status\n\t *\n\t * @return array Set of 'status' => int $count pairs for statuses with 1 or more actions of that status.\n\t */\n\tpublic function action_counts() {\n\t\t$unmigrated_actions_count = $this->secondary_store->action_counts();\n\t\t$migrated_actions_count   = $this->primary_store->action_counts();\n\t\t$actions_count_by_status  = array();\n\n\t\tforeach ( $this->get_status_labels() as $status_key => $status_label ) {\n\n\t\t\t$count = 0;\n\n\t\t\tif ( isset( $unmigrated_actions_count[ $status_key ] ) ) {\n\t\t\t\t$count += $unmigrated_actions_count[ $status_key ];\n\t\t\t}\n\n\t\t\tif ( isset( $migrated_actions_count[ $status_key ] ) ) {\n\t\t\t\t$count += $migrated_actions_count[ $status_key ];\n\t\t\t}\n\n\t\t\t$actions_count_by_status[ $status_key ] = $count;\n\t\t}\n\n\t\t$actions_count_by_status = array_filter( $actions_count_by_status );\n\n\t\treturn $actions_count_by_status;\n\t}\n\n\t/**\n\t * If any actions would have been claimed by the secondary store,\n\t * migrate them immediately, then ask the primary store for the\n\t * canonical claim.\n\t *\n\t * @param int           $max_actions Maximum number of actions to claim.\n\t * @param null|DateTime $before_date Latest timestamp of actions to claim.\n\t * @param string[]      $hooks Hook of actions to claim.\n\t * @param string        $group Group of actions to claim.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t */\n\tpublic function stake_claim( $max_actions = 10, ?DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t$claim = $this->secondary_store->stake_claim( $max_actions, $before_date, $hooks, $group );\n\n\t\t$claimed_actions = $claim->get_actions();\n\t\tif ( ! empty( $claimed_actions ) ) {\n\t\t\t$this->migrate( $claimed_actions );\n\t\t}\n\n\t\t$this->secondary_store->release_claim( $claim );\n\n\t\treturn $this->primary_store->stake_claim( $max_actions, $before_date, $hooks, $group );\n\t}\n\n\t/**\n\t * Migrate a list of actions to the table data store.\n\t *\n\t * @param array $action_ids List of action IDs.\n\t */\n\tprivate function migrate( $action_ids ) {\n\t\t$this->migration_runner->migrate_actions( $action_ids );\n\t}\n\n\t/**\n\t * Save an action to the primary store.\n\t *\n\t * @param ActionScheduler_Action $action Action object to be saved.\n\t * @param DateTime|null          $date Optional. Schedule date. Default null.\n\t *\n\t * @return int The action ID\n\t */\n\tpublic function save_action( ActionScheduler_Action $action, ?DateTime $date = null ) {\n\t\treturn $this->primary_store->save_action( $action, $date );\n\t}\n\n\t/**\n\t * Retrieve an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function fetch_action( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id, true );\n\t\tif ( $store ) {\n\t\t\treturn $store->fetch_action( $action_id );\n\t\t} else {\n\t\t\treturn new ActionScheduler_NullAction();\n\t\t}\n\t}\n\n\t/**\n\t * Cancel an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function cancel_action( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->cancel_action( $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Delete an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function delete_action( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->delete_action( $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Get the schedule date an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function get_date( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\treturn $store->get_date( $action_id );\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t/**\n\t * Mark an existing action as failed whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function mark_failure( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->mark_failure( $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Log the execution of an existing action whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function log_execution( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->log_execution( $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Mark an existing action complete whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function mark_complete( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\t$store->mark_complete( $action_id );\n\t\t}\n\t}\n\n\t/**\n\t * Get an existing action status whether migrated or not.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function get_status( $action_id ) {\n\t\t$store = $this->get_store_from_action_id( $action_id );\n\t\tif ( $store ) {\n\t\t\treturn $store->get_status( $action_id );\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Return which store an action is stored in.\n\t *\n\t * @param int  $action_id ID of the action.\n\t * @param bool $primary_first Optional flag indicating search the primary store first.\n\t * @return ActionScheduler_Store\n\t */\n\tprotected function get_store_from_action_id( $action_id, $primary_first = false ) {\n\t\tif ( $primary_first ) {\n\t\t\t$stores = array(\n\t\t\t\t$this->primary_store,\n\t\t\t\t$this->secondary_store,\n\t\t\t);\n\t\t} elseif ( $action_id < $this->demarkation_id ) {\n\t\t\t$stores = array(\n\t\t\t\t$this->secondary_store,\n\t\t\t\t$this->primary_store,\n\t\t\t);\n\t\t} else {\n\t\t\t$stores = array(\n\t\t\t\t$this->primary_store,\n\t\t\t);\n\t\t}\n\n\t\tforeach ( $stores as $store ) {\n\t\t\t$action = $store->fetch_action( $action_id );\n\t\t\tif ( ! is_a( $action, 'ActionScheduler_NullAction' ) ) {\n\t\t\t\treturn $store;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t * All claim-related functions should operate solely\n\t * on the primary store.\n\t * * * * * * * * * * * * * * * * * * * * * * * * * * *\n\t */\n\n\t/**\n\t * Get the claim count from the table data store.\n\t */\n\tpublic function get_claim_count() {\n\t\treturn $this->primary_store->get_claim_count();\n\t}\n\n\t/**\n\t * Retrieve the claim ID for an action from the table data store.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function get_claim_id( $action_id ) {\n\t\treturn $this->primary_store->get_claim_id( $action_id );\n\t}\n\n\t/**\n\t * Release a claim in the table data store on any pending actions.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t */\n\tpublic function release_claim( ActionScheduler_ActionClaim $claim ) {\n\t\t$this->primary_store->release_claim( $claim );\n\t}\n\n\t/**\n\t * Release claims on an action in the table data store.\n\t *\n\t * @param int $action_id Action ID.\n\t */\n\tpublic function unclaim_action( $action_id ) {\n\t\t$this->primary_store->unclaim_action( $action_id );\n\t}\n\n\t/**\n\t * Retrieve a list of action IDs by claim.\n\t *\n\t * @param int $claim_id Claim ID.\n\t */\n\tpublic function find_actions_by_claim_id( $claim_id ) {\n\t\treturn $this->primary_store->find_actions_by_claim_id( $claim_id );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/data-stores/ActionScheduler_wpPostStore_TaxonomyRegistrar.php","ext":"php","size":762,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Class ActionScheduler_wpPostStore_TaxonomyRegistrar\n *\n * @codeCoverageIgnore\n */\nclass ActionScheduler_wpPostStore_TaxonomyRegistrar {\n\n\t/**\n\t * Registrar.\n\t */\n\tpublic function register() {\n\t\tregister_taxonomy( ActionScheduler_wpPostStore::GROUP_TAXONOMY, ActionScheduler_wpPostStore::POST_TYPE, $this->taxonomy_args() );\n\t}\n\n\t/**\n\t * Get taxonomy arguments.\n\t */\n\tprotected function taxonomy_args() {\n\t\t$args = array(\n\t\t\t'label'             => __( 'Action Group', 'action-scheduler' ),\n\t\t\t'public'            => false,\n\t\t\t'hierarchical'      => false,\n\t\t\t'show_admin_column' => true,\n\t\t\t'query_var'         => false,\n\t\t\t'rewrite'           => false,\n\t\t);\n\n\t\t$args = apply_filters( 'action_scheduler_taxonomy_args', $args );\n\t\treturn $args;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/woocommerce/action-scheduler/classes/ActionScheduler_InvalidActionException.php","ext":"php","size":1487,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * InvalidAction Exception.\n *\n * Used for identifying actions that are invalid in some way.\n *\n * @package ActionScheduler\n */\nclass ActionScheduler_InvalidActionException extends \\InvalidArgumentException implements ActionScheduler_Exception {\n\n\t/**\n\t * Create a new exception when the action's schedule cannot be fetched.\n\t *\n\t * @param string $action_id The action ID with bad args.\n\t * @param mixed  $schedule  Passed schedule.\n\t * @return static\n\t */\n\tpublic static function from_schedule( $action_id, $schedule ) {\n\t\t$message = sprintf(\n\t\t\t/* translators: 1: action ID 2: schedule */\n\t\t\t__( 'Action [%1$s] has an invalid schedule: %2$s', 'action-scheduler' ),\n\t\t\t$action_id,\n\t\t\tvar_export( $schedule, true ) // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t);\n\n\t\treturn new static( $message );\n\t}\n\n\t/**\n\t * Create a new exception when the action's args cannot be decoded to an array.\n\t *\n\t * @param string $action_id The action ID with bad args.\n\t * @param mixed  $args      Passed arguments.\n\t * @return static\n\t */\n\tpublic static function from_decoding_args( $action_id, $args = array() ) {\n\t\t$message = sprintf(\n\t\t\t/* translators: 1: action ID 2: arguments */\n\t\t\t__( 'Action [%1$s] has invalid arguments. It cannot be JSON decoded to an array. $args = %2$s', 'action-scheduler' ),\n\t\t\t$action_id,\n\t\t\tvar_export( $args, true ) // phpcs:ignore WordPress.PHP.DevelopmentFunctions.error_log_var_export\n\t\t);\n\n\t\treturn new static( $message );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/wordpress-helpers.php","ext":"php","size":854,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * WordPress Helpers\n *\n * @package      MyThemeShop\\Helpers\n * @copyright    Copyright (C) 2018, MyThemeShop - info@mythemeshop.com\n * @link         http://mythemeshop.com\n * @since        1.0.0\n *\n * @wordpress-plugin\n * Plugin Name:       WordPress Helpers\n * Version:           1.1.22\n * Plugin URI:        http://mythemeshop.com/wordpress-helpers/\n * Description:       Collection of utilities required during development of a plugin or theme for WordPress. Built for developers by developers.\n * Author:            MyThemeShop\n * Author URI:        http://mythemeshop.com/\n * License:           GPL-2.0+\n * License URI:       http://www.gnu.org/licenses/gpl-2.0.txt\n * Requires at least: 5.0\n * Tested up to:      5.7\n */\n\ndefined( 'ABSPATH' ) || exit;\n\n/**\n * Class Autoloading.\n */\ninclude dirname( __FILE__ ) . '/vendor/autoload.php';\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/class-json-manager.php","ext":"php","size":2911,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The JSON manager handles json output to admin and frontend.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop;\n\n/**\n * Json_Manager class.\n */\nclass Json_Manager {\n\n\t/**\n\t * Data.\n\t *\n\t * @var array\n\t */\n\tprivate $data = [];\n\n\t/**\n\t * Construct\n\t */\n\tpublic function __construct() {\n\t\t$hook = is_admin() ? 'admin_footer' : 'wp_footer';\n\t\tadd_action( $hook, [ $this, 'output' ], 0 );\n\t}\n\n\t/**\n\t * Add something to JSON object.\n\t *\n\t * @param string $key         Unique identifier.\n\t * @param mixed  $value       The data itself can be either a single or an array.\n\t * @param string $object_name Name for the JavaScript object. Passed directly, so it should be qualified JS variable.\n\t */\n\tpublic function add( $key, $value, $object_name ) {\n\n\t\tif ( empty( $key ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If key doesn't exists.\n\t\tif ( ! isset( $this->data[ $object_name ][ $key ] ) ) {\n\t\t\t$this->data[ $object_name ][ $key ] = $value;\n\t\t\treturn;\n\t\t}\n\n\t\t// If key already exists.\n\t\t$old_value = $this->data[ $object_name ][ $key ];\n\n\t\t// If both array merge them.\n\t\tif ( is_array( $old_value ) && is_array( $value ) ) {\n\t\t\t$this->data[ $object_name ][ $key ] = array_merge( $old_value, $value );\n\t\t\treturn;\n\t\t}\n\n\t\t$this->data[ $object_name ][ $key ] = $value;\n\t}\n\n\t/**\n\t * Remove something from JSON object.\n\t *\n\t * @param string $key         Unique identifier.\n\t * @param string $object_name Name for the JavaScript object. Passed directly, so it should be qualified JS variable.\n\t */\n\tpublic function remove( $key, $object_name ) {\n\t\tif ( isset( $this->data[ $object_name ][ $key ] ) ) {\n\t\t\tunset( $this->data[ $object_name ][ $key ] );\n\t\t}\n\t}\n\n\t/**\n\t * Print data.\n\t */\n\tpublic function output() {\n\t\t$script = $this->encode();\n\t\tif ( ! $script ) {\n\t\t\treturn;\n\t\t}\n\n\t\techo \"<script type='text/javascript'>\\n\"; // CDATA and type='text/javascript' is not needed for HTML 5.\n\t\techo \"/* <![CDATA[ */\\n\";\n\t\techo \"$script\\n\";\n\t\techo \"/* ]]> */\\n\";\n\t\techo \"</script>\\n\";\n\t}\n\n\t/**\n\t * Get encoded string.\n\t *\n\t * @return string\n\t */\n\tprivate function encode() {\n\t\t$script = '';\n\t\tforeach ( $this->data as $object_name => $object_data ) {\n\t\t\t$script .= $this->single_object( $object_name, $object_data );\n\t\t}\n\n\t\treturn $script;\n\t}\n\n\t/**\n\t * Encode single object.\n\t *\n\t * @param  string $object_name Object name to use as JS variable.\n\t * @param  array  $object_data Object data to json encode.\n\t * @return array\n\t */\n\tprivate function single_object( $object_name, $object_data ) {\n\t\tif ( empty( $object_data ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tforeach ( (array) $object_data as $key => $value ) {\n\t\t\tif ( ! is_string( $value ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$object_data[ $key ] = html_entity_decode( (string) $value, ENT_QUOTES, 'UTF-8' );\n\t\t}\n\n\t\treturn \"var $object_name = \" . wp_json_encode( $object_data ) . ';' . PHP_EOL;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php // Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/admin/class-list-table.php","ext":"php","size":1706,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The List Table Base CLass.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Admin\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Admin;\n\nuse WP_List_Table;\nuse MyThemeShop\\Helpers\\Param;\n\n/**\n * List_Table class.\n */\nclass List_Table extends WP_List_Table {\n\n\t/**\n\t * The Constructor.\n\t *\n\t * @param array $args Array of arguments.\n\t */\n\tpublic function __construct( $args = [] ) {\n\t\tparent::__construct( $args );\n\t}\n\n\t/**\n\t * Message to be displayed when there are no items.\n\t */\n\tpublic function no_items() {\n\t\techo isset( $this->_args['no_items'] ) ? $this->_args['no_items'] : esc_html__( 'No items found.' );\n\t}\n\n\t/**\n\t * Get order setting.\n\t *\n\t * @return string\n\t */\n\tprotected function get_order() {\n\t\t$order = Param::request( 'order', 'desc' );\n\t\treturn in_array( $order, [ 'desc', 'asc' ], true ) ? strtoupper( $order ) : 'DESC';\n\t}\n\n\t/**\n\t * Get orderby setting.\n\t *\n\t * @param string $default (Optional) Extract order by from request.\n\t *\n\t * @return string\n\t */\n\tprotected function get_orderby( $default = 'create_date' ) {\n\t\treturn Param::get( 'orderby', $default, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_HIGH | FILTER_FLAG_STRIP_BACKTICK );\n\t}\n\n\t/**\n\t * Get search query variable.\n\t *\n\t * @return bool|string\n\t */\n\tprotected function get_search() {\n\t\treturn Param::request( 's', false, FILTER_SANITIZE_SPECIAL_CHARS, FILTER_FLAG_STRIP_LOW | FILTER_FLAG_STRIP_BACKTICK );\n\t}\n\n\t/**\n\t * Set column headers.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tprotected function set_column_headers() {\n\t\t$this->_column_headers = [\n\t\t\t$this->get_columns(),\n\t\t\t[],\n\t\t\t$this->get_sortable_columns(),\n\t\t];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/admin/class-page.php","ext":"php","size":6317,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The admin-page functionality.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Admin\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Admin;\n\nuse MyThemeShop\\Helpers\\Param;\n\n/**\n * Page class.\n */\nclass Page {\n\n\t/**\n\t * Unique ID used for menu_slug.\n\t *\n\t * @var string\n\t */\n\tpublic $id = null;\n\n\t/**\n\t * The text to be displayed in the title tags of the page.\n\t *\n\t * @var string\n\t */\n\tpublic $title = null;\n\n\t/**\n\t * The slug name for the parent menu.\n\t *\n\t * @var string\n\t */\n\tpublic $parent = null;\n\n\t/**\n\t * The The on-screen name text for the menu.\n\t *\n\t * @var string\n\t */\n\tpublic $menu_title = null;\n\n\t/**\n\t * The capability required for this menu to be displayed to the user.\n\t *\n\t * @var string\n\t */\n\tpublic $capability = 'manage_options';\n\n\t/**\n\t * The icon for this menu.\n\t *\n\t * @var string\n\t */\n\tpublic $icon = 'dashicons-art';\n\n\t/**\n\t * The position in the menu order this menu should appear.\n\t *\n\t * @var int\n\t */\n\tpublic $position = -1;\n\n\t/**\n\t * The function/file that displays the page content for the menu page.\n\t *\n\t * @var string|callable\n\t */\n\tpublic $render = null;\n\n\t/**\n\t * The function that run on page POST to save data.\n\t *\n\t * @var callable\n\t */\n\tpublic $onsave = null;\n\n\t/**\n\t * Hold contextual help tabs.\n\t *\n\t * @var array\n\t */\n\tpublic $help = null;\n\n\t/**\n\t * Hold scripts and styles.\n\t *\n\t * @var array\n\t */\n\tpublic $assets = null;\n\n\t/**\n\t * Check if plugin is network active.\n\t *\n\t * @var array\n\t */\n\tpublic $is_network = false;\n\n\t/**\n\t * Hold classes for body tag.\n\t *\n\t * @var array\n\t */\n\tpublic $classes = null;\n\n\t/**\n\t * The Constructor.\n\t *\n\t * @param string $id     Admin page unique id.\n\t * @param string $title  Title of the admin page.\n\t * @param array  $config Optional. Override page settings.\n\t */\n\tpublic function __construct( $id, $title, $config = [] ) {\n\n\t\t// Early bail!\n\t\tif ( ! $id ) {\n\t\t\twp_die( esc_html__( '$id variable required' ), esc_html__( 'Variable Required' ) );\n\t\t}\n\n\t\tif ( ! $title ) {\n\t\t\twp_die( esc_html__( '$title variable required' ), esc_html__( 'Variable Required' ) );\n\t\t}\n\n\t\t$this->id    = $id;\n\t\t$this->title = $title;\n\t\tforeach ( $config as $key => $value ) {\n\t\t\t$this->$key = $value;\n\t\t}\n\n\t\tif ( ! $this->menu_title ) {\n\t\t\t$this->menu_title = $title;\n\t\t}\n\n\t\tadd_action( 'init', [ $this, 'init' ], 25 );\n\t}\n\n\t/**\n\t * Init admin page when WordPress Initialises.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\t$priority = $this->parent ? intval( $this->position ) : -1;\n\t\tadd_action( $this->is_network ? 'network_admin_menu' : 'admin_menu', [ $this, 'register_menu' ], $priority );\n\n\t\t// If not the page is not this page stop here.\n\t\tif ( ! $this->is_current_page() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$hooks = [\n\t\t\t'admin_init'            => [\n\t\t\t\t'callback'  => 'save',\n\t\t\t\t'condition' => ! is_null( $this->onsave ) && is_callable( $this->onsave ),\n\t\t\t],\n\t\t\t'admin_enqueue_scripts' => [\n\t\t\t\t'callback'  => 'enqueue',\n\t\t\t\t'condition' => ! empty( $this->assets ),\n\t\t\t],\n\t\t\t'admin_head'            => [\n\t\t\t\t'callback'  => 'contextual_help',\n\t\t\t\t'condition' => ! empty( $this->help ),\n\t\t\t],\n\t\t\t'admin_body_class'      => [\n\t\t\t\t'callback'  => 'body_class',\n\t\t\t\t'condition' => ! empty( $this->classes ),\n\t\t\t],\n\t\t];\n\n\t\tforeach ( $hooks as $hook => $data ) {\n\t\t\tif ( true === $data['condition'] ) {\n\t\t\t\tadd_action( $hook, [ $this, $data['callback'] ] );\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Register Admin Menu.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function register_menu() {\n\t\tif ( ! $this->parent ) {\n\t\t\tadd_menu_page( $this->title, $this->menu_title, $this->capability, $this->id, [ $this, 'display' ], $this->icon, $this->position );\n\t\t\treturn;\n\t\t}\n\n\t\tadd_submenu_page( $this->parent, $this->title, $this->menu_title, $this->capability, $this->id, [ $this, 'display' ] );\n\t}\n\n\t/**\n\t * Enqueue styles and scripts.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function enqueue() {\n\t\t$this->enqueue_styles();\n\t\t$this->enqueue_scripts();\n\t}\n\n\t/**\n\t * Add classes to <body> of WordPress admin.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $classes Space-separated list of CSS classes.\n\t *\n\t * @return string\n\t */\n\tpublic function body_class( $classes = '' ) {\n\t\treturn $classes . ' ' . join( ' ', $this->classes );\n\t}\n\n\t/**\n\t * Save anything you want using onsave function.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function save() {\n\t\tcall_user_func( $this->onsave, $this );\n\t}\n\n\t/**\n\t * Contextual Help.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function contextual_help() {\n\t\t$screen = get_current_screen();\n\n\t\tforeach ( $this->help as $tab_id => $tab ) {\n\t\t\t$tab['id']      = $tab_id;\n\t\t\t$tab['content'] = $this->get_help_content( $tab );\n\t\t\t$screen->add_help_tab( $tab );\n\t\t}\n\t}\n\n\t/**\n\t * Render admin page content using render function you passed in config.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function display() {\n\t\tif ( is_null( $this->render ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_callable( $this->render ) ) {\n\t\t\tcall_user_func( $this->render, $this );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_string( $this->render ) ) {\n\t\t\tinclude_once $this->render;\n\t\t}\n\t}\n\n\t/**\n\t * Is the page is currrent page.\n\t *\n\t * @return bool\n\t */\n\tpublic function is_current_page() {\n\t\treturn Param::get( 'page' ) === $this->id;\n\t}\n\n\t/**\n\t * Enqueue styles\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tprivate function enqueue_styles() {\n\t\tif ( ! isset( $this->assets['styles'] ) || empty( $this->assets['styles'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->assets['styles'] as $handle => $src ) {\n\t\t\twp_enqueue_style( $handle, $src, null );\n\t\t}\n\t}\n\n\t/**\n\t * Enqueue scripts.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tprivate function enqueue_scripts() {\n\t\tif ( ! isset( $this->assets['scripts'] ) || empty( $this->assets['scripts'] ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $this->assets['scripts'] as $handle => $src ) {\n\t\t\twp_enqueue_script( $handle, $src, null, null, true );\n\t\t}\n\t}\n\n\t/**\n\t * Get tab content\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param array $tab Tab to get content for.\n\t *\n\t * @return string\n\t */\n\tprivate function get_help_content( $tab ) {\n\t\tob_start();\n\n\t\t// If it is a function.\n\t\tif ( isset( $tab['content'] ) && is_callable( $tab['content'] ) ) {\n\t\t\tcall_user_func( $tab['content'] );\n\t\t}\n\n\t\t// If it is a file.\n\t\tif ( isset( $tab['view'] ) && $tab['view'] ) {\n\t\t\trequire $tab['view'];\n\t\t}\n\n\t\treturn ob_get_clean();\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/admin/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php // Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-attachment.php","ext":"php","size":2957,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Attachment helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\n/**\n * Attachment class.\n */\nclass Attachment {\n\n\t/**\n\t * Grabs an image alt text.\n\t *\n\t * @param int $attachment_id The attachment ID.\n\t *\n\t * @return string The image alt text.\n\t */\n\tpublic static function get_alt_tag( $attachment_id ) {\n\t\treturn (string) get_post_meta( $attachment_id, '_wp_attachment_image_alt', true );\n\t}\n\n\t/**\n\t * Get the relative path of the image.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $img Image URL.\n\t *\n\t * @return string The expanded image URL.\n\t */\n\tpublic static function get_relative_path( $img ) {\n\t\tif ( '/' !== $img[0] ) {\n\t\t\treturn $img;\n\t\t}\n\n\t\t// If it's a relative URL, it's relative to the domain, not necessarily to the WordPress install, we\n\t\t// want to preserve domain name and URL scheme (http / https) though.\n\t\t$parsed_url = wp_parse_url( home_url() );\n\n\t\treturn $parsed_url['scheme'] . '://' . $parsed_url['host'] . $img;\n\t}\n\n\t/**\n\t * Find an attachment ID for a given URL.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $url The URL to find the attachment for.\n\t *\n\t * @return int The found attachment ID, or 0 if none was found.\n\t */\n\tpublic static function get_by_url( $url ) {\n\t\t// Because get_by_url won't work on resized versions of images, we strip out the size part of an image URL.\n\t\t$url = preg_replace( '/(.*)-\\d+x\\d+\\.(jpg|png|gif)$/', '$1.$2', $url );\n\n\t\t$id = function_exists( 'wpcom_vip_attachment_url_to_postid' ) ? wpcom_vip_attachment_url_to_postid( $url ) : self::url_to_postid( $url );\n\n\t\treturn absint( $id );\n\t}\n\n\t/**\n\t * Implements the attachment_url_to_postid with use of WP Cache.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @link https://dotlayer.com/20-wordpress-core-functions-that-dont-scale-and-how-to-work-around-it/\n\t *\n\t * @param string $url The attachment URL for which we want to know the Post ID.\n\t *\n\t * @return int The Post ID belonging to the attachment, 0 if not found.\n\t */\n\tprivate static function url_to_postid( $url ) {\n\t\t$cache_key = sprintf( 'mythemeshop_attachment_url_post_id_%s', md5( $url ) );\n\n\t\t// Set the ID based on the hashed url in the cache.\n\t\t$id = wp_cache_get( $cache_key );\n\n\t\tif ( 'not_found' === $id ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// ID is found in cache, return.\n\t\tif ( false !== $id ) {\n\t\t\treturn $id;\n\t\t}\n\n\t\t// phpcs:ignore WordPress.VIP.RestrictedFunctions -- We use the WP COM version if we can, see above.\n\t\t$id = attachment_url_to_postid( $url );\n\n\t\tif ( empty( $id ) ) {\n\t\t\twp_cache_set( $cache_key, 'not_found', 'default', ( 12 * HOUR_IN_SECONDS + mt_rand( 0, ( 4 * HOUR_IN_SECONDS ) ) ) );\n\t\t\treturn 0;\n\t\t}\n\n\t\t// We have the Post ID, but it's not in the cache yet. We do that here and return.\n\t\twp_cache_set( $cache_key, $id, 'default', ( 24 * HOUR_IN_SECONDS + mt_rand( 0, ( 12 * HOUR_IN_SECONDS ) ) ) );\n\n\t\treturn $id;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-html.php","ext":"php","size":1825,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The HTML helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\n/**\n * HTML class.\n */\nclass HTML {\n\n\t/**\n\t * Extract attributes from a html tag.\n\t *\n\t * @param string $elem Extract attributes from tag.\n\t *\n\t * @return array\n\t */\n\tpublic static function extract_attributes( $elem ) {\n\t\t$regex = '#([^\\s=]+)\\s*=\\s*(\\'[^<\\']*\\'|\"[^<\"]*\")#';\n\t\tpreg_match_all( $regex, $elem, $attributes, PREG_SET_ORDER );\n\n\t\t$new = [];\n\t\t$remaining = $elem;\n\t\tforeach ( $attributes as $attribute ) {\n\t\t\t$val = substr( $attribute[2], 1, -1 );\n\t\t\t$new[ $attribute[1] ] = $val;\n\t\t\t$remaining = str_replace( $attribute[0], '', $remaining );\n\t\t}\n\n\t\t// Chop off tag name.\n\t\t$remaining = preg_replace( '/<[^\\s]+/', '', $remaining, 1 );\n\t\t// Check for empty attributes without values.\n\t\t$regex = '/([^<][\\w\\d:_-]+)[\\s>]/i';\n\t\tpreg_match_all( $regex, $remaining, $attributes, PREG_SET_ORDER );\n\t\tforeach ( $attributes as $attribute ) {\n\t\t\t$new[ trim( $attribute[1] ) ] = null;\n\t\t}\n\n\t\treturn $new;\n\t}\n\n\t/**\n\t * Generate html attribute string for array.\n\t *\n\t * @param array  $attributes Contains key/value pair to generate a string.\n\t * @param string $prefix     If you want to append a prefic before every key.\n\t *\n\t * @return string\n\t */\n\tpublic static function attributes_to_string( $attributes = [], $prefix = '' ) {\n\n\t\t// Early Bail!\n\t\tif ( empty( $attributes ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$out = '';\n\t\tforeach ( $attributes as $key => $value ) {\n\t\t\tif ( true === $value || false === $value ) {\n\t\t\t\t$value = $value ? 'true' : 'false';\n\t\t\t}\n\n\t\t\t$out .= ' ' . esc_html( $prefix . $key );\n\t\t\tif ( null === $value ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$out .= sprintf( '=\"%s\"', esc_attr( $value ) );\n\t\t}\n\n\t\treturn $out;\n\t}\n}"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-arr.php","ext":"php","size":4359,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Array helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\nuse ArrayAccess;\n\n/**\n * Arr class.\n */\nclass Arr {\n\n\t/**\n\t * Determine whether the given value is array accessible.\n\t *\n\t * @param mixed $value Value to check.\n\t *\n\t * @return bool\n\t */\n\tpublic static function accessible( $value ) {\n\t\treturn is_array( $value ) || $value instanceof ArrayAccess;\n\t}\n\n\t/**\n\t * Determine if the given key exists in the provided array.\n\t *\n\t * @param ArrayAccess|array $array Array to check key in.\n\t * @param string|int        $key   Key to check for.\n\t *\n\t * @return bool\n\t */\n\tpublic static function exists( $array, $key ) {\n\t\tif ( $array instanceof ArrayAccess ) {\n\t\t\t// @codeCoverageIgnoreStart\n\t\t\treturn $array->offsetExists( $key );\n\t\t\t// @codeCoverageIgnoreEnd\n\t\t}\n\n\t\treturn array_key_exists( $key, $array );\n\t}\n\n\t/**\n\t * Check whether an array or [[\\Traversable]] contains an element.\n\t *\n\t * This method does the same as the PHP function [in_array()](https://secure.php.net/manual/en/function.in-array.php)\n\t * but additionally works for objects that implement the [[\\Traversable]] interface.\n\t *\n\t * @throws \\InvalidArgumentException If `$array` is neither traversable nor an array.\n\t *\n\t * @param array|\\Traversable $array  The set of values to search.\n\t * @param mixed              $search The value to look for.\n\t * @param bool               $strict Whether to enable strict (`===`) comparison.\n\t *\n\t * @return bool `true` if `$search` was found in `$array`, `false` otherwise.\n\t */\n\tpublic static function includes( $array, $search, $strict = true ) {\n\t\tif ( $array instanceof \\Traversable ) {\n\t\t\treturn self::includes_traversable( $array, $search, $strict );\n\t\t}\n\n\t\t$is_array = is_array( $array );\n\t\tif ( ! $is_array ) {\n\t\t\tthrow new \\InvalidArgumentException( 'Argument $array must be an array or implement Traversable' );\n\t\t}\n\n\t\treturn $is_array ? in_array( $search, $array, $strict ) : false; // phpcs:ignore\n\t}\n\n\t/**\n\t * Check Traversable contains an element.\n\t *\n\t * @param \\Traversable $array  The set of values to search.\n\t * @param mixed        $search The value to look for.\n\t * @param bool         $strict Whether to enable strict (`===`) comparison.\n\t *\n\t * @return bool `true` if `$search` was found in `$array`, `false` otherwise.\n\t */\n\tprivate static function includes_traversable( $array, $search, $strict = true ) {\n\t\tforeach ( $array as $value ) {\n\t\t\tif ( ( $strict && $search === $value ) || $search == $value ) { // phpcs:ignore\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Insert a single array item inside another array at a set position\n\t *\n\t * @param array $array    Array to modify. Is passed by reference, and no return is needed.\n\t * @param array $new      New array to insert.\n\t * @param int   $position Position in the main array to insert the new array.\n\t */\n\tpublic static function insert( &$array, $new, $position ) {\n\t\t$before = array_slice( $array, 0, $position - 1 );\n\t\t$after  = array_diff_key( $array, $before );\n\t\t$array  = array_merge( $before, $new, $after );\n\t}\n\n\t/**\n\t * Push an item onto the beginning of an array.\n\t *\n\t * @param array $array Array to add.\n\t * @param mixed $value Value to add.\n\t * @param mixed $key   Add with this key.\n\t */\n\tpublic static function prepend( &$array, $value, $key = null ) {\n\t\tif ( is_null( $key ) ) {\n\t\t\tarray_unshift( $array, $value );\n\t\t\treturn;\n\t\t}\n\n\t\t$array = [ $key => $value ] + $array;\n\t}\n\n\t/**\n\t * Update array add or delete value\n\t *\n\t * @param array $array Array to modify. Is passed by reference, and no return is needed.\n\t * @param array $value Value to add or delete.\n\t */\n\tpublic static function add_delete_value( &$array, $value ) {\n\t\tif ( ( $key = array_search( $value, $array ) ) !== false ) { // @codingStandardsIgnoreLine\n\t\t\tunset( $array[ $key ] );\n\t\t\treturn;\n\t\t}\n\n\t\t$array[] = $value;\n\t}\n\n\t/**\n\t * Create an array from string.\n\t *\n\t * @param string $string    The string to split.\n\t * @param string $separator Specifies where to break the string.\n\t *\n\t * @return array Returns an array after applying the function to each one.\n\t */\n\tpublic static function from_string( $string, $separator = ',' ) {\n\t\treturn array_values( array_filter( array_map( 'trim', explode( $separator, $string ) ) ) );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-url.php","ext":"php","size":4027,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The URL helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\nuse MyThemeShop\\Helpers\\Str;\nuse MyThemeShop\\Helpers\\Param;\n\n/**\n * Url class.\n */\nclass Url {\n\n\t/**\n\t * Simple check for validating a URL, it must start with http:// or https://.\n\t * and pass FILTER_VALIDATE_URL validation.\n\t *\n\t * @param string $url to check.\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_url( $url ) {\n\t\tif ( ! is_string( $url ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Must start with http:// or https://.\n\t\tif ( 0 !== strpos( $url, 'http://' ) && 0 !== strpos( $url, 'https://' ) && 0 !== strpos( $url, '//' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Check for scheme first, if it's missing then add it.\n\t\tif ( 0 === strpos( $url, '//' ) ) {\n\t\t\t$url = 'http:' . $url;\n\t\t}\n\n\t\t// Must pass validation.\n\t\treturn false !== filter_var( trailingslashit( $url ), FILTER_VALIDATE_URL ) ? true : false;\n\t}\n\n\t/**\n\t * Check whether a url is relative.\n\t *\n\t * @param string $url URL string to check.\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_relative( $url ) {\n\t\treturn ( 0 !== strpos( $url, 'http' ) && 0 !== strpos( $url, '//' ) );\n\t}\n\n\t/**\n\t * Checks whether a url is external.\n\t *\n\t * @param string $url    URL string to check. This should be a absolute URL.\n\t * @param string $domain If wants to use some other domain not home_url().\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_external( $url, $domain = false ) {\n\t\tif ( empty( $url ) || '#' === $url[0] ) { // Link to current page.\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( self::is_affiliate( $url ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( '/' === $url[0] ) { // Link to current page or relative link.\n\t\t\treturn false;\n\t\t}\n\n\t\t$domain = self::get_domain( $domain ? $domain : home_url() );\n\t\tif ( Str::contains( $domain, $url ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Checks whether a link is an affiliate link.\n\t *\n\t * @param string $url URL string to check. This should be a absolute URL.\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_affiliate( $url ) {\n\t\tif ( empty( $url ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Filter: 'wp_helpers_is_affiliate_link' - Allows developer to consider a link as affiliate.\n\t\t *\n\t\t * @param bool   $value Default false.\n\t\t * @param string $url URL.\n\t\t */\n\t\treturn apply_filters( 'wp_helpers_is_affiliate_link', false, $url );\n\t}\n\n\t/**\n\t * Get current url.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string\n\t */\n\tpublic static function get_current_url() {\n\t\treturn self::get_scheme() . '://' . self::get_host() . self::get_port() . Param::server( 'REQUEST_URI' );\n\t}\n\n\t/**\n\t * Get url scheme.\n\t *\n\t * @return string\n\t */\n\tpublic static function get_scheme() {\n\t\treturn is_ssl() ? 'https' : 'http';\n\t}\n\n\t/**\n\t * Some setups like HTTP_HOST, some like SERVER_NAME, it's complicated.\n\t *\n\t * @link http://stackoverflow.com/questions/2297403/http-host-vs-server-name\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string the HTTP_HOST or SERVER_NAME\n\t */\n\tpublic static function get_host() {\n\t\t$host = Param::server( 'HTTP_HOST' );\n\t\tif ( false !== $host ) {\n\t\t\treturn $host;\n\t\t}\n\n\t\t$name = Param::server( 'SERVER_NAME' );\n\t\tif ( false !== $name ) {\n\t\t\treturn $name;\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Get current request port.\n\t *\n\t * @return string\n\t */\n\tpublic static function get_port() {\n\t\t$port     = Param::server( 'SERVER_PORT' );\n\t\t$has_port = $port && ! in_array( $port, [ '80', '443' ], true );\n\t\treturn $has_port ? ':' . $port : '';\n\t}\n\n\t/**\n\t * Get parent domain\n\t *\n\t * @param string $url Url to parse.\n\t *\n\t * @return string\n\t */\n\tpublic static function get_domain( $url ) {\n\t\t$pieces = wp_parse_url( $url );\n\t\t$domain = isset( $pieces['host'] ) ? $pieces['host'] : '';\n\n\t\tif ( Str::contains( 'localhost', $domain ) ) {\n\t\t\treturn 'localhost';\n\t\t}\n\n\t\tif ( preg_match( '/(?P<domain>[a-zÀ-ž0-9][a-zÀ-ž0-9\\-]{1,63}\\.[a-zÀ-ž\\.]{2,15})$/ui', $domain, $regs ) ) {\n\t\t\treturn $regs['domain'];\n\t\t}\n\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-str.php","ext":"php","size":6261,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The String helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\n/**\n * Str class.\n */\nclass Str {\n\n\t/**\n\t * Validates whether the passed variable is a empty string.\n\t *\n\t * @param mixed $variable The variable to validate.\n\t *\n\t * @return bool Whether or not the passed value is a non-empty string.\n\t */\n\tpublic static function is_empty( $variable ) {\n\t\treturn empty( $variable ) || ! is_string( $variable );\n\t}\n\n\t/**\n\t * Validates whether the passed variable is a non-empty string.\n\t *\n\t * @param mixed $variable The variable to validate.\n\t *\n\t * @return bool Whether or not the passed value is a non-empty string.\n\t */\n\tpublic static function is_non_empty( $variable ) {\n\t\treturn is_string( $variable ) && '' !== $variable;\n\t}\n\n\t/**\n\t * Check if the string contains the given value.\n\t *\n\t * @param string $needle   The sub-string to search for.\n\t * @param string $haystack The string to search.\n\t *\n\t * @return bool\n\t */\n\tpublic static function contains( $needle, $haystack ) {\n\t\treturn self::is_non_empty( $needle ) ? strpos( $haystack, $needle ) !== false : false;\n\t}\n\n\t/**\n\t * Check if the string begins with the given value.\n\t *\n\t * @param string $needle   The sub-string to search for.\n\t * @param string $haystack The string to search.\n\t *\n\t * @return bool\n\t */\n\tpublic static function starts_with( $needle, $haystack ) {\n\t\treturn '' === $needle || substr( $haystack, 0, strlen( $needle ) ) === (string) $needle;\n\t}\n\n\t/**\n\t * Check if the string end with the given value.\n\t *\n\t * @param string $needle   The sub-string to search for.\n\t * @param string $haystack The string to search.\n\t *\n\t * @return bool\n\t */\n\tpublic static function ends_with( $needle, $haystack ) {\n\t\treturn '' === $needle || substr( $haystack, -strlen( $needle ) ) === (string) $needle;\n\t}\n\n\t/**\n\t * Check the string for desired comparison.\n\t *\n\t * @param string $needle     The sub-string to search for.\n\t * @param string $haystack   The string to search.\n\t * @param string $comparison The type of comparison.\n\t *\n\t * @return bool\n\t */\n\tpublic static function comparison( $needle, $haystack, $comparison = '' ) {\n\n\t\t$hash = array(\n\t\t\t'regex'    => 'preg_match',\n\t\t\t'end'      => array( __CLASS__, 'ends_with' ),\n\t\t\t'start'    => array( __CLASS__, 'starts_with' ),\n\t\t\t'contains' => array( __CLASS__, 'contains' ),\n\t\t);\n\n\t\tif ( $comparison && isset( $hash[ $comparison ] ) ) {\n\t\t\treturn call_user_func( $hash[ $comparison ], $needle, $haystack );\n\t\t}\n\n\t\t// Exact.\n\t\treturn $needle === $haystack;\n\t}\n\n\t/**\n\t * Convert string to array with defined seprator.\n\t *\n\t * @param string $str String to convert.\n\t * @param string $sep Seprator.\n\t *\n\t * @return bool|array\n\t */\n\tpublic static function to_arr( $str, $sep = ',' ) {\n\t\t$parts = explode( $sep, trim( $str ) );\n\n\t\treturn empty( $parts ) ? false : $parts;\n\t}\n\n\t/**\n\t * Convert string to array, weed out empty elements and whitespaces.\n\t *\n\t * @param string $str         User-defined list.\n\t * @param string $sep_pattern Separator pattern for regex.\n\t *\n\t * @return array\n\t */\n\tpublic static function to_arr_no_empty( $str, $sep_pattern = '\\r\\n|[\\r\\n]' ) {\n\t\t$array = empty( $str ) ? array() : preg_split( '/' . $sep_pattern . '/', $str, -1, PREG_SPLIT_NO_EMPTY );\n\t\t$array = array_filter( array_map( 'trim', $array ) );\n\n\t\treturn $array;\n\t}\n\n\t/**\n\t * This function transforms the php.ini notation for numbers (like '2M') to an integer.\n\t *\n\t * @param string $size The size.\n\t *\n\t * @return int\n\t */\n\tpublic static function let_to_num( $size ) {\n\t\t$char = substr( $size, -1 );\n\t\t$ret  = substr( $size, 0, -1 );\n\n\t\t// @codingStandardsIgnoreStart\n\t\tswitch ( strtoupper( $char ) ) {\n\t\t\tcase 'P':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'T':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'G':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'M':\n\t\t\t\t$ret *= 1024;\n\t\t\tcase 'K':\n\t\t\t\t$ret *= 1024;\n\t\t}\n\t\t// @codingStandardsIgnoreEnd\n\n\t\treturn $ret;\n\t}\n\n\t/**\n\t * Convert a number to K, M, B, etc.\n\t *\n\t * @param int|double $number    Number which to convert to pretty string.\n\t * @param int        $precision Decimal places in the human-readable format.\n\t *\n\t * @return string\n\t */\n\tpublic static function human_number( $number, $precision = 1 ) {\n\n\t\tif ( ! is_numeric( $number ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t$negative = '';\n\t\tif ( abs( $number ) != $number ) {\n\t\t\t$negative = '-';\n\t\t\t$number   = abs( $number );\n\t\t}\n\n\t\tif ( $number < 1000 ) {\n\t\t\treturn $negative ? -1 * $number : $number;\n\t\t}\n\n\t\t$unit  = intval( log( $number, 1000 ) );\n\t\t$units = array( '', 'K', 'M', 'B', 'T', 'Q' );\n\n\t\tif ( array_key_exists( $unit, $units ) ) {\n\t\t\treturn sprintf( '%s%s%s', $negative, rtrim( number_format( $number / pow( 1000, $unit ), $precision ), '.0' ), $units[ $unit ] );\n\t\t}\n\n\t\treturn $number;\n\t}\n\n\t/**\n\t * Truncate text for given length.\n\t *\n\t * @param {string} $str    Text to truncate.\n\t * @param {number} $length Length to truncate for.\n\t * @param {string} $append Append to the end if string is truncated.\n\t *\n\t * @return {string} Truncated text.\n\t */\n\tpublic static function truncate( $str, $length = 110, $append = '' ) {\n\t\t$str     = wp_strip_all_tags( $str, true );\n\t\t$strlen  = mb_strlen( $str );\n\t\t$excerpt = mb_substr( $str, 0, $length );\n\n\t\t// Remove part of an entity at the end.\n\t\t$excerpt = preg_replace( '/&[^;\\s]{0,6}$/', '', $excerpt );\n\t\tif ( $str !== $excerpt ) {\n\t\t\t$strrpos = function_exists( 'mb_strrpos' ) ? 'mb_strrpos' : 'strrpos';\n\t\t\t$excerpt = mb_substr( $str, 0, $strrpos( trim( $excerpt ), ' ' ) );\n\t\t}\n\n\t\tif ( $strlen > $length ) {\n\t\t\t$excerpt .= $append;\n\t\t}\n\n\t\treturn $excerpt;\n\t}\n\n\t/**\n\t * Multibyte ucwords.\n\t *\n\t * @param string $string String to convert.\n\t */\n\tpublic static function mb_ucwords( $string ) {\n\t\tif ( ! function_exists( 'mb_convert_case' ) || ! function_exists( 'mb_detect_encoding' ) || mb_detect_encoding( $string ) !== 'UTF-8' ) {\n\t\t\treturn ucwords( $string );\n\t\t}\n\n\t\t$words = preg_split( '/([\\s]+)/u', $string, -1, PREG_SPLIT_DELIM_CAPTURE );\n\t\t$ucwords = '';\n\t\tforeach ( $words as $word ) {\n\t\t\tif ( ! empty( $word[ 0 ] ) ) {\n\t\t\t\t$ucwords .= preg_match( '/[\\p{L}]/u', $word[0] ) ? mb_strtoupper( $word[0], 'UTF-8' ) . mb_substr( $word, 1, mb_strlen( $word ), 'UTF-8' ) : $word;\n\t\t\t}\n\t\t}\n\n\t\treturn $ucwords;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-wordpress.php","ext":"php","size":3341,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The WordPress helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\nuse MyThemeShop\\Helpers\\Str;\nuse MyThemeShop\\Helpers\\Param;\n\n/**\n * WordPress class.\n */\nclass WordPress {\n\n\t/**\n\t * Get roles.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $output How to return roles.\n\t *\n\t * @return array\n\t */\n\tpublic static function get_roles( $output = 'names' ) {\n\t\t$wp_roles = wp_roles();\n\n\t\tif ( 'names' !== $output ) {\n\t\t\treturn $wp_roles->roles;\n\t\t}\n\n\t\treturn $wp_roles->get_names();\n\t}\n\n\t/**\n\t * Retrieves the sitename.\n\t *\n\t * @return string\n\t */\n\tpublic static function get_site_name() {\n\t\treturn wp_strip_all_tags( get_bloginfo( 'name' ), true );\n\t}\n\n\t/**\n\t * Get action from request.\n\t *\n\t * @return bool|string\n\t */\n\tpublic static function get_request_action() {\n\t\tif ( empty( $_REQUEST['action'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( '-1' === $_REQUEST['action'] && ! empty( $_REQUEST['action2'] ) ) {\n\t\t\t$_REQUEST['action'] = $_REQUEST['action2'];\n\t\t}\n\n\t\treturn sanitize_key( $_REQUEST['action'] );\n\t}\n\n\t/**\n\t * Instantiates the WordPress filesystem for use.\n\t *\n\t * @return object\n\t */\n\tpublic static function get_filesystem() {\n\t\tglobal $wp_filesystem;\n\n\t\tif ( empty( $wp_filesystem ) ) {\n\t\t\trequire_once ABSPATH . '/wp-admin/includes/file.php';\n\t\t\tWP_Filesystem();\n\t\t}\n\n\t\treturn $wp_filesystem;\n\t}\n\n\t/**\n\t * Get current post type.\n\t *\n\t * This function has some fallback strategies to get the current screen post type.\n\t *\n\t * @return string|bool\n\t */\n\tpublic static function get_post_type() {\n\t\tglobal $pagenow;\n\n\t\t$post_type = self::post_type_from_globals();\n\t\tif ( false !== $post_type ) {\n\t\t\treturn $post_type;\n\t\t}\n\n\t\t$post_type = self::post_type_from_request();\n\t\tif ( false !== $post_type ) {\n\t\t\treturn $post_type;\n\t\t}\n\n\t\treturn 'post-new.php' === $pagenow ? 'post' : false;\n\t}\n\n\t/**\n\t * Get post type from global variables\n\t *\n\t * @return string|bool\n\t */\n\tprivate static function post_type_from_globals() {\n\t\tglobal $post, $typenow, $current_screen;\n\n\t\tif ( $post && $post->post_type ) {\n\t\t\treturn $post->post_type;\n\t\t}\n\n\t\tif ( $typenow ) {\n\t\t\treturn $typenow;\n\t\t}\n\n\t\tif ( $current_screen && $current_screen->post_type ) {\n\t\t\treturn $current_screen->post_type;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get post type from request variables\n\t *\n\t * @return string|bool\n\t */\n\tprivate static function post_type_from_request() {\n\n\t\tif ( $post_type = Param::request( 'post_type' ) ) { // phpcs:ignore\n\t\t\treturn sanitize_key( $post_type );\n\t\t}\n\n\t\tif ( $post_id = Param::request( 'post_ID', 0, FILTER_VALIDATE_INT ) ) { // phpcs:ignore\n\t\t\treturn get_post_type( $post_id );\n\t\t}\n\n\t\t// @codeCoverageIgnoreStart\n\t\tif ( $post = Param::get( 'post' ) ) { // phpcs:ignore\n\t\t\treturn get_post_type( $post );\n\t\t}\n\t\t// @codeCoverageIgnoreEnd\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Strip all shortcodes active or orphan.\n\t *\n\t * @param string $content Content to remove shortcodes from.\n\t *\n\t * @return string\n\t */\n\tpublic static function strip_shortcodes( $content ) {\n\t\tif ( ! Str::contains( '[', $content ) ) {\n\t\t\treturn $content;\n\t\t}\n\n\t\t// Remove Caption shortcode.\n\t\t$content = \\preg_replace( '#\\s*\\[caption[^]]*\\].*?\\[/caption\\]\\s*#is', '', $content );\n\n\t\treturn preg_replace( '~\\[\\/?.*?\\]~s', '', $content );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php // Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-conditional.php","ext":"php","size":3004,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Conditional helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\nuse MyThemeShop\\Helpers\\Param;\n\n/**\n * Conditional class.\n */\nclass Conditional {\n\n\t/**\n\t * Is AJAX request\n\t *\n\t * @return bool Returns true when the page is loaded via ajax.\n\t */\n\tpublic static function is_ajax() {\n\t\treturn function_exists( 'wp_doing_ajax' ) ? wp_doing_ajax() : defined( 'DOING_AJAX' ) && DOING_AJAX;\n\t}\n\n\t/**\n\t * Is CRON request\n\t *\n\t * @return bool Returns true when the page is loaded via cron.\n\t */\n\tpublic static function is_cron() {\n\t\treturn function_exists( 'wp_doing_cron' ) ? wp_doing_cron() : defined( 'DOING_CRON' ) && DOING_CRON;\n\t}\n\n\t/**\n\t * Is auto-saving\n\t *\n\t * @return bool Returns true when the page is loaded for auto-saving.\n\t */\n\tpublic static function is_autosave() {\n\t\treturn defined( 'DOING_AUTOSAVE' ) && DOING_AUTOSAVE;\n\t}\n\n\t/**\n\t * Is REST request\n\t *\n\t * @link https://wordpress.stackexchange.com/questions/221202/does-something-like-is-rest-exist/221289\n\t *\n\t * Case #1: After WP_REST_Request initialisation\n\t * Case #2: Support \"plain\" permalink settings\n\t * Case #3: It can happen that WP_Rewrite is not yet initialized,\n\t *          so do this (wp-settings.php)\n\t * Case #4: URL Path begins with wp-json/ (your REST prefix)\n\t *          Also supports WP installations in subfolders\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_rest() {\n\t\tglobal $wp_rewrite;\n\n\t\t$prefix = rest_get_url_prefix();\n\t\tif (\n\t\t\tdefined( 'REST_REQUEST' ) && REST_REQUEST || // (#1)\n\t\t\tisset( $_GET['rest_route'] ) && // (#2)\n\t\t\t0 === strpos( trim( $_GET['rest_route'], '\\\\/' ), $prefix, 0 )\n\t\t) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// (#3)\n\t\tif ( null === $wp_rewrite ) {\n\t\t\t$wp_rewrite = new \\WP_Rewrite;\n\t\t}\n\n\t\t// (#4)\n\t\t$rest_url    = wp_parse_url( trailingslashit( rest_url() ) );\n\t\t$current_url = wp_parse_url( add_query_arg( [] ) );\n\n\t\tif ( ! isset( $current_url['path'] ) || ! isset( $rest_url['path'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn 0 === strpos( $current_url['path'], $rest_url['path'], 0 );\n\t}\n\n\t/**\n\t * Check if the request is heartbeat.\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_heartbeat() {\n\t\treturn 'heartbeat' === Param::post( 'action' );\n\t}\n\n\t/**\n\t * Check if the request is from frontend.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t */\n\tpublic function is_frontend() {\n\t\treturn ! is_admin();\n\t}\n\n\t/**\n\t * Is WooCommerce Installed\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_woocommerce_active() {\n\t\t// @codeCoverageIgnoreStart\n\t\tif ( ! function_exists( 'is_plugin_active' ) ) {\n\t\t\tinclude_once ABSPATH . 'wp-admin/includes/plugin.php';\n\t\t}\n\t\t// @codeCoverageIgnoreEnd\n\t\treturn is_plugin_active( 'woocommerce/woocommerce.php' ) && function_exists( 'is_woocommerce' );\n\t}\n\n\t/**\n\t * Is EDD Installed\n\t *\n\t * @return bool\n\t */\n\tpublic static function is_edd_active() {\n\t\treturn class_exists( 'Easy_Digital_Downloads' );\n\t}\n}"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-db.php","ext":"php","size":1380,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The database helpers.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\nuse MyThemeShop\\Database\\Database;\n\n/**\n * DB class.\n */\nclass DB {\n\n\t/**\n\t * Retrieve a Database instance by table name.\n\t *\n\t * @param string $table_name A Database instance id.\n\t *\n\t * @return Database Database object instance.\n\t */\n\tpublic static function query_builder( $table_name ) {\n\t\treturn Database::table( $table_name );\n\t}\n\n\t/**\n\t * Check if table exists in db or not.\n\t *\n\t * @param string $table_name Table name to check for existance.\n\t *\n\t * @return bool\n\t */\n\tpublic static function check_table_exists( $table_name ) {\n\t\tglobal $wpdb;\n\n\t\tif ( $wpdb->get_var( $wpdb->prepare( 'SHOW TABLES LIKE %s', $wpdb->esc_like( $wpdb->prefix . $table_name ) ) ) === $wpdb->prefix . $table_name ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if table has more rows than X.\n\t *\n \t * @since      1.1.16\n\t *\n\t * @param string $table_name Table name to check.\n\t * @param int    $limit      Number of rows to check against.\n\t *\n\t * @return bool\n\t */\n\tpublic static function table_size_exceeds( $table_name, $limit ) {\n\t\tglobal $wpdb;\n\n\t\t$check_table = $wpdb->query( \"SELECT 1 FROM {$table_name} LIMIT {$limit}, 1\" );\n\n\t\treturn ! empty( $check_table );\n\t}\n\n\t\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/helpers/class-param.php","ext":"php","size":2313,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Helper class that provides easy access to accessing params from $_GET, $_POST and $_REQUEST.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Helpers\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Helpers;\n\n/**\n * Param class.\n */\nclass Param {\n\n\t/**\n\t * Get field from query string.\n\t *\n\t * @param string $id      Field id to get.\n\t * @param mixed  $default Default value to return if field is not found.\n\t * @param int    $filter  The ID of the filter to apply.\n\t * @param int    $flag    The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t */\n\tpublic static function get( $id, $default = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn filter_has_var( INPUT_GET, $id ) ? filter_input( INPUT_GET, $id, $filter, $flag ) : $default;\n\t}\n\n\t/**\n\t * Get field from FORM post.\n\t *\n\t * @param string $id      Field id to get.\n\t * @param mixed  $default Default value to return if field is not found.\n\t * @param int    $filter  The ID of the filter to apply.\n\t * @param int    $flag    The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t */\n\tpublic static function post( $id, $default = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn filter_has_var( INPUT_POST, $id ) ? filter_input( INPUT_POST, $id, $filter, $flag ) : $default;\n\t}\n\n\t/**\n\t * Get field from request.\n\t *\n\t * @param string $id      Field id to get.\n\t * @param mixed  $default Default value to return if field is not found.\n\t * @param int    $filter  The ID of the filter to apply.\n\t * @param int    $flag    The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t */\n\tpublic static function request( $id, $default = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn isset( $_REQUEST[ $id ] ) ? filter_var( $_REQUEST[ $id ], $filter, $flag ) : $default;\n\t}\n\n\t/**\n\t * Get field from FORM server.\n\t *\n\t * @param string $id      Field id to get.\n\t * @param mixed  $default Default value to return if field is not found.\n\t * @param int    $filter  The ID of the filter to apply.\n\t * @param int    $flag    The ID of the flag to apply.\n\t *\n\t * @return mixed\n\t */\n\tpublic static function server( $id, $default = false, $filter = FILTER_DEFAULT, $flag = [] ) {\n\t\treturn isset( $_SERVER[ $id ] ) ? filter_var( $_SERVER[ $id ], $filter, $flag ) : $default;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/class-notification-center.php","ext":"php","size":8297,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Notification center handles notifications storage and display.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop;\n\n/**\n * Notification_Center class.\n */\nclass Notification_Center {\n\n\t/**\n\t * Option name to store notifications in.\n\t *\n\t * @var string\n\t */\n\tprivate $storage_key = '';\n\n\t/**\n\t * Notifications.\n\t *\n\t * @var array\n\t */\n\tprivate $notifications = [];\n\n\t/**\n\t * Stores whether we need to clear storage or not.\n\t *\n\t * @var array\n\t */\n\tprivate $should_clear_storage = true;\n\n\t/**\n\t * Stores already displayed notice texts to avoid duplication.\n\t *\n\t * @var array\n\t */\n\tprivate $displayed_notifications = [];\n\n\t/**\n\t * Internal flag for whether notifications have been retrieved from storage.\n\t *\n\t * @var bool\n\t */\n\tprivate $retrieved = false;\n\n\t/**\n\t * Construct\n\t *\n\t * @param string $storage_key Option name to store notification in.\n\t */\n\tpublic function __construct( $storage_key = 'mythemeshop_notifications' ) {\n\t\t$this->storage_key = $storage_key;\n\t\tadd_action( 'plugins_loaded', array( $this, 'get_from_storage' ), 5 );\n\t\tadd_action( 'all_admin_notices', array( $this, 'display' ) );\n\t\tadd_action( 'shutdown', array( $this, 'update_storage' ) );\n\t\tadd_action( 'admin_footer', array( $this, 'print_javascript' ) );\n\n\t\tadd_action( 'wp_ajax_wp_helpers_notice_dismissible', array( $this, 'notice_dismissible' ) );\n\t}\n\n\t/**\n\t * Retrieve the notifications from storage\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array Notification[] Notifications\n\t */\n\tpublic function get_from_storage() {\n\t\tif ( $this->retrieved ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->retrieved = true;\n\t\t$notifications   = get_option( $this->storage_key );\n\n\t\t// Check if notifications are stored.\n\t\tif ( empty( $notifications ) ) {\n\t\t\t$this->should_clear_storage = false;\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_array( $notifications ) ) {\n\t\t\tforeach ( $notifications as $notification ) {\n\t\t\t\t$this->notifications[] = new Notification(\n\t\t\t\t\t$notification['message'],\n\t\t\t\t\t$notification['options']\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Display the notifications.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function display() {\n\n\t\t// Never display notifications for network admin.\n\t\tif ( $this->is_network_admin() ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$notifications = $this->get_sorted_notifications();\n\t\tif ( empty( $notifications ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $notifications as $notification ) {\n\t\t\tif ( $notification->can_display() && ! in_array( (string) $notification, $this->displayed_notifications, true ) ) {\n\t\t\t\techo $notification;\n\t\t\t\t$this->displayed_notifications[] = (string) $notification;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Print JS for dismissile.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function print_javascript() {\n\t\t?>\n\t\t<script>\n\t\t\t;(function($) {\n\t\t\t\t$( '.wp-helpers-notice.is-dismissible' ).on( 'click', '.notice-dismiss', function() {\n\t\t\t\t\tvar notice = $( this ).parent()\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\turl: ajaxurl,\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\taction: 'wp_helpers_notice_dismissible',\n\t\t\t\t\t\t\tsecurity: notice.data( 'security' ),\n\t\t\t\t\t\t\tnotificationId: notice.attr( 'id' )\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})(jQuery);\n\t\t</script>\n\t\t<?php\n\t}\n\n\t/**\n\t * Save persistent or transactional notifications to storage.\n\t *\n\t * We need to be able to retrieve these so they can be dismissed at any time during the execution.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function update_storage() {\n\t\t$notifications = $this->get_notifications();\n\t\t$notifications = array_filter( $notifications, [ $this, 'remove_notification' ] );\n\n\t\t/**\n\t\t * Filter: 'wp_helpers_notifications_before_storage' - Allows developer to filter notifications before saving them.\n\t\t *\n\t\t * @param Notification[] $notifications\n\t\t */\n\t\t$notifications = apply_filters( 'wp_helpers_notifications_before_storage', $notifications );\n\n\t\t// No notifications to store, clear storage.\n\t\tif ( empty( $notifications ) && $this->should_clear_storage ) {\n\t\t\tdelete_option( $this->storage_key );\n\t\t\treturn;\n\t\t}\n\n\t\t$notifications = array_map( [ $this, 'notification_to_array' ], $notifications );\n\n\t\t// Save the notifications to the storage.\n\t\tupdate_option( $this->storage_key, $notifications );\n\t}\n\n\t/**\n\t * Dismiss persistent notice.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function notice_dismissible() {\n\t\t$notification_id = filter_input( INPUT_POST, 'notificationId' );\n\t\tcheck_ajax_referer( $notification_id, 'security' );\n\n\t\t$notification = $this->remove_by_id( $notification_id );\n\n\t\t/**\n\t\t * Filter: 'wp_helpers_notification_dismissed' - Allows developer to perform action after dismissed.\n\t\t *\n\t\t * @param Notification[] $notifications\n\t\t */\n\t\tdo_action( 'wp_helpers_notification_dismissed', $notification_id, $notification );\n\t}\n\n\t/**\n\t * Add notification\n\t *\n\t * @param string $message Message string.\n\t * @param array  $options Set of options.\n\t */\n\tpublic function add( $message, $options = [] ) {\n\t\tif ( isset( $options['id'] ) && ! is_null( $this->get_notification_by_id( $options['id'] ) ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->notifications[] = new Notification(\n\t\t\t$message,\n\t\t\t$options\n\t\t);\n\t}\n\n\t/**\n\t * Provide a way to verify present notifications\n\t *\n\t * @return array|Notification[] Registered notifications.\n\t */\n\tpublic function get_notifications() {\n\t\treturn $this->notifications;\n\t}\n\n\t/**\n\t * Get the notification by ID\n\t *\n\t * @param  string $notification_id The ID of the notification to search for.\n\t * @return null|Notification\n\t */\n\tpublic function get_notification_by_id( $notification_id ) {\n\t\tforeach ( $this->notifications as $notification ) {\n\t\t\tif ( $notification_id === $notification->args( 'id' ) ) {\n\t\t\t\treturn $notification;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Remove the notification by ID\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $notification_id The ID of the notification to search for.\n\t * @return Notification Instance of delete notification.\n\t */\n\tpublic function remove_by_id( $notification_id ) {\n\t\t$notification = $this->get_notification_by_id( $notification_id );\n\t\tif ( ! is_null( $notification ) ) {\n\t\t\t$notification->dismiss();\n\t\t}\n\n\t\treturn $notification;\n\t}\n\n\t/**\n\t * Remove notification after it has been displayed.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param Notification $notification Notification to remove.\n\t */\n\tpublic function remove_notification( Notification $notification ) {\n\t\tif ( ! $notification->is_displayed() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( $notification->is_persistent() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Return the notifications sorted on type and priority\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array|Notification[] Sorted Notifications\n\t */\n\tprivate function get_sorted_notifications() {\n\t\t$notifications = $this->get_notifications();\n\t\tif ( empty( $notifications ) ) {\n\t\t\treturn [];\n\t\t}\n\n\t\t// Sort by severity, error first.\n\t\tusort( $notifications, [ $this, 'sort_notifications' ] );\n\n\t\treturn $notifications;\n\t}\n\n\t/**\n\t * Sort on type then priority\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  Notification $first  Compare with B.\n\t * @param  Notification $second Compare with A.\n\t * @return int 1, 0 or -1 for sorting offset.\n\t */\n\tprivate function sort_notifications( Notification $first, Notification $second ) {\n\n\t\tif ( 'error' === $first->args( 'type' ) ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tif ( 'error' === $second->args( 'type' ) ) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Convert Notification to array representation\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param  Notification $notification Notification to convert.\n\t * @return array\n\t */\n\tprivate function notification_to_array( Notification $notification ) {\n\t\treturn $notification->to_array();\n\t}\n\n\t/**\n\t * Check if is network admin.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t */\n\tprivate function is_network_admin() {\n\t\treturn function_exists( 'is_network_admin' ) && is_network_admin();\n\t}\n\n\t/**\n\t * Check if a notification with the given ID exists.\n\t *\n\t * @param string $id Notification ID.\n\t * @return boolean\n\t */\n\tpublic function has_notification( $id ) {\n\t\t$notifications = $this->get_notifications();\n\t\tforeach ( $notifications as $notification ) {\n\t\t\tif ( isset( $notification->options['id'] ) && $notification->options['id'] === $id ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/class-notification.php","ext":"php","size":4833,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Notification\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop;\n\nuse MyThemeShop\\Helpers\\Str;\nuse MyThemeShop\\Helpers\\HTML;\n\n/**\n * Notification class.\n */\nclass Notification {\n\n\t/**\n\t * Notification type.\n\t *\n\t * @var string\n\t */\n\tconst ERROR = 'error';\n\n\t/**\n\t * Notification type.\n\t *\n\t * @var string\n\t */\n\tconst SUCCESS = 'success';\n\n\t/**\n\t * Notification type.\n\t *\n\t * @var string\n\t */\n\tconst INFO = 'info';\n\n\t/**\n\t * Notification type.\n\t *\n\t * @var string\n\t */\n\tconst WARNING = 'warning';\n\n\t/**\n\t * Screen check.\n\t *\n\t * @var string\n\t */\n\tconst SCREEN_ANY = 'any';\n\n\t/**\n\t * User capability check.\n\t *\n\t * @var string\n\t */\n\tconst CAPABILITY_ANY = '';\n\n\t/**\n\t * The notification message.\n\t *\n\t * @var string\n\t */\n\tpublic $message = '';\n\n\t/**\n\t * Contains optional arguments:\n\t *\n\t * -             type: The notification type, i.e. 'updated' or 'error'\n\t * -               id: The ID of the notification\n\t * -    dismissal_key: Option name to save dismissal information in, ID will be used if not supplied.\n\t * -           screen: Only display on plugin page or on every page.\n\t *\n\t * @var array Options of this Notification.\n\t */\n\tpublic $options = [];\n\n\t/**\n\t * Internal flag for whether notifications has been displayed.\n\t *\n\t * @var bool\n\t */\n\tprivate $displayed = false;\n\n\t/**\n\t * Notification class constructor.\n\t *\n\t * @param string $message Message string.\n\t * @param array  $options Set of options.\n\t */\n\tpublic function __construct( $message, $options = [] ) {\n\t\t$this->message = $message;\n\t\t$this->options = wp_parse_args(\n\t\t\t$options,\n\t\t\t[\n\t\t\t\t'id'         => '',\n\t\t\t\t'classes'    => '',\n\t\t\t\t'type'       => self::SUCCESS,\n\t\t\t\t'screen'     => self::SCREEN_ANY,\n\t\t\t\t'capability' => self::CAPABILITY_ANY,\n\t\t\t]\n\t\t);\n\t}\n\n\t/**\n\t * Adds string (view) behaviour to the Notification.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string\n\t */\n\tpublic function __toString() {\n\t\treturn $this->render();\n\t}\n\n\t/**\n\t * Return data from options.\n\t *\n\t * @param  string $id Data to get.\n\t * @return mixed\n\t */\n\tpublic function args( $id ) {\n\t\treturn $this->options[ $id ];\n\t}\n\n\t/**\n\t * Is this Notification persistent.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool True if persistent, False if fire and forget.\n\t */\n\tpublic function is_persistent() {\n\t\treturn ! empty( $this->args( 'id' ) );\n\t}\n\n\t/**\n\t * Is this notification displayed.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t */\n\tpublic function is_displayed() {\n\t\treturn $this->displayed;\n\t}\n\n\t/**\n\t * Can display on current screen.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return bool\n\t */\n\tpublic function can_display() {\n\t\t// Removed.\n\t\tif ( $this->displayed ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$screen = get_current_screen();\n\t\tif ( self::SCREEN_ANY === $this->args( 'screen' ) || Str::contains( $this->args( 'screen' ), $screen->id ) ) {\n\t\t\t$this->displayed = true;\n\t\t}\n\n\t\tif ( self::CAPABILITY_ANY !== $this->args( 'capability' ) && ! current_user_can( $this->args( 'capability' ) ) ) {\n\t\t\t$this->displayed = false;\n\t\t}\n\n\t\treturn $this->displayed;\n\t}\n\n\t/**\n\t * Dismiss persisten notification.\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function dismiss() {\n\t\t$this->displayed     = true;\n\t\t$this->options['id'] = '';\n\t}\n\n\t/**\n\t * Return the object properties as an array.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return array\n\t */\n\tpublic function to_array() {\n\t\treturn [\n\t\t\t'message' => $this->message,\n\t\t\t'options' => $this->options,\n\t\t];\n\t}\n\n\t/**\n\t * Renders the notification as a string.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return string The rendered notification.\n\t */\n\tpublic function render() {\n\t\t$attributes = [];\n\n\t\t// Default notification classes.\n\t\t$classes = [\n\t\t\t'notice',\n\t\t\t'notice-' . $this->args( 'type' ),\n\t\t\t$this->args( 'classes' ),\n\t\t];\n\n\t\t// Maintain WordPress visualisation of alerts when they are not persistent.\n\t\tif ( $this->is_persistent() ) {\n\t\t\t$classes[]                   = 'is-dismissible';\n\t\t\t$classes[]                   = 'wp-helpers-notice';\n\t\t\t$attributes['id']            = $this->args( 'id' );\n\t\t\t$attributes['data-security'] = wp_create_nonce( $this->args( 'id' ) );\n\t\t}\n\n\t\tif ( ! empty( $classes ) ) {\n\t\t\t$attributes['class'] = implode( ' ', array_filter( $classes ) );\n\t\t}\n\n\t\t// Build the output DIV.\n\t\t$output = '<div' . HTML::attributes_to_string( $attributes ) . '>' . wpautop( $this->message ) . '</div>' . PHP_EOL;\n\n\t\t/**\n\t\t * Filter: 'wp_helpers_notifications_render' - Allows developer to filter notifications before the output is finalized.\n\t\t *\n\t\t * @param string $output  HTML output.\n\t\t * @param array  $message Notice message.\n\t\t * @param array  $options Notice args.\n\t\t */\n\t\t$output = apply_filters( 'wp_helpers_notifications_render', $output, $this->message, $this->options );\n\n\t\treturn $output;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-select.php","ext":"php","size":2914,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The select functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Select class.\n */\ntrait Select {\n\n\t/**\n\t * Set the selected fields\n\t *\n\t * @param array $fields Fields to select.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function select( $fields = '' ) {\n\t\tif ( empty( $fields ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( is_string( $fields ) ) {\n\t\t\t$this->add_sql_clause( 'select', $fields );\n\t\t\treturn $this;\n\t\t}\n\n\t\tforeach ( $fields as $key => $field ) {\n\t\t\t$this->add_sql_clause( 'select', is_string( $key ) ? \"$key AS $field\" : $field );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Shortcut to add a count function\n\t *\n\t *     ->selectCount('id')\n\t *     ->selectCount('id', 'count')\n\t *\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function selectCount( $field = '*', $alias = null ) { // @codingStandardsIgnoreLine\n\t\treturn $this->selectFunc( 'count', $field, $alias );\n\t}\n\n\t/**\n\t * Shortcut to add a sum function\n\t *\n\t *     ->selectSum('id')\n\t *     ->selectSum('id', 'total')\n\t *\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function selectSum( $field, $alias = null ) { // @codingStandardsIgnoreLine\n\t\treturn $this->selectFunc( 'sum', $field, $alias );\n\t}\n\n\t/**\n\t * Shortcut to add a avg function\n\t *\n\t *     ->selectAvg('id')\n\t *     ->selectAvg('id', 'average')\n\t *\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function selectAvg( $field, $alias = null ) { // @codingStandardsIgnoreLine\n\t\treturn $this->selectFunc( 'avg', $field, $alias );\n\t}\n\n\t/**\n\t * Shortcut to add a function\n\t *\n\t * @param string $func  Function name.\n\t * @param string $field Column name.\n\t * @param string $alias (Optional) Column alias.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function selectFunc( $func, $field, $alias = null ) { // @codingStandardsIgnoreLine\n\t\t$func  = \\strtoupper( $func );\n\t\t$field = \"$func({$field})\";\n\t\tif ( ! is_null( $alias ) ) {\n\t\t\t$field .= \" AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'select', $field );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Distinct select setter\n\t *\n\t * @param bool $distinct Is disticnt.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function distinct( $distinct = true ) {\n\t\t$this->distinct = $distinct;\n\t\treturn $this;\n\t}\n\n\t/**\n\t * SQL_CALC_FOUND_ROWS select setter\n\t *\n\t * @param bool $found_rows Should get found rows.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function found_rows( $found_rows = true ) {\n\t\t$this->found_rows = $found_rows;\n\t\treturn $this;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-where.php","ext":"php","size":10477,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The where functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Where class.\n */\ntrait Where {\n\n\t/**\n\t * Create a where statement\n\t *\n\t *     ->where('name', 'ladina')\n\t *     ->where('age', '>', 18)\n\t *     ->where('name', 'in', ['charles', 'john', 'jeffry'])\n\t *\n\t * @throws \\Exception If $type is not 'AND', 'OR', 'WHERE'.\n\t *\n\t * @param mixed  $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t * @param string $type the where type ( AND, OR ).\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function where( $column, $param1 = null, $param2 = null, $type = 'AND' ) {\n\n\t\t$this->is_valid_type( $type );\n\n\t\t$sub_type = is_null( $param1 ) ? $type : $param1;\n\t\tif ( ! $this->has_sql_clause( 'where' ) ) {\n\t\t\t$type = 'WHERE';\n\t\t}\n\n\t\t// When column is an array we assume to make a bulk and where.\n\t\tif ( is_array( $column ) ) {\n\t\t\t$this->bulk_where( $column, $type, $sub_type );\n\t\t\treturn $this;\n\t\t}\n\n\t\t$this->add_sql_clause( 'where', $this->generateWhere( $column, $param1, $param2, $type ) );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Create an or where statement\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhere( $column, $param1 = null, $param2 = null ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, $param1, $param2, 'OR' );\n\t}\n\n\t/**\n\t * Creates a where in statement\n\t *\n\t *     ->whereIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereIn( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IN', $options );\n\t}\n\n\t/**\n\t * Creates a where in statement\n\t *\n\t *     ->orWhereIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereIn( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IN', $options, 'OR' );\n\t}\n\n\t/**\n\t * Creates a where not in statement\n\t *\n\t *     ->whereNotIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereNotIn( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT IN', $options );\n\t}\n\n\t/**\n\t * Creates a where not in statement\n\t *\n\t *     ->orWhereNotIn('id', [42, 38, 12])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereNotIn( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT IN', $options, 'OR' );\n\t}\n\n\t/**\n\t * Creates a where between statement\n\t *\n\t *     ->whereBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereBetween( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'BETWEEN', $options );\n\t}\n\n\t/**\n\t * Creates a where between statement\n\t *\n\t *     ->orWhereBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereBetween( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'BETWEEN', $options, 'OR' );\n\t}\n\n\t/**\n\t * Creates a where not between statement\n\t *\n\t *     ->whereNotBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereNotBetween( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT BETWEEN', $options );\n\t}\n\n\t/**\n\t * Creates a where not between statement\n\t *\n\t *     ->orWhereNotBetween('id', [10, 100])\n\t *\n\t * @param string $column  The SQL column.\n\t * @param array  $options Array of values for in statement.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereNotBetween( $column, $options ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT BETWEEN', $options, 'OR' );\n\t}\n\n\t/**\n\t * Creates a where like statement\n\t *\n\t *     ->whereLike('id', 'value')\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param string $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereLike( $column, $value, $start = '%', $end = '%' ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'LIKE', $this->esc_like( $value, $start, $end ) );\n\t}\n\n\t/**\n\t * Creates a where like statement\n\t *\n\t *     ->orWhereLike('id', 'value')\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param string $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereLike( $column, $value, $start = '%', $end = '%' ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'LIKE', $this->esc_like( $value, $start, $end ), 'OR' );\n\t}\n\n\t/**\n\t * Creates a where not like statement\n\t *\n\t *     ->whereNotLike('id', 'value' )\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereNotLike( $column, $value, $start = '%', $end = '%' ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT LIKE', $this->esc_like( $value, $start, $end ) );\n\t}\n\n\t/**\n\t * Creates a where not like statement\n\t *\n\t *     ->orWhereNotLike('id', 'value' )\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereNotLike( $column, $value, $start = '%', $end = '%' ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'NOT LIKE', $this->esc_like( $value, $start, $end ), 'OR' );\n\t}\n\n\t/**\n\t * Creates a where is null statement\n\t *\n\t *     ->whereNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereNull( $column ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS', 'NULL' );\n\t}\n\n\t/**\n\t * Creates a where is null statement\n\t *\n\t *     ->orWhereNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereNull( $column ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS', 'NULL', 'OR' );\n\t}\n\n\t/**\n\t * Creates a where is not null statement\n\t *\n\t *     ->whereNotNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function whereNotNull( $column ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS NOT', 'NULL' );\n\t}\n\n\t/**\n\t * Creates a where is not null statement\n\t *\n\t *     ->orWhereNotNull( 'name' )\n\t *\n\t * @param string $column The SQL column.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orWhereNotNull( $column ) { // @codingStandardsIgnoreLine\n\t\treturn $this->where( $column, 'IS NOT', 'NULL', 'OR' );\n\t}\n\n\t/**\n\t * Generate Where clause\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t * @param string $type the where type ( AND, or ).\n\t *\n\t * @return string\n\t */\n\tprotected function generateWhere( $column, $param1 = null, $param2 = null, $type = 'AND' ) { // @codingStandardsIgnoreLine\n\n\t\t// when param2 is null we replace param2 with param one as the\n\t\t// value holder and make param1 to the = operator.\n\t\tif ( is_null( $param2 ) ) {\n\t\t\t$param2 = $param1;\n\t\t\t$param1 = '=';\n\t\t}\n\n\t\t// When param2 is an array we probably\n\t\t// have an \"in\" or \"between\" statement which has no need for duplicates.\n\t\tif ( is_array( $param2 ) ) {\n\t\t\t$param2 = $this->esc_array( array_unique( $param2 ) );\n\t\t\t$param2 = in_array( $param1, array( 'BETWEEN', 'NOT BETWEEN' ), true ) ? join( ' AND ', $param2 ) : '(' . join( ', ', $param2 ) . ')';\n\t\t} elseif ( is_scalar( $param2 ) ) {\n\t\t\t$param2 = $this->esc_value( $param2 );\n\t\t}\n\n\t\treturn join( ' ', array( $type, $column, $param1, $param2 ) );\n\t}\n\n\t/**\n\t * Check if the where type is valid.\n\t *\n\t * @param string $type Value to check.\n\t *\n\t * @throws \\Exception If not a valid type.\n\t */\n\tprivate function is_valid_type( $type ) {\n\t\tif ( ! in_array( $type, array( 'AND', 'OR', 'WHERE' ), true ) ) {\n\t\t\tthrow new \\Exception( 'Invalid where type \"' . $type . '\"' );\n\t\t}\n\t}\n\n\t/**\n\t * Create bulk where statement.\n\t *\n\t * @param array  $where    Array of statments.\n\t * @param string $type     Statement type.\n\t * @param string $sub_type Statement sub-type.\n\t */\n\tprivate function bulk_where( $where, $type, $sub_type ) {\n\t\t$subquery = array();\n\t\tforeach ( $where as $value ) {\n\t\t\tif ( ! isset( $value[2] ) ) {\n\t\t\t\t$value[2] = $value[1];\n\t\t\t\t$value[1] = '=';\n\t\t\t}\n\t\t\t$subquery[] = $this->generateWhere( $value[0], $value[1], $value[2], empty( $subquery ) ? '' : $sub_type );\n\t\t}\n\n\t\t$this->add_sql_clause( 'where', $type . ' ( ' . trim( join( ' ', $subquery ) ) . ' )' );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-joins.php","ext":"php","size":2370,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The joins functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Joins class.\n */\ntrait Joins {\n\n\t/**\n\t * Generate left join clause.\n\t *\n\t * @param string $table    The SQL table.\n\t * @param mixed  $column1  The SQL Column.\n\t * @param mixed  $column2  The SQL Column.\n\t * @param string $operator The Operator.\n\t * @param string $alias    The table alias.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function leftJoin( $table, $column1, $column2, $operator = '=', $alias = '' ) { // @codingStandardsIgnoreLine\n\t\tif ( empty( $table ) || empty( $column1 ) || empty( $column2 ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( ! empty( $alias ) ) {\n\t\t\t$table = \"{$table} AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'left_join', \"LEFT JOIN {$table} ON {$column1} {$operator} {$column2}\" );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Generate right join clause.\n\t *\n\t * @param string $table    The SQL table.\n\t * @param mixed  $column1  The SQL Column.\n\t * @param mixed  $column2  The SQL Column.\n\t * @param string $operator The Operator.\n\t * @param string $alias    The table alias.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function rightJoin( $table, $column1, $column2, $operator = '=', $alias = '' ) { // @codingStandardsIgnoreLine\n\t\tif ( empty( $table ) || empty( $column1 ) || empty( $column2 ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( ! empty( $alias ) ) {\n\t\t\t$table = \"{$table} AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'right_join', \"RIGHT JOIN {$table} ON {$column1} {$operator} {$column2}\" );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Generate left join clause.\n\t *\n\t * @param string $table    The SQL table.\n\t * @param mixed  $column1  The SQL Column.\n\t * @param mixed  $column2  The SQL Column.\n\t * @param string $operator The Operator.\n\t * @param string $alias    The table alias.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function join( $table, $column1, $column2, $operator = '=', $alias = '' ) { // @codingStandardsIgnoreLine\n\t\tif ( empty( $table ) || empty( $column1 ) || empty( $column2 ) ) {\n\t\t\treturn $this;\n\t\t}\n\n\t\tif ( ! empty( $alias ) ) {\n\t\t\t$table = \"{$table} AS {$alias}\";\n\t\t}\n\n\t\t$this->add_sql_clause( 'join', \"JOIN {$table} ON {$column1} {$operator} {$column2}\" );\n\n\t\treturn $this;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-escape.php","ext":"php","size":1253,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The escape functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Escape class.\n */\ntrait Escape {\n\n\t/**\n\t * Escape array values for sql\n\t *\n\t * @param array $arr Array to escape.\n\t *\n\t * @return array\n\t */\n\tpublic function esc_array( $arr ) {\n\t\treturn array_map( array( $this, 'esc_value' ), $arr );\n\t}\n\n\t/**\n\t * Escape value for sql\n\t *\n\t * @param mixed $value Value to escape.\n\t *\n\t * @return mixed\n\t */\n\tpublic function esc_value( $value ) {\n\t\tglobal $wpdb;\n\n\t\tif ( is_int( $value ) ) {\n\t\t\treturn $wpdb->prepare( '%d', $value );\n\t\t}\n\n\t\tif ( is_float( $value ) ) {\n\t\t\treturn $wpdb->prepare( '%f', $value );\n\t\t}\n\n\t\treturn 'NULL' === $value ? $value : $wpdb->prepare( '%s', $value );\n\t}\n\n\t/**\n\t * Escape value for like statement\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @param string $value  Value for like statement.\n\t * @param string $start  (Optional) The start of like query.\n\t * @param string $end    (Optional) The end of like query.\n\t *\n\t * @return string\n\t */\n\tpublic function esc_like( $value, $start = '%', $end = '%' ) {\n\t\tglobal $wpdb;\n\t\treturn $start . $wpdb->esc_like( $value ) . $end;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-translate.php","ext":"php","size":3110,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The translate functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Translate class.\n */\ntrait Translate {\n\n\t/**\n\t * Translate the current query to an SQL select statement\n\t *\n\t * @return string\n\t */\n\tprivate function translateSelect() { // @codingStandardsIgnoreLine\n\t\t$query = array( 'SELECT' );\n\n\t\tif ( $this->found_rows ) {\n\t\t\t$query[] = 'SQL_CALC_FOUND_ROWS';\n\t\t}\n\n\t\tif ( $this->distinct ) {\n\t\t\t$query[] = 'DISTINCT';\n\t\t}\n\n\t\t$query[] = $this->has_sql_clause( 'select' ) ? $this->get_sql_clause( 'select', true ) : '*';\n\t\t$query[] = $this->translateFrom();\n\t\t$query[] = $this->get_sql_clause( 'join', true );\n\t\t$query[] = $this->get_sql_clause( 'where', true );\n\t\t$query[] = $this->translateGroupBy();\n\t\t$query[] = $this->translateOrderBy();\n\t\t$query[] = $this->translateLimit();\n\n\t\treturn join( ' ', array_filter( $query ) );\n\t}\n\n\t/**\n\t * Translate the current query to an SQL update statement\n\t *\n\t * @return string\n\t */\n\tprivate function translateUpdate() { // @codingStandardsIgnoreLine\n\t\t$query = array( \"UPDATE {$this->table} SET\" );\n\n\t\t// Add the values.\n\t\t$values = array();\n\t\tforeach ( $this->sql_clauses['values'] as $key => $value ) {\n\t\t\t$values[] = $key . ' = ' . $this->esc_value( $value );\n\t\t}\n\n\t\tif ( ! empty( $values ) ) {\n\t\t\t$query[] = join( ', ', $values );\n\t\t}\n\n\t\t$query[] = $this->get_sql_clause( 'where', true );\n\t\t$query[] = $this->translateLimit();\n\n\t\treturn join( ' ', array_filter( $query ) );\n\t}\n\n\t/**\n\t * Translate the current query to an SQL delete statement\n\t *\n\t * @return string\n\t */\n\tprivate function translateDelete() { // @codingStandardsIgnoreLine\n\t\t$query   = array( 'DELETE' );\n\t\t$query[] = $this->translateFrom();\n\t\t$query[] = $this->get_sql_clause( 'where', true );\n\t\t$query[] = $this->translateLimit();\n\n\t\treturn join( ' ', array_filter( $query ) );\n\t}\n\n\t/**\n\t * Build the from statement.\n\t *\n\t * @return string\n\t */\n\tprivate function translateFrom() { // @codingStandardsIgnoreLine\n\t\tif ( ! $this->has_sql_clause( 'from' ) ) {\n\t\t\t$this->add_sql_clause( 'from', $this->table );\n\t\t}\n\n\t\treturn 'FROM ' . $this->get_sql_clause( 'from', true );\n\t}\n\n\t/**\n\t * Build the order by statement\n\t *\n\t * @return string\n\t */\n\tprotected function translateOrderBy() { // @codingStandardsIgnoreLine\n\t\tif ( ! $this->has_sql_clause( 'order_by' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn 'ORDER BY ' . $this->get_sql_clause( 'order_by', true );\n\t}\n\n\t/**\n\t * Build the group by clauses.\n\t *\n\t * @return string\n\t */\n\tprivate function translateGroupBy() { // @codingStandardsIgnoreLine\n\t\tif ( ! $this->has_sql_clause( 'group_by' ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$group_by = 'GROUP BY ' . $this->get_sql_clause( 'group_by', true );\n\n\t\tif ( $this->has_sql_clause( 'having' ) ) {\n\t\t\t$group_by .= ' ' . $this->get_sql_clause( 'having', true );\n\t\t}\n\n\t\treturn $group_by;\n\t}\n\n\t/**\n\t * Build offset and limit.\n\t *\n\t * @return string\n\t */\n\tprivate function translateLimit() { // @codingStandardsIgnoreLine\n\t\treturn $this->get_sql_clause( 'limit', true );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-orderby.php","ext":"php","size":1961,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The orderby functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\nuse MyThemeShop\\Helpers\\Arr;\n\n/**\n * OrderBy class.\n */\ntrait OrderBy {\n\n\t/**\n\t * Add an order by statement to the current query\n\t *\n\t *     ->orderBy('created_at')\n\t *     ->orderBy('modified_at', 'desc')\n\t *\n\t *     // multiple order clauses\n\t *     ->orderBy(['firstname', 'lastname'], 'desc')\n\t *\n\t *     // muliple order clauses with diffrent directions\n\t *     ->orderBy(['firstname' => 'asc', 'lastname' => 'desc'])\n\t *\n\t * @param array|string $columns   Columns.\n\t * @param string       $direction Direction.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function orderBy( $columns, $direction = 'ASC' ) { // @codingStandardsIgnoreLine\n\t\tif ( is_string( $columns ) ) {\n\t\t\t$columns = $this->argument_to_array( $columns );\n\t\t}\n\n\t\t$direction = $this->sanitize_direction( $direction );\n\n\t\tforeach ( $columns as $key => $column ) {\n\t\t\tif ( is_numeric( $key ) ) {\n\t\t\t\t$this->add_sql_clause( 'order_by', \"{$column}{$direction}\" );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$column = $this->sanitize_direction( $column );\n\t\t\t$this->add_sql_clause( 'order_by', \"{$key}{$column}\" );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Sanitize direction\n\t *\n\t * @param string $direction Value to sanitize.\n\t *\n\t * @return string Sanitized value\n\t */\n\tprotected function sanitize_direction( $direction ) {\n\t\tif ( empty( $direction ) || 'ASC' === $direction || 'asc' === $direction ) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn ' ' . \\strtoupper( $direction );\n\t}\n\n\t/**\n\t * Returns an string argument as parsed array if possible\n\t *\n\t * @param string $argument Argument to validate.\n\t *\n\t * @return array\n\t */\n\tprotected function argument_to_array( $argument ) {\n\t\tif ( false !== strpos( $argument, ',' ) ) {\n\t\t\treturn Arr::from_string( $argument );\n\t\t}\n\n\t\treturn array( $argument );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-database.php","ext":"php","size":805,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Database.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Database class.\n */\nclass Database {\n\n\t/**\n\t * Array of all databases objects.\n\t *\n\t * @var array\n\t */\n\tprotected static $instances = array();\n\n\t/**\n\t * Retrieve a Database instance by table name.\n\t *\n\t * @param string $table_name A Database instance id.\n\t *\n\t * @return Database Database object instance.\n\t */\n\tpublic static function table( $table_name ) {\n\t\tglobal $wpdb;\n\n\t\tif ( empty( self::$instances ) || empty( self::$instances[ $table_name ] ) ) {\n\t\t\tself::$instances[ $table_name ] = new Query_Builder( $wpdb->prefix . $table_name );\n\t\t}\n\n\t\treturn self::$instances[ $table_name ];\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/index.php","ext":"php","size":28,"mtime":1757324689,"type":"text","content":"<?php // Silence is golden.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-clauses.php","ext":"php","size":2951,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The clauses functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Clauses class.\n */\ntrait Clauses {\n\n\t/**\n\t * List of SQL clauses.\n\t *\n\t * @var array\n\t */\n\tprivate $sql_clauses = array();\n\n\t/**\n\t * SQL clause merge filters.\n\t *\n\t * @var array\n\t */\n\tprivate $sql_filters = array(\n\t\t'where' => array(\n\t\t\t'where',\n\t\t\t'where_time',\n\t\t),\n\t\t'join'  => array(\n\t\t\t'right_join',\n\t\t\t'join',\n\t\t\t'left_join',\n\t\t),\n\t);\n\n\t/**\n\t * Check has SQL clause.\n\t *\n\t * @param string $type   Clause type.\n\t *\n\t * @return boolean True if set and not empty.\n\t */\n\tpublic function has_sql_clause( $type ) {\n\t\treturn isset( $this->sql_clauses[ $type ] ) && ! empty( $this->sql_clauses[ $type ] );\n\t}\n\n\t/**\n\t * Add a SQL clause to be included when get_data is called.\n\t *\n\t * @param string $type   Clause type.\n\t * @param string $clause SQL clause.\n\t */\n\tpublic function add_sql_clause( $type, $clause ) {\n\t\tif ( isset( $this->sql_clauses[ $type ] ) && ! empty( $clause ) ) {\n\t\t\t$this->sql_clauses[ $type ][] = $clause;\n\t\t}\n\t}\n\n\t/**\n\t * Clear SQL clauses by type.\n\t *\n\t * @param string|array $types Clause type.\n\t */\n\tprotected function clear_sql_clause( $types ) {\n\t\tforeach ( (array) $types as $type ) {\n\t\t\tif ( isset( $this->sql_clauses[ $type ] ) ) {\n\t\t\t\t$this->sql_clauses[ $type ] = array();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Get SQL clause by type.\n\t *\n\t * @param string $type     Clause type.\n\t * @param string $filtered Whether to filter the return value. Default unfiltered.\n\t *\n\t * @return string SQL clause.\n\t */\n\tprotected function get_sql_clause( $type, $filtered = false ) {\n\t\tif ( ! isset( $this->sql_clauses[ $type ] ) ) {\n\t\t\treturn '';\n\t\t}\n\n\t\t$separator = ' ';\n\t\tif ( in_array( $type, array( 'select', 'order_by', 'group_by' ), true ) ) {\n\t\t\t$separator = ', ';\n\t\t}\n\n\t\t/**\n\t\t * Default to bypassing filters for clause retrieval internal to data stores.\n\t\t * The filters are applied when the full SQL statement is retrieved.\n\t\t */\n\t\tif ( false === $filtered ) {\n\t\t\treturn implode( $separator, $this->sql_clauses[ $type ] );\n\t\t}\n\n\t\tif ( isset( $this->sql_filters[ $type ] ) ) {\n\t\t\t$clauses = array();\n\t\t\tforeach ( $this->sql_filters[ $type ] as $subset ) {\n\t\t\t\t$clauses = array_merge( $clauses, $this->sql_clauses[ $subset ] );\n\t\t\t}\n\t\t} else {\n\t\t\t$clauses = $this->sql_clauses[ $type ];\n\t\t}\n\n\t\t/**\n\t\t * Filter SQL clauses by type and context.\n\t\t *\n\t\t * @param array  $clauses The original arguments for the request.\n\t\t * @param string $context The data store context.\n\t\t */\n\t\t$clauses = apply_filters( \"rank_math_clauses_{$type}\", $clauses, $this->context );\n\t\t/**\n\t\t * Filter SQL clauses by type and context.\n\t\t *\n\t\t * @param array  $clauses The original arguments for the request.\n\t\t */\n\t\t$clauses = apply_filters( \"rank_math_clauses_{$type}_{$this->context}\", $clauses );\n\n\t\treturn implode( $separator, $clauses );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-groupby.php","ext":"php","size":1170,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The groupby functions.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * GroupBy class.\n */\ntrait GroupBy {\n\n\t/**\n\t * Add an group by statement to the current query\n\t *\n\t *     ->groupBy('created_at')\n\t *\n\t * @param array|string $columns Columns.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function groupBy( $columns ) { // @codingStandardsIgnoreLine\n\t\tif ( is_string( $columns ) ) {\n\t\t\t$columns = $this->argument_to_array( $columns );\n\t\t}\n\n\t\tforeach ( $columns as $column ) {\n\t\t\t$this->add_sql_clause( 'group_by', $column );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Generate Having clause\n\t *\n\t * @param string $column The SQL column.\n\t * @param mixed  $param1 Operator or value depending if $param2 isset.\n\t * @param mixed  $param2 The value if $param1 is an operator.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function having( $column, $param1 = null, $param2 = null ) {\n\t\t$this->add_sql_clause( 'having', $this->generateWhere( $column, $param1, $param2, 'HAVING' ) );\n\n\t\treturn $this;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/src/database/class-query-builder.php","ext":"php","size":5608,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * The Query Builder.\n *\n * @since      1.0.0\n * @package    MyThemeShop\n * @subpackage MyThemeShop\\Database\n * @author     MyThemeShop <admin@mythemeshop.com>\n */\n\nnamespace MyThemeShop\\Database;\n\n/**\n * Query_Builder class.\n */\nclass Query_Builder {\n\n\tuse Escape;\n\tuse Select;\n\tuse Where;\n\tuse Joins;\n\tuse GroupBy;\n\tuse OrderBy;\n\tuse Clauses;\n\tuse Translate;\n\n\t/**\n\t * Table name.\n\t *\n\t * @var string\n\t */\n\tpublic $table = '';\n\n\t/**\n\t * Save last query.\n\t *\n\t * @var string\n\t */\n\tpublic $last_query = '';\n\n\t/**\n\t * Make a distinct selection\n\t *\n\t * @var bool\n\t */\n\tprotected $distinct = false;\n\n\t/**\n\t * Make SQL_CALC_FOUND_ROWS in selection\n\t *\n\t * @var bool\n\t */\n\tprotected $found_rows = false;\n\n\t/**\n\t * Data store context used to pass to filters.\n\t *\n\t * @var string\n\t */\n\tprotected $context;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param string $table   The table name.\n\t * @param string $context Optional context passed to filters. Default empty string.\n\t */\n\tpublic function __construct( $table, $context = '' ) {\n\t\t$this->table   = $table;\n\t\t$this->context = $context;\n\t\t$this->reset();\n\t}\n\n\t/**\n\t * Translate the given query object and return the results\n\t *\n\t * @param string $output (Optional) Any of ARRAY_A | ARRAY_N | OBJECT | OBJECT_K constants.\n\t *\n\t * @return mixed\n\t */\n\tpublic function get( $output = \\OBJECT ) {\n\t\tglobal $wpdb;\n\n\t\t$this->last_query = $this->translateSelect();\n\t\t$this->reset();\n\n\t\treturn $wpdb->get_results( $this->last_query, $output ); // phpcs:ignore\n\t}\n\n\t/**\n\t * Translate the given query object and return the results\n\t *\n\t * @param string $output (Optional) Any of ARRAY_A | ARRAY_N | OBJECT | OBJECT_K constants.\n\t *\n\t * @return mixed\n\t */\n\tpublic function one( $output = \\OBJECT ) {\n\t\tglobal $wpdb;\n\n\t\t$this->limit( 1 );\n\t\t$this->last_query = $this->translateSelect();\n\t\t$this->reset();\n\n\t\treturn $wpdb->get_row( $this->last_query, $output ); // phpcs:ignore\n\t}\n\n\t/**\n\t * Translate the given query object and return one variable from the database\n\t *\n\t * @return mixed\n\t */\n\tpublic function getVar() { // @codingStandardsIgnoreLine\n\t\t$row = $this->one( \\ARRAY_A );\n\n\t\treturn is_null( $row ) ? false : current( $row );\n\t}\n\n\t/**\n\t * Insert a row into a table\n\t *\n\t * @codeCoverageIgnore\n\t * @see wpdb::insert()\n\t *\n\t * @param array $data   Data to insert (in column => value pairs). Both $data columns and $data values should be \"raw\" (neither should be SQL escaped).\n\t * @param array $format (Optional) An array of formats to be mapped to each of the value in $data.\n\t *\n\t * @return mixed\n\t */\n\tpublic function insert( $data, $format = null ) {\n\t\tglobal $wpdb;\n\n\t\t$wpdb->insert( $this->table, $data, $format );\n\n\t\treturn $wpdb->insert_id;\n\t}\n\n\t/**\n\t * Update a row into a table\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return mixed\n\t */\n\tpublic function update() {\n\n\t\t$query = $this->translateUpdate();\n\t\t$this->reset();\n\n\t\treturn $this->query( $query );\n\t}\n\n\t/**\n\t * Delete data from table\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return mixed\n\t */\n\tpublic function delete() {\n\n\t\t$query = $this->translateDelete();\n\t\t$this->reset();\n\n\t\treturn $this->query( $query );\n\t}\n\n\t/**\n\t * Truncate table.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @return mixed\n\t */\n\tpublic function truncate() {\n\t\treturn $this->query( \"truncate table {$this->table};\" );\n\t}\n\n\t/**\n\t * Get found rows.\n\t *\n\t * @return int\n\t */\n\tpublic function get_found_rows() {\n\t\tglobal $wpdb;\n\n\t\treturn $wpdb->get_var( 'SELECT FOUND_ROWS();' );\n\t}\n\n\t/**\n\t * Perform a MySQL database query, using current database connection.\n\t *\n\t * @codeCoverageIgnore\n\t *\n\t * @see wpdb::query\n\t *\n\t * @param string $query Database query.\n\t *\n\t * @return int|false Number of rows affected|selected or false on error.\n\t */\n\tpublic function query( $query ) {\n\t\tglobal $wpdb;\n\t\t$this->last_query = $query;\n\n\t\treturn $wpdb->query( $query ); // phpcs:ignore\n\t}\n\n\t/**\n\t * Set the limit clause.\n\t *\n\t * @param int $limit  Limit size.\n\t * @param int $offset Offeset.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function limit( $limit, $offset = 0 ) {\n\t\tglobal $wpdb;\n\t\t$limit  = \\absint( $limit );\n\t\t$offset = \\absint( $offset );\n\n\t\t$this->clear_sql_clause( 'limit' );\n\t\t$this->add_sql_clause( 'limit', $wpdb->prepare( 'LIMIT %d, %d', $offset, $limit ) );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Create an query limit based on a page and a page size\n\t *\n\t * @param int $page Page number.\n\t * @param int $size Page size.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function page( $page, $size = 25 ) {\n\t\t$size   = \\absint( $size );\n\t\t$offset = $size * \\absint( $page );\n\n\t\t$this->limit( $size, $offset );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Set values for insert/update\n\t *\n\t * @param string|array $name  Key of pair.\n\t * @param string|array $value Value of pair.\n\t *\n\t * @return self The current query builder.\n\t */\n\tpublic function set( $name, $value = null ) {\n\t\tif ( is_array( $name ) ) {\n\t\t\t$this->sql_clauses['values'] = $this->sql_clauses['values'] + $name;\n\n\t\t\treturn $this;\n\t\t}\n\n\t\t$this->sql_clauses['values'][ $name ] = $value;\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Reset all vaiables.\n\t *\n\t * @return self The current query builder.\n\t */\n\tprivate function reset() {\n\t\t$this->distinct    = false;\n\t\t$this->found_rows  = false;\n\t\t$this->sql_clauses = array(\n\t\t\t'select'     => array(),\n\t\t\t'from'       => array(),\n\t\t\t'left_join'  => array(),\n\t\t\t'join'       => array(),\n\t\t\t'right_join' => array(),\n\t\t\t'where'      => array(),\n\t\t\t'where_time' => array(),\n\t\t\t'group_by'   => array(),\n\t\t\t'having'     => array(),\n\t\t\t'limit'      => array(),\n\t\t\t'order_by'   => array(),\n\t\t\t'values'     => array(),\n\t\t);\n\n\t\treturn $this;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/LICENSE.txt","ext":"txt","size":34792,"mtime":1757324689,"type":"text","content":"\t\t\t\t\tGNU GENERAL PUBLIC LICENSE\n\t\t\t\t\t   Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t\t\t\t\tPreamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t\t\t\t   TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n\ta) The work must carry prominent notices stating that you modified\n\tit, and giving a relevant date.\n\n\tb) The work must carry prominent notices stating that it is\n\treleased under this License and any conditions added under section\n\t7.  This requirement modifies the requirement in section 4 to\n\t\"keep intact all notices\".\n\n\tc) You must license the entire work, as a whole, under this\n\tLicense to anyone who comes into possession of a copy.  This\n\tLicense will therefore apply, along with any applicable section 7\n\tadditional terms, to the whole of the work, and all its parts,\n\tregardless of how they are packaged.  This License gives no\n\tpermission to license the work in any other way, but it does not\n\tinvalidate such permission if you have separately received it.\n\n\td) If the work has interactive user interfaces, each must display\n\tAppropriate Legal Notices; however, if the Program has interactive\n\tinterfaces that do not display Appropriate Legal Notices, your\n\twork need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n\ta) Convey the object code in, or embodied in, a physical product\n\t(including a physical distribution medium), accompanied by the\n\tCorresponding Source fixed on a durable physical medium\n\tcustomarily used for software interchange.\n\n\tb) Convey the object code in, or embodied in, a physical product\n\t(including a physical distribution medium), accompanied by a\n\twritten offer, valid for at least three years and valid for as\n\tlong as you offer spare parts or customer support for that product\n\tmodel, to give anyone who possesses the object code either (1) a\n\tcopy of the Corresponding Source for all the software in the\n\tproduct that is covered by this License, on a durable physical\n\tmedium customarily used for software interchange, for a price no\n\tmore than your reasonable cost of physically performing this\n\tconveying of source, or (2) access to copy the\n\tCorresponding Source from a network server at no charge.\n\n\tc) Convey individual copies of the object code with a copy of the\n\twritten offer to provide the Corresponding Source.  This\n\talternative is allowed only occasionally and noncommercially, and\n\tonly if you received the object code with such an offer, in accord\n\twith subsection 6b.\n\n\td) Convey the object code by offering access from a designated\n\tplace (gratis or for a charge), and offer equivalent access to the\n\tCorresponding Source in the same way through the same place at no\n\tfurther charge.  You need not require recipients to copy the\n\tCorresponding Source along with the object code.  If the place to\n\tcopy the object code is a network server, the Corresponding Source\n\tmay be on a different server (operated by you or a third party)\n\tthat supports equivalent copying facilities, provided you maintain\n\tclear directions next to the object code saying where to find the\n\tCorresponding Source.  Regardless of what server hosts the\n\tCorresponding Source, you remain obligated to ensure that it is\n\tavailable for as long as needed to satisfy these requirements.\n\n\te) Convey the object code using peer-to-peer transmission, provided\n\tyou inform other peers where the object code and Corresponding\n\tSource of the work are being offered to the general public at no\n\tcharge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n\ta) Disclaiming warranty or limiting liability differently from the\n\tterms of sections 15 and 16 of this License; or\n\n\tb) Requiring preservation of specified reasonable legal notices or\n\tauthor attributions in that material or in the Appropriate Legal\n\tNotices displayed by works containing it; or\n\n\tc) Prohibiting misrepresentation of the origin of that material, or\n\trequiring that modified versions of such material be marked in\n\treasonable ways as different from the original version; or\n\n\td) Limiting the use for publicity purposes of names of licensors or\n\tauthors of the material; or\n\n\te) Declining to grant rights under trademark law for use of some\n\ttrade names, trademarks, or service marks; or\n\n\tf) Requiring indemnification of licensors and authors of that\n\tmaterial by anyone who conveys the material (or modified versions of\n\tit) with contractual assumptions of liability to the recipient, for\n\tany liability that these contractual assumptions directly impose on\n\tthose licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n\t\t\t\t\t END OF TERMS AND CONDITIONS\n\n\t\t\tHow to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n\t<one line to give the program's name and a brief idea of what it does.>\n\tCopyright (C) <year>  <name of author>\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n\tNinjaDB  Copyright (C) 2017  WPManageNinja\n\tThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n\tThis is free software, and you are welcome to redistribute it\n\tunder certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/autoload.php","ext":"php","size":178,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload.php @generated by Composer\n\nrequire_once __DIR__ . '/composer/autoload_real.php';\n\nreturn ComposerAutoloaderInit65a0993a63c917989297698ea08a315e::getLoader();\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/installed.json","ext":"json","size":69,"mtime":1757324689,"type":"text","content":"{\n    \"packages\": [],\n    \"dev\": true,\n    \"dev-package-names\": []\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/autoload_psr4.php","ext":"php","size":201,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_psr4.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'MyThemeShop\\\\Helpers\\\\' => array($baseDir . '/src'),\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/InstalledVersions.php","ext":"php","size":4620,"mtime":1757324689,"type":"text","content":"<?php\n\n\n\n\n\n\n\n\n\n\n\nnamespace Composer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Composer\\Semver\\VersionParser;\n\n\n\n\n\n\nclass InstalledVersions\n{\nprivate static $installed = array (\n  'root' => \n  array (\n    'pretty_version' => 'dev-master',\n    'version' => 'dev-master',\n    'aliases' => \n    array (\n    ),\n    'reference' => '704f8f477e144a5d2e9a9811c868b13178fa78ca',\n    'name' => 'mythemeshop/wordpress-helpers',\n  ),\n  'versions' => \n  array (\n    'mythemeshop/wordpress-helpers' => \n    array (\n      'pretty_version' => 'dev-master',\n      'version' => 'dev-master',\n      'aliases' => \n      array (\n      ),\n      'reference' => '704f8f477e144a5d2e9a9811c868b13178fa78ca',\n    ),\n  ),\n);\nprivate static $canGetVendors;\nprivate static $installedByVendor = array();\n\n\n\n\n\n\n\npublic static function getInstalledPackages()\n{\n$packages = array();\nforeach (self::getInstalled() as $installed) {\n$packages[] = array_keys($installed['versions']);\n}\n\n\nif (1 === \\count($packages)) {\nreturn $packages[0];\n}\n\nreturn array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n}\n\n\n\n\n\n\n\n\n\npublic static function isInstalled($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (isset($installed['versions'][$packageName])) {\nreturn true;\n}\n}\n\nreturn false;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npublic static function satisfies(VersionParser $parser, $packageName, $constraint)\n{\n$constraint = $parser->parseConstraints($constraint);\n$provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n\nreturn $provided->matches($constraint);\n}\n\n\n\n\n\n\n\n\n\n\npublic static function getVersionRanges($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\n$ranges = array();\nif (isset($installed['versions'][$packageName]['pretty_version'])) {\n$ranges[] = $installed['versions'][$packageName]['pretty_version'];\n}\nif (array_key_exists('aliases', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n}\nif (array_key_exists('replaced', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n}\nif (array_key_exists('provided', $installed['versions'][$packageName])) {\n$ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n}\n\nreturn implode(' || ', $ranges);\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getVersion($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['version'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['version'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getPrettyVersion($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['pretty_version'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['pretty_version'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getReference($packageName)\n{\nforeach (self::getInstalled() as $installed) {\nif (!isset($installed['versions'][$packageName])) {\ncontinue;\n}\n\nif (!isset($installed['versions'][$packageName]['reference'])) {\nreturn null;\n}\n\nreturn $installed['versions'][$packageName]['reference'];\n}\n\nthrow new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n}\n\n\n\n\n\npublic static function getRootPackage()\n{\n$installed = self::getInstalled();\n\nreturn $installed[0]['root'];\n}\n\n\n\n\n\n\n\npublic static function getRawData()\n{\nreturn self::$installed;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npublic static function reload($data)\n{\nself::$installed = $data;\nself::$installedByVendor = array();\n}\n\n\n\n\nprivate static function getInstalled()\n{\nif (null === self::$canGetVendors) {\nself::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n}\n\n$installed = array();\n\nif (self::$canGetVendors) {\nforeach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\nif (isset(self::$installedByVendor[$vendorDir])) {\n$installed[] = self::$installedByVendor[$vendorDir];\n} elseif (is_file($vendorDir.'/composer/installed.php')) {\n$installed[] = self::$installedByVendor[$vendorDir] = require $vendorDir.'/composer/installed.php';\n}\n}\n}\n\n$installed[] = self::$installed;\n\nreturn $installed;\n}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/autoload_classmap.php","ext":"php","size":2233,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_classmap.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Composer\\\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',\n    'MyThemeShop\\\\Admin\\\\List_Table' => $baseDir . '/src/admin/class-list-table.php',\n    'MyThemeShop\\\\Admin\\\\Page' => $baseDir . '/src/admin/class-page.php',\n    'MyThemeShop\\\\Database\\\\Clauses' => $baseDir . '/src/database/class-clauses.php',\n    'MyThemeShop\\\\Database\\\\Database' => $baseDir . '/src/database/class-database.php',\n    'MyThemeShop\\\\Database\\\\Escape' => $baseDir . '/src/database/class-escape.php',\n    'MyThemeShop\\\\Database\\\\GroupBy' => $baseDir . '/src/database/class-groupby.php',\n    'MyThemeShop\\\\Database\\\\Joins' => $baseDir . '/src/database/class-joins.php',\n    'MyThemeShop\\\\Database\\\\OrderBy' => $baseDir . '/src/database/class-orderby.php',\n    'MyThemeShop\\\\Database\\\\Query_Builder' => $baseDir . '/src/database/class-query-builder.php',\n    'MyThemeShop\\\\Database\\\\Select' => $baseDir . '/src/database/class-select.php',\n    'MyThemeShop\\\\Database\\\\Translate' => $baseDir . '/src/database/class-translate.php',\n    'MyThemeShop\\\\Database\\\\Where' => $baseDir . '/src/database/class-where.php',\n    'MyThemeShop\\\\Helpers\\\\Arr' => $baseDir . '/src/helpers/class-arr.php',\n    'MyThemeShop\\\\Helpers\\\\Attachment' => $baseDir . '/src/helpers/class-attachment.php',\n    'MyThemeShop\\\\Helpers\\\\Conditional' => $baseDir . '/src/helpers/class-conditional.php',\n    'MyThemeShop\\\\Helpers\\\\DB' => $baseDir . '/src/helpers/class-db.php',\n    'MyThemeShop\\\\Helpers\\\\HTML' => $baseDir . '/src/helpers/class-html.php',\n    'MyThemeShop\\\\Helpers\\\\Param' => $baseDir . '/src/helpers/class-param.php',\n    'MyThemeShop\\\\Helpers\\\\Str' => $baseDir . '/src/helpers/class-str.php',\n    'MyThemeShop\\\\Helpers\\\\Url' => $baseDir . '/src/helpers/class-url.php',\n    'MyThemeShop\\\\Helpers\\\\WordPress' => $baseDir . '/src/helpers/class-wordpress.php',\n    'MyThemeShop\\\\Json_Manager' => $baseDir . '/src/class-json-manager.php',\n    'MyThemeShop\\\\Notification' => $baseDir . '/src/class-notification.php',\n    'MyThemeShop\\\\Notification_Center' => $baseDir . '/src/class-notification-center.php',\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/installed.php","ext":"php","size":540,"mtime":1757324689,"type":"text","content":"<?php return array (\n  'root' => \n  array (\n    'pretty_version' => 'dev-master',\n    'version' => 'dev-master',\n    'aliases' => \n    array (\n    ),\n    'reference' => '704f8f477e144a5d2e9a9811c868b13178fa78ca',\n    'name' => 'mythemeshop/wordpress-helpers',\n  ),\n  'versions' => \n  array (\n    'mythemeshop/wordpress-helpers' => \n    array (\n      'pretty_version' => 'dev-master',\n      'version' => 'dev-master',\n      'aliases' => \n      array (\n      ),\n      'reference' => '704f8f477e144a5d2e9a9811c868b13178fa78ca',\n    ),\n  ),\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/autoload_namespaces.php","ext":"php","size":149,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_namespaces.php @generated by Composer\n\n$vendorDir = dirname(dirname(__FILE__));\n$baseDir = dirname($vendorDir);\n\nreturn array(\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/ClassLoader.php","ext":"php","size":14367,"mtime":1757324689,"type":"text","content":"<?php\n\n/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Composer\\Autoload;\n\n/**\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n *\n *     $loader = new \\Composer\\Autoload\\ClassLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     // to enable searching the include path (eg. for PEAR packages)\n *     $loader->setUseIncludePath(true);\n *\n * In this example, if you try to use a class in the Symfony\\Component\n * namespace or one of its children (Symfony\\Component\\Console for instance),\n * the autoloader will first look for the class under the component/\n * directory, and it will then fallback to the framework/ directory if not\n * found before giving up.\n *\n * This class is loosely based on the Symfony UniversalClassLoader.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Jordi Boggiano <j.boggiano@seld.be>\n * @see    https://www.php-fig.org/psr/psr-0/\n * @see    https://www.php-fig.org/psr/psr-4/\n */\nclass ClassLoader\n{\n    private $vendorDir;\n\n    // PSR-4\n    private $prefixLengthsPsr4 = array();\n    private $prefixDirsPsr4 = array();\n    private $fallbackDirsPsr4 = array();\n\n    // PSR-0\n    private $prefixesPsr0 = array();\n    private $fallbackDirsPsr0 = array();\n\n    private $useIncludePath = false;\n    private $classMap = array();\n    private $classMapAuthoritative = false;\n    private $missingClasses = array();\n    private $apcuPrefix;\n\n    private static $registeredLoaders = array();\n\n    public function __construct($vendorDir = null)\n    {\n        $this->vendorDir = $vendorDir;\n    }\n\n    public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return array();\n    }\n\n    public function getPrefixesPsr4()\n    {\n        return $this->prefixDirsPsr4;\n    }\n\n    public function getFallbackDirs()\n    {\n        return $this->fallbackDirsPsr0;\n    }\n\n    public function getFallbackDirsPsr4()\n    {\n        return $this->fallbackDirsPsr4;\n    }\n\n    public function getClassMap()\n    {\n        return $this->classMap;\n    }\n\n    /**\n     * @param array $classMap Class to filename map\n     */\n    public function addClassMap(array $classMap)\n    {\n        if ($this->classMap) {\n            $this->classMap = array_merge($this->classMap, $classMap);\n        } else {\n            $this->classMap = $classMap;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix, either\n     * appending or prepending to the ones previously set for this prefix.\n     *\n     * @param string       $prefix  The prefix\n     * @param array|string $paths   The PSR-0 root directories\n     * @param bool         $prepend Whether to prepend the directories\n     */\n    public function add($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            if ($prepend) {\n                $this->fallbackDirsPsr0 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr0\n                );\n            } else {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $this->fallbackDirsPsr0,\n                    (array) $paths\n                );\n            }\n\n            return;\n        }\n\n        $first = $prefix[0];\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n            $this->prefixesPsr0[$first][$prefix] = (array) $paths;\n\n            return;\n        }\n        if ($prepend) {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixesPsr0[$first][$prefix]\n            );\n        } else {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $this->prefixesPsr0[$first][$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace, either\n     * appending or prepending to the ones previously set for this namespace.\n     *\n     * @param string       $prefix  The prefix/namespace, with trailing '\\\\'\n     * @param array|string $paths   The PSR-4 base directories\n     * @param bool         $prepend Whether to prepend the directories\n     *\n     * @throws \\InvalidArgumentException\n     */\n    public function addPsr4($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            // Register directories for the root namespace.\n            if ($prepend) {\n                $this->fallbackDirsPsr4 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr4\n                );\n            } else {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $this->fallbackDirsPsr4,\n                    (array) $paths\n                );\n            }\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n            // Register directories for a new namespace.\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        } elseif ($prepend) {\n            // Prepend directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixDirsPsr4[$prefix]\n            );\n        } else {\n            // Append directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $this->prefixDirsPsr4[$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix,\n     * replacing any others previously set for this prefix.\n     *\n     * @param string       $prefix The prefix\n     * @param array|string $paths  The PSR-0 base directories\n     */\n    public function set($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr0 = (array) $paths;\n        } else {\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace,\n     * replacing any others previously set for this namespace.\n     *\n     * @param string       $prefix The prefix/namespace, with trailing '\\\\'\n     * @param array|string $paths  The PSR-4 base directories\n     *\n     * @throws \\InvalidArgumentException\n     */\n    public function setPsr4($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr4 = (array) $paths;\n        } else {\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Turns on searching the include path for class files.\n     *\n     * @param bool $useIncludePath\n     */\n    public function setUseIncludePath($useIncludePath)\n    {\n        $this->useIncludePath = $useIncludePath;\n    }\n\n    /**\n     * Can be used to check if the autoloader uses the include path to check\n     * for classes.\n     *\n     * @return bool\n     */\n    public function getUseIncludePath()\n    {\n        return $this->useIncludePath;\n    }\n\n    /**\n     * Turns off searching the prefix and fallback directories for classes\n     * that have not been registered with the class map.\n     *\n     * @param bool $classMapAuthoritative\n     */\n    public function setClassMapAuthoritative($classMapAuthoritative)\n    {\n        $this->classMapAuthoritative = $classMapAuthoritative;\n    }\n\n    /**\n     * Should class lookup fail if not found in the current class map?\n     *\n     * @return bool\n     */\n    public function isClassMapAuthoritative()\n    {\n        return $this->classMapAuthoritative;\n    }\n\n    /**\n     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.\n     *\n     * @param string|null $apcuPrefix\n     */\n    public function setApcuPrefix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n    }\n\n    /**\n     * The APCu prefix in use, or null if APCu caching is not enabled.\n     *\n     * @return string|null\n     */\n    public function getApcuPrefix()\n    {\n        return $this->apcuPrefix;\n    }\n\n    /**\n     * Registers this instance as an autoloader.\n     *\n     * @param bool $prepend Whether to prepend the autoloader or not\n     */\n    public function register($prepend = false)\n    {\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n\n        if (null === $this->vendorDir) {\n            return;\n        }\n\n        if ($prepend) {\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n        } else {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n            self::$registeredLoaders[$this->vendorDir] = $this;\n        }\n    }\n\n    /**\n     * Unregisters this instance as an autoloader.\n     */\n    public function unregister()\n    {\n        spl_autoload_unregister(array($this, 'loadClass'));\n\n        if (null !== $this->vendorDir) {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n        }\n    }\n\n    /**\n     * Loads the given class or interface.\n     *\n     * @param  string    $class The name of the class\n     * @return bool|null True if loaded, null otherwise\n     */\n    public function loadClass($class)\n    {\n        if ($file = $this->findFile($class)) {\n            includeFile($file);\n\n            return true;\n        }\n    }\n\n    /**\n     * Finds the path to the file where the class is defined.\n     *\n     * @param string $class The name of the class\n     *\n     * @return string|false The path if found, false otherwise\n     */\n    public function findFile($class)\n    {\n        // class map lookup\n        if (isset($this->classMap[$class])) {\n            return $this->classMap[$class];\n        }\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n            return false;\n        }\n        if (null !== $this->apcuPrefix) {\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n            if ($hit) {\n                return $file;\n            }\n        }\n\n        $file = $this->findFileWithExtension($class, '.php');\n\n        // Search for Hack files if we are running on HHVM\n        if (false === $file && defined('HHVM_VERSION')) {\n            $file = $this->findFileWithExtension($class, '.hh');\n        }\n\n        if (null !== $this->apcuPrefix) {\n            apcu_add($this->apcuPrefix.$class, $file);\n        }\n\n        if (false === $file) {\n            // Remember that this class does not exist.\n            $this->missingClasses[$class] = true;\n        }\n\n        return $file;\n    }\n\n    /**\n     * Returns the currently registered loaders indexed by their corresponding vendor directories.\n     *\n     * @return self[]\n     */\n    public static function getRegisteredLoaders()\n    {\n        return self::$registeredLoaders;\n    }\n\n    private function findFileWithExtension($class, $ext)\n    {\n        // PSR-4 lookup\n        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n\n        $first = $class[0];\n        if (isset($this->prefixLengthsPsr4[$first])) {\n            $subPath = $class;\n            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n                $subPath = substr($subPath, 0, $lastPos);\n                $search = $subPath . '\\\\';\n                if (isset($this->prefixDirsPsr4[$search])) {\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n                        if (file_exists($file = $dir . $pathEnd)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-4 fallback dirs\n        foreach ($this->fallbackDirsPsr4 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 lookup\n        if (false !== $pos = strrpos($class, '\\\\')) {\n            // namespaced class name\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n        } else {\n            // PEAR-like class name\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n        }\n\n        if (isset($this->prefixesPsr0[$first])) {\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n                if (0 === strpos($class, $prefix)) {\n                    foreach ($dirs as $dir) {\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-0 fallback dirs\n        foreach ($this->fallbackDirsPsr0 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 include paths.\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n            return $file;\n        }\n\n        return false;\n    }\n}\n\n/**\n * Scope isolated include.\n *\n * Prevents access to $this/self from included files.\n */\nfunction includeFile($file)\n{\n    include $file;\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/autoload_static.php","ext":"php","size":3413,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_static.php @generated by Composer\n\nnamespace Composer\\Autoload;\n\nclass ComposerStaticInit65a0993a63c917989297698ea08a315e\n{\n    public static $prefixLengthsPsr4 = array (\n        'M' => \n        array (\n            'MyThemeShop\\\\Helpers\\\\' => 20,\n        ),\n    );\n\n    public static $prefixDirsPsr4 = array (\n        'MyThemeShop\\\\Helpers\\\\' => \n        array (\n            0 => __DIR__ . '/../..' . '/src',\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'MyThemeShop\\\\Admin\\\\List_Table' => __DIR__ . '/../..' . '/src/admin/class-list-table.php',\n        'MyThemeShop\\\\Admin\\\\Page' => __DIR__ . '/../..' . '/src/admin/class-page.php',\n        'MyThemeShop\\\\Database\\\\Clauses' => __DIR__ . '/../..' . '/src/database/class-clauses.php',\n        'MyThemeShop\\\\Database\\\\Database' => __DIR__ . '/../..' . '/src/database/class-database.php',\n        'MyThemeShop\\\\Database\\\\Escape' => __DIR__ . '/../..' . '/src/database/class-escape.php',\n        'MyThemeShop\\\\Database\\\\GroupBy' => __DIR__ . '/../..' . '/src/database/class-groupby.php',\n        'MyThemeShop\\\\Database\\\\Joins' => __DIR__ . '/../..' . '/src/database/class-joins.php',\n        'MyThemeShop\\\\Database\\\\OrderBy' => __DIR__ . '/../..' . '/src/database/class-orderby.php',\n        'MyThemeShop\\\\Database\\\\Query_Builder' => __DIR__ . '/../..' . '/src/database/class-query-builder.php',\n        'MyThemeShop\\\\Database\\\\Select' => __DIR__ . '/../..' . '/src/database/class-select.php',\n        'MyThemeShop\\\\Database\\\\Translate' => __DIR__ . '/../..' . '/src/database/class-translate.php',\n        'MyThemeShop\\\\Database\\\\Where' => __DIR__ . '/../..' . '/src/database/class-where.php',\n        'MyThemeShop\\\\Helpers\\\\Arr' => __DIR__ . '/../..' . '/src/helpers/class-arr.php',\n        'MyThemeShop\\\\Helpers\\\\Attachment' => __DIR__ . '/../..' . '/src/helpers/class-attachment.php',\n        'MyThemeShop\\\\Helpers\\\\Conditional' => __DIR__ . '/../..' . '/src/helpers/class-conditional.php',\n        'MyThemeShop\\\\Helpers\\\\DB' => __DIR__ . '/../..' . '/src/helpers/class-db.php',\n        'MyThemeShop\\\\Helpers\\\\HTML' => __DIR__ . '/../..' . '/src/helpers/class-html.php',\n        'MyThemeShop\\\\Helpers\\\\Param' => __DIR__ . '/../..' . '/src/helpers/class-param.php',\n        'MyThemeShop\\\\Helpers\\\\Str' => __DIR__ . '/../..' . '/src/helpers/class-str.php',\n        'MyThemeShop\\\\Helpers\\\\Url' => __DIR__ . '/../..' . '/src/helpers/class-url.php',\n        'MyThemeShop\\\\Helpers\\\\WordPress' => __DIR__ . '/../..' . '/src/helpers/class-wordpress.php',\n        'MyThemeShop\\\\Json_Manager' => __DIR__ . '/../..' . '/src/class-json-manager.php',\n        'MyThemeShop\\\\Notification' => __DIR__ . '/../..' . '/src/class-notification.php',\n        'MyThemeShop\\\\Notification_Center' => __DIR__ . '/../..' . '/src/class-notification-center.php',\n    );\n\n    public static function getInitializer(ClassLoader $loader)\n    {\n        return \\Closure::bind(function () use ($loader) {\n            $loader->prefixLengthsPsr4 = ComposerStaticInit65a0993a63c917989297698ea08a315e::$prefixLengthsPsr4;\n            $loader->prefixDirsPsr4 = ComposerStaticInit65a0993a63c917989297698ea08a315e::$prefixDirsPsr4;\n            $loader->classMap = ComposerStaticInit65a0993a63c917989297698ea08a315e::$classMap;\n\n        }, null, ClassLoader::class);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/platform_check.php","ext":"php","size":925,"mtime":1757324689,"type":"text","content":"<?php\n\n// platform_check.php @generated by Composer\n\n$issues = array();\n\nif (!(PHP_VERSION_ID >= 50600)) {\n    $issues[] = 'Your Composer dependencies require a PHP version \">= 5.6.0\". You are running ' . PHP_VERSION . '.';\n}\n\nif ($issues) {\n    if (!headers_sent()) {\n        header('HTTP/1.1 500 Internal Server Error');\n    }\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . implode(PHP_EOL, $issues) . PHP_EOL.PHP_EOL);\n        } elseif (!headers_sent()) {\n            echo 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . str_replace('You are running '.PHP_VERSION.'.', '', implode(PHP_EOL, $issues)) . PHP_EOL.PHP_EOL;\n        }\n    }\n    trigger_error(\n        'Composer detected issues in your platform: ' . implode(' ', $issues),\n        E_USER_ERROR\n    );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/mythemeshop/wordpress-helpers/vendor/composer/autoload_real.php","ext":"php","size":1897,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInit65a0993a63c917989297698ea08a315e\n{\n    private static $loader;\n\n    public static function loadClassLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader\n     */\n    public static function getLoader()\n    {\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        require __DIR__ . '/platform_check.php';\n\n        spl_autoload_register(array('ComposerAutoloaderInit65a0993a63c917989297698ea08a315e', 'loadClassLoader'), true, true);\n        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(\\dirname(__FILE__)));\n        spl_autoload_unregister(array('ComposerAutoloaderInit65a0993a63c917989297698ea08a315e', 'loadClassLoader'));\n\n        $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());\n        if ($useStaticLoader) {\n            require __DIR__ . '/autoload_static.php';\n\n            call_user_func(\\Composer\\Autoload\\ComposerStaticInit65a0993a63c917989297698ea08a315e::getInitializer($loader));\n        } else {\n            $map = require __DIR__ . '/autoload_namespaces.php';\n            foreach ($map as $namespace => $path) {\n                $loader->set($namespace, $path);\n            }\n\n            $map = require __DIR__ . '/autoload_psr4.php';\n            foreach ($map as $namespace => $path) {\n                $loader->setPsr4($namespace, $path);\n            }\n\n            $classMap = require __DIR__ . '/autoload_classmap.php';\n            if ($classMap) {\n                $loader->addClassMap($classMap);\n            }\n        }\n\n        $loader->register(true);\n\n        return $loader;\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/installed.json","ext":"json","size":13657,"mtime":1757324689,"type":"text","content":"{\n    \"packages\": [\n        {\n            \"name\": \"a5hleyrich/wp-background-processing\",\n            \"version\": \"1.4.0\",\n            \"version_normalized\": \"1.4.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/deliciousbrains/wp-background-processing.git\",\n                \"reference\": \"7ca7cc3504333db3a291bbab7f1917124fba4816\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/deliciousbrains/wp-background-processing/zipball/7ca7cc3504333db3a291bbab7f1917124fba4816\",\n                \"reference\": \"7ca7cc3504333db3a291bbab7f1917124fba4816\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.0\"\n            },\n            \"require-dev\": {\n                \"phpcompatibility/phpcompatibility-wp\": \"*\",\n                \"phpunit/phpunit\": \"^8.0\",\n                \"spryker/code-sniffer\": \"^0.17.18\",\n                \"wp-coding-standards/wpcs\": \"^2.3\",\n                \"yoast/phpunit-polyfills\": \"^1.0\"\n            },\n            \"suggest\": {\n                \"coenjacobs/mozart\": \"Easily wrap this library with your own prefix, to prevent collisions when multiple plugins use this library\"\n            },\n            \"time\": \"2024-12-17T14:04:30+00:00\",\n            \"type\": \"library\",\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"classmap\": [\n                    \"classes/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-2.0-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Delicious Brains\",\n                    \"email\": \"nom@deliciousbrains.com\"\n                }\n            ],\n            \"description\": \"WP Background Processing can be used to fire off non-blocking asynchronous requests or as a background processing tool, allowing you to queue tasks.\",\n            \"support\": {\n                \"issues\": \"https://github.com/deliciousbrains/wp-background-processing/issues\",\n                \"source\": \"https://github.com/deliciousbrains/wp-background-processing/tree/1.4.0\"\n            },\n            \"install-path\": \"../a5hleyrich/wp-background-processing\"\n        },\n        {\n            \"name\": \"cmb2/cmb2\",\n            \"version\": \"v2.11.0\",\n            \"version_normalized\": \"2.11.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/CMB2/CMB2.git\",\n                \"reference\": \"2847828b5cce1b48d09427ee13e6f7c752704468\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/CMB2/CMB2/zipball/2847828b5cce1b48d09427ee13e6f7c752704468\",\n                \"reference\": \"2847828b5cce1b48d09427ee13e6f7c752704468\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">7.4\"\n            },\n            \"require-dev\": {\n                \"apigen/apigen\": \"4.1.2\",\n                \"awesomemotive/am-cli-tools\": \">=1.3.7\",\n                \"nette/utils\": \"2.5.3\",\n                \"phpunit/phpunit\": \"^6.5\",\n                \"yoast/phpunit-polyfills\": \"^1.1\"\n            },\n            \"suggest\": {\n                \"composer/installers\": \"~1.0\"\n            },\n            \"time\": \"2024-04-02T19:30:07+00:00\",\n            \"type\": \"wordpress-plugin\",\n            \"installation-source\": \"dist\",\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-2.0-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Justin Sternberg\",\n                    \"email\": \"justin@dsgnwrks.pro\",\n                    \"homepage\": \"https://dsgnwrks.pro\",\n                    \"role\": \"Developer\"\n                },\n                {\n                    \"name\": \"WebDevStudios\",\n                    \"email\": \"contact@webdevstudios.com\",\n                    \"homepage\": \"https://github.com/WebDevStudios\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"CMB2 is a metabox, custom fields, and forms library for WordPress that will blow your mind.\",\n            \"homepage\": \"https://github.com/CMB2/CMB2\",\n            \"keywords\": [\n                \"metabox\",\n                \"plugin\",\n                \"wordpress\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/CMB2/CMB2/issues\",\n                \"source\": \"http://wordpress.org/support/plugin/cmb2\"\n            },\n            \"install-path\": \"../cmb2/cmb2\"\n        },\n        {\n            \"name\": \"donatj/phpuseragentparser\",\n            \"version\": \"v1.10.0\",\n            \"version_normalized\": \"1.10.0.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/donatj/PhpUserAgent.git\",\n                \"reference\": \"3ba73057d2a4a275badb88b7708e91e159c40367\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/donatj/PhpUserAgent/zipball/3ba73057d2a4a275badb88b7708e91e159c40367\",\n                \"reference\": \"3ba73057d2a4a275badb88b7708e91e159c40367\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"ext-ctype\": \"*\",\n                \"php\": \">=5.4.0\"\n            },\n            \"require-dev\": {\n                \"camspiers/json-pretty\": \"~1.0\",\n                \"donatj/drop\": \"*\",\n                \"ext-json\": \"*\",\n                \"phpunit/phpunit\": \"~4.8|~9\"\n            },\n            \"time\": \"2024-10-30T15:45:03+00:00\",\n            \"type\": \"library\",\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"files\": [\n                    \"src/UserAgentParser.php\"\n                ],\n                \"psr-4\": {\n                    \"donatj\\\\UserAgent\\\\\": \"src/UserAgent\"\n                }\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"Jesse G. Donat\",\n                    \"email\": \"donatj@gmail.com\",\n                    \"homepage\": \"https://donatstudios.com\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"Lightning fast, minimalist PHP UserAgent string parser.\",\n            \"homepage\": \"https://donatstudios.com/PHP-Parser-HTTP_USER_AGENT\",\n            \"keywords\": [\n                \"browser\",\n                \"browser detection\",\n                \"parser\",\n                \"user agent\",\n                \"useragent\"\n            ],\n            \"support\": {\n                \"issues\": \"https://github.com/donatj/PhpUserAgent/issues\",\n                \"source\": \"https://github.com/donatj/PhpUserAgent/tree/v1.10.0\"\n            },\n            \"funding\": [\n                {\n                    \"url\": \"https://www.paypal.me/donatj/15\",\n                    \"type\": \"custom\"\n                },\n                {\n                    \"url\": \"https://github.com/donatj\",\n                    \"type\": \"github\"\n                },\n                {\n                    \"url\": \"https://ko-fi.com/donatj\",\n                    \"type\": \"ko_fi\"\n                }\n            ],\n            \"install-path\": \"../donatj/phpuseragentparser\"\n        },\n        {\n            \"name\": \"mythemeshop/wordpress-helpers\",\n            \"version\": \"v1.1.22\",\n            \"version_normalized\": \"1.1.22.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/MyThemeShopTeam/wordpress-helpers.git\",\n                \"reference\": \"0ee4a87a03dac72e9e503cc4e1b0208d3269f4dc\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/MyThemeShopTeam/wordpress-helpers/zipball/0ee4a87a03dac72e9e503cc4e1b0208d3269f4dc\",\n                \"reference\": \"0ee4a87a03dac72e9e503cc4e1b0208d3269f4dc\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=5.6\"\n            },\n            \"time\": \"2023-06-15T08:54:41+00:00\",\n            \"type\": \"library\",\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"MyThemeShop\\\\Helpers\\\\\": \"src/\"\n                },\n                \"classmap\": [\n                    \"src/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"MIT\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"MyThemeShop\",\n                    \"email\": \"info@mythemeshop.com\"\n                }\n            ],\n            \"description\": \"Collection of utilities required during development of a plugin or theme for WordPress. Built for developers by developers.\",\n            \"support\": {\n                \"issues\": \"https://github.com/MyThemeShopTeam/wordpress-helpers/issues\",\n                \"source\": \"https://github.com/MyThemeShopTeam/wordpress-helpers/tree/v1.1.22\"\n            },\n            \"install-path\": \"../mythemeshop/wordpress-helpers\"\n        },\n        {\n            \"name\": \"woocommerce/action-scheduler\",\n            \"version\": \"3.9.3\",\n            \"version_normalized\": \"3.9.3.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/woocommerce/action-scheduler.git\",\n                \"reference\": \"c58cdbab17651303d406cd3b22cf9d75c71c986c\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/woocommerce/action-scheduler/zipball/c58cdbab17651303d406cd3b22cf9d75c71c986c\",\n                \"reference\": \"c58cdbab17651303d406cd3b22cf9d75c71c986c\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.2\"\n            },\n            \"require-dev\": {\n                \"phpunit/phpunit\": \"^8.5\",\n                \"woocommerce/woocommerce-sniffs\": \"0.1.0\",\n                \"wp-cli/wp-cli\": \"~2.5.0\",\n                \"yoast/phpunit-polyfills\": \"^2.0\"\n            },\n            \"time\": \"2025-07-15T09:32:30+00:00\",\n            \"type\": \"wordpress-plugin\",\n            \"extra\": {\n                \"scripts-description\": {\n                    \"test\": \"Run unit tests\",\n                    \"phpcs\": \"Analyze code against the WordPress coding standards with PHP_CodeSniffer\",\n                    \"phpcbf\": \"Fix coding standards warnings/errors automatically with PHP Code Beautifier\"\n                }\n            },\n            \"installation-source\": \"dist\",\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-3.0-or-later\"\n            ],\n            \"description\": \"Action Scheduler for WordPress and WooCommerce\",\n            \"homepage\": \"https://actionscheduler.org/\",\n            \"support\": {\n                \"issues\": \"https://github.com/woocommerce/action-scheduler/issues\",\n                \"source\": \"https://github.com/woocommerce/action-scheduler/tree/3.9.3\"\n            },\n            \"install-path\": \"../woocommerce/action-scheduler\"\n        },\n        {\n            \"name\": \"wp-media/wp-mixpanel\",\n            \"version\": \"v1.1.2\",\n            \"version_normalized\": \"1.1.2.0\",\n            \"source\": {\n                \"type\": \"git\",\n                \"url\": \"https://github.com/wp-media/wp-mixpanel.git\",\n                \"reference\": \"1eddae0d32f802ac14003c80c7ff096adf8e232f\"\n            },\n            \"dist\": {\n                \"type\": \"zip\",\n                \"url\": \"https://api.github.com/repos/wp-media/wp-mixpanel/zipball/1eddae0d32f802ac14003c80c7ff096adf8e232f\",\n                \"reference\": \"1eddae0d32f802ac14003c80c7ff096adf8e232f\",\n                \"shasum\": \"\"\n            },\n            \"require\": {\n                \"php\": \">=7.3\"\n            },\n            \"require-dev\": {\n                \"php-stubs/wordpress-tests-stubs\": \"^6.5\",\n                \"phpcompatibility/phpcompatibility-wp\": \"^2.0\",\n                \"phpstan/extension-installer\": \"^1.3\",\n                \"phpstan/phpstan-mockery\": \"^2.0\",\n                \"phpstan/phpstan-phpunit\": \"^2.0\",\n                \"roave/security-advisories\": \"dev-master\",\n                \"szepeviktor/phpstan-wordpress\": \"^2.0\",\n                \"wp-coding-standards/wpcs\": \"^3\",\n                \"wp-media/phpunit\": \"^3\"\n            },\n            \"time\": \"2025-08-20T18:28:16+00:00\",\n            \"type\": \"library\",\n            \"installation-source\": \"dist\",\n            \"autoload\": {\n                \"psr-4\": {\n                    \"WPMedia\\\\Mixpanel\\\\\": \"src/\"\n                },\n                \"classmap\": [\n                    \"src/Classes/\"\n                ]\n            },\n            \"notification-url\": \"https://packagist.org/downloads/\",\n            \"license\": [\n                \"GPL-3.0-or-later\"\n            ],\n            \"authors\": [\n                {\n                    \"name\": \"WP Media\",\n                    \"homepage\": \"https://github.com/wp-media/wp-mixpanel\",\n                    \"role\": \"Developer\"\n                }\n            ],\n            \"description\": \"WordPress Mixpanel Integration\",\n            \"support\": {\n                \"issues\": \"https://github.com/wp-media/wp-mixpanel/issues\",\n                \"source\": \"https://github.com/wp-media/wp-mixpanel/tree/v1.1.2\"\n            },\n            \"install-path\": \"../wp-media/wp-mixpanel\"\n        }\n    ],\n    \"dev\": false,\n    \"dev-package-names\": []\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/autoload_psr4.php","ext":"php","size":394,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_psr4.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'donatj\\\\UserAgent\\\\' => array($vendorDir . '/donatj/phpuseragentparser/src/UserAgent'),\n    'WPMedia\\\\Mixpanel\\\\' => array($vendorDir . '/wp-media/wp-mixpanel/src'),\n    'MyThemeShop\\\\Helpers\\\\' => array($vendorDir . '/mythemeshop/wordpress-helpers/src'),\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/InstalledVersions.php","ext":"php","size":15069,"mtime":1757324689,"type":"text","content":"<?php\n\n/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Composer;\n\nuse Composer\\Autoload\\ClassLoader;\nuse Composer\\Semver\\VersionParser;\n\n/**\n * This class is copied in every Composer installed project and available to all\n *\n * See also https://getcomposer.org/doc/07-runtime.md#installed-versions\n *\n * To require its presence, you can require `composer-runtime-api ^2.0`\n *\n * @final\n */\nclass InstalledVersions\n{\n    /**\n     * @var mixed[]|null\n     * @psalm-var array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}|array{}|null\n     */\n    private static $installed;\n\n    /**\n     * @var bool|null\n     */\n    private static $canGetVendors;\n\n    /**\n     * @var array[]\n     * @psalm-var array<string, array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     */\n    private static $installedByVendor = array();\n\n    /**\n     * Returns a list of all package names which are present, either by being installed, replaced or provided\n     *\n     * @return string[]\n     * @psalm-return list<string>\n     */\n    public static function getInstalledPackages()\n    {\n        $packages = array();\n        foreach (self::getInstalled() as $installed) {\n            $packages[] = array_keys($installed['versions']);\n        }\n\n        if (1 === \\count($packages)) {\n            return $packages[0];\n        }\n\n        return array_keys(array_flip(\\call_user_func_array('array_merge', $packages)));\n    }\n\n    /**\n     * Returns a list of all package names with a specific type e.g. 'library'\n     *\n     * @param  string   $type\n     * @return string[]\n     * @psalm-return list<string>\n     */\n    public static function getInstalledPackagesByType($type)\n    {\n        $packagesByType = array();\n\n        foreach (self::getInstalled() as $installed) {\n            foreach ($installed['versions'] as $name => $package) {\n                if (isset($package['type']) && $package['type'] === $type) {\n                    $packagesByType[] = $name;\n                }\n            }\n        }\n\n        return $packagesByType;\n    }\n\n    /**\n     * Checks whether the given package is installed\n     *\n     * This also returns true if the package name is provided or replaced by another package\n     *\n     * @param  string $packageName\n     * @param  bool   $includeDevRequirements\n     * @return bool\n     */\n    public static function isInstalled($packageName, $includeDevRequirements = true)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (isset($installed['versions'][$packageName])) {\n                return $includeDevRequirements || empty($installed['versions'][$packageName]['dev_requirement']);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Checks whether the given package satisfies a version constraint\n     *\n     * e.g. If you want to know whether version 2.3+ of package foo/bar is installed, you would call:\n     *\n     *   Composer\\InstalledVersions::satisfies(new VersionParser, 'foo/bar', '^2.3')\n     *\n     * @param  VersionParser $parser      Install composer/semver to have access to this class and functionality\n     * @param  string        $packageName\n     * @param  string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer/semver is required by your package\n     * @return bool\n     */\n    public static function satisfies(VersionParser $parser, $packageName, $constraint)\n    {\n        $constraint = $parser->parseConstraints($constraint);\n        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));\n\n        return $provided->matches($constraint);\n    }\n\n    /**\n     * Returns a version constraint representing all the range(s) which are installed for a given package\n     *\n     * It is easier to use this via isInstalled() with the $constraint argument if you need to check\n     * whether a given version of a package is installed, and not just whether it exists\n     *\n     * @param  string $packageName\n     * @return string Version constraint usable with composer/semver\n     */\n    public static function getVersionRanges($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            $ranges = array();\n            if (isset($installed['versions'][$packageName]['pretty_version'])) {\n                $ranges[] = $installed['versions'][$packageName]['pretty_version'];\n            }\n            if (array_key_exists('aliases', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);\n            }\n            if (array_key_exists('replaced', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);\n            }\n            if (array_key_exists('provided', $installed['versions'][$packageName])) {\n                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);\n            }\n\n            return implode(' || ', $ranges);\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    /**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     */\n    public static function getVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    /**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present\n     */\n    public static function getPrettyVersion($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['pretty_version'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['pretty_version'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    /**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference\n     */\n    public static function getReference($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            if (!isset($installed['versions'][$packageName]['reference'])) {\n                return null;\n            }\n\n            return $installed['versions'][$packageName]['reference'];\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    /**\n     * @param  string      $packageName\n     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as install path. Packages of type metapackages also have a null install path.\n     */\n    public static function getInstallPath($packageName)\n    {\n        foreach (self::getInstalled() as $installed) {\n            if (!isset($installed['versions'][$packageName])) {\n                continue;\n            }\n\n            return isset($installed['versions'][$packageName]['install_path']) ? $installed['versions'][$packageName]['install_path'] : null;\n        }\n\n        throw new \\OutOfBoundsException('Package \"' . $packageName . '\" is not installed');\n    }\n\n    /**\n     * @return array\n     * @psalm-return array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}\n     */\n    public static function getRootPackage()\n    {\n        $installed = self::getInstalled();\n\n        return $installed[0]['root'];\n    }\n\n    /**\n     * Returns the raw installed.php data for custom implementations\n     *\n     * @deprecated Use getAllRawData() instead which returns all datasets for all autoloaders present in the process. getRawData only returns the first dataset loaded, which may not be what you expect.\n     * @return array[]\n     * @psalm-return array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}\n     */\n    public static function getRawData()\n    {\n        @trigger_error('getRawData only returns the first dataset loaded, which may not be what you expect. Use getAllRawData() instead which returns all datasets for all autoloaders present in the process.', E_USER_DEPRECATED);\n\n        if (null === self::$installed) {\n            // only require the installed.php file if this file is loaded from its dumped location,\n            // and not from its source location in the composer/composer package, see https://github.com/composer/composer/issues/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = include __DIR__ . '/installed.php';\n            } else {\n                self::$installed = array();\n            }\n        }\n\n        return self::$installed;\n    }\n\n    /**\n     * Returns the raw data of all installed.php which are currently loaded for custom implementations\n     *\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     */\n    public static function getAllRawData()\n    {\n        return self::getInstalled();\n    }\n\n    /**\n     * Lets you reload the static array from another file\n     *\n     * This is only useful for complex integrations in which a project needs to use\n     * this class but then also needs to execute another project's autoloader in process,\n     * and wants to ensure both projects have access to their version of installed.php.\n     *\n     * A typical case would be PHPUnit, where it would need to make sure it reads all\n     * the data it needs from this class, then call reload() with\n     * `require $CWD/vendor/composer/installed.php` (or similar) as input to make sure\n     * the project in which it runs can then also use this class safely, without\n     * interference between PHPUnit's dependencies and the project's dependencies.\n     *\n     * @param  array[] $data A vendor/composer/installed.php data set\n     * @return void\n     *\n     * @psalm-param array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>} $data\n     */\n    public static function reload($data)\n    {\n        self::$installed = $data;\n        self::$installedByVendor = array();\n    }\n\n    /**\n     * @return array[]\n     * @psalm-return list<array{root: array{name: string, pretty_version: string, version: string, reference: string|null, type: string, install_path: string, aliases: string[], dev: bool}, versions: array<string, array{pretty_version?: string, version?: string, reference?: string|null, type?: string, install_path?: string, aliases?: string[], dev_requirement: bool, replaced?: string[], provided?: string[]}>}>\n     */\n    private static function getInstalled()\n    {\n        if (null === self::$canGetVendors) {\n            self::$canGetVendors = method_exists('Composer\\Autoload\\ClassLoader', 'getRegisteredLoaders');\n        }\n\n        $installed = array();\n\n        if (self::$canGetVendors) {\n            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {\n                if (isset(self::$installedByVendor[$vendorDir])) {\n                    $installed[] = self::$installedByVendor[$vendorDir];\n                } elseif (is_file($vendorDir.'/composer/installed.php')) {\n                    $installed[] = self::$installedByVendor[$vendorDir] = require $vendorDir.'/composer/installed.php';\n                    if (null === self::$installed && strtr($vendorDir.'/composer', '\\\\', '/') === strtr(__DIR__, '\\\\', '/')) {\n                        self::$installed = $installed[count($installed) - 1];\n                    }\n                }\n            }\n        }\n\n        if (null === self::$installed) {\n            // only require the installed.php file if this file is loaded from its dumped location,\n            // and not from its source location in the composer/composer package, see https://github.com/composer/composer/issues/9937\n            if (substr(__DIR__, -8, 1) !== 'C') {\n                self::$installed = require __DIR__ . '/installed.php';\n            } else {\n                self::$installed = array();\n            }\n        }\n        $installed[] = self::$installed;\n\n        return $installed;\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/autoload_classmap.php","ext":"php","size":37508,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_classmap.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'Composer\\\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',\n    'MyThemeShop\\\\Admin\\\\List_Table' => $vendorDir . '/mythemeshop/wordpress-helpers/src/admin/class-list-table.php',\n    'MyThemeShop\\\\Admin\\\\Page' => $vendorDir . '/mythemeshop/wordpress-helpers/src/admin/class-page.php',\n    'MyThemeShop\\\\Database\\\\Clauses' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-clauses.php',\n    'MyThemeShop\\\\Database\\\\Database' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-database.php',\n    'MyThemeShop\\\\Database\\\\Escape' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-escape.php',\n    'MyThemeShop\\\\Database\\\\GroupBy' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-groupby.php',\n    'MyThemeShop\\\\Database\\\\Joins' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-joins.php',\n    'MyThemeShop\\\\Database\\\\OrderBy' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-orderby.php',\n    'MyThemeShop\\\\Database\\\\Query_Builder' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-query-builder.php',\n    'MyThemeShop\\\\Database\\\\Select' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-select.php',\n    'MyThemeShop\\\\Database\\\\Translate' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-translate.php',\n    'MyThemeShop\\\\Database\\\\Where' => $vendorDir . '/mythemeshop/wordpress-helpers/src/database/class-where.php',\n    'MyThemeShop\\\\Helpers\\\\Arr' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-arr.php',\n    'MyThemeShop\\\\Helpers\\\\Attachment' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-attachment.php',\n    'MyThemeShop\\\\Helpers\\\\Conditional' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-conditional.php',\n    'MyThemeShop\\\\Helpers\\\\DB' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-db.php',\n    'MyThemeShop\\\\Helpers\\\\HTML' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-html.php',\n    'MyThemeShop\\\\Helpers\\\\Param' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-param.php',\n    'MyThemeShop\\\\Helpers\\\\Str' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-str.php',\n    'MyThemeShop\\\\Helpers\\\\Url' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-url.php',\n    'MyThemeShop\\\\Helpers\\\\WordPress' => $vendorDir . '/mythemeshop/wordpress-helpers/src/helpers/class-wordpress.php',\n    'MyThemeShop\\\\Json_Manager' => $vendorDir . '/mythemeshop/wordpress-helpers/src/class-json-manager.php',\n    'MyThemeShop\\\\Notification' => $vendorDir . '/mythemeshop/wordpress-helpers/src/class-notification.php',\n    'MyThemeShop\\\\Notification_Center' => $vendorDir . '/mythemeshop/wordpress-helpers/src/class-notification-center.php',\n    'RankMath\\\\ACF\\\\ACF' => $baseDir . '/includes/modules/acf/class-acf.php',\n    'RankMath\\\\Admin\\\\Admin' => $baseDir . '/includes/admin/class-admin.php',\n    'RankMath\\\\Admin\\\\Admin_Breadcrumbs' => $baseDir . '/includes/admin/class-admin-breadcrumbs.php',\n    'RankMath\\\\Admin\\\\Admin_Dashboard_Nav' => $baseDir . '/includes/admin/class-admin-dashboard-nav.php',\n    'RankMath\\\\Admin\\\\Admin_Header' => $baseDir . '/includes/admin/class-admin-header.php',\n    'RankMath\\\\Admin\\\\Admin_Helper' => $baseDir . '/includes/admin/class-admin-helper.php',\n    'RankMath\\\\Admin\\\\Admin_Init' => $baseDir . '/includes/admin/class-admin-init.php',\n    'RankMath\\\\Admin\\\\Admin_Menu' => $baseDir . '/includes/admin/class-admin-menu.php',\n    'RankMath\\\\Admin\\\\Api' => $baseDir . '/includes/admin/class-api.php',\n    'RankMath\\\\Admin\\\\Ask_Review' => $baseDir . '/includes/admin/class-ask-review.php',\n    'RankMath\\\\Admin\\\\Assets' => $baseDir . '/includes/admin/class-assets.php',\n    'RankMath\\\\Admin\\\\Bulk_Actions' => $baseDir . '/includes/admin/class-bulk-actions.php',\n    'RankMath\\\\Admin\\\\CMB2_Fields' => $baseDir . '/includes/admin/class-cmb2-fields.php',\n    'RankMath\\\\Admin\\\\CMB2_Options' => $baseDir . '/includes/admin/class-cmb2-options.php',\n    'RankMath\\\\Admin\\\\Database\\\\Clauses' => $baseDir . '/includes/admin/database/class-clauses.php',\n    'RankMath\\\\Admin\\\\Database\\\\Database' => $baseDir . '/includes/admin/database/class-database.php',\n    'RankMath\\\\Admin\\\\Database\\\\Escape' => $baseDir . '/includes/admin/database/class-escape.php',\n    'RankMath\\\\Admin\\\\Database\\\\GroupBy' => $baseDir . '/includes/admin/database/class-groupby.php',\n    'RankMath\\\\Admin\\\\Database\\\\Joins' => $baseDir . '/includes/admin/database/class-joins.php',\n    'RankMath\\\\Admin\\\\Database\\\\OrderBy' => $baseDir . '/includes/admin/database/class-orderby.php',\n    'RankMath\\\\Admin\\\\Database\\\\Query_Builder' => $baseDir . '/includes/admin/database/class-query-builder.php',\n    'RankMath\\\\Admin\\\\Database\\\\Select' => $baseDir . '/includes/admin/database/class-select.php',\n    'RankMath\\\\Admin\\\\Database\\\\Translate' => $baseDir . '/includes/admin/database/class-translate.php',\n    'RankMath\\\\Admin\\\\Database\\\\Where' => $baseDir . '/includes/admin/database/class-where.php',\n    'RankMath\\\\Admin\\\\Import_Export' => $baseDir . '/includes/admin/class-import-export.php',\n    'RankMath\\\\Admin\\\\Importers\\\\AIOSEO' => $baseDir . '/includes/admin/importers/class-aioseo.php',\n    'RankMath\\\\Admin\\\\Importers\\\\AIO_Rich_Snippet' => $baseDir . '/includes/admin/importers/class-aio-rich-snippet.php',\n    'RankMath\\\\Admin\\\\Importers\\\\Detector' => $baseDir . '/includes/admin/importers/class-detector.php',\n    'RankMath\\\\Admin\\\\Importers\\\\Plugin_Importer' => $baseDir . '/includes/admin/importers/class-plugin-importer.php',\n    'RankMath\\\\Admin\\\\Importers\\\\Redirections' => $baseDir . '/includes/admin/importers/class-redirections.php',\n    'RankMath\\\\Admin\\\\Importers\\\\SEOPress' => $baseDir . '/includes/admin/importers/class-seopress.php',\n    'RankMath\\\\Admin\\\\Importers\\\\Status' => $baseDir . '/includes/admin/importers/class-status.php',\n    'RankMath\\\\Admin\\\\Importers\\\\WP_Schema_Pro' => $baseDir . '/includes/admin/importers/class-wp-schema-pro.php',\n    'RankMath\\\\Admin\\\\Importers\\\\Yoast' => $baseDir . '/includes/admin/importers/class-yoast.php',\n    'RankMath\\\\Admin\\\\List_Table' => $baseDir . '/includes/admin/class-list-table.php',\n    'RankMath\\\\Admin\\\\Lock_Modified_Date' => $baseDir . '/includes/admin/class-lock-modified-date.php',\n    'RankMath\\\\Admin\\\\Metabox\\\\IScreen' => $baseDir . '/includes/admin/metabox/interface-screen.php',\n    'RankMath\\\\Admin\\\\Metabox\\\\Metabox' => $baseDir . '/includes/admin/metabox/class-metabox.php',\n    'RankMath\\\\Admin\\\\Metabox\\\\Post_Screen' => $baseDir . '/includes/admin/metabox/class-post-screen.php',\n    'RankMath\\\\Admin\\\\Metabox\\\\Screen' => $baseDir . '/includes/admin/metabox/class-screen.php',\n    'RankMath\\\\Admin\\\\Metabox\\\\Taxonomy_Screen' => $baseDir . '/includes/admin/metabox/class-taxonomy-screen.php',\n    'RankMath\\\\Admin\\\\Metabox\\\\User_Screen' => $baseDir . '/includes/admin/metabox/class-user-screen.php',\n    'RankMath\\\\Admin\\\\Notices' => $baseDir . '/includes/admin/class-notices.php',\n    'RankMath\\\\Admin\\\\Notifications\\\\Notification' => $baseDir . '/includes/admin/notifications/class-notification.php',\n    'RankMath\\\\Admin\\\\Notifications\\\\Notification_Center' => $baseDir . '/includes/admin/notifications/class-notification-center.php',\n    'RankMath\\\\Admin\\\\Option_Center' => $baseDir . '/includes/admin/class-option-center.php',\n    'RankMath\\\\Admin\\\\Options' => $baseDir . '/includes/admin/class-options.php',\n    'RankMath\\\\Admin\\\\Page' => $baseDir . '/includes/admin/class-page.php',\n    'RankMath\\\\Admin\\\\Post_Columns' => $baseDir . '/includes/admin/class-post-columns.php',\n    'RankMath\\\\Admin\\\\Post_Filters' => $baseDir . '/includes/admin/class-post-filters.php',\n    'RankMath\\\\Admin\\\\Pro_Notice' => $baseDir . '/includes/admin/class-pro-notice.php',\n    'RankMath\\\\Admin\\\\Register_Options_Page' => $baseDir . '/includes/admin/class-register-options-page.php',\n    'RankMath\\\\Admin\\\\Registration' => $baseDir . '/includes/admin/class-registration.php',\n    'RankMath\\\\Admin\\\\Sanitize_Settings' => $baseDir . '/includes/admin/class-sanitize-settings.php',\n    'RankMath\\\\Admin\\\\Setup_Wizard' => $baseDir . '/includes/admin/class-setup-wizard.php',\n    'RankMath\\\\Admin\\\\Watcher' => $baseDir . '/includes/admin/watcher/class-watcher.php',\n    'RankMath\\\\Admin_Bar_Menu' => $baseDir . '/includes/admin/class-admin-bar-menu.php',\n    'RankMath\\\\Analytics\\\\AJAX' => $baseDir . '/includes/modules/analytics/class-ajax.php',\n    'RankMath\\\\Analytics\\\\Analytics' => $baseDir . '/includes/modules/analytics/class-analytics.php',\n    'RankMath\\\\Analytics\\\\Analytics_Common' => $baseDir . '/includes/modules/analytics/class-analytics-common.php',\n    'RankMath\\\\Analytics\\\\Analytics_Stats' => $baseDir . '/includes/modules/analytics/class-analytics-stats.php',\n    'RankMath\\\\Analytics\\\\DB' => $baseDir . '/includes/modules/analytics/class-db.php',\n    'RankMath\\\\Analytics\\\\Email_Reports' => $baseDir . '/includes/modules/analytics/class-email-reports.php',\n    'RankMath\\\\Analytics\\\\GTag' => $baseDir . '/includes/modules/analytics/class-gtag.php',\n    'RankMath\\\\Analytics\\\\Keywords' => $baseDir . '/includes/modules/analytics/class-keywords.php',\n    'RankMath\\\\Analytics\\\\Objects' => $baseDir . '/includes/modules/analytics/class-objects.php',\n    'RankMath\\\\Analytics\\\\Posts' => $baseDir . '/includes/modules/analytics/class-posts.php',\n    'RankMath\\\\Analytics\\\\Rest' => $baseDir . '/includes/modules/analytics/rest/class-rest.php',\n    'RankMath\\\\Analytics\\\\Stats' => $baseDir . '/includes/modules/analytics/class-stats.php',\n    'RankMath\\\\Analytics\\\\Summary' => $baseDir . '/includes/modules/analytics/class-summary.php',\n    'RankMath\\\\Analytics\\\\Url_Inspection' => $baseDir . '/includes/modules/analytics/class-url-inspection.php',\n    'RankMath\\\\Analytics\\\\Watcher' => $baseDir . '/includes/modules/analytics/class-watcher.php',\n    'RankMath\\\\Analytics\\\\Workflow\\\\Base' => $baseDir . '/includes/modules/analytics/workflows/class-base.php',\n    'RankMath\\\\Analytics\\\\Workflow\\\\Console' => $baseDir . '/includes/modules/analytics/workflows/class-console.php',\n    'RankMath\\\\Analytics\\\\Workflow\\\\Inspections' => $baseDir . '/includes/modules/analytics/workflows/class-inspections.php',\n    'RankMath\\\\Analytics\\\\Workflow\\\\Jobs' => $baseDir . '/includes/modules/analytics/workflows/class-jobs.php',\n    'RankMath\\\\Analytics\\\\Workflow\\\\OAuth' => $baseDir . '/includes/modules/analytics/workflows/class-oauth.php',\n    'RankMath\\\\Analytics\\\\Workflow\\\\Objects' => $baseDir . '/includes/modules/analytics/workflows/class-objects.php',\n    'RankMath\\\\Analytics\\\\Workflow\\\\Workflow' => $baseDir . '/includes/modules/analytics/workflows/class-workflow.php',\n    'RankMath\\\\Auto_Updater' => $baseDir . '/includes/class-auto-updater.php',\n    'RankMath\\\\Beta_Optin' => $baseDir . '/includes/modules/version-control/class-beta-optin.php',\n    'RankMath\\\\BuddyPress\\\\Admin' => $baseDir . '/includes/modules/buddypress/class-admin.php',\n    'RankMath\\\\BuddyPress\\\\BuddyPress' => $baseDir . '/includes/modules/buddypress/class-buddypress.php',\n    'RankMath\\\\CLI\\\\Commands' => $baseDir . '/includes/cli/class-commands.php',\n    'RankMath\\\\CMB2' => $baseDir . '/includes/class-cmb2.php',\n    'RankMath\\\\Common' => $baseDir . '/includes/class-common.php',\n    'RankMath\\\\Compatibility' => $baseDir . '/includes/class-compatibility.php',\n    'RankMath\\\\ContentAI\\\\Admin' => $baseDir . '/includes/modules/content-ai/class-admin.php',\n    'RankMath\\\\ContentAI\\\\Assets' => $baseDir . '/includes/modules/content-ai/class-assets.php',\n    'RankMath\\\\ContentAI\\\\Block_Command' => $baseDir . '/includes/modules/content-ai/blocks/command/class-block-command.php',\n    'RankMath\\\\ContentAI\\\\Bulk_Actions' => $baseDir . '/includes/modules/content-ai/class-bulk-actions.php',\n    'RankMath\\\\ContentAI\\\\Bulk_Edit_SEO_Meta' => $baseDir . '/includes/modules/content-ai/class-bulk-edit-seo-meta.php',\n    'RankMath\\\\ContentAI\\\\Bulk_Image_Alt' => $baseDir . '/includes/modules/content-ai/class-bulk-image-alt.php',\n    'RankMath\\\\ContentAI\\\\Content_AI' => $baseDir . '/includes/modules/content-ai/class-content-ai.php',\n    'RankMath\\\\ContentAI\\\\Content_AI_Page' => $baseDir . '/includes/modules/content-ai/class-content-ai-page.php',\n    'RankMath\\\\ContentAI\\\\Event_Scheduler' => $baseDir . '/includes/modules/content-ai/class-event-scheduler.php',\n    'RankMath\\\\ContentAI\\\\Rest' => $baseDir . '/includes/modules/content-ai/class-rest.php',\n    'RankMath\\\\Dashboard_Widget' => $baseDir . '/includes/admin/class-dashboard-widget.php',\n    'RankMath\\\\Data_Encryption' => $baseDir . '/includes/class-data-encryption.php',\n    'RankMath\\\\Defaults' => $baseDir . '/includes/class-defaults.php',\n    'RankMath\\\\Divi\\\\Divi' => $baseDir . '/includes/3rdparty/divi/class-divi.php',\n    'RankMath\\\\Divi\\\\Divi_Admin' => $baseDir . '/includes/3rdparty/divi/class-divi-admin.php',\n    'RankMath\\\\Elementor\\\\Elementor' => $baseDir . '/includes/3rdparty/elementor/class-elementor.php',\n    'RankMath\\\\Frontend\\\\Breadcrumbs' => $baseDir . '/includes/frontend/class-breadcrumbs.php',\n    'RankMath\\\\Frontend\\\\Comments' => $baseDir . '/includes/frontend/class-comments.php',\n    'RankMath\\\\Frontend\\\\Frontend' => $baseDir . '/includes/frontend/class-frontend.php',\n    'RankMath\\\\Frontend\\\\Head' => $baseDir . '/includes/frontend/class-head.php',\n    'RankMath\\\\Frontend\\\\Link_Attributes' => $baseDir . '/includes/frontend/class-link-attributes.php',\n    'RankMath\\\\Frontend\\\\Redirection' => $baseDir . '/includes/frontend/class-redirection.php',\n    'RankMath\\\\Frontend\\\\Shortcodes' => $baseDir . '/includes/frontend/class-shortcodes.php',\n    'RankMath\\\\Frontend_SEO_Score' => $baseDir . '/includes/class-frontend-seo-score.php',\n    'RankMath\\\\Google\\\\Analytics' => $baseDir . '/includes/modules/analytics/google/class-analytics.php',\n    'RankMath\\\\Google\\\\Api' => $baseDir . '/includes/modules/analytics/google/class-api.php',\n    'RankMath\\\\Google\\\\Authentication' => $baseDir . '/includes/modules/analytics/google/class-authentication.php',\n    'RankMath\\\\Google\\\\Console' => $baseDir . '/includes/modules/analytics/google/class-console.php',\n    'RankMath\\\\Google\\\\Permissions' => $baseDir . '/includes/modules/analytics/google/class-permissions.php',\n    'RankMath\\\\Google\\\\Request' => $baseDir . '/includes/modules/analytics/google/class-request.php',\n    'RankMath\\\\Google\\\\Url_Inspection' => $baseDir . '/includes/modules/analytics/google/class-url-inspection.php',\n    'RankMath\\\\Helper' => $baseDir . '/includes/class-helper.php',\n    'RankMath\\\\Helpers\\\\Analytics' => $baseDir . '/includes/helpers/class-analytics.php',\n    'RankMath\\\\Helpers\\\\Api' => $baseDir . '/includes/helpers/class-api.php',\n    'RankMath\\\\Helpers\\\\Arr' => $baseDir . '/includes/helpers/class-arr.php',\n    'RankMath\\\\Helpers\\\\Attachment' => $baseDir . '/includes/helpers/class-attachment.php',\n    'RankMath\\\\Helpers\\\\Choices' => $baseDir . '/includes/helpers/class-choices.php',\n    'RankMath\\\\Helpers\\\\Conditional' => $baseDir . '/includes/helpers/class-conditional.php',\n    'RankMath\\\\Helpers\\\\Content_AI' => $baseDir . '/includes/helpers/class-content-ai.php',\n    'RankMath\\\\Helpers\\\\DB' => $baseDir . '/includes/helpers/class-db.php',\n    'RankMath\\\\Helpers\\\\Editor' => $baseDir . '/includes/helpers/class-editor.php',\n    'RankMath\\\\Helpers\\\\HTML' => $baseDir . '/includes/helpers/class-html.php',\n    'RankMath\\\\Helpers\\\\Locale' => $baseDir . '/includes/helpers/class-locale.php',\n    'RankMath\\\\Helpers\\\\Options' => $baseDir . '/includes/helpers/class-options.php',\n    'RankMath\\\\Helpers\\\\Param' => $baseDir . '/includes/helpers/class-param.php',\n    'RankMath\\\\Helpers\\\\Post_Type' => $baseDir . '/includes/helpers/class-post-type.php',\n    'RankMath\\\\Helpers\\\\Schedule' => $baseDir . '/includes/helpers/class-schedule.php',\n    'RankMath\\\\Helpers\\\\Schema' => $baseDir . '/includes/helpers/class-schema.php',\n    'RankMath\\\\Helpers\\\\Security' => $baseDir . '/includes/helpers/class-security.php',\n    'RankMath\\\\Helpers\\\\Sitepress' => $baseDir . '/includes/helpers/class-sitepress.php',\n    'RankMath\\\\Helpers\\\\Str' => $baseDir . '/includes/helpers/class-str.php',\n    'RankMath\\\\Helpers\\\\Taxonomy' => $baseDir . '/includes/helpers/class-taxonomy.php',\n    'RankMath\\\\Helpers\\\\Url' => $baseDir . '/includes/helpers/class-url.php',\n    'RankMath\\\\Helpers\\\\WordPress' => $baseDir . '/includes/helpers/class-wordpress.php',\n    'RankMath\\\\Image_Seo\\\\Add_Attributes' => $baseDir . '/includes/modules/image-seo/class-add-attributes.php',\n    'RankMath\\\\Image_Seo\\\\Admin' => $baseDir . '/includes/modules/image-seo/class-admin.php',\n    'RankMath\\\\Image_Seo\\\\Image_Seo' => $baseDir . '/includes/modules/image-seo/class-image-seo.php',\n    'RankMath\\\\Installer' => $baseDir . '/includes/class-installer.php',\n    'RankMath\\\\Instant_Indexing\\\\Api' => $baseDir . '/includes/modules/instant-indexing/class-api.php',\n    'RankMath\\\\Instant_Indexing\\\\Instant_Indexing' => $baseDir . '/includes/modules/instant-indexing/class-instant-indexing.php',\n    'RankMath\\\\Instant_Indexing\\\\Rest' => $baseDir . '/includes/modules/instant-indexing/class-rest.php',\n    'RankMath\\\\Json_Manager' => $baseDir . '/includes/class-json-manager.php',\n    'RankMath\\\\KB' => $baseDir . '/includes/class-kb.php',\n    'RankMath\\\\LLMS\\\\LLMS_Txt' => $baseDir . '/includes/modules/llms/class-llms-txt.php',\n    'RankMath\\\\Links\\\\ContentProcessor' => $baseDir . '/includes/modules/links/class-contentprocessor.php',\n    'RankMath\\\\Links\\\\Link' => $baseDir . '/includes/modules/links/class-link.php',\n    'RankMath\\\\Links\\\\Links' => $baseDir . '/includes/modules/links/class-links.php',\n    'RankMath\\\\Links\\\\Storage' => $baseDir . '/includes/modules/links/class-storage.php',\n    'RankMath\\\\Local_Seo\\\\KML_File' => $baseDir . '/includes/modules/local-seo/class-kml-file.php',\n    'RankMath\\\\Local_Seo\\\\Local_Seo' => $baseDir . '/includes/modules/local-seo/class-local-seo.php',\n    'RankMath\\\\Metadata' => $baseDir . '/includes/class-metadata.php',\n    'RankMath\\\\Module\\\\Base' => $baseDir . '/includes/module/class-base.php',\n    'RankMath\\\\Module\\\\Manager' => $baseDir . '/includes/module/class-manager.php',\n    'RankMath\\\\Module\\\\Module' => $baseDir . '/includes/module/class-module.php',\n    'RankMath\\\\Monitor\\\\Admin' => $baseDir . '/includes/modules/404-monitor/class-admin.php',\n    'RankMath\\\\Monitor\\\\DB' => $baseDir . '/includes/modules/404-monitor/class-db.php',\n    'RankMath\\\\Monitor\\\\Monitor' => $baseDir . '/includes/modules/404-monitor/class-monitor.php',\n    'RankMath\\\\Monitor\\\\Table' => $baseDir . '/includes/modules/404-monitor/class-table.php',\n    'RankMath\\\\OpenGraph\\\\Facebook' => $baseDir . '/includes/opengraph/class-facebook.php',\n    'RankMath\\\\OpenGraph\\\\Facebook_Locale' => $baseDir . '/includes/opengraph/class-facebook-locale.php',\n    'RankMath\\\\OpenGraph\\\\Image' => $baseDir . '/includes/opengraph/class-image.php',\n    'RankMath\\\\OpenGraph\\\\OpenGraph' => $baseDir . '/includes/opengraph/class-opengraph.php',\n    'RankMath\\\\OpenGraph\\\\Slack' => $baseDir . '/includes/opengraph/class-slack.php',\n    'RankMath\\\\OpenGraph\\\\Twitter' => $baseDir . '/includes/opengraph/class-twitter.php',\n    'RankMath\\\\Paper\\\\Archive' => $baseDir . '/includes/frontend/paper/class-archive.php',\n    'RankMath\\\\Paper\\\\Author' => $baseDir . '/includes/frontend/paper/class-author.php',\n    'RankMath\\\\Paper\\\\BP_Group' => $baseDir . '/includes/modules/buddypress/paper/class-bp-group.php',\n    'RankMath\\\\Paper\\\\BP_User' => $baseDir . '/includes/modules/buddypress/paper/class-bp-user.php',\n    'RankMath\\\\Paper\\\\Blog' => $baseDir . '/includes/frontend/paper/class-blog.php',\n    'RankMath\\\\Paper\\\\Date' => $baseDir . '/includes/frontend/paper/class-date.php',\n    'RankMath\\\\Paper\\\\Error_404' => $baseDir . '/includes/frontend/paper/class-error-404.php',\n    'RankMath\\\\Paper\\\\IPaper' => $baseDir . '/includes/frontend/paper/interface-paper.php',\n    'RankMath\\\\Paper\\\\Misc' => $baseDir . '/includes/frontend/paper/class-misc.php',\n    'RankMath\\\\Paper\\\\Paper' => $baseDir . '/includes/frontend/paper/class-paper.php',\n    'RankMath\\\\Paper\\\\Search' => $baseDir . '/includes/frontend/paper/class-search.php',\n    'RankMath\\\\Paper\\\\Shop' => $baseDir . '/includes/frontend/paper/class-shop.php',\n    'RankMath\\\\Paper\\\\Singular' => $baseDir . '/includes/frontend/paper/class-singular.php',\n    'RankMath\\\\Paper\\\\Taxonomy' => $baseDir . '/includes/frontend/paper/class-taxonomy.php',\n    'RankMath\\\\Post' => $baseDir . '/includes/class-post.php',\n    'RankMath\\\\Redirections\\\\Admin' => $baseDir . '/includes/modules/redirections/class-admin.php',\n    'RankMath\\\\Redirections\\\\Cache' => $baseDir . '/includes/modules/redirections/class-cache.php',\n    'RankMath\\\\Redirections\\\\DB' => $baseDir . '/includes/modules/redirections/class-db.php',\n    'RankMath\\\\Redirections\\\\Debugger' => $baseDir . '/includes/modules/redirections/class-debugger.php',\n    'RankMath\\\\Redirections\\\\Export' => $baseDir . '/includes/modules/redirections/class-export.php',\n    'RankMath\\\\Redirections\\\\Import_Export' => $baseDir . '/includes/modules/redirections/class-import-export.php',\n    'RankMath\\\\Redirections\\\\Metabox' => $baseDir . '/includes/modules/redirections/class-metabox.php',\n    'RankMath\\\\Redirections\\\\Redirection' => $baseDir . '/includes/modules/redirections/class-redirection.php',\n    'RankMath\\\\Redirections\\\\Redirections' => $baseDir . '/includes/modules/redirections/class-redirections.php',\n    'RankMath\\\\Redirections\\\\Redirector' => $baseDir . '/includes/modules/redirections/class-redirector.php',\n    'RankMath\\\\Redirections\\\\Table' => $baseDir . '/includes/modules/redirections/class-table.php',\n    'RankMath\\\\Redirections\\\\Watcher' => $baseDir . '/includes/modules/redirections/class-watcher.php',\n    'RankMath\\\\Replace_Variables\\\\Advanced_Variables' => $baseDir . '/includes/replace-variables/class-advanced-variables.php',\n    'RankMath\\\\Replace_Variables\\\\Author_Variables' => $baseDir . '/includes/replace-variables/class-author-variables.php',\n    'RankMath\\\\Replace_Variables\\\\Base' => $baseDir . '/includes/replace-variables/class-base.php',\n    'RankMath\\\\Replace_Variables\\\\Basic_Variables' => $baseDir . '/includes/replace-variables/class-basic-variables.php',\n    'RankMath\\\\Replace_Variables\\\\Cache' => $baseDir . '/includes/replace-variables/class-cache.php',\n    'RankMath\\\\Replace_Variables\\\\Manager' => $baseDir . '/includes/replace-variables/class-manager.php',\n    'RankMath\\\\Replace_Variables\\\\Post_Variables' => $baseDir . '/includes/replace-variables/class-post-variables.php',\n    'RankMath\\\\Replace_Variables\\\\Replacer' => $baseDir . '/includes/replace-variables/class-replacer.php',\n    'RankMath\\\\Replace_Variables\\\\Term_Variables' => $baseDir . '/includes/replace-variables/class-term-variables.php',\n    'RankMath\\\\Replace_Variables\\\\Variable' => $baseDir . '/includes/replace-variables/class-variable.php',\n    'RankMath\\\\Rest\\\\Admin' => $baseDir . '/includes/rest/class-admin.php',\n    'RankMath\\\\Rest\\\\Front' => $baseDir . '/includes/rest/class-front.php',\n    'RankMath\\\\Rest\\\\Headless' => $baseDir . '/includes/rest/class-headless.php',\n    'RankMath\\\\Rest\\\\Post' => $baseDir . '/includes/rest/class-post.php',\n    'RankMath\\\\Rest\\\\Rest_Helper' => $baseDir . '/includes/rest/class-rest-helper.php',\n    'RankMath\\\\Rest\\\\Sanitize' => $baseDir . '/includes/rest/class-sanitize.php',\n    'RankMath\\\\Rest\\\\Setup_Wizard' => $baseDir . '/includes/rest/class-setup-wizard.php',\n    'RankMath\\\\Rest\\\\Shared' => $baseDir . '/includes/rest/class-shared.php',\n    'RankMath\\\\Rewrite' => $baseDir . '/includes/class-rewrite.php',\n    'RankMath\\\\Robots_Txt' => $baseDir . '/includes/modules/robots-txt/class-robots-txt.php',\n    'RankMath\\\\Role_Manager\\\\Capability_Manager' => $baseDir . '/includes/modules/role-manager/class-capability-manager.php',\n    'RankMath\\\\Role_Manager\\\\Members' => $baseDir . '/includes/modules/role-manager/class-members.php',\n    'RankMath\\\\Role_Manager\\\\Role_Manager' => $baseDir . '/includes/modules/role-manager/class-role-manager.php',\n    'RankMath\\\\Role_Manager\\\\User_Role_Editor' => $baseDir . '/includes/modules/role-manager/class-user-role-editor.php',\n    'RankMath\\\\Rollback_Version' => $baseDir . '/includes/modules/version-control/class-rollback-version.php',\n    'RankMath\\\\Runner' => $baseDir . '/includes/interface-runner.php',\n    'RankMath\\\\SEO_Analysis\\\\Admin' => $baseDir . '/includes/modules/seo-analysis/class-admin.php',\n    'RankMath\\\\SEO_Analysis\\\\Result' => $baseDir . '/includes/modules/seo-analysis/class-result.php',\n    'RankMath\\\\SEO_Analysis\\\\SEO_Analysis' => $baseDir . '/includes/modules/seo-analysis/class-seo-analysis.php',\n    'RankMath\\\\SEO_Analysis\\\\SEO_Analyzer' => $baseDir . '/includes/modules/seo-analysis/class-seo-analyzer.php',\n    'RankMath\\\\Schema\\\\Admin' => $baseDir . '/includes/modules/schema/class-admin.php',\n    'RankMath\\\\Schema\\\\Article' => $baseDir . '/includes/modules/schema/snippets/class-article.php',\n    'RankMath\\\\Schema\\\\Author' => $baseDir . '/includes/modules/schema/snippets/class-author.php',\n    'RankMath\\\\Schema\\\\Block' => $baseDir . '/includes/modules/schema/blocks/class-block.php',\n    'RankMath\\\\Schema\\\\Block_FAQ' => $baseDir . '/includes/modules/schema/blocks/faq/class-block-faq.php',\n    'RankMath\\\\Schema\\\\Block_HowTo' => $baseDir . '/includes/modules/schema/blocks/howto/class-block-howto.php',\n    'RankMath\\\\Schema\\\\Block_Parser' => $baseDir . '/includes/modules/schema/blocks/class-block-parser.php',\n    'RankMath\\\\Schema\\\\Block_Schema' => $baseDir . '/includes/modules/schema/blocks/schema/class-block-schema.php',\n    'RankMath\\\\Schema\\\\Block_TOC' => $baseDir . '/includes/modules/schema/blocks/toc/class-block-toc.php',\n    'RankMath\\\\Schema\\\\Blocks' => $baseDir . '/includes/modules/schema/class-blocks.php',\n    'RankMath\\\\Schema\\\\Blocks\\\\Admin' => $baseDir . '/includes/modules/schema/blocks/class-admin.php',\n    'RankMath\\\\Schema\\\\Breadcrumbs' => $baseDir . '/includes/modules/schema/snippets/class-breadcrumbs.php',\n    'RankMath\\\\Schema\\\\DB' => $baseDir . '/includes/modules/schema/class-db.php',\n    'RankMath\\\\Schema\\\\Frontend' => $baseDir . '/includes/modules/schema/class-frontend.php',\n    'RankMath\\\\Schema\\\\JsonLD' => $baseDir . '/includes/modules/schema/class-jsonld.php',\n    'RankMath\\\\Schema\\\\Opengraph' => $baseDir . '/includes/modules/schema/class-opengraph.php',\n    'RankMath\\\\Schema\\\\PrimaryImage' => $baseDir . '/includes/modules/schema/snippets/class-primaryimage.php',\n    'RankMath\\\\Schema\\\\Product' => $baseDir . '/includes/modules/schema/snippets/class-product.php',\n    'RankMath\\\\Schema\\\\Product_Edd' => $baseDir . '/includes/modules/schema/snippets/class-product-edd.php',\n    'RankMath\\\\Schema\\\\Product_WooCommerce' => $baseDir . '/includes/modules/schema/snippets/class-product-woocommerce.php',\n    'RankMath\\\\Schema\\\\Products_Page' => $baseDir . '/includes/modules/schema/snippets/class-products-page.php',\n    'RankMath\\\\Schema\\\\Publisher' => $baseDir . '/includes/modules/schema/snippets/class-publisher.php',\n    'RankMath\\\\Schema\\\\Schema' => $baseDir . '/includes/modules/schema/class-schema.php',\n    'RankMath\\\\Schema\\\\Singular' => $baseDir . '/includes/modules/schema/snippets/class-singular.php',\n    'RankMath\\\\Schema\\\\Snippet' => $baseDir . '/includes/modules/schema/interface-snippet.php',\n    'RankMath\\\\Schema\\\\Snippet_Shortcode' => $baseDir . '/includes/modules/schema/class-snippet-shortcode.php',\n    'RankMath\\\\Schema\\\\WC_Attributes' => $baseDir . '/includes/modules/schema/snippets/class-wc-attributes.php',\n    'RankMath\\\\Schema\\\\Webpage' => $baseDir . '/includes/modules/schema/snippets/class-webpage.php',\n    'RankMath\\\\Schema\\\\Website' => $baseDir . '/includes/modules/schema/snippets/class-website.php',\n    'RankMath\\\\Settings' => $baseDir . '/includes/class-settings.php',\n    'RankMath\\\\Sitemap\\\\Admin' => $baseDir . '/includes/modules/sitemap/class-admin.php',\n    'RankMath\\\\Sitemap\\\\Cache' => $baseDir . '/includes/modules/sitemap/class-cache.php',\n    'RankMath\\\\Sitemap\\\\Cache_Watcher' => $baseDir . '/includes/modules/sitemap/class-cache-watcher.php',\n    'RankMath\\\\Sitemap\\\\Classifier' => $baseDir . '/includes/modules/sitemap/class-classifier.php',\n    'RankMath\\\\Sitemap\\\\Generator' => $baseDir . '/includes/modules/sitemap/class-generator.php',\n    'RankMath\\\\Sitemap\\\\Html\\\\Authors' => $baseDir . '/includes/modules/sitemap/html-sitemap/class-authors.php',\n    'RankMath\\\\Sitemap\\\\Html\\\\Posts' => $baseDir . '/includes/modules/sitemap/html-sitemap/class-posts.php',\n    'RankMath\\\\Sitemap\\\\Html\\\\Sitemap' => $baseDir . '/includes/modules/sitemap/html-sitemap/class-sitemap.php',\n    'RankMath\\\\Sitemap\\\\Html\\\\Terms' => $baseDir . '/includes/modules/sitemap/html-sitemap/class-terms.php',\n    'RankMath\\\\Sitemap\\\\Image_Parser' => $baseDir . '/includes/modules/sitemap/class-image-parser.php',\n    'RankMath\\\\Sitemap\\\\Providers\\\\Author' => $baseDir . '/includes/modules/sitemap/providers/class-author.php',\n    'RankMath\\\\Sitemap\\\\Providers\\\\Post_Type' => $baseDir . '/includes/modules/sitemap/providers/class-post-type.php',\n    'RankMath\\\\Sitemap\\\\Providers\\\\Provider' => $baseDir . '/includes/modules/sitemap/providers/interface-provider.php',\n    'RankMath\\\\Sitemap\\\\Providers\\\\Taxonomy' => $baseDir . '/includes/modules/sitemap/providers/class-taxonomy.php',\n    'RankMath\\\\Sitemap\\\\Redirect_Core_Sitemaps' => $baseDir . '/includes/modules/sitemap/class-redirect-core-sitemaps.php',\n    'RankMath\\\\Sitemap\\\\Router' => $baseDir . '/includes/modules/sitemap/class-router.php',\n    'RankMath\\\\Sitemap\\\\Sitemap' => $baseDir . '/includes/modules/sitemap/class-sitemap.php',\n    'RankMath\\\\Sitemap\\\\Sitemap_Index' => $baseDir . '/includes/modules/sitemap/class-sitemap-index.php',\n    'RankMath\\\\Sitemap\\\\Sitemap_XML' => $baseDir . '/includes/modules/sitemap/class-sitemap-xml.php',\n    'RankMath\\\\Sitemap\\\\Stylesheet' => $baseDir . '/includes/modules/sitemap/class-stylesheet.php',\n    'RankMath\\\\Sitemap\\\\Timezone' => $baseDir . '/includes/modules/sitemap/class-timezone.php',\n    'RankMath\\\\Sitemap\\\\XML' => $baseDir . '/includes/modules/sitemap/abstract-xml.php',\n    'RankMath\\\\Status\\\\Backup' => $baseDir . '/includes/modules/status/class-backup.php',\n    'RankMath\\\\Status\\\\Error_Log' => $baseDir . '/includes/modules/status/class-error-log.php',\n    'RankMath\\\\Status\\\\Import_Export_Settings' => $baseDir . '/includes/modules/status/class-import-export-settings.php',\n    'RankMath\\\\Status\\\\Rest' => $baseDir . '/includes/modules/status/class-rest.php',\n    'RankMath\\\\Status\\\\Status' => $baseDir . '/includes/modules/status/class-status.php',\n    'RankMath\\\\Status\\\\System_Status' => $baseDir . '/includes/modules/status/class-system-status.php',\n    'RankMath\\\\Term' => $baseDir . '/includes/class-term.php',\n    'RankMath\\\\Thumbnail_Overlay' => $baseDir . '/includes/class-thumbnail-overlay.php',\n    'RankMath\\\\Tools\\\\AIOSEO_Blocks' => $baseDir . '/includes/modules/database-tools/class-aioseo-blocks.php',\n    'RankMath\\\\Tools\\\\AIOSEO_TOC_Converter' => $baseDir . '/includes/modules/database-tools/class-aioseo-toc-converter.php',\n    'RankMath\\\\Tools\\\\Database_Tools' => $baseDir . '/includes/modules/database-tools/class-database-tools.php',\n    'RankMath\\\\Tools\\\\Update_Score' => $baseDir . '/includes/modules/database-tools/class-update-score.php',\n    'RankMath\\\\Tools\\\\Yoast_Blocks' => $baseDir . '/includes/modules/database-tools/class-yoast-blocks.php',\n    'RankMath\\\\Tools\\\\Yoast_FAQ_Converter' => $baseDir . '/includes/modules/database-tools/class-yoast-faq-converter.php',\n    'RankMath\\\\Tools\\\\Yoast_HowTo_Converter' => $baseDir . '/includes/modules/database-tools/class-yoast-howto-converter.php',\n    'RankMath\\\\Tools\\\\Yoast_Local_Converter' => $baseDir . '/includes/modules/database-tools/class-yoast-local-converter.php',\n    'RankMath\\\\Tools\\\\Yoast_TOC_Converter' => $baseDir . '/includes/modules/database-tools/class-yoast-toc-converter.php',\n    'RankMath\\\\Tracking' => $baseDir . '/includes/class-tracking.php',\n    'RankMath\\\\Traits\\\\Ajax' => $baseDir . '/includes/traits/class-ajax.php',\n    'RankMath\\\\Traits\\\\Cache' => $baseDir . '/includes/traits/class-cache.php',\n    'RankMath\\\\Traits\\\\Hooker' => $baseDir . '/includes/traits/class-hooker.php',\n    'RankMath\\\\Traits\\\\Meta' => $baseDir . '/includes/traits/class-meta.php',\n    'RankMath\\\\Traits\\\\Shortcode' => $baseDir . '/includes/traits/class-shortcode.php',\n    'RankMath\\\\Traits\\\\Wizard' => $baseDir . '/includes/traits/class-wizard.php',\n    'RankMath\\\\Update_Email' => $baseDir . '/includes/class-update-email.php',\n    'RankMath\\\\Updates' => $baseDir . '/includes/class-updates.php',\n    'RankMath\\\\User' => $baseDir . '/includes/class-user.php',\n    'RankMath\\\\Version_Control' => $baseDir . '/includes/modules/version-control/class-version-control.php',\n    'RankMath\\\\Web_Stories\\\\Web_Stories' => $baseDir . '/includes/modules/web-stories/class-web-stories.php',\n    'RankMath\\\\Wizard\\\\Compatibility' => $baseDir . '/includes/admin/wizard/class-compatibility.php',\n    'RankMath\\\\Wizard\\\\Import' => $baseDir . '/includes/admin/wizard/class-import.php',\n    'RankMath\\\\Wizard\\\\Monitor_Redirection' => $baseDir . '/includes/admin/wizard/class-monitor-redirection.php',\n    'RankMath\\\\Wizard\\\\Optimization' => $baseDir . '/includes/admin/wizard/class-optimization.php',\n    'RankMath\\\\Wizard\\\\Ready' => $baseDir . '/includes/admin/wizard/class-ready.php',\n    'RankMath\\\\Wizard\\\\Role' => $baseDir . '/includes/admin/wizard/class-role.php',\n    'RankMath\\\\Wizard\\\\Schema_Markup' => $baseDir . '/includes/admin/wizard/class-schema-markup.php',\n    'RankMath\\\\Wizard\\\\Search_Console' => $baseDir . '/includes/admin/wizard/class-search-console.php',\n    'RankMath\\\\Wizard\\\\Sitemap' => $baseDir . '/includes/admin/wizard/class-sitemap.php',\n    'RankMath\\\\Wizard\\\\Wizard_Step' => $baseDir . '/includes/admin/wizard/interface-wizard-step.php',\n    'RankMath\\\\Wizard\\\\Your_Site' => $baseDir . '/includes/admin/wizard/class-your-site.php',\n    'RankMath\\\\WooCommerce\\\\Admin' => $baseDir . '/includes/modules/woocommerce/class-admin.php',\n    'RankMath\\\\WooCommerce\\\\Base' => $baseDir . '/includes/modules/woocommerce/class-base.php',\n    'RankMath\\\\WooCommerce\\\\Opengraph' => $baseDir . '/includes/modules/woocommerce/class-opengraph.php',\n    'RankMath\\\\WooCommerce\\\\Permalink_Watcher' => $baseDir . '/includes/modules/woocommerce/class-permalink-watcher.php',\n    'RankMath\\\\WooCommerce\\\\Product_Redirection' => $baseDir . '/includes/modules/woocommerce/class-product-redirection.php',\n    'RankMath\\\\WooCommerce\\\\Sitemap' => $baseDir . '/includes/modules/woocommerce/class-sitemap.php',\n    'RankMath\\\\WooCommerce\\\\WC_Vars' => $baseDir . '/includes/modules/woocommerce/class-wc-vars.php',\n    'RankMath\\\\WooCommerce\\\\WooCommerce' => $baseDir . '/includes/modules/woocommerce/class-woocommerce.php',\n    'WPMedia\\\\Mixpanel\\\\Optin' => $vendorDir . '/wp-media/wp-mixpanel/src/Optin.php',\n    'WPMedia\\\\Mixpanel\\\\Tracking' => $vendorDir . '/wp-media/wp-mixpanel/src/Tracking.php',\n    'WPMedia\\\\Mixpanel\\\\TrackingPlugin' => $vendorDir . '/wp-media/wp-mixpanel/src/TrackingPlugin.php',\n    'WPMedia\\\\Mixpanel\\\\WPConsumer' => $vendorDir . '/wp-media/wp-mixpanel/src/WPConsumer.php',\n    'WPMedia_Base_MixpanelBase' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/Base/MixpanelBase.php',\n    'WPMedia_ConsumerStrategies_AbstractConsumer' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/AbstractConsumer.php',\n    'WPMedia_ConsumerStrategies_CurlConsumer' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/CurlConsumer.php',\n    'WPMedia_ConsumerStrategies_FileConsumer' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/FileConsumer.php',\n    'WPMedia_ConsumerStrategies_SocketConsumer' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/SocketConsumer.php',\n    'WPMedia_Mixpanel' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/Mixpanel.php',\n    'WPMedia_Producers_MixpanelBaseProducer' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelBaseProducer.php',\n    'WPMedia_Producers_MixpanelEvents' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelEvents.php',\n    'WPMedia_Producers_MixpanelGroups' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelGroups.php',\n    'WPMedia_Producers_MixpanelPeople' => $vendorDir . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelPeople.php',\n    'WP_Async_Request' => $vendorDir . '/a5hleyrich/wp-background-processing/classes/wp-async-request.php',\n    'WP_Background_Process' => $vendorDir . '/a5hleyrich/wp-background-processing/classes/wp-background-process.php',\n    'donatj\\\\UserAgent\\\\Browsers' => $vendorDir . '/donatj/phpuseragentparser/src/UserAgent/Browsers.php',\n    'donatj\\\\UserAgent\\\\Platforms' => $vendorDir . '/donatj/phpuseragentparser/src/UserAgent/Platforms.php',\n    'donatj\\\\UserAgent\\\\UserAgent' => $vendorDir . '/donatj/phpuseragentparser/src/UserAgent/UserAgent.php',\n    'donatj\\\\UserAgent\\\\UserAgentInterface' => $vendorDir . '/donatj/phpuseragentparser/src/UserAgent/UserAgentInterface.php',\n    'donatj\\\\UserAgent\\\\UserAgentParser' => $vendorDir . '/donatj/phpuseragentparser/src/UserAgent/UserAgentParser.php',\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/installed.php","ext":"php","size":3121,"mtime":1757324689,"type":"text","content":"<?php return array(\n    'root' => array(\n        'name' => 'rankmath/seo-by-rank-math',\n        'pretty_version' => 'v1.0.252.1',\n        'version' => '1.0.252.1',\n        'reference' => '0eb11a2cf631d37d349beab9c56e3427cfa66239',\n        'type' => 'wordpress-plugin',\n        'install_path' => __DIR__ . '/../../',\n        'aliases' => array(),\n        'dev' => false,\n    ),\n    'versions' => array(\n        'a5hleyrich/wp-background-processing' => array(\n            'pretty_version' => '1.4.0',\n            'version' => '1.4.0.0',\n            'reference' => '7ca7cc3504333db3a291bbab7f1917124fba4816',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../a5hleyrich/wp-background-processing',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'cmb2/cmb2' => array(\n            'pretty_version' => 'v2.11.0',\n            'version' => '2.11.0.0',\n            'reference' => '2847828b5cce1b48d09427ee13e6f7c752704468',\n            'type' => 'wordpress-plugin',\n            'install_path' => __DIR__ . '/../cmb2/cmb2',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'donatj/phpuseragentparser' => array(\n            'pretty_version' => 'v1.10.0',\n            'version' => '1.10.0.0',\n            'reference' => '3ba73057d2a4a275badb88b7708e91e159c40367',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../donatj/phpuseragentparser',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'mythemeshop/wordpress-helpers' => array(\n            'pretty_version' => 'v1.1.22',\n            'version' => '1.1.22.0',\n            'reference' => '0ee4a87a03dac72e9e503cc4e1b0208d3269f4dc',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../mythemeshop/wordpress-helpers',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'rankmath/seo-by-rank-math' => array(\n            'pretty_version' => 'v1.0.252.1',\n            'version' => '1.0.252.1',\n            'reference' => '0eb11a2cf631d37d349beab9c56e3427cfa66239',\n            'type' => 'wordpress-plugin',\n            'install_path' => __DIR__ . '/../../',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'woocommerce/action-scheduler' => array(\n            'pretty_version' => '3.9.3',\n            'version' => '3.9.3.0',\n            'reference' => 'c58cdbab17651303d406cd3b22cf9d75c71c986c',\n            'type' => 'wordpress-plugin',\n            'install_path' => __DIR__ . '/../woocommerce/action-scheduler',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n        'wp-media/wp-mixpanel' => array(\n            'pretty_version' => 'v1.1.2',\n            'version' => '1.1.2.0',\n            'reference' => '1eddae0d32f802ac14003c80c7ff096adf8e232f',\n            'type' => 'library',\n            'install_path' => __DIR__ . '/../wp-media/wp-mixpanel',\n            'aliases' => array(),\n            'dev_requirement' => false,\n        ),\n    ),\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/autoload_namespaces.php","ext":"php","size":139,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_namespaces.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/ClassLoader.php","ext":"php","size":16068,"mtime":1757324689,"type":"text","content":"<?php\n\n/*\n * This file is part of Composer.\n *\n * (c) Nils Adermann <naderman@naderman.de>\n *     Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Composer\\Autoload;\n\n/**\n * ClassLoader implements a PSR-0, PSR-4 and classmap class loader.\n *\n *     $loader = new \\Composer\\Autoload\\ClassLoader();\n *\n *     // register classes with namespaces\n *     $loader->add('Symfony\\Component', __DIR__.'/component');\n *     $loader->add('Symfony',           __DIR__.'/framework');\n *\n *     // activate the autoloader\n *     $loader->register();\n *\n *     // to enable searching the include path (eg. for PEAR packages)\n *     $loader->setUseIncludePath(true);\n *\n * In this example, if you try to use a class in the Symfony\\Component\n * namespace or one of its children (Symfony\\Component\\Console for instance),\n * the autoloader will first look for the class under the component/\n * directory, and it will then fallback to the framework/ directory if not\n * found before giving up.\n *\n * This class is loosely based on the Symfony UniversalClassLoader.\n *\n * @author Fabien Potencier <fabien@symfony.com>\n * @author Jordi Boggiano <j.boggiano@seld.be>\n * @see    https://www.php-fig.org/psr/psr-0/\n * @see    https://www.php-fig.org/psr/psr-4/\n */\nclass ClassLoader\n{\n    /** @var ?string */\n    private $vendorDir;\n\n    // PSR-4\n    /**\n     * @var array[]\n     * @psalm-var array<string, array<string, int>>\n     */\n    private $prefixLengthsPsr4 = array();\n    /**\n     * @var array[]\n     * @psalm-var array<string, array<int, string>>\n     */\n    private $prefixDirsPsr4 = array();\n    /**\n     * @var array[]\n     * @psalm-var array<string, string>\n     */\n    private $fallbackDirsPsr4 = array();\n\n    // PSR-0\n    /**\n     * @var array[]\n     * @psalm-var array<string, array<string, string[]>>\n     */\n    private $prefixesPsr0 = array();\n    /**\n     * @var array[]\n     * @psalm-var array<string, string>\n     */\n    private $fallbackDirsPsr0 = array();\n\n    /** @var bool */\n    private $useIncludePath = false;\n\n    /**\n     * @var string[]\n     * @psalm-var array<string, string>\n     */\n    private $classMap = array();\n\n    /** @var bool */\n    private $classMapAuthoritative = false;\n\n    /**\n     * @var bool[]\n     * @psalm-var array<string, bool>\n     */\n    private $missingClasses = array();\n\n    /** @var ?string */\n    private $apcuPrefix;\n\n    /**\n     * @var self[]\n     */\n    private static $registeredLoaders = array();\n\n    /**\n     * @param ?string $vendorDir\n     */\n    public function __construct($vendorDir = null)\n    {\n        $this->vendorDir = $vendorDir;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getPrefixes()\n    {\n        if (!empty($this->prefixesPsr0)) {\n            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));\n        }\n\n        return array();\n    }\n\n    /**\n     * @return array[]\n     * @psalm-return array<string, array<int, string>>\n     */\n    public function getPrefixesPsr4()\n    {\n        return $this->prefixDirsPsr4;\n    }\n\n    /**\n     * @return array[]\n     * @psalm-return array<string, string>\n     */\n    public function getFallbackDirs()\n    {\n        return $this->fallbackDirsPsr0;\n    }\n\n    /**\n     * @return array[]\n     * @psalm-return array<string, string>\n     */\n    public function getFallbackDirsPsr4()\n    {\n        return $this->fallbackDirsPsr4;\n    }\n\n    /**\n     * @return string[] Array of classname => path\n     * @psalm-return array<string, string>\n     */\n    public function getClassMap()\n    {\n        return $this->classMap;\n    }\n\n    /**\n     * @param string[] $classMap Class to filename map\n     * @psalm-param array<string, string> $classMap\n     *\n     * @return void\n     */\n    public function addClassMap(array $classMap)\n    {\n        if ($this->classMap) {\n            $this->classMap = array_merge($this->classMap, $classMap);\n        } else {\n            $this->classMap = $classMap;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix, either\n     * appending or prepending to the ones previously set for this prefix.\n     *\n     * @param string          $prefix  The prefix\n     * @param string[]|string $paths   The PSR-0 root directories\n     * @param bool            $prepend Whether to prepend the directories\n     *\n     * @return void\n     */\n    public function add($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            if ($prepend) {\n                $this->fallbackDirsPsr0 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr0\n                );\n            } else {\n                $this->fallbackDirsPsr0 = array_merge(\n                    $this->fallbackDirsPsr0,\n                    (array) $paths\n                );\n            }\n\n            return;\n        }\n\n        $first = $prefix[0];\n        if (!isset($this->prefixesPsr0[$first][$prefix])) {\n            $this->prefixesPsr0[$first][$prefix] = (array) $paths;\n\n            return;\n        }\n        if ($prepend) {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixesPsr0[$first][$prefix]\n            );\n        } else {\n            $this->prefixesPsr0[$first][$prefix] = array_merge(\n                $this->prefixesPsr0[$first][$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace, either\n     * appending or prepending to the ones previously set for this namespace.\n     *\n     * @param string          $prefix  The prefix/namespace, with trailing '\\\\'\n     * @param string[]|string $paths   The PSR-4 base directories\n     * @param bool            $prepend Whether to prepend the directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     */\n    public function addPsr4($prefix, $paths, $prepend = false)\n    {\n        if (!$prefix) {\n            // Register directories for the root namespace.\n            if ($prepend) {\n                $this->fallbackDirsPsr4 = array_merge(\n                    (array) $paths,\n                    $this->fallbackDirsPsr4\n                );\n            } else {\n                $this->fallbackDirsPsr4 = array_merge(\n                    $this->fallbackDirsPsr4,\n                    (array) $paths\n                );\n            }\n        } elseif (!isset($this->prefixDirsPsr4[$prefix])) {\n            // Register directories for a new namespace.\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        } elseif ($prepend) {\n            // Prepend directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                (array) $paths,\n                $this->prefixDirsPsr4[$prefix]\n            );\n        } else {\n            // Append directories for an already registered namespace.\n            $this->prefixDirsPsr4[$prefix] = array_merge(\n                $this->prefixDirsPsr4[$prefix],\n                (array) $paths\n            );\n        }\n    }\n\n    /**\n     * Registers a set of PSR-0 directories for a given prefix,\n     * replacing any others previously set for this prefix.\n     *\n     * @param string          $prefix The prefix\n     * @param string[]|string $paths  The PSR-0 base directories\n     *\n     * @return void\n     */\n    public function set($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr0 = (array) $paths;\n        } else {\n            $this->prefixesPsr0[$prefix[0]][$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Registers a set of PSR-4 directories for a given namespace,\n     * replacing any others previously set for this namespace.\n     *\n     * @param string          $prefix The prefix/namespace, with trailing '\\\\'\n     * @param string[]|string $paths  The PSR-4 base directories\n     *\n     * @throws \\InvalidArgumentException\n     *\n     * @return void\n     */\n    public function setPsr4($prefix, $paths)\n    {\n        if (!$prefix) {\n            $this->fallbackDirsPsr4 = (array) $paths;\n        } else {\n            $length = strlen($prefix);\n            if ('\\\\' !== $prefix[$length - 1]) {\n                throw new \\InvalidArgumentException(\"A non-empty PSR-4 prefix must end with a namespace separator.\");\n            }\n            $this->prefixLengthsPsr4[$prefix[0]][$prefix] = $length;\n            $this->prefixDirsPsr4[$prefix] = (array) $paths;\n        }\n    }\n\n    /**\n     * Turns on searching the include path for class files.\n     *\n     * @param bool $useIncludePath\n     *\n     * @return void\n     */\n    public function setUseIncludePath($useIncludePath)\n    {\n        $this->useIncludePath = $useIncludePath;\n    }\n\n    /**\n     * Can be used to check if the autoloader uses the include path to check\n     * for classes.\n     *\n     * @return bool\n     */\n    public function getUseIncludePath()\n    {\n        return $this->useIncludePath;\n    }\n\n    /**\n     * Turns off searching the prefix and fallback directories for classes\n     * that have not been registered with the class map.\n     *\n     * @param bool $classMapAuthoritative\n     *\n     * @return void\n     */\n    public function setClassMapAuthoritative($classMapAuthoritative)\n    {\n        $this->classMapAuthoritative = $classMapAuthoritative;\n    }\n\n    /**\n     * Should class lookup fail if not found in the current class map?\n     *\n     * @return bool\n     */\n    public function isClassMapAuthoritative()\n    {\n        return $this->classMapAuthoritative;\n    }\n\n    /**\n     * APCu prefix to use to cache found/not-found classes, if the extension is enabled.\n     *\n     * @param string|null $apcuPrefix\n     *\n     * @return void\n     */\n    public function setApcuPrefix($apcuPrefix)\n    {\n        $this->apcuPrefix = function_exists('apcu_fetch') && filter_var(ini_get('apc.enabled'), FILTER_VALIDATE_BOOLEAN) ? $apcuPrefix : null;\n    }\n\n    /**\n     * The APCu prefix in use, or null if APCu caching is not enabled.\n     *\n     * @return string|null\n     */\n    public function getApcuPrefix()\n    {\n        return $this->apcuPrefix;\n    }\n\n    /**\n     * Registers this instance as an autoloader.\n     *\n     * @param bool $prepend Whether to prepend the autoloader or not\n     *\n     * @return void\n     */\n    public function register($prepend = false)\n    {\n        spl_autoload_register(array($this, 'loadClass'), true, $prepend);\n\n        if (null === $this->vendorDir) {\n            return;\n        }\n\n        if ($prepend) {\n            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;\n        } else {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n            self::$registeredLoaders[$this->vendorDir] = $this;\n        }\n    }\n\n    /**\n     * Unregisters this instance as an autoloader.\n     *\n     * @return void\n     */\n    public function unregister()\n    {\n        spl_autoload_unregister(array($this, 'loadClass'));\n\n        if (null !== $this->vendorDir) {\n            unset(self::$registeredLoaders[$this->vendorDir]);\n        }\n    }\n\n    /**\n     * Loads the given class or interface.\n     *\n     * @param  string    $class The name of the class\n     * @return true|null True if loaded, null otherwise\n     */\n    public function loadClass($class)\n    {\n        if ($file = $this->findFile($class)) {\n            includeFile($file);\n\n            return true;\n        }\n\n        return null;\n    }\n\n    /**\n     * Finds the path to the file where the class is defined.\n     *\n     * @param string $class The name of the class\n     *\n     * @return string|false The path if found, false otherwise\n     */\n    public function findFile($class)\n    {\n        // class map lookup\n        if (isset($this->classMap[$class])) {\n            return $this->classMap[$class];\n        }\n        if ($this->classMapAuthoritative || isset($this->missingClasses[$class])) {\n            return false;\n        }\n        if (null !== $this->apcuPrefix) {\n            $file = apcu_fetch($this->apcuPrefix.$class, $hit);\n            if ($hit) {\n                return $file;\n            }\n        }\n\n        $file = $this->findFileWithExtension($class, '.php');\n\n        // Search for Hack files if we are running on HHVM\n        if (false === $file && defined('HHVM_VERSION')) {\n            $file = $this->findFileWithExtension($class, '.hh');\n        }\n\n        if (null !== $this->apcuPrefix) {\n            apcu_add($this->apcuPrefix.$class, $file);\n        }\n\n        if (false === $file) {\n            // Remember that this class does not exist.\n            $this->missingClasses[$class] = true;\n        }\n\n        return $file;\n    }\n\n    /**\n     * Returns the currently registered loaders indexed by their corresponding vendor directories.\n     *\n     * @return self[]\n     */\n    public static function getRegisteredLoaders()\n    {\n        return self::$registeredLoaders;\n    }\n\n    /**\n     * @param  string       $class\n     * @param  string       $ext\n     * @return string|false\n     */\n    private function findFileWithExtension($class, $ext)\n    {\n        // PSR-4 lookup\n        $logicalPathPsr4 = strtr($class, '\\\\', DIRECTORY_SEPARATOR) . $ext;\n\n        $first = $class[0];\n        if (isset($this->prefixLengthsPsr4[$first])) {\n            $subPath = $class;\n            while (false !== $lastPos = strrpos($subPath, '\\\\')) {\n                $subPath = substr($subPath, 0, $lastPos);\n                $search = $subPath . '\\\\';\n                if (isset($this->prefixDirsPsr4[$search])) {\n                    $pathEnd = DIRECTORY_SEPARATOR . substr($logicalPathPsr4, $lastPos + 1);\n                    foreach ($this->prefixDirsPsr4[$search] as $dir) {\n                        if (file_exists($file = $dir . $pathEnd)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-4 fallback dirs\n        foreach ($this->fallbackDirsPsr4 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr4)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 lookup\n        if (false !== $pos = strrpos($class, '\\\\')) {\n            // namespaced class name\n            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)\n                . strtr(substr($logicalPathPsr4, $pos + 1), '_', DIRECTORY_SEPARATOR);\n        } else {\n            // PEAR-like class name\n            $logicalPathPsr0 = strtr($class, '_', DIRECTORY_SEPARATOR) . $ext;\n        }\n\n        if (isset($this->prefixesPsr0[$first])) {\n            foreach ($this->prefixesPsr0[$first] as $prefix => $dirs) {\n                if (0 === strpos($class, $prefix)) {\n                    foreach ($dirs as $dir) {\n                        if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                            return $file;\n                        }\n                    }\n                }\n            }\n        }\n\n        // PSR-0 fallback dirs\n        foreach ($this->fallbackDirsPsr0 as $dir) {\n            if (file_exists($file = $dir . DIRECTORY_SEPARATOR . $logicalPathPsr0)) {\n                return $file;\n            }\n        }\n\n        // PSR-0 include paths.\n        if ($this->useIncludePath && $file = stream_resolve_include_path($logicalPathPsr0)) {\n            return $file;\n        }\n\n        return false;\n    }\n}\n\n/**\n * Scope isolated include.\n *\n * Prevents access to $this/self from included files.\n *\n * @param  string $file\n * @return void\n * @private\n */\nfunction includeFile($file)\n{\n    include $file;\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/autoload_files.php","ext":"php","size":514,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_files.php @generated by Composer\n\n$vendorDir = dirname(__DIR__);\n$baseDir = dirname($vendorDir);\n\nreturn array(\n    'da5f6548f070d3d306f90eee42dd5de6' => $vendorDir . '/donatj/phpuseragentparser/src/UserAgentParser.php',\n    'bcb90d312f16e4ff52a76c5aa3f98ae0' => $vendorDir . '/cmb2/cmb2/init.php',\n    '65bb6728e4ea5a6bfba27700e81f7a00' => $baseDir . '/includes/template-tags.php',\n    '49628becc29116377284b725833a0b5a' => $vendorDir . '/woocommerce/action-scheduler/action-scheduler.php',\n);\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/autoload_static.php","ext":"php","size":44283,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_static.php @generated by Composer\n\nnamespace Composer\\Autoload;\n\nclass ComposerStaticInite0da7526f14e2b3495b4ae1c6b762524\n{\n    public static $files = array (\n        'da5f6548f070d3d306f90eee42dd5de6' => __DIR__ . '/..' . '/donatj/phpuseragentparser/src/UserAgentParser.php',\n        'bcb90d312f16e4ff52a76c5aa3f98ae0' => __DIR__ . '/..' . '/cmb2/cmb2/init.php',\n        '65bb6728e4ea5a6bfba27700e81f7a00' => __DIR__ . '/../..' . '/includes/template-tags.php',\n        '49628becc29116377284b725833a0b5a' => __DIR__ . '/..' . '/woocommerce/action-scheduler/action-scheduler.php',\n    );\n\n    public static $prefixLengthsPsr4 = array (\n        'd' => \n        array (\n            'donatj\\\\UserAgent\\\\' => 17,\n        ),\n        'W' => \n        array (\n            'WPMedia\\\\Mixpanel\\\\' => 17,\n        ),\n        'M' => \n        array (\n            'MyThemeShop\\\\Helpers\\\\' => 20,\n        ),\n    );\n\n    public static $prefixDirsPsr4 = array (\n        'donatj\\\\UserAgent\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/donatj/phpuseragentparser/src/UserAgent',\n        ),\n        'WPMedia\\\\Mixpanel\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src',\n        ),\n        'MyThemeShop\\\\Helpers\\\\' => \n        array (\n            0 => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src',\n        ),\n    );\n\n    public static $classMap = array (\n        'Composer\\\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',\n        'MyThemeShop\\\\Admin\\\\List_Table' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/admin/class-list-table.php',\n        'MyThemeShop\\\\Admin\\\\Page' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/admin/class-page.php',\n        'MyThemeShop\\\\Database\\\\Clauses' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-clauses.php',\n        'MyThemeShop\\\\Database\\\\Database' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-database.php',\n        'MyThemeShop\\\\Database\\\\Escape' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-escape.php',\n        'MyThemeShop\\\\Database\\\\GroupBy' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-groupby.php',\n        'MyThemeShop\\\\Database\\\\Joins' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-joins.php',\n        'MyThemeShop\\\\Database\\\\OrderBy' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-orderby.php',\n        'MyThemeShop\\\\Database\\\\Query_Builder' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-query-builder.php',\n        'MyThemeShop\\\\Database\\\\Select' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-select.php',\n        'MyThemeShop\\\\Database\\\\Translate' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-translate.php',\n        'MyThemeShop\\\\Database\\\\Where' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/database/class-where.php',\n        'MyThemeShop\\\\Helpers\\\\Arr' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-arr.php',\n        'MyThemeShop\\\\Helpers\\\\Attachment' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-attachment.php',\n        'MyThemeShop\\\\Helpers\\\\Conditional' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-conditional.php',\n        'MyThemeShop\\\\Helpers\\\\DB' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-db.php',\n        'MyThemeShop\\\\Helpers\\\\HTML' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-html.php',\n        'MyThemeShop\\\\Helpers\\\\Param' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-param.php',\n        'MyThemeShop\\\\Helpers\\\\Str' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-str.php',\n        'MyThemeShop\\\\Helpers\\\\Url' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-url.php',\n        'MyThemeShop\\\\Helpers\\\\WordPress' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/helpers/class-wordpress.php',\n        'MyThemeShop\\\\Json_Manager' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/class-json-manager.php',\n        'MyThemeShop\\\\Notification' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/class-notification.php',\n        'MyThemeShop\\\\Notification_Center' => __DIR__ . '/..' . '/mythemeshop/wordpress-helpers/src/class-notification-center.php',\n        'RankMath\\\\ACF\\\\ACF' => __DIR__ . '/../..' . '/includes/modules/acf/class-acf.php',\n        'RankMath\\\\Admin\\\\Admin' => __DIR__ . '/../..' . '/includes/admin/class-admin.php',\n        'RankMath\\\\Admin\\\\Admin_Breadcrumbs' => __DIR__ . '/../..' . '/includes/admin/class-admin-breadcrumbs.php',\n        'RankMath\\\\Admin\\\\Admin_Dashboard_Nav' => __DIR__ . '/../..' . '/includes/admin/class-admin-dashboard-nav.php',\n        'RankMath\\\\Admin\\\\Admin_Header' => __DIR__ . '/../..' . '/includes/admin/class-admin-header.php',\n        'RankMath\\\\Admin\\\\Admin_Helper' => __DIR__ . '/../..' . '/includes/admin/class-admin-helper.php',\n        'RankMath\\\\Admin\\\\Admin_Init' => __DIR__ . '/../..' . '/includes/admin/class-admin-init.php',\n        'RankMath\\\\Admin\\\\Admin_Menu' => __DIR__ . '/../..' . '/includes/admin/class-admin-menu.php',\n        'RankMath\\\\Admin\\\\Api' => __DIR__ . '/../..' . '/includes/admin/class-api.php',\n        'RankMath\\\\Admin\\\\Ask_Review' => __DIR__ . '/../..' . '/includes/admin/class-ask-review.php',\n        'RankMath\\\\Admin\\\\Assets' => __DIR__ . '/../..' . '/includes/admin/class-assets.php',\n        'RankMath\\\\Admin\\\\Bulk_Actions' => __DIR__ . '/../..' . '/includes/admin/class-bulk-actions.php',\n        'RankMath\\\\Admin\\\\CMB2_Fields' => __DIR__ . '/../..' . '/includes/admin/class-cmb2-fields.php',\n        'RankMath\\\\Admin\\\\CMB2_Options' => __DIR__ . '/../..' . '/includes/admin/class-cmb2-options.php',\n        'RankMath\\\\Admin\\\\Database\\\\Clauses' => __DIR__ . '/../..' . '/includes/admin/database/class-clauses.php',\n        'RankMath\\\\Admin\\\\Database\\\\Database' => __DIR__ . '/../..' . '/includes/admin/database/class-database.php',\n        'RankMath\\\\Admin\\\\Database\\\\Escape' => __DIR__ . '/../..' . '/includes/admin/database/class-escape.php',\n        'RankMath\\\\Admin\\\\Database\\\\GroupBy' => __DIR__ . '/../..' . '/includes/admin/database/class-groupby.php',\n        'RankMath\\\\Admin\\\\Database\\\\Joins' => __DIR__ . '/../..' . '/includes/admin/database/class-joins.php',\n        'RankMath\\\\Admin\\\\Database\\\\OrderBy' => __DIR__ . '/../..' . '/includes/admin/database/class-orderby.php',\n        'RankMath\\\\Admin\\\\Database\\\\Query_Builder' => __DIR__ . '/../..' . '/includes/admin/database/class-query-builder.php',\n        'RankMath\\\\Admin\\\\Database\\\\Select' => __DIR__ . '/../..' . '/includes/admin/database/class-select.php',\n        'RankMath\\\\Admin\\\\Database\\\\Translate' => __DIR__ . '/../..' . '/includes/admin/database/class-translate.php',\n        'RankMath\\\\Admin\\\\Database\\\\Where' => __DIR__ . '/../..' . '/includes/admin/database/class-where.php',\n        'RankMath\\\\Admin\\\\Import_Export' => __DIR__ . '/../..' . '/includes/admin/class-import-export.php',\n        'RankMath\\\\Admin\\\\Importers\\\\AIOSEO' => __DIR__ . '/../..' . '/includes/admin/importers/class-aioseo.php',\n        'RankMath\\\\Admin\\\\Importers\\\\AIO_Rich_Snippet' => __DIR__ . '/../..' . '/includes/admin/importers/class-aio-rich-snippet.php',\n        'RankMath\\\\Admin\\\\Importers\\\\Detector' => __DIR__ . '/../..' . '/includes/admin/importers/class-detector.php',\n        'RankMath\\\\Admin\\\\Importers\\\\Plugin_Importer' => __DIR__ . '/../..' . '/includes/admin/importers/class-plugin-importer.php',\n        'RankMath\\\\Admin\\\\Importers\\\\Redirections' => __DIR__ . '/../..' . '/includes/admin/importers/class-redirections.php',\n        'RankMath\\\\Admin\\\\Importers\\\\SEOPress' => __DIR__ . '/../..' . '/includes/admin/importers/class-seopress.php',\n        'RankMath\\\\Admin\\\\Importers\\\\Status' => __DIR__ . '/../..' . '/includes/admin/importers/class-status.php',\n        'RankMath\\\\Admin\\\\Importers\\\\WP_Schema_Pro' => __DIR__ . '/../..' . '/includes/admin/importers/class-wp-schema-pro.php',\n        'RankMath\\\\Admin\\\\Importers\\\\Yoast' => __DIR__ . '/../..' . '/includes/admin/importers/class-yoast.php',\n        'RankMath\\\\Admin\\\\List_Table' => __DIR__ . '/../..' . '/includes/admin/class-list-table.php',\n        'RankMath\\\\Admin\\\\Lock_Modified_Date' => __DIR__ . '/../..' . '/includes/admin/class-lock-modified-date.php',\n        'RankMath\\\\Admin\\\\Metabox\\\\IScreen' => __DIR__ . '/../..' . '/includes/admin/metabox/interface-screen.php',\n        'RankMath\\\\Admin\\\\Metabox\\\\Metabox' => __DIR__ . '/../..' . '/includes/admin/metabox/class-metabox.php',\n        'RankMath\\\\Admin\\\\Metabox\\\\Post_Screen' => __DIR__ . '/../..' . '/includes/admin/metabox/class-post-screen.php',\n        'RankMath\\\\Admin\\\\Metabox\\\\Screen' => __DIR__ . '/../..' . '/includes/admin/metabox/class-screen.php',\n        'RankMath\\\\Admin\\\\Metabox\\\\Taxonomy_Screen' => __DIR__ . '/../..' . '/includes/admin/metabox/class-taxonomy-screen.php',\n        'RankMath\\\\Admin\\\\Metabox\\\\User_Screen' => __DIR__ . '/../..' . '/includes/admin/metabox/class-user-screen.php',\n        'RankMath\\\\Admin\\\\Notices' => __DIR__ . '/../..' . '/includes/admin/class-notices.php',\n        'RankMath\\\\Admin\\\\Notifications\\\\Notification' => __DIR__ . '/../..' . '/includes/admin/notifications/class-notification.php',\n        'RankMath\\\\Admin\\\\Notifications\\\\Notification_Center' => __DIR__ . '/../..' . '/includes/admin/notifications/class-notification-center.php',\n        'RankMath\\\\Admin\\\\Option_Center' => __DIR__ . '/../..' . '/includes/admin/class-option-center.php',\n        'RankMath\\\\Admin\\\\Options' => __DIR__ . '/../..' . '/includes/admin/class-options.php',\n        'RankMath\\\\Admin\\\\Page' => __DIR__ . '/../..' . '/includes/admin/class-page.php',\n        'RankMath\\\\Admin\\\\Post_Columns' => __DIR__ . '/../..' . '/includes/admin/class-post-columns.php',\n        'RankMath\\\\Admin\\\\Post_Filters' => __DIR__ . '/../..' . '/includes/admin/class-post-filters.php',\n        'RankMath\\\\Admin\\\\Pro_Notice' => __DIR__ . '/../..' . '/includes/admin/class-pro-notice.php',\n        'RankMath\\\\Admin\\\\Register_Options_Page' => __DIR__ . '/../..' . '/includes/admin/class-register-options-page.php',\n        'RankMath\\\\Admin\\\\Registration' => __DIR__ . '/../..' . '/includes/admin/class-registration.php',\n        'RankMath\\\\Admin\\\\Sanitize_Settings' => __DIR__ . '/../..' . '/includes/admin/class-sanitize-settings.php',\n        'RankMath\\\\Admin\\\\Setup_Wizard' => __DIR__ . '/../..' . '/includes/admin/class-setup-wizard.php',\n        'RankMath\\\\Admin\\\\Watcher' => __DIR__ . '/../..' . '/includes/admin/watcher/class-watcher.php',\n        'RankMath\\\\Admin_Bar_Menu' => __DIR__ . '/../..' . '/includes/admin/class-admin-bar-menu.php',\n        'RankMath\\\\Analytics\\\\AJAX' => __DIR__ . '/../..' . '/includes/modules/analytics/class-ajax.php',\n        'RankMath\\\\Analytics\\\\Analytics' => __DIR__ . '/../..' . '/includes/modules/analytics/class-analytics.php',\n        'RankMath\\\\Analytics\\\\Analytics_Common' => __DIR__ . '/../..' . '/includes/modules/analytics/class-analytics-common.php',\n        'RankMath\\\\Analytics\\\\Analytics_Stats' => __DIR__ . '/../..' . '/includes/modules/analytics/class-analytics-stats.php',\n        'RankMath\\\\Analytics\\\\DB' => __DIR__ . '/../..' . '/includes/modules/analytics/class-db.php',\n        'RankMath\\\\Analytics\\\\Email_Reports' => __DIR__ . '/../..' . '/includes/modules/analytics/class-email-reports.php',\n        'RankMath\\\\Analytics\\\\GTag' => __DIR__ . '/../..' . '/includes/modules/analytics/class-gtag.php',\n        'RankMath\\\\Analytics\\\\Keywords' => __DIR__ . '/../..' . '/includes/modules/analytics/class-keywords.php',\n        'RankMath\\\\Analytics\\\\Objects' => __DIR__ . '/../..' . '/includes/modules/analytics/class-objects.php',\n        'RankMath\\\\Analytics\\\\Posts' => __DIR__ . '/../..' . '/includes/modules/analytics/class-posts.php',\n        'RankMath\\\\Analytics\\\\Rest' => __DIR__ . '/../..' . '/includes/modules/analytics/rest/class-rest.php',\n        'RankMath\\\\Analytics\\\\Stats' => __DIR__ . '/../..' . '/includes/modules/analytics/class-stats.php',\n        'RankMath\\\\Analytics\\\\Summary' => __DIR__ . '/../..' . '/includes/modules/analytics/class-summary.php',\n        'RankMath\\\\Analytics\\\\Url_Inspection' => __DIR__ . '/../..' . '/includes/modules/analytics/class-url-inspection.php',\n        'RankMath\\\\Analytics\\\\Watcher' => __DIR__ . '/../..' . '/includes/modules/analytics/class-watcher.php',\n        'RankMath\\\\Analytics\\\\Workflow\\\\Base' => __DIR__ . '/../..' . '/includes/modules/analytics/workflows/class-base.php',\n        'RankMath\\\\Analytics\\\\Workflow\\\\Console' => __DIR__ . '/../..' . '/includes/modules/analytics/workflows/class-console.php',\n        'RankMath\\\\Analytics\\\\Workflow\\\\Inspections' => __DIR__ . '/../..' . '/includes/modules/analytics/workflows/class-inspections.php',\n        'RankMath\\\\Analytics\\\\Workflow\\\\Jobs' => __DIR__ . '/../..' . '/includes/modules/analytics/workflows/class-jobs.php',\n        'RankMath\\\\Analytics\\\\Workflow\\\\OAuth' => __DIR__ . '/../..' . '/includes/modules/analytics/workflows/class-oauth.php',\n        'RankMath\\\\Analytics\\\\Workflow\\\\Objects' => __DIR__ . '/../..' . '/includes/modules/analytics/workflows/class-objects.php',\n        'RankMath\\\\Analytics\\\\Workflow\\\\Workflow' => __DIR__ . '/../..' . '/includes/modules/analytics/workflows/class-workflow.php',\n        'RankMath\\\\Auto_Updater' => __DIR__ . '/../..' . '/includes/class-auto-updater.php',\n        'RankMath\\\\Beta_Optin' => __DIR__ . '/../..' . '/includes/modules/version-control/class-beta-optin.php',\n        'RankMath\\\\BuddyPress\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/buddypress/class-admin.php',\n        'RankMath\\\\BuddyPress\\\\BuddyPress' => __DIR__ . '/../..' . '/includes/modules/buddypress/class-buddypress.php',\n        'RankMath\\\\CLI\\\\Commands' => __DIR__ . '/../..' . '/includes/cli/class-commands.php',\n        'RankMath\\\\CMB2' => __DIR__ . '/../..' . '/includes/class-cmb2.php',\n        'RankMath\\\\Common' => __DIR__ . '/../..' . '/includes/class-common.php',\n        'RankMath\\\\Compatibility' => __DIR__ . '/../..' . '/includes/class-compatibility.php',\n        'RankMath\\\\ContentAI\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-admin.php',\n        'RankMath\\\\ContentAI\\\\Assets' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-assets.php',\n        'RankMath\\\\ContentAI\\\\Block_Command' => __DIR__ . '/../..' . '/includes/modules/content-ai/blocks/command/class-block-command.php',\n        'RankMath\\\\ContentAI\\\\Bulk_Actions' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-bulk-actions.php',\n        'RankMath\\\\ContentAI\\\\Bulk_Edit_SEO_Meta' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-bulk-edit-seo-meta.php',\n        'RankMath\\\\ContentAI\\\\Bulk_Image_Alt' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-bulk-image-alt.php',\n        'RankMath\\\\ContentAI\\\\Content_AI' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-content-ai.php',\n        'RankMath\\\\ContentAI\\\\Content_AI_Page' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-content-ai-page.php',\n        'RankMath\\\\ContentAI\\\\Event_Scheduler' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-event-scheduler.php',\n        'RankMath\\\\ContentAI\\\\Rest' => __DIR__ . '/../..' . '/includes/modules/content-ai/class-rest.php',\n        'RankMath\\\\Dashboard_Widget' => __DIR__ . '/../..' . '/includes/admin/class-dashboard-widget.php',\n        'RankMath\\\\Data_Encryption' => __DIR__ . '/../..' . '/includes/class-data-encryption.php',\n        'RankMath\\\\Defaults' => __DIR__ . '/../..' . '/includes/class-defaults.php',\n        'RankMath\\\\Divi\\\\Divi' => __DIR__ . '/../..' . '/includes/3rdparty/divi/class-divi.php',\n        'RankMath\\\\Divi\\\\Divi_Admin' => __DIR__ . '/../..' . '/includes/3rdparty/divi/class-divi-admin.php',\n        'RankMath\\\\Elementor\\\\Elementor' => __DIR__ . '/../..' . '/includes/3rdparty/elementor/class-elementor.php',\n        'RankMath\\\\Frontend\\\\Breadcrumbs' => __DIR__ . '/../..' . '/includes/frontend/class-breadcrumbs.php',\n        'RankMath\\\\Frontend\\\\Comments' => __DIR__ . '/../..' . '/includes/frontend/class-comments.php',\n        'RankMath\\\\Frontend\\\\Frontend' => __DIR__ . '/../..' . '/includes/frontend/class-frontend.php',\n        'RankMath\\\\Frontend\\\\Head' => __DIR__ . '/../..' . '/includes/frontend/class-head.php',\n        'RankMath\\\\Frontend\\\\Link_Attributes' => __DIR__ . '/../..' . '/includes/frontend/class-link-attributes.php',\n        'RankMath\\\\Frontend\\\\Redirection' => __DIR__ . '/../..' . '/includes/frontend/class-redirection.php',\n        'RankMath\\\\Frontend\\\\Shortcodes' => __DIR__ . '/../..' . '/includes/frontend/class-shortcodes.php',\n        'RankMath\\\\Frontend_SEO_Score' => __DIR__ . '/../..' . '/includes/class-frontend-seo-score.php',\n        'RankMath\\\\Google\\\\Analytics' => __DIR__ . '/../..' . '/includes/modules/analytics/google/class-analytics.php',\n        'RankMath\\\\Google\\\\Api' => __DIR__ . '/../..' . '/includes/modules/analytics/google/class-api.php',\n        'RankMath\\\\Google\\\\Authentication' => __DIR__ . '/../..' . '/includes/modules/analytics/google/class-authentication.php',\n        'RankMath\\\\Google\\\\Console' => __DIR__ . '/../..' . '/includes/modules/analytics/google/class-console.php',\n        'RankMath\\\\Google\\\\Permissions' => __DIR__ . '/../..' . '/includes/modules/analytics/google/class-permissions.php',\n        'RankMath\\\\Google\\\\Request' => __DIR__ . '/../..' . '/includes/modules/analytics/google/class-request.php',\n        'RankMath\\\\Google\\\\Url_Inspection' => __DIR__ . '/../..' . '/includes/modules/analytics/google/class-url-inspection.php',\n        'RankMath\\\\Helper' => __DIR__ . '/../..' . '/includes/class-helper.php',\n        'RankMath\\\\Helpers\\\\Analytics' => __DIR__ . '/../..' . '/includes/helpers/class-analytics.php',\n        'RankMath\\\\Helpers\\\\Api' => __DIR__ . '/../..' . '/includes/helpers/class-api.php',\n        'RankMath\\\\Helpers\\\\Arr' => __DIR__ . '/../..' . '/includes/helpers/class-arr.php',\n        'RankMath\\\\Helpers\\\\Attachment' => __DIR__ . '/../..' . '/includes/helpers/class-attachment.php',\n        'RankMath\\\\Helpers\\\\Choices' => __DIR__ . '/../..' . '/includes/helpers/class-choices.php',\n        'RankMath\\\\Helpers\\\\Conditional' => __DIR__ . '/../..' . '/includes/helpers/class-conditional.php',\n        'RankMath\\\\Helpers\\\\Content_AI' => __DIR__ . '/../..' . '/includes/helpers/class-content-ai.php',\n        'RankMath\\\\Helpers\\\\DB' => __DIR__ . '/../..' . '/includes/helpers/class-db.php',\n        'RankMath\\\\Helpers\\\\Editor' => __DIR__ . '/../..' . '/includes/helpers/class-editor.php',\n        'RankMath\\\\Helpers\\\\HTML' => __DIR__ . '/../..' . '/includes/helpers/class-html.php',\n        'RankMath\\\\Helpers\\\\Locale' => __DIR__ . '/../..' . '/includes/helpers/class-locale.php',\n        'RankMath\\\\Helpers\\\\Options' => __DIR__ . '/../..' . '/includes/helpers/class-options.php',\n        'RankMath\\\\Helpers\\\\Param' => __DIR__ . '/../..' . '/includes/helpers/class-param.php',\n        'RankMath\\\\Helpers\\\\Post_Type' => __DIR__ . '/../..' . '/includes/helpers/class-post-type.php',\n        'RankMath\\\\Helpers\\\\Schedule' => __DIR__ . '/../..' . '/includes/helpers/class-schedule.php',\n        'RankMath\\\\Helpers\\\\Schema' => __DIR__ . '/../..' . '/includes/helpers/class-schema.php',\n        'RankMath\\\\Helpers\\\\Security' => __DIR__ . '/../..' . '/includes/helpers/class-security.php',\n        'RankMath\\\\Helpers\\\\Sitepress' => __DIR__ . '/../..' . '/includes/helpers/class-sitepress.php',\n        'RankMath\\\\Helpers\\\\Str' => __DIR__ . '/../..' . '/includes/helpers/class-str.php',\n        'RankMath\\\\Helpers\\\\Taxonomy' => __DIR__ . '/../..' . '/includes/helpers/class-taxonomy.php',\n        'RankMath\\\\Helpers\\\\Url' => __DIR__ . '/../..' . '/includes/helpers/class-url.php',\n        'RankMath\\\\Helpers\\\\WordPress' => __DIR__ . '/../..' . '/includes/helpers/class-wordpress.php',\n        'RankMath\\\\Image_Seo\\\\Add_Attributes' => __DIR__ . '/../..' . '/includes/modules/image-seo/class-add-attributes.php',\n        'RankMath\\\\Image_Seo\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/image-seo/class-admin.php',\n        'RankMath\\\\Image_Seo\\\\Image_Seo' => __DIR__ . '/../..' . '/includes/modules/image-seo/class-image-seo.php',\n        'RankMath\\\\Installer' => __DIR__ . '/../..' . '/includes/class-installer.php',\n        'RankMath\\\\Instant_Indexing\\\\Api' => __DIR__ . '/../..' . '/includes/modules/instant-indexing/class-api.php',\n        'RankMath\\\\Instant_Indexing\\\\Instant_Indexing' => __DIR__ . '/../..' . '/includes/modules/instant-indexing/class-instant-indexing.php',\n        'RankMath\\\\Instant_Indexing\\\\Rest' => __DIR__ . '/../..' . '/includes/modules/instant-indexing/class-rest.php',\n        'RankMath\\\\Json_Manager' => __DIR__ . '/../..' . '/includes/class-json-manager.php',\n        'RankMath\\\\KB' => __DIR__ . '/../..' . '/includes/class-kb.php',\n        'RankMath\\\\LLMS\\\\LLMS_Txt' => __DIR__ . '/../..' . '/includes/modules/llms/class-llms-txt.php',\n        'RankMath\\\\Links\\\\ContentProcessor' => __DIR__ . '/../..' . '/includes/modules/links/class-contentprocessor.php',\n        'RankMath\\\\Links\\\\Link' => __DIR__ . '/../..' . '/includes/modules/links/class-link.php',\n        'RankMath\\\\Links\\\\Links' => __DIR__ . '/../..' . '/includes/modules/links/class-links.php',\n        'RankMath\\\\Links\\\\Storage' => __DIR__ . '/../..' . '/includes/modules/links/class-storage.php',\n        'RankMath\\\\Local_Seo\\\\KML_File' => __DIR__ . '/../..' . '/includes/modules/local-seo/class-kml-file.php',\n        'RankMath\\\\Local_Seo\\\\Local_Seo' => __DIR__ . '/../..' . '/includes/modules/local-seo/class-local-seo.php',\n        'RankMath\\\\Metadata' => __DIR__ . '/../..' . '/includes/class-metadata.php',\n        'RankMath\\\\Module\\\\Base' => __DIR__ . '/../..' . '/includes/module/class-base.php',\n        'RankMath\\\\Module\\\\Manager' => __DIR__ . '/../..' . '/includes/module/class-manager.php',\n        'RankMath\\\\Module\\\\Module' => __DIR__ . '/../..' . '/includes/module/class-module.php',\n        'RankMath\\\\Monitor\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/404-monitor/class-admin.php',\n        'RankMath\\\\Monitor\\\\DB' => __DIR__ . '/../..' . '/includes/modules/404-monitor/class-db.php',\n        'RankMath\\\\Monitor\\\\Monitor' => __DIR__ . '/../..' . '/includes/modules/404-monitor/class-monitor.php',\n        'RankMath\\\\Monitor\\\\Table' => __DIR__ . '/../..' . '/includes/modules/404-monitor/class-table.php',\n        'RankMath\\\\OpenGraph\\\\Facebook' => __DIR__ . '/../..' . '/includes/opengraph/class-facebook.php',\n        'RankMath\\\\OpenGraph\\\\Facebook_Locale' => __DIR__ . '/../..' . '/includes/opengraph/class-facebook-locale.php',\n        'RankMath\\\\OpenGraph\\\\Image' => __DIR__ . '/../..' . '/includes/opengraph/class-image.php',\n        'RankMath\\\\OpenGraph\\\\OpenGraph' => __DIR__ . '/../..' . '/includes/opengraph/class-opengraph.php',\n        'RankMath\\\\OpenGraph\\\\Slack' => __DIR__ . '/../..' . '/includes/opengraph/class-slack.php',\n        'RankMath\\\\OpenGraph\\\\Twitter' => __DIR__ . '/../..' . '/includes/opengraph/class-twitter.php',\n        'RankMath\\\\Paper\\\\Archive' => __DIR__ . '/../..' . '/includes/frontend/paper/class-archive.php',\n        'RankMath\\\\Paper\\\\Author' => __DIR__ . '/../..' . '/includes/frontend/paper/class-author.php',\n        'RankMath\\\\Paper\\\\BP_Group' => __DIR__ . '/../..' . '/includes/modules/buddypress/paper/class-bp-group.php',\n        'RankMath\\\\Paper\\\\BP_User' => __DIR__ . '/../..' . '/includes/modules/buddypress/paper/class-bp-user.php',\n        'RankMath\\\\Paper\\\\Blog' => __DIR__ . '/../..' . '/includes/frontend/paper/class-blog.php',\n        'RankMath\\\\Paper\\\\Date' => __DIR__ . '/../..' . '/includes/frontend/paper/class-date.php',\n        'RankMath\\\\Paper\\\\Error_404' => __DIR__ . '/../..' . '/includes/frontend/paper/class-error-404.php',\n        'RankMath\\\\Paper\\\\IPaper' => __DIR__ . '/../..' . '/includes/frontend/paper/interface-paper.php',\n        'RankMath\\\\Paper\\\\Misc' => __DIR__ . '/../..' . '/includes/frontend/paper/class-misc.php',\n        'RankMath\\\\Paper\\\\Paper' => __DIR__ . '/../..' . '/includes/frontend/paper/class-paper.php',\n        'RankMath\\\\Paper\\\\Search' => __DIR__ . '/../..' . '/includes/frontend/paper/class-search.php',\n        'RankMath\\\\Paper\\\\Shop' => __DIR__ . '/../..' . '/includes/frontend/paper/class-shop.php',\n        'RankMath\\\\Paper\\\\Singular' => __DIR__ . '/../..' . '/includes/frontend/paper/class-singular.php',\n        'RankMath\\\\Paper\\\\Taxonomy' => __DIR__ . '/../..' . '/includes/frontend/paper/class-taxonomy.php',\n        'RankMath\\\\Post' => __DIR__ . '/../..' . '/includes/class-post.php',\n        'RankMath\\\\Redirections\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/redirections/class-admin.php',\n        'RankMath\\\\Redirections\\\\Cache' => __DIR__ . '/../..' . '/includes/modules/redirections/class-cache.php',\n        'RankMath\\\\Redirections\\\\DB' => __DIR__ . '/../..' . '/includes/modules/redirections/class-db.php',\n        'RankMath\\\\Redirections\\\\Debugger' => __DIR__ . '/../..' . '/includes/modules/redirections/class-debugger.php',\n        'RankMath\\\\Redirections\\\\Export' => __DIR__ . '/../..' . '/includes/modules/redirections/class-export.php',\n        'RankMath\\\\Redirections\\\\Import_Export' => __DIR__ . '/../..' . '/includes/modules/redirections/class-import-export.php',\n        'RankMath\\\\Redirections\\\\Metabox' => __DIR__ . '/../..' . '/includes/modules/redirections/class-metabox.php',\n        'RankMath\\\\Redirections\\\\Redirection' => __DIR__ . '/../..' . '/includes/modules/redirections/class-redirection.php',\n        'RankMath\\\\Redirections\\\\Redirections' => __DIR__ . '/../..' . '/includes/modules/redirections/class-redirections.php',\n        'RankMath\\\\Redirections\\\\Redirector' => __DIR__ . '/../..' . '/includes/modules/redirections/class-redirector.php',\n        'RankMath\\\\Redirections\\\\Table' => __DIR__ . '/../..' . '/includes/modules/redirections/class-table.php',\n        'RankMath\\\\Redirections\\\\Watcher' => __DIR__ . '/../..' . '/includes/modules/redirections/class-watcher.php',\n        'RankMath\\\\Replace_Variables\\\\Advanced_Variables' => __DIR__ . '/../..' . '/includes/replace-variables/class-advanced-variables.php',\n        'RankMath\\\\Replace_Variables\\\\Author_Variables' => __DIR__ . '/../..' . '/includes/replace-variables/class-author-variables.php',\n        'RankMath\\\\Replace_Variables\\\\Base' => __DIR__ . '/../..' . '/includes/replace-variables/class-base.php',\n        'RankMath\\\\Replace_Variables\\\\Basic_Variables' => __DIR__ . '/../..' . '/includes/replace-variables/class-basic-variables.php',\n        'RankMath\\\\Replace_Variables\\\\Cache' => __DIR__ . '/../..' . '/includes/replace-variables/class-cache.php',\n        'RankMath\\\\Replace_Variables\\\\Manager' => __DIR__ . '/../..' . '/includes/replace-variables/class-manager.php',\n        'RankMath\\\\Replace_Variables\\\\Post_Variables' => __DIR__ . '/../..' . '/includes/replace-variables/class-post-variables.php',\n        'RankMath\\\\Replace_Variables\\\\Replacer' => __DIR__ . '/../..' . '/includes/replace-variables/class-replacer.php',\n        'RankMath\\\\Replace_Variables\\\\Term_Variables' => __DIR__ . '/../..' . '/includes/replace-variables/class-term-variables.php',\n        'RankMath\\\\Replace_Variables\\\\Variable' => __DIR__ . '/../..' . '/includes/replace-variables/class-variable.php',\n        'RankMath\\\\Rest\\\\Admin' => __DIR__ . '/../..' . '/includes/rest/class-admin.php',\n        'RankMath\\\\Rest\\\\Front' => __DIR__ . '/../..' . '/includes/rest/class-front.php',\n        'RankMath\\\\Rest\\\\Headless' => __DIR__ . '/../..' . '/includes/rest/class-headless.php',\n        'RankMath\\\\Rest\\\\Post' => __DIR__ . '/../..' . '/includes/rest/class-post.php',\n        'RankMath\\\\Rest\\\\Rest_Helper' => __DIR__ . '/../..' . '/includes/rest/class-rest-helper.php',\n        'RankMath\\\\Rest\\\\Sanitize' => __DIR__ . '/../..' . '/includes/rest/class-sanitize.php',\n        'RankMath\\\\Rest\\\\Setup_Wizard' => __DIR__ . '/../..' . '/includes/rest/class-setup-wizard.php',\n        'RankMath\\\\Rest\\\\Shared' => __DIR__ . '/../..' . '/includes/rest/class-shared.php',\n        'RankMath\\\\Rewrite' => __DIR__ . '/../..' . '/includes/class-rewrite.php',\n        'RankMath\\\\Robots_Txt' => __DIR__ . '/../..' . '/includes/modules/robots-txt/class-robots-txt.php',\n        'RankMath\\\\Role_Manager\\\\Capability_Manager' => __DIR__ . '/../..' . '/includes/modules/role-manager/class-capability-manager.php',\n        'RankMath\\\\Role_Manager\\\\Members' => __DIR__ . '/../..' . '/includes/modules/role-manager/class-members.php',\n        'RankMath\\\\Role_Manager\\\\Role_Manager' => __DIR__ . '/../..' . '/includes/modules/role-manager/class-role-manager.php',\n        'RankMath\\\\Role_Manager\\\\User_Role_Editor' => __DIR__ . '/../..' . '/includes/modules/role-manager/class-user-role-editor.php',\n        'RankMath\\\\Rollback_Version' => __DIR__ . '/../..' . '/includes/modules/version-control/class-rollback-version.php',\n        'RankMath\\\\Runner' => __DIR__ . '/../..' . '/includes/interface-runner.php',\n        'RankMath\\\\SEO_Analysis\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/seo-analysis/class-admin.php',\n        'RankMath\\\\SEO_Analysis\\\\Result' => __DIR__ . '/../..' . '/includes/modules/seo-analysis/class-result.php',\n        'RankMath\\\\SEO_Analysis\\\\SEO_Analysis' => __DIR__ . '/../..' . '/includes/modules/seo-analysis/class-seo-analysis.php',\n        'RankMath\\\\SEO_Analysis\\\\SEO_Analyzer' => __DIR__ . '/../..' . '/includes/modules/seo-analysis/class-seo-analyzer.php',\n        'RankMath\\\\Schema\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/schema/class-admin.php',\n        'RankMath\\\\Schema\\\\Article' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-article.php',\n        'RankMath\\\\Schema\\\\Author' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-author.php',\n        'RankMath\\\\Schema\\\\Block' => __DIR__ . '/../..' . '/includes/modules/schema/blocks/class-block.php',\n        'RankMath\\\\Schema\\\\Block_FAQ' => __DIR__ . '/../..' . '/includes/modules/schema/blocks/faq/class-block-faq.php',\n        'RankMath\\\\Schema\\\\Block_HowTo' => __DIR__ . '/../..' . '/includes/modules/schema/blocks/howto/class-block-howto.php',\n        'RankMath\\\\Schema\\\\Block_Parser' => __DIR__ . '/../..' . '/includes/modules/schema/blocks/class-block-parser.php',\n        'RankMath\\\\Schema\\\\Block_Schema' => __DIR__ . '/../..' . '/includes/modules/schema/blocks/schema/class-block-schema.php',\n        'RankMath\\\\Schema\\\\Block_TOC' => __DIR__ . '/../..' . '/includes/modules/schema/blocks/toc/class-block-toc.php',\n        'RankMath\\\\Schema\\\\Blocks' => __DIR__ . '/../..' . '/includes/modules/schema/class-blocks.php',\n        'RankMath\\\\Schema\\\\Blocks\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/schema/blocks/class-admin.php',\n        'RankMath\\\\Schema\\\\Breadcrumbs' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-breadcrumbs.php',\n        'RankMath\\\\Schema\\\\DB' => __DIR__ . '/../..' . '/includes/modules/schema/class-db.php',\n        'RankMath\\\\Schema\\\\Frontend' => __DIR__ . '/../..' . '/includes/modules/schema/class-frontend.php',\n        'RankMath\\\\Schema\\\\JsonLD' => __DIR__ . '/../..' . '/includes/modules/schema/class-jsonld.php',\n        'RankMath\\\\Schema\\\\Opengraph' => __DIR__ . '/../..' . '/includes/modules/schema/class-opengraph.php',\n        'RankMath\\\\Schema\\\\PrimaryImage' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-primaryimage.php',\n        'RankMath\\\\Schema\\\\Product' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-product.php',\n        'RankMath\\\\Schema\\\\Product_Edd' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-product-edd.php',\n        'RankMath\\\\Schema\\\\Product_WooCommerce' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-product-woocommerce.php',\n        'RankMath\\\\Schema\\\\Products_Page' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-products-page.php',\n        'RankMath\\\\Schema\\\\Publisher' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-publisher.php',\n        'RankMath\\\\Schema\\\\Schema' => __DIR__ . '/../..' . '/includes/modules/schema/class-schema.php',\n        'RankMath\\\\Schema\\\\Singular' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-singular.php',\n        'RankMath\\\\Schema\\\\Snippet' => __DIR__ . '/../..' . '/includes/modules/schema/interface-snippet.php',\n        'RankMath\\\\Schema\\\\Snippet_Shortcode' => __DIR__ . '/../..' . '/includes/modules/schema/class-snippet-shortcode.php',\n        'RankMath\\\\Schema\\\\WC_Attributes' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-wc-attributes.php',\n        'RankMath\\\\Schema\\\\Webpage' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-webpage.php',\n        'RankMath\\\\Schema\\\\Website' => __DIR__ . '/../..' . '/includes/modules/schema/snippets/class-website.php',\n        'RankMath\\\\Settings' => __DIR__ . '/../..' . '/includes/class-settings.php',\n        'RankMath\\\\Sitemap\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-admin.php',\n        'RankMath\\\\Sitemap\\\\Cache' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-cache.php',\n        'RankMath\\\\Sitemap\\\\Cache_Watcher' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-cache-watcher.php',\n        'RankMath\\\\Sitemap\\\\Classifier' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-classifier.php',\n        'RankMath\\\\Sitemap\\\\Generator' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-generator.php',\n        'RankMath\\\\Sitemap\\\\Html\\\\Authors' => __DIR__ . '/../..' . '/includes/modules/sitemap/html-sitemap/class-authors.php',\n        'RankMath\\\\Sitemap\\\\Html\\\\Posts' => __DIR__ . '/../..' . '/includes/modules/sitemap/html-sitemap/class-posts.php',\n        'RankMath\\\\Sitemap\\\\Html\\\\Sitemap' => __DIR__ . '/../..' . '/includes/modules/sitemap/html-sitemap/class-sitemap.php',\n        'RankMath\\\\Sitemap\\\\Html\\\\Terms' => __DIR__ . '/../..' . '/includes/modules/sitemap/html-sitemap/class-terms.php',\n        'RankMath\\\\Sitemap\\\\Image_Parser' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-image-parser.php',\n        'RankMath\\\\Sitemap\\\\Providers\\\\Author' => __DIR__ . '/../..' . '/includes/modules/sitemap/providers/class-author.php',\n        'RankMath\\\\Sitemap\\\\Providers\\\\Post_Type' => __DIR__ . '/../..' . '/includes/modules/sitemap/providers/class-post-type.php',\n        'RankMath\\\\Sitemap\\\\Providers\\\\Provider' => __DIR__ . '/../..' . '/includes/modules/sitemap/providers/interface-provider.php',\n        'RankMath\\\\Sitemap\\\\Providers\\\\Taxonomy' => __DIR__ . '/../..' . '/includes/modules/sitemap/providers/class-taxonomy.php',\n        'RankMath\\\\Sitemap\\\\Redirect_Core_Sitemaps' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-redirect-core-sitemaps.php',\n        'RankMath\\\\Sitemap\\\\Router' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-router.php',\n        'RankMath\\\\Sitemap\\\\Sitemap' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-sitemap.php',\n        'RankMath\\\\Sitemap\\\\Sitemap_Index' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-sitemap-index.php',\n        'RankMath\\\\Sitemap\\\\Sitemap_XML' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-sitemap-xml.php',\n        'RankMath\\\\Sitemap\\\\Stylesheet' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-stylesheet.php',\n        'RankMath\\\\Sitemap\\\\Timezone' => __DIR__ . '/../..' . '/includes/modules/sitemap/class-timezone.php',\n        'RankMath\\\\Sitemap\\\\XML' => __DIR__ . '/../..' . '/includes/modules/sitemap/abstract-xml.php',\n        'RankMath\\\\Status\\\\Backup' => __DIR__ . '/../..' . '/includes/modules/status/class-backup.php',\n        'RankMath\\\\Status\\\\Error_Log' => __DIR__ . '/../..' . '/includes/modules/status/class-error-log.php',\n        'RankMath\\\\Status\\\\Import_Export_Settings' => __DIR__ . '/../..' . '/includes/modules/status/class-import-export-settings.php',\n        'RankMath\\\\Status\\\\Rest' => __DIR__ . '/../..' . '/includes/modules/status/class-rest.php',\n        'RankMath\\\\Status\\\\Status' => __DIR__ . '/../..' . '/includes/modules/status/class-status.php',\n        'RankMath\\\\Status\\\\System_Status' => __DIR__ . '/../..' . '/includes/modules/status/class-system-status.php',\n        'RankMath\\\\Term' => __DIR__ . '/../..' . '/includes/class-term.php',\n        'RankMath\\\\Thumbnail_Overlay' => __DIR__ . '/../..' . '/includes/class-thumbnail-overlay.php',\n        'RankMath\\\\Tools\\\\AIOSEO_Blocks' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-aioseo-blocks.php',\n        'RankMath\\\\Tools\\\\AIOSEO_TOC_Converter' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-aioseo-toc-converter.php',\n        'RankMath\\\\Tools\\\\Database_Tools' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-database-tools.php',\n        'RankMath\\\\Tools\\\\Update_Score' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-update-score.php',\n        'RankMath\\\\Tools\\\\Yoast_Blocks' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-yoast-blocks.php',\n        'RankMath\\\\Tools\\\\Yoast_FAQ_Converter' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-yoast-faq-converter.php',\n        'RankMath\\\\Tools\\\\Yoast_HowTo_Converter' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-yoast-howto-converter.php',\n        'RankMath\\\\Tools\\\\Yoast_Local_Converter' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-yoast-local-converter.php',\n        'RankMath\\\\Tools\\\\Yoast_TOC_Converter' => __DIR__ . '/../..' . '/includes/modules/database-tools/class-yoast-toc-converter.php',\n        'RankMath\\\\Tracking' => __DIR__ . '/../..' . '/includes/class-tracking.php',\n        'RankMath\\\\Traits\\\\Ajax' => __DIR__ . '/../..' . '/includes/traits/class-ajax.php',\n        'RankMath\\\\Traits\\\\Cache' => __DIR__ . '/../..' . '/includes/traits/class-cache.php',\n        'RankMath\\\\Traits\\\\Hooker' => __DIR__ . '/../..' . '/includes/traits/class-hooker.php',\n        'RankMath\\\\Traits\\\\Meta' => __DIR__ . '/../..' . '/includes/traits/class-meta.php',\n        'RankMath\\\\Traits\\\\Shortcode' => __DIR__ . '/../..' . '/includes/traits/class-shortcode.php',\n        'RankMath\\\\Traits\\\\Wizard' => __DIR__ . '/../..' . '/includes/traits/class-wizard.php',\n        'RankMath\\\\Update_Email' => __DIR__ . '/../..' . '/includes/class-update-email.php',\n        'RankMath\\\\Updates' => __DIR__ . '/../..' . '/includes/class-updates.php',\n        'RankMath\\\\User' => __DIR__ . '/../..' . '/includes/class-user.php',\n        'RankMath\\\\Version_Control' => __DIR__ . '/../..' . '/includes/modules/version-control/class-version-control.php',\n        'RankMath\\\\Web_Stories\\\\Web_Stories' => __DIR__ . '/../..' . '/includes/modules/web-stories/class-web-stories.php',\n        'RankMath\\\\Wizard\\\\Compatibility' => __DIR__ . '/../..' . '/includes/admin/wizard/class-compatibility.php',\n        'RankMath\\\\Wizard\\\\Import' => __DIR__ . '/../..' . '/includes/admin/wizard/class-import.php',\n        'RankMath\\\\Wizard\\\\Monitor_Redirection' => __DIR__ . '/../..' . '/includes/admin/wizard/class-monitor-redirection.php',\n        'RankMath\\\\Wizard\\\\Optimization' => __DIR__ . '/../..' . '/includes/admin/wizard/class-optimization.php',\n        'RankMath\\\\Wizard\\\\Ready' => __DIR__ . '/../..' . '/includes/admin/wizard/class-ready.php',\n        'RankMath\\\\Wizard\\\\Role' => __DIR__ . '/../..' . '/includes/admin/wizard/class-role.php',\n        'RankMath\\\\Wizard\\\\Schema_Markup' => __DIR__ . '/../..' . '/includes/admin/wizard/class-schema-markup.php',\n        'RankMath\\\\Wizard\\\\Search_Console' => __DIR__ . '/../..' . '/includes/admin/wizard/class-search-console.php',\n        'RankMath\\\\Wizard\\\\Sitemap' => __DIR__ . '/../..' . '/includes/admin/wizard/class-sitemap.php',\n        'RankMath\\\\Wizard\\\\Wizard_Step' => __DIR__ . '/../..' . '/includes/admin/wizard/interface-wizard-step.php',\n        'RankMath\\\\Wizard\\\\Your_Site' => __DIR__ . '/../..' . '/includes/admin/wizard/class-your-site.php',\n        'RankMath\\\\WooCommerce\\\\Admin' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-admin.php',\n        'RankMath\\\\WooCommerce\\\\Base' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-base.php',\n        'RankMath\\\\WooCommerce\\\\Opengraph' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-opengraph.php',\n        'RankMath\\\\WooCommerce\\\\Permalink_Watcher' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-permalink-watcher.php',\n        'RankMath\\\\WooCommerce\\\\Product_Redirection' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-product-redirection.php',\n        'RankMath\\\\WooCommerce\\\\Sitemap' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-sitemap.php',\n        'RankMath\\\\WooCommerce\\\\WC_Vars' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-wc-vars.php',\n        'RankMath\\\\WooCommerce\\\\WooCommerce' => __DIR__ . '/../..' . '/includes/modules/woocommerce/class-woocommerce.php',\n        'WPMedia\\\\Mixpanel\\\\Optin' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Optin.php',\n        'WPMedia\\\\Mixpanel\\\\Tracking' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Tracking.php',\n        'WPMedia\\\\Mixpanel\\\\TrackingPlugin' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/TrackingPlugin.php',\n        'WPMedia\\\\Mixpanel\\\\WPConsumer' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/WPConsumer.php',\n        'WPMedia_Base_MixpanelBase' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/Base/MixpanelBase.php',\n        'WPMedia_ConsumerStrategies_AbstractConsumer' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/AbstractConsumer.php',\n        'WPMedia_ConsumerStrategies_CurlConsumer' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/CurlConsumer.php',\n        'WPMedia_ConsumerStrategies_FileConsumer' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/FileConsumer.php',\n        'WPMedia_ConsumerStrategies_SocketConsumer' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/SocketConsumer.php',\n        'WPMedia_Mixpanel' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/Mixpanel.php',\n        'WPMedia_Producers_MixpanelBaseProducer' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelBaseProducer.php',\n        'WPMedia_Producers_MixpanelEvents' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelEvents.php',\n        'WPMedia_Producers_MixpanelGroups' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelGroups.php',\n        'WPMedia_Producers_MixpanelPeople' => __DIR__ . '/..' . '/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelPeople.php',\n        'WP_Async_Request' => __DIR__ . '/..' . '/a5hleyrich/wp-background-processing/classes/wp-async-request.php',\n        'WP_Background_Process' => __DIR__ . '/..' . '/a5hleyrich/wp-background-processing/classes/wp-background-process.php',\n        'donatj\\\\UserAgent\\\\Browsers' => __DIR__ . '/..' . '/donatj/phpuseragentparser/src/UserAgent/Browsers.php',\n        'donatj\\\\UserAgent\\\\Platforms' => __DIR__ . '/..' . '/donatj/phpuseragentparser/src/UserAgent/Platforms.php',\n        'donatj\\\\UserAgent\\\\UserAgent' => __DIR__ . '/..' . '/donatj/phpuseragentparser/src/UserAgent/UserAgent.php',\n        'donatj\\\\UserAgent\\\\UserAgentInterface' => __DIR__ . '/..' . '/donatj/phpuseragentparser/src/UserAgent/UserAgentInterface.php',\n        'donatj\\\\UserAgent\\\\UserAgentParser' => __DIR__ . '/..' . '/donatj/phpuseragentparser/src/UserAgent/UserAgentParser.php',\n    );\n\n    public static function getInitializer(ClassLoader $loader)\n    {\n        return \\Closure::bind(function () use ($loader) {\n            $loader->prefixLengthsPsr4 = ComposerStaticInite0da7526f14e2b3495b4ae1c6b762524::$prefixLengthsPsr4;\n            $loader->prefixDirsPsr4 = ComposerStaticInite0da7526f14e2b3495b4ae1c6b762524::$prefixDirsPsr4;\n            $loader->classMap = ComposerStaticInite0da7526f14e2b3495b4ae1c6b762524::$classMap;\n\n        }, null, ClassLoader::class);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/platform_check.php","ext":"php","size":923,"mtime":1757324689,"type":"text","content":"<?php\n\n// platform_check.php @generated by Composer\n\n$issues = array();\n\nif (!(PHP_VERSION_ID > 70400)) {\n    $issues[] = 'Your Composer dependencies require a PHP version \"> 7.4.0\". You are running ' . PHP_VERSION . '.';\n}\n\nif ($issues) {\n    if (!headers_sent()) {\n        header('HTTP/1.1 500 Internal Server Error');\n    }\n    if (!ini_get('display_errors')) {\n        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {\n            fwrite(STDERR, 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . implode(PHP_EOL, $issues) . PHP_EOL.PHP_EOL);\n        } elseif (!headers_sent()) {\n            echo 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . str_replace('You are running '.PHP_VERSION.'.', '', implode(PHP_EOL, $issues)) . PHP_EOL.PHP_EOL;\n        }\n    }\n    trigger_error(\n        'Composer detected issues in your platform: ' . implode(' ', $issues),\n        E_USER_ERROR\n    );\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/composer/autoload_real.php","ext":"php","size":1738,"mtime":1757324689,"type":"text","content":"<?php\n\n// autoload_real.php @generated by Composer\n\nclass ComposerAutoloaderInite0da7526f14e2b3495b4ae1c6b762524\n{\n    private static $loader;\n\n    public static function loadClassLoader($class)\n    {\n        if ('Composer\\Autoload\\ClassLoader' === $class) {\n            require __DIR__ . '/ClassLoader.php';\n        }\n    }\n\n    /**\n     * @return \\Composer\\Autoload\\ClassLoader\n     */\n    public static function getLoader()\n    {\n        if (null !== self::$loader) {\n            return self::$loader;\n        }\n\n        require __DIR__ . '/platform_check.php';\n\n        spl_autoload_register(array('ComposerAutoloaderInite0da7526f14e2b3495b4ae1c6b762524', 'loadClassLoader'), true, true);\n        self::$loader = $loader = new \\Composer\\Autoload\\ClassLoader(\\dirname(__DIR__));\n        spl_autoload_unregister(array('ComposerAutoloaderInite0da7526f14e2b3495b4ae1c6b762524', 'loadClassLoader'));\n\n        require __DIR__ . '/autoload_static.php';\n        call_user_func(\\Composer\\Autoload\\ComposerStaticInite0da7526f14e2b3495b4ae1c6b762524::getInitializer($loader));\n\n        $loader->register(true);\n\n        $includeFiles = \\Composer\\Autoload\\ComposerStaticInite0da7526f14e2b3495b4ae1c6b762524::$files;\n        foreach ($includeFiles as $fileIdentifier => $file) {\n            composerRequiree0da7526f14e2b3495b4ae1c6b762524($fileIdentifier, $file);\n        }\n\n        return $loader;\n    }\n}\n\n/**\n * @param string $fileIdentifier\n * @param string $file\n * @return void\n */\nfunction composerRequiree0da7526f14e2b3495b4ae1c6b762524($fileIdentifier, $file)\n{\n    if (empty($GLOBALS['__composer_autoload_files'][$fileIdentifier])) {\n        $GLOBALS['__composer_autoload_files'][$fileIdentifier] = true;\n\n        require $file;\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Tracking.php","ext":"php","size":5659,"mtime":1757324689,"type":"text","content":"<?php\ndeclare(strict_types=1);\n\nnamespace WPMedia\\Mixpanel;\n\nuse WPMedia_Mixpanel;\n\nclass Tracking {\n\tconst HOST = 'mixpanel-tracking-proxy-prod.public-default.live2-k8s-cph3.ingress.k8s.g1i.one';\n\n\t/**\n\t * Mixpanel instance\n\t *\n\t * @var WPMedia_Mixpanel\n\t */\n\tprivate $mixpanel;\n\n\t/**\n\t * Mixpanel token\n\t *\n\t * @var string\n\t */\n\tprotected $token;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param string  $mixpanel_token Mixpanel token.\n\t * @param mixed[] $options Options for Mixpanel instance.\n\t */\n\tpublic function __construct( string $mixpanel_token, array $options = [] ) {\n\t\t$mixpanel_options = array_merge(\n\t\t\t[\n\t\t\t\t'host'            => self::HOST,\n\t\t\t\t'events_endpoint' => '/track/?ip=0',\n\t\t\t],\n\t\t\t$options\n\t\t);\n\n\t\t$this->token    = $mixpanel_token;\n\t\t$this->mixpanel = WPMedia_Mixpanel::getInstance(\n\t\t\t$this->token,\n\t\t\t$mixpanel_options\n\t\t);\n\t}\n\n\t/**\n\t * Track an event in Mixpanel\n\t *\n\t * @param string  $event Event name.\n\t * @param mixed[] $properties Event properties.\n\t */\n\tpublic function track( string $event, array $properties ): void {\n\t\t$this->mixpanel->track( $event, $properties );\n\t}\n\n\t/**\n\t * Identify a user in Mixpanel\n\t *\n\t * @param string $user_id User ID.\n\t *\n\t * @return void\n\t */\n\tpublic function identify( string $user_id ): void {\n\t\t$this->mixpanel->identify( $this->hash( $user_id ) );\n\t}\n\n\t/**\n\t * Set a user property in Mixpanel\n\t *\n\t * @param string $user_id User ID.\n\t * @param string $property Property name.\n\t * @param mixed  $value Property value.\n\t */\n\tpublic function set_user_property( string $user_id, string $property, $value ): void {\n\t\t$this->mixpanel->people->set(\n\t\t\t$user_id,\n\t\t\t[\n\t\t\t\t$property => $value,\n\t\t\t],\n\t\t\t'0'\n\t\t);\n\t}\n\n\t/**\n\t * Hash a value using sha224\n\t *\n\t * @param string $value Value to hash.\n\t *\n\t * @return string\n\t */\n\tpublic function hash( string $value ): string {\n\t\treturn hash( 'sha224', $value );\n\t}\n\n\t/**\n\t * Get the WordPress version\n\t *\n\t * @return string\n\t */\n\tpublic function get_wp_version(): string {\n\t\t$version = preg_replace( '@^(\\d\\.\\d+).*@', '\\1', get_bloginfo( 'version' ) );\n\n\t\tif ( null === $version ) {\n\t\t\t$version = '0.0';\n\t\t}\n\n\t\treturn $version;\n\t}\n\n\t/**\n\t * Get the PHP version\n\t *\n\t * @return string\n\t */\n\tpublic function get_php_version(): string {\n\t\t$version = preg_replace( '@^(\\d\\.\\d+).*@', '\\1', phpversion() );\n\n\t\tif ( null === $version ) {\n\t\t\t$version = '0.0';\n\t\t}\n\n\t\treturn $version;\n\t}\n\n\t/**\n\t * Get the active theme\n\t *\n\t * @return string\n\t */\n\tpublic function get_current_theme(): string {\n\t\t$theme = wp_get_theme();\n\n\t\treturn $theme->get( 'Name' );\n\t}\n\n\t/**\n\t * Get list of active plugins names\n\t *\n\t * @return string[]\n\t */\n\tpublic function get_active_plugins(): array {\n\t\t$plugins        = [];\n\t\t$active_plugins = (array) get_option( 'active_plugins', [] );\n\t\t$all_plugins    = get_plugins();\n\n\t\tforeach ( $active_plugins as $plugin_path ) {\n\t\t\tif ( ! isset( $all_plugins[ $plugin_path ] ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t$plugins[] = $all_plugins[ $plugin_path ]['Name'];\n\t\t}\n\n\t\treturn $plugins;\n\t}\n\n\t/**\n\t * Get the Mixpanel token\n\t *\n\t * @return string\n\t */\n\tpublic function get_token(): string {\n\t\treturn $this->token;\n\t}\n\n\t/**\n\t * Add the Mixpanel script & initialize it\n\t */\n\tpublic function add_script(): void {\n\t\t?>\n\t\t<!-- start Mixpanel --><script>\n\t\tconst MIXPANEL_CUSTOM_LIB_URL = \"https://<?php echo esc_js( self::HOST ); ?>/lib.min.js\";\n\t\t(function (f, b) { if (!b.__SV) { var e, g, i, h; window.mixpanel = b; b._i = []; b.init = function (e, f, c) { function g(a, d) { var b = d.split(\".\"); 2 == b.length && ((a = a[b[0]]), (d = b[1])); a[d] = function () { a.push([d].concat(Array.prototype.slice.call(arguments, 0))); }; } var a = b; \"undefined\" !== typeof c ? (a = b[c] = []) : (c = \"mixpanel\"); a.people = a.people || []; a.toString = function (a) { var d = \"mixpanel\"; \"mixpanel\" !== c && (d += \".\" + c); a || (d += \" (stub)\"); return d; }; a.people.toString = function () { return a.toString(1) + \".people (stub)\"; }; i = \"disable time_event track track_pageview track_links track_forms track_with_groups add_group set_group remove_group register register_once alias unregister identify name_tag set_config reset opt_in_tracking opt_out_tracking has_opted_in_tracking has_opted_out_tracking clear_opt_in_out_tracking start_batch_senders people.set people.set_once people.unset people.increment people.append people.union people.track_charge people.clear_charges people.delete_user people.remove\".split( \" \"); for (h = 0; h < i.length; h++) g(a, i[h]); var j = \"set set_once union unset remove delete\".split(\" \"); a.get_group = function () { function b(c) { d[c] = function () { call2_args = arguments; call2 = [c].concat(Array.prototype.slice.call(call2_args, 0)); a.push([e, call2]); }; } for ( var d = {}, e = [\"get_group\"].concat( Array.prototype.slice.call(arguments, 0)), c = 0; c < j.length; c++) b(j[c]); return d; }; b._i.push([e, f, c]); }; b.__SV = 1.2; e = f.createElement(\"script\"); e.type = \"text/javascript\"; e.async = !0; e.src = \"undefined\" !== typeof MIXPANEL_CUSTOM_LIB_URL ? MIXPANEL_CUSTOM_LIB_URL : \"file:\" === f.location.protocol && \"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js\".match(/^\\/\\//) ? \"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js\" : \"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js\"; g = f.getElementsByTagName(\"script\")[0]; g.parentNode.insertBefore(e, g); } })(document, window.mixpanel || []);\n\t\tmixpanel.init( '<?php echo esc_js( $this->token ); ?>', {\n\t\t\tapi_host: \"https://<?php echo esc_js( self::HOST ); ?>\",\n\t\t\tid: false,\n\t\t\tproperty_blacklist: ['$initial_referrer', '$current_url', '$initial_referring_domain', '$referrer', '$referring_domain']\n\t\t} );\n\t\t</script><!-- end Mixpanel -->\n\t\t<?php\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/Mixpanel.php","ext":"php","size":9250,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * This is the main class for the Mixpanel PHP Library which provides all of the methods you need to track events,\n  * create/update profiles and group profiles.\n *\n * Architecture\n * -------------\n *\n * This library is built such that all messages are buffered in an in-memory \"queue\"\n * The queue will be automatically flushed at the end of every request. Alternatively, you can call \"flush()\" manually\n * at any time. Flushed messages will be passed to a Consumer's \"persist\" method. The library comes with a handful of\n * Consumers. The \"CurlConsumer\" is used by default which will send the messages to Mixpanel using forked cURL processes.\n * You can implement your own custom Consumer to customize how a message is sent to Mixpanel. This can be useful when\n * you want to put messages onto a distributed queue (such as ActiveMQ or Kestrel) instead of writing to Mixpanel in\n * the user thread.\n *\n * Options\n * -------------\n *\n * <table width=\"100%\" cellpadding=\"5\">\n *  <tr>\n *      <th>Option</th>\n *      <th>Description</th>\n *      <th>Default</th>\n *  </tr>\n *  <tr>\n *      <td>max_queue_size</td>\n *      <td>The maximum number of items to buffer in memory before flushing</td>\n *      <td>1000</td>\n *  </tr>\n *  <tr>\n *      <td>debug</td>\n *      <td>Enable/disable debug mode</td>\n *      <td>false</td>\n *  </tr>\n *  <tr>\n *      <td>consumer</td>\n *      <td>The consumer to use for writing messages</td>\n *      <td>curl</td>\n *  </tr>\n *  <tr>\n *      <td>consumers</td>\n *      <td>An array of custom consumers in the format array(consumer_key => class_name)</td>\n *      <td>null</td>\n *  </tr>\n *  <tr>\n *      <td>host</td>\n *      <td>The host name for api calls (used by some consumers)</td>\n *      <td>api.mixpanel.com</td>\n *  </tr>\n *  <tr>\n *      <td>events_endpoint</td>\n *      <td>The endpoint for tracking events (relative to the host)</td>\n *      <td>/events</td>\n *  </tr>\n *  <tr>\n *      <td>people_endpoint</td>\n *      <td>The endpoint for making people updates (relative to the host)</td>\n *      <td>/engage</td>\n *  </tr>\n *  <tr>\n *      <td>use_ssl</td>\n *      <td>Tell the consumer whether or not to use ssl (when available)</td>\n *      <td>true</td>\n *  </tr>\n *  <tr>\n *      <td>error_callback</td>\n *      <td>The name of a function to be called on consumption failures</td>\n *      <td>null</td>\n *  </tr>\n *  <tr>\n *      <td>connect_timeout</td>\n *      <td>In both the SocketConsumer and CurlConsumer, this is used for the connection timeout (i.e. How long it has take to actually make a connection).\n *      <td>5</td>\n *  </tr>\n *  <tr>\n *      <td>timeout</td>\n *      <td>In the CurlConsumer (non-forked), it is used to determine how long the cURL call has to execute.\n *      <td>30</td>\n *  </tr>\n * </table>\n *\n * Example: Tracking an Event\n * -------------\n *\n * $mp = Mixpanel::getInstance(\"MY_TOKEN\");\n *\n * $mp->track(\"My Event\");\n *\n * Example: Setting Profile Properties\n * -------------\n *\n * $mp = Mixpanel::getInstance(\"MY_TOKEN\", array(\"use_ssl\" => false));\n *\n * $mp->people->set(12345, array(\n * '$first_name'       => \"John\",\n * '$last_name'        => \"Doe\",\n * '$email'            => \"john.doe@example.com\",\n * '$phone'            => \"5555555555\",\n * 'Favorite Color'    => \"red\"\n * ));\n *\n */\nclass WPMedia_Mixpanel extends WPMedia_Base_MixpanelBase {\n\n\n    /**\n     * An instance of the MixpanelPeople class (used to create/update profiles)\n     * @var WPMedia_Producers_MixpanelPeople\n     */\n    public $people;\n\n\n    /**\n     * An instance of the MixpanelEvents class\n     * @var WPMedia_Producers_MixpanelEvents\n     */\n    private $_events;\n\n    /**\n     * An instance of the MixpanelGroups class (used to create/update group profiles)\n     * @var WPMedia_Producers_MixpanelPeople\n     */\n    public $group;\n \n\n\n    /**\n     * Instances' list of the Mixpanel class (for singleton use, splitted by token)\n     * @var WPMedia_Mixpanel[]\n     */\n    private static $_instances = array();\n    \n\n    /**\n     * Instantiates a new Mixpanel instance.\n     * @param $token\n     * @param array $options\n     */\n    public function __construct($token, $options = array()) {\n        parent::__construct($options);\n        $this->people = new WPMedia_Producers_MixpanelPeople($token, $options);\n        $this->_events = new WPMedia_Producers_MixpanelEvents($token, $options);\n        $this->group = new WPMedia_Producers_MixpanelGroups($token, $options);\n    }\n\n\n    /**\n     * Returns a singleton instance of Mixpanel\n     * @param $token\n     * @param array $options\n     * @return WPMedia_Mixpanel\n     */\n    public static function getInstance($token, $options = array()) {\n        if(!isset(self::$_instances[$token])) {\n            self::$_instances[$token] = new WPMedia_Mixpanel($token, $options);\n        }\n        return self::$_instances[$token];\n    }\n\n\n    /**\n     * Add an array representing a message to be sent to Mixpanel to the in-memory queue.\n     * @param array $message\n     */\n    public function enqueue($message = array()) {\n        $this->_events->enqueue($message);\n    }\n\n\n    /**\n     * Add an array representing a list of messages to be sent to Mixpanel to a queue.\n     * @param array $messages\n     */\n    public function enqueueAll($messages = array()) {\n        $this->_events->enqueueAll($messages);\n    }\n\n\n    /**\n     * Flush the events queue\n     * @param int $desired_batch_size\n     */\n    public function flush($desired_batch_size = 50) {\n        $this->_events->flush($desired_batch_size);\n    }\n\n\n    /**\n     * Empty the events queue\n     */\n    public function reset() {\n        $this->_events->reset();\n    }\n\n\n    /**\n     * Identify the user you want to associate to tracked events. The $anon_id must be UUID v4 format and not already merged to an $identified_id.\n     * All identify calls with a new and valid $anon_id will trigger a track $identify event, and merge to the $identified_id.\n     * @param string|int $user_id\n     * @param string|int $anon_id [optional]\n     */\n    public function identify($user_id, $anon_id = null) {\n        $this->_events->identify($user_id, $anon_id);\n    }\n\n    /**\n     * Track an event defined by $event associated with metadata defined by $properties\n     * @param string $event\n     * @param array $properties\n     */\n    public function track($event, $properties = array()) {\n        $this->_events->track($event, $properties);\n    }\n\n\n    /**\n     * Register a property to be sent with every event.\n     *\n     * If the property has already been registered, it will be\n     * overwritten. NOTE: Registered properties are only persisted for the life of the Mixpanel class instance.\n     * @param string $property\n     * @param mixed $value\n     */\n    public function register($property, $value) {\n        $this->_events->register($property, $value);\n    }\n\n\n    /**\n     * Register multiple properties to be sent with every event.\n     *\n     * If any of the properties have already been registered,\n     * they will be overwritten. NOTE: Registered properties are only persisted for the life of the Mixpanel class\n     * instance.\n     * @param array $props_and_vals\n     */\n    public function registerAll($props_and_vals = array()) {\n        $this->_events->registerAll($props_and_vals);\n    }\n\n\n    /**\n     * Register a property to be sent with every event.\n     *\n     * If the property has already been registered, it will NOT be\n     * overwritten. NOTE: Registered properties are only persisted for the life of the Mixpanel class instance.\n     * @param $property\n     * @param $value\n     */\n    public function registerOnce($property, $value) {\n        $this->_events->registerOnce($property, $value);\n    }\n\n\n    /**\n     * Register multiple properties to be sent with every event.\n     *\n     * If any of the properties have already been registered,\n     * they will NOT be overwritten. NOTE: Registered properties are only persisted for the life of the Mixpanel class\n     * instance.\n     * @param array $props_and_vals\n     */\n    public function registerAllOnce($props_and_vals = array()) {\n        $this->_events->registerAllOnce($props_and_vals);\n    }\n\n\n    /**\n     * Un-register an property to be sent with every event.\n     * @param string $property\n     */\n    public function unregister($property) {\n        $this->_events->unregister($property);\n    }\n\n\n    /**\n     * Un-register a list of properties to be sent with every event.\n     * @param array $properties\n     */\n    public function unregisterAll($properties) {\n        $this->_events->unregisterAll($properties);\n    }\n\n\n    /**\n     * Get a property that is set to be sent with every event\n     * @param string $property\n     * @return mixed\n     */\n    public function getProperty($property)\n    {\n        return $this->_events->getProperty($property);\n    }\n\n\n    /**\n     * An alias to be merged with the distinct_id. Each alias can only map to one distinct_id.\n     * This is helpful when you want to associate a generated id (such as a session id) to a user id or username.\n     * @param string|int $distinct_id\n     * @param string|int $alias\n     */\n    public function createAlias($distinct_id, $alias) {\n        $this->_events->createAlias($distinct_id, $alias);\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelGroups.php","ext":"php","size":5741,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Provides an API to create/update group profiles on Mixpanel\n */\nclass WPMedia_Producers_MixpanelGroups extends WPMedia_Producers_MixpanelBaseProducer {\n\n    /**\n     * Internal method to prepare a message given the message data\n     * @param $group_key\n     * @param $group_id\n     * @param $operation\n     * @param $value\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the group Profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @return array\n     */\n    private function _constructPayload($group_key, $group_id, $operation, $value, $ignore_time = false) {\n        $payload = array(\n            '$token' => $this->_token,\n            '$group_key' => $group_key,\n            '$group_id' => $group_id,\n            '$time' => microtime(true),\n            $operation => $value\n        );\n        if ($ignore_time === true) $payload['$ignore_time'] = true;\n        return $payload;\n    }\n\n    /**\n     * Set properties on a group profile. If the group profile does not exist, it creates it with these properties.\n     * If it does exist, it sets the properties to these values, overwriting existing values.\n     * @param string|int $group_key the group_key used for groups in Project Settings\n     * @param string|int $group_id the group id used for the group profile\n     * @param array $props associative array of properties to set on the group profile\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the group profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     */\n    public function set($group_key, $group_id, $props, $ignore_time = false) {\n        $payload = $this->_constructPayload($group_key, $group_id, '$set', $props, $ignore_time);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Set properties on a group profile. If the Group profile does not exist, it creates it with these properties.\n     * If it does exist, it sets the properties to these values but WILL NOT overwrite existing values.\n     * @param string|int $group_key the group_key used for groups in Project Settings\n     * @param string|int $group_id the group id used for the group profile\n     * @param array $props associative array of properties to set on the group profile\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the group profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     */\n    public function setOnce($group_key, $group_id, $props, $ignore_time = false) {\n        $payload = $this->_constructPayload($group_key, $group_id, '$set_once', $props, $ignore_time);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Unset properties on a group profile. If the group does not exist, it creates it with no properties.\n     * If it does exist, it unsets these properties. NOTE: In other libraries we use 'unset' which is\n     * a reserved word in PHP.\n     * @param string|int $group_key the group_key used for groups in Project Settings\n     * @param string|int $group_id the group id used for the group profile\n     * @param array $props associative array of properties to unset on the group profile\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the group profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     */\n    public function remove($group_key, $group_id, $props, $ignore_time = false) {\n        $payload = $this->_constructPayload($group_key, $group_id, '$remove', $props, $ignore_time);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Adds $val to a list located at $prop. If the property does not exist, it will be created. If $val is a string\n     * and the list is empty or does not exist, a new list with one value will be created.\n     * @param string|int $group_key the group_key used for groups in Project Settings\n     * @param string|int $group_id the group id used for the group profile\n     * @param string $prop the property that holds the list\n     * @param string|array $val items to add to the list\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the group profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     */\n    public function union($group_key, $group_id, $prop, $val, $ignore_time = false) {\n        $payload = $this->_constructPayload($group_key, $group_id, '$union', array(\"$prop\" => $val), $ignore_time);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Delete this group profile from Mixpanel\n     * @param string|int $group_key the group_key used for groups in Project Settings\n     * @param string|int $group_id the group id used for the group profile\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     */\n    public function deleteGroup($group_key, $group_id, $ignore_time = false) {\n        $payload = $this->_constructPayload($group_key, $group_id, '$delete', \"\", $ignore_time);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Returns the \"groups\" endpoint\n     * @return string\n     */\n    function _getEndpoint() {\n        return $this->_options['groups_endpoint'];\n    }\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelBaseProducer.php","ext":"php","size":6080,"mtime":1757324689,"type":"text","content":"<?php\n\nif (!function_exists('json_encode')) {\n    throw new Exception('The JSON PHP extension is required.');\n}\n\n/**\n * Provides some base methods for use by a message Producer\n */\nabstract class WPMedia_Producers_MixpanelBaseProducer extends WPMedia_Base_MixpanelBase {\n\n\n    /**\n     * @var string a token associated to a Mixpanel project\n     */\n    protected $_token;\n\n\n    /**\n     * @var array a queue to hold messages in memory before flushing in batches\n     */\n    private $_queue = array();\n\n\n    /**\n     * @var WPMedia_ConsumerStrategies_AbstractConsumer the consumer to use when flushing messages\n     */\n    private $_consumer = null;\n\n\n    /**\n     * @var array The list of available consumers\n     */\n    private $_consumers = array(\n        \"file\"      =>  \"WPMedia_ConsumerStrategies_FileConsumer\",\n        \"curl\"      =>  \"WPMedia_ConsumerStrategies_CurlConsumer\",\n        \"socket\"    =>  \"WPMedia_ConsumerStrategies_SocketConsumer\",\n    );\n\n\n    /**\n     * If the queue reaches this size we'll auto-flush to prevent out of memory errors\n     * @var int\n     */\n    protected $_max_queue_size = 1000;\n\n\n    /**\n     * Creates a new MixpanelBaseProducer, assings Mixpanel project token, registers custom Consumers, and instantiates\n     * the desired consumer\n     * @param $token\n     * @param array $options\n     */\n    public function __construct($token, $options = array()) {\n\n        parent::__construct($options);\n\n        // register any customer consumers\n        if (isset($options[\"consumers\"])) {\n            $this->_consumers = array_merge($this->_consumers, $options['consumers']);\n        }\n\n        // set max queue size\n        if (isset($options[\"max_queue_size\"])) {\n            $this->_max_queue_size = $options['max_queue_size'];\n        }\n\n        // associate token\n        $this->_token = $token;\n\n        if ($this->_debug()) {\n            $this->_log(\"Using token: \".$this->_token);\n        }\n\n        // instantiate the chosen consumer\n        $this->_consumer = $this->_getConsumer();\n\n    }\n\n\n    /**\n     * Flush the queue when we destruct the client with retries\n     */\n    public function __destruct() {\n        $attempts = 0;\n        $max_attempts = 10;\n        $success = false;\n        while (!$success && $attempts < $max_attempts) {\n            if ($this->_debug()) {\n                $this->_log(\"destruct flush attempt #\".($attempts+1));\n            }\n            $success = $this->flush();\n            $attempts++;\n        }\n    }\n\n\n    /**\n     * Iterate the queue and write in batches using the instantiated Consumer Strategy\n     * @param int $desired_batch_size\n     * @return bool whether or not the flush was successful\n     */\n    public function flush($desired_batch_size = 50) {\n        $queue_size = count($this->_queue);\n        $succeeded = true;\n        $num_threads = $this->_consumer->getNumThreads();\n\n        if ($this->_debug()) {\n            $this->_log(\"Flush called - queue size: \".$queue_size);\n        }\n\n        while($queue_size > 0 && $succeeded) {\n            $batch_size = min(array($queue_size, $desired_batch_size*$num_threads, $this->_options['max_batch_size']*$num_threads));\n            $batch = array_splice($this->_queue, 0, $batch_size);\n            $succeeded = $this->_persist($batch);\n\n            if (!$succeeded) {\n                if ($this->_debug()) {\n                    $this->_log(\"Batch consumption failed!\");\n                }\n                $this->_queue = array_merge($batch, $this->_queue);\n\n                if ($this->_debug()) {\n                    $this->_log(\"added batch back to queue, queue size is now $queue_size\");\n                }\n            }\n\n            $queue_size = count($this->_queue);\n\n            if ($this->_debug()) {\n                $this->_log(\"Batch of $batch_size consumed, queue size is now $queue_size\");\n            }\n        }\n        return $succeeded;\n    }\n\n\n    /**\n     * Empties the queue without persisting any of the messages\n     */\n    public function reset() {\n        $this->_queue = array();\n    }\n\n\n    /**\n     * Returns the in-memory queue\n     * @return array\n     */\n    public function getQueue() {\n        return $this->_queue;\n    }\n\n    /**\n     * Returns the current Mixpanel project token\n     * @return string\n     */\n    public function getToken() {\n        return $this->_token;\n    }\n\n\n    /**\n     * Given a strategy type, return a new PersistenceStrategy object\n     * @return WPMedia_ConsumerStrategies_AbstractConsumer\n     */\n    protected function _getConsumer() {\n        $key = $this->_options['consumer'];\n        $Strategy = $this->_consumers[$key];\n        if ($this->_debug()) {\n            $this->_log(\"Using consumer: \" . $key . \" -> \" . $Strategy);\n        }\n        $this->_options['endpoint'] = $this->_getEndpoint();\n\n        return new $Strategy($this->_options);\n    }\n\n\n    /**\n     * Add an array representing a message to be sent to Mixpanel to a queue.\n     * @param array $message\n     */\n    public function enqueue($message = array()) {\n        array_push($this->_queue, $message);\n\n        // force a flush if we've reached our threshold\n        if (count($this->_queue) > $this->_max_queue_size) {\n            $this->flush();\n        }\n\n        if ($this->_debug()) {\n            $this->_log(\"Queued message: \".json_encode($message));\n        }\n    }\n\n\n    /**\n     * Add an array representing a list of messages to be sent to Mixpanel to a queue.\n     * @param array $messages\n     */\n    public function enqueueAll($messages = array()) {\n        foreach($messages as $message) {\n            $this->enqueue($message);\n        }\n\n    }\n\n\n    /**\n     * Given an array of messages, persist it with the instantiated Persistence Strategy\n     * @param $message\n     * @return mixed\n     */\n    protected function _persist($message) {\n        return $this->_consumer->persist($message);\n    }\n\n\n\n\n    /**\n     * Return the endpoint that should be used by a consumer that consumes messages produced by this producer.\n     * @return string\n     */\n    abstract function _getEndpoint();\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelPeople.php","ext":"php","size":10971,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Provides an API to create/update profiles on Mixpanel\n */\nclass WPMedia_Producers_MixpanelPeople extends WPMedia_Producers_MixpanelBaseProducer {\n\n    /**\n     * Internal method to prepare a message given the message data\n     * @param $distinct_id\n     * @param $operation\n     * @param $value\n     * @param null $ip\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found\n     * @return array\n     */\n    private function _constructPayload($distinct_id, $operation, $value, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $payload = array(\n            '$token' => $this->_token,\n            '$distinct_id' => $distinct_id,\n            '$time' => microtime(true),\n            $operation => $value\n        );\n        if ($ip !== null) $payload['$ip'] = $ip;\n        if ($ignore_time === true) $payload['$ignore_time'] = true;\n        if ($ignore_alias === true) $payload['$ignore_alias'] = true;\n        return $payload;\n    }\n\n    /**\n     * Set properties on a user record. If the profile does not exist, it creates it with these properties.\n     * If it does exist, it sets the properties to these values, overwriting existing values.\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param array $props associative array of properties to set on the profile\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found\n     */\n    public function set($distinct_id, $props, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $payload = $this->_constructPayload($distinct_id, '$set', $props, $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Set properties on a user record. If the profile does not exist, it creates it with these properties.\n     * If it does exist, it sets the properties to these values but WILL NOT overwrite existing values.\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param array $props associative array of properties to set on the profile\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found     \n     */\n    public function setOnce($distinct_id, $props, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $payload = $this->_constructPayload($distinct_id, '$set_once', $props, $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Unset properties on a user record. If the profile does not exist, it creates it with no properties.\n     * If it does exist, it unsets these properties. NOTE: In other libraries we use 'unset' which is\n     * a reserved word in PHP.\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param array $props associative array of properties to unset on the profile\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found     \n     */\n    public function remove($distinct_id, $props, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $payload = $this->_constructPayload($distinct_id, '$unset', $props, $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Increments the value of a property on a user record. If the profile does not exist, it creates it and sets the\n     * property to the increment value.\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param $prop string the property to increment\n     * @param int $val the amount to increment the property by\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found     \n     */\n    public function increment($distinct_id, $prop, $val, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $payload = $this->_constructPayload($distinct_id, '$add', array(\"$prop\" => $val), $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Adds $val to a list located at $prop. If the property does not exist, it will be created. If $val is a string\n     * and the list is empty or does not exist, a new list with one value will be created.\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param string $prop the property that holds the list\n     * @param string|array $val items to add to the list\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found     \n     */\n    public function append($distinct_id, $prop, $val, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $operation = gettype($val) == \"array\" ? '$union' : '$append';\n        $payload = $this->_constructPayload($distinct_id, $operation, array(\"$prop\" => $val), $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Adds a transaction to the user's profile for revenue tracking\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param string $amount the transaction amount e.g. \"20.50\"\n     * @param null $timestamp the timestamp of when the transaction occurred (default to current timestamp)\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found     \n     */\n    public function trackCharge($distinct_id, $amount, $timestamp = null, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $timestamp = $timestamp == null ? time() : $timestamp;\n        $date_iso = date(\"c\", $timestamp);\n        $transaction = array(\n            '$time' => $date_iso,\n            '$amount' => $amount\n        );\n        $val = array('$transactions' => $transaction);\n        $payload = $this->_constructPayload($distinct_id, '$append', $val, $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Clear all transactions stored on a user's profile\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found     \n     */\n    public function clearCharges($distinct_id, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $payload = $this->_constructPayload($distinct_id, '$set', array('$transactions' => array()), $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Delete this profile from Mixpanel\n     * @param string|int $distinct_id the distinct_id or alias of a user\n     * @param string|null $ip the ip address of the client (used for geo-location)\n     * @param boolean $ignore_time If the $ignore_time property is true, Mixpanel will not automatically update the \"Last Seen\" property of the profile. Otherwise, Mixpanel will add a \"Last Seen\" property associated with the current time\n     * @param boolean $ignore_alias If the $ignore_alias property is true, an alias look up will not be performed after ingestion. Otherwise, a lookup for the distinct ID will be performed, and replaced if a match is found     \n     */\n    public function deleteUser($distinct_id, $ip = null, $ignore_time = false, $ignore_alias = false) {\n        $payload = $this->_constructPayload($distinct_id, '$delete', \"\", $ip, $ignore_time, $ignore_alias);\n        $this->enqueue($payload);\n    }\n\n    /**\n     * Returns the \"engage\" endpoint\n     * @return string\n     */\n    function _getEndpoint() {\n        return $this->_options['people_endpoint'];\n    }\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/Producers/MixpanelEvents.php","ext":"php","size":6398,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Provides an API to track events on Mixpanel\n */\nclass WPMedia_Producers_MixpanelEvents extends WPMedia_Producers_MixpanelBaseProducer {\n\n    /**\n     * An array of properties to attach to every tracked event\n     * @var array\n     */\n    private $_super_properties = array(\"mp_lib\" => \"php\");\n\n\n    /**\n     * Track an event defined by $event associated with metadata defined by $properties\n     * @param string $event\n     * @param array $properties\n     */\n    public function track($event, $properties = array()) {\n\n        // if no token is passed in, use current token\n        if (!isset($properties[\"token\"])) $properties['token'] = $this->_token;\n\n        // if no time is passed in, use the current time\n        if (!isset($properties[\"time\"])) $properties['time'] = microtime(true);\n\n        $params['event'] = $event;\n        $params['properties'] = array_merge($this->_super_properties, $properties);\n\n        $this->enqueue($params);\n    }\n\n\n    /**\n     * Register a property to be sent with every event. If the property has already been registered, it will be\n     * overwritten.\n     * @param string $property\n     * @param mixed $value\n     */\n    public function register($property, $value) {\n        $this->_super_properties[$property] = $value;\n    }\n\n\n    /**\n     * Register multiple properties to be sent with every event. If any of the properties have already been registered,\n     * they will be overwritten.\n     * @param array $props_and_vals\n     */\n    public function registerAll($props_and_vals = array()) {\n        foreach($props_and_vals as $property => $value) {\n            $this->register($property, $value);\n        }\n    }\n\n\n    /**\n     * Register a property to be sent with every event. If the property has already been registered, it will NOT be\n     * overwritten.\n     * @param $property\n     * @param $value\n     */\n    public function registerOnce($property, $value) {\n        if (!isset($this->_super_properties[$property])) {\n            $this->register($property, $value);\n        }\n    }\n\n\n    /**\n     * Register multiple properties to be sent with every event. If any of the properties have already been registered,\n     * they will NOT be overwritten.\n     * @param array $props_and_vals\n     */\n    public function registerAllOnce($props_and_vals = array()) {\n        foreach($props_and_vals as $property => $value) {\n            if (!isset($this->_super_properties[$property])) {\n                $this->register($property, $value);\n            }\n        }\n    }\n\n\n    /**\n     * Un-register an property to be sent with every event.\n     * @param string $property\n     */\n    public function unregister($property) {\n        unset($this->_super_properties[$property]);\n    }\n\n\n    /**\n     * Un-register a list of properties to be sent with every event.\n     * @param array $properties\n     */\n    public function unregisterAll($properties) {\n        foreach($properties as $property) {\n            $this->unregister($property);\n        }\n    }\n\n\n    /**\n     * Get a property that is set to be sent with every event\n     * @param string $property\n     * @return mixed\n     */\n    public function getProperty($property) {\n        return $this->_super_properties[$property];\n    }\n\n\n    /**\n     * Identify the user you want to associate to tracked events. The $anon_id must be UUID v4 format (optionally with the\n     * prefix '$device:') and not already merged to an $identified_id. All identify calls with a new and valid $anon_id will\n     * trigger a track $identify event, and merge to the $identified_id.\n     * @param string|int $user_id\n     * @param string|int $anon_id [optional]\n     */\n    public function identify($user_id, $anon_id = null) {\n        $this->register(\"distinct_id\", $user_id);\n\n        $UUIDv4 = '/^(\\$device:)?[a-zA-Z0-9]*-[a-zA-Z0-9]*-[a-zA-Z0-9]*-[a-zA-Z0-9]*-[a-zA-Z0-9]*$/i';\n        if (!empty($anon_id)) {\n            if (preg_match($UUIDv4, $anon_id) !== 1) {\n                /* not a valid uuid */\n                error_log(\"Running Identify method (identified_id: $user_id, anon_id: $anon_id) failed, anon_id not in UUID v4 format\");\n            } else {\n                $this->track('$identify', array(\n                    '$identified_id' => $user_id,\n                    '$anon_id'       => $anon_id\n                ));\n            }\n        }\n    }\n\n\n    /**\n     * An alias to be merged with the distinct_id. Each alias can only map to one distinct_id.\n     * This is helpful when you want to associate a generated id (such as a session id) to a user id or username.\n     *\n     * Because aliasing can be extremely vulnerable to race conditions and ordering issues, we'll make a synchronous\n     * call directly to Mixpanel when this method is called. If it fails we'll throw an Exception as subsequent\n     * events are likely to be incorrectly tracked.\n     * @param string|int $distinct_id\n     * @param string|int $alias\n     * @return array $msg\n     * @throws Exception\n     */\n    public function createAlias($distinct_id, $alias) {\n        $msg = array(\n            \"event\"         => '$create_alias',\n            \"properties\"    =>  array(\"distinct_id\" => $distinct_id, \"alias\" => $alias, \"token\" => $this->_token)\n        );\n\n        // Save the current fork/async options\n        $old_fork = isset($this->_options['fork']) ? $this->_options['fork'] : false;\n        $old_async = isset($this->_options['async']) ? $this->_options['async'] : false;\n\n        // Override fork/async to make the new consumer synchronous\n        $this->_options['fork'] = false;\n        $this->_options['async'] = false;\n\n        // The name is ambiguous, but this creates a new consumer with current $this->_options\n        $consumer = $this->_getConsumer();\n        $success = $consumer->persist(array($msg));\n\n        // Restore the original fork/async settings\n        $this->_options['fork'] = $old_fork;\n        $this->_options['async'] = $old_async;\n\n        if (!$success) {\n            error_log(\"Creating Mixpanel Alias (distinct id: $distinct_id, alias: $alias) failed\");\n            throw new Exception(\"Tried to create an alias but the call was not successful\");\n        } else {\n            return $msg;\n        }\n    }\n\n\n    /**\n     * Returns the \"events\" endpoint\n     * @return string\n     */\n    function _getEndpoint() {\n        return $this->_options['events_endpoint'];\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/Base/MixpanelBase.php","ext":"php","size":2106,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * This a Base class which all Mixpanel classes extend from to provide some very basic\n * debugging and logging functionality. It also serves to persist $_options across the library.\n *\n */\nclass WPMedia_Base_MixpanelBase {\n\n\n    /**\n     * Default options that can be overridden via the $options constructor arg\n     * @var array\n     */\n    private $_defaults = array(\n        \"max_batch_size\"    => 50, // the max batch size Mixpanel will accept is 50,\n        \"max_queue_size\"    => 1000, // the max num of items to hold in memory before flushing\n        \"debug\"             => false, // enable/disable debug mode\n        \"consumer\"          => \"curl\", // which consumer to use\n        \"host\"              => \"api.mixpanel.com\", // the host name for api calls\n        \"events_endpoint\"   => \"/track\", // host relative endpoint for events\n        \"people_endpoint\"   => \"/engage\", // host relative endpoint for people updates\n        \"groups_endpoint\"   => \"/groups\", // host relative endpoint for groups updates\n        \"use_ssl\"           => true, // use ssl when available\n        \"error_callback\"    => null // callback to use on consumption failures\n    );\n\n\n    /**\n     * An array of options to be used by the Mixpanel library.\n     * @var array\n     */\n    protected $_options = array();\n\n\n    /**\n     * Construct a new MixpanelBase object and merge custom options with defaults\n     * @param array $options\n     */\n    public function __construct($options = array()) {\n        $options = array_merge($this->_defaults, $options);\n        $this->_options = $options;\n    }\n\n\n    /**\n     * Log a message to PHP's error log\n     * @param $msg\n     */\n    protected function _log($msg) {\n        $arr = debug_backtrace();\n        $class = $arr[0]['class'];\n        $line = $arr[0]['line'];\n        error_log ( \"[ $class - line $line ] : \" . $msg );\n    }\n\n\n    /**\n     * Returns true if in debug mode, false if in production mode\n     * @return bool\n     */\n    protected function _debug() {\n        return isset($this->_options[\"debug\"]) && $this->_options[\"debug\"] == true;\n    }\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/SocketConsumer.php","ext":"php","size":9207,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * Portions of this class were borrowed from\n * https://github.com/segmentio/analytics-php/blob/master/lib/Analytics/Consumer/Socket.php.\n * Thanks for the work!\n *\n * WWWWWW||WWWWWW\n * W W W||W W W\n * ||\n * ( OO )__________\n * /  |           \\\n * /o o|    MIT     \\\n * \\___/||_||__||_|| *\n * || ||  || ||\n * _||_|| _||_||\n * (__|__|(__|__|\n * (The MIT License)\n *\n * Copyright (c) 2013 Segment.io Inc. friends@segment.io\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n * documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the\n * Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\n * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\n * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nrequire_once(dirname(__FILE__) . \"/AbstractConsumer.php\");\n\n/**\n * Consumes messages and writes them to host/endpoint using a persistent socket\n */\nclass WPMedia_ConsumerStrategies_SocketConsumer extends WPMedia_ConsumerStrategies_AbstractConsumer {\n\n    /**\n     * @var string the host to connect to (e.g. api.mixpanel.com)\n     */\n    private $_host;\n\n\n    /**\n     * @var string the host-relative endpoint to write to (e.g. /engage)\n     */\n    private $_endpoint;\n\n\n    /**\n     * @var int connect_timeout the socket connection timeout in seconds\n     */\n    private $_connect_timeout;\n\n\n    /**\n     * @var string the protocol to use for the socket connection\n     */\n    private $_protocol;\n\n\n    /**\n     * @var resource holds the socket resource\n     */\n    private $_socket;\n\n    /**\n     * @var bool whether or not to wait for a response\n     */\n    private $_async;\n\n    /**\n     * @var int the port to use for the socket connection\n     */\n    private $_port;\n\n\n    /**\n     * Creates a new SocketConsumer and assigns properties from the $options array\n     * @param array $options\n     */\n    public function __construct($options = array()) {\n        parent::__construct($options);\n\n\n        $this->_host = $options['host'];\n        $this->_endpoint = $options['endpoint'];\n        $this->_connect_timeout = isset($options['connect_timeout']) ? $options['connect_timeout'] : 5;\n        $this->_async = isset($options['async']) && $options['async'] === false ? false : true;\n\n        if (array_key_exists('use_ssl', $options) && $options['use_ssl'] == true) {\n            $this->_protocol = \"ssl\";\n            $this->_port = 443;\n        } else {\n            $this->_protocol = \"tcp\";\n            $this->_port = 80;\n        }\n    }\n\n\n    /**\n     * Write using a persistent socket connection.\n     * @param array $batch\n     * @return bool\n     */\n    public function persist($batch) {\n\n        $socket = $this->_getSocket();\n        if (!is_resource($socket)) {\n            return false;\n        }\n\n        $data = \"data=\".$this->_encode($batch);\n\n        $body = \"\";\n        $body.= \"POST \".$this->_endpoint.\" HTTP/1.1\\r\\n\";\n        $body.= \"Host: \" . $this->_host . \"\\r\\n\";\n        $body.= \"Content-Type: application/x-www-form-urlencoded\\r\\n\";\n        $body.= \"Accept: application/json\\r\\n\";\n        $body.= \"Content-length: \" . strlen($data) . \"\\r\\n\";\n        $body.= \"\\r\\n\";\n        $body.= $data;\n\n        return $this->_write($socket, $body);\n    }\n\n\n    /**\n     * Return cached socket if open or create a new persistent socket\n     * @return bool|resource\n     */\n    private function _getSocket() {\n        if(is_resource($this->_socket)) {\n\n            if ($this->_debug()) {\n                $this->_log(\"Using existing socket\");\n            }\n\n            return $this->_socket;\n        } else {\n\n            if ($this->_debug()) {\n                $this->_log(\"Creating new socket at \".time());\n            }\n\n            return $this->_createSocket();\n        }\n    }\n\n    /**\n     * Attempt to open a new socket connection, cache it, and return the resource\n     * @param bool $retry\n     * @return bool|resource\n     */\n    private function _createSocket($retry = true) {\n        try {\n            $socket = pfsockopen($this->_protocol . \"://\" . $this->_host, $this->_port, $err_no, $err_msg, $this->_connect_timeout);\n\n            if ($this->_debug()) {\n                $this->_log(\"Opening socket connection to \" . $this->_protocol . \"://\" . $this->_host . \":\" . $this->_port);\n            }\n\n            if ($err_no != 0) {\n                $this->_handleError($err_no, $err_msg);\n                return $retry == true ? $this->_createSocket(false) : false;\n            } else {\n                // cache the socket\n                $this->_socket = $socket;\n                return $socket;\n            }\n\n        } catch (Exception $e) {\n            $this->_handleError($e->getCode(), $e->getMessage());\n            return $retry == true ? $this->_createSocket(false) : false;\n        }\n    }\n\n    /**\n     * Attempt to close and dereference a socket resource\n     */\n    private function _destroySocket() {\n        $socket = $this->_socket;\n        $this->_socket = null;\n        fclose($socket);\n    }\n\n\n    /**\n     * Write $data through the given $socket\n     * @param $socket\n     * @param $data\n     * @param bool $retry\n     * @return bool\n     */\n    private function _write($socket, $data, $retry = true) {\n\n        $bytes_sent = 0;\n        $bytes_total = strlen($data);\n        $socket_closed = false;\n        $success = true;\n        $max_bytes_per_write = 8192;\n\n        // if we have no data to write just return true\n        if ($bytes_total == 0) {\n            return true;\n        }\n\n        // try to write the data\n        while (!$socket_closed && $bytes_sent < $bytes_total) {\n\n            try {\n                $bytes = fwrite($socket, $data, $max_bytes_per_write);\n\n                if ($this->_debug()) {\n                    $this->_log(\"Socket wrote \".$bytes.\" bytes\");\n                }\n\n                // if we actually wrote data, then remove the written portion from $data left to write\n                if ($bytes > 0) {\n                    $data = substr($data, $max_bytes_per_write);\n                }\n\n            } catch (Exception $e) {\n                $this->_handleError($e->getCode(), $e->getMessage());\n                $socket_closed = true;\n            }\n\n            if (isset($bytes) && $bytes) {\n                $bytes_sent += $bytes;\n            } else {\n                $socket_closed = true;\n            }\n        }\n\n        // create a new socket if the current one is closed and retry the message\n        if ($socket_closed) {\n\n            $this->_destroySocket();\n\n            if ($retry) {\n                if ($this->_debug()) {\n                    $this->_log(\"Retrying socket write...\");\n                }\n                $socket = $this->_getSocket();\n                if ($socket) return $this->_write($socket, $data, false);\n            }\n\n            return false;\n        }\n\n\n        // only wait for the response in debug mode or if we explicitly want to be synchronous\n        if ($this->_debug() || !$this->_async) {\n            $res = $this->handleResponse(fread($socket, 2048));\n            if ($res[\"status\"] != \"200\") {\n                $this->_handleError($res[\"status\"], $res[\"body\"]);\n                $success = false;\n            }\n        }\n\n        return $success;\n    }\n\n\n    /**\n     * Parse the response from a socket write (only used for debugging)\n     * @param $response\n     * @return array\n     */\n    private function handleResponse($response) {\n\n        $lines = explode(\"\\n\", $response);\n\n        // extract headers\n        $headers = array();\n        foreach($lines as $line) {\n            $kvsplit = explode(\":\", $line);\n            if (count($kvsplit) == 2) {\n                $header = $kvsplit[0];\n                $value = $kvsplit[1];\n                $headers[$header] = trim($value);\n            }\n\n        }\n\n        // extract status\n        $line_one_exploded = explode(\" \", $lines[0]);\n        $status = $line_one_exploded[1];\n\n        // extract body\n        $body = $lines[count($lines) - 1];\n\n        // if the connection has been closed lets kill the socket\n        if (isset($headers[\"Connection\"]) and $headers['Connection'] == \"close\") {\n            $this->_destroySocket();\n            if ($this->_debug()) {\n                $this->_log(\"Server told us connection closed so lets destroy the socket so it'll reconnect on next call\");\n            }\n        }\n\n        $ret = array(\n            \"status\"  => $status,\n            \"body\" => $body,\n        );\n\n        return $ret;\n    }\n\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/AbstractConsumer.php","ext":"php","size":1637,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Provides some base methods for use by a Consumer implementation\n */\nabstract class WPMedia_ConsumerStrategies_AbstractConsumer extends WPMedia_Base_MixpanelBase {\n\n    /**\n     * Creates a new AbstractConsumer\n     * @param array $options\n     */\n    function __construct($options = array()) {\n\n        parent::__construct($options);\n\n        if ($this->_debug()) {\n            $this->_log(\"Instantiated new Consumer\");\n        }\n\n    }\n\n    /**\n     * Encode an array to be persisted\n     * @param array $params\n     * @return string\n     */\n    protected function _encode($params) {\n        return base64_encode(json_encode($params));\n    }\n\n    /**\n     * Handles errors that occur in a consumer\n     * @param $code\n     * @param $msg\n     */\n    protected function _handleError($code, $msg) {\n        if (isset($this->_options['error_callback'])) {\n            $handler = $this->_options['error_callback'];\n            call_user_func($handler, $code, $msg);\n        }\n\n        if ($this->_debug()) {\n            $arr = debug_backtrace();\n            $class = get_class($arr[0]['object']);\n            $line = $arr[0]['line'];\n            error_log ( \"[ $class - line $line ] : \" . print_r($msg, true) );\n        }\n    }\n\n    /**\n     * Number of requests/batches that will be processed in parallel.\n     * @return int\n     */\n    public function getNumThreads() {\n        return 1;\n    }\n\n    /**\n     * Persist a batch of messages in whatever way the implementer sees fit\n     * @param array $batch an array of messages to consume\n     * @return boolean success or fail\n     */\n    abstract function persist($batch);\n}"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/CurlConsumer.php","ext":"php","size":7118,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Consumes messages and sends them to a host/endpoint using cURL\n */\nclass WPMedia_ConsumerStrategies_CurlConsumer extends WPMedia_ConsumerStrategies_AbstractConsumer {\n\n    /**\n     * @var string the host to connect to (e.g. api.mixpanel.com)\n     */\n    protected $_host;\n\n\n    /**\n     * @var string the host-relative endpoint to write to (e.g. /engage)\n     */\n    protected $_endpoint;\n\n\n    /**\n     * @var int connect_timeout The number of seconds to wait while trying to connect. Default is 5 seconds.\n     */\n    protected $_connect_timeout;\n\n\n    /**\n     * @var int timeout The maximum number of seconds to allow cURL call to execute. Default is 30 seconds.\n     */\n    protected $_timeout;\n\n\n    /**\n     * @var string the protocol to use for the cURL connection\n     */\n    protected $_protocol;\n\n\n    /**\n     * @var bool|null true to fork the cURL process (using exec) or false to use PHP's cURL extension. false by default\n     */\n    protected $_fork = null;\n\n\n    /**\n     * @var int number of cURL requests to run in parallel. 1 by default\n     */\n    protected $_num_threads;\n\n\n    /**\n     * Creates a new CurlConsumer and assigns properties from the $options array\n     * @param array $options\n     * @throws Exception\n     */\n    function __construct($options) {\n        parent::__construct($options);\n\n        $this->_host = $options['host'];\n        $this->_endpoint = $options['endpoint'];\n        $this->_connect_timeout = isset($options['connect_timeout']) ? $options['connect_timeout'] : 5;\n        $this->_timeout = isset($options['timeout']) ? $options['timeout'] : 30;\n        $this->_protocol = isset($options['use_ssl']) && $options['use_ssl'] == true ? \"https\" : \"http\";\n        $this->_fork = isset($options['fork']) ? ($options['fork'] == true) : false;\n        $this->_num_threads = isset($options['num_threads']) ? max(1, intval($options['num_threads'])) : 1;\n\n        // ensure the environment is workable for the given settings\n        if ($this->_fork == true) {\n            $exists = function_exists('exec');\n            if (!$exists) {\n                throw new Exception('The \"exec\" function must exist to use the cURL consumer in \"fork\" mode. Try setting fork = false or use another consumer.');\n            }\n            $disabled = explode(', ', ini_get('disable_functions'));\n            $enabled = !in_array('exec', $disabled);\n            if (!$enabled) {\n                throw new Exception('The \"exec\" function must be enabled to use the cURL consumer in \"fork\" mode. Try setting fork = false or use another consumer.');\n            }\n        } else {\n            if (!function_exists('curl_init')) {\n                throw new Exception('The cURL PHP extension is required to use the cURL consumer with fork = false. Try setting fork = true or use another consumer.');\n            }\n        }\n    }\n\n\n    /**\n     * Write to the given host/endpoint using either a forked cURL process or using PHP's cURL extension\n     * @param array $batch\n     * @return bool\n     */\n    public function persist($batch) {\n        if (count($batch) > 0) {\n            $url = $this->_protocol . \"://\" . $this->_host . $this->_endpoint;\n            if ($this->_fork) {\n                $data = \"data=\" . $this->_encode($batch);\n                return $this->_execute_forked($url, $data);\n            } else {\n                return $this->_execute($url, $batch);\n            }\n        } else {\n            return true;\n        }\n    }\n\n\n    /**\n     * Write using the cURL php extension\n     * @param $url\n     * @param $batch\n     * @return bool\n     */\n    protected function _execute($url, $batch) {\n        if ($this->_debug()) {\n            $this->_log(\"Making blocking cURL call to $url\");\n        }\n\n        $mh = curl_multi_init();\n        $chs = array();\n\n        $batch_size = ceil(count($batch) / $this->_num_threads);\n        for ($i=0; $i<$this->_num_threads && !empty($batch); $i++) {\n            $ch = curl_init();\n            $chs[] = $ch;\n            $data = \"data=\" . $this->_encode(array_splice($batch, 0, $batch_size));\n            curl_setopt($ch, CURLOPT_URL, $url);\n            curl_setopt($ch, CURLOPT_HEADER, 0);\n            curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $this->_connect_timeout);\n            curl_setopt($ch, CURLOPT_TIMEOUT, $this->_timeout);\n            curl_setopt($ch, CURLOPT_POST, 1);\n            curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);\n            curl_multi_add_handle($mh,$ch);\n        }\n\n        $running = 0;\n\n        do {\n            curl_multi_exec($mh, $running);\n            curl_multi_select($mh);\n        } while ($running > 0);\n\n        $info = curl_multi_info_read($mh);\n\n        $error = false;\n        foreach ($chs as $ch) {\n            $response = curl_multi_getcontent($ch);\n            if (false === $response) {\n                $this->_handleError(curl_errno($ch), curl_error($ch));\n                $error = true;\n            }\n            elseif (\"1\" != trim($response)) {\n                $this->_handleError(0, $response);\n                $error = true;\n            }\n            curl_multi_remove_handle($mh, $ch);\n        }\n\n        if (CURLE_OK != $info['result']) {\n            $this->_handleError($info['result'], \"cURL error with code=\".$info['result']);\n            $error = true;\n        }\n\n        curl_multi_close($mh);\n        return !$error;\n    }\n\n\n    /**\n     * Write using a forked cURL process\n     * @param $url\n     * @param $data\n     * @return bool\n     */\n    protected function _execute_forked($url, $data) {\n\n        if ($this->_debug()) {\n            $this->_log(\"Making forked cURL call to $url\");\n        }\n\n        $exec = 'curl -X POST -H \"Content-Type: application/x-www-form-urlencoded\" -d ' . $data . ' \"' . $url . '\"';\n\n        if(!$this->_debug()) {\n            $exec .= \" >/dev/null 2>&1 &\";\n        }\n\n        exec($exec, $output, $return_var);\n\n        if ($return_var != 0) {\n            $this->_handleError($return_var, $output);\n        }\n\n        return $return_var == 0;\n    }\n\n    /**\n     * @return int\n     */\n    public function getConnectTimeout()\n    {\n        return $this->_connect_timeout;\n    }\n\n    /**\n     * @return string\n     */\n    public function getEndpoint()\n    {\n        return $this->_endpoint;\n    }\n\n    /**\n     * @return bool|null\n     */\n    public function getFork()\n    {\n        return $this->_fork;\n    }\n\n    /**\n     * @return string\n     */\n    public function getHost()\n    {\n        return $this->_host;\n    }\n\n    /**\n     * @return array\n     */\n    public function getOptions()\n    {\n        return $this->_options;\n    }\n\n    /**\n     * @return string\n     */\n    public function getProtocol()\n    {\n        return $this->_protocol;\n    }\n\n    /**\n     * @return int\n     */\n    public function getTimeout()\n    {\n        return $this->_timeout;\n    }\n\n\n    /**\n     * Number of requests/batches that will be processed in parallel using curl_multi_exec.\n     * @return int\n     */\n    public function getNumThreads() {\n        return $this->_num_threads;\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Classes/ConsumerStrategies/FileConsumer.php","ext":"php","size":964,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * Consumes messages and writes them to a file\n */\nclass WPMedia_ConsumerStrategies_FileConsumer extends WPMedia_ConsumerStrategies_AbstractConsumer {\n\n    /**\n     * @var string path to a file that we want to write the messages to\n     */\n    private $_file;\n\n\n    /**\n     * Creates a new FileConsumer and assigns properties from the $options array\n     * @param array $options\n     */\n    function __construct($options) {\n        parent::__construct($options);\n\n        // what file to write to?\n        $this->_file = isset($options['file']) ? $options['file'] :  dirname(__FILE__).\"/../../messages.txt\";\n    }\n\n\n    /**\n     * Append $batch to a file\n     * @param array $batch\n     * @return bool\n     */\n    public function persist($batch) {\n        if (count($batch) > 0) {\n            return file_put_contents($this->_file, json_encode($batch).\"\\n\", FILE_APPEND | LOCK_EX) !== false;\n        } else {\n            return true;\n        }\n    }\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/WPConsumer.php","ext":"php","size":1922,"mtime":1757324689,"type":"text","content":"<?php\ndeclare(strict_types=1);\n\nnamespace WPMedia\\Mixpanel;\n\nuse WPMedia_ConsumerStrategies_AbstractConsumer;\n\n/**\n * Consumes messages and sends them to a host/endpoint using WordPress's HTTP API\n */\nclass WPConsumer extends WPMedia_ConsumerStrategies_AbstractConsumer {\n\n\t/**\n\t * The host to connect to (e.g. api.mixpanel.com)\n\t *\n\t * @var string\n\t */\n\tprotected $host;\n\n\t/**\n\t * The host-relative endpoint to write to (e.g. /engage)\n\t *\n\t * @var string\n\t */\n\tprotected $endpoint;\n\n\t/**\n\t * The maximum number of seconds to allow the call to execute. Default is 30 seconds.\n\t *\n\t * @var int\n\t */\n\tprotected $timeout;\n\n\t/**\n\t * The protocol to use for the cURL connection\n\t *\n\t * @var string\n\t */\n\tprotected $protocol;\n\n\t/**\n\t * Creates a new WPConsumer and assigns properties from the $options array\n\t *\n\t * @param array{host:string, endpoint:string, timeout?: int, use_ssl?: bool} $options Options for the consumer.\n\t */\n\tpublic function __construct( $options ) {\n\t\tparent::__construct( $options );\n\n\t\t$this->host     = $options['host'];\n\t\t$this->endpoint = $options['endpoint'];\n\t\t$this->timeout  = isset( $options['timeout'] ) ? $options['timeout'] : 30;\n\t\t$this->protocol = isset( $options['use_ssl'] ) && ( true === $options['use_ssl'] ) ? 'https' : 'http';\n\t}\n\n\t/**\n\t * Send post request to the given host/endpoint using WordPress's HTTP API\n\t *\n\t * @param mixed[] $batch Batch of data to send to mixpanel.\n\t *\n\t * @return bool\n\t */\n\tpublic function persist( $batch ) {\n\t\tif ( count( $batch ) <= 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t$url  = $this->protocol . '://' . $this->host . $this->endpoint;\n\t\t$data = 'data=' . $this->_encode( $batch );\n\n\t\t$response = wp_remote_post(\n\t\t\t$url,\n\t\t\t[\n\t\t\t\t'timeout' => $this->timeout,\n\t\t\t\t'body'    => $data,\n\t\t\t]\n\t\t);\n\n\t\tif ( is_wp_error( $response ) ) {\n\t\t\t$this->_handleError( $response->get_error_code(), $response->get_error_message() );\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/TrackingPlugin.php","ext":"php","size":1898,"mtime":1757324689,"type":"text","content":"<?php\ndeclare(strict_types=1);\n\nnamespace WPMedia\\Mixpanel;\n\nclass TrackingPlugin extends Tracking {\n\t/**\n\t * Plugin name & version\n\t *\n\t * @var string\n\t */\n\tprivate $plugin;\n\n\t/**\n\t * Brand name\n\t *\n\t * @var string\n\t */\n\tprivate $brand;\n\n\t/**\n\t * Application name\n\t *\n\t * @var string\n\t */\n\tprivate $app;\n\n\t/**\n\t * Constructor\n\t *\n\t * @param string $mixpanel_token Mixpanel token.\n\t * @param string $plugin         Plugin name.\n\t * @param string $brand          Brand name.\n\t * @param string $app            Application name.\n\t */\n\tpublic function __construct( string $mixpanel_token, string $plugin, string $brand = '', string $app = '' ) {\n\t\t$options = [\n\t\t\t'consumer'  => 'wp',\n\t\t\t'consumers' => [\n\t\t\t\t'wp' => 'WPMedia\\\\Mixpanel\\\\WPConsumer',\n\t\t\t],\n\t\t];\n\n\t\tparent::__construct( $mixpanel_token, $options );\n\n\t\t$this->plugin = $plugin;\n\t\t$this->brand  = $brand;\n\t\t$this->app    = $app;\n\t}\n\n\t/**\n\t * Track an event in Mixpanel with plugin context\n\t *\n\t * @param string  $event      Event name.\n\t * @param mixed[] $properties Event properties.\n\t */\n\tpublic function track( string $event, array $properties ): void {\n\t\t$host = wp_parse_url( get_home_url(), PHP_URL_HOST );\n\n\t\tif ( ! $host ) {\n\t\t\t$host = '';\n\t\t}\n\n\t\t$defaults = [\n\t\t\t'domain'      => $this->hash( $host ),\n\t\t\t'wp_version'  => $this->get_wp_version(),\n\t\t\t'php_version' => $this->get_php_version(),\n\t\t\t'plugin'      => strtolower( $this->plugin ),\n\t\t\t'brand'       => strtolower( $this->brand ),\n\t\t\t'application' => strtolower( $this->app ),\n\t\t];\n\n\t\t$properties = array_merge( $properties, $defaults );\n\n\t\tparent::track( ucfirst( $event ), $properties );\n\t}\n\n\t/**\n\t * Track opt-in status change in Mixpanel\n\t *\n\t * @param bool $status Opt-in status.\n\t *\n\t * @return void\n\t */\n\tpublic function track_optin( $status ): void {\n\t\t$this->track(\n\t\t\t'WordPress Plugin Data Consent Changed',\n\t\t\t[\n\t\t\t\t'opt_in_status' => $status,\n\t\t\t]\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/wp-media/wp-mixpanel/src/Optin.php","ext":"php","size":1733,"mtime":1757324689,"type":"text","content":"<?php\ndeclare(strict_types=1);\n\nnamespace WPMedia\\Mixpanel;\n\nclass Optin {\n\t/**\n\t * The plugin slug.\n\t *\n\t * @var string\n\t */\n\tprivate $plugin_slug;\n\n\t/**\n\t * The capability required to enable/disable the opt-in.\n\t *\n\t * @var string\n\t */\n\tprivate $capability;\n\n\t/**\n\t * Constructor.\n\t *\n\t * @param string $plugin_slug The plugin slug.\n\t * @param string $capability  The capability required to enable/disable the opt-in.\n\t */\n\tpublic function __construct( string $plugin_slug, string $capability ) {\n\t\t$this->plugin_slug = $plugin_slug;\n\t\t$this->capability  = $capability;\n\t}\n\n\t/**\n\t * Check if the opt-in is enabled.\n\t *\n\t * @return bool True if the opt-in is enabled, false otherwise.\n\t */\n\tpublic function is_enabled(): bool {\n\t\tif ( ! current_user_can( $this->capability ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t$optin = get_option( $this->plugin_slug . '_mixpanel_optin', false );\n\n\t\tif ( ! $optin ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Enable the opt-in.\n\t *\n\t * @return void\n\t */\n\tpublic function enable(): void {\n\t\tif ( $this->is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_option( $this->plugin_slug . '_mixpanel_optin', true );\n\n\t\t/**\n\t\t * Fires when the Mixpanel opt-in status changes to enabled.\n\t\t *\n\t\t * @param bool $status The opt-in status.\n\t\t */\n\t\tdo_action( $this->plugin_slug . '_mixpanel_optin_changed', true );\n\t}\n\n\t/**\n\t * Disable the opt-in.\n\t *\n\t * @return void\n\t */\n\tpublic function disable(): void {\n\t\tif ( ! $this->is_enabled() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete_option( $this->plugin_slug . '_mixpanel_optin' );\n\n\t\t/**\n\t\t * Fires when the Mixpanel opt-in status changes to disabled.\n\t\t *\n\t\t * @param bool $status The opt-in status.\n\t\t */\n\t\tdo_action( $this->plugin_slug . '_mixpanel_optin_changed', false );\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/LICENSE.md","ext":"md","size":1090,"mtime":1757324689,"type":"text","content":"The MIT License\n===============\n\nCopyright (c) 2013 Jesse G. Donat\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/examples/procedural.php","ext":"php","size":396,"mtime":1757324689,"type":"text","content":"<?php\n\n// if you're using composer\nrequire __DIR__ . '/../vendor/autoload.php';\n\n// v0 style global function - @deprecated\n$uaInfo = parse_user_agent();\n// or\n// modern namespaced function\n$uaInfo = donatj\\UserAgent\\parse_user_agent();\n\necho $uaInfo[donatj\\UserAgent\\PLATFORM] . PHP_EOL;\necho $uaInfo[donatj\\UserAgent\\BROWSER] . PHP_EOL;\necho $uaInfo[donatj\\UserAgent\\BROWSER_VERSION] . PHP_EOL;\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/examples/object-oriented.php","ext":"php","size":355,"mtime":1757324689,"type":"text","content":"<?php\n\nuse donatj\\UserAgent\\UserAgentParser;\n\n// if you're using composer\nrequire __DIR__ . '/../vendor/autoload.php';\n\n$parser = new UserAgentParser();\n\n// object-oriented call\n$ua = $parser->parse();\n// or\n// command style invocation\n$ua = $parser();\n\necho $ua->platform() . PHP_EOL;\necho $ua->browser() . PHP_EOL;\necho $ua->browserVersion() . PHP_EOL;\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/.helpers/constants.php","ext":"php","size":366,"mtime":1757324689,"type":"text","content":"<?php\n\nrequire __DIR__ . '/../vendor/autoload.php';\n\n$class = new ReflectionClass($argv[1]);\n\necho \"Predefined helper constants from `{$class->getName()}`\\n\\n\";\n\necho \"| Constant | {$argv[2]} | \\n|----------|----------| \\n\";\n\nforeach( $class->getConstants() as $constant => $value ) {\n\techo \"| `{$class->getShortName()}::{$constant}` |  {$value} | \\n\";\n}\n\necho \"\\n\";"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/src/UserAgent/Platforms.php","ext":"php","size":1348,"mtime":1757324689,"type":"text","content":"<?php\n\n// DO NOT EDIT THIS FILE - IT IS GENERATED BY constant_generator.php\n\nnamespace donatj\\UserAgent;\n\ninterface Platforms {\n\n\tconst MACINTOSH        = 'Macintosh';\n\tconst CHROME_OS        = 'Chrome OS';\n\tconst LINUX            = 'Linux';\n\tconst WINDOWS          = 'Windows';\n\tconst ANDROID          = 'Android';\n\tconst BLACKBERRY       = 'BlackBerry';\n\tconst FREEBSD          = 'FreeBSD';\n\tconst IPAD             = 'iPad';\n\tconst IPHONE           = 'iPhone';\n\tconst IPOD             = 'iPod';\n\tconst KINDLE           = 'Kindle';\n\tconst KINDLE_FIRE      = 'Kindle Fire';\n\tconst NETBSD           = 'NetBSD';\n\tconst NEW_NINTENDO_3DS = 'New Nintendo 3DS';\n\tconst NINTENDO_3DS     = 'Nintendo 3DS';\n\tconst NINTENDO_DS      = 'Nintendo DS';\n\tconst NINTENDO_SWITCH  = 'Nintendo Switch';\n\tconst NINTENDO_WII     = 'Nintendo Wii';\n\tconst NINTENDO_WIIU    = 'Nintendo WiiU';\n\tconst OPENBSD          = 'OpenBSD';\n\tconst PLAYBOOK         = 'PlayBook';\n\tconst PLAYSTATION_3    = 'PlayStation 3';\n\tconst PLAYSTATION_4    = 'PlayStation 4';\n\tconst PLAYSTATION_5    = 'PlayStation 5';\n\tconst PLAYSTATION_VITA = 'PlayStation Vita';\n\tconst SAILFISH         = 'Sailfish';\n\tconst SYMBIAN          = 'Symbian';\n\tconst TIZEN            = 'Tizen';\n\tconst WINDOWS_PHONE    = 'Windows Phone';\n\tconst XBOX             = 'Xbox';\n\tconst XBOX_ONE         = 'Xbox One';\n\n}\n\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/src/UserAgent/Browsers.php","ext":"php","size":2345,"mtime":1757324689,"type":"text","content":"<?php\n\n// DO NOT EDIT THIS FILE - IT IS GENERATED BY constant_generator.php\n\nnamespace donatj\\UserAgent;\n\ninterface Browsers {\n\n\tconst ADSBOT_GOOGLE       = 'AdsBot-Google';\n\tconst ANDROID_BROWSER     = 'Android Browser';\n\tconst APPLEBOT            = 'Applebot';\n\tconst BAIDUSPIDER         = 'Baiduspider';\n\tconst BINGBOT             = 'bingbot';\n\tconst BLACKBERRY_BROWSER  = 'BlackBerry Browser';\n\tconst BROWSER             = 'Browser';\n\tconst BUNJALLOO           = 'Bunjalloo';\n\tconst CAMINO              = 'Camino';\n\tconst CHATGPT_USER        = 'ChatGPT-User';\n\tconst CHROME              = 'Chrome';\n\tconst CURL                = 'curl';\n\tconst EDGE                = 'Edge';\n\tconst FACEBOOKEXTERNALHIT = 'facebookexternalhit';\n\tconst FEEDVALIDATOR       = 'FeedValidator';\n\tconst FIREFOX             = 'Firefox';\n\tconst GOOGLEBOT           = 'Googlebot';\n\tconst GOOGLEBOT_IMAGE     = 'Googlebot-Image';\n\tconst GOOGLEBOT_VIDEO     = 'Googlebot-Video';\n\tconst GPTBOT              = 'GPTBot';\n\tconst HEADLESSCHROME      = 'HeadlessChrome';\n\tconst IEMOBILE            = 'IEMobile';\n\tconst IMESSAGEBOT         = 'iMessageBot';\n\tconst KINDLE              = 'Kindle';\n\tconst LYNX                = 'Lynx';\n\tconst MASTODON            = 'Mastodon';\n\tconst MIDORI              = 'Midori';\n\tconst MIUIBROWSER         = 'MiuiBrowser';\n\tconst MSIE                = 'MSIE';\n\tconst MSNBOT_MEDIA        = 'msnbot-media';\n\tconst NETFRONT            = 'NetFront';\n\tconst NINTENDOBROWSER     = 'NintendoBrowser';\n\tconst OAI_SEARCHBOT       = 'OAI-SearchBot';\n\tconst OCULUSBROWSER       = 'OculusBrowser';\n\tconst OPERA               = 'Opera';\n\tconst PUFFIN              = 'Puffin';\n\tconst SAFARI              = 'Safari';\n\tconst SAILFISHBROWSER     = 'SailfishBrowser';\n\tconst SAMSUNGBROWSER      = 'SamsungBrowser';\n\tconst SILK                = 'Silk';\n\tconst SLACKBOT            = 'Slackbot';\n\tconst TELEGRAMBOT         = 'TelegramBot';\n\tconst TIZENBROWSER        = 'TizenBrowser';\n\tconst TWITTERBOT          = 'Twitterbot';\n\tconst UC_BROWSER          = 'UC Browser';\n\tconst VALVE_STEAM_TENFOOT = 'Valve Steam Tenfoot';\n\tconst VIVALDI             = 'Vivaldi';\n\tconst WGET                = 'Wget';\n\tconst WHALE               = 'Whale';\n\tconst WORDPRESS           = 'WordPress';\n\tconst YANDEX              = 'Yandex';\n\tconst YANDEXBOT           = 'YandexBot';\n\n}\n\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/src/UserAgent/UserAgent.php","ext":"php","size":1071,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace donatj\\UserAgent;\n\nclass UserAgent implements UserAgentInterface {\n\n\t/**\n\t * @var string|null\n\t */\n\tprivate $platform;\n\t/**\n\t * @var string|null\n\t */\n\tprivate $browser;\n\t/**\n\t * @var string|null\n\t */\n\tprivate $browserVersion;\n\n\t/**\n\t * UserAgent constructor.\n\t *\n\t * @param string|null $platform\n\t * @param string|null $browser\n\t * @param string|null $browserVersion\n\t */\n\tpublic function __construct( $platform, $browser, $browserVersion ) {\n\t\t$this->platform       = $platform;\n\t\t$this->browser        = $browser;\n\t\t$this->browserVersion = $browserVersion;\n\t}\n\n\t/**\n\t * @return string|null\n\t * @see \\donatj\\UserAgent\\Platforms for a list of tested platforms\n\t */\n\tpublic function platform() {\n\t\treturn $this->platform;\n\t}\n\n\t/**\n\t * @return string|null\n\t * @see \\donatj\\UserAgent\\Browsers for a list of tested browsers.\n\t */\n\tpublic function browser() {\n\t\treturn $this->browser;\n\t}\n\n\t/**\n\t * The version string. Formatting depends on the browser.\n\t *\n\t * @return string|null\n\t */\n\tpublic function browserVersion() {\n\t\treturn $this->browserVersion;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/src/UserAgent/UserAgentParser.php","ext":"php","size":1153,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace donatj\\UserAgent;\n\nclass UserAgentParser {\n\n\t/**\n\t * Parses a user agent string into its important parts, provide an object\n\t *\n\t * @param string|null $u_agent User agent string to parse or null. Uses $_SERVER['HTTP_USER_AGENT'] on NULL\n\t * @return UserAgent an object with 'browser', 'browserVersion' and 'platform' methods\n\t * @throws \\InvalidArgumentException on not having a proper user agent to parse.\n\t * @see \\donatj\\UserAgent\\parse_user_agent()\n\t *\n\t */\n\tpublic function parse( $u_agent = null ) {\n\t\t$parsed = parse_user_agent($u_agent);\n\n\t\treturn new UserAgent(\n\t\t\t$parsed[PLATFORM],\n\t\t\t$parsed[BROWSER],\n\t\t\t$parsed[BROWSER_VERSION]\n\t\t);\n\t}\n\n\t/**\n\t * Parses a user agent string into its important parts\n\t *\n\t * @param string|null $u_agent User agent string to parse or null. Uses $_SERVER['HTTP_USER_AGENT'] on NULL\n\t * @return UserAgent an object with 'browser', 'browserVersion' and 'platform' methods\n\t * @throws \\InvalidArgumentException on not having a proper user agent to parse.\n\t * @see \\donatj\\UserAgent\\parse_user_agent()\n\t *\n\t */\n\tpublic function __invoke( $u_agent = null ) {\n\t\treturn $this->parse($u_agent);\n\t}\n\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/src/UserAgent/UserAgentInterface.php","ext":"php","size":463,"mtime":1757324689,"type":"text","content":"<?php\n\nnamespace donatj\\UserAgent;\n\ninterface UserAgentInterface {\n\n\t/**\n\t * @return string|null\n\t * @see \\donatj\\UserAgent\\Platforms for a list of tested platforms\n\t */\n\tpublic function platform();\n\n\t/**\n\t * @return string|null\n\t * @see \\donatj\\UserAgent\\Browsers for a list of tested browsers.\n\t */\n\tpublic function browser();\n\n\t/**\n\t * The version string. Formatting depends on the browser.\n\t *\n\t * @return string|null\n\t */\n\tpublic function browserVersion();\n}"},{"base":"plugins","rel":"seo-by-rank-math/vendor/donatj/phpuseragentparser/src/UserAgentParser.php","ext":"php","size":8093,"mtime":1757324689,"type":"text","content":"<?php\n\n/**\n * @author Jesse G. Donat <donatj@gmail.com>\n *\n * @link https://donatstudios.com/PHP-Parser-HTTP_USER_AGENT\n * @link https://github.com/donatj/PhpUserAgent\n *\n * @license MIT https://github.com/donatj/PhpUserAgent/blob/master/LICENSE.md\n */\n\nnamespace {\n\n\t/**\n\t * Parses a user agent string into its important parts\n\t *\n\t * This method is defined for backwards comparability with the old global method.\n\t *\n\t * @param string|null $u_agent User agent string to parse or null. Uses $_SERVER['HTTP_USER_AGENT'] on NULL\n\t * @return string[] an array with 'browser', 'version' and 'platform' keys\n\t * @throws \\InvalidArgumentException on not having a proper user agent to parse.\n\t *\n\t * @deprecated This exists for backwards compatibility with 0.x and will likely be removed in 2.x\n\t * @see \\donatj\\UserAgent\\parse_user_agent\n\t */\n\tfunction parse_user_agent( $u_agent = null ) {\n\t\treturn \\donatj\\UserAgent\\parse_user_agent($u_agent);\n\t}\n}\n\nnamespace donatj\\UserAgent {\n\n\tconst PLATFORM        = 'platform';\n\tconst BROWSER         = 'browser';\n\tconst BROWSER_VERSION = 'version';\n\n\t/**\n\t * Parses a user agent string into its important parts\n\t *\n\t * @param string|null $u_agent User agent string to parse or null. Uses $_SERVER['HTTP_USER_AGENT'] on NULL\n\t * @return string[] an array with 'browser', 'version' and 'platform' keys\n\t * @throws \\InvalidArgumentException on not having a proper user agent to parse.\n\t */\n\tfunction parse_user_agent( $u_agent = null ) {\n\t\tif( $u_agent === null && isset($_SERVER['HTTP_USER_AGENT']) ) {\n\t\t\t$u_agent = (string)$_SERVER['HTTP_USER_AGENT'];\n\t\t}\n\n\t\tif( $u_agent === null ) {\n\t\t\tthrow new \\InvalidArgumentException('parse_user_agent requires a user agent');\n\t\t}\n\n\t\t$platform = null;\n\t\t$browser  = null;\n\t\t$version  = null;\n\n\t\t$return = [ PLATFORM => &$platform, BROWSER => &$browser, BROWSER_VERSION => &$version ];\n\n\t\tif( !$u_agent ) {\n\t\t\treturn $return;\n\t\t}\n\n\t\tif( preg_match('/\\((.*?)\\)/m', $u_agent, $parent_matches) ) {\n\t\t\tpreg_match_all(<<<'REGEX'\n/(?P<platform>BB\\d+;|Android|Adr|Symbian|Sailfish|CrOS|Tizen|iPhone|iPad|iPod|Linux|(?:Open|Net|Free)BSD|Macintosh|\nWindows(?:\\ Phone)?|Silk|linux-gnu|BlackBerry|PlayBook|X11|(?:New\\ )?Nintendo\\ (?:WiiU?|3?DS|Switch)|Xbox(?:\\ One)?)\n(?:\\ [^;]*)?\n(?:;|$)/imx\nREGEX\n\t\t\t\t, $parent_matches[1], $result);\n\n\t\t\t$priority = [ 'Xbox One', 'Xbox', 'Windows Phone', 'Tizen', 'Android', 'FreeBSD', 'NetBSD', 'OpenBSD', 'CrOS', 'X11', 'Sailfish' ];\n\n\t\t\t$result[PLATFORM] = array_unique($result[PLATFORM]);\n\t\t\tif( count($result[PLATFORM]) > 1 ) {\n\t\t\t\tif( $keys = array_intersect($priority, $result[PLATFORM]) ) {\n\t\t\t\t\t$platform = reset($keys);\n\t\t\t\t} else {\n\t\t\t\t\t$platform = $result[PLATFORM][0];\n\t\t\t\t}\n\t\t\t} elseif( isset($result[PLATFORM][0]) ) {\n\t\t\t\t$platform = $result[PLATFORM][0];\n\t\t\t}\n\t\t}\n\n\t\tif( $platform == 'linux-gnu' || $platform == 'X11' ) {\n\t\t\t$platform = 'Linux';\n\t\t} elseif( $platform == 'CrOS' ) {\n\t\t\t$platform = 'Chrome OS';\n\t\t} elseif( $platform == 'Adr' ) {\n\t\t\t$platform = 'Android';\n\t\t} elseif( $platform === null ) {\n\t\t\tif( preg_match_all('%(?P<platform>Android)[:/ ]%ix', $u_agent, $result) ) {\n\t\t\t\t$platform = $result[PLATFORM][0];\n\t\t\t}\n\t\t}\n\n\t\tpreg_match_all(<<<'REGEX'\n%(?P<browser>Camino|Kindle(\\ Fire)?|Firefox|Iceweasel|IceCat|Safari|MSIE|Trident|AppleWebKit|\nTizenBrowser|(?:Headless)?Chrome|YaBrowser|Vivaldi|IEMobile|Opera|OPR|Silk|Midori|(?-i:Edge)|EdgA?|CriOS|UCBrowser|Puffin|\nOculusBrowser|SamsungBrowser|SailfishBrowser|XiaoMi/MiuiBrowser|YaApp_Android|Whale|\nBaiduspider|Applebot|Facebot|Googlebot|YandexBot|bingbot|Lynx|Version|Wget|curl|ChatGPT-User|GPTBot|OAI-SearchBot|\nValve\\ Steam\\ Tenfoot|Mastodon|\nNintendoBrowser|PLAYSTATION\\ (?:\\d|Vita)+)\n\\)?;?\n(?:[:/ ](?P<version>[0-9A-Z.]+)|/[A-Z]*)\n%ix\nREGEX\n\t\t\t, $u_agent, $result);\n\n\t\t// If nothing matched, return null (to avoid undefined index errors)\n\t\tif( !isset($result[BROWSER][0], $result[BROWSER_VERSION][0]) ) {\n\t\t\tif( preg_match('%^(?!Mozilla)(?P<browser>[A-Z0-9\\-]+)([/ :](?P<version>[0-9A-Z.]+))?%ix', $u_agent, $result) ) {\n\t\t\t\treturn [ PLATFORM => $platform ?: null, BROWSER => $result[BROWSER], BROWSER_VERSION => empty($result[BROWSER_VERSION]) ? null : $result[BROWSER_VERSION] ];\n\t\t\t}\n\n\t\t\treturn $return;\n\t\t}\n\n\t\tif( preg_match('/rv:(?P<version>[0-9A-Z.]+)/i', $u_agent, $rv_result) ) {\n\t\t\t$rv_result = $rv_result[BROWSER_VERSION];\n\t\t}\n\n\t\t$browser = $result[BROWSER][0];\n\t\t$version = $result[BROWSER_VERSION][0];\n\n\t\t$lowerBrowser = array_map('strtolower', $result[BROWSER]);\n\n\t\t$find = function( $search, &$key = null, &$value = null ) use ( $lowerBrowser ) {\n\t\t\t$search = (array)$search;\n\n\t\t\tforeach( $search as $val ) {\n\t\t\t\t$xkey = array_search(strtolower($val), $lowerBrowser);\n\t\t\t\tif( $xkey !== false ) {\n\t\t\t\t\t$value = $val;\n\t\t\t\t\t$key   = $xkey;\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t$findT = function( array $search, &$key = null, &$value = null ) use ( $find ) {\n\t\t\t$value2 = null;\n\t\t\tif( $find(array_keys($search), $key, $value2) ) {\n\t\t\t\t$value = $search[$value2];\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t};\n\n\t\t$key = 0;\n\t\t$val = '';\n\t\tif( $findT([ 'OPR' => 'Opera', 'Facebot' => 'iMessageBot', 'UCBrowser' => 'UC Browser', 'YaBrowser' => 'Yandex', 'YaApp_Android' => 'Yandex', 'Iceweasel' => 'Firefox', 'Icecat' => 'Firefox', 'CriOS' => 'Chrome', 'Edg' => 'Edge', 'EdgA' => 'Edge', 'XiaoMi/MiuiBrowser' => 'MiuiBrowser' ], $key, $browser) ) {\n\t\t\t$version = is_numeric(substr($result[BROWSER_VERSION][$key], 0, 1)) ? $result[BROWSER_VERSION][$key] : null;\n\t\t} elseif( $find('Playstation Vita', $key, $platform) ) {\n\t\t\t$platform = 'PlayStation Vita';\n\t\t\t$browser  = 'Browser';\n\t\t} elseif( $find([ 'Kindle Fire', 'Silk' ], $key, $val) ) {\n\t\t\t$browser  = $val == 'Silk' ? 'Silk' : 'Kindle';\n\t\t\t$platform = 'Kindle Fire';\n\t\t\tif( !($version = $result[BROWSER_VERSION][$key]) || !is_numeric($version[0]) ) {\n\t\t\t\t$version = $result[BROWSER_VERSION][array_search('Version', $result[BROWSER])];\n\t\t\t}\n\t\t} elseif( $find('NintendoBrowser', $key) || $platform == 'Nintendo 3DS' ) {\n\t\t\t$browser = 'NintendoBrowser';\n\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t} elseif( $find([ 'Kindle' ], $key, $platform) ) {\n\t\t\t$browser = $result[BROWSER][$key];\n\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t} elseif( $find('Opera', $key, $browser) ) {\n\t\t\t$find('Version', $key);\n\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t} elseif( $find('Puffin', $key, $browser) ) {\n\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t\tif( strlen($version) > 3 ) {\n\t\t\t\t$part = substr($version, -2);\n\t\t\t\tif( ctype_upper($part) ) {\n\t\t\t\t\t$version = substr($version, 0, -2);\n\n\t\t\t\t\t$flags = [ 'IP' => 'iPhone', 'IT' => 'iPad', 'AP' => 'Android', 'AT' => 'Android', 'WP' => 'Windows Phone', 'WT' => 'Windows' ];\n\t\t\t\t\tif( isset($flags[$part]) ) {\n\t\t\t\t\t\t$platform = $flags[$part];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} elseif( $find([ 'Googlebot', 'Applebot', 'IEMobile', 'Edge', 'Midori', 'Whale', 'Vivaldi', 'OculusBrowser', 'SamsungBrowser', 'Valve Steam Tenfoot', 'Chrome', 'HeadlessChrome', 'SailfishBrowser' ], $key, $browser) ) {\n\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t} elseif( $rv_result && $find('Trident') ) {\n\t\t\t$browser = 'MSIE';\n\t\t\t$version = $rv_result;\n\t\t} elseif( $browser == 'AppleWebKit' ) {\n\t\t\tif( $platform == 'Android' ) {\n\t\t\t\t$browser = 'Android Browser';\n\t\t\t} elseif( strpos((string)$platform, 'BB') === 0 ) {\n\t\t\t\t$browser  = 'BlackBerry Browser';\n\t\t\t\t$platform = 'BlackBerry';\n\t\t\t} elseif( $platform == 'BlackBerry' || $platform == 'PlayBook' ) {\n\t\t\t\t$browser = 'BlackBerry Browser';\n\t\t\t} elseif( $find('Safari', $key, $browser) || $find('TizenBrowser', $key, $browser) ) {\n\t\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t\t} elseif( count($result[BROWSER]) ) {\n\t\t\t\t$key     = count($result[BROWSER]) - 1;\n\t\t\t\t$browser = $result[BROWSER][$key];\n\t\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t\t}\n\n\t\t\tif( $find('Version', $key) ) {\n\t\t\t\t$version = $result[BROWSER_VERSION][$key];\n\t\t\t}\n\t\t} elseif( $pKey = preg_grep('/playstation \\d/i', $result[BROWSER]) ) {\n\t\t\t$pKey = reset($pKey);\n\n\t\t\t$platform = 'PlayStation ' . preg_replace('/\\D/', '', $pKey);\n\t\t\t$browser  = 'NetFront';\n\t\t}\n\n\t\treturn $return;\n\t}\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/a5hleyrich/wp-background-processing/wp-background-processing.php","ext":"php","size":744,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * WP-Background Processing\n *\n * @package WP-Background-Processing\n */\n\n/**\n * Plugin Name: WP Background Processing\n * Plugin URI: https://github.com/deliciousbrains/wp-background-processing\n * Description: Asynchronous requests and background processing in WordPress.\n * Author: Delicious Brains Inc.\n * Version: 1.0\n * Author URI: https://deliciousbrains.com/\n * GitHub Plugin URI: https://github.com/deliciousbrains/wp-background-processing\n * GitHub Branch: master\n */\n\nif ( ! class_exists( 'WP_Async_Request' ) ) {\n\trequire_once plugin_dir_path( __FILE__ ) . 'classes/wp-async-request.php';\n}\nif ( ! class_exists( 'WP_Background_Process' ) ) {\n\trequire_once plugin_dir_path( __FILE__ ) . 'classes/wp-background-process.php';\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/a5hleyrich/wp-background-processing/license.txt","ext":"txt","size":15140,"mtime":1757324689,"type":"text","content":"        GNU GENERAL PUBLIC LICENSE\n           Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n              51 Franklin St, Fifth Floor, Boston, MA 02110, USA\n\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n          Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n        GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n          NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n         END OF TERMS AND CONDITIONS"},{"base":"plugins","rel":"seo-by-rank-math/vendor/a5hleyrich/wp-background-processing/classes/wp-async-request.php","ext":"php","size":3881,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * WP Async Request\n *\n * @package WP-Background-Processing\n */\n\n/**\n * Abstract WP_Async_Request class.\n *\n * @abstract\n */\nabstract class WP_Async_Request {\n\n\t/**\n\t * Prefix\n\t *\n\t * (default value: 'wp')\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $prefix = 'wp';\n\n\t/**\n\t * Action\n\t *\n\t * (default value: 'async_request')\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $action = 'async_request';\n\n\t/**\n\t * Identifier\n\t *\n\t * @var mixed\n\t * @access protected\n\t */\n\tprotected $identifier;\n\n\t/**\n\t * Data\n\t *\n\t * (default value: array())\n\t *\n\t * @var array\n\t * @access protected\n\t */\n\tprotected $data = array();\n\n\t/**\n\t * Initiate new async request.\n\t */\n\tpublic function __construct() {\n\t\t$this->identifier = $this->prefix . '_' . $this->action;\n\n\t\tadd_action( 'wp_ajax_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\tadd_action( 'wp_ajax_nopriv_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t}\n\n\t/**\n\t * Set data used during the request.\n\t *\n\t * @param array $data Data.\n\t *\n\t * @return $this\n\t */\n\tpublic function data( $data ) {\n\t\t$this->data = $data;\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Dispatch the async request.\n\t *\n\t * @return array|WP_Error|false HTTP Response array, WP_Error on failure, or false if not attempted.\n\t */\n\tpublic function dispatch() {\n\t\t$url  = add_query_arg( $this->get_query_args(), $this->get_query_url() );\n\t\t$args = $this->get_post_args();\n\n\t\treturn wp_remote_post( esc_url_raw( $url ), $args );\n\t}\n\n\t/**\n\t * Get query args.\n\t *\n\t * @return array\n\t */\n\tprotected function get_query_args() {\n\t\tif ( property_exists( $this, 'query_args' ) ) {\n\t\t\treturn $this->query_args;\n\t\t}\n\n\t\t$args = array(\n\t\t\t'action' => $this->identifier,\n\t\t\t'nonce'  => wp_create_nonce( $this->identifier ),\n\t\t);\n\n\t\t/**\n\t\t * Filters the query arguments used during an async request.\n\t\t *\n\t\t * @param array $args\n\t\t */\n\t\treturn apply_filters( $this->identifier . '_query_args', $args );\n\t}\n\n\t/**\n\t * Get query URL.\n\t *\n\t * @return string\n\t */\n\tprotected function get_query_url() {\n\t\tif ( property_exists( $this, 'query_url' ) ) {\n\t\t\treturn $this->query_url;\n\t\t}\n\n\t\t$url = admin_url( 'admin-ajax.php' );\n\n\t\t/**\n\t\t * Filters the query URL used during an async request.\n\t\t *\n\t\t * @param string $url\n\t\t */\n\t\treturn apply_filters( $this->identifier . '_query_url', $url );\n\t}\n\n\t/**\n\t * Get post args.\n\t *\n\t * @return array\n\t */\n\tprotected function get_post_args() {\n\t\tif ( property_exists( $this, 'post_args' ) ) {\n\t\t\treturn $this->post_args;\n\t\t}\n\n\t\t$args = array(\n\t\t\t'timeout'   => 5,\n\t\t\t'blocking'  => false,\n\t\t\t'body'      => $this->data,\n\t\t\t'cookies'   => $_COOKIE, // Passing cookies ensures request is performed as initiating user.\n\t\t\t'sslverify' => apply_filters( 'https_local_ssl_verify', false ), // Local requests, fine to pass false.\n\t\t);\n\n\t\t/**\n\t\t * Filters the post arguments used during an async request.\n\t\t *\n\t\t * @param array $args\n\t\t */\n\t\treturn apply_filters( $this->identifier . '_post_args', $args );\n\t}\n\n\t/**\n\t * Maybe handle a dispatched request.\n\t *\n\t * Check for correct nonce and pass to handler.\n\t *\n\t * @return void|mixed\n\t */\n\tpublic function maybe_handle() {\n\t\t// Don't lock up other requests while processing.\n\t\tsession_write_close();\n\n\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t$this->handle();\n\n\t\treturn $this->maybe_wp_die();\n\t}\n\n\t/**\n\t * Should the process exit with wp_die?\n\t *\n\t * @param mixed $return What to return if filter says don't die, default is null.\n\t *\n\t * @return void|mixed\n\t */\n\tprotected function maybe_wp_die( $return = null ) {\n\t\t/**\n\t\t * Should wp_die be used?\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\tif ( apply_filters( $this->identifier . '_wp_die', true ) ) {\n\t\t\twp_die();\n\t\t}\n\n\t\treturn $return;\n\t}\n\n\t/**\n\t * Handle a dispatched request.\n\t *\n\t * Override this method to perform any actions required\n\t * during the async request.\n\t */\n\tabstract protected function handle();\n}\n"},{"base":"plugins","rel":"seo-by-rank-math/vendor/a5hleyrich/wp-background-processing/classes/wp-background-process.php","ext":"php","size":23289,"mtime":1757324689,"type":"text","content":"<?php\n/**\n * WP Background Process\n *\n * @package WP-Background-Processing\n */\n\n/**\n * Abstract WP_Background_Process class.\n *\n * @abstract\n * @extends WP_Async_Request\n */\nabstract class WP_Background_Process extends WP_Async_Request {\n\t/**\n\t * The default query arg name used for passing the chain ID to new processes.\n\t */\n\tconst CHAIN_ID_ARG_NAME = 'chain_id';\n\n\t/**\n\t * Unique background process chain ID.\n\t *\n\t * @var string\n\t */\n\tprivate $chain_id;\n\n\t/**\n\t * Action\n\t *\n\t * (default value: 'background_process')\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $action = 'background_process';\n\n\t/**\n\t * Start time of current process.\n\t *\n\t * (default value: 0)\n\t *\n\t * @var int\n\t * @access protected\n\t */\n\tprotected $start_time = 0;\n\n\t/**\n\t * Cron_hook_identifier\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $cron_hook_identifier;\n\n\t/**\n\t * Cron_interval_identifier\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $cron_interval_identifier;\n\n\t/**\n\t * Restrict object instantiation when using unserialize.\n\t *\n\t * @var bool|array\n\t */\n\tprotected $allowed_batch_data_classes = true;\n\n\t/**\n\t * The status set when process is cancelling.\n\t *\n\t * @var int\n\t */\n\tconst STATUS_CANCELLED = 1;\n\n\t/**\n\t * The status set when process is paused or pausing.\n\t *\n\t * @var int;\n\t */\n\tconst STATUS_PAUSED = 2;\n\n\t/**\n\t * Initiate new background process.\n\t *\n\t * @param bool|array $allowed_batch_data_classes Optional. Array of class names that can be unserialized. Default true (any class).\n\t */\n\tpublic function __construct( $allowed_batch_data_classes = true ) {\n\t\tparent::__construct();\n\n\t\tif ( empty( $allowed_batch_data_classes ) && false !== $allowed_batch_data_classes ) {\n\t\t\t$allowed_batch_data_classes = true;\n\t\t}\n\n\t\tif ( ! is_bool( $allowed_batch_data_classes ) && ! is_array( $allowed_batch_data_classes ) ) {\n\t\t\t$allowed_batch_data_classes = true;\n\t\t}\n\n\t\t// If allowed_batch_data_classes property set in subclass,\n\t\t// only apply override if not allowing any class.\n\t\tif ( true === $this->allowed_batch_data_classes || true !== $allowed_batch_data_classes ) {\n\t\t\t$this->allowed_batch_data_classes = $allowed_batch_data_classes;\n\t\t}\n\n\t\t$this->cron_hook_identifier     = $this->identifier . '_cron';\n\t\t$this->cron_interval_identifier = $this->identifier . '_cron_interval';\n\n\t\tadd_action( $this->cron_hook_identifier, array( $this, 'handle_cron_healthcheck' ) );\n\t\tadd_filter( 'cron_schedules', array( $this, 'schedule_cron_healthcheck' ) );\n\n\t\t// Ensure dispatch query args included extra data.\n\t\tadd_filter( $this->identifier . '_query_args', array( $this, 'filter_dispatch_query_args' ) );\n\t}\n\n\t/**\n\t * Schedule the cron healthcheck and dispatch an async request to start processing the queue.\n\t *\n\t * @access public\n\t * @return array|WP_Error|false HTTP Response array, WP_Error on failure, or false if not attempted.\n\t */\n\tpublic function dispatch() {\n\t\tif ( $this->is_processing() ) {\n\t\t\t// Process already running.\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t * Filter fired before background process dispatches its next process.\n\t\t *\n\t\t * @param bool   $cancel   Should the dispatch be cancelled? Default false.\n\t\t * @param string $chain_id The background process chain ID.\n\t\t */\n\t\t$cancel = apply_filters( $this->identifier . '_pre_dispatch', false, $this->get_chain_id() );\n\n\t\tif ( $cancel ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Schedule the cron healthcheck.\n\t\t$this->schedule_event();\n\n\t\t// Perform remote post.\n\t\treturn parent::dispatch();\n\t}\n\n\t/**\n\t * Push to the queue.\n\t *\n\t * Note, save must be called in order to persist queued items to a batch for processing.\n\t *\n\t * @param mixed $data Data.\n\t *\n\t * @return $this\n\t */\n\tpublic function push_to_queue( $data ) {\n\t\t$this->data[] = $data;\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Save the queued items for future processing.\n\t *\n\t * @return $this\n\t */\n\tpublic function save() {\n\t\t$key = $this->generate_key();\n\n\t\tif ( ! empty( $this->data ) ) {\n\t\t\tupdate_site_option( $key, $this->data );\n\t\t}\n\n\t\t// Clean out data so that new data isn't prepended with closed session's data.\n\t\t$this->data = array();\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Update a batch's queued items.\n\t *\n\t * @param string $key  Key.\n\t * @param array  $data Data.\n\t *\n\t * @return $this\n\t */\n\tpublic function update( $key, $data ) {\n\t\tif ( ! empty( $data ) ) {\n\t\t\tupdate_site_option( $key, $data );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Delete a batch of queued items.\n\t *\n\t * @param string $key Key.\n\t *\n\t * @return $this\n\t */\n\tpublic function delete( $key ) {\n\t\tdelete_site_option( $key );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Delete entire job queue.\n\t */\n\tpublic function delete_all() {\n\t\t$batches = $this->get_batches();\n\n\t\tforeach ( $batches as $batch ) {\n\t\t\t$this->delete( $batch->key );\n\t\t}\n\n\t\tdelete_site_option( $this->get_status_key() );\n\n\t\t$this->cancelled();\n\t}\n\n\t/**\n\t * Cancel job on next batch.\n\t */\n\tpublic function cancel() {\n\t\tupdate_site_option( $this->get_status_key(), self::STATUS_CANCELLED );\n\n\t\t// Just in case the job was paused at the time.\n\t\t$this->dispatch();\n\t}\n\n\t/**\n\t * Has the process been cancelled?\n\t *\n\t * @return bool\n\t */\n\tpublic function is_cancelled() {\n\t\treturn $this->get_status() === self::STATUS_CANCELLED;\n\t}\n\n\t/**\n\t * Called when background process has been cancelled.\n\t */\n\tprotected function cancelled() {\n\t\tdo_action( $this->identifier . '_cancelled', $this->get_chain_id() );\n\t}\n\n\t/**\n\t * Pause job on next batch.\n\t */\n\tpublic function pause() {\n\t\tupdate_site_option( $this->get_status_key(), self::STATUS_PAUSED );\n\t}\n\n\t/**\n\t * Has the process been paused?\n\t *\n\t * @return bool\n\t */\n\tpublic function is_paused() {\n\t\treturn $this->get_status() === self::STATUS_PAUSED;\n\t}\n\n\t/**\n\t * Called when background process has been paused.\n\t */\n\tprotected function paused() {\n\t\tdo_action( $this->identifier . '_paused', $this->get_chain_id() );\n\t}\n\n\t/**\n\t * Resume job.\n\t */\n\tpublic function resume() {\n\t\tdelete_site_option( $this->get_status_key() );\n\n\t\t$this->schedule_event();\n\t\t$this->dispatch();\n\t\t$this->resumed();\n\t}\n\n\t/**\n\t * Called when background process has been resumed.\n\t */\n\tprotected function resumed() {\n\t\tdo_action( $this->identifier . '_resumed', $this->get_chain_id() );\n\t}\n\n\t/**\n\t * Is queued?\n\t *\n\t * @return bool\n\t */\n\tpublic function is_queued() {\n\t\treturn ! $this->is_queue_empty();\n\t}\n\n\t/**\n\t * Is the tool currently active, e.g. starting, working, paused or cleaning up?\n\t *\n\t * @return bool\n\t */\n\tpublic function is_active() {\n\t\treturn $this->is_queued() || $this->is_processing() || $this->is_paused() || $this->is_cancelled();\n\t}\n\n\t/**\n\t * Generate key for a batch.\n\t *\n\t * Generates a unique key based on microtime. Queue items are\n\t * given a unique key so that they can be merged upon save.\n\t *\n\t * @param int    $length Optional max length to trim key to, defaults to 64 characters.\n\t * @param string $key    Optional string to append to identifier before hash, defaults to \"batch\".\n\t *\n\t * @return string\n\t */\n\tprotected function generate_key( $length = 64, $key = 'batch' ) {\n\t\t$unique  = md5( microtime() . wp_rand() );\n\t\t$prepend = $this->identifier . '_' . $key . '_';\n\n\t\treturn substr( $prepend . $unique, 0, $length );\n\t}\n\n\t/**\n\t * Get the status key.\n\t *\n\t * @return string\n\t */\n\tprotected function get_status_key() {\n\t\treturn $this->identifier . '_status';\n\t}\n\n\t/**\n\t * Get the status value for the process.\n\t *\n\t * @return int\n\t */\n\tprotected function get_status() {\n\t\tglobal $wpdb;\n\n\t\tif ( is_multisite() ) {\n\t\t\t$status = $wpdb->get_var(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT meta_value FROM $wpdb->sitemeta WHERE meta_key = %s AND site_id = %d LIMIT 1\",\n\t\t\t\t\t$this->get_status_key(),\n\t\t\t\t\tget_current_network_id()\n\t\t\t\t)\n\t\t\t);\n\t\t} else {\n\t\t\t$status = $wpdb->get_var(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"SELECT option_value FROM $wpdb->options WHERE option_name = %s LIMIT 1\",\n\t\t\t\t\t$this->get_status_key()\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn absint( $status );\n\t}\n\n\t/**\n\t * Maybe process a batch of queued items.\n\t *\n\t * Checks whether data exists within the queue and that\n\t * the process is not already running.\n\t */\n\tpublic function maybe_handle() {\n\t\t// Don't lock up other requests while processing.\n\t\tsession_write_close();\n\n\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t// Background process already running.\n\t\tif ( $this->is_processing() ) {\n\t\t\treturn $this->maybe_wp_die();\n\t\t}\n\n\t\t// Cancel requested.\n\t\tif ( $this->is_cancelled() ) {\n\t\t\t$this->clear_scheduled_event();\n\t\t\t$this->delete_all();\n\n\t\t\treturn $this->maybe_wp_die();\n\t\t}\n\n\t\t// Pause requested.\n\t\tif ( $this->is_paused() ) {\n\t\t\t$this->clear_scheduled_event();\n\t\t\t$this->paused();\n\n\t\t\treturn $this->maybe_wp_die();\n\t\t}\n\n\t\t// No data to process.\n\t\tif ( $this->is_queue_empty() ) {\n\t\t\treturn $this->maybe_wp_die();\n\t\t}\n\n\t\t$this->handle();\n\n\t\treturn $this->maybe_wp_die();\n\t}\n\n\t/**\n\t * Is queue empty?\n\t *\n\t * @return bool\n\t */\n\tprotected function is_queue_empty() {\n\t\treturn empty( $this->get_batch() );\n\t}\n\n\t/**\n\t * Is process running?\n\t *\n\t * Check whether the current process is already running\n\t * in a background process.\n\t *\n\t * @return bool\n\t *\n\t * @deprecated 1.1.0 Superseded.\n\t * @see        is_processing()\n\t */\n\tprotected function is_process_running() {\n\t\treturn $this->is_processing();\n\t}\n\n\t/**\n\t * Is the background process currently running?\n\t *\n\t * @return bool\n\t */\n\tpublic function is_processing() {\n\t\tif ( get_site_transient( $this->identifier . '_process_lock' ) ) {\n\t\t\t// Process already running.\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Lock process.\n\t *\n\t * Lock the process so that multiple instances can't run simultaneously.\n\t * Override if applicable, but the duration should be greater than that\n\t * defined in the time_exceeded() method.\n\t *\n\t * @param bool $reset_start_time Optional, default true.\n\t */\n\tpublic function lock_process( $reset_start_time = true ) {\n\t\tif ( $reset_start_time ) {\n\t\t\t$this->start_time = time(); // Set start time of current process.\n\t\t}\n\n\t\t$lock_duration = ( property_exists( $this, 'queue_lock_time' ) ) ? $this->queue_lock_time : 60; // 1 minute\n\t\t$lock_duration = apply_filters( $this->identifier . '_queue_lock_time', $lock_duration );\n\n\t\t$microtime = microtime();\n\t\t$locked    = set_site_transient( $this->identifier . '_process_lock', $microtime, $lock_duration );\n\n\t\t/**\n\t\t * Action to note whether the background process managed to create its lock.\n\t\t *\n\t\t * The lock is used to signify that a process is running a task and no other\n\t\t * process should be allowed to run the same task until the lock is released.\n\t\t *\n\t\t * @param bool   $locked        Whether the lock was successfully created.\n\t\t * @param string $microtime     Microtime string value used for the lock.\n\t\t * @param int    $lock_duration Max number of seconds that the lock will live for.\n\t\t * @param string $chain_id      Current background process chain ID.\n\t\t */\n\t\tdo_action(\n\t\t\t$this->identifier . '_process_locked',\n\t\t\t$locked,\n\t\t\t$microtime,\n\t\t\t$lock_duration,\n\t\t\t$this->get_chain_id()\n\t\t);\n\t}\n\n\t/**\n\t * Unlock process.\n\t *\n\t * Unlock the process so that other instances can spawn.\n\t *\n\t * @return $this\n\t */\n\tprotected function unlock_process() {\n\t\t$unlocked = delete_site_transient( $this->identifier . '_process_lock' );\n\n\t\t/**\n\t\t * Action to note whether the background process managed to release its lock.\n\t\t *\n\t\t * The lock is used to signify that a process is running a task and no other\n\t\t * process should be allowed to run the same task until the lock is released.\n\t\t *\n\t\t * @param bool   $unlocked Whether the lock was released.\n\t\t * @param string $chain_id Current background process chain ID.\n\t\t */\n\t\tdo_action( $this->identifier . '_process_unlocked', $unlocked, $this->get_chain_id() );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Get batch.\n\t *\n\t * @return stdClass Return the first batch of queued items.\n\t */\n\tprotected function get_batch() {\n\t\treturn array_reduce(\n\t\t\t$this->get_batches( 1 ),\n\t\t\tstatic function ( $carry, $batch ) {\n\t\t\t\treturn $batch;\n\t\t\t},\n\t\t\tarray()\n\t\t);\n\t}\n\n\t/**\n\t * Get batches.\n\t *\n\t * @param int $limit Number of batches to return, defaults to all.\n\t *\n\t * @return array of stdClass\n\t */\n\tpublic function get_batches( $limit = 0 ) {\n\t\tglobal $wpdb;\n\n\t\tif ( empty( $limit ) || ! is_int( $limit ) ) {\n\t\t\t$limit = 0;\n\t\t}\n\n\t\t$table        = $wpdb->options;\n\t\t$column       = 'option_name';\n\t\t$key_column   = 'option_id';\n\t\t$value_column = 'option_value';\n\n\t\tif ( is_multisite() ) {\n\t\t\t$table        = $wpdb->sitemeta;\n\t\t\t$column       = 'meta_key';\n\t\t\t$key_column   = 'meta_id';\n\t\t\t$value_column = 'meta_value';\n\t\t}\n\n\t\t$key = $wpdb->esc_like( $this->identifier . '_batch_' ) . '%';\n\n\t\t$sql = '\n\t\t\tSELECT *\n\t\t\tFROM ' . $table . '\n\t\t\tWHERE ' . $column . ' LIKE %s\n\t\t\tORDER BY ' . $key_column . ' ASC\n\t\t\t';\n\n\t\t$args = array( $key );\n\n\t\tif ( ! empty( $limit ) ) {\n\t\t\t$sql .= ' LIMIT %d';\n\n\t\t\t$args[] = $limit;\n\t\t}\n\n\t\t$items = $wpdb->get_results(\n\t\t\t$wpdb->prepare(\n\t\t\t\t$sql, // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t\t\t$args\n\t\t\t)\n\t\t);\n\n\t\t$batches = array();\n\n\t\tif ( ! empty( $items ) ) {\n\t\t\t$allowed_classes = $this->allowed_batch_data_classes;\n\n\t\t\t$batches = array_map(\n\t\t\t\tstatic function ( $item ) use ( $column, $value_column, $allowed_classes ) {\n\t\t\t\t\t$batch       = new stdClass();\n\t\t\t\t\t$batch->key  = $item->{$column};\n\t\t\t\t\t$batch->data = static::maybe_unserialize( $item->{$value_column}, $allowed_classes );\n\n\t\t\t\t\treturn $batch;\n\t\t\t\t},\n\t\t\t\t$items\n\t\t\t);\n\t\t}\n\n\t\treturn $batches;\n\t}\n\n\t/**\n\t * Handle a dispatched request.\n\t *\n\t * Pass each queue item to the task handler, while remaining\n\t * within server memory and time limit constraints.\n\t */\n\tprotected function handle() {\n\t\t$this->lock_process();\n\n\t\t/**\n\t\t * Number of seconds to sleep between batches. Defaults to 0 seconds, minimum 0.\n\t\t *\n\t\t * @param int $seconds\n\t\t */\n\t\t$throttle_seconds = max(\n\t\t\t0,\n\t\t\tapply_filters(\n\t\t\t\t$this->identifier . '_seconds_between_batches',\n\t\t\t\tapply_filters(\n\t\t\t\t\t$this->prefix . '_seconds_between_batches',\n\t\t\t\t\t0\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\t\tdo {\n\t\t\t$batch = $this->get_batch();\n\n\t\t\tforeach ( $batch->data as $key => $value ) {\n\t\t\t\t$task = $this->task( $value );\n\n\t\t\t\tif ( false !== $task ) {\n\t\t\t\t\t$batch->data[ $key ] = $task;\n\t\t\t\t} else {\n\t\t\t\t\tunset( $batch->data[ $key ] );\n\t\t\t\t}\n\n\t\t\t\t// Keep the batch up to date while processing it.\n\t\t\t\tif ( ! empty( $batch->data ) ) {\n\t\t\t\t\t$this->update( $batch->key, $batch->data );\n\t\t\t\t}\n\n\t\t\t\t// Let the server breathe a little.\n\t\t\t\tsleep( $throttle_seconds );\n\n\t\t\t\t// Batch limits reached, or pause or cancel requested.\n\t\t\t\tif ( ! $this->should_continue() ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Delete current batch if fully processed.\n\t\t\tif ( empty( $batch->data ) ) {\n\t\t\t\t$this->delete( $batch->key );\n\t\t\t}\n\t\t} while ( ! $this->is_queue_empty() && $this->should_continue() );\n\n\t\t$this->unlock_process();\n\n\t\t// Start next batch or complete process.\n\t\tif ( ! $this->is_queue_empty() ) {\n\t\t\t$this->dispatch();\n\t\t} else {\n\t\t\t$this->complete();\n\t\t}\n\n\t\treturn $this->maybe_wp_die();\n\t}\n\n\t/**\n\t * Memory exceeded?\n\t *\n\t * Ensures the batch process never exceeds 90%\n\t * of the maximum WordPress memory.\n\t *\n\t * @return bool\n\t */\n\tprotected function memory_exceeded() {\n\t\t$memory_limit   = $this->get_memory_limit() * 0.9; // 90% of max memory\n\t\t$current_memory = memory_get_usage( true );\n\t\t$return         = false;\n\n\t\tif ( $current_memory >= $memory_limit ) {\n\t\t\t$return = true;\n\t\t}\n\n\t\treturn apply_filters( $this->identifier . '_memory_exceeded', $return );\n\t}\n\n\t/**\n\t * Get memory limit in bytes.\n\t *\n\t * @return int\n\t */\n\tprotected function get_memory_limit() {\n\t\tif ( function_exists( 'ini_get' ) ) {\n\t\t\t$memory_limit = ini_get( 'memory_limit' );\n\t\t} else {\n\t\t\t// Sensible default.\n\t\t\t$memory_limit = '128M';\n\t\t}\n\n\t\tif ( ! $memory_limit || -1 === intval( $memory_limit ) ) {\n\t\t\t// Unlimited, set to 32GB.\n\t\t\t$memory_limit = '32000M';\n\t\t}\n\n\t\treturn wp_convert_hr_to_bytes( $memory_limit );\n\t}\n\n\t/**\n\t * Time limit exceeded?\n\t *\n\t * Ensures the batch never exceeds a sensible time limit.\n\t * A timeout limit of 30s is common on shared hosting.\n\t *\n\t * @return bool\n\t */\n\tprotected function time_exceeded() {\n\t\t$finish = $this->start_time + apply_filters( $this->identifier . '_default_time_limit', 20 ); // 20 seconds\n\t\t$return = false;\n\n\t\tif ( time() >= $finish ) {\n\t\t\t$return = true;\n\t\t}\n\n\t\treturn apply_filters( $this->identifier . '_time_exceeded', $return );\n\t}\n\n\t/**\n\t * Complete processing.\n\t *\n\t * Override if applicable, but ensure that the below actions are\n\t * performed, or, call parent::complete().\n\t */\n\tprotected function complete() {\n\t\tdelete_site_option( $this->get_status_key() );\n\n\t\t// Remove the cron healthcheck job from the cron schedule.\n\t\t$this->clear_scheduled_event();\n\n\t\t$this->completed();\n\t}\n\n\t/**\n\t * Called when background process has completed.\n\t */\n\tprotected function completed() {\n\t\tdo_action( $this->identifier . '_completed', $this->get_chain_id() );\n\t}\n\n\t/**\n\t * Get the cron healthcheck interval in minutes.\n\t *\n\t * Default is 5 minutes, minimum is 1 minute.\n\t *\n\t * @return int\n\t */\n\tpublic function get_cron_interval() {\n\t\t$interval = 5;\n\n\t\tif ( property_exists( $this, 'cron_interval' ) ) {\n\t\t\t$interval = $this->cron_interval;\n\t\t}\n\n\t\t$interval = apply_filters( $this->cron_interval_identifier, $interval );\n\n\t\treturn is_int( $interval ) && 0 < $interval ? $interval : 5;\n\t}\n\n\t/**\n\t * Schedule the cron healthcheck job.\n\t *\n\t * @access public\n\t *\n\t * @param mixed $schedules Schedules.\n\t *\n\t * @return mixed\n\t */\n\tpublic function schedule_cron_healthcheck( $schedules ) {\n\t\t$interval = $this->get_cron_interval();\n\n\t\tif ( 1 === $interval ) {\n\t\t\t$display = __( 'Every Minute' );\n\t\t} else {\n\t\t\t$display = sprintf( __( 'Every %d Minutes' ), $interval );\n\t\t}\n\n\t\t// Adds an \"Every NNN Minute(s)\" schedule to the existing cron schedules.\n\t\t$schedules[ $this->cron_interval_identifier ] = array(\n\t\t\t'interval' => MINUTE_IN_SECONDS * $interval,\n\t\t\t'display'  => $display,\n\t\t);\n\n\t\treturn $schedules;\n\t}\n\n\t/**\n\t * Handle cron healthcheck event.\n\t *\n\t * Restart the background process if not already running\n\t * and data exists in the queue.\n\t */\n\tpublic function handle_cron_healthcheck() {\n\t\tif ( $this->is_processing() ) {\n\t\t\t// Background process already running.\n\t\t\texit;\n\t\t}\n\n\t\tif ( $this->is_queue_empty() ) {\n\t\t\t// No data to process.\n\t\t\t$this->clear_scheduled_event();\n\t\t\texit;\n\t\t}\n\n\t\t$this->dispatch();\n\t}\n\n\t/**\n\t * Schedule the cron healthcheck event.\n\t */\n\tprotected function schedule_event() {\n\t\tif ( ! wp_next_scheduled( $this->cron_hook_identifier ) ) {\n\t\t\twp_schedule_event(\n\t\t\t\ttime() + ( $this->get_cron_interval() * MINUTE_IN_SECONDS ),\n\t\t\t\t$this->cron_interval_identifier,\n\t\t\t\t$this->cron_hook_identifier\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Clear scheduled cron healthcheck event.\n\t */\n\tprotected function clear_scheduled_event() {\n\t\t$timestamp = wp_next_scheduled( $this->cron_hook_identifier );\n\n\t\tif ( $timestamp ) {\n\t\t\twp_unschedule_event( $timestamp, $this->cron_hook_identifier );\n\t\t}\n\t}\n\n\t/**\n\t * Cancel the background process.\n\t *\n\t * Stop processing queue items, clear cron job and delete batch.\n\t *\n\t * @deprecated 1.1.0 Superseded.\n\t * @see        cancel()\n\t */\n\tpublic function cancel_process() {\n\t\t$this->cancel();\n\t}\n\n\t/**\n\t * Perform task with queued item.\n\t *\n\t * Override this method to perform any actions required on each\n\t * queue item. Return the modified item for further processing\n\t * in the next pass through. Or, return false to remove the\n\t * item from the queue.\n\t *\n\t * @param mixed $item Queue item to iterate over.\n\t *\n\t * @return mixed\n\t */\n\tabstract protected function task( $item );\n\n\t/**\n\t * Maybe unserialize data, but not if an object.\n\t *\n\t * @param mixed      $data            Data to be unserialized.\n\t * @param bool|array $allowed_classes Array of class names that can be unserialized.\n\t *\n\t * @return mixed\n\t */\n\tprotected static function maybe_unserialize( $data, $allowed_classes ) {\n\t\tif ( is_serialized( $data ) ) {\n\t\t\t$options = array();\n\t\t\tif ( is_bool( $allowed_classes ) || is_array( $allowed_classes ) ) {\n\t\t\t\t$options['allowed_classes'] = $allowed_classes;\n\t\t\t}\n\n\t\t\treturn @unserialize( $data, $options ); // @phpcs:ignore\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t/**\n\t * Should any processing continue?\n\t *\n\t * @return bool\n\t */\n\tpublic function should_continue() {\n\t\t/**\n\t\t * Filter whether the current background process should continue running the task\n\t\t * if there is data to be processed.\n\t\t *\n\t\t * If the processing time or memory limits have been exceeded, the value will be false.\n\t\t * If pause or cancel have been requested, the value will be false.\n\t\t *\n\t\t * It is very unlikely that you would want to override a false value with true.\n\t\t *\n\t\t * If false is returned here, it does not necessarily mean background processing is\n\t\t * complete. If there is batch data still to be processed and pause or cancel have not\n\t\t * been requested, it simply means this background process should spawn a new process\n\t\t * for the chain to continue processing and then close itself down.\n\t\t *\n\t\t * @param bool   $continue Should the current process continue processing the task?\n\t\t * @param string $chain_id The current background process chain's ID.\n\t\t *\n\t\t * @return bool\n\t\t */\n\t\treturn apply_filters(\n\t\t\t$this->identifier . '_should_continue',\n\t\t\t! ( $this->time_exceeded() || $this->memory_exceeded() || $this->is_paused() || $this->is_cancelled() ),\n\t\t\t$this->get_chain_id()\n\t\t);\n\t}\n\n\t/**\n\t * Get the string used to identify this type of background process.\n\t *\n\t * @return string\n\t */\n\tpublic function get_identifier() {\n\t\treturn $this->identifier;\n\t}\n\n\t/**\n\t * Return the current background process chain's ID.\n\t *\n\t * If the chain's ID hasn't been set before this function is first used,\n\t * and hasn't been passed as a query arg during dispatch,\n\t * the chain ID will be generated before being returned.\n\t *\n\t * @return string\n\t */\n\tpublic function get_chain_id() {\n\t\tif ( empty( $this->chain_id ) && wp_doing_ajax() ) {\n\t\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t\tif ( ! empty( $_GET[ $this->get_chain_id_arg_name() ] ) ) {\n\t\t\t\t$chain_id = sanitize_key( $_GET[ $this->get_chain_id_arg_name() ] );\n\n\t\t\t\tif ( wp_is_uuid( $chain_id ) ) {\n\t\t\t\t\t$this->chain_id = $chain_id;\n\n\t\t\t\t\treturn $this->chain_id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $this->chain_id ) ) {\n\t\t\t$this->chain_id = wp_generate_uuid4();\n\t\t}\n\n\t\treturn $this->chain_id;\n\t}\n\n\t/**\n\t * Filters the query arguments used during an async request.\n\t *\n\t * @param array $args Current query args.\n\t *\n\t * @return array\n\t */\n\tpublic function filter_dispatch_query_args( $args ) {\n\t\t$args[ $this->get_chain_id_arg_name() ] = $this->get_chain_id();\n\n\t\treturn $args;\n\t}\n\n\t/**\n\t * Get the query arg name used for passing the chain ID to new processes.\n\t *\n\t * @return string\n\t */\n\tprivate function get_chain_id_arg_name() {\n\t\tstatic $chain_id_arg_name;\n\n\t\tif ( ! empty( $chain_id_arg_name ) ) {\n\t\t\treturn $chain_id_arg_name;\n\t\t}\n\n\t\t/**\n\t\t * Filter the query arg name used for passing the chain ID to new processes.\n\t\t *\n\t\t * If you encounter problems with using the default query arg name, you can\n\t\t * change it with this filter.\n\t\t *\n\t\t * @param string $chain_id_arg_name Default \"chain_id\".\n\t\t *\n\t\t * @return string\n\t\t */\n\t\t$chain_id_arg_name = apply_filters( $this->identifier . '_chain_id_arg_name', self::CHAIN_ID_ARG_NAME );\n\n\t\tif ( ! is_string( $chain_id_arg_name ) || empty( $chain_id_arg_name ) ) {\n\t\t\t$chain_id_arg_name = self::CHAIN_ID_ARG_NAME;\n\t\t}\n\n\t\treturn $chain_id_arg_name;\n\t}\n}\n"},{"base":"plugins","rel":"wtp-config-probe/readme.txt","ext":"txt","size":79,"mtime":1757312769,"type":"text","content":"WTP Config Probe – safe wp-config lines, .htaccess sections, redirect tests.\n"},{"base":"plugins","rel":"wtp-config-probe/wtp-config-probe.php","ext":"php","size":4304,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * Plugin Name: WTP Config Probe\n * Description: Podgląd bezpiecznych linii wp-config.php i sekcji .htaccess (WP + nasze reguły) + test przykładowych redirectów.\n * Version: 1.0.0\n * Author: WeekTopPick\n * License: GPLv2 or later\n */\nif ( ! defined('ABSPATH') ) exit;\n\nadd_action('admin_menu', function(){\n    add_menu_page('WTP Config Probe','WTP Config','manage_options','wtp-config-probe','wtp_config_page','dashicons-admin-tools',61);\n});\n\nfunction wtp_safe_wp_config_lines(){\n    $file = ABSPATH . 'wp-config.php';\n    if ( ! file_exists($file) ) return ['error'=>'wp-config.php not found'];\n    $lines = @file($file, FILE_IGNORE_NEW_LINES);\n    if ( ! $lines ) return ['error'=>'cannot read wp-config.php'];\n    $allowed = ['WP_ENV','WP_DEBUG','WP_DEBUG_LOG','SAVEQUERIES','DISABLE_WP_CRON','WP_MEMORY_LIMIT','WP_MAX_MEMORY_LIMIT'];\n    $out = [];\n    foreach($lines as $ln){\n        if ( preg_match('/define\\(\\s*\\'(.*?)\\'\\s*,\\s*(.*?)\\)/', $ln, $m) ) {\n            $const = $m[1];\n            if ( in_array($const, $allowed, true) ) $out[] = trim($ln);\n        }\n    }\n    return $out;\n}\n\nfunction wtp_htaccess_sections(){\n    $file = ABSPATH . '.htaccess';\n    if ( ! file_exists($file) ) return ['error'=>'.htaccess not found'];\n    $txt = @file_get_contents($file);\n    if ( $txt === false ) return ['error'=>'cannot read .htaccess'];\n    $blocks = [];\n    if ( preg_match('/# BEGIN WordPress[\\s\\S]*?# END WordPress/', $txt, $m) ) $blocks['wordpress'] = $m[0];\n    if ( preg_match('/# BEGIN WTP[\\s\\S]*?# END WTP/', $txt, $m) ) $blocks['wtp'] = $m[0];\n    return $blocks ?: ['info'=>'no known sections found'];\n}\n\nfunction wtp_test_redirects($samples){\n    $res = [];\n    foreach($samples as $path){\n        $url = home_url($path);\n        $r = wp_remote_get($url, ['timeout'=>8, 'redirection'=>10]);\n        if ( is_wp_error($r) ) { $res[] = ['path'=>$path,'status'=>0,'error'=>$r->get_error_message()]; continue; }\n        $res[] = [\n            'path'=>$path,\n            'status'=> wp_remote_retrieve_response_code($r),\n            'final'=> wp_remote_retrieve_header($r,'x-final-url') ?: $url\n        ];\n    }\n    return $res;\n}\n\nfunction wtp_config_page(){\n    if ( ! current_user_can('manage_options') ) return;\n    $samples = isset($_POST['wtp_samples']) ? array_filter(array_map('trim', explode(\"\\n\", wp_unslash($_POST['wtp_samples'])))) : ['/','/pl/','/sitemap_index.xml','/category/fashion/','/nieistnieje/'];\n    $tested = [];\n    if ( isset($_POST['wtp_run']) ) $tested = wtp_test_redirects($samples);\n    echo '<div class=\"wrap\"><h1>WTP Config Probe</h1><style>\n.wrap .wtp-card{background:#fff;border:1px solid #ccd0d4;border-radius:8px;padding:16px;margin:12px 0;box-shadow:0 1px 2px rgba(0,0,0,.04);}\n.wrap .wtp-row{display:flex;gap:12px;flex-wrap:wrap}\n.wrap .wtp-col{flex:1 1 320px}\n.wtp-btn{display:block;width:100%;padding:12px 16px;font-size:16px;text-align:center;border-radius:6px;border:1px solid #2271b1;background:#2271b1;color:#fff;text-decoration:none;cursor:pointer}\n.wtp-btn.secondary{background:#f6f7f7;color:#1d2327;border-color:#8c8f94}\n.wtp-status{font-size:18px;margin-top:8px}\n.wtp-ok{color:#1f7a1f;font-weight:600}\n.wtp-bad{color:#b11f1f;font-weight:600}\n.wtp-pre{background:#f6f7f7;padding:12px;border-radius:6px;max-height:380px;overflow:auto}\n.wtp-badge{display:inline-block;padding:2px 8px;border-radius:999px;background:#f0f0f1;border:1px solid #dcdcde;margin-left:8px}\n@media (max-width:782px){ .wtp-btn{font-size:17px;padding:14px 18px} }\n</style>';\n    echo '<div class=\"wtp-card\"><h2>.htaccess</h2><pre class=\"wtp-pre\">'.esc_html( print_r(wtp_htaccess_sections(), true) ).'</pre></div>';\n    echo '<div class=\"wtp-card\"><h2>wp-config.php (bezpieczne linie)</h2><pre class=\"wtp-pre\">'.esc_html( print_r(wtp_safe_wp_config_lines(), true) ).'</pre></div>';\n    echo '<div class=\"wtp-card\"><h2>Test redirectów</h2>';\n    echo '<form method=\"post\"><textarea name=\"wtp_samples\" style=\"width:100%;height:120px;\">'.esc_textarea(implode(\"\\n\",$samples)).'</textarea><p><button class=\"wtp-btn\" name=\"wtp_run\" value=\"1\">Sprawdź reguły redirect</button></p></form>';\n    if ($tested) echo '<pre class=\"wtp-pre\">'.esc_html(json_encode($tested, JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES|JSON_UNESCAPED_UNICODE)).'</pre>';\n    echo '</div></div>';\n}\n"},{"base":"plugins","rel":"wtp-health-check/admin.js","ext":"js","size":3542,"mtime":1757312769,"type":"text","content":"(function(){\n  const $=(s)=>document.querySelector(s);\n  function setStatus(m){$('#wtp-status').textContent=m||'';}\n  async function callHealth(method='POST'){\n    const opt={method,headers:{'X-WP-Nonce':WTPHealth.nonce}};\n    if(method==='POST'){opt.headers['Content-Type']='application/json'; opt.body='{}';}\n    const res=await fetch(WTPHealth.restHealth,opt);\n    if(!res.ok){throw new Error('REST '+res.status+': '+await res.text());}\n    return res.json();\n  }\n  async function getHistory(){\n    const res=await fetch(WTPHealth.restHistory,{headers:{'X-WP-Nonce':WTPHealth.nonce}});\n    if(!res.ok){throw new Error('REST '+res.status+': '+await res.text());}\n    return res.json();\n  }\n  function row(k,v,isOk=true){const tr=document.createElement('tr');tr.innerHTML=`<th>${esc(k)}</th><td class=\"${isOk?'ok':'fail'}\">${esc(v||'')}</td>`;return tr;}\n  function render(res){\n    const sum=$('#wtp-summary');sum.classList.remove('bad');sum.style.display='block';\n    sum.textContent=`Diagnoza wykonana. Build: ${esc(res.build||'')} · run_id: ${esc(res.run_id)} · ${res.duration_ms||0} ms · risk ${res.risk_score}`;\n    const tbodyC=$('#wtp-core');tbodyC.innerHTML='';(res.core||[]).forEach(c=>tbodyC.appendChild(row(c.name,c.note,c.ok)));\n    const tbodyP=$('#wtp-plugins');tbodyP.innerHTML='';(res.plugins||[]).forEach(p=>tbodyP.appendChild(row(p.name,p.note,p.ok)));\n    const tbodyL=$('#wtp-locks');tbodyL.innerHTML='';(res.locks||[]).forEach(l=>tbodyL.appendChild(row(l.name,l.note,l.ok)));\n    const sys=$('#wtp-system');sys.innerHTML='';Object.keys(res.system||{}).forEach(k=>sys.appendChild(row(k,res.system[k],true)));\n    const tbodyU=$('#wtp-urls');tbodyU.innerHTML='';(res.urls||[]).forEach(u=>{\n      const tr=document.createElement('tr');tr.innerHTML=`<td><code>${esc(u.url)}</code></td><td class=\"${u.ok?'ok':'fail'}\">${u.status}</td><td>${u.time_ms??''}</td><td>${esc(u.note||'')}</td>`;tbodyU.appendChild(tr);});\n    if(res.url_note)$('#wtp-url-note').textContent=res.url_note;\n    $('#wtp-sections').classList.remove('hidden');\n    if(res.history){paintHistory(res.history);} else {loadHistory();}\n  }\n  function paintHistory(hist){\n    const tbody=$('#wtp-history');tbody.innerHTML='';\n    (hist||[]).forEach(h=>{\n      const tr=document.createElement('tr');\n      tr.innerHTML=`<td>${esc(h.time)}</td><td class=\"${h.ok?'ok':'fail'}\">${h.ok?'OK':'Fail'}</td><td>${esc(h.risk)}</td><td>${esc(h.note||'')}</td>`;\n      tbody.appendChild(tr);\n    });\n  }\n  async function loadHistory(){\n    try{paintHistory(await getHistory());}catch(e){console.error(e);}\n  }\n  function esc(s){return String(s||'').replace(/[&<>\"']/g,m=>({'&':'&amp;','<':'&lt;','>':'&gt;','\"':'&quot;'}[m]));}\n  async function run(){setStatus('Uruchamiam…');try{const data=await callHealth('POST');render(data);setStatus('Gotowe.');}catch(e){alert(e.message||e);setStatus('Błąd.');}}\n  async function downloadJson(){\n    try{\n      const data=await callHealth('GET');\n      const blob=new Blob([JSON.stringify(data,null,2)],{type:'application/json;charset=utf-8'});\n      const url=URL.createObjectURL(blob);\n      const a=document.createElement('a');a.href=url;a.download='wtp-health-'+Date.now()+'.json';a.click();URL.revokeObjectURL(url);\n      if(data.history){paintHistory(data.history);} else {loadHistory();}\n    }catch(e){alert(e.message||e);}\n  }\n  document.addEventListener('DOMContentLoaded',()=>{\n    $('#wtp-run').addEventListener('click',run);\n    $('#wtp-json').addEventListener('click',downloadJson);\n    loadHistory();\n  });\n})();"},{"base":"plugins","rel":"wtp-health-check/admin.css","ext":"css","size":556,"mtime":1757312769,"type":"text","content":".wtp-health .panel{margin:10px 0;}\n.wtp-health .build{font-size:12px;opacity:.7;margin-left:6px;}\n.wtp-health .status{margin-left:10px;opacity:.8;}\n.wtp-health .summary{margin-top:8px;padding:10px;border-left:4px solid #46b450;background:#f6fff5;display:none;}\n.wtp-health .summary.bad{border-color:#b32d2e;background:#fff5f5;}\n.wtp-health .sections.hidden{display:none;}\n.wtp-health td.ok{color:#25821b;font-weight:600;}\n.wtp-health td.fail{color:#b32d2e;font-weight:600;}\n@media(max-width:782px){.wtp-health table.widefat td:nth-child(3){display:none;}}\n"},{"base":"plugins","rel":"wtp-health-check/readme.txt","ext":"txt","size":414,"mtime":1757312769,"type":"text","content":"WTP Health Check v2.6.0\n========================\nNOWOŚĆ: PUSH do Make.com\n- Ustawienia → wpisz Webhook URL, opcjonalny sekret (HMAC)\n- Włącz „Aktywne” + zaznacz kiedy wysyłać: po teście i/lub po cronie\n- Wysyłamy JSON pełnego raportu (manual) lub heartbeat (cron)\n\nW JSON nadal: run_id, generated_at, build, duration_ms, risk_score, thresholds, violations, core/plugins/locks/system, urls, history.\n"},{"base":"plugins","rel":"wtp-health-check/wtp-health-check.php","ext":"php","size":18345,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * Plugin Name: WTP Health Check\n * Description: Autopilot with JSON export, history (10), hourly cron. Agent-ready with run_id, duration_ms, risk_score, thresholds, violations + PUSH webhook to Make.\n * Version: 2.6.0\n * Author: WeekTopPick Autopilot\n * License: GPLv2 or later\n */\n\nif ( ! defined( 'ABSPATH' ) ) exit;\n\nclass WTP_Health_Check {\n    const SLUG         = 'wtp-health-check';\n    const CAP          = 'manage_options';\n    const REST_NS      = 'wtp/v1';\n    const REST_HEALTH  = '/health';\n    const REST_HISTORY = '/health-history';\n    const CRON_HOOK    = 'wtp_health_watchdog_event';\n    const OPTION_KEY   = 'wtp_health_history';\n    const OPTS_KEY     = 'wtp_health_opts';\n    const BUILD        = '2.6.0';\n\n    public function __construct() {\n        add_action('admin_menu', [$this, 'admin_menu']);\n        add_action('admin_enqueue_scripts', [$this, 'enqueue']);\n        add_action('rest_api_init', [$this, 'register_rest']);\n        register_activation_hook(__FILE__, [$this, 'on_activate']);\n        register_deactivation_hook(__FILE__, [$this, 'on_deactivate']);\n        add_action(self::CRON_HOOK, [$this, 'cron_watchdog']);\n    }\n\n    public function on_activate() {\n        if ( ! wp_next_scheduled(self::CRON_HOOK) ) {\n            wp_schedule_event(time() + 300, 'hourly', self::CRON_HOOK);\n        }\n        // default options\n        $opts = get_option(self::OPTS_KEY, []);\n        if (!is_array($opts)) $opts=[];\n        $defaults = ['webhook_url'=>'','webhook_secret'=>'','webhook_enabled'=>false,'push_on_cron'=>true,'push_on_manual'=>true];\n        update_option(self::OPTS_KEY, array_merge($defaults, $opts), false);\n    }\n\n    public function on_deactivate() {\n        $ts = wp_next_scheduled(self::CRON_HOOK);\n        if ($ts) wp_unschedule_event($ts, self::CRON_HOOK);\n    }\n\n    public function admin_menu() {\n        add_menu_page('WTP Health Check','WTP Health Check', self::CAP, self::SLUG, [$this, 'render_page'],'dashicons-heart',55);\n        add_submenu_page(self::SLUG, 'Ustawienia webhook', 'Ustawienia', self::CAP, self::SLUG.'-settings', [$this,'render_settings']);\n    }\n\n    public function enqueue($hook) {\n        if ($hook !== 'toplevel_page_' . self::SLUG) return;\n        $ver = self::BUILD;\n        wp_enqueue_style(self::SLUG, plugins_url('admin.css', __FILE__), [], $ver);\n        wp_enqueue_script(self::SLUG, plugins_url('admin.js', __FILE__), ['wp-api-fetch'], $ver, true);\n        wp_localize_script(self::SLUG, 'WTPHealth', [\n            'restHealth'  => esc_url_raw( rest_url( self::REST_NS . self::REST_HEALTH ) ),\n            'restHistory' => esc_url_raw( rest_url( self::REST_NS . self::REST_HISTORY ) ),\n            'nonce'       => wp_create_nonce('wp_rest'),\n            'home'        => home_url('/'),\n            'build'       => $ver,\n        ]);\n    }\n\n    public function render_page() { ?>\n        <div class=\"wrap wtp-health\">\n            <h1>WTP Health Check <small class=\"build\">build <?php echo esc_html(self::BUILD); ?></small></h1>\n            <p class=\"desc\">Autopilot: Core + Plugins + LOCKS + System. URL diagnostics optional. JSON export + history. Agent‑ready + PUSH webhook.</p>\n\n            <div class=\"panel\">\n                <a href=\"<?php echo admin_url('admin.php?page='.self::SLUG.'-settings');?>\" class=\"button\">Ustawienia</a>\n                <button id=\"wtp-run\" class=\"button button-primary\">Uruchom testy</button>\n                <button id=\"wtp-json\" class=\"button\">Download JSON</button>\n                <span id=\"wtp-status\" class=\"status\"></span>\n                <div id=\"wtp-summary\" class=\"summary\"></div>\n            </div>\n\n            <div id=\"wtp-sections\" class=\"sections hidden\">\n                <h2>Core</h2><table class=\"widefat fixed striped\"><tbody id=\"wtp-core\"></tbody></table>\n                <h2>Wtyczki / Motyw</h2><table class=\"widefat fixed striped\"><tbody id=\"wtp-plugins\"></tbody></table>\n                <h2>LOCKS</h2><table class=\"widefat fixed striped\"><tbody id=\"wtp-locks\"></tbody></table>\n                <h2>System</h2><table class=\"widefat fixed striped\"><tbody id=\"wtp-system\"></tbody></table>\n                <h2>Diagnostyka URL (opcjonalna)</h2>\n                <div id=\"wtp-url-note\">Sekcja działa tylko jeśli aktywna jest wtyczka WTP URL Tester.</div>\n                <table class=\"widefat fixed striped\"><thead><tr>\n                    <th>URL</th><th>Status</th><th>Czas (ms)</th><th>Uwagi</th></tr></thead>\n                    <tbody id=\"wtp-urls\"></tbody>\n                </table>\n                <h2>Historia (ostatnie 10)</h2>\n                <table class=\"widefat fixed striped\"><thead><tr><th>Czas</th><th>Status</th><th>Risk</th><th>Uwagi</th></tr></thead><tbody id=\"wtp-history\"></tbody></table>\n            </div>\n\n            <p class=\"help\">Watchdog: co godzinę sprawdza <code>/</code> i <code>/robots.txt</code>. Jeśli ≠200 → e‑mail do administratora.</p>\n        </div>\n    <?php }\n\n    public function render_settings(){\n        if (!current_user_can(self::CAP)) return;\n        $opts = get_option(self::OPTS_KEY, []);\n        if ($_SERVER['REQUEST_METHOD']==='POST' && check_admin_referer('wtp_health_opts')){\n            $opts['webhook_url']   = esc_url_raw($_POST['webhook_url'] ?? '');\n            $opts['webhook_secret']= sanitize_text_field($_POST['webhook_secret'] ?? '');\n            $opts['webhook_enabled']= isset($_POST['webhook_enabled']);\n            $opts['push_on_cron']   = isset($_POST['push_on_cron']);\n            $opts['push_on_manual'] = isset($_POST['push_on_manual']);\n            update_option(self::OPTS_KEY,$opts,false);\n            echo '<div class=\"updated notice\"><p>Zapisano ustawienia.</p></div>';\n        }\n        ?>\n        <div class=\"wrap\">\n            <h1>WTP Health – Ustawienia webhook (PUSH do Make)</h1>\n            <form method=\"post\">\n                <?php wp_nonce_field('wtp_health_opts'); ?>\n                <table class=\"form-table\">\n                    <tr><th scope=\"row\">Webhook URL (Make.com → Webhooks → Custom webhook)</th>\n                        <td><input type=\"url\" name=\"webhook_url\" value=\"<?php echo esc_attr($opts['webhook_url'] ?? '');?>\" class=\"regular-text\" style=\"width: 60%;\">\n                            <p class=\"description\">Np. https://hook.eu1.make.com/XXXXXXXX</p></td></tr>\n                    <tr><th scope=\"row\">Sekret (opcjonalny HMAC-SHA256)</th>\n                        <td><input type=\"text\" name=\"webhook_secret\" value=\"<?php echo esc_attr($opts['webhook_secret'] ?? '');?>\" class=\"regular-text\">\n                            <p class=\"description\">Jeśli ustawisz, do żądania dodamy nagłówek X-WTP-Signature.</p></td></tr>\n                    <tr><th scope=\"row\">Wysyłka PUSH</th>\n                        <td>\n                            <label><input type=\"checkbox\" name=\"webhook_enabled\" <?php checked(!empty($opts['webhook_enabled']));?>> Aktywne</label><br>\n                            <label><input type=\"checkbox\" name=\"push_on_manual\" <?php checked(!empty($opts['push_on_manual']));?>> Wysyłaj po ręcznym teście</label><br>\n                            <label><input type=\"checkbox\" name=\"push_on_cron\" <?php checked(!empty($opts['push_on_cron']));?>> Wysyłaj po cronie (co godzinę)</label>\n                        </td></tr>\n                </table>\n                <p><button class=\"button button-primary\">Zapisz</button></p>\n            </form>\n        </div>\n        <?php\n    }\n\n    public function register_rest() {\n        register_rest_route(self::REST_NS, self::REST_HEALTH, [\n            'methods'  => ['POST','GET'],\n            'callback' => [$this, 'rest_run_health'],\n            'permission_callback' => function() { return current_user_can(self::CAP); }\n        ]);\n        register_rest_route(self::REST_NS, self::REST_HISTORY, [\n            'methods'  => 'GET',\n            'callback' => [$this, 'rest_history'],\n            'permission_callback' => function() { return current_user_can(self::CAP); }\n        ]);\n    }\n\n    private function thresholds() {\n        return ['home_max_ms'=>1000,'robots_max_ms'=>1000];\n    }\n\n    private function core_checks() {\n        $rows=[];\n        try {\n            $rest_root = rest_url();\n            $rows[]=['name'=>'REST API dostępne','ok'=>!empty($rest_root),'note'=>$rest_root];\n\n            $uploads = wp_get_upload_dir();\n            $writable=false; $note=$uploads['basedir'];\n            if ( function_exists('wp_is_writable_path') ) {\n                $writable = wp_is_writable_path($uploads['basedir']);\n            } else {\n                $writable = is_writable($uploads['basedir']);\n                $note .= ' (fallback)';\n            }\n            $rows[]=['name'=>'Katalog uploadów zapisywalny','ok'=>$writable,'note'=>$note];\n\n            $permalinks = get_option('permalink_structure') ? 'pretty' : 'plain';\n            $rows[]=['name'=>'Permalinki','ok'=>true,'note'=>$permalinks];\n\n            $tz = get_option('timezone_string') ?: 'UTC';\n            $rows[]=['name'=>'Strefa czasowa','ok'=>true,'note'=>$tz];\n        } catch (\\Throwable $e) {\n            $rows[]=['name'=>'Core check error','ok'=>false,'note'=>$e->getMessage()];\n        }\n        return $rows;\n    }\n\n    private function plugins_checks() {\n        $rows=[];\n        try {\n            $active = (array) get_option('active_plugins', []);\n            $count = count($active);\n            $theme = wp_get_theme();\n            $rows[]=['name'=>'Aktywne wtyczki','ok'=>true,'note'=> (string)$count];\n            $rows[]=['name'=>'Motyw','ok'=>true,'note'=> $theme->get('Name').' '.$theme->get('Version')];\n        } catch (\\Throwable $e) {\n            $rows[]=['name'=>'Plugins check error','ok'=>false,'note'=>$e->getMessage()];\n        }\n        return $rows;\n    }\n\n    private function locks_checks() {\n        $rows=[];\n        try {\n            $multilang_on = false; $seo_sitemaps = false;\n            $rows[]=['name'=>'Multilang Core','ok'=>$multilang_on,'note'=>$multilang_on?'ON':'OFF (plan)'];\n            $rows[]=['name'=>'SEO Sitemaps','ok'=>$seo_sitemaps,'note'=>$seo_sitemaps?'ON':'OFF (plan)'];\n        } catch (\\Throwable $e) {\n            $rows[]=['name'=>'Locks check error','ok'=>false,'note'=>$e->getMessage()];\n        }\n        return $rows;\n    }\n\n    private function system_snapshot() {\n        $rows=[];\n        try {\n            global $wpdb;\n            $rows=[\n                'wp_version'=> get_bloginfo('version'),\n                'php_version'=> PHP_VERSION,\n                'theme'=> wp_get_theme()->get('Name') . ' ' . wp_get_theme()->get('Version'),\n                'home_url'=> home_url('/'),\n                'site_url'=> site_url('/'),\n                'memory_limit'=> defined('WP_MEMORY_LIMIT')?WP_MEMORY_LIMIT:'',\n                'debug'=> (defined('WP_DEBUG') && WP_DEBUG) ? 'on' : 'off',\n                'db_server'=> method_exists($wpdb,'db_version')? $wpdb->db_version() : ''\n            ];\n        } catch (\\Throwable $e) {\n            $rows=['system_error'=>$e->getMessage()];\n        }\n        return $rows;\n    }\n\n    private function call_url_tester_safe($urls) {\n        try {\n            if ( ! function_exists('rest_do_request') ) return ['error'=>'REST dispatch not available'];\n            $request = new \\WP_REST_Request('POST', '/wtp/v1/urltester');\n            $request->set_param('urls', array_values($urls));\n            $response = rest_do_request($request);\n            $code = $response->get_status();\n            if ($code !== 200) return ['error'=>'URL Tester returned '.$code];\n            return $response->get_data();\n        } catch (\\Throwable $e) {\n            return ['error'=>$e->getMessage()];\n        }\n    }\n\n    private function evaluate_urls($results, $th) {\n        $eval = []; $viol=[];\n        foreach ($results as $r) {\n            $path = parse_url($r['final_url'], PHP_URL_PATH) ?? '';\n            $status = intval($r['status']); $time = intval($r['time_ms']);\n            $ok=false; $note='';\n            if ($path==='/'||$path===''){\n                $ok=($status===200&&$time<$th['home_max_ms']); $note=$ok?'OK':('Wymagane 200 i <'.$th['home_max_ms'].'ms');\n                if (!$ok) $viol[]=['url'=>$r['final_url'],'expect'=>'200 & <'.$th['home_max_ms'].'ms','got'=>\"$status/$time\"];\n            } elseif($path==='/robots.txt'){\n                $ok=($status===200&&$time<$th['robots_max_ms']); $note=$ok?'OK':('Wymagane 200 i <'.$th['robots_max_ms'].'ms');\n                if (!$ok) $viol[]=['url'=>$r['final_url'],'expect'=>'200 & <'.$th['robots_max_ms'].'ms','got'=>\"$status/$time\"];\n            } elseif($path==='/pl/'){\n                $ok=($status===404); $note=$ok?'404 oczekiwane (Multilang OFF)':'Oczekiwane 404 (Multilang OFF)';\n                if (!$ok) $viol[]=['url'=>$r['final_url'],'expect'=>'404','got'=>\"$status\"];\n            } elseif($path==='/sitemap_index.xml'){\n                $ok=($status===404); $note=$ok?'404 oczekiwane (SEO OFF)':'Oczekiwane 404 (SEO OFF)';\n                if (!$ok) $viol[]=['url'=>$r['final_url'],'expect'=>'404','got'=>\"$status\"];\n            } else {\n                $ok=($status===200); $note=$ok?'OK':'Wymagane 200';\n                if (!$ok) $viol[]=['url'=>$r['final_url'],'expect'=>'200','got'=>\"$status\"];\n            }\n            $eval[]=['url'=>$r['final_url'],'status'=>$status,'time_ms'=>$time,'ok'=>$ok,'note'=>$note];\n        }\n        return [$eval,$viol];\n    }\n\n    private function calc_risk_score($data) {\n        $score = 100;\n        foreach (['core','plugins','locks'] as $sec) {\n            foreach ($data[$sec] as $row) { if (empty($row['ok'])) { $score -= 10; } }\n        }\n        foreach ($data['urls'] as $u) { if (empty($u['ok'])) { $score -= 10; } }\n        if ($score < 0) $score = 0;\n        return $score;\n    }\n\n    private function load_opts(){ $o=get_option(self::OPTS_KEY,[]); return is_array($o)?$o:[]; }\n    private function load_history(){ $h=get_option(self::OPTION_KEY,[]); return is_array($h)?$h:[]; }\n    private function save_history($entry){\n        $history=$this->load_history();\n        array_unshift($history,$entry);\n        $history=array_slice($history,0,10);\n        update_option(self::OPTION_KEY,$history,false);\n        return $history;\n    }\n\n    private function push_webhook($payload,$reason='manual'){\n        $opts=$this->load_opts();\n        if(empty($opts['webhook_enabled']) || empty($opts['webhook_url'])) return false;\n        $args=['body'=>wp_json_encode($payload),'headers'=>['Content-Type'=>'application/json','X-WTP-Reason'=>$reason],'timeout'=>10];\n        if(!empty($opts['webhook_secret'])){\n            $sig=hash_hmac('sha256',$args['body'],$opts['webhook_secret']);\n            $args['headers']['X-WTP-Signature']=$sig;\n        }\n        $resp=wp_remote_post($opts['webhook_url'],$args);\n        return !is_wp_error($resp) ? wp_remote_retrieve_response_code($resp) : false;\n    }\n\n    public function rest_run_health(\\WP_REST_Request $req) {\n        $start = microtime(true);\n        $run_id = wp_generate_uuid4();\n        $th = $this->thresholds();\n\n        $data=[\n            'run_id'=> $run_id,\n            'generated_at'=>gmdate('c'),\n            'site'=>home_url('/'),\n            'build'=> self::BUILD,\n            'thresholds'=> $th,\n            'core'=>$this->core_checks(),\n            'plugins'=>$this->plugins_checks(),\n            'locks'=>$this->locks_checks(),\n            'system'=>$this->system_snapshot(),\n            'urls'=>[],\n            'violations'=>[],\n            'url_note'=>'Brak wyników – wtyczka URL Tester nieaktywna',\n            'ok'=>true\n        ];\n        try {\n            $tester=$this->call_url_tester_safe(['/', '/pl/', '/sitemap_index.xml', '/robots.txt']);\n            if(isset($tester['results'])){\n                list($urls,$viol)=$this->evaluate_urls($tester['results'],$th);\n                $data['urls']=$urls; $data['violations']=array_merge($data['violations'],$viol);\n                $data['url_note']='Dane z WTP URL Tester';\n            } elseif(isset($tester['error'])){\n                $data['url_note']='⚠️ '.$tester['error'];\n            }\n        } catch (\\Throwable $e) {\n            $data['url_note']='⚠️ Exception: '.$e->getMessage();\n        }\n        $data['risk_score']=$this->calc_risk_score($data);\n        $data['duration_ms']= intval( (microtime(true)-$start)*1000 );\n\n        $entry=[ 'time'=>$data['generated_at'],'run_id'=>$run_id,'ok'=>$data['ok'],'risk'=>$data['risk_score'],'note'=>$data['url_note'] ];\n        $history=$this->save_history($entry);\n        $data['history']=$history;\n\n        // PUSH (manual trigger)\n        $o=$this->load_opts();\n        if(!empty($o['push_on_manual'])){ $this->push_webhook($data,'manual'); }\n\n        return $data;\n    }\n\n    public function rest_history(\\WP_REST_Request $req){ return $this->load_history(); }\n\n    public function cron_watchdog() {\n        $tester=$this->call_url_tester_safe(['/', '/robots.txt']);\n        $bad=[];\n        if(isset($tester['results'])){\n            foreach($tester['results'] as $r){\n                $path=parse_url($r['final_url'],PHP_URL_PATH)??'';\n                $status=intval($r['status']);\n                if(($path==='/'||$path==='/robots.txt')&&$status!==200){ $bad[]=$path.' status='.$status; }\n            }\n        }\n        if($bad){\n            $to=get_option('admin_email');\n            $subj='WTP Watchdog alert: '.get_bloginfo('name');\n            $msg=\"Watchdog problem:\\n\".implode(\"\\n\",$bad).\"\\nSite: \".home_url('/').\"\\nTime: \".gmdate('c');\n            wp_mail($to,$subj,$msg);\n        }\n        $entry=[ 'time'=>gmdate('c'), 'run_id'=>wp_generate_uuid4(), 'ok'=>empty($bad), 'risk'=> empty($bad)?100:70, 'note'=> empty($bad)?'watchdog ok':'watchdog: '.implode(', ',$bad) ];\n        $this->save_history($entry);\n\n        // Build minimal payload for PUSH on cron\n        $payload=[\n            'run_id'=>$entry['run_id'],\n            'generated_at'=>$entry['time'],\n            'site'=>home_url('/'),\n            'build'=> self::BUILD,\n            'watchdog'=> true,\n            'ok'=> $entry['ok'],\n            'risk_score'=> $entry['risk'],\n            'violations'=> $bad,\n        ];\n        $o=$this->load_opts();\n        if(!empty($o['push_on_cron'])){ $this->push_webhook($payload,'cron'); }\n    }\n}\nnew WTP_Health_Check();\n"},{"base":"plugins","rel":"wtp-agent-tester/wtp-agent-tester.php","ext":"php","size":6550,"mtime":1757312769,"type":"text","content":"<?php\n/*\nPlugin Name: WTP Agent Tester (Fixed)\nDescription: Tester dla WTP Agent Bridge (Enterprise). Poprawka: budowanie canonical string kropką (.) zamiast dodawania (+) oraz jawne rzutowanie timestamp na string.\nVersion: 0.3.1\nAuthor: WeekTopPick\n*/\n\nif (!defined('ABSPATH')) { exit; }\n\nclass WTP_Agent_Tester_Fixed {\n    const PAGE_SLUG = 'wtp-agent-tester';\n\n    public function __construct() {\n        add_action('admin_menu', [$this, 'menu']);\n        add_action('admin_post_wtp_agent_ping', [$this, 'handle_ping']);\n        add_action('admin_post_wtp_agent_install', [$this, 'handle_install']);\n    }\n\n    public function menu() {\n        add_menu_page(\n            'WTP Agent Tester (Enterprise)',\n            'WTP Agent Tester',\n            'manage_options',\n            self::PAGE_SLUG,\n            [$this, 'render'],\n            'dashicons-admin-generic',\n            59\n        );\n    }\n\n    private function site_base() {\n        return rtrim(get_site_url(), '/');\n    }\n\n    public function render() {\n        if (!current_user_can('manage_options')) return;\n        $site = esc_url($this->site_base());\n        $ping = $site . '/wp-json/wtp/v1/agent/ping';\n        $install = $site . '/wp-json/wtp/v1/agent/install';\n        ?>\n        <div class=\"wrap\">\n            <h1>WTP Agent Tester (Enterprise)</h1>\n            <p>Symulator żądań do WTP Agent Bridge. Ta wersja zawiera poprawkę budowania <em>canonical string</em> (PHP 8.2+).</p>\n\n            <h2>1) Ping (GET)</h2>\n            <form method=\"post\" action=\"<?php echo esc_url(admin_url('admin-post.php')); ?>\">\n                <table class=\"form-table\">\n                    <tr><th><label>Adres</label></th><td><input type=\"text\" name=\"addr\" class=\"regular-text\" value=\"<?php echo esc_attr($ping); ?>\" readonly></td></tr>\n                    <tr><th><label>API Key</label></th><td><input type=\"text\" name=\"api_key\" class=\"regular-text\" value=\"\"></td></tr>\n                    <tr><th><label>HMAC Secret (opcjonalnie)</label></th><td><input type=\"text\" name=\"hmac\" class=\"regular-text\" value=\"\"></td></tr>\n                </table>\n                <input type=\"hidden\" name=\"action\" value=\"wtp_agent_ping\">\n                <?php submit_button('Sprawdź ping'); ?>\n            </form>\n\n            <hr />\n\n            <h2>2) Instalacja ZIP (POST /install)</h2>\n            <form method=\"post\" action=\"<?php echo esc_url(admin_url('admin-post.php')); ?>\">\n                <table class=\"form-table\">\n                    <tr><th><label>Endpoint</label></th><td><input type=\"text\" name=\"endpoint\" class=\"regular-text\" value=\"<?php echo esc_attr($install); ?>\" readonly></td></tr>\n                    <tr><th><label>URL ZIP</label></th><td><input type=\"text\" name=\"zip\" class=\"regular-text\" placeholder=\"https://example.com/downloads/plugin.zip\"></td></tr>\n                    <tr><th><label>API Key</label></th><td><input type=\"text\" name=\"api_key\" class=\"regular-text\" value=\"\"></td></tr>\n                    <tr><th><label>HMAC Secret</label></th><td><input type=\"text\" name=\"hmac\" class=\"regular-text\" value=\"\"></td></tr>\n                </table>\n                <input type=\"hidden\" name=\"action\" value=\"wtp_agent_install\">\n                <?php submit_button('Wyślij instalację (symulacja PUSH)'); ?>\n            </form>\n        </div>\n        <?php\n    }\n\n    public function handle_ping() {\n        if (!current_user_can('manage_options')) wp_die('Forbidden');\n        $addr = isset($_POST['addr']) ? esc_url_raw($_POST['addr']) : '';\n        $api_key = isset($_POST['api_key']) ? sanitize_text_field($_POST['api_key']) : '';\n        $hmac = isset($_POST['hmac']) ? sanitize_text_field($_POST['hmac']) : '';\n\n        $headers = [];\n        if (!empty($api_key)) $headers['X-WTP-Key'] = $api_key;\n\n        if (!empty($hmac)) {\n            $method = 'GET';\n            $ts = (string) time();\n            $path = parse_url($addr, PHP_URL_PATH);\n            $body = '';\n            $canonical = $ts . \"\\n\" . $method . \"\\n\" . $path . \"\\n\" . $body;\n            $sig = hash_hmac('sha256', $canonical, $hmac);\n            $headers['X-WTP-Timestamp'] = $ts;\n            $headers['X-WTP-Signature'] = $sig;\n        }\n\n        $resp = wp_remote_get($addr, ['headers' => $headers, 'timeout' => 20]);\n        $this->render_response_and_exit($resp);\n    }\n\n    public function handle_install() {\n        if (!current_user_can('manage_options')) wp_die('Forbidden');\n        $endpoint = isset($_POST['endpoint']) ? esc_url_raw($_POST['endpoint']) : '';\n        $zip = isset($_POST['zip']) ? esc_url_raw($_POST['zip']) : '';\n        $api_key = isset($_POST['api_key']) ? sanitize_text_field($_POST['api_key']) : '';\n        $hmac = isset($_POST['hmac']) ? sanitize_text_field($_POST['hmac']) : '';\n\n        if (empty($endpoint) || empty($zip) || empty($api_key) || empty($hmac)) {\n            wp_die('Brak wymaganych danych (endpoint/zip/api_key/hmac).');\n        }\n\n        $method = 'POST';\n        $ts = (string) time();\n        $path = parse_url($endpoint, PHP_URL_PATH);\n\n        $payload = wp_json_encode(['url' => $zip]);\n        if ($payload === false) $payload = '{\"url\":\"\"}';\n\n        $canonical = $ts . \"\\n\" . $method . \"\\n\" . $path . \"\\n\" . $payload;\n        $sig = hash_hmac('sha256', $canonical, $hmac);\n\n        $headers = [\n            'Content-Type'    => 'application/json',\n            'X-WTP-Key'       => $api_key,\n            'X-WTP-Timestamp' => $ts,\n            'X-WTP-Signature' => $sig,\n        ];\n\n        $resp = wp_remote_post($endpoint, [\n            'headers' => $headers,\n            'body'    => $payload,\n            'timeout' => 30,\n        ]);\n\n        $this->render_response_and_exit($resp);\n    }\n\n    private function render_response_and_exit($resp) {\n        status_header(200);\n        header('Content-Type: text/plain; charset=utf-8');\n        if (is_wp_error($resp)) {\n            echo \"WP_Error: \" . $resp->get_error_message();\n        } else {\n            echo \"HTTP \" . wp_remote_retrieve_response_code($resp) . \" \" . wp_remote_retrieve_response_message($resp) . \"\\n\\n\";\n            $h = wp_remote_retrieve_headers($resp);\n            if (!empty($h)) {\n                echo \"Headers:\\n\";\n                foreach ($h as $k => $v) {\n                    if (is_array($v)) $v = implode(', ', $v);\n                    echo $k . \": \" . $v . \"\\n\";\n                }\n                echo \"\\n\";\n            }\n            $body = wp_remote_retrieve_body($resp);\n            echo $body;\n        }\n        exit;\n    }\n}\n\nnew WTP_Agent_Tester_Fixed();\n?>"},{"base":"plugins","rel":"litespeed-cache/cli/image.cls.php","ext":"php","size":3772,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * Image Optimization API CLI for LiteSpeed integration.\n *\n * @package LiteSpeed\\CLI\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined( 'WPINC' ) || exit();\n\nuse LiteSpeed\\Lang;\nuse LiteSpeed\\Debug2;\nuse LiteSpeed\\Img_Optm;\nuse LiteSpeed\\Utility;\nuse WP_CLI;\n\n/**\n * Image Optimization API CLI\n */\nclass Image {\n\n\t/**\n\t * Image optimization instance.\n\t *\n\t * @var Img_Optm\n\t */\n\tprivate $img_optm;\n\n\t/**\n\t * Constructor for Image CLI.\n\t */\n\tpublic function __construct() {\n\t\tDebug2::debug( 'CLI_Cloud init' );\n\n\t\t$this->img_optm = Img_Optm::cls();\n\t}\n\n\t/**\n\t * Batch toggle optimized images with original images.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [<type>]\n\t * : Type to switch to (orig or optm).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Switch to original images\n\t *     $ wp litespeed-image batch_switch orig\n\t *\n\t *     # Switch to optimized images\n\t *     $ wp litespeed-image batch_switch optm\n\t *\n\t * @param array $param Positional arguments (type).\n\t */\n\tpublic function batch_switch( $param ) {\n\t\t$type = $param[0];\n\t\t$this->img_optm->batch_switch( $type );\n\t}\n\n\t/**\n\t * Send image optimization request to QUIC.cloud server.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Send image optimization request\n\t *     $ wp litespeed-image push\n\t */\n\tpublic function push() {\n\t\t$this->img_optm->new_req();\n\t}\n\n\t/**\n\t * Pull optimized images from QUIC.cloud server.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Pull images back from cloud\n\t *     $ wp litespeed-image pull\n\t */\n\tpublic function pull() {\n\t\t$this->img_optm->pull( true );\n\t}\n\n\t/**\n\t * Show optimization status based on local data (alias for status).\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Show optimization status\n\t *     $ wp litespeed-image s\n\t */\n\tpublic function s() {\n\t\t$this->status();\n\t}\n\n\t/**\n\t * Show optimization status based on local data.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Show optimization status\n\t *     $ wp litespeed-image status\n\t */\n\tpublic function status() {\n\t\t$summary   = Img_Optm::get_summary();\n\t\t$img_count = $this->img_optm->img_count();\n\t\tforeach ( Lang::img_status() as $k => $v ) {\n\t\t\tif ( isset( $img_count[\"img.$k\"] ) ) {\n\t\t\t\t$img_count[\"$v - images\"] = $img_count[\"img.$k\"];\n\t\t\t\tunset( $img_count[\"img.$k\"] );\n\t\t\t}\n\t\t\tif ( isset( $img_count[\"group.$k\"] ) ) {\n\t\t\t\t$img_count[\"$v - groups\"] = $img_count[\"group.$k\"];\n\t\t\t\tunset( $img_count[\"group.$k\"] );\n\t\t\t}\n\t\t}\n\n\t\tforeach ( array( 'reduced', 'reduced_webp', 'reduced_avif' ) as $v ) {\n\t\t\tif ( ! empty( $summary[$v] ) ) {\n\t\t\t\t$summary[$v] = Utility::real_size( $summary[$v] );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $summary['last_requested'] ) ) {\n\t\t\t$summary['last_requested'] = gmdate( 'm/d/y H:i:s', $summary['last_requested'] );\n\t\t}\n\n\t\t$list = array();\n\t\tforeach ( $summary as $k => $v ) {\n\t\t\t$list[] = array(\n\t\t\t\t'key'   => $k,\n\t\t\t\t'value' => $v,\n\t\t\t);\n\t\t}\n\n\t\t$list2 = array();\n\t\tforeach ( $img_count as $k => $v ) {\n\t\t\tif ( ! $v ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$list2[] = array(\n\t\t\t\t'key'   => $k,\n\t\t\t\t'value' => $v,\n\t\t\t);\n\t\t}\n\n\t\tWP_CLI\\Utils\\format_items( 'table', $list, array( 'key', 'value' ) );\n\n\t\tWP_CLI::line( WP_CLI::colorize( '%CImages in database summary:%n' ) );\n\t\tWP_CLI\\Utils\\format_items( 'table', $list2, array( 'key', 'value' ) );\n\t}\n\n\t/**\n\t * Clean up unfinished image data from QUIC.cloud server.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Clean up unfinished requests\n\t *     $ wp litespeed-image clean\n\t */\n\tpublic function clean() {\n\t\t$this->img_optm->clean();\n\n\t\tWP_CLI::line( WP_CLI::colorize( '%CLatest status:%n' ) );\n\n\t\t$this->status();\n\t}\n\n\t/**\n\t * Remove original image backups.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Remove original image backups\n\t *     $ wp litespeed-image rm_bkup\n\t */\n\tpublic function rm_bkup() {\n\t\t$this->img_optm->rm_bkup();\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/cli/online.cls.php","ext":"php","size":8713,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * QUIC.cloud API CLI for LiteSpeed integration.\n *\n * @package LiteSpeed\\CLI\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined( 'WPINC' ) || exit();\n\nuse LiteSpeed\\Debug2;\nuse LiteSpeed\\Cloud;\nuse WP_CLI;\n\n/**\n * QUIC.cloud API CLI\n */\nclass Online {\n\n\t/**\n\t * Cloud instance.\n\t *\n\t * @var Cloud\n\t */\n\tprivate $cloud;\n\n\t/**\n\t * Constructor for Online CLI.\n\t */\n\tpublic function __construct() {\n\t\tDebug2::debug( 'CLI_Cloud init' );\n\n\t\t$this->cloud = Cloud::cls();\n\t}\n\n\t/**\n\t * Init domain on QUIC.cloud server (See https://quic.cloud/terms/)\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Activate domain on QUIC.cloud (! Require SERVER IP setting to be set first)\n\t *     $ wp litespeed-online init\n\t */\n\tpublic function init() {\n\t\t$resp = $this->cloud->init_qc_cli();\n\t\tif ( ! empty( $resp['qc_activated'] ) ) {\n\t\t\t$main_domain = ! empty( $resp['main_domain'] ) ? $resp['main_domain'] : false;\n\t\t\t$this->cloud->update_qc_activation( $resp['qc_activated'], $main_domain );\n\t\t\tWP_CLI::success( 'Init successfully. Activated type: ' . $resp['qc_activated'] );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Init failed!' );\n\t\t}\n\t}\n\n\t/**\n\t * Init domain CDN service on QUIC.cloud server (See https://quic.cloud/terms/)\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--method=<method>]\n\t * : The method to use (e.g., cname, ns, cfi).\n\t *\n\t * [--ssl-cert=<cert>]\n\t * : Path to SSL certificate.\n\t *\n\t * [--ssl-key=<key>]\n\t * : Path to SSL key.\n\t *\n\t * [--cf-token=<token>]\n\t * : Cloudflare token for CFI method.\n\t *\n\t * [--format=<format>]\n\t * : Output format (e.g., json).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Activate domain CDN on QUIC.cloud (support --format=json)\n\t *     $ wp litespeed-online cdn_init --method=cname|ns\n\t *     $ wp litespeed-online cdn_init --method=cname|ns --ssl-cert=xxx.pem --ssl-key=xxx\n\t *     $ wp litespeed-online cdn_init --method=cfi --cf-token=xxxxxxxx\n\t *     $ wp litespeed-online cdn_init --method=cfi --cf-token=xxxxxxxx  --ssl-cert=xxx.pem --ssl-key=xxx\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function cdn_init( $args, $assoc_args ) {\n\t\tif ( empty( $assoc_args['method'] ) ) {\n\t\t\tWP_CLI::error( 'Init CDN failed! Missing parameters `--method`.' );\n\t\t\treturn;\n\t\t}\n\t\tif ( ( ! empty( $assoc_args['ssl-cert'] ) && empty( $assoc_args['ssl-key'] ) ) || ( empty( $assoc_args['ssl-cert'] ) && ! empty( $assoc_args['ssl-key'] ) ) ) {\n\t\t\tWP_CLI::error( 'Init CDN failed! SSL cert must be present together w/ SSL key.' );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'cfi' === $assoc_args['method'] && empty( $assoc_args['cf-token'] ) ) {\n\t\t\tWP_CLI::error( 'Init CDN failed! CFI must set `--cf-token`.' );\n\t\t\treturn;\n\t\t}\n\n\t\t$cert     = ! empty( $assoc_args['ssl-cert'] ) ? $assoc_args['ssl-cert'] : '';\n\t\t$key      = ! empty( $assoc_args['ssl-key'] ) ? $assoc_args['ssl-key'] : '';\n\t\t$cf_token = ! empty( $assoc_args['cf-token'] ) ? $assoc_args['cf-token'] : '';\n\n\t\t$resp = $this->cloud->init_qc_cdn_cli( $assoc_args['method'], $cert, $key, $cf_token );\n\t\tif ( ! empty( $resp['qc_activated'] ) ) {\n\t\t\t$main_domain = ! empty( $resp['main_domain'] ) ? $resp['main_domain'] : false;\n\t\t\t$this->cloud->update_qc_activation( $resp['qc_activated'], $main_domain, true );\n\t\t}\n\t\tif ( ! empty( $assoc_args['format'] ) && 'json' === $assoc_args['format'] ) {\n\t\t\tWP_CLI::log( wp_json_encode( $resp ) );\n\t\t\treturn;\n\t\t}\n\t\tif ( ! empty( $resp['qc_activated'] ) ) {\n\t\t\tWP_CLI::success( 'Init QC CDN successfully. Activated type: ' . $resp['qc_activated'] );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Init QC CDN failed!' );\n\t\t}\n\n\t\tif ( ! empty( $resp['cname'] ) ) {\n\t\t\tWP_CLI::success( 'cname: ' . $resp['cname'] );\n\t\t}\n\t\tif ( ! empty( $resp['msgs'] ) ) {\n\t\t\tWP_CLI::success( 'msgs: ' . wp_json_encode( $resp['msgs'] ) );\n\t\t}\n\t}\n\n\t/**\n\t * Link user account by api key\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--email=<email>]\n\t * : User email for QUIC.cloud account.\n\t *\n\t * [--api-key=<key>]\n\t * : API key for QUIC.cloud account.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Link user account by api key\n\t *     $ wp litespeed-online link --email=xxx@example.com --api-key=xxxx\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function link( $args, $assoc_args ) {\n\t\tif ( empty( $assoc_args['email'] ) || empty( $assoc_args['api-key'] ) ) {\n\t\t\tWP_CLI::error( 'Link to QUIC.cloud failed! Missing parameters `--email` or `--api-key`.' );\n\t\t\treturn;\n\t\t}\n\n\t\t$resp = $this->cloud->link_qc_cli( $assoc_args['email'], $assoc_args['api-key'] );\n\t\tif ( ! empty( $resp['qc_activated'] ) ) {\n\t\t\t$main_domain = ! empty( $resp['main_domain'] ) ? $resp['main_domain'] : false;\n\t\t\t$this->cloud->update_qc_activation( $resp['qc_activated'], $main_domain, true );\n\t\t\tWP_CLI::success( 'Link successfully!' );\n\t\t\tWP_CLI::log( wp_json_encode( $resp ) );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Link failed!' );\n\t\t}\n\t}\n\n\t/**\n\t * Sync usage data from QUIC.cloud\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--format=<format>]\n\t * : Output format (e.g., json).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Sync QUIC.cloud service usage info\n\t *     $ wp litespeed-online sync\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function sync( $args, $assoc_args ) {\n\t\t$json = $this->cloud->sync_usage();\n\n\t\tif ( ! empty( $assoc_args['format'] ) ) {\n\t\t\tWP_CLI::print_value( $json, $assoc_args );\n\t\t\treturn;\n\t\t}\n\n\t\tWP_CLI::success( 'Sync successfully' );\n\n\t\t$list = array();\n\t\tforeach ( Cloud::$services as $v ) {\n\t\t\t$list[] = array(\n\t\t\t\t'key' => $v,\n\t\t\t\t'used' => ! empty( $json['usage.' . $v]['used'] ) ? $json['usage.' . $v]['used'] : 0,\n\t\t\t\t'quota' => ! empty( $json['usage.' . $v]['quota'] ) ? $json['usage.' . $v]['quota'] : 0,\n\t\t\t\t'PayAsYouGo_Used' => ! empty( $json['usage.' . $v]['pag_used'] ) ? $json['usage.' . $v]['pag_used'] : 0,\n\t\t\t\t'PayAsYouGo_Balance' => ! empty( $json['usage.' . $v]['pag_bal'] ) ? $json['usage.' . $v]['pag_bal'] : 0,\n\t\t\t);\n\t\t}\n\n\t\tWP_CLI\\Utils\\format_items( 'table', $list, array( 'key', 'used', 'quota', 'PayAsYouGo_Used', 'PayAsYouGo_Balance' ) );\n\t}\n\n\t/**\n\t * Check QC account status\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Check QC account status\n\t *     $ wp litespeed-online cdn_status\n\t */\n\tpublic function cdn_status() {\n\t\t$resp = $this->cloud->cdn_status_cli();\n\t\tWP_CLI::log( wp_json_encode( $resp ) );\n\t}\n\n\t/**\n\t * List all QUIC.cloud services\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--format=<format>]\n\t * : Output format (e.g., json).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # List all services tag\n\t *     $ wp litespeed-online services\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function services( $args, $assoc_args ) {\n\t\tif ( ! empty( $assoc_args['format'] ) ) {\n\t\t\tWP_CLI::print_value( Cloud::$services, $assoc_args );\n\t\t\treturn;\n\t\t}\n\n\t\t$list = array();\n\t\tforeach ( Cloud::$services as $v ) {\n\t\t\t$list[] = array(\n\t\t\t\t'service' => $v,\n\t\t\t);\n\t\t}\n\n\t\tWP_CLI\\Utils\\format_items( 'table', $list, array( 'service' ) );\n\t}\n\n\t/**\n\t * List all QUIC.cloud servers in use\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--format=<format>]\n\t * : Output format (e.g., json).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # List all QUIC.cloud servers in use\n\t *     $ wp litespeed-online nodes\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function nodes( $args, $assoc_args ) {\n\t\t$json = Cloud::get_summary();\n\n\t\t$list        = array();\n\t\t$json_output = array();\n\t\tforeach ( Cloud::$services as $v ) {\n\t\t\t$server        = ! empty( $json['server.' . $v] ) ? $json['server.' . $v] : '';\n\t\t\t$list[]        = array(\n\t\t\t\t'service' => $v,\n\t\t\t\t'server' => $server,\n\t\t\t);\n\t\t\t$json_output[] = array( $v => $server );\n\t\t}\n\n\t\tif ( ! empty( $assoc_args['format'] ) ) {\n\t\t\tWP_CLI::print_value( $json_output, $assoc_args );\n\t\t\treturn;\n\t\t}\n\n\t\tWP_CLI\\Utils\\format_items( 'table', $list, array( 'service', 'server' ) );\n\t}\n\n\t/**\n\t * Detect closest node server for current service\n\t *\n\t * ## OPTIONS\n\t *\n\t * [<service>]\n\t * : Service to ping (e.g., img_optm).\n\t *\n\t * [--force]\n\t * : Force detection of the closest server.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Detect closest node for one service\n\t *     $ wp litespeed-online ping img_optm\n\t *     $ wp litespeed-online ping img_optm --force\n\t *\n\t * @param array $param Positional arguments (service).\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function ping( $param, $assoc_args ) {\n\t\t$svc   = $param[0];\n\t\t$force = ! empty( $assoc_args['force'] );\n\n\t\t$json = $this->cloud->detect_cloud( $svc, $force );\n\t\tif ( $json ) {\n\t\t\tWP_CLI::success( 'Updated closest server.' );\n\t\t}\n\t\tWP_CLI::log( 'svc = ' . $svc );\n\t\tWP_CLI::log( 'node = ' . ( $json ? $json : '-' ) );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/cli/database.cls.php","ext":"php","size":5075,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * LiteSpeed CLI - database cleanup\n *\n * Add CLI database cleanup commands.\n *\n * @package LiteSpeed\n * @since 7.3\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined('WPINC') || exit();\n\nuse LiteSpeed\\Debug2;\nuse LiteSpeed\\DB_Optm;\nuse WP_CLI;\n\n/**\n * LiteSpeed Cache Database CLI\n */\nclass Database {\n\t/**\n\t * Current blog id the optimization is working on.\n\t *\n\t * @var int|false $current_blog Current blog id.\n\t */\n\tprivate $current_blog = false;\n\t/**\n\t * Database class.\n\t *\n\t * @var DB_Optim $db Database class.\n\t */\n\tprivate $db;\n\n\t/**\n\t * Class constructor.\n\t */\n\tpublic function __construct() {\n\t\tDebug2::debug('CLI_Database init');\n\n\t\t$this->db = DB_Optm::cls();\n\t}\n\n\t/**\n\t * List all site domains and ids on the network.\n\t */\n\tpublic function network_list() {\n\t\tif ( !is_multisite() ) {\n\t\t\tWP_CLI::error('This is not a multisite installation!');\n\n\t\t\treturn;\n\t\t}\n\t\t$buf = WP_CLI::colorize(\"%CThe list of installs:%n\\n\");\n\n\t\t$sites = get_sites();\n\t\tforeach ( $sites as $site ) {\n\t\t\t$buf .= WP_CLI::colorize( '%Y' . $site->domain . $site->path . ':%n ID ' . $site->blog_id ) . \"\\n\";\n\t\t}\n\n\t\tWP_CLI::line($buf);\n\t}\n\n\t/**\n\t * Change to blog sent as param.\n\t *\n\t * @param array $args Description.\n\t */\n\tprivate function change_to_blog( $args ) {\n\t\tif ( !isset( $args[0] ) || 'blog' !== $args[0] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$this->current_blog = get_current_blog_id();\n\t\t$blogid             = $args[1];\n\t\tif ( !is_numeric( $blogid ) ) {\n\t\t\t$error = WP_CLI::colorize( '%RError: invalid blog id entered.%n' );\n\t\t\tWP_CLI::line( $error );\n\t\t\t$this->network_list( $args );\n\t\t\treturn;\n\t\t}\n\t\t$site = get_blog_details( $blogid );\n\t\tif ( false === $site ) {\n\t\t\t$error = WP_CLI::colorize( '%RError: invalid blog id entered.%n' );\n\t\t\tWP_CLI::line( $error );\n\t\t\t$this->network_list( $args );\n\t\t\treturn;\n\t\t}\n\t\tswitch_to_blog( $blogid );\n\t}\n\n\t/**\n\t * Change to previous blog.\n\t */\n\tprivate function change_to_default() {\n\t\t// Check if previous blog set.\n\t\tif ( $this->current_blog ) {\n\t\t\tswitch_to_blog( $this->current_blog );\n\t\t\t// Switched to previous blog.\n\t\t\t$this->current_blog = false;\n\t\t}\n\t}\n\n\t/**\n\t * Show CLI response.\n\t *\n\t * @param boolean $result Flag if result is success or failure.\n\t * @param string  $action Action name.\n\t */\n\tprivate function show_response( $result, $action ) {\n\t\tif ($result) {\n\t\t\tWP_CLI::success( $result );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Error running optimization: ' . $action );\n\t\t}\n\t}\n\n\t/**\n\t * Clean actions function.\n\t *\n\t * @param int   $args Action arguments.\n\t * @param array $types What data to clean.\n\t */\n\tprivate function clean_action( $args, $types ) {\n\t\t$this->change_to_blog( $args );\n\t\tforeach ( $types as $type ) {\n\t\t\t$result = $this->db->handler_clean_db_cli( $type );\n\t\t\t$this->show_response( $result, $type );\n\t\t}\n\t\t$this->change_to_default();\n\t}\n\n\t/**\n\t * Clear posts data(revisions, orphaned, auto drafts, trashed posts).\n\t *     # Start clearing posts data.\n\t *     $ wp litespeed-database clear_posts\n\t *     $ wp litespeed-database clear_posts blog 2\n\t *\n\t * @param string $args Action arguments.\n\t */\n\tpublic function clear_posts( $args ) {\n\t\t$types = array(\n\t\t\t'revision',\n\t\t\t'orphaned_post_meta',\n\t\t\t'auto_draft',\n\t\t\t'trash_post',\n\t\t);\n\t\t$this->clean_action( $args, $types );\n\t}\n\n\t/**\n\t * Clear comments(spam and trash comments).\n\t *     # Start clearing comments.\n\t *     $ wp litespeed-database clear_comments\n\t *     $ wp litespeed-database clear_comments blog 2\n\t *\n\t * @param string $args Action arguments.\n\t */\n\tpublic function clear_comments( $args ) {\n\t\t$types = array(\n\t\t\t'spam_comment',\n\t\t\t'trash_comment',\n\t\t);\n\t\t$this->clean_action( $args, $types );\n\t}\n\n\t/**\n\t * Clear trackbacks/pingbacks.\n\t *     # Start clearing trackbacks/pingbacks.\n\t *     $ wp litespeed-database clear_trackbacks\n\t *     $ wp litespeed-database clear_trackbacks blog 2\n\t *\n\t * @param string $args Action arguments.\n\t */\n\tpublic function clear_trackbacks( $args ) {\n\t\t$types = array(\n\t\t\t'trackback-pingback',\n\t\t);\n\t\t$this->clean_action( $args, $types );\n\t}\n\n\t/**\n\t * Clear transients.\n\t *     # Start clearing transients.\n\t *     $ wp litespeed-database clear_transients\n\t *     $ wp litespeed-database clear_transients blog 2\n\t *\n\t * @param string $args Action arguments.\n\t */\n\tpublic function clear_transients( $args ) {\n\t\t$types = array(\n\t\t\t'expired_transient',\n\t\t\t'all_transients',\n\t\t);\n\t\t$this->clean_action( $args, $types );\n\t}\n\n\t/**\n\t * Optimize tables.\n\t *     # Start optimizing tables.\n\t *     $ wp litespeed-database optimize_tables\n\t *     $ wp litespeed-database optimize_tables blog 2\n\t *\n\t * @param string $args Action arguments.\n\t */\n\tpublic function optimize_tables( $args ) {\n\t\t$types = array(\n\t\t\t'optimize_tables',\n\t\t);\n\t\t$this->clean_action( $args, $types );\n\t}\n\n\t/**\n\t * Optimize database by running all possible operations.\n\t *     # Start optimizing all.\n\t *     $ wp litespeed-database optimize_all\n\t *     $ wp litespeed-database optimize_all blog 2\n\t *\n\t * @param string $args Action arguments.\n\t */\n\tpublic function optimize_all( $args ) {\n\t\t$types = array(\n\t\t\t'all',\n\t\t);\n\t\t$this->clean_action( $args, $types );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/cli/crawler.cls.php","ext":"php","size":5994,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * LiteSpeed Cache CLI Crawler Commands\n *\n * Provides WP-CLI commands for managing LiteSpeed Cache crawlers.\n *\n * @package LiteSpeed\n * @since 1.1.0\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined('WPINC') || exit();\n\nuse LiteSpeed\\Debug2;\nuse LiteSpeed\\Base;\nuse LiteSpeed\\Task;\nuse LiteSpeed\\Crawler as Crawler2;\nuse WP_CLI;\n\n/**\n * Crawler\n */\nclass Crawler extends Base {\n\t/**\n\t * Crawler instance\n\t *\n\t * @var Crawler2 $crawler\n\t */\n\tprivate $crawler;\n\n\t/**\n\t * Constructor for Crawler CLI commands\n\t *\n\t * @since 1.1.0\n\t */\n\tpublic function __construct() {\n\t\tDebug2::debug('CLI_Crawler init');\n\n\t\t$this->crawler = Crawler2::cls();\n\t}\n\n\t/**\n\t * List all crawlers\n\t *\n\t * Displays a table of all crawlers with their details.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # List all crawlers\n\t *     $ wp litespeed-crawler l\n\t *\n\t * @since 1.1.0\n\t */\n\tpublic function l() {\n\t\t$this->list();\n\t}\n\n\t/**\n\t * List all crawlers\n\t *\n\t * Displays a table of all crawlers with their details.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # List all crawlers\n\t *     $ wp litespeed-crawler list\n\t *\n\t * @since 1.1.0\n\t */\n\tpublic function list() {\n\t\t$crawler_list = $this->crawler->list_crawlers();\n\t\t$summary      = Crawler2::get_summary();\n\t\tif ($summary['curr_crawler'] >= count($crawler_list)) {\n\t\t\t$summary['curr_crawler'] = 0;\n\t\t}\n\t\t$is_running = time() - $summary['is_running'] <= 900;\n\n\t\t$crawler_run_interval = defined('LITESPEED_CRAWLER_RUN_INTERVAL') ? LITESPEED_CRAWLER_RUN_INTERVAL : 600; // Specify time in seconds for the time between each run interval\n\t\tif ($crawler_run_interval > 0) {\n\t\t\t$recurrence = '';\n\t\t\t$hours      = (int) floor($crawler_run_interval / 3600);\n\t\t\tif ($hours) {\n\t\t\t\tif ($hours > 1) {\n\t\t\t\t\t$recurrence .= sprintf(__('%d hours', 'litespeed-cache'), $hours);\n\t\t\t\t} else {\n\t\t\t\t\t$recurrence .= sprintf(__('%d hour', 'litespeed-cache'), $hours);\n\t\t\t\t}\n\t\t\t}\n\t\t\t$minutes = (int) floor(($crawler_run_interval % 3600) / 60);\n\t\t\tif ($minutes) {\n\t\t\t\t$recurrence .= ' ';\n\t\t\t\tif ($minutes > 1) {\n\t\t\t\t\t$recurrence .= sprintf(__('%d minutes', 'litespeed-cache'), $minutes);\n\t\t\t\t} else {\n\t\t\t\t\t$recurrence .= sprintf(__('%d minute', 'litespeed-cache'), $minutes);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t$list = array();\n\t\tforeach ($crawler_list as $i => $v) {\n\t\t\t$hit  = !empty($summary['crawler_stats'][$i][Crawler2::STATUS_HIT]) ? $summary['crawler_stats'][$i][Crawler2::STATUS_HIT] : 0;\n\t\t\t$miss = !empty($summary['crawler_stats'][$i][Crawler2::STATUS_MISS]) ? $summary['crawler_stats'][$i][Crawler2::STATUS_MISS] : 0;\n\n\t\t\t$blacklisted  = !empty($summary['crawler_stats'][$i][Crawler2::STATUS_BLACKLIST]) ? $summary['crawler_stats'][$i][Crawler2::STATUS_BLACKLIST] : 0;\n\t\t\t$blacklisted += !empty($summary['crawler_stats'][$i][Crawler2::STATUS_NOCACHE]) ? $summary['crawler_stats'][$i][Crawler2::STATUS_NOCACHE] : 0;\n\n\t\t\tif (isset($summary['crawler_stats'][$i][Crawler2::STATUS_WAIT])) {\n\t\t\t\t$waiting = $summary['crawler_stats'][$i][Crawler2::STATUS_WAIT] ?? 0;\n\t\t\t} else {\n\t\t\t\t$waiting = $summary['list_size'] - $hit - $miss - $blacklisted;\n\t\t\t}\n\n\t\t\t$analytics  = 'Waiting: ' . $waiting;\n\t\t\t$analytics .= '     Hit: ' . $hit;\n\t\t\t$analytics .= '     Miss: ' . $miss;\n\t\t\t$analytics .= '     Blocked: ' . $blacklisted;\n\n\t\t\t$running = '';\n\t\t\tif ($i === $summary['curr_crawler']) {\n\t\t\t\t$running = 'Pos: ' . ($summary['last_pos'] + 1);\n\t\t\t\tif ($is_running) {\n\t\t\t\t\t$running .= '(Running)';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$status = $this->crawler->is_active($i) ? '✅' : '❌';\n\n\t\t\t$list[] = array(\n\t\t\t\t'ID' => $i + 1,\n\t\t\t\t'Name' => wp_strip_all_tags($v['title']),\n\t\t\t\t'Frequency' => $recurrence,\n\t\t\t\t'Status' => $status,\n\t\t\t\t'Analytics' => $analytics,\n\t\t\t\t'Running' => $running,\n\t\t\t);\n\t\t}\n\n\t\tWP_CLI\\Utils\\format_items('table', $list, array( 'ID', 'Name', 'Frequency', 'Status', 'Analytics', 'Running' ));\n\t}\n\n\t/**\n\t * Enable one crawler\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>\n\t * : The ID of the crawler to enable.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Turn on 2nd crawler\n\t *     $ wp litespeed-crawler enable 2\n\t *\n\t * @since 1.1.0\n\t * @param array $args Command arguments.\n\t */\n\tpublic function enable( $args ) {\n\t\t$id = $args[0] - 1;\n\t\tif ($this->crawler->is_active($id)) {\n\t\t\tWP_CLI::error('ID #' . $id . ' had been enabled');\n\t\t\treturn;\n\t\t}\n\n\t\t$this->crawler->toggle_activeness($id);\n\t\tWP_CLI::success('Enabled crawler #' . $id);\n\t}\n\n\t/**\n\t * Disable one crawler\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>\n\t * : The ID of the crawler to disable.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Turn off 1st crawler\n\t *     $ wp litespeed-crawler disable 1\n\t *\n\t * @since 1.1.0\n\t * @param array $args Command arguments.\n\t */\n\tpublic function disable( $args ) {\n\t\t$id = $args[0] - 1;\n\t\tif (!$this->crawler->is_active($id)) {\n\t\t\tWP_CLI::error('ID #' . $id . ' has been disabled');\n\t\t\treturn;\n\t\t}\n\n\t\t$this->crawler->toggle_activeness($id);\n\t\tWP_CLI::success('Disabled crawler #' . $id);\n\t}\n\n\t/**\n\t * Run crawling\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Start crawling\n\t *     $ wp litespeed-crawler r\n\t *\n\t * @since 1.1.0\n\t */\n\tpublic function r() {\n\t\t$this->run();\n\t}\n\n\t/**\n\t * Run crawling\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Start crawling\n\t *     $ wp litespeed-crawler run\n\t *\n\t * @since 1.1.0\n\t */\n\tpublic function run() {\n\t\tself::debug('⚠️⚠️⚠️ Forced take over lane (CLI)');\n\t\t$this->crawler->Release_lane();\n\n\t\tTask::async_call('crawler');\n\n\t\t$summary = Crawler2::get_summary();\n\n\t\tWP_CLI::success('Start crawling. Current crawler #' . ($summary['curr_crawler'] + 1) . ' [position] ' . $summary['last_pos'] . ' [total] ' . $summary['list_size']);\n\t}\n\n\t/**\n\t * Reset crawler position\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Reset crawler position\n\t *     $ wp litespeed-crawler reset\n\t *\n\t * @since 1.1.0\n\t */\n\tpublic function reset() {\n\t\t$this->crawler->reset_pos();\n\n\t\t$summary = Crawler2::get_summary();\n\n\t\tWP_CLI::success('Reset position. Current crawler #' . ($summary['curr_crawler'] + 1) . ' [position] ' . $summary['last_pos'] . ' [total] ' . $summary['list_size']);\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/cli/debug.cls.php","ext":"php","size":718,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * Debug API CLI for LiteSpeed integration.\n *\n * @package LiteSpeed\\CLI\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined( 'WPINC' ) || exit();\n\nuse LiteSpeed\\Debug2;\nuse LiteSpeed\\Report;\nuse WP_CLI;\n\n/**\n * Debug API CLI\n */\nclass Debug {\n\n\t/**\n\t * Report instance.\n\t *\n\t * @var Report\n\t */\n\tprivate $report;\n\n\t/**\n\t * Constructor for Debug CLI.\n\t */\n\tpublic function __construct() {\n\t\tDebug2::debug( 'CLI_Debug init' );\n\n\t\t$this->report = Report::cls();\n\t}\n\n\t/**\n\t * Send report\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Send env report to LiteSpeed\n\t *     $ wp litespeed-debug send\n\t */\n\tpublic function send() {\n\t\t$num = $this->report->post_env();\n\t\tWP_CLI::success( 'Report Number = ' . $num );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/cli/purge.cls.php","ext":"php","size":7234,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * LiteSpeed Cache Purge Interface CLI.\n *\n * @package LiteSpeed\\CLI\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined( 'WPINC' ) || exit();\n\nuse LiteSpeed\\Core;\nuse LiteSpeed\\Router;\nuse LiteSpeed\\Admin_Display;\nuse WP_CLI;\n\n/**\n * LiteSpeed Cache Purge Interface\n */\nclass Purge {\n\n\t/**\n\t * List all site domains and ids on the network.\n\t *\n\t * For use with the blog subcommand.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # List all the site domains and ids in a table.\n\t *     $ wp litespeed-purge network_list\n\t */\n\tpublic function network_list() {\n\t\tif ( ! is_multisite() ) {\n\t\t\tWP_CLI::error( 'This is not a multisite installation!' );\n\t\t\treturn;\n\t\t}\n\n\t\t$buf = WP_CLI::colorize( '%CThe list of installs:%n' ) . PHP_EOL;\n\n\t\t$sites = get_sites();\n\t\tforeach ( $sites as $site ) {\n\t\t\t$buf .= WP_CLI::colorize( '%Y' . $site->domain . $site->path . ':%n ID ' . $site->blog_id ) . PHP_EOL;\n\t\t}\n\n\t\tWP_CLI::line( $buf );\n\t}\n\n\t/**\n\t * Sends an AJAX request to the site.\n\t *\n\t * @param string $action The action to perform.\n\t * @param array  $extra  Additional data to include in the request.\n\t * @return object The HTTP response.\n\t * @since 1.0.14\n\t */\n\tprivate function send_request( $action, $extra = array() ) {\n\t\t$data = array(\n\t\t\tRouter::ACTION => $action,\n\t\t\tRouter::NONCE => wp_create_nonce( $action ),\n\t\t);\n\t\tif ( ! empty( $extra ) ) {\n\t\t\t$data = array_merge( $data, $extra );\n\t\t}\n\n\t\t$url = admin_url( 'admin-ajax.php' );\n\t\tWP_CLI::debug( 'URL is ' . $url );\n\n\t\t$out = WP_CLI\\Utils\\http_request( 'GET', $url, $data );\n\t\treturn $out;\n\t}\n\n\t/**\n\t * Purges all cache entries for the blog (the entire network if multisite).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Purge Everything associated with the WordPress install.\n\t *     $ wp litespeed-purge all\n\t */\n\tpublic function all() {\n\t\t$action = is_multisite() ? Core::ACTION_QS_PURGE_EMPTYCACHE : Core::ACTION_QS_PURGE_ALL;\n\n\t\t$purge_ret = $this->send_request( $action );\n\n\t\tif ( $purge_ret->success ) {\n\t\t\tWP_CLI::success( __( 'Purged All!', 'litespeed-cache' ) );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Something went wrong! Got ' . $purge_ret->status_code );\n\t\t}\n\t}\n\n\t/**\n\t * Purges all cache entries for the blog.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <blogid>\n\t * : The blog id to purge.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # In a multisite install, purge only the shop.example.com cache (stored as blog id 2).\n\t *     $ wp litespeed-purge blog 2\n\t *\n\t * @param array $args Positional arguments (blogid).\n\t */\n\tpublic function blog( $args ) {\n\t\tif ( ! is_multisite() ) {\n\t\t\tWP_CLI::error( 'Not a multisite installation.' );\n\t\t\treturn;\n\t\t}\n\n\t\t$blogid = $args[0];\n\t\tif ( ! is_numeric( $blogid ) ) {\n\t\t\t$error = WP_CLI::colorize( '%RError: invalid blog id entered.%n' );\n\t\t\tWP_CLI::line( $error );\n\t\t\t$this->network_list( $args );\n\t\t\treturn;\n\t\t}\n\n\t\t$site = get_blog_details( $blogid );\n\t\tif ( false === $site ) {\n\t\t\t$error = WP_CLI::colorize( '%RError: invalid blog id entered.%n' );\n\t\t\tWP_CLI::line( $error );\n\t\t\t$this->network_list( $args );\n\t\t\treturn;\n\t\t}\n\n\t\tswitch_to_blog( $blogid );\n\n\t\t$purge_ret = $this->send_request( Core::ACTION_QS_PURGE_ALL );\n\t\tif ( $purge_ret->success ) {\n\t\t\tWP_CLI::success( __( 'Purged the blog!', 'litespeed-cache' ) );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Something went wrong! Got ' . $purge_ret->status_code );\n\t\t}\n\t}\n\n\t/**\n\t * Purges all cache tags related to a URL.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <url>\n\t * : The URL to purge.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Purge the front page.\n\t *     $ wp litespeed-purge url https://mysite.com/\n\t *\n\t * @param array $args Positional arguments (URL).\n\t */\n\tpublic function url( $args ) {\n\t\t$data          = array(\n\t\t\tRouter::ACTION => Core::ACTION_QS_PURGE,\n\t\t);\n\t\t$url           = $args[0];\n\t\t$deconstructed = wp_parse_url( $url );\n\t\tif ( empty( $deconstructed ) ) {\n\t\t\tWP_CLI::error( 'URL passed in is invalid.' );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( is_multisite() ) {\n\t\t\tif ( 0 === get_blog_id_from_url( $deconstructed['host'], '/' ) ) {\n\t\t\t\tWP_CLI::error( 'Multisite URL passed in is invalid.' );\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\t$deconstructed_site = wp_parse_url( get_home_url() );\n\t\t\tif ( $deconstructed['host'] !== $deconstructed_site['host'] ) {\n\t\t\t\tWP_CLI::error( 'Single site URL passed in is invalid.' );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tWP_CLI::debug( 'URL is ' . $url );\n\n\t\t$purge_ret = WP_CLI\\Utils\\http_request( 'GET', $url, $data );\n\t\tif ( $purge_ret->success ) {\n\t\t\tWP_CLI::success( __( 'Purged the URL!', 'litespeed-cache' ) );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Something went wrong! Got ' . $purge_ret->status_code );\n\t\t}\n\t}\n\n\t/**\n\t * Helper function for purging by IDs.\n\t *\n\t * @param array    $args     The ID list to parse.\n\t * @param string   $select   The purge by kind.\n\t * @param callable $callback The callback function to check the ID.\n\t */\n\tprivate function purgeby( $args, $select, $callback ) {\n\t\t$filtered = array();\n\t\tforeach ( $args as $val ) {\n\t\t\tif ( ! ctype_digit( $val ) ) {\n\t\t\t\tWP_CLI::debug( '[LSCACHE] Skip val, not a number. ' . $val );\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t$term = $callback( $val );\n\t\t\tif ( ! empty( $term ) ) {\n\t\t\t\tWP_CLI::line( $term->name );\n\t\t\t\t$filtered[] = in_array( $callback, array( 'get_tag', 'get_category' ), true ) ? $term->name : $val;\n\t\t\t} else {\n\t\t\t\tWP_CLI::debug( '[LSCACHE] Skip val, not a valid term. ' . $val );\n\t\t\t}\n\t\t}\n\n\t\tif ( empty( $filtered ) ) {\n\t\t\tWP_CLI::error( 'Arguments must be integer IDs.' );\n\t\t\treturn;\n\t\t}\n\n\t\t$str = implode( ',', $filtered );\n\n\t\t$purge_titles = array(\n\t\t\tAdmin_Display::PURGEBY_CAT => 'Category',\n\t\t\tAdmin_Display::PURGEBY_PID => 'Post ID',\n\t\t\tAdmin_Display::PURGEBY_TAG => 'Tag',\n\t\t\tAdmin_Display::PURGEBY_URL => 'URL',\n\t\t);\n\n\t\tWP_CLI::line( 'Will purge the following: [' . $purge_titles[ $select ] . '] ' . $str );\n\n\t\t$data = array(\n\t\t\tAdmin_Display::PURGEBYOPT_SELECT => $select,\n\t\t\tAdmin_Display::PURGEBYOPT_LIST   => $str,\n\t\t);\n\n\t\t$purge_ret = $this->send_request( Core::ACTION_PURGE_BY, $data );\n\t\tif ( $purge_ret->success ) {\n\t\t\tWP_CLI::success( __( 'Purged!', 'litespeed-cache' ) );\n\t\t} else {\n\t\t\tWP_CLI::error( 'Something went wrong! Got ' . $purge_ret->status_code );\n\t\t}\n\t}\n\n\t/**\n\t * Purges cache tags for a WordPress tag.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <ids>...\n\t * : The Term IDs to purge.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Purge the tag IDs 1, 3, and 5\n\t *     $ wp litespeed-purge tag 1 3 5\n\t *\n\t * @param array $args Positional arguments (IDs).\n\t */\n\tpublic function tag( $args ) {\n\t\t$this->purgeby( $args, Admin_Display::PURGEBY_TAG, 'get_tag' );\n\t}\n\n\t/**\n\t * Purges cache tags for a WordPress category.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <ids>...\n\t * : The Term IDs to purge.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Purge the category IDs 1, 3, and 5\n\t *     $ wp litespeed-purge category 1 3 5\n\t *\n\t * @param array $args Positional arguments (IDs).\n\t */\n\tpublic function category( $args ) {\n\t\t$this->purgeby( $args, Admin_Display::PURGEBY_CAT, 'get_category' );\n\t}\n\n\t/**\n\t * Purges cache tags for a WordPress Post/Product.\n\t *\n\t * @alias product\n\t *\n\t * ## OPTIONS\n\t *\n\t * <ids>...\n\t * : The Post IDs to purge.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Purge the post IDs 1, 3, and 5\n\t *     $ wp litespeed-purge post_id 1 3 5\n\t *\n\t * @param array $args Positional arguments (IDs).\n\t */\n\tpublic function post_id( $args ) {\n\t\t$this->purgeby( $args, Admin_Display::PURGEBY_PID, 'get_post' );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/cli/presets.cls.php","ext":"php","size":1870,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * Presets CLI for LiteSpeed Cache.\n *\n * @package LiteSpeed\\CLI\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined( 'WPINC' ) || exit();\n\nuse LiteSpeed\\Debug2;\nuse LiteSpeed\\Preset;\nuse WP_CLI;\n\n/**\n * Presets CLI\n */\nclass Presets {\n\n\t/**\n\t * Preset instance.\n\t *\n\t * @var Preset\n\t */\n\tprivate $preset;\n\n\t/**\n\t * Constructor for Presets CLI.\n\t */\n\tpublic function __construct() {\n\t\tDebug2::debug( 'CLI_Presets init' );\n\n\t\t$this->preset = Preset::cls();\n\t}\n\n\t/**\n\t * Applies a standard preset's settings.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <preset>\n\t * : The preset name to apply (e.g., basic).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Apply the preset called \"basic\"\n\t *     $ wp litespeed-presets apply basic\n\t *\n\t * @param array $args Positional arguments (preset).\n\t */\n\tpublic function apply( $args ) {\n\t\t$preset = $args[0];\n\n\t\tif ( empty( $preset ) ) {\n\t\t\tWP_CLI::error( 'Please specify a preset to apply.' );\n\t\t\treturn;\n\t\t}\n\n\t\treturn $this->preset->apply( $preset );\n\t}\n\n\t/**\n\t * Returns sorted backup names.\n\t *\n\t * ## OPTIONS\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Get all backups\n\t *     $ wp litespeed-presets get_backups\n\t */\n\tpublic function get_backups() {\n\t\t$backups = $this->preset->get_backups();\n\n\t\tforeach ( $backups as $backup ) {\n\t\t\tWP_CLI::line( $backup );\n\t\t}\n\t}\n\n\t/**\n\t * Restores settings from the backup file with the given timestamp, then deletes the file.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <timestamp>\n\t * : The timestamp of the backup to restore.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Restore the backup with the timestamp 1667485245\n\t *     $ wp litespeed-presets restore 1667485245\n\t *\n\t * @param array $args Positional arguments (timestamp).\n\t */\n\tpublic function restore( $args ) {\n\t\t$timestamp = $args[0];\n\n\t\tif ( empty( $timestamp ) ) {\n\t\t\tWP_CLI::error( 'Please specify a timestamp to restore.' );\n\t\t\treturn;\n\t\t}\n\n\t\treturn $this->preset->restore( $timestamp );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/cli/option.cls.php","ext":"php","size":10300,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * LiteSpeed Cache option Interface CLI.\n *\n * @package LiteSpeed\\CLI\n */\n\nnamespace LiteSpeed\\CLI;\n\ndefined( 'WPINC' ) || exit();\n\nuse LiteSpeed\\Base;\nuse LiteSpeed\\Admin_Settings;\nuse LiteSpeed\\Utility;\nuse WP_CLI;\nuse WP_Filesystem;\n\n/**\n * LiteSpeed Cache option Interface\n */\nclass Option extends Base {\n\n\t/**\n\t * Set an individual LiteSpeed Cache option.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <key>\n\t * : The option key to update.\n\t *\n\t * <newvalue>\n\t * : The new value to set the option to.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Set to not cache the login page\n\t *     $ wp litespeed-option set cache-priv false\n\t *     $ wp litespeed-option set 'cdn-mapping[url][0]' https://cdn.EXAMPLE.com\n\t *     $ wp litespeed-option set media-lqip_exc $'line1\\nline2'\n\t *\n\t * @param array $args Positional arguments (key, newvalue).\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function set( $args, $assoc_args ) {\n\t\t// Note: If the value is multiple dimensions like cdn-mapping, need to specially handle it both here and in `const.default.json`\n\t\t// For CDN/Crawler multi dimension settings, if all children are empty in one line, will delete that line. To delete one line, just set all to empty.\n\t\t// E.g. to delete cdn-mapping[0], need to run below:\n\t\t// `set cdn-mapping[url][0] ''`\n\t\t// `set cdn-mapping[inc_img][0] ''`\n\t\t// `set cdn-mapping[inc_css][0] ''`\n\t\t// `set cdn-mapping[inc_js][0] ''`\n\t\t// `set cdn-mapping[filetype][0] ''`\n\n\t\t$key = $args[0];\n\t\t$val = $args[1];\n\n\t\t// For CDN mapping, allow:\n\t\t// `set 'cdn-mapping[url][0]' https://the1st_cdn_url`\n\t\t// `set 'cdn-mapping[inc_img][0]' true`\n\t\t// `set 'cdn-mapping[inc_img][0]' 1`\n\t\t//\n\t\t// For Crawler cookies:\n\t\t// `set 'crawler-cookies[name][0]' my_currency`\n\t\t// `set 'crawler-cookies[vals][0]' \"USD\\nTWD\"`\n\t\t//\n\t\t// For multi lines setting:\n\t\t// `set media-lqip_exc $'img1.jpg\\nimg2.jpg'`\n\n\t\t// Build raw data\n\t\t$raw_data = array(\n\t\t\tAdmin_Settings::ENROLL => array( $key ),\n\t\t);\n\n\t\t// Contains child set\n\t\tif ( false !== strpos( $key, '[' ) ) {\n\t\t\tparse_str( $key . '=' . $val, $key2 );\n\t\t\t$raw_data = array_merge( $raw_data, $key2 );\n\t\t} else {\n\t\t\t$raw_data[ $key ] = $val;\n\t\t}\n\n\t\t$this->cls( 'Admin_Settings' )->save( $raw_data );\n\t\tWP_CLI::line( \"$key:\" );\n\t\t$this->get( $args, $assoc_args );\n\t}\n\n\t/**\n\t * Get all plugin options.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--format=<format>]\n\t * : Output format (e.g., json).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Get all options\n\t *     $ wp litespeed-option all\n\t *     $ wp litespeed-option all --json\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function all( $args, $assoc_args ) {\n\t\t$options = $this->get_options();\n\n\t\tif ( ! empty( $assoc_args['format'] ) ) {\n\t\t\tWP_CLI::print_value( $options, $assoc_args );\n\t\t\treturn;\n\t\t}\n\n\t\t$option_out = array();\n\n\t\t$buf = WP_CLI::colorize( '%CThe list of options:%n' );\n\t\tWP_CLI::line( $buf );\n\n\t\tforeach ( $options as $k => $v ) {\n\t\t\tif ( self::O_CDN_MAPPING === $k || self::O_CRAWLER_COOKIES === $k ) {\n\t\t\t\tforeach ( $v as $k2 => $v2 ) {\n\t\t\t\t\t// $k2 is numeric\n\t\t\t\t\tif ( is_array( $v2 ) ) {\n\t\t\t\t\t\tforeach ( $v2 as $k3 => $v3 ) {\n\t\t\t\t\t\t\t// $k3 is 'url/inc_img/name/vals'\n\t\t\t\t\t\t\tif ( is_array( $v3 ) ) {\n\t\t\t\t\t\t\t\t$option_out[] = array(\n\t\t\t\t\t\t\t\t\t'key'   => '',\n\t\t\t\t\t\t\t\t\t'value' => '',\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tforeach ( $v3 as $k4 => $v4 ) {\n\t\t\t\t\t\t\t\t\t$option_out[] = array(\n\t\t\t\t\t\t\t\t\t\t'key'   => 0 === $k4 ? \"{$k}[$k3][$k2]\" : '',\n\t\t\t\t\t\t\t\t\t\t'value' => $v4,\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$option_out[] = array(\n\t\t\t\t\t\t\t\t\t'key'   => '',\n\t\t\t\t\t\t\t\t\t'value' => '',\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t$option_out[] = array(\n\t\t\t\t\t\t\t\t\t'key'   => \"{$k}[$k3][$k2]\",\n\t\t\t\t\t\t\t\t\t'value' => $v3,\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t} elseif ( is_array( $v ) && $v ) {\n\t\t\t\t$option_out[] = array(\n\t\t\t\t\t'key'   => '',\n\t\t\t\t\t'value' => '',\n\t\t\t\t);\n\t\t\t\tforeach ( $v as $k2 => $v2 ) {\n\t\t\t\t\t$option_out[] = array(\n\t\t\t\t\t\t'key'   => 0 === $k2 ? $k : '',\n\t\t\t\t\t\t'value' => $v2,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\t$option_out[] = array(\n\t\t\t\t\t'key'   => '',\n\t\t\t\t\t'value' => '',\n\t\t\t\t);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( array_key_exists( $k, self::$_default_options ) && is_bool( self::$_default_options[ $k ] ) && ! $v ) {\n\t\t\t\t$v = 0;\n\t\t\t}\n\n\t\t\tif ( '' === $v || array() === $v ) {\n\t\t\t\t$v = \"''\";\n\t\t\t}\n\n\t\t\t$option_out[] = array(\n\t\t\t\t'key'   => $k,\n\t\t\t\t'value' => $v,\n\t\t\t);\n\t\t}\n\n\t\tWP_CLI\\Utils\\format_items( 'table', $option_out, array( 'key', 'value' ) );\n\t}\n\n\t/**\n\t * Get a specific plugin option.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <id>\n\t * : The option ID to retrieve (e.g., cache-priv, cdn-mapping[url][0]).\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Get one option\n\t *     $ wp litespeed-option get cache-priv\n\t *     $ wp litespeed-option get 'cdn-mapping[url][0]'\n\t *\n\t * @param array $args Positional arguments (id).\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function get( $args, $assoc_args ) {\n\t\t$id = $args[0];\n\n\t\t$child = false;\n\t\tif ( false !== strpos( $id, '[' ) ) {\n\t\t\tparse_str( $id, $id2 );\n\t\t\tUtility::compatibility();\n\t\t\t$id = array_key_first( $id2 );\n\n\t\t\t$child = array_key_first( $id2[ $id ] ); // is `url`\n\t\t\tif ( ! $child ) {\n\t\t\t\tWP_CLI::error( 'Wrong child key' );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$numeric = array_key_first( $id2[ $id ][ $child ] ); // `0`\n\t\t\tif ( null === $numeric ) {\n\t\t\t\tWP_CLI::error( 'Wrong 2nd level numeric key' );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( ! isset( self::$_default_options[ $id ] ) ) {\n\t\t\tWP_CLI::error( 'ID not exist [id] ' . $id );\n\t\t\treturn;\n\t\t}\n\n\t\t$v         = $this->conf( $id );\n\t\t$default_v = self::$_default_options[ $id ];\n\n\t\t// For CDN_mapping and crawler_cookies\n\t\t// Examples of option name:\n\t\t// cdn-mapping[url][0]\n\t\t// crawler-cookies[name][1]\n\t\tif ( self::O_CDN_MAPPING === $id ) {\n\t\t\tif ( ! in_array( $child, array( self::CDN_MAPPING_URL, self::CDN_MAPPING_INC_IMG, self::CDN_MAPPING_INC_CSS, self::CDN_MAPPING_INC_JS, self::CDN_MAPPING_FILETYPE ), true ) ) {\n\t\t\t\tWP_CLI::error( 'Wrong child key' );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif ( self::O_CRAWLER_COOKIES === $id ) {\n\t\t\tif ( ! in_array( $child, array( self::CRWL_COOKIE_NAME, self::CRWL_COOKIE_VALS ), true ) ) {\n\t\t\t\tWP_CLI::error( 'Wrong child key' );\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif ( self::O_CDN_MAPPING === $id || self::O_CRAWLER_COOKIES === $id ) {\n\t\t\tif ( ! empty( $v[ $numeric ][ $child ] ) ) {\n\t\t\t\t$v = $v[ $numeric ][ $child ];\n\t\t\t} elseif ( self::O_CDN_MAPPING === $id ) {\n\t\t\t\tif ( in_array( $child, array( self::CDN_MAPPING_INC_IMG, self::CDN_MAPPING_INC_CSS, self::CDN_MAPPING_INC_JS ), true ) ) {\n\t\t\t\t\t$v = 0;\n\t\t\t\t} else {\n\t\t\t\t\t$v = \"''\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$v = \"''\";\n\t\t\t}\n\t\t}\n\n\t\tif ( is_array( $v ) ) {\n\t\t\t$v = implode( PHP_EOL, $v );\n\t\t}\n\n\t\tif ( ! $v && self::O_CDN_MAPPING !== $id && self::O_CRAWLER_COOKIES !== $id ) {\n\t\t\t// empty array for CDN/crawler has been handled\n\t\t\tif ( is_bool( $default_v ) ) {\n\t\t\t\t$v = 0;\n\t\t\t} elseif ( ! is_array( $default_v ) ) {\n\t\t\t\t$v = \"''\";\n\t\t\t}\n\t\t}\n\n\t\tWP_CLI::line( $v );\n\t}\n\n\t/**\n\t * Export plugin options to a file.\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--filename=<path>]\n\t * : The default path used is CURRENTDIR/lscache_wp_options_DATE-TIME.txt.\n\t * To select a different file, use this option.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Export options to a file.\n\t *     $ wp litespeed-option export\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function export( $args, $assoc_args ) {\n\t\tif ( isset( $assoc_args['filename'] ) ) {\n\t\t\t$file = $assoc_args['filename'];\n\t\t} else {\n\t\t\t$file = getcwd() . '/litespeed_options_' . gmdate( 'd_m_Y-His' ) . '.data';\n\t\t}\n\n\t\tglobal $wp_filesystem;\n\t\tif ( ! $wp_filesystem ) {\n\t\t\trequire_once ABSPATH . '/wp-admin/includes/file.php';\n\t\t\tWP_Filesystem();\n\t\t}\n\n\t\tif ( ! $wp_filesystem->is_writable( dirname( $file ) ) ) {\n\t\t\tWP_CLI::error( 'Directory not writable.' );\n\t\t\treturn;\n\t\t}\n\n\t\t$data = $this->cls( 'Import' )->export( true );\n\n\t\tif ( false === $wp_filesystem->put_contents( $file, $data ) ) {\n\t\t\tWP_CLI::error( 'Failed to create file.' );\n\t\t\treturn;\n\t\t}\n\n\t\tWP_CLI::success( 'Created file ' . $file );\n\t}\n\n\t/**\n\t * Import plugin options from a file.\n\t *\n\t * The file must be formatted as such:\n\t * option_key=option_value\n\t * One per line.\n\t * A semicolon at the beginning of the line indicates a comment and will be skipped.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <file>\n\t * : The file to import options from.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Import options from CURRENTDIR/options.txt\n\t *     $ wp litespeed-option import options.txt\n\t *\n\t * @param array $args Positional arguments (file).\n\t * @param array $assoc_args Associative arguments.\n\t */\n\tpublic function import( $args, $assoc_args ) {\n\t\t$file = $args[0];\n\n\t\tglobal $wp_filesystem;\n\t\tif ( ! $wp_filesystem ) {\n\t\t\trequire_once ABSPATH . '/wp-admin/includes/file.php';\n\t\t\tWP_Filesystem();\n\t\t}\n\n\t\tif ( ! $wp_filesystem->exists( $file ) || ! $wp_filesystem->is_readable( $file ) ) {\n\t\t\tWP_CLI::error( 'File does not exist or is not readable.' );\n\t\t\treturn;\n\t\t}\n\n\t\t$res = $this->cls( 'Import' )->import( $file );\n\n\t\tif ( ! $res ) {\n\t\t\tWP_CLI::error( 'Failed to parse serialized data from file.' );\n\t\t\treturn;\n\t\t}\n\n\t\tWP_CLI::success( 'Options imported. [File] ' . $file );\n\t}\n\n\t/**\n\t * Import plugin options from a remote file.\n\t *\n\t * The file must be formatted as such:\n\t * option_key=option_value\n\t * One per line.\n\t * A semicolon at the beginning of the line indicates a comment and will be skipped.\n\t *\n\t * ## OPTIONS\n\t *\n\t * <url>\n\t * : The URL to import options from.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Import options from https://domain.com/options.txt\n\t *     $ wp litespeed-option import_remote https://domain.com/options.txt\n\t *\n\t * @param array $args Positional arguments (url).\n\t */\n\tpublic function import_remote( $args ) {\n\t\t$file = $args[0];\n\n\t\t$tmp_file = download_url( $file );\n\n\t\tif ( is_wp_error( $tmp_file ) ) {\n\t\t\tWP_CLI::error( 'Failed to download file.' );\n\t\t\treturn;\n\t\t}\n\n\t\t$res = $this->cls( 'Import' )->import( $tmp_file );\n\n\t\tif ( ! $res ) {\n\t\t\tWP_CLI::error( 'Failed to parse serialized data from file.' );\n\t\t\treturn;\n\t\t}\n\n\t\tWP_CLI::success( 'Options imported. [File] ' . $file );\n\t}\n\n\t/**\n\t * Reset all options to default.\n\t *\n\t * ## EXAMPLES\n\t *\n\t *     # Reset all options\n\t *     $ wp litespeed-option reset\n\t */\n\tpublic function reset() {\n\t\t$this->cls( 'Import' )->reset();\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/object-cache.php","ext":"php","size":1868,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n\n/**\n * Plugin Name:       LiteSpeed Cache - Object Cache (Drop-in)\n * Plugin URI:        https://www.litespeedtech.com/products/cache-plugins/wordpress-acceleration\n * Description:       High-performance page caching and site optimization from LiteSpeed.\n * Author:            LiteSpeed Technologies\n * Author URI:        https://www.litespeedtech.com\n */\n\ndefined( 'WPINC' ) || exit;\n/**\n * LiteSpeed Object Cache\n *\n * @since  1.8\n */\n\n! defined( 'LSCWP_OBJECT_CACHE' ) && define( 'LSCWP_OBJECT_CACHE', true );\n\n// Initialize const `LSCWP_DIR` and locate LSCWP plugin folder\n$lscwp_dir = ( defined( 'WP_PLUGIN_DIR' ) ? WP_PLUGIN_DIR : WP_CONTENT_DIR . '/plugins' ) . '/litespeed-cache/';\n\n// Use plugin as higher priority than MU plugin\nif ( ! file_exists( $lscwp_dir . 'litespeed-cache.php' ) ) {\n\t// Check if is mu plugin or not\n\t$lscwp_dir = ( defined( 'WPMU_PLUGIN_DIR' ) ? WPMU_PLUGIN_DIR : WP_CONTENT_DIR . '/mu-plugins' ) . '/litespeed-cache/';\n\tif ( ! file_exists( $lscwp_dir . 'litespeed-cache.php' ) ) {\n\t\t$lscwp_dir = '';\n\t}\n}\n\n$data_file = WP_CONTENT_DIR . '/.litespeed_conf.dat';\n$lib_file  = $lscwp_dir . 'src/object.lib.php';\n\n// Can't find LSCWP location, terminate object cache process\nif ( ! $lscwp_dir || ! file_exists( $data_file ) || ( ! file_exists( $lib_file ) ) ) {\n\tif ( ! is_admin() ) { // Bypass object cache for frontend\n\t\trequire_once ABSPATH . WPINC . '/cache.php';\n\t} else {\n\t\t$err = 'Can NOT find LSCWP path for object cache initialization in ' . __FILE__;\n\t\terror_log( $err );\n\t\tadd_action(\n\t\t\tis_network_admin() ? 'network_admin_notices' : 'admin_notices',\n\t\t\tfunction () use ( &$err ) {\n\t\t\t\techo $err;\n\t\t\t}\n\t\t);\n\t}\n} elseif ( ! LSCWP_OBJECT_CACHE ) {\n\t// Disable cache\n\t\twp_using_ext_object_cache( false );\n}\n\t// Init object cache & LSCWP\nelseif ( file_exists( $lib_file ) ) {\n\trequire_once $lib_file;\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/urirewriter.cls.php","ext":"php","size":9189,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * Rewrite file-relative URIs as root-relative in CSS files\n *\n * @package Minify\n * @author Stephen Clay <steve@mrclay.org>\n */\n\nnamespace LiteSpeed\\Lib;\n\ndefined( 'WPINC' ) || exit;\n\nclass UriRewriter {\n\n\n\t/**\n\t * rewrite() and rewriteRelative() append debugging information here\n\t *\n\t * @var string\n\t */\n\tpublic static $debugText = '';\n\n\t/**\n\t * In CSS content, rewrite file relative URIs as root relative\n\t *\n\t * @param string $css\n\t *\n\t * @param string $currentDir The directory of the current CSS file.\n\t *\n\t * @param string $docRoot The document root of the web site in which\n\t * the CSS file resides (default = $_SERVER['DOCUMENT_ROOT']).\n\t *\n\t * @param array  $symlinks (default = array()) If the CSS file is stored in\n\t *  a symlink-ed directory, provide an array of link paths to\n\t *  target paths, where the link paths are within the document root. Because\n\t *  paths need to be normalized for this to work, use \"//\" to substitute\n\t *  the doc root in the link paths (the array keys). E.g.:\n\t *  <code>\n\t *  array('//symlink' => '/real/target/path') // unix\n\t *  array('//static' => 'D:\\\\staticStorage')  // Windows\n\t *  </code>\n\t *\n\t * @return string\n\t */\n\tpublic static function rewrite( $css, $currentDir, $docRoot = null, $symlinks = array() ) {\n\t\tself::$_docRoot    = self::_realpath(\n\t\t\t$docRoot ? $docRoot : $_SERVER['DOCUMENT_ROOT']\n\t\t);\n\t\tself::$_currentDir = self::_realpath( $currentDir );\n\t\tself::$_symlinks   = array();\n\n\t\t// normalize symlinks in order to map to link\n\t\tforeach ( $symlinks as $link => $target ) {\n\t\t\t$link = ( $link === '//' ) ? self::$_docRoot : str_replace( '//', self::$_docRoot . '/', $link );\n\t\t\t$link = strtr( $link, '/', DIRECTORY_SEPARATOR );\n\n\t\t\tself::$_symlinks[ $link ] = self::_realpath( $target );\n\t\t}\n\n\t\tself::$debugText .= 'docRoot    : ' . self::$_docRoot . \"\\n\"\n\t\t\t\t\t\t\t. 'currentDir : ' . self::$_currentDir . \"\\n\";\n\t\tif ( self::$_symlinks ) {\n\t\t\tself::$debugText .= 'symlinks : ' . var_export( self::$_symlinks, 1 ) . \"\\n\";\n\t\t}\n\t\tself::$debugText .= \"\\n\";\n\n\t\t$css = self::_trimUrls( $css );\n\n\t\t$css = self::_owlifySvgPaths( $css );\n\n\t\t// rewrite\n\t\t$pattern = '/@import\\\\s+([\\'\"])(.*?)[\\'\"]/';\n\t\t$css     = preg_replace_callback( $pattern, __CLASS__ . '::_processUriCB', $css );\n\n\t\t$pattern = '/url\\\\(\\\\s*([\\'\"](.*?)[\\'\"]|[^\\\\)\\\\s]+)\\\\s*\\\\)/';\n\t\t$css     = preg_replace_callback( $pattern, __CLASS__ . '::_processUriCB', $css );\n\n\t\t$css = self::_unOwlify( $css );\n\n\t\treturn $css;\n\t}\n\n\t/**\n\t * In CSS content, prepend a path to relative URIs\n\t *\n\t * @param string $css\n\t *\n\t * @param string $path The path to prepend.\n\t *\n\t * @return string\n\t */\n\tpublic static function prepend( $css, $path ) {\n\t\tself::$_prependPath = $path;\n\n\t\t$css = self::_trimUrls( $css );\n\n\t\t$css = self::_owlifySvgPaths( $css );\n\n\t\t// append\n\t\t$pattern = '/@import\\\\s+([\\'\"])(.*?)[\\'\"]/';\n\t\t$css     = preg_replace_callback( $pattern, __CLASS__ . '::_processUriCB', $css );\n\n\t\t$pattern = '/url\\\\(\\\\s*([\\'\"](.*?)[\\'\"]|[^\\\\)\\\\s]+)\\\\s*\\\\)/';\n\t\t$css     = preg_replace_callback( $pattern, __CLASS__ . '::_processUriCB', $css );\n\n\t\t$css = self::_unOwlify( $css );\n\n\t\tself::$_prependPath = null;\n\n\t\treturn $css;\n\t}\n\n\t/**\n\t * Get a root relative URI from a file relative URI\n\t *\n\t * <code>\n\t * UriRewriter::rewriteRelative(\n\t *       '../img/hello.gif'\n\t *     , '/home/user/www/css'  // path of CSS file\n\t *     , '/home/user/www'      // doc root\n\t * );\n\t * // returns '/img/hello.gif'\n\t *\n\t * // example where static files are stored in a symlinked directory\n\t * UriRewriter::rewriteRelative(\n\t *       'hello.gif'\n\t *     , '/var/staticFiles/theme'\n\t *     , '/home/user/www'\n\t *     , array('/home/user/www/static' => '/var/staticFiles')\n\t * );\n\t * // returns '/static/theme/hello.gif'\n\t * </code>\n\t *\n\t * @param string $uri file relative URI\n\t *\n\t * @param string $realCurrentDir realpath of the current file's directory.\n\t *\n\t * @param string $realDocRoot realpath of the site document root.\n\t *\n\t * @param array  $symlinks (default = array()) If the file is stored in\n\t *  a symlink-ed directory, provide an array of link paths to\n\t *  real target paths, where the link paths \"appear\" to be within the document\n\t *  root. E.g.:\n\t *  <code>\n\t *  array('/home/foo/www/not/real/path' => '/real/target/path') // unix\n\t *  array('C:\\\\htdocs\\\\not\\\\real' => 'D:\\\\real\\\\target\\\\path')  // Windows\n\t *  </code>\n\t *\n\t * @return string\n\t */\n\tpublic static function rewriteRelative( $uri, $realCurrentDir, $realDocRoot, $symlinks = array() ) {\n\t\t// prepend path with current dir separator (OS-independent)\n\t\t$path  = strtr( $realCurrentDir, '/', DIRECTORY_SEPARATOR );\n\t\t$path .= DIRECTORY_SEPARATOR . strtr( $uri, '/', DIRECTORY_SEPARATOR );\n\n\t\tself::$debugText .= \"file-relative URI  : {$uri}\\n\"\n\t\t\t\t\t\t\t. \"path prepended     : {$path}\\n\";\n\n\t\t// \"unresolve\" a symlink back to doc root\n\t\tforeach ( $symlinks as $link => $target ) {\n\t\t\tif ( 0 === strpos( $path, $target ) ) {\n\t\t\t\t// replace $target with $link\n\t\t\t\t$path = $link . substr( $path, strlen( $target ) );\n\n\t\t\t\tself::$debugText .= \"symlink unresolved : {$path}\\n\";\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// strip doc root\n\t\t$path = substr( $path, strlen( $realDocRoot ) );\n\n\t\tself::$debugText .= \"docroot stripped   : {$path}\\n\";\n\n\t\t// fix to root-relative URI\n\t\t$uri = strtr( $path, '/\\\\', '//' );\n\t\t$uri = self::removeDots( $uri );\n\n\t\tself::$debugText .= \"traversals removed : {$uri}\\n\\n\";\n\n\t\treturn $uri;\n\t}\n\n\t/**\n\t * Remove instances of \"./\" and \"../\" where possible from a root-relative URI\n\t *\n\t * @param string $uri\n\t *\n\t * @return string\n\t */\n\tpublic static function removeDots( $uri ) {\n\t\t$uri = str_replace( '/./', '/', $uri );\n\t\t// inspired by patch from Oleg Cherniy\n\t\tdo {\n\t\t\t$uri = preg_replace( '@/[^/]+/\\\\.\\\\./@', '/', $uri, 1, $changed );\n\t\t} while ( $changed );\n\n\t\treturn $uri;\n\t}\n\n\t/**\n\t * Get realpath with any trailing slash removed. If realpath() fails,\n\t * just remove the trailing slash.\n\t *\n\t * @param string $path\n\t *\n\t * @return mixed path with no trailing slash\n\t */\n\tprotected static function _realpath( $path ) {\n\t\t$realPath = realpath( $path );\n\t\tif ( $realPath !== false ) {\n\t\t\t$path = $realPath;\n\t\t}\n\n\t\treturn rtrim( $path, '/\\\\' );\n\t}\n\n\t/**\n\t * Directory of this stylesheet\n\t *\n\t * @var string\n\t */\n\tprivate static $_currentDir = '';\n\n\t/**\n\t * DOC_ROOT\n\t *\n\t * @var string\n\t */\n\tprivate static $_docRoot = '';\n\n\t/**\n\t * directory replacements to map symlink targets back to their\n\t * source (within the document root) E.g. '/var/www/symlink' => '/var/realpath'\n\t *\n\t * @var array\n\t */\n\tprivate static $_symlinks = array();\n\n\t/**\n\t * Path to prepend\n\t *\n\t * @var string\n\t */\n\tprivate static $_prependPath = null;\n\n\t/**\n\t * @param string $css\n\t *\n\t * @return string\n\t */\n\tprivate static function _trimUrls( $css ) {\n\t\t$pattern = '/\n            url\\\\(      # url(\n            \\\\s*\n            ([^\\\\)]+?)  # 1 = URI (assuming does not contain \")\")\n            \\\\s*\n            \\\\)         # )\n        /x';\n\n\t\treturn preg_replace( $pattern, 'url($1)', $css );\n\t}\n\n\t/**\n\t * @param array $m\n\t *\n\t * @return string\n\t */\n\tprivate static function _processUriCB( $m ) {\n\t\t// $m matched either '/@import\\\\s+([\\'\"])(.*?)[\\'\"]/' or '/url\\\\(\\\\s*([^\\\\)\\\\s]+)\\\\s*\\\\)/'\n\t\t$isImport = ( $m[0][0] === '@' );\n\t\t// determine URI and the quote character (if any)\n\t\tif ( $isImport ) {\n\t\t\t$quoteChar = $m[1];\n\t\t\t$uri       = $m[2];\n\t\t} else {\n\t\t\t// $m[1] is either quoted or not\n\t\t\t$quoteChar = ( $m[1][0] === \"'\" || $m[1][0] === '\"' ) ? $m[1][0] : '';\n\n\t\t\t$uri = ( $quoteChar === '' ) ? $m[1] : substr( $m[1], 1, strlen( $m[1] ) - 2 );\n\t\t}\n\n\t\tif ( $uri === '' ) {\n\t\t\treturn $m[0];\n\t\t}\n\n\t\t// if not anchor id, not root/scheme relative, and not starts with scheme\n\t\tif ( ! preg_match( '~^(#|/|[a-z]+\\:)~', $uri ) ) {\n\t\t\t// URI is file-relative: rewrite depending on options\n\t\t\tif ( self::$_prependPath === null ) {\n\t\t\t\t$uri = self::rewriteRelative( $uri, self::$_currentDir, self::$_docRoot, self::$_symlinks );\n\t\t\t} else {\n\t\t\t\t$uri = self::$_prependPath . $uri;\n\t\t\t\tif ( $uri[0] === '/' ) {\n\t\t\t\t\t$root         = '';\n\t\t\t\t\t$rootRelative = $uri;\n\t\t\t\t\t$uri          = $root . self::removeDots( $rootRelative );\n\t\t\t\t} elseif ( preg_match( '@^((https?\\:)?//([^/]+))/@', $uri, $m ) && ( false !== strpos( $m[3], '.' ) ) ) {\n\t\t\t\t\t$root         = $m[1];\n\t\t\t\t\t$rootRelative = substr( $uri, strlen( $root ) );\n\t\t\t\t\t$uri          = $root . self::removeDots( $rootRelative );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( $isImport ) {\n\t\t\treturn \"@import {$quoteChar}{$uri}{$quoteChar}\";\n\t\t} else {\n\t\t\treturn \"url({$quoteChar}{$uri}{$quoteChar})\";\n\t\t}\n\t}\n\n\t/**\n\t * Mungs some inline SVG URL declarations so they won't be touched\n\t *\n\t * @link https://github.com/mrclay/minify/issues/517\n\t * @see _unOwlify\n\t *\n\t * @param string $css\n\t * @return string\n\t */\n\tprivate static function _owlifySvgPaths( $css ) {\n\t\t$pattern = '~\\b((?:clip-path|mask|-webkit-mask)\\s*\\:\\s*)url(\\(\\s*#\\w+\\s*\\))~';\n\n\t\treturn preg_replace( $pattern, '$1owl$2', $css );\n\t}\n\n\t/**\n\t * Undo work of _owlify\n\t *\n\t * @see _owlifySvgPaths\n\t *\n\t * @param string $css\n\t * @return string\n\t */\n\tprivate static function _unOwlify( $css ) {\n\t\t$pattern = '~\\b((?:clip-path|mask|-webkit-mask)\\s*\\:\\s*)owl~';\n\n\t\treturn preg_replace( $pattern, '$1url', $css );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/pathconverter/converter.cls.php","ext":"php","size":5504,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * modified PHP implementation of Matthias Mullie's convert path class\n * Convert paths relative from 1 file to another.\n *\n * E.g.\n *     ../../images/icon.jpg relative to /css/imports/icons.css\n * becomes\n *     ../images/icon.jpg relative to /css/minified.css\n *\n * @author Matthias Mullie <pathconverter@mullie.eu>\n * @copyright Copyright (c) 2015, Matthias Mullie. All rights reserved\n * @license MIT License\n */\n\nnamespace LiteSpeed\\Lib\\CSS_JS_MIN\\PathConverter;\n\ndefined( 'WPINC' ) || exit;\n\ninterface ConverterInterface {\n\n\t/**\n\t * Convert file paths.\n\t *\n\t * @param string $path The path to be converted\n\t *\n\t * @return string The new path\n\t */\n\tpublic function convert( $path );\n}\n\nclass Converter implements ConverterInterface {\n\n\t/**\n\t * @var string\n\t */\n\tprotected $from;\n\n\t/**\n\t * @var string\n\t */\n\tprotected $to;\n\n\t/**\n\t * @param string $from The original base path (directory, not file!)\n\t * @param string $to   The new base path (directory, not file!)\n\t * @param string $root Root directory (defaults to `getcwd`)\n\t */\n\tpublic function __construct( $from, $to, $root = '' ) {\n\t\t$shared = $this->shared( $from, $to );\n\t\tif ( $shared === '' ) {\n\t\t\t// when both paths have nothing in common, one of them is probably\n\t\t\t// absolute while the other is relative\n\t\t\t$root = $root ?: getcwd();\n\t\t\t$from = strpos( $from, $root ) === 0 ? $from : preg_replace( '/\\/+/', '/', $root . '/' . $from );\n\t\t\t$to   = strpos( $to, $root ) === 0 ? $to : preg_replace( '/\\/+/', '/', $root . '/' . $to );\n\n\t\t\t// or traveling the tree via `..`\n\t\t\t// attempt to resolve path, or assume it's fine if it doesn't exist\n\t\t\t$from = @realpath( $from ) ?: $from;\n\t\t\t$to   = @realpath( $to ) ?: $to;\n\t\t}\n\n\t\t$from = $this->dirname( $from );\n\t\t$to   = $this->dirname( $to );\n\n\t\t$from = $this->normalize( $from );\n\t\t$to   = $this->normalize( $to );\n\n\t\t$this->from = $from;\n\t\t$this->to   = $to;\n\t}\n\n\t/**\n\t * Normalize path.\n\t *\n\t * @param string $path\n\t *\n\t * @return string\n\t */\n\tprotected function normalize( $path ) {\n\t\t// deal with different operating systems' directory structure\n\t\t$path = rtrim( str_replace( DIRECTORY_SEPARATOR, '/', $path ), '/' );\n\n\t\t// remove leading current directory.\n\t\tif ( substr( $path, 0, 2 ) === './' ) {\n\t\t\t$path = substr( $path, 2 );\n\t\t}\n\n\t\t// remove references to current directory in the path.\n\t\t$path = str_replace( '/./', '/', $path );\n\n\t\t/*\n\t\t * Example:\n\t\t *     /home/forkcms/frontend/cache/compiled_templates/../../core/layout/css/../images/img.gif\n\t\t * to\n\t\t *     /home/forkcms/frontend/core/layout/images/img.gif\n\t\t */\n\t\tdo {\n\t\t\t$path = preg_replace( '/[^\\/]+(?<!\\.\\.)\\/\\.\\.\\//', '', $path, -1, $count );\n\t\t} while ( $count );\n\n\t\treturn $path;\n\t}\n\n\t/**\n\t * Figure out the shared path of 2 locations.\n\t *\n\t * Example:\n\t *     /home/forkcms/frontend/core/layout/images/img.gif\n\t * and\n\t *     /home/forkcms/frontend/cache/minified_css\n\t * share\n\t *     /home/forkcms/frontend\n\t *\n\t * @param string $path1\n\t * @param string $path2\n\t *\n\t * @return string\n\t */\n\tprotected function shared( $path1, $path2 ) {\n\t\t// $path could theoretically be empty (e.g. no path is given), in which\n\t\t// case it shouldn't expand to array(''), which would compare to one's\n\t\t// root /\n\t\t$path1 = $path1 ? explode( '/', $path1 ) : array();\n\t\t$path2 = $path2 ? explode( '/', $path2 ) : array();\n\n\t\t$shared = array();\n\n\t\t// compare paths & strip identical ancestors\n\t\tforeach ( $path1 as $i => $chunk ) {\n\t\t\tif ( isset( $path2[ $i ] ) && $path1[ $i ] == $path2[ $i ] ) {\n\t\t\t\t$shared[] = $chunk;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn implode( '/', $shared );\n\t}\n\n\t/**\n\t * Convert paths relative from 1 file to another.\n\t *\n\t * E.g.\n\t *     ../images/img.gif relative to /home/forkcms/frontend/core/layout/css\n\t * should become:\n\t *     ../../core/layout/images/img.gif relative to\n\t *     /home/forkcms/frontend/cache/minified_css\n\t *\n\t * @param string $path The relative path that needs to be converted\n\t *\n\t * @return string The new relative path\n\t */\n\tpublic function convert( $path ) {\n\t\t// quit early if conversion makes no sense\n\t\tif ( $this->from === $this->to ) {\n\t\t\treturn $path;\n\t\t}\n\n\t\t$path = $this->normalize( $path );\n\t\t// if we're not dealing with a relative path, just return absolute\n\t\tif ( strpos( $path, '/' ) === 0 ) {\n\t\t\treturn $path;\n\t\t}\n\n\t\t// normalize paths\n\t\t$path = $this->normalize( $this->from . '/' . $path );\n\n\t\t// strip shared ancestor paths\n\t\t$shared = $this->shared( $path, $this->to );\n\t\t$path   = mb_substr( $path, mb_strlen( $shared ) );\n\t\t$to     = mb_substr( $this->to, mb_strlen( $shared ) );\n\n\t\t// add .. for every directory that needs to be traversed to new path\n\t\t$to = str_repeat( '../', count( array_filter( explode( '/', $to ) ) ) );\n\n\t\treturn $to . ltrim( $path, '/' );\n\t}\n\n\t/**\n\t * Attempt to get the directory name from a path.\n\t *\n\t * @param string $path\n\t *\n\t * @return string\n\t */\n\tprotected function dirname( $path ) {\n\t\tif ( @is_file( $path ) ) {\n\t\t\treturn dirname( $path );\n\t\t}\n\n\t\tif ( @is_dir( $path ) ) {\n\t\t\treturn rtrim( $path, '/' );\n\t\t}\n\n\t\t// no known file/dir, start making assumptions\n\n\t\t// ends in / = dir\n\t\tif ( mb_substr( $path, -1 ) === '/' ) {\n\t\t\treturn rtrim( $path, '/' );\n\t\t}\n\n\t\t// has a dot in the name, likely a file\n\t\tif ( preg_match( '/.*\\..*$/', basename( $path ) ) !== 0 ) {\n\t\t\treturn dirname( $path );\n\t\t}\n\n\t\t// you're on your own here!\n\t\treturn $path;\n\t}\n}\n\nclass NoConverter implements ConverterInterface {\n\n\t/**\n\t * {@inheritdoc}\n\t */\n\tpublic function convert( $path ) {\n\t\treturn $path;\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/css.cls.php","ext":"php","size":27237,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * css.cls.php - modified PHP implementation of Matthias Mullie's CSS minifier\n *\n * @author Matthias Mullie <minify@mullie.eu>\n * @copyright Copyright (c) 2012, Matthias Mullie. All rights reserved\n * @license MIT License\n */\n\nnamespace LiteSpeed\\Lib\\CSS_JS_MIN\\Minify;\n\nuse LiteSpeed\\Lib\\CSS_JS_MIN\\Minify\\Minify;\nuse LiteSpeed\\Lib\\CSS_JS_MIN\\Minify\\Exception\\FileImportException;\nuse LiteSpeed\\Lib\\CSS_JS_MIN\\PathConverter\\Converter;\nuse LiteSpeed\\Lib\\CSS_JS_MIN\\PathConverter\\ConverterInterface;\n\ndefined( 'WPINC' ) || exit;\n\nclass CSS extends Minify {\n\n\t/**\n\t * @var int maximum import size in kB\n\t */\n\tprotected $maxImportSize = 5;\n\n\t/**\n\t * @var string[] valid import extensions\n\t */\n\tprotected $importExtensions = array(\n\t\t'gif'   => 'data:image/gif',\n\t\t'png'   => 'data:image/png',\n\t\t'jpe'   => 'data:image/jpeg',\n\t\t'jpg'   => 'data:image/jpeg',\n\t\t'jpeg'  => 'data:image/jpeg',\n\t\t'svg'   => 'data:image/svg+xml',\n\t\t'woff'  => 'data:application/x-font-woff',\n\t\t'woff2' => 'data:application/x-font-woff2',\n\t\t'avif'  => 'data:image/avif',\n\t\t'apng'  => 'data:image/apng',\n\t\t'webp'  => 'data:image/webp',\n\t\t'tif'   => 'image/tiff',\n\t\t'tiff'  => 'image/tiff',\n\t\t'xbm'   => 'image/x-xbitmap',\n\t);\n\n\t/**\n\t * Set the maximum size if files to be imported.\n\t *\n\t * Files larger than this size (in kB) will not be imported into the CSS.\n\t * Importing files into the CSS as data-uri will save you some connections,\n\t * but we should only import relatively small decorative images so that our\n\t * CSS file doesn't get too bulky.\n\t *\n\t * @param int $size Size in kB\n\t */\n\tpublic function setMaxImportSize( $size ) {\n\t\t$this->maxImportSize = $size;\n\t}\n\n\t/**\n\t * Set the type of extensions to be imported into the CSS (to save network\n\t * connections).\n\t * Keys of the array should be the file extensions & respective values\n\t * should be the data type.\n\t *\n\t * @param string[] $extensions Array of file extensions\n\t */\n\tpublic function setImportExtensions( array $extensions ) {\n\t\t$this->importExtensions = $extensions;\n\t}\n\n\t/**\n\t * Move any import statements to the top.\n\t *\n\t * @param string $content Nearly finished CSS content\n\t *\n\t * @return string\n\t */\n\tpublic function moveImportsToTop( $content ) {\n\t\tif ( preg_match_all( '/(;?)(@import (?<url>url\\()?(?P<quotes>[\"\\']?).+?(?P=quotes)(?(url)\\)));?/', $content, $matches ) ) {\n\t\t\t// remove from content\n\t\t\tforeach ( $matches[0] as $import ) {\n\t\t\t\t$content = str_replace( $import, '', $content );\n\t\t\t}\n\n\t\t\t// add to top\n\t\t\t$content = implode( ';', $matches[2] ) . ';' . trim( $content, ';' );\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Combine CSS from import statements.\n\t *\n\t * \\@import's will be loaded and their content merged into the original file,\n\t * to save HTTP requests.\n\t *\n\t * @param string   $source  The file to combine imports for\n\t * @param string   $content The CSS content to combine imports for\n\t * @param string[] $parents Parent paths, for circular reference checks\n\t *\n\t * @return string\n\t *\n\t * @throws FileImportException\n\t */\n\tprotected function combineImports( $source, $content, $parents ) {\n\t\t$importRegexes = array(\n\t\t\t// @import url(xxx)\n\t\t\t'/\n            # import statement\n            @import\n\n            # whitespace\n            \\s+\n\n                # open url()\n                url\\(\n\n                    # (optional) open path enclosure\n                    (?P<quotes>[\"\\']?)\n\n                        # fetch path\n                        (?P<path>.+?)\n\n                    # (optional) close path enclosure\n                    (?P=quotes)\n\n                # close url()\n                \\)\n\n                # (optional) trailing whitespace\n                \\s*\n\n                # (optional) media statement(s)\n                (?P<media>[^;]*)\n\n                # (optional) trailing whitespace\n                \\s*\n\n            # (optional) closing semi-colon\n            ;?\n\n            /ix',\n\n\t\t\t// @import 'xxx'\n\t\t\t'/\n\n            # import statement\n            @import\n\n            # whitespace\n            \\s+\n\n                # open path enclosure\n                (?P<quotes>[\"\\'])\n\n                    # fetch path\n                    (?P<path>.+?)\n\n                # close path enclosure\n                (?P=quotes)\n\n                # (optional) trailing whitespace\n                \\s*\n\n                # (optional) media statement(s)\n                (?P<media>[^;]*)\n\n                # (optional) trailing whitespace\n                \\s*\n\n            # (optional) closing semi-colon\n            ;?\n\n            /ix',\n\t\t);\n\n\t\t// find all relative imports in css\n\t\t$matches = array();\n\t\tforeach ( $importRegexes as $importRegex ) {\n\t\t\tif ( preg_match_all( $importRegex, $content, $regexMatches, PREG_SET_ORDER ) ) {\n\t\t\t\t$matches = array_merge( $matches, $regexMatches );\n\t\t\t}\n\t\t}\n\n\t\t$search  = array();\n\t\t$replace = array();\n\n\t\t// loop the matches\n\t\tforeach ( $matches as $match ) {\n\t\t\t// get the path for the file that will be imported\n\t\t\t$importPath = dirname( $source ) . '/' . $match['path'];\n\n\t\t\t// only replace the import with the content if we can grab the\n\t\t\t// content of the file\n\t\t\tif ( ! $this->canImportByPath( $match['path'] ) || ! $this->canImportFile( $importPath ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// check if current file was not imported previously in the same\n\t\t\t// import chain.\n\t\t\tif ( in_array( $importPath, $parents ) ) {\n\t\t\t\tthrow new FileImportException( 'Failed to import file \"' . $importPath . '\": circular reference detected.' );\n\t\t\t}\n\n\t\t\t// grab referenced file & minify it (which may include importing\n\t\t\t// yet other @import statements recursively)\n\t\t\t$minifier = new self( $importPath );\n\t\t\t$minifier->setMaxImportSize( $this->maxImportSize );\n\t\t\t$minifier->setImportExtensions( $this->importExtensions );\n\t\t\t$importContent = $minifier->execute( $source, $parents );\n\n\t\t\t// check if this is only valid for certain media\n\t\t\tif ( ! empty( $match['media'] ) ) {\n\t\t\t\t$importContent = '@media ' . $match['media'] . '{' . $importContent . '}';\n\t\t\t}\n\n\t\t\t// add to replacement array\n\t\t\t$search[]  = $match[0];\n\t\t\t$replace[] = $importContent;\n\t\t}\n\n\t\t// replace the import statements\n\t\treturn str_replace( $search, $replace, $content );\n\t}\n\n\t/**\n\t * Import files into the CSS, base64 encoded.\n\t *\n\t * Included images @url(image.jpg) will be loaded and their content merged into the\n\t * original file, to save HTTP requests.\n\t *\n\t * @param string $source  The file to import files for\n\t * @param string $content The CSS content to import files for\n\t *\n\t * @return string\n\t */\n\tprotected function importFiles( $source, $content ) {\n\t\t$regex = '/url\\(([\"\\']?)(.+?)\\\\1\\)/i';\n\t\tif ( $this->importExtensions && preg_match_all( $regex, $content, $matches, PREG_SET_ORDER ) ) {\n\t\t\t$search  = array();\n\t\t\t$replace = array();\n\n\t\t\t// loop the matches\n\t\t\tforeach ( $matches as $match ) {\n\t\t\t\t$extension = substr( strrchr( $match[2], '.' ), 1 );\n\t\t\t\tif ( $extension && ! array_key_exists( $extension, $this->importExtensions ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// get the path for the file that will be imported\n\t\t\t\t$path = $match[2];\n\t\t\t\t$path = dirname( $source ) . '/' . $path;\n\n\t\t\t\t// only replace the import with the content if we're able to get\n\t\t\t\t// the content of the file, and it's relatively small\n\t\t\t\tif ( $this->canImportFile( $path ) && $this->canImportBySize( $path ) ) {\n\t\t\t\t\t// grab content && base64-ize\n\t\t\t\t\t$importContent = $this->load( $path );\n\t\t\t\t\t$importContent = base64_encode( $importContent );\n\n\t\t\t\t\t// build replacement\n\t\t\t\t\t$search[]  = $match[0];\n\t\t\t\t\t$replace[] = 'url(' . $this->importExtensions[ $extension ] . ';base64,' . $importContent . ')';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// replace the import statements\n\t\t\t$content = str_replace( $search, $replace, $content );\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Minify the data.\n\t * Perform CSS optimizations.\n\t *\n\t * @param string[optional] $path    Path to write the data to\n\t * @param string[]         $parents Parent paths, for circular reference checks\n\t *\n\t * @return string The minified data\n\t */\n\tpublic function execute( $path = null, $parents = array() ) {\n\t\t$content = '';\n\n\t\t// loop CSS data (raw data and files)\n\t\tforeach ( $this->data as $source => $css ) {\n\t\t\t/*\n\t\t\t * Let's first take out strings & comments, since we can't just\n\t\t\t * remove whitespace anywhere. If whitespace occurs inside a string,\n\t\t\t * we should leave it alone. E.g.:\n\t\t\t * p { content: \"a   test\" }\n\t\t\t */\n\t\t\t$this->extractStrings();\n\t\t\t$this->stripComments();\n\t\t\t$this->extractMath();\n\t\t\t$this->extractCustomProperties();\n\t\t\t$css = $this->replace( $css );\n\n\t\t\t$css = $this->stripWhitespace( $css );\n\t\t\t$css = $this->convertLegacyColors( $css );\n\t\t\t$css = $this->cleanupModernColors( $css );\n\t\t\t$css = $this->shortenHEXColors( $css );\n\t\t\t$css = $this->shortenZeroes( $css );\n\t\t\t$css = $this->shortenFontWeights( $css );\n\t\t\t$css = $this->stripEmptyTags( $css );\n\n\t\t\t// restore the string we've extracted earlier\n\t\t\t$css = $this->restoreExtractedData( $css );\n\n\t\t\t$source  = is_int( $source ) ? '' : $source;\n\t\t\t$parents = $source ? array_merge( $parents, array( $source ) ) : $parents;\n\t\t\t$css     = $this->combineImports( $source, $css, $parents );\n\t\t\t$css     = $this->importFiles( $source, $css );\n\n\t\t\t/*\n\t\t\t * If we'll save to a new path, we'll have to fix the relative paths\n\t\t\t * to be relative no longer to the source file, but to the new path.\n\t\t\t * If we don't write to a file, fall back to same path so no\n\t\t\t * conversion happens (because we still want it to go through most\n\t\t\t * of the move code, which also addresses url() & @import syntax...)\n\t\t\t */\n\t\t\t$converter = $this->getPathConverter( $source, $path ?: $source );\n\t\t\t$css       = $this->move( $converter, $css );\n\n\t\t\t// combine css\n\t\t\t$content .= $css;\n\t\t}\n\n\t\t$content = $this->moveImportsToTop( $content );\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Moving a css file should update all relative urls.\n\t * Relative references (e.g. ../images/image.gif) in a certain css file,\n\t * will have to be updated when a file is being saved at another location\n\t * (e.g. ../../images/image.gif, if the new CSS file is 1 folder deeper).\n\t *\n\t * @param ConverterInterface $converter Relative path converter\n\t * @param string             $content   The CSS content to update relative urls for\n\t *\n\t * @return string\n\t */\n\tprotected function move( ConverterInterface $converter, $content ) {\n\t\t/*\n\t\t * Relative path references will usually be enclosed by url(). @import\n\t\t * is an exception, where url() is not necessary around the path (but is\n\t\t * allowed).\n\t\t * This *could* be 1 regular expression, where both regular expressions\n\t\t * in this array are on different sides of a |. But we're using named\n\t\t * patterns in both regexes, the same name on both regexes. This is only\n\t\t * possible with a (?J) modifier, but that only works after a fairly\n\t\t * recent PCRE version. That's why I'm doing 2 separate regular\n\t\t * expressions & combining the matches after executing of both.\n\t\t */\n\t\t$relativeRegexes = array(\n\t\t\t// url(xxx)\n\t\t\t'/\n            # open url()\n            url\\(\n\n                \\s*\n\n                # open path enclosure\n                (?P<quotes>[\"\\'])?\n\n                    # fetch path\n                    (?P<path>.+?)\n\n                # close path enclosure\n                (?(quotes)(?P=quotes))\n\n                \\s*\n\n            # close url()\n            \\)\n\n            /ix',\n\n\t\t\t// @import \"xxx\"\n\t\t\t'/\n            # import statement\n            @import\n\n            # whitespace\n            \\s+\n\n                # we don\\'t have to check for @import url(), because the\n                # condition above will already catch these\n\n                # open path enclosure\n                (?P<quotes>[\"\\'])\n\n                    # fetch path\n                    (?P<path>.+?)\n\n                # close path enclosure\n                (?P=quotes)\n\n            /ix',\n\t\t);\n\n\t\t// find all relative urls in css\n\t\t$matches = array();\n\t\tforeach ( $relativeRegexes as $relativeRegex ) {\n\t\t\tif ( preg_match_all( $relativeRegex, $content, $regexMatches, PREG_SET_ORDER ) ) {\n\t\t\t\t$matches = array_merge( $matches, $regexMatches );\n\t\t\t}\n\t\t}\n\n\t\t$search  = array();\n\t\t$replace = array();\n\n\t\t// loop all urls\n\t\tforeach ( $matches as $match ) {\n\t\t\t// determine if it's a url() or an @import match\n\t\t\t$type = ( strpos( $match[0], '@import' ) === 0 ? 'import' : 'url' );\n\n\t\t\t$url = $match['path'];\n\t\t\tif ( $this->canImportByPath( $url ) ) {\n\t\t\t\t// attempting to interpret GET-params makes no sense, so let's discard them for awhile\n\t\t\t\t$params = strrchr( $url, '?' );\n\t\t\t\t$url    = $params ? substr( $url, 0, -strlen( $params ) ) : $url;\n\n\t\t\t\t// fix relative url\n\t\t\t\t$url = $converter->convert( $url );\n\n\t\t\t\t// now that the path has been converted, re-apply GET-params\n\t\t\t\t$url .= $params;\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Urls with control characters above 0x7e should be quoted.\n\t\t\t * According to Mozilla's parser, whitespace is only allowed at the\n\t\t\t * end of unquoted urls.\n\t\t\t * Urls with `)` (as could happen with data: uris) should also be\n\t\t\t * quoted to avoid being confused for the url() closing parentheses.\n\t\t\t * And urls with a # have also been reported to cause issues.\n\t\t\t * Urls with quotes inside should also remain escaped.\n\t\t\t *\n\t\t\t * @see https://developer.mozilla.org/nl/docs/Web/CSS/url#The_url()_functional_notation\n\t\t\t * @see https://hg.mozilla.org/mozilla-central/rev/14abca4e7378\n\t\t\t * @see https://github.com/matthiasmullie/minify/issues/193\n\t\t\t */\n\t\t\t$url = trim( $url );\n\t\t\tif ( preg_match( '/[\\s\\)\\'\"#\\x{7f}-\\x{9f}]/u', $url ) ) {\n\t\t\t\t$url = $match['quotes'] . $url . $match['quotes'];\n\t\t\t}\n\n\t\t\t// build replacement\n\t\t\t$search[] = $match[0];\n\t\t\tif ( $type === 'url' ) {\n\t\t\t\t$replace[] = 'url(' . $url . ')';\n\t\t\t} elseif ( $type === 'import' ) {\n\t\t\t\t$replace[] = '@import \"' . $url . '\"';\n\t\t\t}\n\t\t}\n\n\t\t// replace urls\n\t\treturn str_replace( $search, $replace, $content );\n\t}\n\n\t/**\n\t * Shorthand HEX color codes.\n\t * #FF0000FF -> #f00 -> red\n\t * #FF00FF00 -> transparent.\n\t *\n\t * @param string $content The CSS content to shorten the HEX color codes for\n\t *\n\t * @return string\n\t */\n\tprotected function shortenHexColors( $content ) {\n\t\t// shorten repeating patterns within HEX ..\n\t\t$content = preg_replace( '/(?<=[: ])#([0-9a-f])\\\\1([0-9a-f])\\\\2([0-9a-f])\\\\3(?:([0-9a-f])\\\\4)?(?=[; }])/i', '#$1$2$3$4', $content );\n\n\t\t// remove alpha channel if it's pointless ..\n\t\t$content = preg_replace( '/(?<=[: ])#([0-9a-f]{6})ff(?=[; }])/i', '#$1', $content );\n\t\t$content = preg_replace( '/(?<=[: ])#([0-9a-f]{3})f(?=[; }])/i', '#$1', $content );\n\n\t\t// replace `transparent` with shortcut ..\n\t\t$content = preg_replace( '/(?<=[: ])#[0-9a-f]{6}00(?=[; }])/i', '#fff0', $content );\n\n\t\t$colors = array(\n\t\t\t// make these more readable\n\t\t\t'#00f'        => 'blue',\n\t\t\t'#dc143c'     => 'crimson',\n\t\t\t'#0ff'        => 'cyan',\n\t\t\t'#8b0000'     => 'darkred',\n\t\t\t'#696969'     => 'dimgray',\n\t\t\t'#ff69b4'     => 'hotpink',\n\t\t\t'#0f0'        => 'lime',\n\t\t\t'#fdf5e6'     => 'oldlace',\n\t\t\t'#87ceeb'     => 'skyblue',\n\t\t\t'#d8bfd8'     => 'thistle',\n\t\t\t// we can shorten some even more by replacing them with their color name\n\t\t\t'#f0ffff'     => 'azure',\n\t\t\t'#f5f5dc'     => 'beige',\n\t\t\t'#ffe4c4'     => 'bisque',\n\t\t\t'#a52a2a'     => 'brown',\n\t\t\t'#ff7f50'     => 'coral',\n\t\t\t'#ffd700'     => 'gold',\n\t\t\t'#808080'     => 'gray',\n\t\t\t'#008000'     => 'green',\n\t\t\t'#4b0082'     => 'indigo',\n\t\t\t'#fffff0'     => 'ivory',\n\t\t\t'#f0e68c'     => 'khaki',\n\t\t\t'#faf0e6'     => 'linen',\n\t\t\t'#800000'     => 'maroon',\n\t\t\t'#000080'     => 'navy',\n\t\t\t'#808000'     => 'olive',\n\t\t\t'#ffa500'     => 'orange',\n\t\t\t'#da70d6'     => 'orchid',\n\t\t\t'#cd853f'     => 'peru',\n\t\t\t'#ffc0cb'     => 'pink',\n\t\t\t'#dda0dd'     => 'plum',\n\t\t\t'#800080'     => 'purple',\n\t\t\t'#f00'        => 'red',\n\t\t\t'#fa8072'     => 'salmon',\n\t\t\t'#a0522d'     => 'sienna',\n\t\t\t'#c0c0c0'     => 'silver',\n\t\t\t'#fffafa'     => 'snow',\n\t\t\t'#d2b48c'     => 'tan',\n\t\t\t'#008080'     => 'teal',\n\t\t\t'#ff6347'     => 'tomato',\n\t\t\t'#ee82ee'     => 'violet',\n\t\t\t'#f5deb3'     => 'wheat',\n\t\t\t// or the other way around\n\t\t\t'black'       => '#000',\n\t\t\t'fuchsia'     => '#f0f',\n\t\t\t'magenta'     => '#f0f',\n\t\t\t'white'       => '#fff',\n\t\t\t'yellow'      => '#ff0',\n\t\t\t// and also `transparent`\n\t\t\t'transparent' => '#fff0',\n\t\t);\n\n\t\treturn preg_replace_callback(\n\t\t\t'/(?<=[: ])(' . implode( '|', array_keys( $colors ) ) . ')(?=[; }])/i',\n\t\t\tfunction ( $match ) use ( $colors ) {\n\t\t\t\treturn $colors[ strtolower( $match[0] ) ];\n\t\t\t},\n\t\t\t$content\n\t\t);\n\t}\n\n\t/**\n\t * Convert RGB|HSL color codes.\n\t * rgb(255,0,0,.5) -> rgb(255 0 0 / .5).\n\t * rgb(255,0,0) -> #f00.\n\t *\n\t * @param string $content The CSS content to shorten the RGB color codes for\n\t *\n\t * @return string\n\t */\n\tprotected function convertLegacyColors( $content ) {\n\t\t/*\n\t\t\thttps://drafts.csswg.org/css-color/#color-syntax-legacy\n\t\t\thttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\n\t\t\thttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\n\t\t*/\n\n\t\t// convert legacy color syntax\n\t\t$content = preg_replace( '/(rgb)a?\\(\\s*([0-9]{1,3}%?)\\s*,\\s*([0-9]{1,3}%?)\\s*,\\s*([0-9]{1,3}%?)\\s*,\\s*([0,1]?(?:\\.[0-9]*)?)\\s*\\)/i', '$1($2 $3 $4 / $5)', $content );\n\t\t$content = preg_replace( '/(rgb)a?\\(\\s*([0-9]{1,3}%?)\\s*,\\s*([0-9]{1,3}%?)\\s*,\\s*([0-9]{1,3}%?)\\s*\\)/i', '$1($2 $3 $4)', $content );\n\t\t$content = preg_replace( '/(hsl)a?\\(\\s*([0-9]+(?:deg|grad|rad|turn)?)\\s*,\\s*([0-9]{1,3}%)\\s*,\\s*([0-9]{1,3}%)\\s*,\\s*([0,1]?(?:\\.[0-9]*)?)\\s*\\)/i', '$1($2 $3 $4 / $5)', $content );\n\t\t$content = preg_replace( '/(hsl)a?\\(\\s*([0-9]+(?:deg|grad|rad|turn)?)\\s*,\\s*([0-9]{1,3}%)\\s*,\\s*([0-9]{1,3}%)\\s*\\)/i', '$1($2 $3 $4)', $content );\n\n\t\t// convert `rgb` to `hex`\n\t\t$dec = '([01]?[0-9]?[0-9]|2[0-4][0-9]|25[0-5])';\n\t\treturn preg_replace_callback(\n\t\t\t\"/rgb\\($dec $dec $dec\\)/i\",\n\t\t\tfunction ( $match ) {\n\t\t\t\treturn sprintf( '#%02x%02x%02x', $match[1], $match[2], $match[3] );\n\t\t\t},\n\t\t\t$content\n\t\t);\n\t}\n\n\t/**\n\t * Cleanup RGB|HSL|HWB|LCH|LAB\n\t * rgb(255 0 0 / 1) -> rgb(255 0 0).\n\t * rgb(255 0 0 / 0) -> transparent.\n\t *\n\t * @param string $content The CSS content to cleanup HSL|HWB|LCH|LAB\n\t *\n\t * @return string\n\t */\n\tprotected function cleanupModernColors( $content ) {\n\t\t/*\n\t\t\thttps://drafts.csswg.org/css-color/#color-syntax-modern\n\t\t\thttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hwb\n\t\t\thttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lch\n\t\t\thttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value/lab\n\t\t\thttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklch\n\t\t\thttps://developer.mozilla.org/en-US/docs/Web/CSS/color_value/oklab\n\t\t*/\n\t\t$tag = '(rgb|hsl|hwb|(?:(?:ok)?(?:lch|lab)))';\n\n\t\t// remove alpha channel if it's pointless ..\n\t\t$content = preg_replace( '/' . $tag . '\\(\\s*([^\\s]+)\\s+([^\\s]+)\\s+([^\\s]+)\\s+\\/\\s+1(?:(?:\\.\\d?)*|00%)?\\s*\\)/i', '$1($2 $3 $4)', $content );\n\n\t\t// replace `transparent` with shortcut ..\n\t\t$content = preg_replace( '/' . $tag . '\\(\\s*[^\\s]+\\s+[^\\s]+\\s+[^\\s]+\\s+\\/\\s+0(?:[\\.0%]*)?\\s*\\)/i', '#fff0', $content );\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Shorten CSS font weights.\n\t *\n\t * @param string $content The CSS content to shorten the font weights for\n\t *\n\t * @return string\n\t */\n\tprotected function shortenFontWeights( $content ) {\n\t\t$weights = array(\n\t\t\t'normal' => 400,\n\t\t\t'bold'   => 700,\n\t\t);\n\n\t\t$callback = function ( $match ) use ( $weights ) {\n\t\t\treturn $match[1] . $weights[ $match[2] ];\n\t\t};\n\n\t\treturn preg_replace_callback( '/(font-weight\\s*:\\s*)(' . implode( '|', array_keys( $weights ) ) . ')(?=[;}])/', $callback, $content );\n\t}\n\n\t/**\n\t * Shorthand 0 values to plain 0, instead of e.g. -0em.\n\t *\n\t * @param string $content The CSS content to shorten the zero values for\n\t *\n\t * @return string\n\t */\n\tprotected function shortenZeroes( $content ) {\n\t\t// we don't want to strip units in `calc()` expressions:\n\t\t// `5px - 0px` is valid, but `5px - 0` is not\n\t\t// `10px * 0` is valid (equates to 0), and so is `10 * 0px`, but\n\t\t// `10 * 0` is invalid\n\t\t// we've extracted calcs earlier, so we don't need to worry about this\n\n\t\t// reusable bits of code throughout these regexes:\n\t\t// before & after are used to make sure we don't match lose unintended\n\t\t// 0-like values (e.g. in #000, or in http://url/1.0)\n\t\t// units can be stripped from 0 values, or used to recognize non 0\n\t\t// values (where wa may be able to strip a .0 suffix)\n\t\t$before = '(?<=[:(, ])';\n\t\t$after  = '(?=[ ,);}])';\n\t\t$units  = '(em|ex|%|px|cm|mm|in|pt|pc|ch|rem|vh|vw|vmin|vmax|vm)';\n\n\t\t// strip units after zeroes (0px -> 0)\n\t\t// NOTE: it should be safe to remove all units for a 0 value, but in\n\t\t// practice, Webkit (especially Safari) seems to stumble over at least\n\t\t// 0%, potentially other units as well. Only stripping 'px' for now.\n\t\t// @see https://github.com/matthiasmullie/minify/issues/60\n\t\t$content = preg_replace( '/' . $before . '(-?0*(\\.0+)?)(?<=0)px' . $after . '/', '\\\\1', $content );\n\n\t\t// strip 0-digits (.0 -> 0)\n\t\t$content = preg_replace( '/' . $before . '\\.0+' . $units . '?' . $after . '/', '0\\\\1', $content );\n\t\t// strip trailing 0: 50.10 -> 50.1, 50.10px -> 50.1px\n\t\t$content = preg_replace( '/' . $before . '(-?[0-9]+\\.[0-9]+)0+' . $units . '?' . $after . '/', '\\\\1\\\\2', $content );\n\t\t// strip trailing 0: 50.00 -> 50, 50.00px -> 50px\n\t\t$content = preg_replace( '/' . $before . '(-?[0-9]+)\\.0+' . $units . '?' . $after . '/', '\\\\1\\\\2', $content );\n\t\t// strip leading 0: 0.1 -> .1, 01.1 -> 1.1\n\t\t$content = preg_replace( '/' . $before . '(-?)0+([0-9]*\\.[0-9]+)' . $units . '?' . $after . '/', '\\\\1\\\\2\\\\3', $content );\n\n\t\t// strip negative zeroes (-0 -> 0) & truncate zeroes (00 -> 0)\n\t\t$content = preg_replace( '/' . $before . '-?0+' . $units . '?' . $after . '/', '0\\\\1', $content );\n\n\t\t// IE doesn't seem to understand a unitless flex-basis value (correct -\n\t\t// it goes against the spec), so let's add it in again (make it `%`,\n\t\t// which is only 1 char: 0%, 0px, 0 anything, it's all just the same)\n\t\t// @see https://developer.mozilla.org/nl/docs/Web/CSS/flex\n\t\t$content = preg_replace( '/flex:([0-9]+\\s[0-9]+\\s)0([;\\}])/', 'flex:${1}0%${2}', $content );\n\t\t$content = preg_replace( '/flex-basis:0([;\\}])/', 'flex-basis:0%${1}', $content );\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Strip empty tags from source code.\n\t *\n\t * @param string $content\n\t *\n\t * @return string\n\t */\n\tprotected function stripEmptyTags( $content ) {\n\t\t$content = preg_replace( '/(?<=^)[^\\{\\};]+\\{\\s*\\}/', '', $content );\n\t\t$content = preg_replace( '/(?<=(\\}|;))[^\\{\\};]+\\{\\s*\\}/', '', $content );\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Strip comments from source code.\n\t */\n\tprotected function stripComments() {\n\t\t$this->stripMultilineComments();\n\t}\n\n\t/**\n\t * Strip whitespace.\n\t *\n\t * @param string $content The CSS content to strip the whitespace for\n\t *\n\t * @return string\n\t */\n\tprotected function stripWhitespace( $content ) {\n\t\t// remove leading & trailing whitespace\n\t\t$content = preg_replace( '/^\\s*/m', '', $content );\n\t\t$content = preg_replace( '/\\s*$/m', '', $content );\n\n\t\t// replace newlines with a single space\n\t\t$content = preg_replace( '/\\s+/', ' ', $content );\n\n\t\t// remove whitespace around meta characters\n\t\t// inspired by stackoverflow.com/questions/15195750/minify-compress-css-with-regex\n\t\t$content = preg_replace( '/\\s*([\\*$~^|]?+=|[{};,>~]|!important\\b)\\s*/', '$1', $content );\n\t\t$content = preg_replace( '/([\\[(:>\\+])\\s+/', '$1', $content );\n\t\t$content = preg_replace( '/\\s+([\\]\\)>\\+])/', '$1', $content );\n\t\t$content = preg_replace( '/\\s+(:)(?![^\\}]*\\{)/', '$1', $content );\n\n\t\t// whitespace around + and - can only be stripped inside some pseudo-\n\t\t// classes, like `:nth-child(3+2n)`\n\t\t// not in things like `calc(3px + 2px)`, shorthands like `3px -2px`, or\n\t\t// selectors like `div.weird- p`\n\t\t$pseudos = array( 'nth-child', 'nth-last-child', 'nth-last-of-type', 'nth-of-type' );\n\t\t$content = preg_replace( '/:(' . implode( '|', $pseudos ) . ')\\(\\s*([+-]?)\\s*(.+?)\\s*([+-]?)\\s*(.*?)\\s*\\)/', ':$1($2$3$4$5)', $content );\n\n\t\t// remove semicolon/whitespace followed by closing bracket\n\t\t$content = str_replace( ';}', '}', $content );\n\n\t\treturn trim( $content );\n\t}\n\n\t/**\n\t * Replace all occurrences of functions that may contain math, where\n\t * whitespace around operators needs to be preserved (e.g. calc, clamp).\n\t */\n\tprotected function extractMath() {\n\t\t$functions = array( 'calc', 'clamp', 'min', 'max' );\n\t\t$pattern   = '/\\b(' . implode( '|', $functions ) . ')(\\(.+?)(?=$|;|})/m';\n\n\t\t// PHP only supports $this inside anonymous functions since 5.4\n\t\t$minifier = $this;\n\t\t$callback = function ( $match ) use ( $minifier, $pattern, &$callback ) {\n\t\t\t$function = $match[1];\n\t\t\t$length   = strlen( $match[2] );\n\t\t\t$expr     = '';\n\t\t\t$opened   = 0;\n\n\t\t\t// the regular expression for extracting math has 1 significant problem:\n\t\t\t// it can't determine the correct closing parenthesis...\n\t\t\t// instead, it'll match a larger portion of code to where it's certain that\n\t\t\t// the calc() musts have ended, and we'll figure out which is the correct\n\t\t\t// closing parenthesis here, by counting how many have opened\n\t\t\tfor ( $i = 0; $i < $length; ++$i ) {\n\t\t\t\t$char  = $match[2][ $i ];\n\t\t\t\t$expr .= $char;\n\t\t\t\tif ( $char === '(' ) {\n\t\t\t\t\t++$opened;\n\t\t\t\t} elseif ( $char === ')' && --$opened === 0 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// now that we've figured out where the calc() starts and ends, extract it\n\t\t\t$count                               = count( $minifier->extracted );\n\t\t\t$placeholder                         = 'math(' . $count . ')';\n\t\t\t$minifier->extracted[ $placeholder ] = $function . '(' . trim( substr( $expr, 1, -1 ) ) . ')';\n\n\t\t\t// and since we've captured more code than required, we may have some leftover\n\t\t\t// calc() in here too - go recursive on the remaining but of code to go figure\n\t\t\t// that out and extract what is needed\n\t\t\t$rest = $minifier->str_replace_first( $function . $expr, '', $match[0] );\n\t\t\t$rest = preg_replace_callback( $pattern, $callback, $rest );\n\n\t\t\treturn $placeholder . $rest;\n\t\t};\n\n\t\t$this->registerPattern( $pattern, $callback );\n\t}\n\n\t/**\n\t * Replace custom properties, whose values may be used in scenarios where\n\t * we wouldn't want them to be minified (e.g. inside calc).\n\t */\n\tprotected function extractCustomProperties() {\n\t\t// PHP only supports $this inside anonymous functions since 5.4\n\t\t$minifier = $this;\n\t\t$this->registerPattern(\n\t\t\t'/(?<=^|[;}{])\\s*(--[^:;{}\"\\'\\s]+)\\s*:([^;{}]+)/m',\n\t\t\tfunction ( $match ) use ( $minifier ) {\n\t\t\t\t$placeholder                         = '--custom-' . count( $minifier->extracted ) . ':0';\n\t\t\t\t$minifier->extracted[ $placeholder ] = $match[1] . ':' . trim( $match[2] );\n\n\t\t\t\treturn $placeholder;\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Check if file is small enough to be imported.\n\t *\n\t * @param string $path The path to the file\n\t *\n\t * @return bool\n\t */\n\tprotected function canImportBySize( $path ) {\n\t\treturn ( $size = @filesize( $path ) ) && $size <= $this->maxImportSize * 1024;\n\t}\n\n\t/**\n\t * Check if file a file can be imported, going by the path.\n\t *\n\t * @param string $path\n\t *\n\t * @return bool\n\t */\n\tprotected function canImportByPath( $path ) {\n\t\treturn preg_match( '/^(data:|https?:|\\\\/)/', $path ) === 0;\n\t}\n\n\t/**\n\t * Return a converter to update relative paths to be relative to the new\n\t * destination.\n\t *\n\t * @param string $source\n\t * @param string $target\n\t *\n\t * @return ConverterInterface\n\t */\n\tprotected function getPathConverter( $source, $target ) {\n\t\treturn new Converter( $source, $target );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/exception.cls.php","ext":"php","size":464,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * exception.cls.php - modified PHP implementation of Matthias Mullie's Exceptions Classes.\n *\n * @author Matthias Mullie <minify@mullie.eu>\n */\n\nnamespace LiteSpeed\\Lib\\CSS_JS_MIN\\Minify\\Exception;\n\ndefined( 'WPINC' ) || exit;\n\nabstract class Exception extends \\Exception {\n\n}\n\nabstract class BasicException extends Exception {\n\n}\n\nclass FileImportException extends BasicException {\n\n}\n\nclass IOException extends BasicException {\n\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/minify.cls.php","ext":"php","size":15254,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * modified PHP implementation of Matthias Mullie's Abstract minifier class.\n *\n * @author Matthias Mullie <minify@mullie.eu>\n * @copyright Copyright (c) 2012, Matthias Mullie. All rights reserved\n * @license MIT License\n */\n\nnamespace LiteSpeed\\Lib\\CSS_JS_MIN\\Minify;\n\nuse LiteSpeed\\Lib\\CSS_JS_MIN\\Minify\\Exception\\IOException;\n\ndefined( 'WPINC' ) || exit;\n\nabstract class Minify {\n\n\t/**\n\t * The data to be minified.\n\t *\n\t * @var string[]\n\t */\n\tprotected $data = array();\n\n\t/**\n\t * Array of patterns to match.\n\t *\n\t * @var string[]\n\t */\n\tprotected $patterns = array();\n\n\t/**\n\t * This array will hold content of strings and regular expressions that have\n\t * been extracted from the JS source code, so we can reliably match \"code\",\n\t * without having to worry about potential \"code-like\" characters inside.\n\t *\n\t * @internal\n\t *\n\t * @var string[]\n\t */\n\tpublic $extracted = array();\n\n\t/**\n\t * Init the minify class - optionally, code may be passed along already.\n\t */\n\tpublic function __construct( /* $data = null, ... */ ) {\n\t\t// it's possible to add the source through the constructor as well ;)\n\t\tif ( func_num_args() ) {\n\t\t\tcall_user_func_array( array( $this, 'add' ), func_get_args() );\n\t\t}\n\t}\n\n\t/**\n\t * Add a file or straight-up code to be minified.\n\t *\n\t * @param string|string[] $data\n\t *\n\t * @return static\n\t */\n\tpublic function add( $data /* $data = null, ... */ ) {\n\t\t// bogus \"usage\" of parameter $data: scrutinizer warns this variable is\n\t\t// not used (we're using func_get_args instead to support overloading),\n\t\t// but it still needs to be defined because it makes no sense to have\n\t\t// this function without argument :)\n\t\t$args = array( $data ) + func_get_args();\n\n\t\t// this method can be overloaded\n\t\tforeach ( $args as $data ) {\n\t\t\tif ( is_array( $data ) ) {\n\t\t\t\tcall_user_func_array( array( $this, 'add' ), $data );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// redefine var\n\t\t\t$data = (string) $data;\n\n\t\t\t// load data\n\t\t\t$value = $this->load( $data );\n\t\t\t$key   = ( $data != $value ) ? $data : count( $this->data );\n\n\t\t\t// replace CR linefeeds etc.\n\t\t\t// @see https://github.com/matthiasmullie/minify/pull/139\n\t\t\t$value = str_replace( array( \"\\r\\n\", \"\\r\" ), \"\\n\", $value );\n\n\t\t\t// store data\n\t\t\t$this->data[ $key ] = $value;\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Add a file to be minified.\n\t *\n\t * @param string|string[] $data\n\t *\n\t * @return static\n\t *\n\t * @throws IOException\n\t */\n\tpublic function addFile( $data /* $data = null, ... */ ) {\n\t\t// bogus \"usage\" of parameter $data: scrutinizer warns this variable is\n\t\t// not used (we're using func_get_args instead to support overloading),\n\t\t// but it still needs to be defined because it makes no sense to have\n\t\t// this function without argument :)\n\t\t$args = array( $data ) + func_get_args();\n\n\t\t// this method can be overloaded\n\t\tforeach ( $args as $path ) {\n\t\t\tif ( is_array( $path ) ) {\n\t\t\t\tcall_user_func_array( array( $this, 'addFile' ), $path );\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// redefine var\n\t\t\t$path = (string) $path;\n\n\t\t\t// check if we can read the file\n\t\t\tif ( ! $this->canImportFile( $path ) ) {\n\t\t\t\tthrow new IOException( 'The file \"' . $path . '\" could not be opened for reading. Check if PHP has enough permissions.' );\n\t\t\t}\n\n\t\t\t$this->add( $path );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Minify the data & (optionally) saves it to a file.\n\t *\n\t * @param string[optional] $path Path to write the data to\n\t *\n\t * @return string The minified data\n\t */\n\tpublic function minify( $path = null ) {\n\t\t$content = $this->execute( $path );\n\n\t\t// save to path\n\t\tif ( $path !== null ) {\n\t\t\t$this->save( $content, $path );\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Minify & gzip the data & (optionally) saves it to a file.\n\t *\n\t * @param string[optional] $path  Path to write the data to\n\t * @param int[optional]    $level Compression level, from 0 to 9\n\t *\n\t * @return string The minified & gzipped data\n\t */\n\tpublic function gzip( $path = null, $level = 9 ) {\n\t\t$content = $this->execute( $path );\n\t\t$content = gzencode( $content, $level, FORCE_GZIP );\n\n\t\t// save to path\n\t\tif ( $path !== null ) {\n\t\t\t$this->save( $content, $path );\n\t\t}\n\n\t\treturn $content;\n\t}\n\n\n\t/**\n\t * Minify the data.\n\t *\n\t * @param string[optional] $path Path to write the data to\n\t *\n\t * @return string The minified data\n\t */\n\tabstract public function execute( $path = null );\n\n\t/**\n\t * Load data.\n\t *\n\t * @param string $data Either a path to a file or the content itself\n\t *\n\t * @return string\n\t */\n\tprotected function load( $data ) {\n\t\t// check if the data is a file\n\t\tif ( $this->canImportFile( $data ) ) {\n\t\t\t$data = file_get_contents( $data );\n\n\t\t\t// strip BOM, if any\n\t\t\tif ( substr( $data, 0, 3 ) == \"\\xef\\xbb\\xbf\" ) {\n\t\t\t\t$data = substr( $data, 3 );\n\t\t\t}\n\t\t}\n\n\t\treturn $data;\n\t}\n\n\t/**\n\t * Save to file.\n\t *\n\t * @param string $content The minified data\n\t * @param string $path    The path to save the minified data to\n\t *\n\t * @throws IOException\n\t */\n\tprotected function save( $content, $path ) {\n\t\t$handler = $this->openFileForWriting( $path );\n\n\t\t$this->writeToFile( $handler, $content );\n\n\t\t@fclose( $handler );\n\t}\n\n\t/**\n\t * Register a pattern to execute against the source content.\n\t *\n\t * If $replacement is a string, it must be plain text. Placeholders like $1 or \\2 don't work.\n\t * If you need that functionality, use a callback instead.\n\t *\n\t * @param string          $pattern     PCRE pattern\n\t * @param string|callable $replacement Replacement value for matched pattern\n\t */\n\tprotected function registerPattern( $pattern, $replacement = '' ) {\n\t\t// study the pattern, we'll execute it more than once\n\t\t$pattern .= 'S';\n\n\t\t$this->patterns[] = array( $pattern, $replacement );\n\t}\n\n\t/**\n\t * Both JS and CSS use the same form of multi-line comment, so putting the common code here.\n\t */\n\tprotected function stripMultilineComments() {\n\t\t// First extract comments we want to keep, so they can be restored later\n\t\t// PHP only supports $this inside anonymous functions since 5.4\n\t\t$minifier = $this;\n\t\t$callback = function ( $match ) use ( $minifier ) {\n\t\t\t$count                               = count( $minifier->extracted );\n\t\t\t$placeholder                         = '/*' . $count . '*/';\n\t\t\t$minifier->extracted[ $placeholder ] = $match[0];\n\n\t\t\treturn $placeholder;\n\t\t};\n\t\t$this->registerPattern(\n\t\t\t'/\n            # optional newline\n            \\n?\n\n            # start comment\n            \\/\\*\n\n            # comment content\n            (?:\n                # either starts with an !\n                !\n            |\n                # or, after some number of characters which do not end the comment\n                (?:(?!\\*\\/).)*?\n\n                # there is either a @license or @preserve tag\n                @(?:license|preserve)\n            )\n\n            # then match to the end of the comment\n            .*?\\*\\/\\n?\n\n            /ixs',\n\t\t\t$callback\n\t\t);\n\n\t\t// Then strip all other comments\n\t\t$this->registerPattern( '/\\/\\*.*?\\*\\//s', '' );\n\t}\n\n\t/**\n\t * We can't \"just\" run some regular expressions against JavaScript: it's a\n\t * complex language. E.g. having an occurrence of // xyz would be a comment,\n\t * unless it's used within a string. Of you could have something that looks\n\t * like a 'string', but inside a comment.\n\t * The only way to accurately replace these pieces is to traverse the JS one\n\t * character at a time and try to find whatever starts first.\n\t *\n\t * @param string $content The content to replace patterns in\n\t *\n\t * @return string The (manipulated) content\n\t */\n\tprotected function replace( $content ) {\n\t\t$contentLength   = strlen( $content );\n\t\t$output          = '';\n\t\t$processedOffset = 0;\n\t\t$positions       = array_fill( 0, count( $this->patterns ), -1 );\n\t\t$matches         = array();\n\n\t\twhile ( $processedOffset < $contentLength ) {\n\t\t\t// find first match for all patterns\n\t\t\tforeach ( $this->patterns as $i => $pattern ) {\n\t\t\t\tlist($pattern, $replacement) = $pattern;\n\n\t\t\t\t// we can safely ignore patterns for positions we've unset earlier,\n\t\t\t\t// because we know these won't show up anymore\n\t\t\t\tif ( array_key_exists( $i, $positions ) == false ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// no need to re-run matches that are still in the part of the\n\t\t\t\t// content that hasn't been processed\n\t\t\t\tif ( $positions[ $i ] >= $processedOffset ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t$match = null;\n\t\t\t\tif ( preg_match( $pattern, $content, $match, PREG_OFFSET_CAPTURE, $processedOffset ) ) {\n\t\t\t\t\t$matches[ $i ] = $match;\n\n\t\t\t\t\t// we'll store the match position as well; that way, we\n\t\t\t\t\t// don't have to redo all preg_matches after changing only\n\t\t\t\t\t// the first (we'll still know where those others are)\n\t\t\t\t\t$positions[ $i ] = $match[0][1];\n\t\t\t\t} else {\n\t\t\t\t\t// if the pattern couldn't be matched, there's no point in\n\t\t\t\t\t// executing it again in later runs on this same content;\n\t\t\t\t\t// ignore this one until we reach end of content\n\t\t\t\t\tunset( $matches[ $i ], $positions[ $i ] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// no more matches to find: everything's been processed, break out\n\t\t\tif ( ! $matches ) {\n\t\t\t\t// output the remaining content\n\t\t\t\t$output .= substr( $content, $processedOffset );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// see which of the patterns actually found the first thing (we'll\n\t\t\t// only want to execute that one, since we're unsure if what the\n\t\t\t// other found was not inside what the first found)\n\t\t\t$matchOffset  = min( $positions );\n\t\t\t$firstPattern = array_search( $matchOffset, $positions );\n\t\t\t$match        = $matches[ $firstPattern ];\n\n\t\t\t// execute the pattern that matches earliest in the content string\n\t\t\tlist(, $replacement) = $this->patterns[ $firstPattern ];\n\n\t\t\t// add the part of the input between $processedOffset and the first match;\n\t\t\t// that content wasn't matched by anything\n\t\t\t$output .= substr( $content, $processedOffset, $matchOffset - $processedOffset );\n\t\t\t// add the replacement for the match\n\t\t\t$output .= $this->executeReplacement( $replacement, $match );\n\t\t\t// advance $processedOffset past the match\n\t\t\t$processedOffset = $matchOffset + strlen( $match[0][0] );\n\t\t}\n\n\t\treturn $output;\n\t}\n\n\t/**\n\t * If $replacement is a callback, execute it, passing in the match data.\n\t * If it's a string, just pass it through.\n\t *\n\t * @param string|callable $replacement Replacement value\n\t * @param array           $match       Match data, in PREG_OFFSET_CAPTURE form\n\t *\n\t * @return string\n\t */\n\tprotected function executeReplacement( $replacement, $match ) {\n\t\tif ( ! is_callable( $replacement ) ) {\n\t\t\treturn $replacement;\n\t\t}\n\t\t// convert $match from the PREG_OFFSET_CAPTURE form to the form the callback expects\n\t\tforeach ( $match as &$matchItem ) {\n\t\t\t$matchItem = $matchItem[0];\n\t\t}\n\n\t\treturn $replacement( $match );\n\t}\n\n\t/**\n\t * Strings are a pattern we need to match, in order to ignore potential\n\t * code-like content inside them, but we just want all of the string\n\t * content to remain untouched.\n\t *\n\t * This method will replace all string content with simple STRING#\n\t * placeholder text, so we've rid all strings from characters that may be\n\t * misinterpreted. Original string content will be saved in $this->extracted\n\t * and after doing all other minifying, we can restore the original content\n\t * via restoreStrings().\n\t *\n\t * @param string[optional] $chars\n\t * @param string[optional] $placeholderPrefix\n\t */\n\tprotected function extractStrings( $chars = '\\'\"', $placeholderPrefix = '' ) {\n\t\t// PHP only supports $this inside anonymous functions since 5.4\n\t\t$minifier = $this;\n\t\t$callback = function ( $match ) use ( $minifier, $placeholderPrefix ) {\n\t\t\t// check the second index here, because the first always contains a quote\n\t\t\tif ( $match[2] === '' ) {\n\t\t\t\t/*\n\t\t\t\t * Empty strings need no placeholder; they can't be confused for\n\t\t\t\t * anything else anyway.\n\t\t\t\t * But we still needed to match them, for the extraction routine\n\t\t\t\t * to skip over this particular string.\n\t\t\t\t */\n\t\t\t\treturn $match[0];\n\t\t\t}\n\n\t\t\t$count                               = count( $minifier->extracted );\n\t\t\t$placeholder                         = $match[1] . $placeholderPrefix . $count . $match[1];\n\t\t\t$minifier->extracted[ $placeholder ] = $match[1] . $match[2] . $match[1];\n\n\t\t\treturn $placeholder;\n\t\t};\n\n\t\t/*\n\t\t * The \\\\ messiness explained:\n\t\t * * Don't count ' or \" as end-of-string if it's escaped (has backslash\n\t\t * in front of it)\n\t\t * * Unless... that backslash itself is escaped (another leading slash),\n\t\t * in which case it's no longer escaping the ' or \"\n\t\t * * So there can be either no backslash, or an even number\n\t\t * * multiply all of that times 4, to account for the escaping that has\n\t\t * to be done to pass the backslash into the PHP string without it being\n\t\t * considered as escape-char (times 2) and to get it in the regex,\n\t\t * escaped (times 2)\n\t\t */\n\t\t$this->registerPattern( '/([' . $chars . '])(.*?(?<!\\\\\\\\)(\\\\\\\\\\\\\\\\)*+)\\\\1/s', $callback );\n\t}\n\n\t/**\n\t * This method will restore all extracted data (strings, regexes) that were\n\t * replaced with placeholder text in extract*(). The original content was\n\t * saved in $this->extracted.\n\t *\n\t * @param string $content\n\t *\n\t * @return string\n\t */\n\tprotected function restoreExtractedData( $content ) {\n\t\tif ( ! $this->extracted ) {\n\t\t\t// nothing was extracted, nothing to restore\n\t\t\treturn $content;\n\t\t}\n\n\t\t$content = strtr( $content, $this->extracted );\n\n\t\t$this->extracted = array();\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Check if the path is a regular file and can be read.\n\t *\n\t * @param string $path\n\t *\n\t * @return bool\n\t */\n\tprotected function canImportFile( $path ) {\n\t\t$parsed = parse_url( $path );\n\t\tif (\n\t\t\t// file is elsewhere\n\t\t\tisset( $parsed['host'] )\n\t\t\t// file responds to queries (may change, or need to bypass cache)\n\t\t\t|| isset( $parsed['query'] )\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\ttry {\n\t\t\treturn strlen( $path ) < PHP_MAXPATHLEN && @is_file( $path ) && is_readable( $path );\n\t\t}\n\t\t// catch openbasedir exceptions which are not caught by @ on is_file()\n\t\tcatch ( \\Exception $e ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * Attempts to open file specified by $path for writing.\n\t *\n\t * @param string $path The path to the file\n\t *\n\t * @return resource Specifier for the target file\n\t *\n\t * @throws IOException\n\t */\n\tprotected function openFileForWriting( $path ) {\n\t\tif ( $path === '' || ( $handler = @fopen( $path, 'w' ) ) === false ) {\n\t\t\tthrow new IOException( 'The file \"' . $path . '\" could not be opened for writing. Check if PHP has enough permissions.' );\n\t\t}\n\n\t\treturn $handler;\n\t}\n\n\t/**\n\t * Attempts to write $content to the file specified by $handler. $path is used for printing exceptions.\n\t *\n\t * @param resource $handler The resource to write to\n\t * @param string   $content The content to write\n\t * @param string   $path    The path to the file (for exception printing only)\n\t *\n\t * @throws IOException\n\t */\n\tprotected function writeToFile( $handler, $content, $path = '' ) {\n\t\tif (\n\t\t\t! is_resource( $handler )\n\t\t\t|| ( $result = @fwrite( $handler, $content ) ) === false\n\t\t\t|| ( $result < strlen( $content ) )\n\t\t) {\n\t\t\tthrow new IOException( 'The file \"' . $path . '\" could not be written to. Check your disk space and file permissions.' );\n\t\t}\n\t}\n\n\tprotected static function str_replace_first( $search, $replace, $subject ) {\n\t\t$pos = strpos( $subject, $search );\n\t\tif ( $pos !== false ) {\n\t\t\treturn substr_replace( $subject, $replace, $pos, strlen( $search ) );\n\t\t}\n\n\t\treturn $subject;\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/data/js/keywords_after.txt","ext":"txt","size":57,"mtime":1757312769,"type":"text","content":"in\npublic\nextends\nprivate\nprotected\nimplements\ninstanceof"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/data/js/keywords_reserved.txt","ext":"txt","size":414,"mtime":1757312769,"type":"text","content":"do\nif\nin\nfor\nlet\nnew\ntry\nvar\ncase\nelse\nenum\neval\nnull\nthis\ntrue\nvoid\nwith\nbreak\ncatch\nclass\nconst\nfalse\nsuper\nthrow\nwhile\nyield\ndelete\nexport\nimport\npublic\nreturn\nstatic\nswitch\ntypeof\ndefault\nextends\nfinally\npackage\nprivate\ncontinue\ndebugger\nfunction\narguments\ninterface\nprotected\nimplements\ninstanceof\nabstract\nboolean\nbyte\nchar\ndouble\nfinal\nfloat\ngoto\nint\nlong\nnative\nshort\nsynchronized\nthrows\ntransient\nvolatile"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/data/js/keywords_before.txt","ext":"txt","size":167,"mtime":1757312769,"type":"text","content":"do\nin\nlet\nnew\nvar\ncase\nelse\nenum\nvoid\nwith\nclass\nconst\nyield\ndelete\nexport\nimport\npublic\nstatic\ntypeof\nextends\npackage\nprivate\nfunction\nprotected\nimplements\ninstanceof"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/data/js/operators.txt","ext":"txt","size":120,"mtime":1757312769,"type":"text","content":"+\n-\n*\n/\n%\n=\n+=\n-=\n*=\n/=\n%=\n<<=\n>>=\n>>>=\n&=\n^=\n|=\n&\n|\n^\n~\n<<\n>>\n>>>\n==\n===\n!=\n!==\n>\n<\n>=\n<=\n&&\n||\n!\n.\n[\n]\n?\n:\n,\n;\n(\n)\n{\n}"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/data/js/operators_after.txt","ext":"txt","size":114,"mtime":1757312769,"type":"text","content":"+\n-\n*\n/\n%\n=\n+=\n-=\n*=\n/=\n%=\n<<=\n>>=\n>>>=\n&=\n^=\n|=\n&\n|\n^\n<<\n>>\n>>>\n==\n===\n!=\n!==\n>\n<\n>=\n<=\n&&\n||\n.\n[\n]\n?\n:\n,\n;\n(\n)\n}"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/data/js/operators_before.txt","ext":"txt","size":115,"mtime":1757312769,"type":"text","content":"+\n-\n*\n/\n%\n=\n+=\n-=\n*=\n/=\n%=\n<<=\n>>=\n>>>=\n&=\n^=\n|=\n&\n|\n^\n~\n<<\n>>\n>>>\n==\n===\n!=\n!==\n>\n<\n>=\n<=\n&&\n||\n!\n.\n[\n?\n:\n,\n;\n(\n{\n"},{"base":"plugins","rel":"litespeed-cache/lib/css_js_min/minify/js.cls.php","ext":"php","size":37586,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * js.cls.php - modified PHP implementation of Matthias Mullie's JavaScript minifier\n *\n * @author Matthias Mullie <minify@mullie.eu>\n * @copyright Copyright (c) 2012, Matthias Mullie. All rights reserved\n * @license MIT License\n */\n\nnamespace LiteSpeed\\Lib\\CSS_JS_MIN\\Minify;\n\ndefined( 'WPINC' ) || exit;\n\nclass JS extends Minify {\n\n\t/**\n\t * Var-matching regex based on http://stackoverflow.com/a/9337047/802993.\n\t *\n\t * Note that regular expressions using that bit must have the PCRE_UTF8\n\t * pattern modifier (/u) set.\n\t *\n\t * @internal\n\t *\n\t * @var string\n\t */\n\tconst REGEX_VARIABLE = '\\b[$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\x{02c1}\\x{02c6}-\\x{02d1}\\x{02e0}-\\x{02e4}\\x{02ec}\\x{02ee}\\x{0370}-\\x{0374}\\x{0376}\\x{0377}\\x{037a}-\\x{037d}\\x{0386}\\x{0388}-\\x{038a}\\x{038c}\\x{038e}-\\x{03a1}\\x{03a3}-\\x{03f5}\\x{03f7}-\\x{0481}\\x{048a}-\\x{0527}\\x{0531}-\\x{0556}\\x{0559}\\x{0561}-\\x{0587}\\x{05d0}-\\x{05ea}\\x{05f0}-\\x{05f2}\\x{0620}-\\x{064a}\\x{066e}\\x{066f}\\x{0671}-\\x{06d3}\\x{06d5}\\x{06e5}\\x{06e6}\\x{06ee}\\x{06ef}\\x{06fa}-\\x{06fc}\\x{06ff}\\x{0710}\\x{0712}-\\x{072f}\\x{074d}-\\x{07a5}\\x{07b1}\\x{07ca}-\\x{07ea}\\x{07f4}\\x{07f5}\\x{07fa}\\x{0800}-\\x{0815}\\x{081a}\\x{0824}\\x{0828}\\x{0840}-\\x{0858}\\x{08a0}\\x{08a2}-\\x{08ac}\\x{0904}-\\x{0939}\\x{093d}\\x{0950}\\x{0958}-\\x{0961}\\x{0971}-\\x{0977}\\x{0979}-\\x{097f}\\x{0985}-\\x{098c}\\x{098f}\\x{0990}\\x{0993}-\\x{09a8}\\x{09aa}-\\x{09b0}\\x{09b2}\\x{09b6}-\\x{09b9}\\x{09bd}\\x{09ce}\\x{09dc}\\x{09dd}\\x{09df}-\\x{09e1}\\x{09f0}\\x{09f1}\\x{0a05}-\\x{0a0a}\\x{0a0f}\\x{0a10}\\x{0a13}-\\x{0a28}\\x{0a2a}-\\x{0a30}\\x{0a32}\\x{0a33}\\x{0a35}\\x{0a36}\\x{0a38}\\x{0a39}\\x{0a59}-\\x{0a5c}\\x{0a5e}\\x{0a72}-\\x{0a74}\\x{0a85}-\\x{0a8d}\\x{0a8f}-\\x{0a91}\\x{0a93}-\\x{0aa8}\\x{0aaa}-\\x{0ab0}\\x{0ab2}\\x{0ab3}\\x{0ab5}-\\x{0ab9}\\x{0abd}\\x{0ad0}\\x{0ae0}\\x{0ae1}\\x{0b05}-\\x{0b0c}\\x{0b0f}\\x{0b10}\\x{0b13}-\\x{0b28}\\x{0b2a}-\\x{0b30}\\x{0b32}\\x{0b33}\\x{0b35}-\\x{0b39}\\x{0b3d}\\x{0b5c}\\x{0b5d}\\x{0b5f}-\\x{0b61}\\x{0b71}\\x{0b83}\\x{0b85}-\\x{0b8a}\\x{0b8e}-\\x{0b90}\\x{0b92}-\\x{0b95}\\x{0b99}\\x{0b9a}\\x{0b9c}\\x{0b9e}\\x{0b9f}\\x{0ba3}\\x{0ba4}\\x{0ba8}-\\x{0baa}\\x{0bae}-\\x{0bb9}\\x{0bd0}\\x{0c05}-\\x{0c0c}\\x{0c0e}-\\x{0c10}\\x{0c12}-\\x{0c28}\\x{0c2a}-\\x{0c33}\\x{0c35}-\\x{0c39}\\x{0c3d}\\x{0c58}\\x{0c59}\\x{0c60}\\x{0c61}\\x{0c85}-\\x{0c8c}\\x{0c8e}-\\x{0c90}\\x{0c92}-\\x{0ca8}\\x{0caa}-\\x{0cb3}\\x{0cb5}-\\x{0cb9}\\x{0cbd}\\x{0cde}\\x{0ce0}\\x{0ce1}\\x{0cf1}\\x{0cf2}\\x{0d05}-\\x{0d0c}\\x{0d0e}-\\x{0d10}\\x{0d12}-\\x{0d3a}\\x{0d3d}\\x{0d4e}\\x{0d60}\\x{0d61}\\x{0d7a}-\\x{0d7f}\\x{0d85}-\\x{0d96}\\x{0d9a}-\\x{0db1}\\x{0db3}-\\x{0dbb}\\x{0dbd}\\x{0dc0}-\\x{0dc6}\\x{0e01}-\\x{0e30}\\x{0e32}\\x{0e33}\\x{0e40}-\\x{0e46}\\x{0e81}\\x{0e82}\\x{0e84}\\x{0e87}\\x{0e88}\\x{0e8a}\\x{0e8d}\\x{0e94}-\\x{0e97}\\x{0e99}-\\x{0e9f}\\x{0ea1}-\\x{0ea3}\\x{0ea5}\\x{0ea7}\\x{0eaa}\\x{0eab}\\x{0ead}-\\x{0eb0}\\x{0eb2}\\x{0eb3}\\x{0ebd}\\x{0ec0}-\\x{0ec4}\\x{0ec6}\\x{0edc}-\\x{0edf}\\x{0f00}\\x{0f40}-\\x{0f47}\\x{0f49}-\\x{0f6c}\\x{0f88}-\\x{0f8c}\\x{1000}-\\x{102a}\\x{103f}\\x{1050}-\\x{1055}\\x{105a}-\\x{105d}\\x{1061}\\x{1065}\\x{1066}\\x{106e}-\\x{1070}\\x{1075}-\\x{1081}\\x{108e}\\x{10a0}-\\x{10c5}\\x{10c7}\\x{10cd}\\x{10d0}-\\x{10fa}\\x{10fc}-\\x{1248}\\x{124a}-\\x{124d}\\x{1250}-\\x{1256}\\x{1258}\\x{125a}-\\x{125d}\\x{1260}-\\x{1288}\\x{128a}-\\x{128d}\\x{1290}-\\x{12b0}\\x{12b2}-\\x{12b5}\\x{12b8}-\\x{12be}\\x{12c0}\\x{12c2}-\\x{12c5}\\x{12c8}-\\x{12d6}\\x{12d8}-\\x{1310}\\x{1312}-\\x{1315}\\x{1318}-\\x{135a}\\x{1380}-\\x{138f}\\x{13a0}-\\x{13f4}\\x{1401}-\\x{166c}\\x{166f}-\\x{167f}\\x{1681}-\\x{169a}\\x{16a0}-\\x{16ea}\\x{16ee}-\\x{16f0}\\x{1700}-\\x{170c}\\x{170e}-\\x{1711}\\x{1720}-\\x{1731}\\x{1740}-\\x{1751}\\x{1760}-\\x{176c}\\x{176e}-\\x{1770}\\x{1780}-\\x{17b3}\\x{17d7}\\x{17dc}\\x{1820}-\\x{1877}\\x{1880}-\\x{18a8}\\x{18aa}\\x{18b0}-\\x{18f5}\\x{1900}-\\x{191c}\\x{1950}-\\x{196d}\\x{1970}-\\x{1974}\\x{1980}-\\x{19ab}\\x{19c1}-\\x{19c7}\\x{1a00}-\\x{1a16}\\x{1a20}-\\x{1a54}\\x{1aa7}\\x{1b05}-\\x{1b33}\\x{1b45}-\\x{1b4b}\\x{1b83}-\\x{1ba0}\\x{1bae}\\x{1baf}\\x{1bba}-\\x{1be5}\\x{1c00}-\\x{1c23}\\x{1c4d}-\\x{1c4f}\\x{1c5a}-\\x{1c7d}\\x{1ce9}-\\x{1cec}\\x{1cee}-\\x{1cf1}\\x{1cf5}\\x{1cf6}\\x{1d00}-\\x{1dbf}\\x{1e00}-\\x{1f15}\\x{1f18}-\\x{1f1d}\\x{1f20}-\\x{1f45}\\x{1f48}-\\x{1f4d}\\x{1f50}-\\x{1f57}\\x{1f59}\\x{1f5b}\\x{1f5d}\\x{1f5f}-\\x{1f7d}\\x{1f80}-\\x{1fb4}\\x{1fb6}-\\x{1fbc}\\x{1fbe}\\x{1fc2}-\\x{1fc4}\\x{1fc6}-\\x{1fcc}\\x{1fd0}-\\x{1fd3}\\x{1fd6}-\\x{1fdb}\\x{1fe0}-\\x{1fec}\\x{1ff2}-\\x{1ff4}\\x{1ff6}-\\x{1ffc}\\x{2071}\\x{207f}\\x{2090}-\\x{209c}\\x{2102}\\x{2107}\\x{210a}-\\x{2113}\\x{2115}\\x{2119}-\\x{211d}\\x{2124}\\x{2126}\\x{2128}\\x{212a}-\\x{212d}\\x{212f}-\\x{2139}\\x{213c}-\\x{213f}\\x{2145}-\\x{2149}\\x{214e}\\x{2160}-\\x{2188}\\x{2c00}-\\x{2c2e}\\x{2c30}-\\x{2c5e}\\x{2c60}-\\x{2ce4}\\x{2ceb}-\\x{2cee}\\x{2cf2}\\x{2cf3}\\x{2d00}-\\x{2d25}\\x{2d27}\\x{2d2d}\\x{2d30}-\\x{2d67}\\x{2d6f}\\x{2d80}-\\x{2d96}\\x{2da0}-\\x{2da6}\\x{2da8}-\\x{2dae}\\x{2db0}-\\x{2db6}\\x{2db8}-\\x{2dbe}\\x{2dc0}-\\x{2dc6}\\x{2dc8}-\\x{2dce}\\x{2dd0}-\\x{2dd6}\\x{2dd8}-\\x{2dde}\\x{2e2f}\\x{3005}-\\x{3007}\\x{3021}-\\x{3029}\\x{3031}-\\x{3035}\\x{3038}-\\x{303c}\\x{3041}-\\x{3096}\\x{309d}-\\x{309f}\\x{30a1}-\\x{30fa}\\x{30fc}-\\x{30ff}\\x{3105}-\\x{312d}\\x{3131}-\\x{318e}\\x{31a0}-\\x{31ba}\\x{31f0}-\\x{31ff}\\x{3400}-\\x{4db5}\\x{4e00}-\\x{9fcc}\\x{a000}-\\x{a48c}\\x{a4d0}-\\x{a4fd}\\x{a500}-\\x{a60c}\\x{a610}-\\x{a61f}\\x{a62a}\\x{a62b}\\x{a640}-\\x{a66e}\\x{a67f}-\\x{a697}\\x{a6a0}-\\x{a6ef}\\x{a717}-\\x{a71f}\\x{a722}-\\x{a788}\\x{a78b}-\\x{a78e}\\x{a790}-\\x{a793}\\x{a7a0}-\\x{a7aa}\\x{a7f8}-\\x{a801}\\x{a803}-\\x{a805}\\x{a807}-\\x{a80a}\\x{a80c}-\\x{a822}\\x{a840}-\\x{a873}\\x{a882}-\\x{a8b3}\\x{a8f2}-\\x{a8f7}\\x{a8fb}\\x{a90a}-\\x{a925}\\x{a930}-\\x{a946}\\x{a960}-\\x{a97c}\\x{a984}-\\x{a9b2}\\x{a9cf}\\x{aa00}-\\x{aa28}\\x{aa40}-\\x{aa42}\\x{aa44}-\\x{aa4b}\\x{aa60}-\\x{aa76}\\x{aa7a}\\x{aa80}-\\x{aaaf}\\x{aab1}\\x{aab5}\\x{aab6}\\x{aab9}-\\x{aabd}\\x{aac0}\\x{aac2}\\x{aadb}-\\x{aadd}\\x{aae0}-\\x{aaea}\\x{aaf2}-\\x{aaf4}\\x{ab01}-\\x{ab06}\\x{ab09}-\\x{ab0e}\\x{ab11}-\\x{ab16}\\x{ab20}-\\x{ab26}\\x{ab28}-\\x{ab2e}\\x{abc0}-\\x{abe2}\\x{ac00}-\\x{d7a3}\\x{d7b0}-\\x{d7c6}\\x{d7cb}-\\x{d7fb}\\x{f900}-\\x{fa6d}\\x{fa70}-\\x{fad9}\\x{fb00}-\\x{fb06}\\x{fb13}-\\x{fb17}\\x{fb1d}\\x{fb1f}-\\x{fb28}\\x{fb2a}-\\x{fb36}\\x{fb38}-\\x{fb3c}\\x{fb3e}\\x{fb40}\\x{fb41}\\x{fb43}\\x{fb44}\\x{fb46}-\\x{fbb1}\\x{fbd3}-\\x{fd3d}\\x{fd50}-\\x{fd8f}\\x{fd92}-\\x{fdc7}\\x{fdf0}-\\x{fdfb}\\x{fe70}-\\x{fe74}\\x{fe76}-\\x{fefc}\\x{ff21}-\\x{ff3a}\\x{ff41}-\\x{ff5a}\\x{ff66}-\\x{ffbe}\\x{ffc2}-\\x{ffc7}\\x{ffca}-\\x{ffcf}\\x{ffd2}-\\x{ffd7}\\x{ffda}-\\x{ffdc}][$A-Z\\_a-z\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\x{02c1}\\x{02c6}-\\x{02d1}\\x{02e0}-\\x{02e4}\\x{02ec}\\x{02ee}\\x{0370}-\\x{0374}\\x{0376}\\x{0377}\\x{037a}-\\x{037d}\\x{0386}\\x{0388}-\\x{038a}\\x{038c}\\x{038e}-\\x{03a1}\\x{03a3}-\\x{03f5}\\x{03f7}-\\x{0481}\\x{048a}-\\x{0527}\\x{0531}-\\x{0556}\\x{0559}\\x{0561}-\\x{0587}\\x{05d0}-\\x{05ea}\\x{05f0}-\\x{05f2}\\x{0620}-\\x{064a}\\x{066e}\\x{066f}\\x{0671}-\\x{06d3}\\x{06d5}\\x{06e5}\\x{06e6}\\x{06ee}\\x{06ef}\\x{06fa}-\\x{06fc}\\x{06ff}\\x{0710}\\x{0712}-\\x{072f}\\x{074d}-\\x{07a5}\\x{07b1}\\x{07ca}-\\x{07ea}\\x{07f4}\\x{07f5}\\x{07fa}\\x{0800}-\\x{0815}\\x{081a}\\x{0824}\\x{0828}\\x{0840}-\\x{0858}\\x{08a0}\\x{08a2}-\\x{08ac}\\x{0904}-\\x{0939}\\x{093d}\\x{0950}\\x{0958}-\\x{0961}\\x{0971}-\\x{0977}\\x{0979}-\\x{097f}\\x{0985}-\\x{098c}\\x{098f}\\x{0990}\\x{0993}-\\x{09a8}\\x{09aa}-\\x{09b0}\\x{09b2}\\x{09b6}-\\x{09b9}\\x{09bd}\\x{09ce}\\x{09dc}\\x{09dd}\\x{09df}-\\x{09e1}\\x{09f0}\\x{09f1}\\x{0a05}-\\x{0a0a}\\x{0a0f}\\x{0a10}\\x{0a13}-\\x{0a28}\\x{0a2a}-\\x{0a30}\\x{0a32}\\x{0a33}\\x{0a35}\\x{0a36}\\x{0a38}\\x{0a39}\\x{0a59}-\\x{0a5c}\\x{0a5e}\\x{0a72}-\\x{0a74}\\x{0a85}-\\x{0a8d}\\x{0a8f}-\\x{0a91}\\x{0a93}-\\x{0aa8}\\x{0aaa}-\\x{0ab0}\\x{0ab2}\\x{0ab3}\\x{0ab5}-\\x{0ab9}\\x{0abd}\\x{0ad0}\\x{0ae0}\\x{0ae1}\\x{0b05}-\\x{0b0c}\\x{0b0f}\\x{0b10}\\x{0b13}-\\x{0b28}\\x{0b2a}-\\x{0b30}\\x{0b32}\\x{0b33}\\x{0b35}-\\x{0b39}\\x{0b3d}\\x{0b5c}\\x{0b5d}\\x{0b5f}-\\x{0b61}\\x{0b71}\\x{0b83}\\x{0b85}-\\x{0b8a}\\x{0b8e}-\\x{0b90}\\x{0b92}-\\x{0b95}\\x{0b99}\\x{0b9a}\\x{0b9c}\\x{0b9e}\\x{0b9f}\\x{0ba3}\\x{0ba4}\\x{0ba8}-\\x{0baa}\\x{0bae}-\\x{0bb9}\\x{0bd0}\\x{0c05}-\\x{0c0c}\\x{0c0e}-\\x{0c10}\\x{0c12}-\\x{0c28}\\x{0c2a}-\\x{0c33}\\x{0c35}-\\x{0c39}\\x{0c3d}\\x{0c58}\\x{0c59}\\x{0c60}\\x{0c61}\\x{0c85}-\\x{0c8c}\\x{0c8e}-\\x{0c90}\\x{0c92}-\\x{0ca8}\\x{0caa}-\\x{0cb3}\\x{0cb5}-\\x{0cb9}\\x{0cbd}\\x{0cde}\\x{0ce0}\\x{0ce1}\\x{0cf1}\\x{0cf2}\\x{0d05}-\\x{0d0c}\\x{0d0e}-\\x{0d10}\\x{0d12}-\\x{0d3a}\\x{0d3d}\\x{0d4e}\\x{0d60}\\x{0d61}\\x{0d7a}-\\x{0d7f}\\x{0d85}-\\x{0d96}\\x{0d9a}-\\x{0db1}\\x{0db3}-\\x{0dbb}\\x{0dbd}\\x{0dc0}-\\x{0dc6}\\x{0e01}-\\x{0e30}\\x{0e32}\\x{0e33}\\x{0e40}-\\x{0e46}\\x{0e81}\\x{0e82}\\x{0e84}\\x{0e87}\\x{0e88}\\x{0e8a}\\x{0e8d}\\x{0e94}-\\x{0e97}\\x{0e99}-\\x{0e9f}\\x{0ea1}-\\x{0ea3}\\x{0ea5}\\x{0ea7}\\x{0eaa}\\x{0eab}\\x{0ead}-\\x{0eb0}\\x{0eb2}\\x{0eb3}\\x{0ebd}\\x{0ec0}-\\x{0ec4}\\x{0ec6}\\x{0edc}-\\x{0edf}\\x{0f00}\\x{0f40}-\\x{0f47}\\x{0f49}-\\x{0f6c}\\x{0f88}-\\x{0f8c}\\x{1000}-\\x{102a}\\x{103f}\\x{1050}-\\x{1055}\\x{105a}-\\x{105d}\\x{1061}\\x{1065}\\x{1066}\\x{106e}-\\x{1070}\\x{1075}-\\x{1081}\\x{108e}\\x{10a0}-\\x{10c5}\\x{10c7}\\x{10cd}\\x{10d0}-\\x{10fa}\\x{10fc}-\\x{1248}\\x{124a}-\\x{124d}\\x{1250}-\\x{1256}\\x{1258}\\x{125a}-\\x{125d}\\x{1260}-\\x{1288}\\x{128a}-\\x{128d}\\x{1290}-\\x{12b0}\\x{12b2}-\\x{12b5}\\x{12b8}-\\x{12be}\\x{12c0}\\x{12c2}-\\x{12c5}\\x{12c8}-\\x{12d6}\\x{12d8}-\\x{1310}\\x{1312}-\\x{1315}\\x{1318}-\\x{135a}\\x{1380}-\\x{138f}\\x{13a0}-\\x{13f4}\\x{1401}-\\x{166c}\\x{166f}-\\x{167f}\\x{1681}-\\x{169a}\\x{16a0}-\\x{16ea}\\x{16ee}-\\x{16f0}\\x{1700}-\\x{170c}\\x{170e}-\\x{1711}\\x{1720}-\\x{1731}\\x{1740}-\\x{1751}\\x{1760}-\\x{176c}\\x{176e}-\\x{1770}\\x{1780}-\\x{17b3}\\x{17d7}\\x{17dc}\\x{1820}-\\x{1877}\\x{1880}-\\x{18a8}\\x{18aa}\\x{18b0}-\\x{18f5}\\x{1900}-\\x{191c}\\x{1950}-\\x{196d}\\x{1970}-\\x{1974}\\x{1980}-\\x{19ab}\\x{19c1}-\\x{19c7}\\x{1a00}-\\x{1a16}\\x{1a20}-\\x{1a54}\\x{1aa7}\\x{1b05}-\\x{1b33}\\x{1b45}-\\x{1b4b}\\x{1b83}-\\x{1ba0}\\x{1bae}\\x{1baf}\\x{1bba}-\\x{1be5}\\x{1c00}-\\x{1c23}\\x{1c4d}-\\x{1c4f}\\x{1c5a}-\\x{1c7d}\\x{1ce9}-\\x{1cec}\\x{1cee}-\\x{1cf1}\\x{1cf5}\\x{1cf6}\\x{1d00}-\\x{1dbf}\\x{1e00}-\\x{1f15}\\x{1f18}-\\x{1f1d}\\x{1f20}-\\x{1f45}\\x{1f48}-\\x{1f4d}\\x{1f50}-\\x{1f57}\\x{1f59}\\x{1f5b}\\x{1f5d}\\x{1f5f}-\\x{1f7d}\\x{1f80}-\\x{1fb4}\\x{1fb6}-\\x{1fbc}\\x{1fbe}\\x{1fc2}-\\x{1fc4}\\x{1fc6}-\\x{1fcc}\\x{1fd0}-\\x{1fd3}\\x{1fd6}-\\x{1fdb}\\x{1fe0}-\\x{1fec}\\x{1ff2}-\\x{1ff4}\\x{1ff6}-\\x{1ffc}\\x{2071}\\x{207f}\\x{2090}-\\x{209c}\\x{2102}\\x{2107}\\x{210a}-\\x{2113}\\x{2115}\\x{2119}-\\x{211d}\\x{2124}\\x{2126}\\x{2128}\\x{212a}-\\x{212d}\\x{212f}-\\x{2139}\\x{213c}-\\x{213f}\\x{2145}-\\x{2149}\\x{214e}\\x{2160}-\\x{2188}\\x{2c00}-\\x{2c2e}\\x{2c30}-\\x{2c5e}\\x{2c60}-\\x{2ce4}\\x{2ceb}-\\x{2cee}\\x{2cf2}\\x{2cf3}\\x{2d00}-\\x{2d25}\\x{2d27}\\x{2d2d}\\x{2d30}-\\x{2d67}\\x{2d6f}\\x{2d80}-\\x{2d96}\\x{2da0}-\\x{2da6}\\x{2da8}-\\x{2dae}\\x{2db0}-\\x{2db6}\\x{2db8}-\\x{2dbe}\\x{2dc0}-\\x{2dc6}\\x{2dc8}-\\x{2dce}\\x{2dd0}-\\x{2dd6}\\x{2dd8}-\\x{2dde}\\x{2e2f}\\x{3005}-\\x{3007}\\x{3021}-\\x{3029}\\x{3031}-\\x{3035}\\x{3038}-\\x{303c}\\x{3041}-\\x{3096}\\x{309d}-\\x{309f}\\x{30a1}-\\x{30fa}\\x{30fc}-\\x{30ff}\\x{3105}-\\x{312d}\\x{3131}-\\x{318e}\\x{31a0}-\\x{31ba}\\x{31f0}-\\x{31ff}\\x{3400}-\\x{4db5}\\x{4e00}-\\x{9fcc}\\x{a000}-\\x{a48c}\\x{a4d0}-\\x{a4fd}\\x{a500}-\\x{a60c}\\x{a610}-\\x{a61f}\\x{a62a}\\x{a62b}\\x{a640}-\\x{a66e}\\x{a67f}-\\x{a697}\\x{a6a0}-\\x{a6ef}\\x{a717}-\\x{a71f}\\x{a722}-\\x{a788}\\x{a78b}-\\x{a78e}\\x{a790}-\\x{a793}\\x{a7a0}-\\x{a7aa}\\x{a7f8}-\\x{a801}\\x{a803}-\\x{a805}\\x{a807}-\\x{a80a}\\x{a80c}-\\x{a822}\\x{a840}-\\x{a873}\\x{a882}-\\x{a8b3}\\x{a8f2}-\\x{a8f7}\\x{a8fb}\\x{a90a}-\\x{a925}\\x{a930}-\\x{a946}\\x{a960}-\\x{a97c}\\x{a984}-\\x{a9b2}\\x{a9cf}\\x{aa00}-\\x{aa28}\\x{aa40}-\\x{aa42}\\x{aa44}-\\x{aa4b}\\x{aa60}-\\x{aa76}\\x{aa7a}\\x{aa80}-\\x{aaaf}\\x{aab1}\\x{aab5}\\x{aab6}\\x{aab9}-\\x{aabd}\\x{aac0}\\x{aac2}\\x{aadb}-\\x{aadd}\\x{aae0}-\\x{aaea}\\x{aaf2}-\\x{aaf4}\\x{ab01}-\\x{ab06}\\x{ab09}-\\x{ab0e}\\x{ab11}-\\x{ab16}\\x{ab20}-\\x{ab26}\\x{ab28}-\\x{ab2e}\\x{abc0}-\\x{abe2}\\x{ac00}-\\x{d7a3}\\x{d7b0}-\\x{d7c6}\\x{d7cb}-\\x{d7fb}\\x{f900}-\\x{fa6d}\\x{fa70}-\\x{fad9}\\x{fb00}-\\x{fb06}\\x{fb13}-\\x{fb17}\\x{fb1d}\\x{fb1f}-\\x{fb28}\\x{fb2a}-\\x{fb36}\\x{fb38}-\\x{fb3c}\\x{fb3e}\\x{fb40}\\x{fb41}\\x{fb43}\\x{fb44}\\x{fb46}-\\x{fbb1}\\x{fbd3}-\\x{fd3d}\\x{fd50}-\\x{fd8f}\\x{fd92}-\\x{fdc7}\\x{fdf0}-\\x{fdfb}\\x{fe70}-\\x{fe74}\\x{fe76}-\\x{fefc}\\x{ff21}-\\x{ff3a}\\x{ff41}-\\x{ff5a}\\x{ff66}-\\x{ffbe}\\x{ffc2}-\\x{ffc7}\\x{ffca}-\\x{ffcf}\\x{ffd2}-\\x{ffd7}\\x{ffda}-\\x{ffdc}0-9\\x{0300}-\\x{036f}\\x{0483}-\\x{0487}\\x{0591}-\\x{05bd}\\x{05bf}\\x{05c1}\\x{05c2}\\x{05c4}\\x{05c5}\\x{05c7}\\x{0610}-\\x{061a}\\x{064b}-\\x{0669}\\x{0670}\\x{06d6}-\\x{06dc}\\x{06df}-\\x{06e4}\\x{06e7}\\x{06e8}\\x{06ea}-\\x{06ed}\\x{06f0}-\\x{06f9}\\x{0711}\\x{0730}-\\x{074a}\\x{07a6}-\\x{07b0}\\x{07c0}-\\x{07c9}\\x{07eb}-\\x{07f3}\\x{0816}-\\x{0819}\\x{081b}-\\x{0823}\\x{0825}-\\x{0827}\\x{0829}-\\x{082d}\\x{0859}-\\x{085b}\\x{08e4}-\\x{08fe}\\x{0900}-\\x{0903}\\x{093a}-\\x{093c}\\x{093e}-\\x{094f}\\x{0951}-\\x{0957}\\x{0962}\\x{0963}\\x{0966}-\\x{096f}\\x{0981}-\\x{0983}\\x{09bc}\\x{09be}-\\x{09c4}\\x{09c7}\\x{09c8}\\x{09cb}-\\x{09cd}\\x{09d7}\\x{09e2}\\x{09e3}\\x{09e6}-\\x{09ef}\\x{0a01}-\\x{0a03}\\x{0a3c}\\x{0a3e}-\\x{0a42}\\x{0a47}\\x{0a48}\\x{0a4b}-\\x{0a4d}\\x{0a51}\\x{0a66}-\\x{0a71}\\x{0a75}\\x{0a81}-\\x{0a83}\\x{0abc}\\x{0abe}-\\x{0ac5}\\x{0ac7}-\\x{0ac9}\\x{0acb}-\\x{0acd}\\x{0ae2}\\x{0ae3}\\x{0ae6}-\\x{0aef}\\x{0b01}-\\x{0b03}\\x{0b3c}\\x{0b3e}-\\x{0b44}\\x{0b47}\\x{0b48}\\x{0b4b}-\\x{0b4d}\\x{0b56}\\x{0b57}\\x{0b62}\\x{0b63}\\x{0b66}-\\x{0b6f}\\x{0b82}\\x{0bbe}-\\x{0bc2}\\x{0bc6}-\\x{0bc8}\\x{0bca}-\\x{0bcd}\\x{0bd7}\\x{0be6}-\\x{0bef}\\x{0c01}-\\x{0c03}\\x{0c3e}-\\x{0c44}\\x{0c46}-\\x{0c48}\\x{0c4a}-\\x{0c4d}\\x{0c55}\\x{0c56}\\x{0c62}\\x{0c63}\\x{0c66}-\\x{0c6f}\\x{0c82}\\x{0c83}\\x{0cbc}\\x{0cbe}-\\x{0cc4}\\x{0cc6}-\\x{0cc8}\\x{0cca}-\\x{0ccd}\\x{0cd5}\\x{0cd6}\\x{0ce2}\\x{0ce3}\\x{0ce6}-\\x{0cef}\\x{0d02}\\x{0d03}\\x{0d3e}-\\x{0d44}\\x{0d46}-\\x{0d48}\\x{0d4a}-\\x{0d4d}\\x{0d57}\\x{0d62}\\x{0d63}\\x{0d66}-\\x{0d6f}\\x{0d82}\\x{0d83}\\x{0dca}\\x{0dcf}-\\x{0dd4}\\x{0dd6}\\x{0dd8}-\\x{0ddf}\\x{0df2}\\x{0df3}\\x{0e31}\\x{0e34}-\\x{0e3a}\\x{0e47}-\\x{0e4e}\\x{0e50}-\\x{0e59}\\x{0eb1}\\x{0eb4}-\\x{0eb9}\\x{0ebb}\\x{0ebc}\\x{0ec8}-\\x{0ecd}\\x{0ed0}-\\x{0ed9}\\x{0f18}\\x{0f19}\\x{0f20}-\\x{0f29}\\x{0f35}\\x{0f37}\\x{0f39}\\x{0f3e}\\x{0f3f}\\x{0f71}-\\x{0f84}\\x{0f86}\\x{0f87}\\x{0f8d}-\\x{0f97}\\x{0f99}-\\x{0fbc}\\x{0fc6}\\x{102b}-\\x{103e}\\x{1040}-\\x{1049}\\x{1056}-\\x{1059}\\x{105e}-\\x{1060}\\x{1062}-\\x{1064}\\x{1067}-\\x{106d}\\x{1071}-\\x{1074}\\x{1082}-\\x{108d}\\x{108f}-\\x{109d}\\x{135d}-\\x{135f}\\x{1712}-\\x{1714}\\x{1732}-\\x{1734}\\x{1752}\\x{1753}\\x{1772}\\x{1773}\\x{17b4}-\\x{17d3}\\x{17dd}\\x{17e0}-\\x{17e9}\\x{180b}-\\x{180d}\\x{1810}-\\x{1819}\\x{18a9}\\x{1920}-\\x{192b}\\x{1930}-\\x{193b}\\x{1946}-\\x{194f}\\x{19b0}-\\x{19c0}\\x{19c8}\\x{19c9}\\x{19d0}-\\x{19d9}\\x{1a17}-\\x{1a1b}\\x{1a55}-\\x{1a5e}\\x{1a60}-\\x{1a7c}\\x{1a7f}-\\x{1a89}\\x{1a90}-\\x{1a99}\\x{1b00}-\\x{1b04}\\x{1b34}-\\x{1b44}\\x{1b50}-\\x{1b59}\\x{1b6b}-\\x{1b73}\\x{1b80}-\\x{1b82}\\x{1ba1}-\\x{1bad}\\x{1bb0}-\\x{1bb9}\\x{1be6}-\\x{1bf3}\\x{1c24}-\\x{1c37}\\x{1c40}-\\x{1c49}\\x{1c50}-\\x{1c59}\\x{1cd0}-\\x{1cd2}\\x{1cd4}-\\x{1ce8}\\x{1ced}\\x{1cf2}-\\x{1cf4}\\x{1dc0}-\\x{1de6}\\x{1dfc}-\\x{1dff}\\x{200c}\\x{200d}\\x{203f}\\x{2040}\\x{2054}\\x{20d0}-\\x{20dc}\\x{20e1}\\x{20e5}-\\x{20f0}\\x{2cef}-\\x{2cf1}\\x{2d7f}\\x{2de0}-\\x{2dff}\\x{302a}-\\x{302f}\\x{3099}\\x{309a}\\x{a620}-\\x{a629}\\x{a66f}\\x{a674}-\\x{a67d}\\x{a69f}\\x{a6f0}\\x{a6f1}\\x{a802}\\x{a806}\\x{a80b}\\x{a823}-\\x{a827}\\x{a880}\\x{a881}\\x{a8b4}-\\x{a8c4}\\x{a8d0}-\\x{a8d9}\\x{a8e0}-\\x{a8f1}\\x{a900}-\\x{a909}\\x{a926}-\\x{a92d}\\x{a947}-\\x{a953}\\x{a980}-\\x{a983}\\x{a9b3}-\\x{a9c0}\\x{a9d0}-\\x{a9d9}\\x{aa29}-\\x{aa36}\\x{aa43}\\x{aa4c}\\x{aa4d}\\x{aa50}-\\x{aa59}\\x{aa7b}\\x{aab0}\\x{aab2}-\\x{aab4}\\x{aab7}\\x{aab8}\\x{aabe}\\x{aabf}\\x{aac1}\\x{aaeb}-\\x{aaef}\\x{aaf5}\\x{aaf6}\\x{abe3}-\\x{abea}\\x{abec}\\x{abed}\\x{abf0}-\\x{abf9}\\x{fb1e}\\x{fe00}-\\x{fe0f}\\x{fe20}-\\x{fe26}\\x{fe33}\\x{fe34}\\x{fe4d}-\\x{fe4f}\\x{ff10}-\\x{ff19}\\x{ff3f}]*\\b';\n\n\t/**\n\t * Full list of JavaScript reserved words.\n\t * Will be loaded from /data/js/keywords_reserved.txt.\n\t *\n\t * @see https://mathiasbynens.be/notes/reserved-keywords\n\t *\n\t * @var string[]\n\t */\n\tprotected $keywordsReserved = array();\n\n\t/**\n\t * List of JavaScript reserved words that accept a <variable, value, ...>\n\t * after them. Some end of lines are not the end of a statement, like with\n\t * these keywords.\n\t *\n\t * E.g.: we shouldn't insert a ; after this else\n\t * else\n\t *     console.log('this is quite fine')\n\t *\n\t * Will be loaded from /data/js/keywords_before.txt\n\t *\n\t * @var string[]\n\t */\n\tprotected $keywordsBefore = array();\n\n\t/**\n\t * List of JavaScript reserved words that accept a <variable, value, ...>\n\t * before them. Some end of lines are not the end of a statement, like when\n\t * continued by one of these keywords on the newline.\n\t *\n\t * E.g.: we shouldn't insert a ; before this instanceof\n\t * variable\n\t *     instanceof String\n\t *\n\t * Will be loaded from /data/js/keywords_after.txt\n\t *\n\t * @var string[]\n\t */\n\tprotected $keywordsAfter = array();\n\n\t/**\n\t * List of all JavaScript operators.\n\t *\n\t * Will be loaded from /data/js/operators.txt\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators\n\t *\n\t * @var string[]\n\t */\n\tprotected $operators = array();\n\n\t/**\n\t * List of JavaScript operators that accept a <variable, value, ...> after\n\t * them. Some end of lines are not the end of a statement, like with these\n\t * operators.\n\t *\n\t * Note: Most operators are fine, we've only removed ++ and --.\n\t * ++ & -- have to be joined with the value they're in-/decrementing.\n\t *\n\t * Will be loaded from /data/js/operators_before.txt\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators\n\t *\n\t * @var string[]\n\t */\n\tprotected $operatorsBefore = array();\n\n\t/**\n\t * List of JavaScript operators that accept a <variable, value, ...> before\n\t * them. Some end of lines are not the end of a statement, like when\n\t * continued by one of these operators on the newline.\n\t *\n\t * Note: Most operators are fine, we've only removed ), ], ++, --, ! and ~.\n\t * There can't be a newline separating ! or ~ and whatever it is negating.\n\t * ++ & -- have to be joined with the value they're in-/decrementing.\n\t * ) & ] are \"special\" in that they have lots or usecases. () for example\n\t * is used for function calls, for grouping, in if () and for (), ...\n\t *\n\t * Will be loaded from /data/js/operators_after.txt\n\t *\n\t * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators\n\t *\n\t * @var string[]\n\t */\n\tprotected $operatorsAfter = array();\n\n\tpublic function __construct() {\n\t\tcall_user_func_array( array( '\\\\LiteSpeed\\\\Lib\\\\CSS_JS_MIN\\\\Minify\\\\Minify', '__construct' ), func_get_args() );\n\n\t\t$dataDir                = __DIR__ . '/data/js/';\n\t\t$options                = FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES;\n\t\t$this->keywordsReserved = file( $dataDir . 'keywords_reserved.txt', $options );\n\t\t$this->keywordsBefore   = file( $dataDir . 'keywords_before.txt', $options );\n\t\t$this->keywordsAfter    = file( $dataDir . 'keywords_after.txt', $options );\n\t\t$this->operators        = file( $dataDir . 'operators.txt', $options );\n\t\t$this->operatorsBefore  = file( $dataDir . 'operators_before.txt', $options );\n\t\t$this->operatorsAfter   = file( $dataDir . 'operators_after.txt', $options );\n\t}\n\n\t/**\n\t * Minify the data.\n\t * Perform JS optimizations.\n\t *\n\t * @param string[optional] $path Path to write the data to\n\t *\n\t * @return string The minified data\n\t */\n\tpublic function execute( $path = null ) {\n\t\t$content = '';\n\n\t\t/*\n\t\t * Let's first take out strings, comments and regular expressions.\n\t\t * All of these can contain JS code-like characters, and we should make\n\t\t * sure any further magic ignores anything inside of these.\n\t\t *\n\t\t * Consider this example, where we should not strip any whitespace:\n\t\t * var str = \"a   test\";\n\t\t *\n\t\t * Comments will be removed altogether, strings and regular expressions\n\t\t * will be replaced by placeholder text, which we'll restore later.\n\t\t */\n\t\t$this->extractStrings( '\\'\"`' );\n\t\t$this->stripComments();\n\t\t$this->extractRegex();\n\n\t\t// loop files\n\t\tforeach ( $this->data as $source => $js ) {\n\t\t\t// take out strings, comments & regex (for which we've registered\n\t\t\t// the regexes just a few lines earlier)\n\t\t\t$js = $this->replace( $js );\n\n\t\t\t$js = $this->propertyNotation( $js );\n\t\t\t$js = $this->shortenBools( $js );\n\t\t\t$js = $this->stripWhitespace( $js );\n\n\t\t\t// combine js: separating the scripts by a ;\n\t\t\t$content .= $js . ';';\n\t\t}\n\n\t\t// clean up leftover `;`s from the combination of multiple scripts\n\t\t$content = ltrim( $content, ';' );\n\t\t$content = (string) substr( $content, 0, -1 );\n\n\t\t/*\n\t\t * Earlier, we extracted strings & regular expressions and replaced them\n\t\t * with placeholder text. This will restore them.\n\t\t */\n\t\t$content = $this->restoreExtractedData( $content );\n\n\t\treturn $content;\n\t}\n\n\t/**\n\t * Strip comments from source code.\n\t */\n\tprotected function stripComments() {\n\t\t$this->stripMultilineComments();\n\n\t\t// single-line comments\n\t\t$this->registerPattern( '/\\/\\/.*$/m', '' );\n\t}\n\n\t/**\n\t * JS can have /-delimited regular expressions, like: /ab+c/.match(string).\n\t *\n\t * The content inside the regex can contain characters that may be confused\n\t * for JS code: e.g. it could contain whitespace it needs to match & we\n\t * don't want to strip whitespace in there.\n\t *\n\t * The regex can be pretty simple: we don't have to care about comments,\n\t * (which also use slashes) because stripComments() will have stripped those\n\t * already.\n\t *\n\t * This method will replace all string content with simple REGEX#\n\t * placeholder text, so we've rid all regular expressions from characters\n\t * that may be misinterpreted. Original regex content will be saved in\n\t * $this->extracted and after doing all other minifying, we can restore the\n\t * original content via restoreRegex()\n\t */\n\tprotected function extractRegex() {\n\t\t// PHP only supports $this inside anonymous functions since 5.4\n\t\t$minifier = $this;\n\t\t$callback = function ( $match ) use ( $minifier ) {\n\t\t\t$count                               = count( $minifier->extracted );\n\t\t\t$placeholder                         = '\"' . $count . '\"';\n\t\t\t$minifier->extracted[ $placeholder ] = $match[0];\n\n\t\t\treturn $placeholder;\n\t\t};\n\n\t\t// match all chars except `/` and `\\`\n\t\t// `\\` is allowed though, along with whatever char follows (which is the\n\t\t// one being escaped)\n\t\t// this should allow all chars, except for an unescaped `/` (= the one\n\t\t// closing the regex)\n\t\t// then also ignore bare `/` inside `[]`, where they don't need to be\n\t\t// escaped: anything inside `[]` can be ignored safely\n\t\t$pattern = '\\\\/(?!\\*)(?:[^\\\\[\\\\/\\\\\\\\\\n\\r]++|(?:\\\\\\\\.)++|(?:\\\\[(?:[^\\\\]\\\\\\\\\\n\\r]++|(?:\\\\\\\\.)++)++\\\\])++)++\\\\/[gimuy]*';\n\n\t\t// a regular expression can only be followed by a few operators or some\n\t\t// of the RegExp methods (a `\\` followed by a variable or value is\n\t\t// likely part of a division, not a regex)\n\t\t$keywords             = array( 'do', 'in', 'new', 'else', 'throw', 'yield', 'delete', 'return', 'typeof' );\n\t\t$before               = '(^|[=:,;\\+\\-\\*\\?\\/\\}\\(\\{\\[&\\|!]|' . implode( '|', $keywords ) . ')\\s*';\n\t\t$propertiesAndMethods = array(\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Properties_2\n\t\t\t'constructor',\n\t\t\t'flags',\n\t\t\t'global',\n\t\t\t'ignoreCase',\n\t\t\t'multiline',\n\t\t\t'source',\n\t\t\t'sticky',\n\t\t\t'unicode',\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#Methods_2\n\t\t\t'compile(',\n\t\t\t'exec(',\n\t\t\t'test(',\n\t\t\t'toSource(',\n\t\t\t'toString(',\n\t\t);\n\t\t$delimiters           = array_fill( 0, count( $propertiesAndMethods ), '/' );\n\t\t$propertiesAndMethods = array_map( 'preg_quote', $propertiesAndMethods, $delimiters );\n\t\t$after                = '(?=\\s*([\\.,;:\\)\\}&\\|+]|\\/\\/|$|\\.(' . implode( '|', $propertiesAndMethods ) . ')))';\n\t\t$this->registerPattern( '/' . $before . '\\K' . $pattern . $after . '/', $callback );\n\n\t\t// regular expressions following a `)` are rather annoying to detect...\n\t\t// quite often, `/` after `)` is a division operator & if it happens to\n\t\t// be followed by another one (or a comment), it is likely to be\n\t\t// confused for a regular expression\n\t\t// however, it's perfectly possible for a regex to follow a `)`: after\n\t\t// a single-line `if()`, `while()`, ... statement, for example\n\t\t// since, when they occur like that, they're always the start of a\n\t\t// statement, there's only a limited amount of ways they can be useful:\n\t\t// by calling the regex methods directly\n\t\t// if a regex following `)` is not followed by `.<property or method>`,\n\t\t// it's quite likely not a regex\n\t\t$before = '\\)\\s*';\n\t\t$after  = '(?=\\s*\\.(' . implode( '|', $propertiesAndMethods ) . '))';\n\t\t$this->registerPattern( '/' . $before . '\\K' . $pattern . $after . '/', $callback );\n\n\t\t// 1 more edge case: a regex can be followed by a lot more operators or\n\t\t// keywords if there's a newline (ASI) in between, where the operator\n\t\t// actually starts a new statement\n\t\t// (https://github.com/matthiasmullie/minify/issues/56)\n\t\t$operators  = $this->getOperatorsForRegex( $this->operatorsBefore, '/' );\n\t\t$operators += $this->getOperatorsForRegex( $this->keywordsReserved, '/' );\n\t\t$after      = '(?=\\s*\\n\\s*(' . implode( '|', $operators ) . '))';\n\t\t$this->registerPattern( '/' . $pattern . $after . '/', $callback );\n\t}\n\n\t/**\n\t * Strip whitespace.\n\t *\n\t * We won't strip *all* whitespace, but as much as possible. The thing that\n\t * we'll preserve are newlines we're unsure about.\n\t * JavaScript doesn't require statements to be terminated with a semicolon.\n\t * It will automatically fix missing semicolons with ASI (automatic semi-\n\t * colon insertion) at the end of line causing errors (without semicolon.)\n\t *\n\t * Because it's sometimes hard to tell if a newline is part of a statement\n\t * that should be terminated or not, we'll just leave some of them alone.\n\t *\n\t * @param string $content The content to strip the whitespace for\n\t *\n\t * @return string\n\t */\n\tprotected function stripWhitespace( $content ) {\n\t\t// uniform line endings, make them all line feed\n\t\t$content = str_replace( array( \"\\r\\n\", \"\\r\" ), \"\\n\", $content );\n\n\t\t// collapse all non-line feed whitespace into a single space\n\t\t$content = preg_replace( '/[^\\S\\n]+/', ' ', $content );\n\n\t\t// strip leading & trailing whitespace\n\t\t$content = str_replace( array( \" \\n\", \"\\n \" ), \"\\n\", $content );\n\n\t\t// collapse consecutive line feeds into just 1\n\t\t$content = preg_replace( '/\\n+/', \"\\n\", $content );\n\n\t\t$operatorsBefore = $this->getOperatorsForRegex( $this->operatorsBefore, '/' );\n\t\t$operatorsAfter  = $this->getOperatorsForRegex( $this->operatorsAfter, '/' );\n\t\t$operators       = $this->getOperatorsForRegex( $this->operators, '/' );\n\t\t$keywordsBefore  = $this->getKeywordsForRegex( $this->keywordsBefore, '/' );\n\t\t$keywordsAfter   = $this->getKeywordsForRegex( $this->keywordsAfter, '/' );\n\n\t\t// strip whitespace that ends in (or next line begin with) an operator\n\t\t// that allows statements to be broken up over multiple lines\n\t\tunset( $operatorsBefore['+'], $operatorsBefore['-'], $operatorsAfter['+'], $operatorsAfter['-'] );\n\t\t$content = preg_replace(\n\t\t\tarray(\n\t\t\t\t'/(' . implode( '|', $operatorsBefore ) . ')\\s+/',\n\t\t\t\t'/\\s+(' . implode( '|', $operatorsAfter ) . ')/',\n\t\t\t),\n\t\t\t'\\\\1',\n\t\t\t$content\n\t\t);\n\n\t\t// make sure + and - can't be mistaken for, or joined into ++ and --\n\t\t$content = preg_replace(\n\t\t\tarray(\n\t\t\t\t'/(?<![\\+\\-])\\s*([\\+\\-])(?![\\+\\-])/',\n\t\t\t\t'/(?<![\\+\\-])([\\+\\-])\\s*(?![\\+\\-])/',\n\t\t\t),\n\t\t\t'\\\\1',\n\t\t\t$content\n\t\t);\n\n\t\t// collapse whitespace around reserved words into single space\n\t\t$content = preg_replace( '/(^|[;\\}\\s])\\K(' . implode( '|', $keywordsBefore ) . ')\\s+/', '\\\\2 ', $content );\n\t\t$content = preg_replace( '/\\s+(' . implode( '|', $keywordsAfter ) . ')(?=([;\\{\\s]|$))/', ' \\\\1', $content );\n\n\t\t/*\n\t\t * We didn't strip whitespace after a couple of operators because they\n\t\t * could be used in different contexts and we can't be sure it's ok to\n\t\t * strip the newlines. However, we can safely strip any non-line feed\n\t\t * whitespace that follows them.\n\t\t */\n\t\t$operatorsDiffBefore = array_diff( $operators, $operatorsBefore );\n\t\t$operatorsDiffAfter  = array_diff( $operators, $operatorsAfter );\n\t\t$content             = preg_replace( '/(' . implode( '|', $operatorsDiffBefore ) . ')[^\\S\\n]+/', '\\\\1', $content );\n\t\t$content             = preg_replace( '/[^\\S\\n]+(' . implode( '|', $operatorsDiffAfter ) . ')/', '\\\\1', $content );\n\n\t\t/*\n\t\t * Whitespace after `return` can be omitted in a few occasions\n\t\t * (such as when followed by a string or regex)\n\t\t * Same for whitespace in between `)` and `{`, or between `{` and some\n\t\t * keywords.\n\t\t */\n\t\t$content = preg_replace( '/\\breturn\\s+([\"\\'\\/\\+\\-])/', 'return$1', $content );\n\t\t$content = preg_replace( '/\\)\\s+\\{/', '){', $content );\n\t\t$content = preg_replace( '/}\\n(else|catch|finally)\\b/', '}$1', $content );\n\n\t\t/*\n\t\t * Get rid of double semicolons, except where they can be used like:\n\t\t * \"for(v=1,_=b;;)\", \"for(v=1;;v++)\" or \"for(;;ja||(ja=true))\".\n\t\t * I'll safeguard these double semicolons inside for-loops by\n\t\t * temporarily replacing them with an invalid condition: they won't have\n\t\t * a double semicolon and will be easy to spot to restore afterwards.\n\t\t */\n\t\t$content = preg_replace( '/\\bfor\\(([^;]*);;([^;]*)\\)/', 'for(\\\\1;-;\\\\2)', $content );\n\t\t$content = preg_replace( '/;+/', ';', $content );\n\t\t$content = preg_replace( '/\\bfor\\(([^;]*);-;([^;]*)\\)/', 'for(\\\\1;;\\\\2)', $content );\n\n\t\t/*\n\t\t * Next, we'll be removing all semicolons where ASI kicks in.\n\t\t * for-loops however, can have an empty body (ending in only a\n\t\t * semicolon), like: `for(i=1;i<3;i++);`, of `for(i in list);`\n\t\t * Here, nothing happens during the loop; it's just used to keep\n\t\t * increasing `i`. With that ; omitted, the next line would be expected\n\t\t * to be the for-loop's body... Same goes for while loops.\n\t\t * I'm going to double that semicolon (if any) so after the next line,\n\t\t * which strips semicolons here & there, we're still left with this one.\n\t\t * Note the special recursive construct in the three inner parts of the for:\n\t\t * (\\{([^\\{\\}]*(?-2))*[^\\{\\}]*\\})? - it is intended to match inline\n\t\t * functions bodies, e.g.: i<arr.map(function(e){return e}).length.\n\t\t * Also note that the construct is applied only once and multiplied\n\t\t * for each part of the for, otherwise it risks a catastrophic backtracking.\n\t\t * The limitation is that it will not allow closures in more than one\n\t\t * of the three parts for a specific for() case.\n\t\t * REGEX throwing catastrophic backtracking: $content = preg_replace('/(for\\([^;\\{]*(\\{([^\\{\\}]*(?-2))*[^\\{\\}]*\\})?[^;\\{]*;[^;\\{]*(\\{([^\\{\\}]*(?-2))*[^\\{\\}]*\\})?[^;\\{]*;[^;\\{]*(\\{([^\\{\\}]*(?-2))*[^\\{\\}]*\\})?[^;\\{]*\\));(\\}|$)/s', '\\\\1;;\\\\8', $content);\n\t\t */\n\t\t$content = preg_replace( '/(for\\((?:[^;\\{]*|[^;\\{]*function[^;\\{]*(\\{([^\\{\\}]*(?-2))*[^\\{\\}]*\\})?[^;\\{]*);[^;\\{]*;[^;\\{]*\\));(\\}|$)/s', '\\\\1;;\\\\4', $content );\n\t\t$content = preg_replace( '/(for\\([^;\\{]*;(?:[^;\\{]*|[^;\\{]*function[^;\\{]*(\\{([^\\{\\}]*(?-2))*[^\\{\\}]*\\})?[^;\\{]*);[^;\\{]*\\));(\\}|$)/s', '\\\\1;;\\\\4', $content );\n\t\t$content = preg_replace( '/(for\\([^;\\{]*;[^;\\{]*;(?:[^;\\{]*|[^;\\{]*function[^;\\{]*(\\{([^\\{\\}]*(?-2))*[^\\{\\}]*\\})?[^;\\{]*)\\));(\\}|$)/s', '\\\\1;;\\\\4', $content );\n\n\t\t$content = preg_replace( '/(for\\([^;\\{]+\\s+in\\s+[^;\\{]+\\));(\\}|$)/s', '\\\\1;;\\\\2', $content );\n\n\t\t/*\n\t\t * Do the same for the if's that don't have a body but are followed by ;}\n\t\t */\n\t\t$content = preg_replace( '/(\\bif\\s*\\([^{;]*\\));\\}/s', '\\\\1;;}', $content );\n\n\t\t/*\n\t\t * Below will also keep `;` after a `do{}while();` along with `while();`\n\t\t * While these could be stripped after do-while, detecting this\n\t\t * distinction is cumbersome, so I'll play it safe and make sure `;`\n\t\t * after any kind of `while` is kept.\n\t\t */\n\t\t$content = preg_replace( '/(while\\([^;\\{]+\\));(\\}|$)/s', '\\\\1;;\\\\2', $content );\n\n\t\t/*\n\t\t * We also can't strip empty else-statements. Even though they're\n\t\t * useless and probably shouldn't be in the code in the first place, we\n\t\t * shouldn't be stripping the `;` that follows it as it breaks the code.\n\t\t * We can just remove those useless else-statements completely.\n\t\t *\n\t\t * @see https://github.com/matthiasmullie/minify/issues/91\n\t\t */\n\t\t$content = preg_replace( '/else;/s', '', $content );\n\n\t\t/*\n\t\t * We also don't really want to terminate statements followed by closing\n\t\t * curly braces (which we've ignored completely up until now) or end-of-\n\t\t * script: ASI will kick in here & we're all about minifying.\n\t\t * Semicolons at beginning of the file don't make any sense either.\n\t\t */\n\t\t$content = preg_replace( '/;(\\}|$)/s', '\\\\1', $content );\n\t\t$content = ltrim( $content, ';' );\n\n\t\t// get rid of remaining whitespace af beginning/end\n\t\treturn trim( $content );\n\t}\n\n\t/**\n\t * We'll strip whitespace around certain operators with regular expressions.\n\t * This will prepare the given array by escaping all characters.\n\t *\n\t * @param string[] $operators\n\t * @param string   $delimiter\n\t *\n\t * @return string[]\n\t */\n\tprotected function getOperatorsForRegex( array $operators, $delimiter = '/' ) {\n\t\t// escape operators for use in regex\n\t\t$delimiters = array_fill( 0, count( $operators ), $delimiter );\n\t\t$escaped    = array_map( 'preg_quote', $operators, $delimiters );\n\n\t\t$operators = array_combine( $operators, $escaped );\n\n\t\t// ignore + & - for now, they'll get special treatment\n\t\tunset( $operators['+'], $operators['-'] );\n\n\t\t// dot can not just immediately follow a number; it can be confused for\n\t\t// decimal point, or calling a method on it, e.g. 42 .toString()\n\t\t$operators['.'] = '(?<![0-9]\\s)\\.';\n\n\t\t// don't confuse = with other assignment shortcuts (e.g. +=)\n\t\t$chars          = preg_quote( '+-*\\=<>%&|', $delimiter );\n\t\t$operators['='] = '(?<![' . $chars . '])\\=';\n\n\t\treturn $operators;\n\t}\n\n\t/**\n\t * We'll strip whitespace around certain keywords with regular expressions.\n\t * This will prepare the given array by escaping all characters.\n\t *\n\t * @param string[] $keywords\n\t * @param string   $delimiter\n\t *\n\t * @return string[]\n\t */\n\tprotected function getKeywordsForRegex( array $keywords, $delimiter = '/' ) {\n\t\t// escape keywords for use in regex\n\t\t$delimiter = array_fill( 0, count( $keywords ), $delimiter );\n\t\t$escaped   = array_map( 'preg_quote', $keywords, $delimiter );\n\n\t\t// add word boundaries\n\t\tarray_walk(\n\t\t\t$keywords,\n\t\t\tfunction ( $value ) {\n\t\t\t\treturn '\\b' . $value . '\\b';\n\t\t\t}\n\t\t);\n\n\t\t$keywords = array_combine( $keywords, $escaped );\n\n\t\treturn $keywords;\n\t}\n\n\t/**\n\t * Replaces all occurrences of array['key'] by array.key.\n\t *\n\t * @param string $content\n\t *\n\t * @return string\n\t */\n\tprotected function propertyNotation( $content ) {\n\t\t// PHP only supports $this inside anonymous functions since 5.4\n\t\t$minifier = $this;\n\t\t$keywords = $this->keywordsReserved;\n\t\t$callback = function ( $match ) use ( $minifier, $keywords ) {\n\t\t\t$property = trim( $minifier->extracted[ $match[1] ], '\\'\"' );\n\n\t\t\t/*\n\t\t\t * Check if the property is a reserved keyword. In this context (as\n\t\t\t * property of an object literal/array) it shouldn't matter, but IE8\n\t\t\t * freaks out with \"Expected identifier\".\n\t\t\t */\n\t\t\tif ( in_array( $property, $keywords ) ) {\n\t\t\t\treturn $match[0];\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * See if the property is in a variable-like format (e.g.\n\t\t\t * array['key-here'] can't be replaced by array.key-here since '-'\n\t\t\t * is not a valid character there.\n\t\t\t */\n\t\t\tif ( ! preg_match( '/^' . $minifier::REGEX_VARIABLE . '$/u', $property ) ) {\n\t\t\t\treturn $match[0];\n\t\t\t}\n\n\t\t\treturn '.' . $property;\n\t\t};\n\n\t\t/*\n\t\t * Figure out if previous character is a variable name (of the array\n\t\t * we want to use property notation on) - this is to make sure\n\t\t * standalone ['value'] arrays aren't confused for keys-of-an-array.\n\t\t * We can (and only have to) check the last character, because PHP's\n\t\t * regex implementation doesn't allow unfixed-length look-behind\n\t\t * assertions.\n\t\t */\n\t\tpreg_match( '/(\\[[^\\]]+\\])[^\\]]*$/', static::REGEX_VARIABLE, $previousChar );\n\t\t$previousChar = $previousChar[1];\n\n\t\t/*\n\t\t * Make sure word preceding the ['value'] is not a keyword, e.g.\n\t\t * return['x']. Because -again- PHP's regex implementation doesn't allow\n\t\t * unfixed-length look-behind assertions, I'm just going to do a lot of\n\t\t * separate look-behind assertions, one for each keyword.\n\t\t */\n\t\t$keywords = $this->getKeywordsForRegex( $keywords );\n\t\t$keywords = '(?<!' . implode( ')(?<!', $keywords ) . ')';\n\n\t\treturn preg_replace_callback( '/(?<=' . $previousChar . '|\\])' . $keywords . '\\[\\s*(([\\'\"])[0-9]+\\\\2)\\s*\\]/u', $callback, $content );\n\t}\n\n\t/**\n\t * Replaces true & false by !0 and !1.\n\t *\n\t * @param string $content\n\t *\n\t * @return string\n\t */\n\tprotected function shortenBools( $content ) {\n\t\t/*\n\t\t * 'true' or 'false' could be used as property names (which may be\n\t\t * followed by whitespace) - we must not replace those!\n\t\t * Since PHP doesn't allow variable-length (to account for the\n\t\t * whitespace) lookbehind assertions, I need to capture the leading\n\t\t * character and check if it's a `.`\n\t\t */\n\t\t$callback = function ( $match ) {\n\t\t\tif ( trim( $match[1] ) === '.' ) {\n\t\t\t\treturn $match[0];\n\t\t\t}\n\n\t\t\treturn $match[1] . ( $match[2] === 'true' ? '!0' : '!1' );\n\t\t};\n\t\t$content  = preg_replace_callback( '/(^|.\\s*)\\b(true|false)\\b(?!:)/', $callback, $content );\n\n\t\t// for(;;) is exactly the same as while(true), but shorter :)\n\t\t$content = preg_replace( '/\\bwhile\\(!0\\){/', 'for(;;){', $content );\n\n\t\t// now make sure we didn't turn any do ... while(true) into do ... for(;;)\n\t\tpreg_match_all( '/\\bdo\\b/', $content, $dos, PREG_OFFSET_CAPTURE | PREG_SET_ORDER );\n\n\t\t// go backward to make sure positional offsets aren't altered when $content changes\n\t\t$dos = array_reverse( $dos );\n\t\tforeach ( $dos as $do ) {\n\t\t\t$offsetDo = $do[0][1];\n\n\t\t\t// find all `while` (now `for`) following `do`: one of those must be\n\t\t\t// associated with the `do` and be turned back into `while`\n\t\t\tpreg_match_all( '/\\bfor\\(;;\\)/', $content, $whiles, PREG_OFFSET_CAPTURE | PREG_SET_ORDER, $offsetDo );\n\t\t\tforeach ( $whiles as $while ) {\n\t\t\t\t$offsetWhile = $while[0][1];\n\n\t\t\t\t$open  = substr_count( $content, '{', $offsetDo, $offsetWhile - $offsetDo );\n\t\t\t\t$close = substr_count( $content, '}', $offsetDo, $offsetWhile - $offsetDo );\n\t\t\t\tif ( $open === $close ) {\n\t\t\t\t\t// only restore `while` if amount of `{` and `}` are the same;\n\t\t\t\t\t// otherwise, that `for` isn't associated with this `do`\n\t\t\t\t\t$content = substr_replace( $content, 'while(!0)', $offsetWhile, strlen( 'for(;;)' ) );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn $content;\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/php-compatibility.func.php","ext":"php","size":5491,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * LiteSpeed PHP compatibility functions for lower PHP version\n *\n * @since      1.1.3\n * @package    LiteSpeed\n * @subpackage LiteSpeed_Cache/lib\n */\n\ndefined( 'WPINC' ) || exit;\n\n\n/**\n * http_build_url() compatibility\n */\nif ( ! function_exists( 'http_build_url' ) ) {\n\tif ( ! defined( 'HTTP_URL_REPLACE' ) ) {\n\t\tdefine( 'HTTP_URL_REPLACE', 1 );              // Replace every part of the first URL when there's one of the second URL\n\t}\n\tif ( ! defined( 'HTTP_URL_JOIN_PATH' ) ) {\n\t\tdefine( 'HTTP_URL_JOIN_PATH', 2 );            // Join relative paths\n\t}\n\tif ( ! defined( 'HTTP_URL_JOIN_QUERY' ) ) {\n\t\tdefine( 'HTTP_URL_JOIN_QUERY', 4 );           // Join query strings\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_USER' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_USER', 8 );           // Strip any user authentication information\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_PASS' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_PASS', 16 );          // Strip any password authentication information\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_AUTH' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_AUTH', 32 );          // Strip any authentication information\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_PORT' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_PORT', 64 );          // Strip explicit port numbers\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_PATH' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_PATH', 128 );         // Strip complete path\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_QUERY' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_QUERY', 256 );        // Strip query string\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_FRAGMENT' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_FRAGMENT', 512 );     // Strip any fragments (#identifier)\n\t}\n\tif ( ! defined( 'HTTP_URL_STRIP_ALL' ) ) {\n\t\tdefine( 'HTTP_URL_STRIP_ALL', 1024 );         // Strip anything but scheme and host\n\t}\n\n\t// Build an URL\n\t// The parts of the second URL will be merged into the first according to the flags argument.\n\t//\n\t// @param   mixed           (Part(s) of) an URL in form of a string or associative array like parse_url() returns\n\t// @param   mixed           Same as the first argument\n\t// @param   int             A bitmask of binary or'ed HTTP_URL constants (Optional)HTTP_URL_REPLACE is the default\n\t// @param   array           If set, it will be filled with the parts of the composed url like parse_url() would return\n\tfunction http_build_url( $url, $parts = array(), $flags = HTTP_URL_REPLACE, &$new_url = false ) {\n\t\t$keys = array( 'user', 'pass', 'port', 'path', 'query', 'fragment' );\n\n\t\t// HTTP_URL_STRIP_ALL becomes all the HTTP_URL_STRIP_Xs\n\t\tif ( $flags & HTTP_URL_STRIP_ALL ) {\n\t\t\t$flags |= HTTP_URL_STRIP_USER;\n\t\t\t$flags |= HTTP_URL_STRIP_PASS;\n\t\t\t$flags |= HTTP_URL_STRIP_PORT;\n\t\t\t$flags |= HTTP_URL_STRIP_PATH;\n\t\t\t$flags |= HTTP_URL_STRIP_QUERY;\n\t\t\t$flags |= HTTP_URL_STRIP_FRAGMENT;\n\t\t}\n\t\t// HTTP_URL_STRIP_AUTH becomes HTTP_URL_STRIP_USER and HTTP_URL_STRIP_PASS\n\t\telseif ( $flags & HTTP_URL_STRIP_AUTH ) {\n\t\t\t$flags |= HTTP_URL_STRIP_USER;\n\t\t\t$flags |= HTTP_URL_STRIP_PASS;\n\t\t}\n\n\t\t// Parse the original URL\n\t\t// - Suggestion by Sayed Ahad Abbas\n\t\t// In case you send a parse_url array as input\n\t\t$parse_url = ! is_array( $url ) ? parse_url( $url ) : $url;\n\n\t\t// Scheme and Host are always replaced\n\t\tif ( isset( $parts['scheme'] ) ) {\n\t\t\t$parse_url['scheme'] = $parts['scheme'];\n\t\t}\n\t\tif ( isset( $parts['host'] ) ) {\n\t\t\t$parse_url['host'] = $parts['host'];\n\t\t}\n\n\t\t// (If applicable) Replace the original URL with it's new parts\n\t\tif ( $flags & HTTP_URL_REPLACE ) {\n\t\t\tforeach ( $keys as $key ) {\n\t\t\t\tif ( isset( $parts[ $key ] ) ) {\n\t\t\t\t\t$parse_url[ $key ] = $parts[ $key ];\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Join the original URL path with the new path\n\t\t\tif ( isset( $parts['path'] ) && ( $flags & HTTP_URL_JOIN_PATH ) ) {\n\t\t\t\tif ( isset( $parse_url['path'] ) ) {\n\t\t\t\t\t$parse_url['path'] = rtrim( str_replace( basename( $parse_url['path'] ), '', $parse_url['path'] ), '/' ) . '/' . ltrim( $parts['path'], '/' );\n\t\t\t\t} else {\n\t\t\t\t\t$parse_url['path'] = $parts['path'];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Join the original query string with the new query string\n\t\t\tif ( isset( $parts['query'] ) && ( $flags & HTTP_URL_JOIN_QUERY ) ) {\n\t\t\t\tif ( isset( $parse_url['query'] ) ) {\n\t\t\t\t\t$parse_url['query'] .= '&' . $parts['query'];\n\t\t\t\t} else {\n\t\t\t\t\t$parse_url['query'] = $parts['query'];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Strips all the applicable sections of the URL\n\t\t// Note: Scheme and Host are never stripped\n\t\tforeach ( $keys as $key ) {\n\t\t\tif ( $flags & (int) constant( 'HTTP_URL_STRIP_' . strtoupper( $key ) ) ) {\n\t\t\t\tunset( $parse_url[ $key ] );\n\t\t\t}\n\t\t}\n\n\t\t$new_url = $parse_url;\n\n\t\treturn ( isset( $parse_url['scheme'] ) ? $parse_url['scheme'] . '://' : '' )\n\t\t\t. ( isset( $parse_url['user'] ) ? $parse_url['user'] . ( isset( $parse_url['pass'] ) ? ':' . $parse_url['pass'] : '' ) . '@' : '' )\n\t\t\t. ( isset( $parse_url['host'] ) ? $parse_url['host'] : '' )\n\t\t\t. ( isset( $parse_url['port'] ) ? ':' . $parse_url['port'] : '' )\n\t\t\t. ( isset( $parse_url['path'] ) ? $parse_url['path'] : '' )\n\t\t\t. ( isset( $parse_url['query'] ) ? '?' . $parse_url['query'] : '' )\n\t\t\t. ( isset( $parse_url['fragment'] ) ? '#' . $parse_url['fragment'] : '' );\n\t}\n}\n\n\nif ( ! function_exists( 'array_key_first' ) ) {\n\tfunction array_key_first( array $arr ) {\n\t\tforeach ( $arr as $k => $unused ) {\n\t\t\treturn $k;\n\t\t}\n\t\treturn null;\n\t}\n}\n\nif ( ! function_exists( 'array_column' ) ) {\n\tfunction array_column( $array, $column_name ) {\n\t\treturn array_map(\n\t\t\tfunction ( $element ) use ( $column_name ) {\n\t\t\t\treturn $element[ $column_name ];\n\t\t\t},\n\t\t\t$array\n\t\t);\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/html-min.cls.php","ext":"php","size":8164,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n/**\n * Compress HTML\n *\n * This is a heavy regex-based removal of whitespace, unnecessary comments and\n * tokens. IE conditional comments are preserved. There are also options to have\n * STYLE and SCRIPT blocks compressed by callback functions.\n *\n * A test suite is available.\n *\n * @package Minify\n * @author Stephen Clay <steve@mrclay.org>\n */\nnamespace LiteSpeed\\Lib;\n\ndefined( 'WPINC' ) || exit;\n\nclass HTML_MIN {\n\n\t/**\n\t * @var string\n\t */\n\tprotected $_html = '';\n\n\t/**\n\t * @var boolean\n\t */\n\tprotected $_jsCleanComments = true;\n\tprotected $_skipComments    = array();\n\n\t/**\n\t * \"Minify\" an HTML page\n\t *\n\t * @param string $html\n\t *\n\t * @param array  $options\n\t *\n\t * 'cssMinifier' : (optional) callback function to process content of STYLE\n\t * elements.\n\t *\n\t * 'jsMinifier' : (optional) callback function to process content of SCRIPT\n\t * elements. Note: the type attribute is ignored.\n\t *\n\t * 'xhtml' : (optional boolean) should content be treated as XHTML1.0? If\n\t * unset, minify will sniff for an XHTML doctype.\n\t *\n\t * @return string\n\t */\n\tpublic static function minify( $html, $options = array() ) {\n\t\t$min = new self( $html, $options );\n\n\t\treturn $min->process();\n\t}\n\n\t/**\n\t * Create a minifier object\n\t *\n\t * @param string $html\n\t *\n\t * @param array  $options\n\t *\n\t * 'cssMinifier' : (optional) callback function to process content of STYLE\n\t * elements.\n\t *\n\t * 'jsMinifier' : (optional) callback function to process content of SCRIPT\n\t * elements. Note: the type attribute is ignored.\n\t *\n\t * 'jsCleanComments' : (optional) whether to remove HTML comments beginning and end of script block\n\t *\n\t * 'xhtml' : (optional boolean) should content be treated as XHTML1.0? If\n\t * unset, minify will sniff for an XHTML doctype.\n\t */\n\tpublic function __construct( $html, $options = array() ) {\n\t\t$this->_html = str_replace( \"\\r\\n\", \"\\n\", trim( $html ) );\n\t\tif ( isset( $options['xhtml'] ) ) {\n\t\t\t$this->_isXhtml = (bool) $options['xhtml'];\n\t\t}\n\t\tif ( isset( $options['cssMinifier'] ) ) {\n\t\t\t$this->_cssMinifier = $options['cssMinifier'];\n\t\t}\n\t\tif ( isset( $options['jsMinifier'] ) ) {\n\t\t\t$this->_jsMinifier = $options['jsMinifier'];\n\t\t}\n\t\tif ( isset( $options['jsCleanComments'] ) ) {\n\t\t\t$this->_jsCleanComments = (bool) $options['jsCleanComments'];\n\t\t}\n\t\tif ( isset( $options['skipComments'] ) ) {\n\t\t\t$this->_skipComments = $options['skipComments'];\n\t\t}\n\t}\n\n\t/**\n\t * Minify the markeup given in the constructor\n\t *\n\t * @return string\n\t */\n\tpublic function process() {\n\t\tif ( $this->_isXhtml === null ) {\n\t\t\t$this->_isXhtml = ( false !== strpos( $this->_html, '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML' ) );\n\t\t}\n\n\t\t$this->_replacementHash = 'MINIFYHTML' . md5( $_SERVER['REQUEST_TIME'] );\n\t\t$this->_placeholders    = array();\n\n\t\t// replace SCRIPTs (and minify) with placeholders\n\t\t$this->_html = preg_replace_callback(\n\t\t\t'/(\\\\s*)<script(\\\\b[^>]*?>)([\\\\s\\\\S]*?)<\\\\/script>(\\\\s*)/i',\n\t\t\tarray( $this, '_removeScriptCB' ),\n\t\t\t$this->_html\n\t\t);\n\n\t\t// replace STYLEs (and minify) with placeholders\n\t\t$this->_html = preg_replace_callback(\n\t\t\t'/\\\\s*<style(\\\\b[^>]*>)([\\\\s\\\\S]*?)<\\\\/style>\\\\s*/i',\n\t\t\tarray( $this, '_removeStyleCB' ),\n\t\t\t$this->_html\n\t\t);\n\n\t\t// remove HTML comments (not containing IE conditional comments).\n\t\t$this->_html = preg_replace_callback(\n\t\t\t'/<!--([\\\\s\\\\S]*?)-->/',\n\t\t\tarray( $this, '_commentCB' ),\n\t\t\t$this->_html\n\t\t);\n\n\t\t// replace PREs with placeholders\n\t\t$this->_html = preg_replace_callback(\n\t\t\t'/\\\\s*<pre(\\\\b[^>]*?>[\\\\s\\\\S]*?<\\\\/pre>)\\\\s*/i',\n\t\t\tarray( $this, '_removePreCB' ),\n\t\t\t$this->_html\n\t\t);\n\n\t\t// replace TEXTAREAs with placeholders\n\t\t$this->_html = preg_replace_callback(\n\t\t\t'/\\\\s*<textarea(\\\\b[^>]*?>[\\\\s\\\\S]*?<\\\\/textarea>)\\\\s*/i',\n\t\t\tarray( $this, '_removeTextareaCB' ),\n\t\t\t$this->_html\n\t\t);\n\n\t\t// trim each line.\n\t\t// @todo take into account attribute values that span multiple lines.\n\t\t$this->_html = preg_replace( '/^\\\\s+|\\\\s+$/m', '', $this->_html );\n\n\t\t// remove ws around block/undisplayed elements\n\t\t$this->_html = preg_replace(\n\t\t\t'/\\\\s+(<\\\\/?(?:area|article|aside|base(?:font)?|blockquote|body'\n\t\t\t. '|canvas|caption|center|col(?:group)?|dd|dir|div|dl|dt|fieldset|figcaption|figure|footer|form'\n\t\t\t. '|frame(?:set)?|h[1-6]|head|header|hgroup|hr|html|legend|li|link|main|map|menu|meta|nav'\n\t\t\t. '|ol|opt(?:group|ion)|output|p|param|section|t(?:able|body|head|d|h||r|foot|itle)'\n\t\t\t. '|ul|video)\\\\b[^>]*>)/i',\n\t\t\t'$1',\n\t\t\t$this->_html\n\t\t);\n\n\t\t// remove ws outside of all elements\n\t\t$this->_html = preg_replace(\n\t\t\t'/>(\\\\s(?:\\\\s*))?([^<]+)(\\\\s(?:\\s*))?</',\n\t\t\t'>$1$2$3<',\n\t\t\t$this->_html\n\t\t);\n\n\t\t// use newlines before 1st attribute in open tags (to limit line lengths)\n\t\t// $this->_html = preg_replace('/(<[a-z\\\\-]+)\\\\s+([^>]+>)/i', \"$1\\n$2\", $this->_html);\n\n\t\t// fill placeholders\n\t\t$this->_html = str_replace(\n\t\t\tarray_keys( $this->_placeholders ),\n\t\t\tarray_values( $this->_placeholders ),\n\t\t\t$this->_html\n\t\t);\n\t\t// issue 229: multi-pass to catch scripts that didn't get replaced in textareas\n\t\t$this->_html = str_replace(\n\t\t\tarray_keys( $this->_placeholders ),\n\t\t\tarray_values( $this->_placeholders ),\n\t\t\t$this->_html\n\t\t);\n\n\t\treturn $this->_html;\n\t}\n\n\t/**\n\t * From LSCWP 6.2: Changed the function to test for special comments that will be skipped. See: https://github.com/litespeedtech/lscache_wp/pull/622\n\t */\n\tprotected function _commentCB( $m ) {\n\t\t// If is IE conditional comment return it.\n\t\tif ( 0 === strpos( $m[1], '[' ) || false !== strpos( $m[1], '<![' ) ) {\n\t\t\treturn $m[0];\n\t\t}\n\n\t\t// Check if comment text is present in Page Optimization -> HTML Settings -> HTML Keep comments\n\t\tif ( count( $this->_skipComments ) > 0 ) {\n\t\t\tforeach ( $this->_skipComments as $comment ) {\n\t\t\t\tif ( $comment && strpos( $m[1], $comment ) !== false ) {\n\t\t\t\t\treturn $m[0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Comment can be removed.\n\t\treturn '';\n\t}\n\n\tprotected function _reservePlace( $content ) {\n\t\t$placeholder                         = '%' . $this->_replacementHash . count( $this->_placeholders ) . '%';\n\t\t$this->_placeholders[ $placeholder ] = $content;\n\n\t\treturn $placeholder;\n\t}\n\n\tprotected $_isXhtml         = null;\n\tprotected $_replacementHash = null;\n\tprotected $_placeholders    = array();\n\tprotected $_cssMinifier     = null;\n\tprotected $_jsMinifier      = null;\n\n\tprotected function _removePreCB( $m ) {\n\t\treturn $this->_reservePlace( \"<pre{$m[1]}\" );\n\t}\n\n\tprotected function _removeTextareaCB( $m ) {\n\t\treturn $this->_reservePlace( \"<textarea{$m[1]}\" );\n\t}\n\n\tprotected function _removeStyleCB( $m ) {\n\t\t$openStyle = \"<style{$m[1]}\";\n\t\t$css       = $m[2];\n\t\t// remove HTML comments\n\t\t$css = preg_replace( '/(?:^\\\\s*<!--|-->\\\\s*$)/', '', $css );\n\n\t\t// remove CDATA section markers\n\t\t$css = $this->_removeCdata( $css );\n\n\t\t// minify\n\t\t$minifier = $this->_cssMinifier\n\t\t\t? $this->_cssMinifier\n\t\t\t: 'trim';\n\t\t$css      = call_user_func( $minifier, $css );\n\n\t\treturn $this->_reservePlace(\n\t\t\t$this->_needsCdata( $css )\n\t\t\t? \"{$openStyle}/*<![CDATA[*/{$css}/*]]>*/</style>\"\n\t\t\t: \"{$openStyle}{$css}</style>\"\n\t\t);\n\t}\n\n\tprotected function _removeScriptCB( $m ) {\n\t\t$openScript = \"<script{$m[2]}\";\n\t\t$js         = $m[3];\n\n\t\t// whitespace surrounding? preserve at least one space\n\t\t$ws1 = ( $m[1] === '' ) ? '' : ' ';\n\t\t$ws2 = ( $m[4] === '' ) ? '' : ' ';\n\n\t\t// remove HTML comments (and ending \"//\" if present)\n\t\tif ( $this->_jsCleanComments ) {\n\t\t\t$js = preg_replace( '/(?:^\\\\s*<!--\\\\s*|\\\\s*(?:\\\\/\\\\/)?\\\\s*-->\\\\s*$)/', '', $js );\n\t\t}\n\n\t\t// remove CDATA section markers\n\t\t$js = $this->_removeCdata( $js );\n\n\t\t// minify\n\t\t/**\n\t\t * Added 2nd param by LiteSpeed\n\t\t *\n\t\t * @since  2.2.3\n\t\t */\n\t\tif ( $this->_jsMinifier ) {\n\t\t\t$js = call_user_func( $this->_jsMinifier, $js, trim( $m[2] ) );\n\t\t} else {\n\t\t\t$js = trim( $js );\n\t\t}\n\n\t\treturn $this->_reservePlace(\n\t\t\t$this->_needsCdata( $js )\n\t\t\t? \"{$ws1}{$openScript}/*<![CDATA[*/{$js}/*]]>*/</script>{$ws2}\"\n\t\t\t: \"{$ws1}{$openScript}{$js}</script>{$ws2}\"\n\t\t);\n\t}\n\n\tprotected function _removeCdata( $str ) {\n\t\treturn ( false !== strpos( $str, '<![CDATA[' ) )\n\t\t\t? str_replace( array( '<![CDATA[', ']]>' ), '', $str )\n\t\t\t: $str;\n\t}\n\n\tprotected function _needsCdata( $str ) {\n\t\treturn ( $this->_isXhtml && preg_match( '/(?:[<&]|\\\\-\\\\-|\\\\]\\\\]>)/', $str ) );\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/lib/guest.cls.php","ext":"php","size":4745,"mtime":1757312769,"type":"text","content":"<?php\n// phpcs:ignoreFile\n\nnamespace LiteSpeed\\Lib;\n\n/**\n * Update guest vary\n *\n * @since 4.1\n */\nclass Guest {\n\n\tconst CONF_FILE            = '.litespeed_conf.dat';\n\tconst HASH                 = 'hash'; // Not set-able\n\tconst O_CACHE_LOGIN_COOKIE = 'cache-login_cookie';\n\tconst O_DEBUG              = 'debug';\n\tconst O_DEBUG_IPS          = 'debug-ips';\n\tconst O_UTIL_NO_HTTPS_VARY = 'util-no_https_vary';\n\tconst O_GUEST_UAS          = 'guest_uas';\n\tconst O_GUEST_IPS          = 'guest_ips';\n\n\tprivate static $_ip;\n\tprivate static $_vary_name = '_lscache_vary'; // this default vary cookie is used for logged in status check\n\tprivate $_conf             = false;\n\n\t/**\n\t * Constructor\n\t *\n\t * @since 4.1\n\t */\n\tpublic function __construct() {\n\t\t! defined( 'LSCWP_CONTENT_FOLDER' ) && define( 'LSCWP_CONTENT_FOLDER', dirname( __DIR__, 3 ) );\n\t\t// Load config\n\t\t$this->_conf = file_get_contents( LSCWP_CONTENT_FOLDER . '/' . self::CONF_FILE );\n\t\tif ( $this->_conf ) {\n\t\t\t$this->_conf = json_decode( $this->_conf, true );\n\t\t}\n\n\t\tif ( ! empty( $this->_conf[ self::O_CACHE_LOGIN_COOKIE ] ) ) {\n\t\t\tself::$_vary_name = $this->_conf[ self::O_CACHE_LOGIN_COOKIE ];\n\t\t}\n\t}\n\n\t/**\n\t * Update Guest vary\n\t *\n\t * @since  4.0\n\t */\n\tpublic function update_guest_vary() {\n\t\t// This process must not be cached\n\t\t/**\n\t\t * @reference https://wordpress.org/support/topic/soft-404-from-google-search-on-litespeed-cache-guest-vary-php/#post-16838583\n\t\t */\n\t\theader( 'X-Robots-Tag: noindex' );\n\t\theader( 'X-LiteSpeed-Cache-Control: no-cache' );\n\n\t\tif ( $this->always_guest() ) {\n\t\t\techo '[]';\n\t\t\texit;\n\t\t}\n\n\t\t// If contains vary already, don't reload to avoid infinite loop when parent page having browser cache\n\t\tif ( $this->_conf && self::has_vary() ) {\n\t\t\techo '[]';\n\t\t\texit;\n\t\t}\n\n\t\t// Send vary cookie\n\t\t$vary = 'guest_mode:1';\n\t\tif ( $this->_conf && empty( $this->_conf[ self::O_DEBUG ] ) ) {\n\t\t\t$vary = md5( $this->_conf[ self::HASH ] . $vary );\n\t\t}\n\n\t\t$expire = time() + 2 * 86400;\n\t\t$is_ssl = ! empty( $this->_conf[ self::O_UTIL_NO_HTTPS_VARY ] ) ? false : $this->is_ssl();\n\t\tsetcookie( self::$_vary_name, $vary, $expire, '/', false, $is_ssl, true );\n\n\t\t// return json\n\t\techo json_encode( array( 'reload' => 'yes' ) );\n\t\texit;\n\t}\n\n\t/**\n\t * WP's is_ssl() func\n\t *\n\t * @since 4.1\n\t */\n\tprivate function is_ssl() {\n\t\tif ( isset( $_SERVER['HTTPS'] ) ) {\n\t\t\tif ( 'on' === strtolower( $_SERVER['HTTPS'] ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( '1' == $_SERVER['HTTPS'] ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} elseif ( isset( $_SERVER['SERVER_PORT'] ) && ( '443' == $_SERVER['SERVER_PORT'] ) ) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if default vary has a value\n\t *\n\t * @since 1.1.3\n\t * @access public\n\t */\n\tpublic static function has_vary() {\n\t\tif ( empty( $_COOKIE[ self::$_vary_name ] ) ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn $_COOKIE[ self::$_vary_name ];\n\t}\n\n\t/**\n\t * Detect if is a guest visitor or not\n\t *\n\t * @since  4.0\n\t */\n\tpublic function always_guest() {\n\t\tif ( empty( $_SERVER['HTTP_USER_AGENT'] ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( $this->_conf[ self::O_GUEST_UAS ] ) {\n\t\t\t$quoted_uas = array();\n\t\t\tforeach ( $this->_conf[ self::O_GUEST_UAS ] as $v ) {\n\t\t\t\t$quoted_uas[] = preg_quote( $v, '#' );\n\t\t\t}\n\t\t\t$match = preg_match( '#' . implode( '|', $quoted_uas ) . '#i', $_SERVER['HTTP_USER_AGENT'] );\n\t\t\tif ( $match ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tif ( $this->ip_access( $this->_conf[ self::O_GUEST_IPS ] ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Check if the ip is in the range\n\t *\n\t * @since 1.1.0\n\t * @access public\n\t */\n\tpublic function ip_access( $ip_list ) {\n\t\tif ( ! $ip_list ) {\n\t\t\treturn false;\n\t\t}\n\t\tif ( ! isset( self::$_ip ) ) {\n\t\t\tself::$_ip = self::get_ip();\n\t\t}\n\t\t// $uip = explode('.', $_ip);\n\t\t// if(empty($uip) || count($uip) != 4) Return false;\n\t\t// foreach($ip_list as $key => $ip) $ip_list[$key] = explode('.', trim($ip));\n\t\t// foreach($ip_list as $key => $ip) {\n\t\t// if(count($ip) != 4) continue;\n\t\t// for($i = 0; $i <= 3; $i++) if($ip[$i] == '*') $ip_list[$key][$i] = $uip[$i];\n\t\t// }\n\t\treturn in_array( self::$_ip, $ip_list );\n\t}\n\n\t/**\n\t * Get client ip\n\t *\n\t * @since 1.1.0\n\t * @since  1.6.5 changed to public\n\t * @access public\n\t * @return string\n\t */\n\tpublic static function get_ip() {\n\t\t$_ip = '';\n\t\tif ( function_exists( 'apache_request_headers' ) ) {\n\t\t\t$apache_headers = apache_request_headers();\n\t\t\t$_ip            = ! empty( $apache_headers['True-Client-IP'] ) ? $apache_headers['True-Client-IP'] : false;\n\t\t\tif ( ! $_ip ) {\n\t\t\t\t$_ip = ! empty( $apache_headers['X-Forwarded-For'] ) ? $apache_headers['X-Forwarded-For'] : false;\n\t\t\t\t$_ip = explode( ',', $_ip );\n\t\t\t\t$_ip = $_ip[0];\n\t\t\t}\n\t\t}\n\n\t\tif ( ! $_ip ) {\n\t\t\t$_ip = ! empty( $_SERVER['REMOTE_ADDR'] ) ? $_SERVER['REMOTE_ADDR'] : false;\n\t\t}\n\t\treturn $_ip;\n\t}\n}\n"},{"base":"plugins","rel":"litespeed-cache/autoload.php","ext":"php","size":3496,"mtime":1757312769,"type":"text","content":"<?php\n/**\n * Auto registration for LiteSpeed classes\n *\n * @package LiteSpeed\n * @since       1.1.0\n */\n\ndefined('WPINC') || exit();\n\n// Force define for object cache usage before plugin init\n!defined('LSCWP_DIR') && define('LSCWP_DIR', __DIR__ . '/'); // Full absolute path '/var/www/html/***/wp-content/plugins/litespeed-cache/' or MU\n\n// Load all classes instead of autoload for direct conf update purpose when upgrade to new version.\n// NOTE: These files need to load exactly in order\n$litespeed_php_files = array(\n\t// core file priority\n\t'src/root.cls.php',\n\t'src/base.cls.php',\n\n\t// main src files\n\t'src/activation.cls.php',\n\t'src/admin-display.cls.php',\n\t'src/admin-settings.cls.php',\n\t'src/admin.cls.php',\n\t'src/api.cls.php',\n\t'src/avatar.cls.php',\n\t'src/cdn.cls.php',\n\t'src/cloud.cls.php',\n\t'src/conf.cls.php',\n\t'src/control.cls.php',\n\t'src/core.cls.php',\n\t'src/crawler-map.cls.php',\n\t'src/crawler.cls.php',\n\t'src/css.cls.php',\n\t'src/data.cls.php',\n\t'src/db-optm.cls.php',\n\t'src/debug2.cls.php',\n\t'src/doc.cls.php',\n\t'src/error.cls.php',\n\t'src/esi.cls.php',\n\t'src/file.cls.php',\n\t'src/gui.cls.php',\n\t'src/health.cls.php',\n\t'src/htaccess.cls.php',\n\t'src/img-optm.cls.php',\n\t'src/import.cls.php',\n\t'src/import.preset.cls.php',\n\t'src/lang.cls.php',\n\t'src/localization.cls.php',\n\t'src/media.cls.php',\n\t'src/metabox.cls.php',\n\t'src/object-cache.cls.php',\n\t'src/optimize.cls.php',\n\t'src/optimizer.cls.php',\n\t'src/placeholder.cls.php',\n\t'src/purge.cls.php',\n\t'src/report.cls.php',\n\t'src/rest.cls.php',\n\t'src/router.cls.php',\n\t'src/str.cls.php',\n\t'src/tag.cls.php',\n\t'src/task.cls.php',\n\t'src/tool.cls.php',\n\t'src/ucss.cls.php',\n\t'src/utility.cls.php',\n\t'src/vary.cls.php',\n\t'src/vpi.cls.php',\n\n\t// Extra CDN cls files\n\t'src/cdn/cloudflare.cls.php',\n\t'src/cdn/quic.cls.php',\n\n\t// CLI classes\n\t'cli/crawler.cls.php',\n\t'cli/debug.cls.php',\n\t'cli/image.cls.php',\n\t'cli/online.cls.php',\n\t'cli/option.cls.php',\n\t'cli/presets.cls.php',\n\t'cli/purge.cls.php',\n\t'cli/database.cls.php',\n\n\t// 3rd party libraries\n\t'lib/css_js_min/pathconverter/converter.cls.php',\n\t'lib/css_js_min/minify/exception.cls.php',\n\t'lib/css_js_min/minify/minify.cls.php',\n\t'lib/css_js_min/minify/css.cls.php',\n\t'lib/css_js_min/minify/js.cls.php',\n\t'lib/urirewriter.cls.php',\n\t'lib/guest.cls.php',\n\t'lib/html-min.cls.php',\n\t// phpcs:disable\n\t// 'lib/object-cache.php',\n\t// 'lib/php-compatibility.func.php',\n\n\t// upgrade purpose delay loaded funcs\n\t// 'src/data.upgrade.func.php',\n\t// phpcs:enable\n);\nforeach ($litespeed_php_files as $class) {\n\t$file = LSCWP_DIR . $class;\n\trequire_once $file;\n}\n\nif (!function_exists('litespeed_autoload')) {\n\t/**\n\t * Autoload function for LiteSpeed classes\n\t *\n\t * @since 1.1.0\n\t * @param string $cls The class name to autoload.\n\t */\n\tfunction litespeed_autoload( $cls ) {\n\t\tif (strpos($cls, '.') !== false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (strpos($cls, 'LiteSpeed') !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t$file = explode('\\\\', $cls);\n\t\tarray_shift($file);\n\t\t$file = implode('/', $file);\n\t\t$file = str_replace('_', '-', strtolower($file));\n\n\t\t// phpcs:disable\n\t\t// if (strpos($file, 'lib/') === 0 || strpos($file, 'cli/') === 0 || strpos($file, 'thirdparty/') === 0) {\n\t\t// $file = LSCWP_DIR . $file . '.cls.php';\n\t\t// } else {\n\t\t// $file = LSCWP_DIR . 'src/' . $file . '.cls.php';\n\t\t// }\n\t\t// phpcs:enable\n\n\t\tif (strpos($file, 'thirdparty/') !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t$file = LSCWP_DIR . $file . '.cls.php';\n\n\t\tif (file_exists($file)) {\n\t\t\trequire_once $file;\n\t\t}\n\t}\n}\n\nspl_autoload_register('litespeed_autoload');\n"},{"base":"plugins","rel":"litespeed-cache/changelog.txt","ext":"txt","size":133809,"mtime":1757312769,"type":"text","content":"\n= 5.6 - Aug 1 2023 =\n* 🌱**Page Optimize** New JS Delay Includes option. (Mitchell Krog/Gerard Reches/Ignacy Hołoga)\n* **Crawler** Sitemap can use search for URL now.\n* **GUI** Restrict the scope of balloon CSS rules to avoid conflicts. (#567)\n* **Object Cache** Detect Memcached in more situations. (#568)\n* **API** Support `litespeed_purged_front` hook. (Umberto Fiorelli)\n\n= 5.5.1 - Jul 19 2023 =\n* 🐞**Image Optimization** Fixed a bug where WebP replacements couldn't be pulled without optimizing the original images.\n* 🐞**Image Optimization** Invalid images will now be removed when sending requests to the server. (#138993)\n* **Cloud** Added support for error codes `unpulled_images` and `blocklisted`. (Tynan)\n\n= 5.5 - Jun 20 2023 =\n* 🌱**Crawler** Can now use multiple sitemaps. (Tobolo/Tim Nolte)\n* 🌱**Crawler** Now runs asynchronously when manually invoked.\n* 🌱**Crawler** Now runs asynchronously when invoked from cron.\n* 🐞**Crawler** Fixed the realtime status bug when crawling.\n* **Crawler** Summary page now displays server load. (Ruikai)\n* 🐞**Page Optimize** Fixed an issue where UCSS could not be generated for error pages. (james58899) #556\n* 🌱**Image Optimize** Now pulls images asynchronously.\n* **Image Optimize** Now prevents concurrent requests via a locking mechanism.\n* **Image Optimize** The process can now bypass invalid image records and continue.\n* 🐞**Image Optimize** Fixed an issue where images ready for optimization might have to wait for new images to be added before sending the request.\n* **Cloud** Replaced dashboard links with login/link to my.quic.cloud actions.\n* **GUI** Added indicators to show when certain options are passively enabled by Guest Mode.\n* **Htaccess** Added a noabort rule to support asynchronous crawling.\n* **Htaccess** The \"Do Not Cache User Agents\" option is now case-insensitive. (Ellen Dabo)\n* **General** The \"Server IP\" option now allows IPv4 format only. (Ruikai)\n* **Misc** Every page's closing HTML comments now displays UCSS/CCSS status.\n* **Object** Fixed a warning for null get_post_type_object.\n* **Object** Object_Cache::delete now always returns a boolean value.\n* **Cache** Fixed advanced-cache.php file warnings for WordPress versions less than 5.3.\n* **Debug** Added debug logging to record the plugin's total processing time.\n* **API** HTML minification can now be bypassed via the litespeed_html_min filter.\n\n= 5.4 - Apr 19 2023 =\n* **Image Optimize** Refactored DB storage for this feature.\n* **Image Optimize** Reduced DB table size.\n* **Image Optimize** Existing `img_optm` DB tables will have their data gradually transitioned to the new storage format with this update. Once an `img_optm` table is empty, it won't be used anymore.\n* **Page Optimize** Enabled WebP support for Googlebot User Agent.\n\n= 5.3.3 - Feb 22 2023 =\n* **Page Optimize** Excluded Jetpack stats JS.\n* **DB Optimize** Fixed DB Optm SQL for revision postmeta.\n* **Cache** Fixed an undefined array key warning.\n* **Purge** Prevented undefined array key warning when widgets are disabled.\n* **Object** Fixed dynamic property deprecation warnings.\n* **Admin** Safely redirect to homepage if referer is unknown.\n* **Activation** Check that item slug exists first.\n* **Cache** Prevented cache header to send globally if header part already closed.\n* **CSS** Improved string handling for CSS minifier.\n* **Debug** Fixed undefined array key warnings.\n* **Misc** Fixed implicit conversion in random string generation function `Str::rrand`.\n\n= 5.3.2 - Jan 10 2023 =\n* **Object** Fixed object cache lib incr, decr functions (thanks bdrbros/DANIEL) #516\n* **Database Optimize** Database optimizer now handles postmeta when cleaning revisions #515\n* **Cache** Made nocache the default for 4xx/5xx response codes.\n* **Cache** Default cache TTL settings removed for 403 response code, changed to 10 mins for 500 response code.\n* **GUI** Added a description for the redetect nodes function.\n* **GUI** Added a description for the refresh button sync function.\n\n= 5.3.1 - Dec 12 2022 =\n* **CLI** Presets feature is now usable from the CLI. (xLukii)\n* **CLI** Added 'import_remote' for litespeed-option to enable importing options from URLs. (xLukii)\n* **Cache** Added LiteSpeed headers to site health check for full page cache.\n* **Crawler* Fixed unauthorized crawler toggle operation. (#CVE-2022-46800)\n* **UCSS** Fixed a bug where items weren't added back to the UCSS queue after purging.\n* **Page Optimize** Fixed a bug where generated CSS would return 404 after upgrading via CLI.\n* **3rd** Fixed a bug where a WooCommerce session doesn't exist when checking cart, notices (Jason Levy/Gilles)\n* **GUI** Made LiteSpeed admin notice icon grayscale to avoid distraction. (martinsauter)\n* **GUI** Fixed RTL style for notification icon.\n* **API** Added a new hook `litespeed_optm_uri_exc` to exclude URI from page optimization.\n* **API** Excluded `.well-known` path from page optimization.\n\n= 5.3 - Oct 31 2022 =\n* 🌱**Presets** New `Presets` feature and menu item.\n* 🌱**UCSS** New option `UCSS File Excludes and Inline` to increase page score. (Ankit)\n* **UCSS** When UCSS is purged, automatically append URL to UCSS generation queue. (Ankit)\n* **Page Optimize** Removed a redundant `defer` attribute from Lazy Load image library usage. (#928019)\n* **Image Optimize** Dropped `Create WebP Versions` setting. Will automatically enable when `Image WebP Replacement` is activated.\n* **Cloud** Fixed a bug where internal updates were delayed for API keys.\n* **Cloud** Improved auto alias feature by waiting for second request from alias domain validation before removing a pending alias.\n* **Purge** Automatically Purge All when plugin auto update is done.\n* **Purge** Fixed a potential PHP8 error that occurred when removing unused widgets. (acsnaterse)\n* **Cache** Fixed an infinite 301 redirection caused by UTM-encoded link.\n* **CLI** Added syntax examples for values that include line breaks (xLukii)\n* **CLI** Purge requests will now be included with the original request to avoid potential CSS/JS 404 issues.\n* **ESI** Check all user roles for cache vary and page optimization excludes.\n* **GUI** Added a LiteSpeed icon to admin message banners to indicate the banners are from our plugin. (Michael D)\n* **Crawler** Fixed a cache-miss issue that occurred when Guest Mode was ON and WebP Replacement was OFF.\n* **3rd** Remove WooCommerce private cache.\n* **3rd** Removed LiteSpeed metabox from ACF field group edit page. (keepmovingdk)\n\n= 5.2.1 - Sep 7 2022 =\n* 🐞**Core** Fixed a fatal error that occurred when uninstalling. (#894556 Hostinger)\n* **Dash** Show partner info on the dashboard for partner-tier QC accounts.\n* **UCSS** Auto-purge UCSS on post update. (Ankit)\n* 🕸️**Crawler** Respect the `LITESPEED_CRAWLER_DISABLE_BLOCKLIST` constant for unexpected results too. (Abe)\n\n= 5.2 - Aug 17 2022 =\n* 🌱**UCSS** Added UCSS message queue to improve service quality and reliability\n* 🐞**VPI** Fixed conflict w/ image lazyload; used HTML before image lazyload to avoid invalid `data:base64` results.\n* **VPI** Changed VPI Cron default setting to OFF.\n* **VPI** Automatically resend requests when VPI result contains invalid `data:` image value.\n* **Conf** Fixed an issue with URI Excludes, where paths using both ^ and $ were not correctly excluded (Eric/Abe)\n* **Conf** Auto corrected `WP_CONTENT_URL` protocol if it was explicitly set to `http://`.\n* **Cloud** No longer sync the configuration to QUIC.cloud if configuration is unchanged.\n* **Cloud** Appended home_url value into synced configuration data for wp-content folder path correction.\n* 🕸️**Crawler** Improved compatibility with server `open_basedir` PHP setting limit when detecting load before crawling. (Tom Robak/mmieszalski)\n\n= 5.1 - Aug 1 2022 =\n* 🌱**Toolbox** Debug log can now show Purge/Crawler logs as well. (Tynan)\n* **UCSS** Prepared for future message queue.\n* **UCSS** Moved UCSS class to its own file.\n* **3rd** Added 3rd-party support for WC PDF Product Vouchers. (Tynan)\n* **Core** Fixed potential PHP warning when saving summary data. (Sarah Richardson)\n* **Purge** Purge can now clear the summary correctly. (Kevin)\n* **VPI** Added `queue_k` to API notification.\n\n= 5.0.1 - Jul 27 2022 =\n* 🐞**Cloud** Fixed a potential PHP error that could occur with the cloud service summary. (Bruno Cantuaria)\n* **3rd** Added Autoptimize back to compatibility list.\n\n= 5.0.0.1 - Jul 26 2022 =\n* 🔥🐞**Cloud** Fixed an issue with the cloud request timestamp update which causes a usage sync failure. (great thanks to Kevin)\n\n= 5.0 - Jul 25 2022 =\n* 🌱**VPI** Added Viewport Images feature to LiteSpeed Options metabox on Post Edit page.\n* 🌱**CDN** Added Auto CDN Setup feature for simple QUIC.cloud CDN setup. (Kevin)\n* 🌱**Page Optimize** Automatically cache remote CSS/JS files when fetching for optimization (Lauren)\n* 🌱**Cache** Added LiteSpeed Options for page-level cache control on Post Edit page. (denisgomesfranco)\n* 🌱**Cloud** Auto Alias feature.\n* 🌱**Debug** Added `Debug String Excludes` option. (Hanna)\n* 🌱**UCSS** Added `Purge this page - UCSS` option to Admin Bar dropdown menu. (Ankit)\n* 🌱**Guest** Added `litespeed_guest_off=1` URL query string parameter to bypass Guest Mode. (cbdfactum)\n* 🐞**Page Optimize** Fixed an issue where CSS anchors could be wrongly converted to a full path when minifying. (Tynan)\n* **Page Optimize** Bypass CCSS/UCSS generation when a self-crawled CSS resource returns a 404 code. (Abe)\n* **Object** Allow `LSCWP_OBJECT_CACHE` predefined to turn off Object Cache. (knutsp)\n* **Data** Fixed an issue where empty version tags in the database repeatedly toggled the upgrade banner and reset settings to default.\n* **Purge** Fixed an issue where the site's index page could be purged upon deletion of an unviewable post. (Kevin)\n* **Toolbox** Added `View site before optimization` button under `Debug` tab. (Ryan D)\n* **Admin** Switch to using the `DONOTCACHEPAGE` constant to indicated WP-Admin pages are not cacheable.\n* **Admin** Moved no-cache header to very beginning to avoid caching unexpected exits.\n* **Cloud** Added message queue service for VPI. (Abe)\n* **Cloud** Bypassed 503 error nodes from node redetection process. (Abe)\n* **Cloud** Fixed a failure to detect `out_of_quota`. (Lauren)\n* **Cloud** Added ability to display dismissable banners generated by QUIC.cloud.\n* 🕸️**Crawler** Added realtime load detection before crawl.\n* 🕸️**Crawler** Adjusted crawler behavior for Divi pages to allow for Divi's CCSS generation process. (miketemby)\n* 🕸️**API** PHP constant `LITESPEED_CRAWLER_DISABLE_BLOCKLIST` and filter `litespeed_crawler_disable_blocklist` to disable blocklist. (Tobolo)\n* **CDN** Automatically add a trailing slash to `CDN URL` and `Original URLs` if user didn't provide one. (Lucas)\n* **Cache** When a URL redirects to a URL with a query string, consider these as different for caching purposes. (Shivam)\n* **Media** Added ability to disable lazyload from the LiteSpeed Options metabox on Post Edit page.\n* **Media** Added new default values to `WebP Attribute to Replace` setting for WPBakery and Slider Revolution. (JibsouX)\n* **Image Optimize** Dropped redundant `Page Speed` user agent when serving WebP images. (serpentdriver)\n* **GUI** Fixed an issue where manually dismissable admin messages were instead being treated as one-time messages. (Tynan Beatty)\n* **GUI** Fixed an issue where subsequent admin alerts would overwrite existing alerts in the queue. (Kevin/Tynan)\n* **GUI** Updated time offset in log. (Ruikai #PR444 #PR445)\n* **GUI** Added `litespeed_media_ignore_remote_missing_sizes` API description.\n* **CCSS** Fixed an issue where CCSS was unexpectedly bypassed if `CSS Combine` was OFF and `UCSS Inline` was ON. (Ruikai)\n* **Debug** Added response headers to debug log. (Kevin)\n\n= 4.6 - Mar 29 2022 =\n* **Page Optimize** Improved compatibility for JS Delay.\n* 🐞**Page Optimize** Fixed an issue for network subsites that occurred when only CSS/JS Minify are enabled.\n* **Localization** Added query string compatibility for Resource URLs.\n* **Vary** Fixed a potential PHP warning when server variable `REQUEST_METHOD` is not detected.\n* **Cache** Guest Mode now respects Cache Excludes settings.\n* **GUI** Added warning notice when enabling `Localize Resources` feature; each localized JS resource requires thorough testing!\n* **GUI** Fixed a PHP Deprecated warning that occurred with the Mobile Cache User Agent setting on PHP v8.1+. (jrmora)\n* **Conf** Removed Google related scripts from default `Localization Files` value.\n* **Media** WordPress core Lazy Load feature is now automatically disabled when LiteSpeed Lazy Load Images option is enabled. (VR51 #Issue440)\n* 🐞**API** Filter `litespeed_ucss_per_pagetype` for UCSS now also applies to CSS Combine to avoid UCSS failure. (Ankit)\n* **API** Added a filter `litespeed_media_ignore_remote_missing_sizes` to disable auto detection for remote images that are missing dimensions. (Lucas)\n\n= 4.5.0.1 - Feb 24 2022 =\n* 🔥🐞**Media** Fixed an issue where lazy-loaded images would disappear when using custom CSS image loading effects.\n\n= 4.5 - Feb 23 2022 =\n* 🌱**Page Optimize** Localization is back.\n* **Guest** Fixed organic traffic issue as different browsers may fail to set `document.referrer`.\n* **Image Optimize** Improved wp_postmeta table compatibility when gathering images. (Thanks to Thomas Stroemme)\n* 🐞**Page Optimize** Fixed a potential CSS/JS 404 issue for existing records that have been marked as expired.\n* **ESI** `LITESPEED_ESI_OFF` now affects `litespeed_esi_url` API filter too.\n* **Guest** Added a check to determine if Guest Mode is blocked by a third-party, and display warning if it is (Ruikai)\n* **Guest** To support WP sites with multiple domains, Guest Mode detection URL no longer uses domain.\n* **Report** Network now shows Toolbox page when having a large number of subsites.\n* **DB Optimize** Reduced default subsites count from 10 to 3 under Network Admin -> DB Optimize page to avoid timeout.\n* **Cloud** Fixed potential `lack_of_token` error when requesting domain key for cases where local summary value was not historically included in the array.\n* **Cloud** Fixed a PHP fatal error that occurred when encountering a frequency issue under CLI. (Dean Taylor #Issue410)\n* **Avatar** Force gravatar cache refresh in browsers and on CDN (rafaucau #PR430)\n* **API** New filter `litespeed_purge_ucss` to purge a single page UCSS. (#376681)\n* **API** New filter `litespeed_ucss_per_pagetype` for UCSS per page type generation. (Ankit)\n* **GUI** Replaced some GUI text and settings with more inclusive language  (kebbet #PR437 #PR435)\n* **3rd** Excluded `WP Statistics` from inline JS optimize. (Ryan D)\n* **3rd** Added API filter `litespeed_3rd_aelia_cookies` for Aelia CurrencySwitcher.\n* **Media** Updated image lazyload library to 17.5.0.\n\n= 4.4.7 - Jan 11 2022 =\n* **Page Optimize** Dropped `Inline Lazy Load Images Library` option. Now will always inline lazyload library. (Ankit)\n* **3rd** Prevented JavaScript files from being appended to Rank Math SEO sitemap.\n* **Purge** Dropped default stale purge when purging a post.\n* **Cloud** Dropped unused API calls.\n* **Cloud** Dropped redundant IP validation in API calls.\n\n= 4.4.6 - Dec 27 2022 =\n* **Guest** Restored `document.referrer` for organic traffic purposes when Guest Mode is enabled. (michelefns)\n* **Image Optimize** Fixed a potential PHP notice when uploading images in WP w/ PHP7.4+. (titsmaker)\n* **ESI** Fixed an issue where ESI settings were not updated on customized widgets(#422 Abe)\n* **3rd** Reverted ESI Adminbar change on Elementor front pages for backward compatibility (#423 Abe)\n* **3rd** Fixed an issue where disabling ESI potential caused a PHP warning when using `Perfmatters`. (Jeffrey Zhang)\n* **Misc** Check whether HTTP_REFERER is set or not before using it in Router class. (#425 Abe)\n\n= 4.4.5 - Dec 1 2021 =\n* **Data** Fixed potential PHP notice when generating CSS/JS optimized files w/ PHP v7.4+. (Sarah Richardson/silencedgd/slr1979)\n* **API** Added `LITESPEED_ESI_OFF` constant to disable ESI, when defined before the WP `init` hook.\n* **API** Added `LSCWP_DEBUG_PATH` constant to specify debug log path. (khanh-nt)\n* 🐞**GUI** Fixed an issue where admin messages were not displayed. (Daniel McD)\n* **CDN** Used WP remote function to communicate w/ Cloudflare per WP guidance.\n* **3rd** Added compatibility for Perfmatters plugin's script manager (#417 Abe)\n* **3rd** Added compatibility for Elementor's Editor button when ESI is on (#418 Abe)\n\n= 4.4.4 - Nov 23 2021 =\n* **Page Optimize** Delay deletion of outdated CSS/JS files for a default of 20 days to avoid 404 errors with cached search engine copies.\n* **Cache** When caching, no longer send a purge request for CSS/JS removal to avoid cache engine conflicts.\n* 🐞**Core** Optimized SQL queries while autoloading if expected options are missing; reduced by 7 and 3 queries on backend and frontend respectively. (#396425 Jackson)\n* **Page Optimize** Fixed a 404 issue that occurred when upgrading the plugin manually, with a package upload or through the plugin manager. (Tobolo/Małgorzata/Abe)\n* **API** Added `litespeed_ccss_url` and `litespeed_ucss_url` API to manipulate the request URL for CCSS and UCSS.\n* **REST** Fixed a potential warning when detecting cacheable status on REST call. (rafaucau)\n* **OLS** Fixed an issue where the `COOKIEHASH` constant was undefined when used with OpenLiteSpeed as an MU plugin or with network activation.\n* **3rd** Sanitized POST data for nextgengallery.\n* **Cloud** Sanitized GET data when linking to QUIC.cloud. (#591762 WPScan)\n\n= 4.4.3 - Oct 13 2021 =\n* 🐞**Media** Fixed an issue where WebP is served erroneously under Guest Mode on older versions of Safari. (hash73)\n* 🐞**Media** Reverted regex change to fix `Lazy Load Image Parent Class Name Excludes` failure. (thpstock)\n* **Purge** Disabled `Purge Delay` in the optimization process by default.\n* **Conf** Dropped `.htaccess Path Settings` options for security concern. (WP)\n* **Conf** Dropped `CSS HTTP/2 Push`/`JS HTTP/2 Push` options. (Kevin)\n* **Conf** Set `Guest Optimization` default to OFF.\n* **Conf** Set `CCSS Per URL` default to OFF to avoid consuming more quota than intended after upgrade to v4. (n111)\n* **Object** Fixed an issue with Object Cache warnings during upgrade, when Guest Mode is enabled.\n* ☁️**Cloud** Fixed an issue with PHP notices when inquiring about quota usage for a service not currently in use.\n* **GUI** Added GO detail warning. (n111)\n* **GUI** Moved \"quota will be still in use\" warning from Guest Mode to Guest Optimization section.\n* **API** Added `LITESPEED_CFG_HTACCESS` PHP Constant to specify .htaccess path.\n* **API** Added `litespeed_qs_forbidden` hook to bypass `?LSCWP_CTRL=` query string. (minhduc)\n* **API** Added `litespeed_delay_purge` hook to delay the following Purge header until the next request.\n* **API** Added `litespeed_wpconfig_readonly` hook to disable `WP_CACHE` constant update based on the wp-config.php file. (#633545)\n\n= 4.4.2 - Sep 23 2021 =\n* **Purge** In order to clear pages containing 404 CSS/JS, the purge header will always be sent even in cases where purge must be delayed.\n* 🐞**Purge** Fixed a potential PHP warning caused when generating different optimized filenames.\n* **Cron** Dropped unnecessary HTML response in cron which sometimes resulted in wp-cron report email. (Gilles)\n* **Page Optimize** Purge caused by CSS/JS file deletion will now be silent.\n* **Page Optimize** Fixed an issue where the homepage failed to purge when addressing the 404 CSS/JS issue.\n* **Avatar** Fixed potential localized Avatar folder creation warning. (mattk0220/josebab)\n* **API** Added filter `litespeed_optm_html_after_head` to move all optimized code(UCSS/CCSS/Combined CSS/Combined JS) to be right before the `</head>` tag. (ducpl/Kris Regmi)\n* **Debug** Under debug mode, cache/purge tags will be plaintext.\n\n= 4.4.1 - Sep 16 2021 =\n* 🐞**ESI** Fixed ESI failure on non-cached pages caused by `DONOTCACHEPAGE` constant.\n* 🐞**Page Optimize** Fixed an issue where the minified CSS/JS file failed to update when the file was changed. (ceap80)\n* 🐞**Page Optimize** Fixed an issue where the combined CSS/JS file randomly returned a 404 error when visiting the same URL with different query strings. (Abe)\n* **API** Added `litespeed_const_DONOTCACHEPAGE` hook to control the cache-or-not result of the `DONOTCACHEPAGE` constant.\n\n= 4.4 - Sep 8 2021 =\n* 🌱**Crawler** Added the ability to enable or disable specific crawlers. (⭐ Contributed by Astrid Wang #PR390)\n* 🌱**UCSS** Added `UCSS Inline` option. (Ankit).\n* 🌱**UCSS** Added `UCSS URI Excludes` option. (RC Verma).\n* 🐞**Page Optimize** Fixed an issue where combined CSS/JS files would potentially return 404 errors after a Purge All. (Special thanks to Abe & Ruikai)\n* **Page Optimize** Minimized the potential for 404 errors by query string when Purging All.\n* **Page Optimize** Dropped redundant query strings for minified CSS/JS files.\n* **Conf** Ugrade configuration safely to avoid the issue of new functions not being found in old codebase.\n* **Conf** Configuration upgrade process now adds a notification to admin pages and disables configuration save until upgrade is complete. (Lisa)\n* **JS** Fixed an issue where JS Defer caused a `litespeed_var_1_ is not defined` error when enabled w/ ESI options. (Tobolo)\n* 🐞**JS** Fixed an issue where `JS Delay` doesn't work for combined JS when `JS Combine` is enabled. (Special thanks to Joshua & Ankit)\n* **JS** `JS Delay` now will continue loading JS, even if there is an error in the current JS loading process.\n* 🐞**CCSS** If CCSS fails to generate, Load CSS Asynchronously will now be disabled. (Stars #54074166)\n* 🐞**UCSS** If UCSS generation fails the generated error will no longer be served inside the file. (Ryan D)\n* **Log** Updated the Debug log to use less code for prefix.\n* **3rd** Always respect `DONOTCACHEPAGE` constant definition to fix DIVI dynamic css calculation process.\n\n= 4.3 - Aug 16 2021 =\n* **UCSS** Separated UCSS Purge from CCSS Purge. (⭐ Contributed by Alice Tang #PR388)\n* 🐞**Cloud** Fixed an issue where CCSS/UCSS quota data failed to update locally.\n* **Cloud** Added server load as a factor when detecting node availability.\n* **Cloud** Improved the speed of checking daily quota and showing the related error message.\n* **Cloud** Added ability to re-detect node availability if the current node is responding w/ a heavy load code.\n* **Cloud** CCSS/UCSS/LQIP queue now exits immediately when quota is depleted.\n* **Cloud** Replaced separate `d/regionnodes` with a single `d/nodes` in the node list API for image optimization.\n* **LQIP** Fixed an issue with LQIP network compatibility. (⭐ Contributed by Alice Tang #PR387)\n* **GUEST** JS no longer preloads for Guest Optimization. (Ankit)\n* 🐞**Data** Fixed an issue where deleting the `cssjs` data folder causes a failure in the upgrade process. (Joshua #PR391)\n* **GUI** Fixed a potential dashboard PHP warning when no queue existed. (jrmora)\n* **GUI** Added daily quota on dashboard.\n* **GUI** Added downgrade warning to Toolbox -> Beta Test.\n* **GUI** Tuned `.litespeed-desc` class to full width in CSS.\n* **Conf** `Preserve EXIF/XMP data` now defaults to ON due to copyright concerns. (Tobolo)\n* 🐞**3rd** Fixed a PHP warning when using Google AMP w/ /amp as structure. (thanhstran98)\n\n= 4.2 - Jul 29 2021 =\n* **Cloud** Auto redirect to a new node if the current node is not available anymore.\n* **Cloud** Combined CCSS/UCSS to sub services of Page Optimization.\n* **Cloud** Added a daily quota rate limit to help mitigate the heavy service load at the beginning of the month.\n* **Cloud** Cached the node IP list in order to speed up security check. (Lucas)\n* 🐞**GUEST** Fixed an issue where Guest Mode remained enabled even when the UA setting is empty. (Stars)\n* **GUEST** Guest Mode will no longer cache POST requests.\n* **UCSS** Purging CSS/JS now purges the UCSS queue as well, to avoid failure when generating UCSS.\n* **UCSS** Separated service entry `UCSS` from `CCSS`.\n* **CCSS** Simplified `load_queue/save_queue/build_filepath_prefix` functions. (⭐ Contributed by Alice Tang #PR373)\n* **CCSS** If CCSS request fails, details are now saved in the CSS file.\n* **CCSS** Renamed CCSS ID in inline HTML from `litespeed-optm-css-rules` to `litespeed-ccss`. (Alice)\n* **Page Optimize** CCSS/UCSS now supports Cloud queue/notify for asynchronous generation.\n* **Page Optimize** Simplified CCSS/UCSS generation function.\n* **Page Optimize** Added the ability to cancel CCSS/UCSS Cloud requests.\n* **Page Optimize** Unnecessary quesry strings will now be dropped from CSS/JS combined files.\n* **Crawler** Reset position now resets crawler running status too.\n* **REST** Cloud request to REST will now detect whether an IP in in the Cloud IP list for security reasons.\n* **Object** Enhanced Object Cache compatibility for `CONF_FILE` constant detection.\n* **API** Added shorter alias `litespeed_tag` and other similar aliases for Cache Tag API.\n* **API** Renamed `LITESPEED_BYPASS_OPTM` to `LITESPEED_NO_OPTM` for Page Optimization.\n* **Toolbox** Dropped v3.6.4- versions in Beta Test as they will cause a fatal error in downgrade.\n* **GUI** Added shortcut links to each section on the Dashboard.\n* **GUI** Added UCSS whitelist usage description. (wyb)\n* **GUI** Showed the default recommended values for Guest Mode UA/IPs.\n* **3rd** Fixed AMP plugin compatibility. (⭐ Contributed by Alice Tang #PR368)\n* **3rd** Bypassed all page optimization including CDN/WebP for AMP pages.\n* **3rd** Improved compatibility with All in One SEO plugin sitemap. (arnaudbroes/flschaves #Issue372)\n* **3rd** Added wsform nonce. (#365 cstrouse)\n* **3rd** Added Easy Digital Download (EDD) & WP Menu Cart nonce. (#PR366 AkramiPro)\n* **3rd** Improved compatibility w/ Restrict Content Pro. (Abe #PR370)\n* **3rd** Improved compatibility w/ Gravity Forms. (Ruikai #371)\n\n= 4.1 - Jun 25 2021 =\n* 🌱**UCSS/CCSS/LQIP** Moved queue storage to file system from database wp-options table to lessen the IO load. (#633504)\n* 🌱**3rd** Added an option to disable ESI for the WooCommerce Cart. (#358 Anna Feng/Astrid Wang)\n* **ESI** Fixed an ESI nonce issue introduced in v4.0. (Andrew Choi)\n* **Object** Used new `.litespeed_conf.dat` instead of `.object-cache.ini` for object cache configuration storage.\n* **Conf** Now updating related files after plugin upgrade and not just after activation.\n* 🌱**Guest** Added a Guest Mode JS Excludes option. (Ankit/Mamac/Rcverma)\n* **Guest** Guest Mode now uses a lightweight script to update guest vary for reduced server load.\n* **Guest** Guest Mode now adds missing image dimensions.\n* **Guest** Guest vary will no longer update if there's already a vary in place to address the infinite loop caused by CloudFlare's incorrect cache control setting for PHP.\n* **Guest** Guest vary update request will no longer be sent if `lscache_vary` is already set.\n* **Guest** Added a Configurable Guest Mode UA/IP under the Tuning tab in the General menu.\n* **Guest** Guest Mode now allows cron to be hooked, even when UCSS/CCSS options are off. (#338437 Stars)\n* **Guest** Simplified the vary generation process under Guest Mode.\n* **Guest** Added a Guest Mode HTML comment for easier debugging. (Ruikai)\n* **Guest** Guest vary update ajax now bypasses potential POST cache.\n* **CCSS** Added back the options `Separate CCSS Cache Post Types` and `Separate CCSS Cache URIs`. (Joshua/Ankit)\n* **CCSS** CCSS/UCSS queue is now limited to a maximum of 500 entries.\n* **Control** The cache control constant `LSCACHE_NO_CACHE` will now have a higher priority than the Forced Public Cache setting.\n* **Crawler** The Crawler can now crawl Guest Mode pages.\n* **Crawler** Fixed a potential XSS vulnerability in the Crawler settings. (#927355)\n* **Crawler** The Crawler now supports a cookie value of `_null`. (Tobolo)\n* **Media** Updated the default value for the Responsive Placeholder SVG to be transparent.\n* **Media** WebP images in the background may now be served in Guest Mode.\n* **Media** WebP images in CSS may now be bypassed if the requesting Guest Mode client doesn't support WebP.\n* **Media** Fixed empty default image placeholder under Guest Mode.\n* 🐞**Image Optimize** Changed the missing `$_POST` to `$post_data` so the database status is properly updated. (#345 Lucas)\n* **Import** Export file is now readable to allow importing of partial configurations. (Ryan D/Joshua)\n* **Page Optimize** Fixed W3 validator errors in Guest Mode. (#61393817)\n* **3rd** A fatal WooCommerce error is no longer triggered by a custom theme reusing a previous LSCWP cache detection tag.\n* **3rd** AMP may now bypass Guest Mode automatically.\n* **Localize** Dropped the `Localize Resources` option as Guest Mode is a sufficient replacement. (Note: Due to user feedback during the development period, we have decided to reinstate this option in a future version.)\n* **Cloud** Changed the WP API url.\n* **Lang** Corrected a missing language folder.\n* **GUI** Added a CCSS/UCSS loading page visualization. (⭐ Contributed by Astrid Wang & Anna Feng #PR360)\n* **GUI** Added a warning to indicate when Guest Mode CCSS/UCSS quota is in use. (Contributed by Astrid Wang & Anna Feng #PR361)\n* **GUI** Added a `litespeed-info` text color. (Astrid Wang)\n* **GUI** Implemented various UI/UX improvements. (Joshua/Lisa)\n* **GUI** Duplicate cloud service messages with the same content will only display once now. (Marc Dahl)\n* **GUI** Added a WebP replacement warning for Guest Mode Optimization if WebP replacement is off.\n* **Misc** Dropped `wp_assets` from distribution to reduce the package size. (lowwebtech)\n* **Misc** Increased the new version and score detection intervals.\n* **Misc** Optimized WP Assets images. (#352 lowwebtech)\n* **Debug** Dropped the redundant error_log debug info.\n\n= 4.0 - Apr 30 2021 =\n* 🌱🌱🌱**Guest** Introduced `Guest Mode` for instantly cacheable content on the first visit.\n* 🌱**UCSS** Added a new service: `Unique CSS`, to drop unused CSS from elements from combined CSS\n* 🌱**CCSS** Added `HTML Lazyload` option. (Ankit)\n* 🌱**CCSS** Added `CCSS Per URL` option to allow Critical CSS to be generated for each page instead of for each Post Type.\n* 🌱**Media** Added `Add Missing Sizes` setting for improving Cumulative Layout Shift. (Fahim)\n* 🌱**JS** Switched to new JS minification library for better compression and compatibility w/ template literals. (LuminSol)\n* **Media** WebP may now be replaced in CSS.\n* **Media** Can now drop image tags in noscript to avoid lazyload. (Abe #314 /mattthomas-photography)\n* **Media** Bypass optimization if a page is not cacheable.\n* **Image Optimize** Auto hook to `wp_update_attachment_metadata` to automate image gathering process, and to handle the new thumbnail generation after images are uploaded. (smerriman).\n* **Image Optimize** Repeated image thumbnails won't be gathered anymore.\n* **Image Optimize** Simplified the rescan/gather/upload_hook for existing image detection.\n* **Image Optimize** Fixed the duplicated optimize size records in the postmeta table. (Abe #315)\n* **Image Optimize** Allow either JSON POST request or normal form request in `notify_img`. (Lucas #313)\n* **Image Optimize** Optimized SQL query for better efficiency. (lucas/Lauren)\n* **Image Optimize** Fixed issue where rescan mass created duplicate images. (#954399)\n* **Image Optimize** Image optimization pie will not show 100% anymore if there is still a small amount in the unfinished queue.\n* **Image Optimize** WebP generation defaults to ON for Guest Mode.\n* **Image Optimize** `Priority Line` package now can have smaller request interval.\n* **ESI** Disable ESI when page is not cacheable. (titsmaker)\n* **ESI** Fixed an issue where Divi was disabling all in edit mode, but couldn't disable ESI. (Abe)\n* **ESI** ESI init moved under `init` hook from `plugin_loaded` hook.\n* **CDN** Add basic support for CloudFlare API Tokens (Abe #320)\n* **CSS** Simplified `Font Display Optimization` option.\n* **CSS** Fixed manual cron timeout issue. (jesse Distad)\n* **CSS** Inline CSS may now use `data-no-optimize` to be excluded from optimization. (popaionut)\n* **JS** Combined `Load JS Defer` and `Load Inline JS Defer` options.\n* **JS** Forced async to defer.\n* **JS** Moved Google Analytics JS from constant default to setting default for removal.\n* **JS** Fixed potential JS parsing issue caused by JS src being changed to data-src by other plugins. (ankit)\n* **JS** Excluded spotlight from JS optimize. (tobolo)\n* **CCSS** Fixed CCSS/UCSS manual cron timeout issue.\n* **CCSS** Only 10 items will be kept for CCSS history.\n* **CCSS** The appearance of CCSS Purge in the topbar menu will be determined by the existence of CCSS cache, and not the setting only.\n* **CCSS** To avoid stuck queues when the current request keeps failing, the CCSS queue will always drop once requested.\n* **CCSS** CCSS will no longer hide adminbar.\n* **CCSS** CCSS may now be separate for network subsites. (Joshua)\n* **CCSS** Gave CCSS a unique filename per URL per user role per subsite.\n* **CCSS** Dropped `Separate CCSS Cache Post Types` option.\n* **CCSS** Dropped `Separate CCSS Cache URIs` option.\n* **CCSS** Subsites purge Avatar/CSS/JS/CCSS will not affect the whole network anymore.\n* **CCSS** Implemented a better queue list for CCSS that auto collapses if there are more than 20 entries, and shows the total on top.\n* **CSSJS** Now using separate CSS and JS folders instead of `cssjs`.\n* **CSSJS** Automatically purge cache after CCSS is generated.\n* **Network** Dropped network CSS/JS rewrite rules.\n* **Cache** Send cache tag header whenever adding a tag to make it effective in the page optimization process.\n* **Core** Used hook for buffer optimization; Used `init()` instead of `constructor`.\n* **Object** Used `cls` instead of `get_instance` for init.\n* **Cloud** Replaced one-time message with a dismissible-only message when the domain key has been automatically cleared due to domain/key dismatch.\n* **API** Dropped function `hook_vary_add()`.\n* **API** Dropped function `vary_add()`.\n* **API** Dropped function `filter_vary_cookies()`.\n* **API** Dropped function `hook_vary()`.\n* **API** Dropped action `litespeed_vary_add`.\n* **API** Dropped filter `litespeed_api_vary`.\n* **API** Use `litespeed_vary_curr_cookies` and `litespeed_vary_cookies` for Vary cookie operations instead.\n* **API** Dropped action `litespeed_vary_append`.\n* **Vary** 3rd party vary cookies will not append into .htaccess anymore but only present in response vary header if in use.\n* **Vary** Dropped function `append()`.\n* **Vary** Commenter cookie is now considered cacheable.\n* **Crawler** Minor update to crawler user agent to accommodate mobile_detect.php (Abe #304)\n* **Data** Added a table truncate function.\n* **Data** Added new tables url & url_file.\n* **Data** Dropped cssjs table.\n* **Data** Options/Summary data is now stored in JSON format to speed up backend visit. (#233250)\n* **Data** Default `CSS Combine External and Inline` and `JS Combine External and Inline` to On for new installations for better compatibility.\n* **Purge** Fixed potential purge warning for certain themes.\n* **Purge** Purge will be stored for next valid visit to trigger if it is initially generated by CLI.\n* **Page Optimize** `CSS Combine`/`JS Combine` will now share the same file if the contents are the same. Limited disk usage for better file usage and fewer issues with random string problems.\n* **Page Optimize** Dropped option CSS/JS Cache TTL.\n* **Page Optimize** Bypass optimization if page not cacheable.\n* **Page Optimize** Purge CSS/JS will purge the `url_file` table too.\n* **Page Optimize** Optionally store a vary with a shorter value.\n* **Page Optimize** Removing query strings will no longer affect external assets. (ankit)\n* **Page Optimize** Better regex for optimization parsing.\n* **Page Optimize** Eliminated w3 validator for DNS prefetch and duplicated ID errors. (sumit Pandey)\n* **Page Optimize** New Optimization for Guest Only option under Tuning.\n* **Page Optimize** Now forbidding external link redirection for localization.\n* **Debug** Implemented a better debug format for the 2nd parameter in the log.\n* **GUI** Bypass page score banner when score is not detected (both 0). (ankit)\n* **GUI** Fixed deprecated JQuery function warning in WP-Admin. (krzxsiek)\n\n= 3.6.4 - Mar 15 2021 =\n* **Toolbox** Fixed Beta Test upgrade error when upgrading to v3.7+.\n\n= 3.6.3 - Mar 10 2021 =\n* **Core** Fixed potential upgrade failure when new versions have changes in activation related functions.\n* **Core** Upgrade process won't get deactivated anymore on Network setup.\n\n= 3.6.2 - Feb 1 2021 =\n* **Page Optimize** Fixed an issue where network purge CSS/JS caused 404 errors for subsites.\n* **Page Optimize** Fixed an issue where purge CSS/JS only caused 404 errors.\n* **Page Optimize** Added a notice for CSS/JS data detection and potential random string issue.\n* **Page Optimize** Limited localization resources to specified .js only. (closte #292/ormonk)\n* **JS** Data src may now be bypassed from JS Combine. (ankit)\n* **CLI** Fixed a message typo in Purge. (flixwatchsupport)\n* **Browser** Added font/otf to Browser Cache expire list. (ruikai)\n* **Data** Updated data files to accept PR from dev branch only.\n* **3rd** Add data-view-breakpoint-pointer to js_excludes.txt for the Events Calendar plugin. (therealgilles)\n* **Cloud** Bypassed invalid requests.\n* **Doc** CDN Mapping description improvement. (mihai A.)\n\n= 3.6.1 - Dec 21 2020 =\n* **WP** Tested up to WP v5.6.\n* **WebP** Reverted WebP support on Safari Big Sur and Safari v14.0.1+ due to an inability to detect MacOS versions from UA. (@antomal)\n* **CDN** Dropped the option `Load JQuery Remotely`.\n* **CDN** Fixed CDN URL replacement issue in optimized CSS files. (@ankit)\n* **CDN** Fixed an issue where CDN CLI wouldn't set mapping image/CSS/JS to OFF when `false` was the value.\n* **CDN** Started using React for CDN Mapping settings.\n* **GUI** Secured Server IP setting from potential XSS issues. (@WonTae Jang)\n* **Toolbox** Supported both dev and master branches for Beta Test. Latest version updated to v3.6.1.\n* **Purge** Purge Pages now can purge non-archive pages too.\n* **Admin** Simplified the admin JS.\n* **Admin** Limited crawler-related react JS to crawler page only.\n\n= 3.6 - Dec 14 2020 =\n* 🌱**WebP** Added WebP support on Safari Big Sur or Safari v14.0.1+. (@ruikai)\n* 🐞**Config** Fixed an issue where new installations were not getting the correct default .htaccess content.\n* **Crawler** Will auto bypass empty sub-sitemap instead of throwing an exception. (@nanoprobes @Tobolo)\n* **Crawler** Now using React for Cookie Simulation settings instead of Vue.js. Dropped Vue.js.\n* **Crawler** Dropped `Sitemap Generation` (will only use 3rd party sitemap for crawler).\n* **CSS** Added `CSS Combine External and Inline` option for backward compatibility. (@lisa)\n* **Object** Forbid .object-cache.ini visits. (@Tarik)\n* **Page Optimize** Dropped `Remove Comments` option to avoid combine error.\n* **CSS** Added a predefined CSS exclude file `data/css_excludes.txt`.\n* **CSS** Excluded Flatsome theme random inline CSS from combine.\n* **CSS** Excluded WoodMart theme from combine. (@moemauphie)\n* **Page Optimize** Excluded tagDiv.com Newspaper theme dynamic CSS/JS from CSS/JS Combine.\n* **CSS** Added predefined JS defer excludes list. (@Shivam)\n* **JS** `data-no-defer` option now supports inline JS. (@rafaucau)\n* **Media** Lazyload inline library is now bypassed by JS Combine.\n* **Admin** Fixed WP-Admin console ID duplicate warnings.\n* **Cloud** Dropped QUIC.cloud sync options that have long been unused.\n* **CSS** Dropped `Unique CSS File` option (UCSS will always generate unique file, will use whitelist to group post type to one CSS).\n* **GUI** Dropped Help tab.\n* **Toolbox** Added 3.5.2 to version list.\n\n= 3.5.2 - Oct 27 2020 =\n* **CSS** `CSS Combine` is now compatible w/ inline noscript CSS. (@galbaras)\n* **GUI** Added ability to manually dismiss the JS option reset message in v3.5.1 upgrade process. (#473917)\n* 🐞**CSS** `CSS Excludes` setting will no longer lose items beginning w/ `#`. (@ankit)\n* **API** New `litespeed_media_reset` API function for image editing purposes. (@Andro)\n\n= 3.5.1 - Oct 20 2020 =\n* **JS** Inline JS containing nonces can now be combined.\n* **JS** Reset JS Combine/Defer to OFF when upgrading to avoid breaking sites.\n* **JS** Added new option JS Combine External and Inline to allow backwards compatibility.\n* **JS** Added Inline JS Defer option back. (@ankit)\n* **Page Optimize** Dropped Inline JS Minify option and merged the feature into JS Minify.\n* **JS** Pre-added jQuery to the default JS excludes/defer list for better layout compatibility for new users.\n* **JS** Excluded Stripe/PayPal/Google Map from JS optimization. (@FPCSJames)\n* **JS** Allowed excluded JS to still be HTTP2 pushed. (@joshua)\n* **CCSS** Critical CSS now can avoid network pollution from other sites. (@ankit)\n* **Toolbox** Beta Test now displays recent public versions so it is easier to revert to an older version\n* **Vary** Server environment variable Vary can now be passed to original server from QUIC.cloud for non-LiteSpeed servers.\n* **ESI** Improved backward compatibility for ESI nonce list. (@zach E)\n* 🐞**Misc** Fixed failure of upgrade button on plugin news banner and made cosmetic improvements.\n* **Doc** Added note that LSCWP works with ClassicPress.\n\n= 3.5.0.2 - Sep 30 2020 =\n* This is a temporary revert fix. Code is SAME as v3.4.2.\n\n= 3.5.0.1 - Sep 29 2020 =\n* 🔥🐞**CSS** Fixed print media query issue when having CSS Combine. (@paddy-duncan)\n\n= 3.5 - Sep 29 2020 =\n* **Page Optimize** Refactored CSS/JS optimization.\n* **Page Optimize** CSS and JS Combine now each save to a single file without memory usage issues.\n* **CSS** Inline CSS Minify is now a part of CSS Minify, and will respect the original priorities. (thanks to @galbaras)\n* **JS** JS Combine now generates a single JS file in the footer. (Special thanks to @ankit)\n* **JS** JS Combine now combines external JS files, too. (Thanks to @ankit)\n* **JS** JS Deferred Excludes now uses the original path/filename as keywords instead of the minified path/filename, when JS Minify is enabled.\n* **JS** JS Combine now combines inline JS, too.\n* **JS** JS Excludes may now be used for inline JS snippet.\n* **Page Optimize** Inline CSS Minify and Max Combined File Size retired due to changes listed above.\n* **CSS** Combined CSS Priority retired due to changes listed above.\n* **JS** Exclude JQuery, Combined JS Priority, Load Inline JS Deferred, and Inline JS Deferred Excludes retired due to changes listed above.\n* **JS** Predefined data file data/js_excludes.txt now available for JS Excludes.\n* **ESI** Predefined data file data/esi.nonces.txt now available for ESI Nonces.\n* **ESI** Remote Fetch ESI Nonces functionality retired.\n* **API** Added support for new litespeed_esi_nonces filter.\n* **Object** Object Cache will not try to reconnect after failure to connect in a single process.\n* **CCSS** Remote read CSS will add the scheme if it is missing from the URL.\n* **CCSS** CSS will no longer be prepared for a URL if 404 result is detected.\n* **CCSS** Fixed most failures caused by third party CSS syntax errors.\n* **CCSS** Remote read CSS will fix the scheme if the URL doesn't have it.\n* **CCSS** Excluded 404 when preparing CSS before request.\n* **CCSS** Adjusted CCSS timeout from 180 seconds to 30 seconds.\n* **Image Optimize** Fixed the delete attachment database error that occurred when not using the image optimization service yet.\n* **Media** Added iOS 14 WebP support.\n* **Data** Fixed database creation failure for MySQL v8.\n* **Cloud** Error code err_key will clear the domain key in order to avoid duplicate invalid requests.\n* **Network** Fixed issue with object cache password file storage that occurred when resaving the settings. (#302358)\n* **Misc** Fixed IP detect compatibility w/ Apache.\n* **GUI** Fixed the description for Do Not Cache Categories.\n* **Preload** Upgraded Instant Click to a new stable preload library. (@stasonua0)\n\n= 3.4.2 - Sep 8 2020 =\n* **CCSS** Corrected the issue that wrongly appended non-CSS files to CSS in links before sending request.\n* **3rd** YITH wishlist now sends a combined single sub request for all widgets contained in one page. (LSWS v5.4.9 build 3+ required)\n* **ESI** Added support for ESI combine feature.\n* **GUI** Dropped banner notification for missing domain key when domain key is not initialized.\n* **Log** When QC whitelist check fails, a detailed failure log is now appended.\n\n= 3.4.1 - Sep 2 2020 =\n* 🐞**CCSS** Fixed an issue where dynamically generated CSS failed with `TypeError: Cannot read property type of undefined`.\n* 🐞**Page Optimize** Fixed CSS optimization compatibility for CSS dynamically generated with PHP.\n* **Page Optimize** Added the ability to defer JS even when the resource is excluded from other JS optimizations. (@slr1979)\n* **ESI** Added support for ESI last parameter inline value.\n* **3rd** YITH Wishlist, when cached for the first time, will no longer send sub requests.\n\n= 3.4 - Aug 26 2020 =\n* 🌱**LQIP** New setting **LQIP Excludes**.\n* 🌱**LQIP** Added a Clear LQIP Queue button.\n* 🌱**CCSS** Added a Clear CCSS Queue button.\n* **CCSS** Fixed an issue which wrongly included preloaded images in CCSS. (@pixtweaks)\n* **Network** Primary site and subsite settings now display correctly.\n* **Page Optimize** Noscript tags generated by LSCWP will only be dropped when the corresponding option is enabled. (@ankit)\n* **DB Optimize** Fixed database optimizer conflicts w/ object cache transient setting. (#752931)\n* **3rd** Fixed an issue with WooCommerce product purge when order is placed.\n* **3rd** Improved WooCommerce product comment compatibility with **WooCommerce Photo Reviews Premium** plugin when using ESI.\n* **CDN** Fixed Remote jQuery compatibility with WordPress v5.5. (@pixtweaks)\n* **API** New API `litespeed_purge_all_object` and `litespeed_purged_all_object` action hooks.\n\n= 3.3.1 - Aug 12 2020 =\n* 🌱**Page Optimize** New option to Remove Noscript Tags. (@phuc88bmt)\n* 🐞**LQIP** Fixed a critical bug that bypassed all requests in v3.3.\n* **LQIP** Requests are now bypassed if domain has no credit left.\n* **Page Optimize** Inline defer will be bypassed if document listener is detected in the code. (@ssurfer)\n* **CCSS** Print-only styles will no longer be included in Critical CSS.\n* **API** Added hooks to Purge action to handle file deletions. (@biati)\n* **Cloud** Plain permalinks are no longer required for use of cloud services.\n* **Data** Added an access denial to work with OpenLiteSpeed. (@spenweb #PR228)\n* **GUI** Spelling and grammar adjustments. (@blastoise186 #PR253)\n\n= 3.3 - Aug 6 2020 =\n* 🌱**Page Optimize** Added a new setting, Inline JS Deferred Excludes. (@ankit)\n* **Page Optimize** CSS/JS Combine/Minify file versions will be differentiated by query string hash instead of new filename to reduce DB/file system storage.\n* **Page Optimize** Added the ability to use local copies of external JS files for better control over page score impacts.\n* **Page Optimize** Improved combination of CSS media queries. (@galbaras)\n* **Page Optimize** Reprioritized Inline JS Defer to be optimized before encoding, for a significantly smaller result.\n* **LQIP** Detect if the file exists before sending LQIP request to QUIC.cloud.\n* **CCSS** Sped up CCSS process significantly by sending HTML and CSS in request.\n* **CCSS** Improvements to mobile CSS support in CCSS.\n* **CCSS** Minimize CCSS failures by attempting to automatically fix CSS syntax errors.\n* **Cloud** Domain Key will be deleted after QUIC.cloud site_not_registered error to avoid endless repeated requests.\n* **CDN** CDN Original URL will default to WP Site URL if not set. (@ruikai)\n* **CLI** Global output format `--format=json/yaml/dump` and `--json` support in CLI. (@alya1992)\n* **CDN** Improved handling of non-image CSS `url()` sources in CDN. (@daniel McD)\n* 🐞**CDN** Fixed CDN replacement conflict w/ JS/CSS Optimize. (@ankit)\n* **Crawler** Only reset Crawler waiting queues when crawling begins. (@ruikai)\n* **Network** Network Enable Cache is no longer reset to ON Use Network Settings in enabled. (@RavanH)\n* 🐞**Activation** Fixed a PHP warning that appeared during uninstall. (@RavanH)\n* **Debug** Automatically omit long strings when dumping an array to debug log.\n* **Report** Subsites report now shows overwritten values along w/ original values. (#52593959)\n* **REST** Improved WP5.5 REST compatibility. (@oldrup)\n* **GUI** Server IP setting moved from Crawler menu to General menu.\n* **GUI** Localize resources moved to Localization tab.\n* **Config** News option now defaults to ON.\n\n= 3.2.4 - Jul 8 2020 =\n* **Object** New installations no longer get custom data.ini reset, as this could cause lost configuration. (@Eric)\n* **ESI** Now using `svar` to load nonces more quickly. (@Lauren)\n* **ESI** Fixed the conflicts between nonces in inline JS and ESI Nonces when Inline JS Deferred is enabled. (@JesseDistad)\n* 🐞**ESI** Fixed Fetch Latest Predefined Nonce button.\n* 🐞**Cache** Fixed an issue where mobile visits were not being cached when Cache Mobile was disabled.\n* **CDN** Bypass CDN constant `LITESPEED_BYPASS_CDN` now will apply to all CDN replacements.\n* **Router** Dropped `Router::get_uid()` function.\n* **Crawler** Updated role simulator function for future UCSS usage.\n* **GUI** Textarea will now automatically adjust the height based on the number of rows input.\n* **CLI** Fixed an issue that caused WP-Cron to exit when a task errored out. (@DovidLevine @MatthewJohnson)\n* **Cloud** No longer communcate with QUIC.cloud when Domain Key is not set and Debug is enabled.\n* **Cloud** Score banner no longer automatically fetches a new score. (@LucasRolff)\n\n= 3.2.3.2 - Jun 19 2020 =\n* 🔥🐞**Page Optimize** Hotfix for CSS/JS minify/combine. (@jdelgadoesteban @martin_bailey)\n\n= 3.2.3.1 - Jun 18 2020 =\n* **API** New filter `litespeed_buffer_before` and `litespeed_buffer_after`. (#PR243 @joejordanbrown)\n\n= 3.2.3 - Jun 18 2020 =\n* 🌱**Page Optimize** Added Unique CSS option for future removal of unused CSS per page. (@moongear)\n* **Page Optimize** Fixed an issue where Font Optimization could fail when having Load JS Deferred and Load Inline JS Deferred. (#PR241 @joejordanbrown)\n* 🐞**Page Optimize** Fixed an issue with Font Display Optimization which caused Google Fonts to load incorrectly. (#PR240 @joejordanbrown @haidan)\n* 🐞**Network** Use Primary Site Configuration setting for network sites now works properly with Object Cache and Browser Cache. (#56175101)\n* **API** Added filter `litespeed_is_from_cloud` to detect if the current request is from QC or not. (@lechon)\n* **ESI** ESI Nonce now can fetch latest list with one click.\n* **GUI** Updated remaining documentation links & some minor UI tweaks. (@Joshua Reynolds)\n\n= 3.2.2 - Jun 10 2020 =\n* 🌱**Purge** Scheduled Purge URLs now supports wildcard. (#427338)\n* 🌱**ESI** ESI Nonce supports wildcard match now.\n* **Network** Use Primary Site Settings now can support Domain Key, and override mechanism improved. (@alican532 #96266273)\n* **Cloud** Debug mode will now have no interval limit for most cloud requests. (@ruikai)\n* **Conf** Default Purge Stale to OFF.\n* **GUI** Purge Stale renamed to Serve Stale.\n* **Data** Predefined nonce list located in `/litespeed-cache/data/esi.nonce.txt`. Pull requests welcome.\n* **Debug** Limited parameter log length.\n* 🐞**CDN** Fixed an issue where upgrading lost value of CDN switch setting. (#888668)\n* **3rd** Caldera Forms ESI Nonce enhancement. (@paconarud16 @marketingsweet)\n* **3rd** Elementor now purges correctly after post/page updates.\n* **3rd** Disabled Page Optimization features on AMP to avoid webfont JS inject. (@rahulgupta1985)\n\n= 3.2.1 - Jun 1 2020 =\n* **Cloud** LQIP/CCSS rate limit tweaks. (@ianpegg)\n* **Admin** Improved frontend Admin Bar menu functionality. (#708642)\n* **Crawler** Fixed an issue where cleaning up a crawler map with a leftover page number would cause a MySQL error. (@saowp)\n* **Image Optimize** Added WP default thumbnails to image optimization summary list. (@johnny Nguyen)\n* **REST** Improved REST compatibility w/ WP4.4-. (#767203)\n* **GUI** Moved Use Primary Site Configuration to General menu. (@joshua)\n\n= 3.2 - May 27 2020 =\n* **Image Optimize** Major improvements in queue management, scalability, and speed. (@LucasRolff)\n* **Cloud** Implemented a series of communication enhancements. (@Lucas Rolff)\n* **Crawler** Enhanced PHP 5.3 compatibility. (@JTS-FIN #230)\n* **Page Optimize** Appended image template in wpDiscuz script into default lazyload image exclude list. (@philipfaster @szmigieldesign)\n* **Page Optimize** Eliminated the 404 issue for CSS/JS in server environments with missing SCRIPT_URI. (@ankit)\n* **Data** ENhanced summary data storage typecasting.\n\n= 3.1 - May 20 2020 =\n* 🌱**Network** Added Debug settings to network level when on network.\n* 🐞**Purge** Network now can purge all.\n* 🐞**Network** Fixed issue where saving the network primary site settings failed.\n* **Network** Moved Beta Test to network level when on network.\n* 🐞**Cache** Fixed issue in admin where new post editor was wrongly cached for non-admin roles. (@TEKFused)\n* 🐞**Data** Fixed issue with crawler & img_optm table creation failure. (@berdini @piercand)\n* 🐞**Core** Improved plugin activation compatibility on Windows 10 #224 (@greenphp)\n* **Core** Improved compatibility for .htaccess path search.\n* **Object** Catch RedisException. (@elparts)\n* Fixed Script URI issue in 3.0.9 #223 (@aonsyed)\n* **Image Optimize** Show thumbnail size set list in image optimization summary. (@Johnny Nguyen)\n* **Debug** Parameters will now be logged.\n\n= 3.0.9 - May 13 2020 =\n* **Purge** Comment cache can be successfully purged now.\n* **Data** Better MySQL charset support for crawler/image optimize table creation. (@Roshan Jonah)\n* **API** New hook to fire after Purge All. (@salvatorefresta)\n* **Crawler** Resolve IP for crawler.\n* **Task** PHP5.3 Cron compatibility fix.\n* **3rd** Elementor edit mode compatibility.\n* **Page Optimize** Fixed an issue where Purge Stale returned 404 for next visitor on CSS/JS.\n* **Page Optimize** Fixed the PHP warning when srcset doesn't have size info inside. (@gvidano)\n* **Cloud** Fixed the potential PHP warning when applying for the domain key.\n* **Core** PHP __DIR__ const replacement. (@MathiasReker)\n\n= 3.0.8.6 - May 4 2020 =\n* **CCSS** Bypassed CCSS functionality on frontend when domain key isn't setup yet.\n* **Cloud** Fixed WP node redetection bug when node expired. (@Joshua Reynolds)\n* **Crawler** Fixed an issue where URL is wrongly blacklisted when using ADC.\n\n= 3.0.8.5 - May 1 2020 =\n* 🔥🐞**3rd** Hotfix for WPLister critical error due to v3.0.8.4 changes.\n* **Image Optimize** Unfinished queue now will get more detailed info to indicate the proceeding status on node.\n* **CLI** Options can now use true/false as value for bool. (@gavin)\n* **CLI** Detect error if the ID does not exist when get/set an option value.\n* **Doc** An API comment typo for `litespeed_esi_load-` is fixed.\n\n= 3.0.8.4 - Apr 30 2020 =\n* 🌱**Crawler** New setting: Sitemap timeout. (#364607)\n* **Image Optimize** Images that fail to optimize are now counted to increase next request limit.\n* **Cloud** Redetect fastest node every 3 days.\n* **Cloud** Suppressed auto upgrade version detection error. (@marc Dahl)\n* **3rd** 3rd party namespace compatibility. (#366352)\n\n= 3.0.8.3 - Apr 28 2020 =\n* **Cloud** Better compatibility for the Link to QUIC.cloud operation. (@Ronei de Sousa Almeida)\n* **Image Optimize** Automatically clear invalid image sources before sending requests. (@Richard Hordern)\n\n= 3.0.8.2 - Apr 27 2020 =\n* **GUI** Corrected the Request Domain Key wording.\n\n= 3.0.8.1 - Apr 27 2020 =\n* **Object** Object cache compatibility for upgrade from v2.9.9- versions.\n\n= 3.0.8 - Apr 27 2020 =\n* Released v3 on WordPress officially.\n\n= 3.0.4 - Apr 23 2020 =\n* **Cloud** Apply Domain Key now receives error info in next apply action if failed to generate.\n* **GUI** Apply Domain Key timeout now displays troubleshooting guidance.\n* **REST** Added /ping and /token to REST GET for easier debug.\n* **Cache** Dropped `advanced-cache.php` file detection and usage.\n\n= 3.0.3 - Apr 21 2020 =\n* **Conf** Settings from all options (data ini, defined constant, and forced) will be filtered and cast to expected type.\n* **Upgrade** CDN mapping and other multiple line settings will now migrate correctly when upgrading from v2 to v3.\n\n= 3.0.2 - Apr 17 2020 =\n* **GUI** More guidance on domain key setting page.\n* **Cloud** Now Apply Domain Key will append the server IP if it exists in Crawler Server IP setting.\n\n= 3.0.1 - Apr 16 2020 =\n* **Data** Increased timeout for database upgrade related to version upgrade. Display a banner while update in progress.\n* **Page Optimize** All appended HTML attributes now will use double quotes to reduce the conflicts when the optimized resources are in JS snippets.\n\n= 3.0 - Apr 15 2020 =\n* 🌱**Media** LQIP (Low Quality Image Placeholder).\n* 🌱**Page Optimize** Load Inline JS Deferred Compatibility Mode. (Special thanks to @joe B - AppsON)\n* 🌱**Cloud** New QUIC.cloud API key setting.\n* 🌱**ESI** New ESI nonce setting.\n* 🌱**Media** JPG quality control. (@geckomist)\n* 🌱**Media** Responsive local SVG placeholder.\n* 🌱**Discussion** Gravatar warmup cron.\n* 🌱**DB** Table Engine Converter tool. (@johnny Nguyen)\n* 🌱**DB** Database summary: Autoload size. (@JohnnyNguyen)\n* 🌱**DB** Database summary: Autoload entries list.\n* 🌱**DB** Revisions older than. (@thememasterguru)\n* 🌱**Cache** Forced public cache setting. (#308207)\n* 🌱**Crawler** New timeout setting to avoid incorrect blacklist addition. (#900171)\n* 🌱**Htaccess** Frontend & backend .htaccess path customize. (@jon81)\n* 🌱**Toolbox** Detailed Heartbeat Control (@K9Heaven)\n* 🌱**Purge** Purge Stale setting.\n* 🌱**Page Optimize** Font display optimization. (@Joeee)\n* 🌱**Page Optimize** Google font URL display optimization.\n* 🌱**Page Optimize** Load Inline JS deferred.\n* 🌱**Page Optimize** Store gravatar locally. (@zzTaLaNo1zz @JohnnyNguyen)\n* 🌱**Page Optimize** DNS prefetch control setting.\n* 🌱**Page Optimize** Lazy Load Image Parent Class Name Excludes. (@pako69)\n* 🌱**Page Optimize** Lazy load iframe class excludes. (@vnnloser)\n* 🌱**Page Optimize** Lazy load exclude URIs. (@wordpress_fan1 @aminaz)\n* 🌱**GUI** New Dashboard and new menus.\n* 🌱**Image Optimize** Supported GIF WebP optimization. (@Lucas Rolff)\n* 🌱**Image Optimize** New workflow for image optimization (Gather first, request second).\n* 🌱**Image Optimize** The return of Rescan.\n* 🌱**CLI** Get single option cmd.\n* 🌱**CLI** QUIC.cloud cmd supported.\n* 🌱**CLI** CLI can send report now.\n* 🌱**Health** Page speed and page score now are in dashboard.\n* 🌱**Conf** Supported consts overwritten of `LITESPEED_CONF__` for all settings. (@menathor)\n* 🌱**REST** New REST TTL setting.  (@thekendog)\n* 🌱**CDN** New setting `HTML Attribute To Replace`. CDN can now support any HTML attribute to be replaced. (@danushkaj91)\n* 🌱**Debug** Debug URI includes/excludes settings.\n* 🌱**Crawler** 🐞 Support for multiple domains in custom sitemap. (@alchem)\n* 🌱**Crawler** New Crawler dashboard. New sitemap w/ crawler status. New blacklist w/ reason.\n* 🌱**Media** LQIP minimum dimensions setting. (@Lukasz Szmigiel)\n* **Crawler** Able to add single rows to blacklist.\n* **Crawler** Crawler data now saved into database instead of creating new files.\n* **Crawler** Larger timeout to avoid wrongly added to blacklist.\n* **Crawler** Manually changed the priority of mobile and WebP. (@rafaucau)\n* **Browser** Larger Browser Cache TTL for Google Page Score improvement. (@max2348)\n* **Task** Task refactored. Disabled cron will not show in cron list anymore.\n* **Task** Speed up task load speed.\n* **ESI** Added Bloom nonce to ESI for Elegant Themes.\n* **Cloud** Able to redetect cloud nodes now.\n* **Img_optm** Fixed stale data in redirected links.\n* **Lazyload** CSS class `litespeed_lazyloaded` is now appended to HTML body after lazyload is finished. (@Adam Wilson)\n* **Cache** Default drop qs values. (@gijo Varghese)\n* **LQIP** Show all LQIP images in Media column.\n* **CDN** Can now support custom REST API prefix other than wp-json. (#174 @therealgilles)\n* **IAPI** Used REST for notify/destroy/check_img; Removed callback passive/aggreesive IAPI func\n* **CSSJS** Saved all static files to litespeed folder; Uninstallation will remove static cache folder too; Reduced .htaccess rules by serving CSS/JS directly.\n* **Object** Fixed override different ports issue. (@timofeycom #ISSUE178)\n* **Conf** DB Tables will now only create when activating/upgrading/changing settings.\n* **DB** Simplified table operation funcs.\n* **CSSJS** Bypassed CSS/JS generation to return 404 if file is empty (@grubyy)\n* **CSSJS** Inline JS defer will not conflict with JS inline optm anymore.\n* **CDN** settings will not be overwritten by primary settings in network anymore. (@rudi Khoury)\n* **OPcache** Purged all opcache when updating cache file. (@closte #170)\n* **CLI** CLI cmd renamed.\n* **CLI** Well-formatted table to show all options.\n* **Purge** Only purge related posts that have a status of \"published\" to avoid unnecessary \"draft\" purges. (@Jakub Knytl)\n* **GUI** Removed basic/adv mode for settings. Moved non-cache settings to its own menu.\n* **Htaccess** Protected .htaccess.bk file. Only kept one backup. (@teflonmann)\n* **Crawler** Crawler cookie now support `_null` as empty value.\n* **Crawler** Avoid crawler PHP fatal error on Windows OS. (@technisolutions)\n* **Admin** Simplified admin setting logic.\n* **Conf** Multi values settings now uniformed to multi lines for easier setting.\n* **Conf** New preset default data file `data/consts.default.ini`.\n* **Conf** Config setting renamed and uniformed.\n* **Conf** Dropped `Conf::option()`. Used `Conf::val()` instead.\n* **Conf** Improved conf initialization and upgrade conversion workflow.\n* **Core** Code base refactored. New namespace LiteSpeed.\n* **API** New API: iframe lazyload exclude filter.\n* **GUI** human readable seconds. (@MarkCanada)\n* **API** API refactored. * NOTE: All 3rd party plugins that are using previous APIs, especially `LiteSpeed_Cache_API`, need to be adjusted to the latest one. Same for ESI blocks.* ESI shortcode doesn't change.\n* **API** New hook `litespeed_update_confs` to settings update.\n* **API** New Hooks `litespeed_frontend_shortcut` and `litespeed_backend_shortcut` for dropdown menu. (@callaloo)\n* **API** Removed `litespeed_option_*` hooks. Use `litespeed_force_option` hook insteadly\n* **API** Renamed `litespeed_force_option` to `litespeed_conf_force`.\n* **API** Removed function `litespeed_purge_single_post`.\n* **REST** New rest API to fetch public IP.\n* **GUI** Hiding Cloudflare/Object Cache/Cloud API key credentials. (@menathor)\n* **GUI** Renamed all backend link tag from lscache to litespeed.\n* **GUI** fixed duplicated form tag.\n* **GUI** Fix cron doc link. (@arnab Mohapatra)\n* **GUI** Frontend adminbar menu added `Purge All` actions. (@Monarobase)\n* **GUI** Localized vue.js to avoid CloudFlare cookie. (@politicske)\n* **GUI** Always show optm column in Media Library for future single row optm operation. (@mikeyhash)\n* **GUI** Displayed TTL range below the corresponding setting.\n* **GUI** GUI refactored.\n* **Debug** Report can now append notes.\n* **3rd** Default added parallax-image to webp replacement for BB.\n* **3rd** User Switching plugin compatibility. (@robert Staddon)\n* **3rd** Beaver Builder plugin compatibility with v3.0.\n* **3rd** Avada plugin compatibility w/ BBPress. (@pimg)\n* **3rd** WooCommerce PayPal Checkout Gateway compatibility. (#960642 @Glen Cabusas)\n* **Network** Fixed potential timeout issue when containing a large volume of sites. (@alican532)\n* **Debug** `Disable All Features` now will see the warning banner if ON.\n* **Debug** Dropped `log filters` section.\n* **Debug** Debug and Tools sections combined into new `Toolbox` section.\n* 🐞**Crawler** Multi sites will now use separate sitemap even when `Use Primary Site` is ON. (@mrhuynhanh)\n* 🐞**Img_optm** Fixed large volume image table storage issue. (#328956)\n* 🐞 **Cloud** Cloud callback hash validation fixed OC conflict. (@pbpiotr)\n* 🎊 Any user that had the contribution to our WP community or changelog (even just bug report/feedback/suggestion) can apply for extra credits in QUIC.cloud.\n\n= 2.9.9.2 - Nov 24 2019 =\n* 🌱**GUI** New settings to limit News Feed to plugin page only.\n\n= 2.9.9.1 - Nov 18 2019 =\n* 🌱**Env** Environment Report can now append a passwordless link for support access without wp-admin password.\n* **Admin** The latest v3.0 beta test link may now be shown on the admin page when it's available.\n* **3rd** Compatibility with [DoLogin Security](https://wordpress.org/plugins/dologin/).\n* 🐞**ESI** Fixed a failure issue with Vary Group save. (@rafasshop)\n* 🐞**3rd** In browsers where WebP is not supported, Divi image picker will no longer serve WebP. (@Austin Tinius)\n\n= 2.9.9 - Oct 28 2019 =\n* <strong>Core</strong>: Preload all classes to avoid getting error for upcoming v3.0 upgrade.\n* <strong>Object</strong>: Improved compatibility with upcoming v3.0 release.\n* <strong>ESI</strong>: Unlocked ESI for OLS in case OLS is using QUIC.cloud CDN which supports ESI.\n* <strong>3rd</strong>: Elementor Edit button will now show when ESI enabled. (#PR149 #335322 @maxgorky)\n* 🐞<strong>Media</strong>: Fixed missing Media optimization column when Admin role is excluded from optimization in settings. (@mikeyhash @pako69 @dgilfillan)\n\n= 2.9.8.7 - Oct 11 2019 =\n* <strong>3rd</strong>: Enhanced WP stateless compatibility. (#PR143)\n* <strong>3rd</strong>: Fixed a PHP warning caused by previous PR for AMP. (#PR176)\n\n= 2.9.8.6 - Sep 24 2019 =\n* <strong>3rd</strong>: Bypassed page optimizations for AMP. (#359748 #PR169)\n* <strong>GUI</strong>: Firefox compatibility with radio button state when reloading pages. (#288940 #PR162)\n* <strong>GUI</strong>: Updated Slack invitation link. (#PR173)\n\n= 2.9.8.5 - Aug 21 2019 =\n* <strong>CCSS</strong>: Removed potential PHP notice when getting post_type. (@amcgiffert)\n* <strong>CDN</strong>: Bypassed CDN replacement on admin page when adding media to page/post. (@martin_bailey)\n* 🐞<strong>Media</strong>: Fixed inability to update or destroy postmeta data for child images. (#167713)\n\n= 2.9.8.4 - Jul 25 2019 =\n* <strong>Object</strong>: Increased compatibility with phpredis 5.0.\n* <strong>Object</strong>: Appended `wc_session_id` to default Do Not Cache Groups setting to avoid issue where WooCommerce cart items were missing when Object Cache is used. NOTE: Existing users must add `wc_session_id` manually! (#895333)\n* <strong>CSS</strong>: Added null onload handler for CSS async loading. (@joejordanbrown)\n* 🕷️: Increased crawler timeout to avoid wrongly adding a URL to the blacklist.\n* <strong>3rd</strong>: WooCommerce Advanced Bulk Edit can now purge cache automatically.\n\n= 2.9.8.3 - Jul 9 2019 =\n* <strong>CSS</strong>: Enhanced the CSS Minify compatibility for CSS with missing closing bracket syntax errors. (@fa508210020)\n* 🕷️: Crawler now supports both cookie and no-cookie cases. (@tabare)\n* <strong>CCSS</strong>: Enhanced compatibility with requested pages where meta info size exceeds 8k. (@Joe B)\n* <strong>CCSS</strong>: No longer processing \"font\" or \"import\" directives as they are not considered critical. (@Ankit @Joe B)\n* <strong>IAPI</strong>: Removed IPv6 from all servers to avoid invalid firewall whitelist.\n\n= 2.9.8.2 - Jun 17 2019 =\n* 🔥🐞 <strong>3rd</strong>: Fixed PHP 5.3 compatibility issue with Facetwp.\n\n= 2.9.8.1 - Jun 17 2019 =\n* <strong>3rd</strong>: Set ESI template hook priority to highest number to prevent ESI conflict with Enfold theme. (#289354)\n* <strong>3rd</strong>: Improved Facetwp reset button compatibility with ESI. (@emilyel)\n* <strong>3rd</strong>: Enabled user role change to fix duplicate login issue for plugins that use alternative login processes. (#114165 #717223 @sergiom87)\n* <strong>GUI</strong>: Wrapped static text with translate function. (@halilemreozen)\n\n= 2.9.8 - May 22 2019 =\n* <strong>Core</strong>: Refactored loading priority so user related functions & optimization features are set after user initialization. (#717223 #114165 #413338)\n* <strong>Media</strong>: Improved backup file calculation query to prevent out-of-memory issue.\n* <strong>Conf</strong>: Feed cache now defaults to ON.\n* <strong>API</strong>: Fully remote attachment compatibility API of image optimization now supported.\n* 🕷️: Bypassed vary change for crawler; crawler can now simulate default vary cookie.\n* <strong>ESI</strong>: Refactored ESI widget. Removed `widget_load_get_options()` function.\n* <strong>ESI</strong>: Changed the input name of widget fields in form.\n* <strong>3rd</strong>: Elementor can now save ESI widget settings in frontend builder.\n* <strong>3rd</strong>: WP-Stateless compatibility.\n* <strong>IAPI</strong>: Image optimization can now successfully finish the destroy process with large volume images with automatic continual mode.\n* 🐞<strong>CDN</strong>: Fixed issue with Load JQuery Remotely setting where WP 5.2.1 provided an unexpected jQuery version.\n* 🐞<strong>3rd</strong>: Login process now gets the correct role; fixed double login issue.\n\n= 2.9.7.2 - May 2 2019 =\n* <strong>Conf</strong>: Enhanced compatibility when an option is not properly initialized.\n* <strong>Conf</strong>: Prevent non-array instance in widget from causing 500 error. (#210407)\n* <strong>CCSS</strong>: Increase CCSS generation timeout to 60s.\n* <strong>Media</strong>: Renamed lazyload CSS class to avoid conflicts with other plugins. (@DynamoProd)\n* <strong>JS</strong>: Improved W3 validator. (@istanbulantik)\n* <strong>QUIC</strong>: Synced cache tag prefix for static files cache.\n* <strong>ESI</strong>: Restored query strings to ESI admin bar for accurate rendering. (#977284)\n* <strong>ESI</strong>: Tweaked ESI init priority to honor LITESPEED_DISABLE_ALL const. ESI will now init after plugin loaded.\n* 🐞<strong>ESI</strong>: No longer initialize ESI if ESI option is OFF.\n* <strong>API</strong>: New \"Disable All\" API function.\n* <strong>API</strong>: New \"Force public cache\" API function.\n* 🐞<strong>Vary</strong>: Fixed an issue with saving vary groups.\n* 🐞<strong>IAPI</strong>: Fixed an issue where image md5 validation failed due to whitespace in the image path.\n* 🐞<strong>3rd</strong>: Bypass all optimization/ESI/Cache features when entering Divi Theme Builder frontend editor.\n* 🐞<strong>3rd</strong>: Fixed an issue where DIVI admin bar exit button didn't work when ESI was ON.\n\n= 2.9.7.1 - Apr 9 2019 =\n* <strong>Purge</script>: Purge All no longer includes Purge CCSS/Placeholder.\n* <strong>3rd</strong>: Divi Theme Builder no longer experiences nonce expiration issues in the contact form widget. (#475461)\n\n= 2.9.7 - Apr 1 2019 =\n* 🌱🌱🌱 QUIC.cloud CDN feature. Now Apache/Nginx can use LiteSpeed cache freely.\n\n= 2.9.6 - Mar 27 2019 =\n* 🌱<strong>IAPI</strong>: Appended XMP to `Preserve EXIF data` setting. WebP will now honor this setting. (#902219)\n* <strong>Object</script>: Fixed SASL connection with LSMCD.\n* <strong>ESI</strong>: Converted ESI URI parameters to JSON; Added ESI validation.\n* <strong>Import</strong>: Import/Export will now use JSON format. <strong>Please re-export any backed up settings. Previous backup format is no longer recognized.</strong>\n* <strong>Media</strong>: WebP replacement will honor `Role Excludes` setting now. (@mfazio26)\n* <strong>Data</strong>: Forbid direct visit to const.default.ini.\n* <strong>Utility</strong>: Can handle WHM passed in `LITESPEED_ERR` constant now.\n* <strong>IAPI</strong>: Communicate via JSON encoding.\n* <strong>IAPI</strong>: IAPI v2.9.6.\n\n= 2.9.5 - Mar 14 2019 =\n* 🌱 Auto convert default WordPress nonce to ESI to avoid expiration.\n* 🌱 <strong>API</strong>: Ability to easily convert custom nonce to ESI by registering `LiteSpeed_Cache_API::nonce_action`.\n* <strong>OPTM</strong>: Tweaked redundant attr `data-no-optimize` in func `_analyse_links` to `data-ignore-optimize` to offer the API to bypass optimization but still move src to top of source code.\n* <strong>API</strong>: Renamed default nonce ESI ID from `lscwp_nonce_esi` to `nonce`.\n* <strong>API</strong>: Added WebP generation & validation hook API. (@alim #wp-stateless)\n* <strong>API</strong>: Added hook to bypass vary commenter check. (#wpdiscuz)\n* <strong>Doc</strong>: Clarified Cache Mobile description. (@JohnnyNguyen)\n* <strong>Doc</strong>: Replaced incorrect link in description. (@JohnnyNguyen)\n* <strong>3rd</strong>: Improved wpDiscuz compatibility.\n* 🐞<strong>3rd</strong>: Fixed Divi Theme Builder comment compatibility on non-builder pages. (#410919)\n* <strong>3rd</strong>: Added YITH ESI adjustment.\n\n= 2.9.4.1 - Feb 28 2019 =\n* 🔥🐞<strong>Tag</strong>: Fixed issue where unnecessary warning potentially displayed after upgrade process when object cache is enabled.\n\n= 2.9.4 - Feb 27 2019 =\n* 🐞<strong>REST</strong>: New REST class with better WP5 Gutenberg and internal REST call support when ESI is embedded.\n* <strong>ESI</strong>: ESI block ID is now in plain text in ESI URL parameters.\n* 🐞<strong>ESI</strong>: Fixed a redundant ESI 301 redirect when comma is in ESI URL.\n* <strong>ESI</strong>: REST call can now parse shortcodes in ESI.\n* <strong>API</strong>: Changed ESI `parse_esi_param()` function to private and `load_esi_block` function to non-static.\n* <strong>API</strong>: Added `litespeed_is_json` hook for buffer JSON conversion.\n* <strong>GUI</strong>: Prepended plugin name to new version notification banner.\n* <strong>3rd</strong>: WPML multi domains can now be handled in optimization without CDN tricks.\n\n= 2.9.3 - Feb 20 2019 =\n* <strong>ESI</strong>: ESI shortcodes can now be saved in Gutenberg editor.\n* <strong>ESI</strong>: ESI now honors the parent page JSON data type to avoid breaking REST calls (LSWS 5.3.6+).\n* <strong>ESI</strong>: Added is_json parameter support for admin_bar.\n* <strong>ESI</strong>: Simplified comment form code.\n* <strong>3rd</strong>: Better page builder plugin compatibility within AJAX calls.\n* <strong>3rd</strong>: Compatibility with FacetWP (LSWS 5.3.6+).\n* <strong>3rd</strong>: Compatibility with Beaver Builder.\n* <strong>Debug</strong>: Added ESI buffer content to log.\n* <strong>Tag</strong>: Only append blog ID to cache tags when site is part of a network.\n* <strong>IAPI</strong>: Optimized database query for pulling images.\n* <strong>GUI</strong>: Added more plugin version checking for better feature compatibility.\n* <strong>GUI</strong>: Ability to bypass non-critical banners with the file .litespeed_no_banner.\n* <strong>Media</strong>: Background image WebP replacement now supports quotes around src.\n\n= 2.9.2 - Feb 5 2019 =\n* <strong>API</strong>: Add a hook `litespeed_esi_shortcode-*` for ESI shortcodes.\n* <strong>3rd</strong>: WooCommerce can purge products now when variation stock is changed.\n* 🐞🕷️: Forced HTTP1.1 for crawler due to a CURL HTTP2 bug.\n\n= 2.9.1 - Jan 25 2019 =\n* <strong>Compatibility</strong>: Fixed fatal error for PHP 5.3.\n* <strong>Compatibility</strong>: Fixed PHP warning in htmlspecialchars when building URLs. (@souljahn2)\n* <strong>Media</strong>: Excluded invalid image src from lazyload. (@andrew55)\n* <strong>Optm</strong>: Improved URL compatibility when detecting closest cloud server.\n* <strong>ESI</strong>: Supported JSON format comment format in ESI with `is_json` parameter.\n* <strong>API</strong>: Added filters to CCSS/CSS/JS content. (@lhoucine)\n* <strong>3rd</strong>: Improved comment compatibility with Elegant Divi Builder.\n* <strong>IAPI</strong>: New Europe Image Optimization server (EU5). <strong>Please whitelist the new [IAPI IP List](https://wp.api.litespeedtech.com/ips).</strong>\n* <strong>GUI</strong>: No longer show banners when `Disable All` in `Debug` is ON. (@rabbitwordpress)\n* <strong>GUI</strong>: Fixed button style for RTL languages.\n* <strong>GUI</strong>: Removed unnecessary translation in report.\n* <strong>GUI</strong>: Updated readme wiki links.\n* <strong>GUI</strong>: Fixed pie styles in image optimization page.\n\n= 2.9 - Dec 31 2018 =\n* 🌱<strong>Media</strong>: Lazy Load Image Classname Excludes. (@thinkmedia)\n* 🌱: New EU/AS cloud servers for faster image optimization handling.\n* 🌱: New EU/AS cloud servers for faster CCSS generation.\n* 🌱: New EU/AS cloud servers for faster responsive placeholder generation.\n* 🌱<strong>Conf</strong>: Ability to set single options via link.\n* 🌱<strong>Cache</strong>: Ability to add custom TTLs to Force Cache URIs.\n* <strong>Purge</strong>: Added post type to Purge tags.\n* <strong>Purge</strong>: Redefined CCSS page types.\n* <strong>Core</strong>: Using Exception for .htaccess R/W.\n* <strong>IAPI</strong>: <strong>New cloud servers added. Please whitelist the new [IAPI IP List](https://wp.api.litespeedtech.com/ips).</strong>\n* <strong>Optm</strong>: Trim BOM when detecting if the page is HTML.\n* <strong>GUI</strong>: Added PageSpeed Score comparison into promotion banner.\n* <strong>GUI</strong>: Refactored promotion banner logic.\n* <strong>GUI</strong>: Removed page optimized comment when ESI Silence is requested.\n* <strong>GUI</strong>: WHM transient changed to option instead of transient when storing.\n* <strong>GUI</strong>: Appending more descriptions to CDN filetype setting.\n* <strong>IAPI</strong>: Removed duplicate messages.\n* <strong>IAPI</strong>: Removed taken_failed/client_pull(duplicated) status.\n* <strong>Debug</strong>: Environment report no longer generates hash for validation.\n* <strong>3rd</strong>: Non-cacheable pages no longer punch ESI holes for Divi compatibility.\n* 🐞<strong>Network</strong>: Added slashes for mobile rules when activating plugin.\n* 🐞<strong>CCSS</strong>: Eliminated a PHP notice when appending CCSS.\n\n= 2.8.1 - Dec 5 2018 =\n* 🐞🕷️: Fixed an activation warning related to cookie crawler. (@kacper3355 @rastel72)\n* 🐞<strong>Media</strong>: Replace safely by checking if pulled images is empty or not first. (@Monarobase)\n* <strong>3rd</strong>: Shortcode ESI compatibility with Elementor.\n\n= 2.8 - Nov 30 2018 =\n* 🌱: ESI shortcodes.\n* 🌱: Mobile crawler.\n* 🌱: Cookie crawler.\n* <strong>API</strong>: Can now add `_litespeed_rm_qs=0` to bypass Remove Query Strings.\n* <strong>Optm</strong>: Removed error log when minify JS failed.\n* 🐞<strong>Core</strong>: Fixed a bug that caused network activation PHP warning.\n* <strong>Media</strong>: Removed canvas checking for WebP to support TOR. (@odeskumair)\n* <strong>Media</strong>: Eliminated potential image placeholder PHP warning.\n* <strong>3rd</strong>: Bypassed Google recaptcha from Remove Query Strings for better compatibility.\n* <strong>IAPI</strong>: Showed destroy timeout details.\n* <strong>Debug</strong>: Moved Google Fonts log to advanced level.\n* <strong>GUI</strong>: Replaced all Learn More links for functions.\n* <strong>GUI</strong>: Cosmetic updates including Emoji.\n* 🕷️: Removed duplicated data in sitemap and blacklist.\n\n= 2.7.3 - Nov 26 2018 =\n* <strong>Optm</strong>: Improved page render speed with Web Font Loader JS library for Load Google Fonts Asynchronously.\n* <strong>Optm</strong>: Directly used JS library files in plugin folder instead of short links `/min/`.\n* <strong>Optm</strong>: Handled exceptions in JS optimization when meeting badly formatted JS.\n* <strong>3rd</strong>: Added Adobe Lightroom support for NextGen Gallery.\n* <strong>3rd</strong>: Improved Postman app support for POST JSON requests.\n* <strong>IAPI</strong>: <strong>US3 server IP changed to 68.183.60.185</strong>.\n\n= 2.7.2 - Nov 19 2018 =\n* 🌱: Auto Upgrade feature.\n* <strong>CDN</strong>: Bypass CDN for cron to avoid WP jQuery deregister warning.\n\n= 2.7.1 - Nov 15 2018 =\n* 🌱<strong>CLI</strong>: Ability to set CDN mapping by `set_option litespeed-cache-cdn_mapping[url][0] https://url`.\n* 🌱<strong>CDN</strong>: Ability to customize default CDN mapping data in default.ini.\n* 🌱<strong>API</strong>: Default.ini now supports both text-area items and on/off options.\n* <strong>Vary</strong>: Refactored Vary and related API.\n* <strong>Vary</strong>: New hook to manipulate vary cookies value.\n* <strong>Core</strong>: Activation now can generate Object Cache file.\n* <strong>Core</strong>: Unified Object Cache/rewrite rules generation process across activation/import/reset/CLI.\n* <strong>Core</strong>: Always hook activation to make activation available through the front end.\n* 🐞<strong>IAPI</strong>: Fixed a bug where environment report gave incorrect image optimization data.\n* 🐞<strong>OLS</strong>: Fixed a bug where login cookie kept showing a warning on OpenLiteSpeed.\n* 🐞<strong>Core</strong>: Fixed a bug where Import/Activation/CLI was missing CDN mapping settings.\n* <strong>API</strong>: <strong>Filters `litespeed_cache_media_lazy_img_excludes/litespeed_optm_js_defer_exc` passed-in parameter is changed from string to array.</strong>\n\n= 2.7 - Nov 2 2018 =\n* 🌱: Separate Purge log for better debugging.\n* <strong>3rd</strong>: Now fully compatible with WPML.\n* <strong>IAPI</strong>: Sped up Image Optimization workflow.\n* <strong>GUI</strong>: Current IP now shows in Debug settings.\n* <strong>GUI</strong>: Space separated placeholder queue list for better look.\n* <strong>IAPI</strong>: <strong>EU3 server IP changed to 165.227.131.98</strong>.\n\n= 2.6.4.1 - Oct 25 2018 =\n* 🔥🐞<strong>Media</strong>: Fixed a bug where the wrong table was used in the Image Optimization process.\n* <strong>IAPI</strong>: IAPI v2.6.4.1.\n\n= 2.6.4 - Oct 24 2018 =\n* 🌱: Ability to create custom default config options per hosting company.\n* 🌱: Ability to generate mobile Critical CSS.\n* 🐞<strong>Media</strong>: Fixed a bug where Network sites could incorrectly override optimized images.\n* 🐞<strong>CDN</strong>: Fixed a bug where image URLs containing backslashes were matched.\n* <strong>Cache</strong>: Added default Mobile UA config setting.\n* <strong>GUI</strong>: Fixed unknown shortcut characters for non-English languages Setting tabs.\n\n= 2.6.3 - Oct 18 2018 =\n* 🌱: Ability to Reset All Options.\n* 🌱<strong>CLI</strong>: Added new `lscache-admin reset_options` command.\n* <strong>GUI</strong>: Added shortcuts for more of the Settings tabs.\n* <strong>Media</strong>: Updated Lazy Load JS library to the most recent version.\n* There is no longer any need to explicitly Save Settings upon Import.\n* Remove Query String now will remove *all* query strings in JS/CSS static files.\n* <strong>IAPI</strong>: Added summary info to debug log.\n\n= 2.6.2 - Oct 11 2018 =\n* <strong>Setting</strong>: Automatically correct invalid numeric values in configuration settings upon submit.\n* 🐞<strong>Media</strong>: Fixed the issue where iframe lazy load was broken by latest Chrome release. (@ofmarconi)\n* 🐞: Fixed an issue with Multisite where subsites failed to purge when only primary site has WooCommerce . (@kierancalv)\n\n= 2.6.1 - Oct 4 2018 =\n* 🌱: Ability to generate separate Critical CSS Cache for Post Types & URIs.\n* <strong>API</strong>: Filter `litespeed_frontend_htaccess` for frontend htaccess path.\n* <strong>Media</strong>: Removed responsive placeholder generation history to save space.\n\n= 2.6.0.1 - Sep 24 2018 =\n* 🔥🐞: Fixed an issue in responsive placeholder generation where redundant history data was being saved and using a lot of space.\n\n= 2.6 - Sep 22 2018 =\n* <strong>Vary</strong>: Moved `litespeed_cache_api_vary` hook outside of OLS condition for .htaccess generation.\n* <strong>CDN</strong>: Trim spaces in original URL of CDN setting.\n* <strong>API</strong>: New filter `litespeed_option_` to change all options dynamically.\n* <strong>API</strong>: New `LiteSpeed_Cache_API::force_option()` to change all options dynamically.\n* <strong>API</strong>: New `LiteSpeed_Cache_API::vary()` to set default vary directly for easier compaitiblity with WPML WooCommerce Multilingual.\n* <strong>API</strong>: New `LiteSpeed_Cache_API::nonce()` to safely and easily allow caching of wp-nonce.\n* <strong>API</strong>: New `LiteSpeed_Cache_API::hook_vary_add()` to add new vary.\n* <strong>Optm</strong>: Changed HTML/JS/CSS optimization options assignment position from constructor to `finalize()`.\n* <strong>Doc</strong>: Added nonce to FAQ and mentioned nonce in 3rd Party Compatibility section.\n* <strong>GUI</strong>: Moved inline minify to under html minify due to the dependency.\n* <strong>3rd</strong>: Cached Aelia CurrencySwitcher by default.\n* 🐞: Fixed issue where enabling remote JQuery caused missing jquery-migrate library error.\n\n= 2.5.1 - Sep 11 2018 =\n* 🌱 Responsive placeholder. (@szmigieldesign)\n* Changed CSS::ccss_realpath function scope to private.\n* 🐞 Detected JS filetype before optimizing to avoid PHP source conflict. (@closte #50)\n\n= 2.5 - Sep 6 2018 =\n* [IMPROVEMENT] <strong>CLI</strong> can now execute Remove Original Image Backups. (@Shon)\n* [UPDATE] Fixed issue where WP-PostViews documentation contained extra slashes. (#545638)\n* [UPDATE] Check LITESPEED_SERVER_TYPE for more accurate LSCache Disabled messaging.\n* [IAPI] Fixed a bug where optimize/fetch error notification was not being received. (@LucasRolff)\n\n= 2.4.4 - Aug 31 2018 =\n* [NEW] <strong>CLI</strong> can now support image optimization. (@Shon)\n* [IMPROVEMENT] <strong>GUI</strong> Cron/CLI will not create admin message anymore.\n* [UPDATE] <strong>Media</strong> Fixed a PHP notice that appeared when pulling optimized images.\n* [UPDATE] Fixed a PHP notice when detecting origin of ajax call. (@iosoft)\n* [DEBUG] Debug log can now log referer URL.\n* [DEBUG] Changes to options will now be logged.\n\n= 2.4.3 - Aug 27 2018 =\n* [NEW] <strong>Media</strong> Ability to inline image lazyload JS library. (@Music47ell)\n* [IMPROVEMENT] <strong>Media</strong> Deleting images will now clear related optimization file & info too.\n* [IMPROVEMENT] <strong>Media</strong> Non-image postfix data will now be bypassed before sending image optimization request.\n* [BUGFIX] <strong>CDN</strong> CDN URL will no longer be replaced during admin ajax call. (@pankaj)\n* [BUGFIX] <strong>CLI</strong> WPCLI can now save options without incorrectly clearing textarea items. (@Shon)\n* [GUI] Moved Settings above Manage on the main menu.\n\n= 2.4.2 - Aug 21 2018 =\n* [IMPROVEMENT] <strong>Media</strong> Sped up Image Optimization process by replacing IAPI server pull communication.\n* [IMPROVEMENT] <strong>Media</strong> Ability to delete optimized WebP/original image by item in Media Library. (@redgoodapple)\n* [IMPROVEMENT] <strong>CSS Optimize</strong> Generate new optimized CSS name based on purge timestamp. Allows CSS cache to be cleared for visitors. (@bradbrownmagic)\n* [IMPROVEMENT] <strong>API</strong> added litespeed_img_optm_options_per_image. (@gintsg)\n* [UPDATE] Stopped showing \"No Image Found\" message when all images have finished optimization. (@knutsp)\n* [UPDATE] Improved a PHP warning when saving settings. (@sergialarconrecio)\n* [UPDATE] Changed backend adminbar icon default behavior from Purge All to Purge LSCache.\n* [UPDATE] Clearing CCSS cache will clear unfinished queue too.\n* [UPDATE] Added \"$\" exact match when adding URL by frontend adminbar dropdown menu, to avoid affecting any sub-URLs.\n* [UPDATE] Fixed IAPI error message showing array bug. (@thiomas)\n* [UPDATE] Debug Disable All will do a Purge All.\n* [UPDATE] <strong>Critical CSS server IP changed to 142.93.3.57</strong>.\n* [GUI] Showed plugin update link for IAPI version message.\n* [GUI] Bypassed null IAPI response message.\n* [GUI] Grouped related settings with indent.\n* [IAPI] Added 503 handler for IAPI response.\n* [IAPI] IAPI v2.4.2.\n* [IAPI] <strong>Center Server IP Changed from 34.198.229.186 to 142.93.112.87</strong>.\n\n= 2.4.1 - Jul 19 2018 =\n* [NEW FEATURE] <strong>Media</strong> Auto Level Up. Auto refill credit.\n* [NEW FEATURE] <strong>Media</strong> Auto delete original backups after pulled. (@borisov87 @JMCA2)\n* [NEW FEATURE] <strong>Media</strong> Auto request image optimization. (@ericsondr)\n* [IMPROVEMENT] <strong>Media</strong> Fetch 404 error will notify client as other errors.\n* [IMPROVEMENT] <strong>Media</strong> Support WebP for PageSpeed Insights. (@LucasRolff)\n* [BUGFIX] <strong>CLI</strong> Fixed the issue where CLI import/export caused certain textarea settings to be lost. (#767519)\n* [BUGFIX] <strong>CSS Optimize</strong> Fixed the issue that duplicated optimized CSS and caused rapid expansion of CSS cache folder.\n* [GUI] <strong>Media</strong> Refactored operation workflow and interface.\n* [UPDATE] <strong>Media</strong> Set timeout seconds to avoid pulling timeout. (@Jose)\n* [UPDATE] <strong>CDN</strong>Fixed the notice when no path is in URL. (@sabitkamera)\n* [UPDATE] <strong>Media</strong> Auto correct credits when pulling.\n* [UPDATE] <strong>GUI</strong> Removed redundant double quote in gui.cls. (@DaveyJake)\n* [IAPI] IAPI v2.4.1.\n* [IAPI] Allow new error status notification and success message from IAPI.\n\n= 2.4 - Jul 2 2018 =\n* [NEW FEATURE] <strong>Media</strong> Added lossless optimization.\n* [NEW FEATURE] <strong>Media</strong> Added Request Original Images ON/OFF.\n* [NEW FEATURE] <strong>Media</strong> Added Request WebP ON/OFF. (@JMCA2)\n* [IMPROVEMENT] <strong>Media</strong> Improved optimization tools to archive maximum compression and score.\n* [IMPROVEMENT] <strong>Media</strong> Improved speed of image pull.\n* [IMPROVEMENT] <strong>Media</strong> Automatically recover credit after pulled.\n* [REFACTOR] <strong>Config</strong> Separated configure const class.\n* [BUGFIX] <strong>Report</strong> Report can be sent successfully with emoji now. (@music47ell)\n* [IAPI] New Europe Image Optimization server (EU3/EU4).\n* [IAPI] New America Image Optimization server (US3/US4/US5/US6).\n* [IAPI] New Asian Image Optimization server (AS3).\n* [IAPI] Refactored optimization process.\n* [IAPI] Increased credit limit.\n* [IAPI] Removed request interval limit.\n* [IAPI] IAPI v2.4.\n* <strong>We strongly recommended that you re-optimize your image library to get a better compression result</strong>.\n\n= 2.3.1 - Jun 18 2018 =\n* [IMPROVEMENT] New setting to disable Generate Critical CSS. (@cybmeta)\n* [IMPROVEMENT] Added filter to can_cdn/can_optm check. (@Jacob)\n* [UPDATE] *Critical CSS* Added 404 css. Limit cron interval.\n* [UPDATE] AJAX will not bypass CDN anymore by default. (@Jacob)\n* [GUI] Show Disable All Features warning if it is on in Debug tab.\n\n= 2.3 - Jun 13 2018 =\n* [NEW FEATURE] Automatically generate critical CSS. (@joeee @ivan_ivanov @3dseo)\n* [BUGFIX] \"Mark this page as...\" from dropdown menu will not reset settings anymore. (@cbratschi)\n\n= 2.2.7 - Jun 4 2018 =\n* [IMPROVEMENT] Improved redirection for manual image pull to avoid too many redirections warning.\n* [IAPI] Increased credit limit.\n* [BUGFIX] Fixed 503 error when enabling log filters in Debug tab. (#525206)\n* [UPDATE] Improve compatibility when using sitemap url on servers with allow_url_open off.\n* [UPDATE] Removed Crawler HTTP2 option due to causing no-cache blacklist issue for certain environments.\n* [UPDATE] Privacy policy can be now translated. (@Josemi)\n* [UPDATE] IAPI Increased default img request max to 3000.\n\n= 2.2.6 - May 24 2018 =\n* [NEW FEATURE] Original image backups can be removed now. (@borisov87 @JMCA2)\n* [BUGFIX] Role Excludes in Tuning tab can save now. (@pako69)\n* [UPDATE] Added privacy policy support.\n\n= 2.2.5 - May 14 2018 =\n* [IAPI] <strong>Image Optimization</strong> New Asian Image Optimization server (AS2).\n* [INTEGRATION] Removed wpForo 3rd party file. (@massimod)\n\n= 2.2.4 - May 7 2018 =\n* [IMPROVEMENT] Improved compatibility with themes using the same js_min library. (#129093 @Darren)\n* [BUGFIX] Fixed a bug when checking image path for dynamic files. (@miladk)\n* [INTEGRATION] Compatibility with Universal Star Rating. (@miladk)\n\n= 2.2.3 - Apr 27 2018 =\n* [NEW FEATURE] WebP For Extra srcset setting in Media tab. (@vengen)\n* [REFACTOR] Removed redundant LS consts.\n* [REFACTOR] Refactored adv_cache generation flow.\n* [BUGFIX] Fixed issue where inline JS minify exception caused a blank page. (@oomskaap @kenb1978)\n* [UPDATE] Changed HTTP/2 Crawl default value to OFF.\n* [UPDATE] Added img.data-src to default WebP replacement value for WooCommerce WebP support.\n* [UPDATE] Detached crawler from LSCache LITESPEED_ON status.\n* [API] Improved ESI API to honor the cache control in ESI wrapper.\n* [API] Added LITESPEED_PURGE_SILENT const to bypass the notification when purging\n* [INTEGRATION] Fixed issue with nonce expiration when using ESI API. (#923505 @Dan)\n* [INTEGRATION] Improved compatibility with Ninja Forms by bypassing non-javascript JS from inline JS minify.\n* [INTEGRATION] Added a hook for plugins that change the CSS/JS path e.g. Hide My WordPress.\n\n= 2.2.2 - Apr 16 2018 =\n* [NEW FEATURE] WebP Attribute To Replace setting in Media tab. (@vengen)\n* [IMPROVEMENT] Generate adv_cache file automatically when it is lost.\n* [IMPROVEMENT] Improved compatibility with ajax login. (@veganostomy)\n* [UPDATE] Added object cache lib check in case user downgrades LSCWP to non-object-cache versions.\n* [UPDATE] Avoided infinite loop when users enter invalid hook values in Purge All Hooks settings.\n* [UPDATE] Updated log format in media&cdn class.\n* [UPDATE] Added more items to Report.\n\n= 2.2.1 - Apr 10 2018 =\n* [NEW FEATURE] Included Directories setting in CDN tab. (@Dave)\n* [NEW FEATURE] Purge All Hooks setting in Advanced tab.\n* [UPDATE] Added background-image WebP replacement support. (@vengen)\n* [UPDATE] Show recommended values for textarea items in settings.\n* [UPDATE] Moved CSS/JS optimizer log to Advanced level.\n* [INTEGRATION] Added WebP support for Avada Fusion Sliders. (@vengen)\n\n= 2.2.0.2 - Apr 3 2018 =\n* [HOTFIX] <strong>Object Cache</strong> Fixed the PHP warning caused by previous improvement to Object Cache.\n\n= 2.2.0.1 - Apr 3 2018 =\n* [HOTFIX] Object parameter will no longer cause warnings to be logged for Purge and Cache classes. (@kelltech @khrifat)\n* [UPDATE] Removed duplicated del_file func from Object Cache class.\n* [BUGFIX] `CLI` no longer shows 400 error upon successful result.\n\n= 2.2 - Apr 2 2018 =\n* [NEW FEATURE] <strong>Debug</strong> Disable All Features setting in Debug tab. (@monarobase)\n* [NEW FEATURE] <strong>Cache</strong> Force Cacheable URIs setting in Excludes tab.\n* [NEW FEATURE] <strong>Purge</strong> Purge all LSCache and other caches in one link.\n* [REFACTOR] <strong>Purge</strong> Refactored Purge class.\n* [BUGFIX] Query strings in DoNotCacheURI setting now works.\n* [BUGFIX] <strong>Cache</strong> Mobile cache compatibility with WebP vary. (@Shivam #987121)\n* [UPDATE] <strong>Purge</strong> Moved purge_all to Purge class from core class.\n* [API] Set cacheable/Set force cacheable. (@Jacob)\n\n= 2.1.2 - Mar 28 2018 =\n* [NEW FEATURE] <strong>Image Optimization</strong> Clean Up Unfinished Data feature.\n* [IAPI] IAPI v2.1.2.\n* [IMPROVEMENT] <strong>CSS/JS Minify</strong> Reduced loading time significantly by improving CSS/JS minify loading process. (@kokers)\n* [IMPROVEMENT] <strong>CSS/JS Minify</strong> Cache empty JS Minify content. (@kokers)\n* [IMPROVEMENT] <strong>Cache</strong> Cache 301 redirect when scheme/host are same.\n* [BUGFIX] <strong>Media</strong> Lazy load now can support WebP. (@relle)\n* [UPDATE] <strong>CSS/JS Optimize</strong> Serve static files for CSS async & lazy load JS library.\n* [UPDATE] <strong>Report</strong> Appended Basic/Advanced View setting to Report.\n* [UPDATE] <strong>CSS/JS Minify</strong> Removed zero-width space from CSS/JS content.\n* [GUI] Added Purge CSS/JS Cache link in Admin.\n\n= 2.1.1.1 - Mar 21 2018 =\n* [BUGFIX] Fixed issue where activation failed to add rules to .htaccess.\n* [BUGFIX] Fixed issue where 304 header was blank on feed page refresh.\n\n= 2.1.1 - Mar 20 2018 =\n* [NEW FEATURE] <strong>Browser Cache</strong> Unlocked for non-LiteSpeed users.\n* [IMPROVEMENT] <strong>Image Optimization</strong> Fixed issue where images with bad postmeta value continued to show in not-yet-requested queue.\n\n= 2.1 - Mar 15 2018 =\n* [NEW FEATURE] <strong>Image Optimization</strong> Unlocked for non-LiteSpeed users.\n* [NEW FEATURE] <strong>Object Cache</strong> Unlocked for non-LiteSpeed users.\n* [NEW FEATURE] <strong>Crawler</strong> Unlocked for non-LiteSpeed users.\n* [NEW FEATURE] <strong>Database Cleaner and Optimizer</strong> Unlocked for non-LiteSpeed users.\n* [NEW FEATURE] <strong>Lazy Load Images</strong> Unlocked for non-LiteSpeed users.\n* [NEW FEATURE] <strong>CSS/JS/HTML Minify/Combine Optimize</strong> Unlocked for non-LiteSpeed users.\n* [IAPI] IAPI v2.0.\n* [IAPI] Increased max rows prefetch when client has additional credit.\n* [IMPROVEMENT] <strong>CDN</strong> Multiple domains may now be used.\n* [IMPROVEMENT] <strong>Report</strong> Added WP environment constants for better debugging.\n* [REFACTOR] Separated Cloudflare CDN class.\n* [BUGFIX] <strong>Image Optimization</strong> Fixed issue where certain MySQL version failed to create img_optm table. (@philippwidmer)\n* [BUGFIX] <strong>Image Optimization</strong> Fixed issue where callback validation failed when pulling and sending request simultaneously.\n* [GUI] Added Slack community banner.\n* [INTEGRATION] CDN compatibility with WPML multiple domains. (@egemensarica)\n\n= 2.0 - Mar 7 2018 =\n* [NEW FEATURE] <strong>Image Optimization</strong> Added level up guidance.\n* [REFACTOR] <strong>Image Optimization</strong> Refactored Image Optimization class.\n* [IAPI] <strong>Image Optimization</strong> New European Image Optimization server (EU2).\n* [IMPROVEMENT] <strong>Image Optimization</strong> Manual pull action continues pulling until complete.\n* [IMPROVEMENT] <strong>CDN</strong> Multiple CDNs can now be randomized for a single resource.\n* [IMPROVEMENT] <strong>Image Optimization</strong> Improved compatibility of long src images.\n* [IMPROVEMENT] <strong>Image Optimization</strong> Reduced runtime load.\n* [IMPROVEMENT] <strong>Image Optimization</strong> Avoid potential loss/reset of notified images status when pulling.\n* [IMPROVEMENT] <strong>Image Optimization</strong> Avoid duplicated optimization for multiple records in Media that have the same image source.\n* [IMPROVEMENT] <strong>Image Optimization</strong> Fixed issue where phantom images continued to show in not-yet-requested queue.\n* [BUGFIX] <strong>Core</strong> Improved compatibility when upgrading outside of WP Admin. (@jikatal @TylorB)\n* [BUGFIX] <strong>Crawler</strong> Improved HTTP/2 compatibility to avoid erroneous blacklisting.\n* [BUGFIX] <strong>Crawler</strong> Changing Delay setting will use server variable for min value validation if set.\n* [UPDATE] <strong>Crawler</strong> Added HTTP/2 protocol switch in the Crawler settings.\n* [UPDATE] Removed unnecessary translation strings.\n* [GUI] Display translated role group name string instead of English values. (@Richard Hordern)\n* [GUI] Added Join LiteSpeed Slack link.\n* [GUI] <strong>Import / Export</strong> Cosmetic changes to Import Settings file field.\n* [INTEGRATION] Improved compatibility with WPML Media for Image Optimization. (@szmigieldesign)\n\n= 1.9.1.1 - February 20 2018 =\n* [Hotfix] Removed empty crawler when no role simulation is set.\n\n= 1.9.1 - February 20 2018 =\n* [NEW FEATURE] Role Simulation crawler.\n* [NEW FEATURE] WebP multiple crawler.\n* [NEW FEATURE] HTTP/2 support for crawler.\n* [BUGFIX] Fixed a js bug with the auto complete mobile user agents field when cache mobile is turned on.\n* [BUGFIX] Fixed a constant undefined warning after activation.\n* [GUI] Sitemap generation settings are no longer hidden when using a custom sitemap.\n\n= 1.9 - February 12 2018 =\n* [NEW FEATURE] Inline CSS/JS Minify.\n* [IMPROVEMENT] Removed Composer vendor to thin the plugin folder.\n* [UPDATE] Tweaked H2 to H1 in Admin headings for accessibility. (@steverep)\n* [GUI] Added Mobile User Agents to basic view.\n* [GUI] Moved Object Cache & Browser Cache from Cache tab to Advanced tab.\n* [GUI] Moved LSCache Purge All from Adminbar to dropdown menu.\n\n= 1.8.3 - February 2 2018 =\n* [NEW FEATURE] Crawler server variable limitation support.\n* [IMPROVEMENT] Added Store Transients option to fix transients missing issue when Cache Wp-Admin setting is OFF.\n* [IMPROVEMENT] Tweaked ARIA support. (@steverep)\n* [IMPROVEMENT] Used strpos instead of strncmp for performance. (@Zach E)\n* [BUGFIX] Transient cache can now be removed when the Cache Wp-Admin setting is ON in Object Cache.\n* [BUGFIX] Network sites can now save Advanced settings.\n* [BUGFIX] Media list now shows in network sites.\n* [BUGFIX] Show Crawler Status button is working again.\n* [UPDATE] Fixed a couple of potential PHP notices in the Network cache tab and when no vary group is set.\n* [GUI] Added Learn More link to all setting pages.\n\n= 1.8.2 - January 29 2018 =\n* [NEW FEATURE] Instant Click in the Advanced tab.\n* [NEW FEATURE] Import/Export settings.\n* [NEW FEATURE] Opcode Cache support.\n* [NEW FEATURE] Basic/Advanced setting view.\n* [IMPROVEMENT] Added ARIA support in widget settings.\n* [BUGFIX] Multiple WordPress instances with same Object Cache address will no longer see shared data.\n* [BUGFIX] WebP Replacement may now be set at the Network level.\n* [BUGFIX] Object Cache file can now be removed at the Network level uninstall.\n\n= 1.8.1 - January 22 2018 =\n* [NEW FEATURE] Object Cache now supports Redis.\n* [IMPROVEMENT] Memcached Object Cache now supports authorization.\n* [IMPROVEMENT] A 500 error will no longer be encountered when turning on Object Cache without the proper PHP extension installed.\n* [BUGFIX] Object Cache settings can now be saved at the Network level.\n* [BUGFIX] Mu-plugin now supports Network setting.\n* [BUGFIX] Fixed admin bar showing inaccurate Edit Page link.\n* [UPDATE] Removed warning information when no Memcached server is available.\n\n= 1.8 - January 17 2018 =\n* [NEW FEATURE] Object Cache.\n* [REFACTOR] Refactored Log class.\n* [REFACTOR] Refactored LSCWP basic const initialization.\n* [BUGFIX] Fixed Cloudflare domain search breaking when saving more than 50 domains under a single account.\n* [UPDATE] Log filter settings are now their own item in the wp-option table.\n\n= 1.7.2 - January 5 2018 =\n* [NEW FEATURE] Cloudflare API support.\n* [IMPROVEMENT] IAPI key can now be reset to avoid issues when domain is changed.\n* [BUGFIX] Fixed JS optimizer breaking certain plugins JS.\n* [UPDATE] Added cdn settings to environment report.\n* [GUI] Added more shortcuts to backend adminbar.\n* [INTEGRATION] WooCommerce visitors are now served from public cache when cart is empty.\n\n= 1.7.1.1 - December 29 2017 =\n* [BUGFIX] Fixed an extra trailing underscore issue when saving multiple lines with DNS Prefetch.\n* [UPDATE] Cleaned up unused dependency vendor files.\n\n= 1.7.1 - December 28 2017 =\n* [NEW FEATURE] Added DNS Prefetch setting on the Optimize page.\n* [NEW FEATURE] Added Combined File Max Size setting on the Tuning page.\n* [IMPROVEMENT] Improved JS/CSS minify to achieve higher page scores.\n* [IMPROVEMENT] Optimized JS/CSS files will not be served from private cache for OLS or with ESI off.\n* [UPDATE] Fixed a potential warning for new installations on the Settings page.\n* [UPDATE] Fixed an issue with guest users occasionally receiving PHP warnings.\n* [BUGFIX] Fixed a bug with the Improve HTTPS Compatibility setting failing to save.\n* Thanks to all of our users for your encouragement and support! Happy New Year!\n* PS: Lookout 2018, we're back!\n\n= 1.7 - December 22 2017 =\n* [NEW FEATURE] Drop Query Strings setting in the Cache tab.\n* [NEW FEATURE] Multiple CDN Mapping in the CDN tab.\n* [IMPROVEMENT] Improve HTTP/HTTPS Compatibility setting in the Advanced tab.\n* [IMPROVEMENT] Keep JS/CSS original position in HTML when excluded in setting.\n* [IAPI] Reset client level credit after Image Optimization data is destroyed.\n* [REFACTOR] Refactored build_input/textarea functions in admin_display class.\n* [REFACTOR] Refactored CDN class.\n* [GUI] Added a notice to Image Optimization and Crawler to warn when cache is disabled.\n* [GUI] Improved image optimization indicator styles in Media Library List.\n\n= 1.6.7 - December 15 2017 =\n* [IAPI] Added ability to scan for new image thumbnail sizes and auto-resend image optimization requests.\n* [IAPI] Added ability to destroy all optimization data.\n* [IAPI] Updated IAPI to v1.6.7.\n* [INTEGRATION] Fixed certain 3rd party plugins calling REST without user nonce causing logged in users to be served as guest.\n\n= 1.6.6.1 - December 8 2017 =\n* [IAPI] Limit first-time submission to one image group for test-run purposes.\n* [BUGFIX] Fixed vary group generation issue associated with custom user role plugins.\n* [BUGFIX] Fixed WooCommerce issue where logged-in users were erroneously purged when ESI is off.\n* [BUGFIX] Fixed WooCommerce cache miss issue when ESI is off.\n\n= 1.6.6 - December 6 2017 =\n* [NEW FEATURE] Preserve EXIF in Media setting.\n* [NEW FEATURE] Clear log button in Debug Log Viewer.\n* [IAPI] Fixed notified images resetting to previous status when pulling.\n* [IAPI] Fixed HTTPS compatibility for image optimization initialization.\n* [IAPI] An error message is now displayed when image optimization request submission is bypassed due to a lack of credit.\n* [IAPI] IAPI v1.6.6.\n* [IMPROVEMENT] Support JS data-no-optimize attribute to bypass optimization.\n* [GUI] Added image group wiki link.\n* [INTEGRATION] Improved compatibility with Login With Ajax.\n* [INTEGRATION] Added function_exists check for WooCommerce to avoid 500 errors.\n\n= 1.6.5.1 - December 1 2017 =\n* [HOTFIX] Fixed warning message on Edit .htaccess page.\n\n= 1.6.5 - November 30 2017 =\n* [IAPI] Manually pull image optimization action button.\n* [IAPI] Automatic credit system for image optimization to bypass unfinished image optimization error.\n* [IAPI] Notify failed images from LiteSpeed's Image Server.\n* [IAPI] Reset/Clear failed images feature.\n* [IAPI] Redesigned report page.\n* [REFACTOR] Moved pull_img logic from admin_api to media.\n* [BUGFIX] Fixed a compatibility issue for clients who have allow_url_open setting off.\n* [BUGFIX] Fixed logged in users sometimes being served from guest cache.\n* [UPDATE] Environment report is no longer saved to a file.\n* [UPDATE] Removed crawler reset notification.\n* [GUI] Added more details on image optimization.\n* [GUI] Removed info page from admin menu.\n* [GUI] Moved environment report from network level to single site level.\n* [GUI] Crawler time added in a user friendly format.\n* [INTEGRATION] Improved compatibility with FacetWP json call.\n\n= 1.6.4 - November 22 2017 =\n* [NEW FEATURE] Send env reports privately with a new built-in report number referral system.\n* [IAPI] Increased request timeout to fix a cUrl 28 timeout issue.\n* [BUGFIX] Fixed a TTL max value validation bug.\n* [INTEGRATION] Improved Contact Form 7 REST call compatibility for logged in users.\n* Thanks for all your ratings. That encouraged us to be more diligent. Happy Thanksgiving.\n\n= 1.6.3 - November 17 2017 =\n* [NEW FEATURE] Only async Google Fonts setting.\n* [NEW FEATURE] Only create WebP images when optimizing setting.\n* [NEW FEATURE] Batch switch images to original/optimized versions in Image Optimization.\n* [NEW FEATURE] Browser Cache TTL setting.\n* [NEW FEATURE] Cache WooCommerce Cart setting.\n* [IMPROVEMENT] Moved optimized JS/CSS snippet in header html to after meta charset.\n* [IMPROVEMENT] Added a constant for better JS/CSS optimization compatibility for different dir WordPress installation.\n* [IAPI] Take over failed callback check instead of bypassing it.\n* [IAPI] Image optimization requests are now limited to 500 images per request.\n* [BUGFIX] Fixed a parsing failure bug not using attributes in html elements with dash.\n* [BUGFIX] Fixed a bug causing non-script code to move to the top of a page when not using combination.\n* [UPDATE] Added detailed logs for external link detection.\n* [UPDATE] Added new lines in footer comment to avoid Firefox crash when enabled HTML minify.\n* [API] `Purge private` / `Purge private all` / `Add private tag` functions.\n* [GUI] Redesigned image optimization operation links in Media Lib list.\n* [GUI] Tweaked wp-admin form save button position.\n* [GUI] Added \"learn more\" link for image optimization.\n\n= 1.6.2.1 - November 6 2017 =\n* [INTEGRATION] Improved compatibility with old WooCommerce versions to avoid unknown 500 errors.\n* [BUGFIX] Fixed WebP images sometimes being used in non-supported browsers.\n* [BUGFIX] Kept query strings for HTTP/2 push to avoid re-fetching pushed sources.\n* [BUGFIX] Excluded JS/CSS from HTTP/2 push when using CDN.\n* [GUI] Fixed a typo in Media list.\n* [GUI] Made more image optimization strings translatable.\n* [GUI] Updated Tuning description to include API documentation.\n\n= 1.6.2 - November 3 2017 =\n* [NEW FEATURE] Do Not Cache Roles.\n* [NEW FEATURE] Use WebP Images for supported browsers.\n* [NEW FEATURE] Disable Optimization Poll ON/OFF Switch in Media tab.\n* [NEW FEATURE] Revert image optimization per image in Media list.\n* [NEW FEATURE] Disable/Enable image WebP per image in Media list.\n* [IAPI] Limit optimized images fetching cron to a single process.\n* [IAPI] Updated IAPI to v1.6.2.\n* [IAPI] Fixed repeating image request issue by adding a failure status to local images.\n* [REFACTOR] Refactored login vary logic.\n\n= 1.6.1 - October 29 2017 =\n* [IAPI] Updated LiteSpeed Image Optimization Server API to v1.6.1.\n\n= 1.6 - October 27 2017 =\n* [NEW FEATURE] Image Optimization.\n* [NEW FEATURE] Role Excludes for Optimization.\n* [NEW FEATURE] Combined CSS/JS Priority.\n* [IMPROVEMENT] Bypass CDN for login/register page.\n* [UPDATE] Expanded ExpiresByType rules to include new font types. ( Thanks to JMCA2 )\n* [UPDATE] Removed duplicated type param in admin action link.\n* [BUGFIX] Fixed CDN wrongly replacing img base64 and \"fake\" src in JS.\n* [BUGFIX] Fixed image lazy load replacing base64 src.\n* [BUGFIX] Fixed a typo in Optimize class exception.\n* [GUI] New Tuning tab in admin settings panel.\n* [REFACTOR] Simplified router by reducing actions and adding types.\n* [REFACTOR] Renamed `run()` to `finalize()` in buffer process.\n\n= 1.5 - October 17 2017 =\n* [NEW FEATURE] Exclude JQuery (to fix inline JS error when using JS Combine).\n* [NEW FEATURE] Load JQuery Remotely.\n* [NEW FEATURE] JS Deferred Excludes.\n* [NEW FEATURE] Lazy Load Images Excludes.\n* [NEW FEATURE] Lazy Load Image Placeholder.\n* [IMPROVEMENT] Improved Lazy Load size attribute for w3c validator.\n* [UPDATE] Added basic caching info and LSCWP version to HTML comment.\n* [UPDATE] Added debug log to HTML detection.\n* [BUGFIX] Fixed potential font CORS issue when using CDN.\n* [GUI] Added API docs to setting description.\n* [REFACTOR] Relocated all classes under includes with backwards compatibility.\n* [REFACTOR] Relocated admin templates.\n\n= 1.4 - October 11 2017 =\n* [NEW FEATURE] Lazy load images/iframes.\n* [NEW FEATURE] Clean CSS/JS optimizer data functionality in DB Optimizer panel.\n* [NEW FEATURE] Exclude certain URIs from optimizer.\n* [IMPROVEMENT] Improved optimizer HTML check compatibility to avoid conflicts with ESI functions.\n* [IMPROVEMENT] Added support for using ^ when matching the start of a path in matching settings.\n* [IMPROVEMENT] Added wildcard support in CDN original URL.\n* [IMPROVEMENT] Moved optimizer table initialization to admin setting panel with failure warning.\n* [UPDATE] Added a one-time welcome banner.\n* [UPDATE] Partly relocated class: 'api'.\n* [API] Added API wrapper for removing wrapped HTML output.\n* [INTEGRATION] Fixed WooCommerce conflict with optimizer.\n* [INTEGRATION] Private cache support for WooCommerce v3.2.0+.\n* [GUI] Added No Optimization menu to frontend.\n\n= 1.3.1.1 - October 6 2017 =\n* [BUGFIX] Improved optimizer table creating process in certain database charset to avoid css/js minify/combination failure.\n\n= 1.3.1 - October 5 2017 =\n* [NEW FEATURE] Remove WP Emoji Option.\n* [IMPROVEMENT] Separated optimizer data from wp_options to improve compatibility with backup plugins.\n* [IMPROVEMENT] Enhanced crawler cron hook to prevent de-scheduling in some cases.\n* [IMPROVEMENT] Enhanced Remove Query Strings to also remove Emoji query strings.\n* [IMPROVEMENT] Enhanced HTML detection when extra spaces are present at the beginning.\n* [UPDATE] Added private cache support for OLS.\n* [BUGFIX] Self-redirects are no longer cached.\n* [BUGFIX] Fixed css async lib warning when loading in HTTP/2 push.\n\n= 1.3 - October 1 2017 =\n* [NEW FEATURE] Added Browser Cache support.\n* [NEW FEATURE] Added Remove Query Strings support.\n* [NEW FEATURE] Added Remove Google Fonts support.\n* [NEW FEATURE] Added Load CSS Asynchronously support.\n* [NEW FEATURE] Added Load JS Deferred support.\n* [NEW FEATURE] Added Critical CSS Rules support.\n* [NEW FEATURE] Added Private Cached URIs support.\n* [NEW FEATURE] Added Do Not Cache Query Strings support.\n* [NEW FEATURE] Added frontend adminbar shortcuts ( Purge this page/Do Not Cache/Private cache ).\n* [IMPROVEMENT] Do Not Cache URIs now supports full URLs.\n* [IMPROVEMENT] Improved performance of Do Not Cache settings.\n* [IMPROVEMENT] Encrypted vary cookie.\n* [IMPROVEMENT] Enhanced HTML optimizer.\n* [IMPROVEMENT] Limited combined file size to avoid heavy memory usage.\n* [IMPROVEMENT] CDN supports custom upload folder for media files.\n* [API] Added purge single post API.\n* [API] Added version compare API.\n* [API] Enhanced ESI API for third party plugins.\n* [INTEGRATION] Compatibility with NextGEN Gallery v2.2.14.\n* [INTEGRATION] Compatibility with Caldera Forms v1.5.6.2+.\n* [BUGFIX] Fixed CDN&Minify compatibility with css url links.\n* [BUGFIX] Fixed .htaccess being regenerated despite there being no changes.\n* [BUGFIX] Fixed CDN path bug for subfolder WP instance.\n* [BUGFIX] Fixed crawler path bug for subfolder WP instance with different site url and home url.\n* [BUGFIX] Fixed a potential Optimizer generating redundant duplicated JS in HTML bug.\n* [GUI] Added a more easily accessed submit button in admin settings.\n* [GUI] Admin settings page cosmetic changes.\n* [GUI] Reorganized GUI css/img folder structure.\n* [REFACTOR] Refactored configuration init.\n* [REFACTOR] Refactored admin setting save.\n* [REFACTOR] Refactored .htaccess operator and rewrite rule generation.\n\n= 1.2.3.1 - September 20 2017 =\n* [UPDATE] Improved PHP5.3 compatibility.\n\n= 1.2.3 - September 20 2017 =\n* [NEW FEATURE] Added CDN support.\n* [IMPROVEMENT] Improved compatibility when upgrading by fixing a possible fatal error.\n* [IMPROVEMENT] Added support for custom wp-content paths.\n* [BUGFIX] Fixed non-primary network blogs not being able to minify.\n* [BUGFIX] Fixed HTML Minify preventing Facebook from being able to parse og tags.\n* [BUGFIX] Preview page is no longer cacheable.\n* [BUGFIX] Corrected log and crawler timezone to match set WP timezone.\n* [GUI] Revamp of plugin GUI.\n\n= 1.2.2 - September 15 2017 =\n* [NEW FEATURE] Added CSS/JS minification.\n* [NEW FEATURE] Added CSS/JS combining.\n* [NEW FEATURE] Added CSS/JS HTTP/2 server push.\n* [NEW FEATURE] Added HTML minification.\n* [NEW FEATURE] Added CSS/JS cache purge button in management.\n* [UPDATE] Improved debug log formatting.\n* [UPDATE] Fixed some description typos.\n\n= 1.2.1 - September 7 2017 =\n* [NEW FEATURE] Added Database Optimizer.\n* [NEW FEATURE] Added Tab switch shortcut.\n* [IMPROVEMENT] Added cache disabled check for management pages.\n* [IMPROVEMENT] Renamed .htaccess backup for security.\n* [BUGFIX] Fixed woocommerce default ESI setting bug.\n* [REFACTOR] Show ESI page for OLS with notice.\n* [REFACTOR] Management Purge GUI updated.\n\n= 1.2.0.1 - September 1 2017 =\n* [BUGFIX] Fixed a naming bug for network constant ON2.\n\n= 1.2.0 - September 1 2017 =\n* [NEW FEATURE] Added ESI support.\n* [NEW FEATURE] Added a private cache TTL setting.\n* [NEW FEATURE] Debug level can now be set to either 'Basic' or 'Advanced'.\n* [REFACTOR] Renamed const 'NOTSET' to 'ON2' in class config.\n\n= 1.1.6 - August 23 2017 =\n* [NEW FEATURE] Added option to privately cache logged-in users.\n* [NEW FEATURE] Added option to privately cache commenters.\n* [NEW FEATURE] Added option to cache requests made through WordPress REST API.\n* [BUGFIX] Fixed network 3rd-party full-page cache detection bug.\n* [GUI] New Cache and Purge menus in Settings.\n\n= 1.1.5.1 - August 16 2017 =\n* [IMPROVEMENT] Improved compatibility of frontend&backend .htaccess path detection when site url is different than installation path.\n* [UPDATE] Removed unused format string from header tags.\n* [BUGFIX] 'showheader' Admin Query String now works.\n* [REFACTOR] Cache tags will no longer output if not needed.\n\n= 1.1.5 - August 10 2017 =\n* [NEW FEATURE] Scheduled Purge URLs feature.\n* [NEW FEATURE] Added buffer callback to improve compatibility with some plugins that force buffer cleaning.\n* [NEW FEATURE] Hide purge_all admin bar quick link if cache is disabled.\n* [NEW FEATURE] Required htaccess rules are now displayed when .htaccess is not writable.\n* [NEW FEATURE] Debug log features: filter log support; heartbeat control; log file size limit; log viewer.\n* [IMPROVEMENT] Separate crawler access log.\n* [IMPROVEMENT] Lazy PURGE requests made after output are now queued and working.\n* [IMPROVEMENT] Improved readme.txt with keywords relating to our compatible plugins list.\n* [UPDATE] 'ExpiresDefault' conflict msg is now closeable and only appears in the .htaccess edit screen.\n* [UPDATE] Improved debug log formatting.\n* [INTEGRATION] Compatibility with MainWP plugin.\n* [BUGFIX] Fixed WooCommerce order not purging product stock quantity.\n* [BUGFIX] Fixed WooCommerce scheduled sale price not updating issue.\n* [REFACTOR] Combined cache_enable functions into a single function.\n\n= 1.1.4 - August 1 2017 =\n* [IMPROVEMENT] Unexpected rewrite rules will now show an error message.\n* [IMPROVEMENT] Added Cache Tag Prefix setting info in the Env Report and Info page.\n* [IMPROVEMENT] LSCWP setting link is now displayed in the plugin list.\n* [IMPROVEMENT] Improved performance when setting cache control.\n* [UPDATE] Added backward compatibility for v1.1.2.2 API calls. (used by 3rd-party plugins)\n* [BUGFIX] Fixed WPCLI purge tag/category never succeeding.\n\n= 1.1.3 - July 31 2017 =\n* [NEW FEATURE] New LiteSpeed_Cache_API class and documentation for 3rd party integration.\n* [NEW FEATURE] New API function litespeed_purge_single_post($post_id).\n* [NEW FEATURE] PHP CLI support for crawler.\n* [IMPROVEMENT] Set 'no cache' for same location 301 redirects.\n* [IMPROVEMENT] Improved LiteSpeed footer comment compatibility.\n* [UPDATE] Removed 'cache tag prefix' setting.\n* [BUGFIX] Fixed a bug involving CLI purge all.\n* [BUGFIX] Crawler now honors X-LiteSpeed-Cache-Control for the 'no-cache' header.\n* [BUGFIX] Cache/rewrite rules are now cleared when the plugin is uninstalled.\n* [BUGFIX] Prevent incorrect removal of the advanced-cache.php on deactivation if it was added by another plugin.\n* [BUGFIX] Fixed subfolder WP installations being unable to Purge By URL using a full URL path.\n* [REFACTOR] Reorganized existing code for an upcoming ESI release.\n\n= 1.1.2.2 - July 13 2017 =\n* [BUGFIX] Fixed blank page in Hebrew language post editor by removing unused font-awesome and jquery-ui css libraries.\n\n= 1.1.2.1 - July 5 2017 =\n* [UPDATE] Improved compatibility with WooCommerce v3.1.0.\n\n= 1.1.2 - June 20 2017 =\n* [BUGFIX] Fixed missing form close tag.\n* [UPDATE] Added a wiki link for enabling the crawler.\n* [UPDATE] Improved Site IP description.\n* [UPDATE] Added an introduction to the crawler on the Information page.\n* [REFACTOR] Added more detailed error messages for Site IP and Custom Sitemap settings.\n\n= 1.1.1.1 - June 15 2017 =\n* [BUGFIX] Hotfix for insufficient validation of site IP value in crawler settings.\n\n= 1.1.1 - June 15 2017 =\n* [NEW] As of LiteSpeed Web Server v.5.1.16, the crawler can now be enabled/disabled at the server level.\n* [NEW] Added the ability to provide a custom sitemap for crawling.\n* [NEW] Added ability to use site IP address directly in crawler settings.\n* [NEW] Crawler performance improved with the use of new custom user agent 'lsrunner'.\n* [NEW] \"Purge By URLs\" now supports full URL paths.\n* [NEW] Added thirdparty WP-PostRatings compatibility.\n* [BUGFIX] Cache is now cleared when changing post status from published to draft.\n* [BUGFIX] WHM activation message no longer continues to reappear after being dismissed.\n* [COSMETIC] Display recommended values for settings.\n\n= 1.1.0.1 - June 8 2017 =\n* [UPDATE] Improved default crawler interval setting.\n* [UPDATE] Tested up to WP 4.8.\n* [BUGFIX] Fixed compatibility with plugins that output json data.\n* [BUGFIX] Fixed tab switching bug.\n* [BUGFIX] Removed occasional duplicated messages on save.\n* [COSMETIC] Improved crawler tooltips and descriptions.\n\n= 1.1.0 - June 6 2017 =\n* [NEW] Added a crawler - this includes configuration options and a dedicated admin page. Uses wp-cron\n* [NEW] Added integration for WPLister\n* [NEW] Added integration for Avada\n* [UPDATE] General structure of the plugin revamped\n* [UPDATE] Improved look of admin pages\n* [BUGFIX] Fix any/all wp-content path retrieval issues\n* [BUGFIX] Use realpath to clear symbolic link when determining .htaccess paths\n* [BUGFIX] Fixed a bug where upgrading multiple plugins did not trigger a purge all\n* [BUGFIX] Fixed a bug where cli import_options did not actually update the options.\n* [REFACTOR] Most of the files in the code were split into more, smaller files\n\n= 1.0.15 - April 20 2017 =\n* [NEW] Added Purge Pages and Purge Recent Posts Widget pages options.\n* [NEW] Added wp-cli command for setting and getting options.\n* [NEW] Added an import/export options cli command.\n* [NEW] Added wpForo integration.\n* [NEW] Added Theme My Login integration.\n* [UPDATE] Purge adjacent posts when publish a new post.\n* [UPDATE] Change environment report file to .php and increase security.\n* [UPDATE] Added new purgeby option to wp-cli.\n* [UPDATE] Remove nag for multiple sites.\n* [UPDATE] Only inject LiteSpeed javascripts in LiteSpeed pages.\n* [REFACTOR] Properly check for zero in ttl settings.\n* [BUGFIX] Fixed the 404 issue that can be caused by some certain plugins when save the settings.\n* [BUGFIX] Fixed mu-plugin compatibility.\n* [BUGFIX] Fixed problem with creating zip backup.\n* [BUGFIX] Fixed conflict with jetpack.\n\n= 1.0.14.1 - January 31 2017 =\n* [UPDATE] Removed Freemius integration due to feedback.\n\n= 1.0.14 - January 30 2017 =\n* [NEW] Added error page caching. Currently supports 403, 404, 500s.\n* [NEW] Added a purge errors action.\n* [NEW] Added wp-cli integration.\n* [UPDATE] Added support for multiple varies.\n* [UPDATE] Reorganize the admin interface to be less cluttered.\n* [UPDATE] Add support for LiteSpeed Web ADC.\n* [UPDATE] Add Freemius integration.\n* [REFACTOR] Made some changes so that the rewrite rules are a little more consistent.\n* [BUGFIX] Check member type before adding purge all button.\n* [BUGFIX] Fixed a bug where activating/deactivating the plugin quickly caused the WP_CACHE error to show up.\n* [BUGFIX] Handle more characters in the rewrite parser.\n* [BUGFIX] Correctly purge posts when they are made public/private.\n\n= 1.0.13.1 - November 30 2016 =\n* [BUGFIX] Fixed a bug where a global was being used without checking existence first, causing unnecessary log entries.\n\n= 1.0.13 - November 28 2016 =\n* [NEW] Add an Empty Entire Cache button.\n* [NEW] Add stale logic to certain purge actions.\n* [NEW] Add option to use primary site settings for all subsites in a multisite environment.\n* [NEW] Add support for Aelia CurrencySwitcher\n* [UPDATE] Add logic to allow third party vary headers\n* [UPDATE] Handle password protected pages differently.\n* [BUGFIX] Fixed bug caused by saving settings.\n* [BUGFIX] FIxed bug when searching for advanced-cache.php\n\n= 1.0.12 - November 14 2016 =\n* [NEW] Added logic to generate environment reports.\n* [NEW] Created a notice that will be triggered when the WHM Plugin installs this plugin. This will notify users when the plugin is installed by their server admin.\n* [NEW] Added the option to cache 404 pages via 404 Page TTL setting.\n* [NEW] Reworked log system to be based on selection of yes or no instead of log level.\n* [NEW] Added support for Autoptimize.\n* [NEW] Added Better WP Minify integration.\n* [UPDATE] On plugin disable, clear .htaccess.\n* [UPDATE] Introduced URL tag. Changed Purge by URL to use this new tag.\n* [BUGFIX] Fixed a bug triggered when .htaccess files were empty.\n* [BUGFIX] Correctly determine when to clear files in multisite environments (wp-config, advanced-cache, etc.).\n* [BUGFIX] When disabling the cache, settings changed in the same save will now be saved.\n* [BUGFIX] Various bugs from setting changes and multisite fixed.\n* [BUGFIX] Fixed two bugs with the .htaccess path search.\n* [BUGFIX] Do not alter $_GET in add_quick_purge. This may cause issues for functionality occurring later in the same request.\n* [BUGFIX] Right to left radio settings were incorrectly displayed. The radio buttons themselves were the opposite direction of the associated text.\n\n= 1.0.11 - October 11 2016 =\n* [NEW] The plugin will now set cachelookup public on.\n* [NEW] New option - check advanced-cache.php. This enables users to have two caching plugins enabled at the same time as long as the other plugin is not used for caching purposes. For example, using another cache plugin for css/js minification.\n* [UPDATE] Rules added by the plugin will now be inserted into an LSCACHE START/END PLUGIN comment block.\n* [UPDATE] For woocommerce pages, if a user visits a non-cached page with a non-empty cart, do not cache the page.\n* [UPDATE] If woocommerce needs to display any notice, do not cache the page.\n* [UPDATE] Single site settings are now in both the litespeed cache submenu and the settings submenu.\n* [BUGFIX] Multisite network options were not updated on upgrade. This is now corrected.\n\n= 1.0.10 - September 16 2016 =\n* Added a check for LSCACHE_NO_CACHE definition.\n* Added a Purge All button to the admin bar.\n* Added logic to purge the cache when upgrading a plugin or theme. By default this is enabled on single site installations and disabled on multisite installations.\n* Added support for WooCommerce Versions < 2.5.0.\n* Added .htaccess backup rotation. Every 10 backups, an .htaccess archive will be created. If one already exists, it will be overwritten.\n* Moved some settings to the new Specific Pages tab to reduce clutter in the General tab.\n* The .htaccess editor is now disabled if DISALLOW_FILE_EDIT is set.\n* After saving the Cache Tag Prefix setting, all cache will be purged.\n\n= 1.0.9.1 - August 26 2016 =\n* Fixed a bug where an error displayed on the configuration screen despite not being an error.\n* Change logic to check .htaccess file less often.\n\n= 1.0.9 - August 25 2016 =\n* [NEW] Added functionality to cache and purge feeds.\n* [NEW] Added cache tag prefix setting to avoid conflicts when using LiteSpeed Cache for WordPress with LiteSpeed Cache for XenForo and LiteMage.\n* [NEW] Added hooks to allow third party plugins to create config options.\n* [NEW] Added WooCommerce config options.\n* The plugin now also checks for wp-config in the parent directory.\n* Improved WooCommerce support.\n* Changed .htaccess backup process. Will create a .htaccess_lscachebak_orig file if one does not exist. If it does already exist, creates a backup using the date and timestamp.\n* Fixed a bug where get_home_path() sometimes returned an invalid path.\n* Fixed a bug where if the .htaccess was removed from a WordPress subdirectory, it was not handled properly.\n\n= 1.0.8.1 - July 28 2016 =\n* Fixed a bug where check cacheable was sometimes not hit.\n* Fixed a bug where extra slashes in clear rules were stripped.\n\n= 1.0.8 - July 25 2016 =\n* Added purge all on update check to purge by post id logic.\n* Added uninstall logic.\n* Added configuration for caching favicons.\n* Added configuration for caching the login page.\n* Added configuration for caching php resources (scripts/stylesheets accessed as .php).\n* Set login cookie if user is logged in and it isn’t set.\n* Improved NextGenGallery support to include new actions.\n* Now displays a notice on the network admin if WP_CACHE is not set.\n* Fixed a few php syntax issues.\n* Fixed a bug where purge by pid didn’t work.\n* Fixed a bug where the Network Admin settings were shown when the plugin was active in a subsite, but not network active.\n* Fixed a bug where the Advanced Cache check would sometimes not work.\n\n= 1.0.7.1 - May 26 2016 =\n* Fixed a bug where enabling purge all in the auto purge on update settings page did not purge the correct blogs.\n* Fixed a bug reported by user wpc on our forums where enabling purge all in the auto purge on update settings page caused nothing to be cached.\n\n= 1.0.7 - May 24 2016 =\n* Added login cookie configuration to the Advanced Settings page.\n* Added support for WPTouch plugin.\n* Added support for WP-Polls plugin.\n* Added Like Dislike Counter third party integration.\n* Added support for Admin IP Query String Actions.\n* Added confirmation pop up for purge all.\n* Refactor: LiteSpeed_Cache_Admin is now split into LiteSpeed_Cache_Admin, LiteSpeed_Cache_Admin_Display, and LiteSpeed_Cache_Admin_Rules\n* Refactor: Rename functions to accurately represent their functionality\n* Fixed a bug that sometimes caused a “no valid header” error message.\n\n= 1.0.6 - May 5 2016 =\n* Fixed a bug reported by Knut Sparhell that prevented dashboard widgets from being opened or closed.\n* Fixed a bug reported by Knut Sparhell that caused problems with https support for admin pages.\n\n= 1.0.5 - April 26 2016 =\n* [BETA] Added NextGen Gallery plugin support.\n* Added third party plugin integration.\n* Improved cache tag system.\n* Improved formatting for admin settings pages.\n* Converted bbPress to use the new third party integration system.\n* Converted WooCommerce to use the new third party integration system.\n* If .htaccess is not writable, disable separate mobile view and do not cache cookies/user agents.\n* Cache is now automatically purged when disabled.\n* Fixed a bug where .htaccess was not checked properly when adding common rules.\n* Fixed a bug where multisite setups would be completely purged when one site requested a purge all.\n\n= 1.0.4 - April 7 2016 =\n* Added logic to cache commenters.\n* Added htaccess backup to the install script.\n* Added an htaccess editor in the wp-admin dashboard.\n* Added do not cache user agents.\n* Added do not cache cookies.\n* Created new LiteSpeed Cache Settings submenu entries.\n* Implemented Separate Mobile View.\n* Modified WP_CACHE not defined message to only show up for users who can manage options.\n* Moved enabled all/disable all from network management to network settings.\n* Fixed a bug where WP_CACHE was not defined on activation if it was commented out.\n\n= 1.0.3 - March 23 2016 =\n* Added a Purge Front Page button to the LiteSpeed Cache Management page.\n* Added a Default Front Page TTL option to the general settings.\n* Added ability to define web application specific cookie names through rewrite rules to handle logged-in cookie conflicts when using multiple web applications. <strong>[Requires LSWS 5.0.15+]</strong>\n* Improved WooCommerce handling.\n* Fixed a bug where activating lscwp sets the “enable cache” radio button to enabled, but the cache was not enabled by default.\n* Refactored code to make it cleaner.\n* Updated readme.txt.\n\n= 1.0.2 - March 11 2016 =\n* Added a \"Use Network Admin Setting\" option for \"Enable LiteSpeed Cache\". For single sites, this choice will default to enabled.\n* Added enable/disable all buttons for network admin. This controls the setting of all managed sites with \"Use Network Admin Setting\" selected for \"Enable LiteSpeed Cache\".\n* Exclude by Category/Tag are now text areas to avoid slow load times on the LiteSpeed Cache Settings page for sites with a large number of categories/tags.\n* Added a new line to advanced-cache.php to allow identification as a LiteSpeed Cache file.\n* Activation/Deactivation are now better handled in multi-site environments.\n* Enable LiteSpeed Cache setting is now a radio button selection instead of a single checkbox.\n* Can now add '$' to the end of a URL in Exclude URI to perform an exact match.\n* The _lscache_vary cookie will now be deleted upon logout.\n* Fixed a bug in multi-site setups that would cause a \"function already defined\" error.\n\n= 1.0.1 - March 8 2016 =\n* Added Do Not Cache by URI, by Category, and by Tag.  URI is a prefix/string equals match.\n* Added a help tab for plugin compatibilities.\n* Created logic for other plugins to purge a single post if updated.\n* Fixed a bug where woocommerce pages that display the cart were cached.\n* Fixed a bug where admin menus in multi-site setups were not correctly displayed.\n* Fixed a bug where logged in users were served public cached pages.\n* Fixed a compatibility bug with bbPress.  If there is a new forum/topic/reply, the parent pages will now be purged as well.\n* Fixed a bug that didn't allow cron job to update scheduled posts.\n\n= 1.0.0 - January 20 2016 =\n* Initial Release.\n"},{"base":"plugins","rel":"litespeed-cache/assets/js/guest.min.js","ext":"js","size":373,"mtime":1757312769,"type":"text","content":"var litespeed_vary=document.cookie.replace(/(?:(?:^|.*;\\s*)_lscache_vary\\s*\\=\\s*([^;]*).*$)|^.*$/,\"$1\");litespeed_vary||fetch(\"litespeed_url\",{method:\"POST\",cache:\"no-cache\",redirect:\"follow\"}).then(e=>e.json()).then(e=>{console.log(e),e.hasOwnProperty(\"reload\")&&\"yes\"==e.reload&&(sessionStorage.setItem(\"litespeed_docref\",document.referrer),window.location.reload(!0))});"},{"base":"plugins","rel":"litespeed-cache/assets/js/guest.docref.min.js","ext":"js","size":215,"mtime":1757312769,"type":"text","content":"var litespeed_docref=sessionStorage.getItem(\"litespeed_docref\");litespeed_docref&&(Object.defineProperty(document,\"referrer\",{get:function(){return litespeed_docref}}),sessionStorage.removeItem(\"litespeed_docref\"));"},{"base":"plugins","rel":"litespeed-cache/assets/js/css_async.min.js","ext":"js","size":1353,"mtime":1757312769,"type":"text","content":"!function(a){\"use strict\";var b=function(b,c,d){function e(a){return h.body?a():void setTimeout(function(){e(a)})}function f(){i.addEventListener&&i.removeEventListener(\"load\",f),i.media=d||\"all\"}var g,h=a.document,i=h.createElement(\"link\");if(c)g=c;else{var j=(h.body||h.getElementsByTagName(\"head\")[0]).childNodes;g=j[j.length-1]}var k=h.styleSheets;i.rel=\"stylesheet\",i.href=b,i.media=\"only x\",e(function(){g.parentNode.insertBefore(i,c?g:g.nextSibling)});var l=function(a){for(var b=i.href,c=k.length;c--;)if(k[c].href===b)return a();setTimeout(function(){l(a)})};return i.addEventListener&&i.addEventListener(\"load\",f),i.onloadcssdefined=l,l(f),i};\"undefined\"!=typeof exports?exports.loadCSS=b:a.loadCSS=b}(\"undefined\"!=typeof global?global:this);!function(a){if(a.loadCSS){var b=loadCSS.relpreload={};if(b.support=function(){try{return a.document.createElement(\"link\").relList.supports(\"preload\")}catch(b){return!1}},b.poly=function(){for(var b=a.document.getElementsByTagName(\"link\"),c=0;c<b.length;c++){var d=b[c];\"preload\"===d.rel&&\"style\"===d.getAttribute(\"as\")&&(a.loadCSS(d.href,d,d.getAttribute(\"media\")),d.rel=null)}},!b.support()){b.poly();var c=a.setInterval(b.poly,300);a.addEventListener&&a.addEventListener(\"load\",function(){b.poly(),a.clearInterval(c)}),a.attachEvent&&a.attachEvent(\"onload\",function(){a.clearInterval(c)})}}}(this);"},{"base":"plugins","rel":"litespeed-cache/assets/js/litespeed-cache-admin.js","ext":"js","size":8704,"mtime":1757312769,"type":"text","content":"(function ($) {\n\t'use strict';\n\n\t/**\n\t * All of the code for your public-facing JavaScript source\n\t * should reside in this file.\n\t *\n\t * Note: It has been assumed you will write jQuery code here, so the\n\t * $ function reference has been prepared for usage within the scope\n\t * of this function.\n\t *\n\t * This enables you to define handlers, for when the DOM is ready:\n\t *\n\t * $(function() {\n\t *\n\t * }) ;\n\t *\n\t * When the window is loaded:\n\t *\n\t * $( window ).load(function() {\n\t *\n\t * }) ;\n\t *\n\t * ...and/or other possibilities.\n\t *\n\t * Ideally, it is not considered best practise to attach more than a\n\t * single DOM-ready or window-load handler for a particular page.\n\t * Although scripts in the WordPress core, Plugins and Themes may be\n\t * practising this, we should strive to set a better example in our own work.\n\t */\n\n\tjQuery(document).ready(function () {\n\t\t/************** Common LiteSpeed JS **************/\n\t\t// Link confirm\n\t\t$('[data-litespeed-cfm]').on('click', function (event) {\n\t\t\tcfm_txt = $.trim($(this).data('litespeed-cfm')).replace(/\\\\n/g, '\\n');\n\t\t\tif (cfm_txt === '') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (confirm(cfm_txt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopImmediatePropagation();\n\t\t\treturn false;\n\t\t});\n\n\t\t/************** LSWCP JS ****************/\n\t\t// page tab switch functionality\n\t\t(function () {\n\t\t\tvar hash = window.location.hash.substr(1);\n\t\t\tvar $tabs = $('[data-litespeed-tab]');\n\t\t\tvar $subtabs = $('[data-litespeed-subtab]');\n\n\t\t\t// Handle tab and subtab events\n\t\t\tvar tab_action = function ($elems, type) {\n\t\t\t\ttype = litespeed_tab_type(type);\n\t\t\t\tvar data = 'litespeed-' + type;\n\t\t\t\t$elems.on('click', function (_event) {\n\t\t\t\t\tlitespeed_display_tab($(this).data(data), type);\n\t\t\t\t\tdocument.cookie = 'litespeed_' + type + '=' + $(this).data(data);\n\t\t\t\t\t$(this).blur();\n\t\t\t\t});\n\t\t\t};\n\t\t\ttab_action($tabs);\n\t\t\ttab_action($subtabs, 'subtab');\n\n\t\t\tif (!$tabs.length > 0) {\n\t\t\t\t// No tabs exist\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Find hash in tabs and subtabs\n\t\t\tvar $hash_tab = $tabs.filter('[data-litespeed-tab=\"' + hash + '\"]:first');\n\t\t\tvar $hash_subtab = $subtabs.filter('[data-litespeed-subtab=\"' + hash + '\"]:first');\n\n\t\t\t// Find tab name\n\t\t\tvar $subtab;\n\t\t\tvar $tab;\n\t\t\tvar tab_name;\n\t\t\tif ($hash_subtab.length > 0) {\n\t\t\t\t// Hash is a subtab\n\t\t\t\t$tab = $hash_subtab.closest('[data-litespeed-layout]');\n\t\t\t\tif ($tab.length > 0) {\n\t\t\t\t\t$subtab = $hash_subtab;\n\t\t\t\t\ttab_name = $tab.data('litespeed-layout');\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof $tab === 'undefined' || $tab.length < 1) {\n\t\t\t\t// Maybe hash is a tab\n\t\t\t\t$tab = $hash_tab;\n\t\t\t\tif ($tab.length < 1) {\n\t\t\t\t\t// Maybe tab cookie exists\n\t\t\t\t\t$tab = litespeed_tab_cookie($tabs);\n\t\t\t\t\tif ($tab.length < 1) {\n\t\t\t\t\t\t// Use the first tab by default\n\t\t\t\t\t\t$tab = $tabs.first();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof tab_name === 'undefined') {\n\t\t\t\t\ttab_name = $tab.data('litespeed-tab');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Always display a tab\n\t\t\tlitespeed_display_tab(tab_name);\n\n\t\t\t// Find subtab name\n\t\t\tif (typeof $subtab === 'undefined' || $subtab.length < 1) {\n\t\t\t\t$subtab = litespeed_tab_cookie($subtabs, 'subtab');\n\t\t\t}\n\t\t\tif ($subtab.length > 0) {\n\t\t\t\tvar subtab_name = $subtab.data('litespeed-subtab');\n\t\t\t\t// Display a subtab\n\t\t\t\tlitespeed_display_tab(subtab_name, 'subtab');\n\t\t\t}\n\t\t})();\n\n\t\t/******************** Clear whm msg ********************/\n\t\t$(document).on('click', '.lscwp-whm-notice .notice-dismiss', function () {\n\t\t\t$.get(litespeed_data.ajax_url_dismiss_whm);\n\t\t});\n\t\t/******************** Clear rule conflict msg ********************/\n\t\t$(document).on('click', '.lscwp-notice-ruleconflict .notice-dismiss', function () {\n\t\t\t$.get(litespeed_data.ajax_url_dismiss_ruleconflict);\n\t\t});\n\n\t\t/** Accesskey **/\n\t\t$('[litespeed-accesskey]').map(function () {\n\t\t\tvar thiskey = $(this).attr('litespeed-accesskey');\n\t\t\tif (thiskey == '') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$(this).attr('title', 'Shortcut : ' + thiskey.toLocaleUpperCase());\n\t\t\tvar that = this;\n\t\t\t$(document).on('keydown', function (e) {\n\t\t\t\tif ($(':input:focus').length > 0) return;\n\t\t\t\tif (event.metaKey) return;\n\t\t\t\tif (event.ctrlKey) return;\n\t\t\t\tif (event.altKey) return;\n\t\t\t\tif (event.shiftKey) return;\n\t\t\t\tif (litespeed_keycode(thiskey.charCodeAt(0))) $(that)[0].click();\n\t\t\t});\n\t\t});\n\n\t\t/** Lets copy one more submit button **/\n\t\tif ($('input[name=\"LSCWP_CTRL\"]').length > 0) {\n\t\t\tvar btn = $('input.litespeed-duplicate-float');\n\t\t\tbtn.clone().addClass('litespeed-float-submit').removeAttr('id').insertAfter(btn);\n\t\t}\n\t\tif ($('input[id=\"LSCWP_NONCE\"]').length > 0) {\n\t\t\t$('input[id=\"LSCWP_NONCE\"]').removeAttr('id');\n\t\t}\n\n\t\t/**\n\t\t * Human readable time conversation\n\t\t * @since  3.0\n\t\t */\n\t\tif ($('[data-litespeed-readable]').length > 0) {\n\t\t\t$('[data-litespeed-readable]').each(function (index, el) {\n\t\t\t\tvar that = this;\n\t\t\t\tvar $input = $(this).siblings('input[type=\"text\"]');\n\n\t\t\t\tvar txt = litespeed_readable_time($input.val());\n\t\t\t\t$(that).html(txt ? '= ' + txt : '');\n\n\t\t\t\t$input.on('keyup', function (event) {\n\t\t\t\t\tvar txt = litespeed_readable_time($(this).val());\n\t\t\t\t\t$(that).html(txt ? '= ' + txt : '');\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Click only once\n\t\t */\n\t\tif ($('[data-litespeed-onlyonce]').length > 0) {\n\t\t\t$('[data-litespeed-onlyonce]').on('click', function (e) {\n\t\t\t\tif ($(this).hasClass('disabled')) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t\t$(this).addClass('disabled');\n\t\t\t});\n\t\t}\n\t});\n})(jQuery);\n\n/**\n * Plural handler\n */\nfunction litespeed_plural($num, $txt) {\n\tif ($num > 1) return $num + ' ' + $txt + 's';\n\n\treturn $num + ' ' + $txt;\n}\n\n/**\n * Convert seconds to readable time\n */\nfunction litespeed_readable_time(seconds) {\n\tif (seconds < 60) {\n\t\treturn '';\n\t}\n\n\tvar second = Math.floor(seconds % 60);\n\tvar minute = Math.floor((seconds / 60) % 60);\n\tvar hour = Math.floor((seconds / 3600) % 24);\n\tvar day = Math.floor((seconds / 3600 / 24) % 7);\n\tvar week = Math.floor(seconds / 3600 / 24 / 7);\n\n\tvar str = '';\n\tif (week) str += ' ' + litespeed_plural(week, 'week');\n\tif (day) str += ' ' + litespeed_plural(day, 'day');\n\tif (hour) str += ' ' + litespeed_plural(hour, 'hour');\n\tif (minute) str += ' ' + litespeed_plural(minute, 'minute');\n\tif (second) str += ' ' + litespeed_plural(second, 'second');\n\n\treturn str;\n}\n\n/**\n * Trigger a click event on an element\n * @since  1.8\n */\nfunction litespeed_trigger_click(selector) {\n\tjQuery(selector).trigger('click');\n}\n\nfunction litespeed_keycode(num) {\n\tvar num = num || 13;\n\tvar code = window.event ? event.keyCode : event.which;\n\tif (num == code) return true;\n\treturn false;\n}\n\n/**\n * Normalize specified tab type\n * @since  4.7\n */\nfunction litespeed_tab_type(type) {\n\treturn 'subtab' === type ? type : 'tab';\n}\n\n/**\n * Sniff cookies for tab and subtab\n * @since  4.7\n */\nfunction litespeed_tab_cookie($elems, type) {\n\ttype = litespeed_tab_type(type);\n\tvar re = new RegExp('(?:^|.*;)\\\\s*litespeed_' + type + '\\\\s*=\\\\s*([^;]*).*$|^.*$', 'ms');\n\tvar name = document.cookie.replace(re, '$1');\n\treturn $elems.filter('[data-litespeed-' + type + '=\"' + name + '\"]:first');\n}\n\nfunction litespeed_display_tab(name, type) {\n\ttype = litespeed_tab_type(type);\n\tvar $tabs;\n\tvar $layouts;\n\tvar classname;\n\tvar layout_type;\n\tif ('subtab' === type) {\n\t\tclassname = 'focus';\n\t\tlayout_type = 'sublayout';\n\t\t$tabs = jQuery('[data-litespeed-subtab=\"' + name + '\"]')\n\t\t\t.siblings('[data-litespeed-subtab]')\n\t\t\t.addBack();\n\t\t$layouts = jQuery('[data-litespeed-sublayout=\"' + name + '\"]')\n\t\t\t.siblings('[data-litespeed-sublayout]')\n\t\t\t.addBack();\n\t} else {\n\t\t// Maybe handle subtabs\n\t\tvar $subtabs = jQuery('[data-litespeed-layout=\"' + name + '\"] [data-litespeed-subtab]');\n\t\tif ($subtabs.length > 0) {\n\t\t\t// Find subtab name\n\t\t\tvar $subtab = litespeed_tab_cookie($subtabs, 'subtab');\n\t\t\tif ($subtab.length < 1) {\n\t\t\t\t$subtab = jQuery('[data-litespeed-layout=\"' + name + '\"] [data-litespeed-subtab]:first');\n\t\t\t}\n\t\t\tif ($subtab.length > 0) {\n\t\t\t\tvar subtab_name = $subtab.data('litespeed-subtab');\n\t\t\t\t// Display a subtab\n\t\t\t\tlitespeed_display_tab(subtab_name, 'subtab');\n\t\t\t}\n\t\t}\n\t\tclassname = 'nav-tab-active';\n\t\tlayout_type = 'layout';\n\t\t$tabs = jQuery('[data-litespeed-tab]');\n\t\t$layouts = jQuery('[data-litespeed-layout]');\n\t}\n\t$tabs.removeClass(classname);\n\t$tabs.filter('[data-litespeed-' + type + '=\"' + name + '\"]').addClass(classname);\n\t$layouts.hide();\n\t$layouts.filter('[data-litespeed-' + layout_type + '=\"' + name + '\"]').show();\n}\n\nfunction litespeed_copy_to_clipboard(elementId, clickedElement) {\n\tvar range = document.createRange();\n\trange.selectNode(document.getElementById(elementId));\n\twindow.getSelection().removeAllRanges();\n\twindow.getSelection().addRange(range);\n\tdocument.execCommand('copy');\n\twindow.getSelection().removeAllRanges();\n\n\tclickedElement.setAttribute('aria-label', 'Copied!');\n}\n"},{"base":"plugins","rel":"litespeed-cache/assets/js/babel.min.js","ext":"js","size":791234,"mtime":1757312769},{"base":"plugins","rel":"litespeed-cache/assets/js/webfontloader.js","ext":"js","size":12505,"mtime":1757312769,"type":"text","content":"/* Web Font Loader v1.6.28 - (c) Adobe Systems, Google. License: Apache 2.0 */(function(){function aa(a,b,c){return a.call.apply(a.bind,arguments)}function ba(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}}function p(a,b,c){p=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?aa:ba;return p.apply(null,arguments)}var q=Date.now||function(){return+new Date};function ca(a,b){this.a=a;this.o=b||a;this.c=this.o.document}var da=!!window.FontFace;function t(a,b,c,d){b=a.c.createElement(b);if(c)for(var e in c)c.hasOwnProperty(e)&&(\"style\"==e?b.style.cssText=c[e]:b.setAttribute(e,c[e]));d&&b.appendChild(a.c.createTextNode(d));return b}function u(a,b,c){a=a.c.getElementsByTagName(b)[0];a||(a=document.documentElement);a.insertBefore(c,a.lastChild)}function v(a){a.parentNode&&a.parentNode.removeChild(a)}\nfunction w(a,b,c){b=b||[];c=c||[];for(var d=a.className.split(/\\s+/),e=0;e<b.length;e+=1){for(var f=!1,g=0;g<d.length;g+=1)if(b[e]===d[g]){f=!0;break}f||d.push(b[e])}b=[];for(e=0;e<d.length;e+=1){f=!1;for(g=0;g<c.length;g+=1)if(d[e]===c[g]){f=!0;break}f||b.push(d[e])}a.className=b.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function y(a,b){for(var c=a.className.split(/\\s+/),d=0,e=c.length;d<e;d++)if(c[d]==b)return!0;return!1}\nfunction ea(a){return a.o.location.hostname||a.a.location.hostname}function z(a,b,c){function d(){m&&e&&f&&(m(g),m=null)}b=t(a,\"link\",{rel:\"stylesheet\",href:b,media:\"all\"});var e=!1,f=!0,g=null,m=c||null;da?(b.onload=function(){e=!0;d()},b.onerror=function(){e=!0;g=Error(\"Stylesheet failed to load\");d()}):setTimeout(function(){e=!0;d()},0);u(a,\"head\",b)}\nfunction A(a,b,c,d){var e=a.c.getElementsByTagName(\"head\")[0];if(e){var f=t(a,\"script\",{src:b}),g=!1;f.onload=f.onreadystatechange=function(){g||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(g=!0,c&&c(null),f.onload=f.onreadystatechange=null,\"HEAD\"==f.parentNode.tagName&&e.removeChild(f))};e.appendChild(f);setTimeout(function(){g||(g=!0,c&&c(Error(\"Script load timeout\")))},d||5E3);return f}return null};function B(){this.a=0;this.c=null}function C(a){a.a++;return function(){a.a--;D(a)}}function E(a,b){a.c=b;D(a)}function D(a){0==a.a&&a.c&&(a.c(),a.c=null)};function F(a){this.a=a||\"-\"}F.prototype.c=function(a){for(var b=[],c=0;c<arguments.length;c++)b.push(arguments[c].replace(/[\\W_]+/g,\"\").toLowerCase());return b.join(this.a)};function G(a,b){this.c=a;this.f=4;this.a=\"n\";var c=(b||\"n4\").match(/^([nio])([1-9])$/i);c&&(this.a=c[1],this.f=parseInt(c[2],10))}function fa(a){return H(a)+\" \"+(a.f+\"00\")+\" 300px \"+I(a.c)}function I(a){var b=[];a=a.split(/,\\s*/);for(var c=0;c<a.length;c++){var d=a[c].replace(/['\"]/g,\"\");-1!=d.indexOf(\" \")||/^\\d/.test(d)?b.push(\"'\"+d+\"'\"):b.push(d)}return b.join(\",\")}function J(a){return a.a+a.f}function H(a){var b=\"normal\";\"o\"===a.a?b=\"oblique\":\"i\"===a.a&&(b=\"italic\");return b}\nfunction ga(a){var b=4,c=\"n\",d=null;a&&((d=a.match(/(normal|oblique|italic)/i))&&d[1]&&(c=d[1].substr(0,1).toLowerCase()),(d=a.match(/([1-9]00|normal|bold)/i))&&d[1]&&(/bold/i.test(d[1])?b=7:/[1-9]00/.test(d[1])&&(b=parseInt(d[1].substr(0,1),10))));return c+b};function ha(a,b){this.c=a;this.f=a.o.document.documentElement;this.h=b;this.a=new F(\"-\");this.j=!1!==b.events;this.g=!1!==b.classes}function ia(a){a.g&&w(a.f,[a.a.c(\"wf\",\"loading\")]);K(a,\"loading\")}function L(a){if(a.g){var b=y(a.f,a.a.c(\"wf\",\"active\")),c=[],d=[a.a.c(\"wf\",\"loading\")];b||c.push(a.a.c(\"wf\",\"inactive\"));w(a.f,c,d)}K(a,\"inactive\")}function K(a,b,c){if(a.j&&a.h[b])if(c)a.h[b](c.c,J(c));else a.h[b]()};function ja(){this.c={}}function ka(a,b,c){var d=[],e;for(e in b)if(b.hasOwnProperty(e)){var f=a.c[e];f&&d.push(f(b[e],c))}return d};function M(a,b){this.c=a;this.f=b;this.a=t(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function N(a){u(a.c,\"body\",a.a)}function O(a){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+I(a.c)+\";\"+(\"font-style:\"+H(a)+\";font-weight:\"+(a.f+\"00\")+\";\")};function P(a,b,c,d,e,f){this.g=a;this.j=b;this.a=d;this.c=c;this.f=e||3E3;this.h=f||void 0}P.prototype.start=function(){var a=this.c.o.document,b=this,c=q(),d=new Promise(function(d,e){function f(){q()-c>=b.f?e():a.fonts.load(fa(b.a),b.h).then(function(a){1<=a.length?d():setTimeout(f,25)},function(){e()})}f()}),e=null,f=new Promise(function(a,d){e=setTimeout(d,b.f)});Promise.race([f,d]).then(function(){e&&(clearTimeout(e),e=null);b.g(b.a)},function(){b.j(b.a)})};function Q(a,b,c,d,e,f,g){this.v=a;this.B=b;this.c=c;this.a=d;this.s=g||\"BESbswy\";this.f={};this.w=e||3E3;this.u=f||null;this.m=this.j=this.h=this.g=null;this.g=new M(this.c,this.s);this.h=new M(this.c,this.s);this.j=new M(this.c,this.s);this.m=new M(this.c,this.s);a=new G(this.a.c+\",serif\",J(this.a));a=O(a);this.g.a.style.cssText=a;a=new G(this.a.c+\",sans-serif\",J(this.a));a=O(a);this.h.a.style.cssText=a;a=new G(\"serif\",J(this.a));a=O(a);this.j.a.style.cssText=a;a=new G(\"sans-serif\",J(this.a));a=\nO(a);this.m.a.style.cssText=a;N(this.g);N(this.h);N(this.j);N(this.m)}var R={D:\"serif\",C:\"sans-serif\"},S=null;function T(){if(null===S){var a=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);S=!!a&&(536>parseInt(a[1],10)||536===parseInt(a[1],10)&&11>=parseInt(a[2],10))}return S}Q.prototype.start=function(){this.f.serif=this.j.a.offsetWidth;this.f[\"sans-serif\"]=this.m.a.offsetWidth;this.A=q();U(this)};\nfunction la(a,b,c){for(var d in R)if(R.hasOwnProperty(d)&&b===a.f[R[d]]&&c===a.f[R[d]])return!0;return!1}function U(a){var b=a.g.a.offsetWidth,c=a.h.a.offsetWidth,d;(d=b===a.f.serif&&c===a.f[\"sans-serif\"])||(d=T()&&la(a,b,c));d?q()-a.A>=a.w?T()&&la(a,b,c)&&(null===a.u||a.u.hasOwnProperty(a.a.c))?V(a,a.v):V(a,a.B):ma(a):V(a,a.v)}function ma(a){setTimeout(p(function(){U(this)},a),50)}function V(a,b){setTimeout(p(function(){v(this.g.a);v(this.h.a);v(this.j.a);v(this.m.a);b(this.a)},a),0)};function W(a,b,c){this.c=a;this.a=b;this.f=0;this.m=this.j=!1;this.s=c}var X=null;W.prototype.g=function(a){var b=this.a;b.g&&w(b.f,[b.a.c(\"wf\",a.c,J(a).toString(),\"active\")],[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\"),b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\")]);K(b,\"fontactive\",a);this.m=!0;na(this)};\nW.prototype.h=function(a){var b=this.a;if(b.g){var c=y(b.f,b.a.c(\"wf\",a.c,J(a).toString(),\"active\")),d=[],e=[b.a.c(\"wf\",a.c,J(a).toString(),\"loading\")];c||d.push(b.a.c(\"wf\",a.c,J(a).toString(),\"inactive\"));w(b.f,d,e)}K(b,\"fontinactive\",a);na(this)};function na(a){0==--a.f&&a.j&&(a.m?(a=a.a,a.g&&w(a.f,[a.a.c(\"wf\",\"active\")],[a.a.c(\"wf\",\"loading\"),a.a.c(\"wf\",\"inactive\")]),K(a,\"active\")):L(a.a))};function oa(a){this.j=a;this.a=new ja;this.h=0;this.f=this.g=!0}oa.prototype.load=function(a){this.c=new ca(this.j,a.context||this.j);this.g=!1!==a.events;this.f=!1!==a.classes;pa(this,new ha(this.c,a),a)};\nfunction qa(a,b,c,d,e){var f=0==--a.h;(a.f||a.g)&&setTimeout(function(){var a=e||null,m=d||null||{};if(0===c.length&&f)L(b.a);else{b.f+=c.length;f&&(b.j=f);var h,l=[];for(h=0;h<c.length;h++){var k=c[h],n=m[k.c],r=b.a,x=k;r.g&&w(r.f,[r.a.c(\"wf\",x.c,J(x).toString(),\"loading\")]);K(r,\"fontloading\",x);r=null;if(null===X)if(window.FontFace){var x=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),xa=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);\nX=x?42<parseInt(x[1],10):xa?!1:!0}else X=!1;X?r=new P(p(b.g,b),p(b.h,b),b.c,k,b.s,n):r=new Q(p(b.g,b),p(b.h,b),b.c,k,b.s,a,n);l.push(r)}for(h=0;h<l.length;h++)l[h].start()}},0)}function pa(a,b,c){var d=[],e=c.timeout;ia(b);var d=ka(a.a,c,a.c),f=new W(a.c,b,e);a.h=d.length;b=0;for(c=d.length;b<c;b++)d[b].load(function(b,d,c){qa(a,f,b,d,c)})};function ra(a,b){this.c=a;this.a=b}\nra.prototype.load=function(a){function b(){if(f[\"__mti_fntLst\"+d]){var c=f[\"__mti_fntLst\"+d](),e=[],h;if(c)for(var l=0;l<c.length;l++){var k=c[l].fontfamily;void 0!=c[l].fontStyle&&void 0!=c[l].fontWeight?(h=c[l].fontStyle+c[l].fontWeight,e.push(new G(k,h))):e.push(new G(k))}a(e)}else setTimeout(function(){b()},50)}var c=this,d=c.a.projectId,e=c.a.version;if(d){var f=c.c.o;A(this.c,(c.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+d+\".js\"+(e?\"?v=\"+e:\"\"),function(e){e?a([]):(f[\"__MonotypeConfiguration__\"+\nd]=function(){return c.a},b())}).id=\"__MonotypeAPIScript__\"+d}else a([])};function sa(a,b){this.c=a;this.a=b}sa.prototype.load=function(a){var b,c,d=this.a.urls||[],e=this.a.families||[],f=this.a.testStrings||{},g=new B;b=0;for(c=d.length;b<c;b++)z(this.c,d[b],C(g));var m=[];b=0;for(c=e.length;b<c;b++)if(d=e[b].split(\":\"),d[1])for(var h=d[1].split(\",\"),l=0;l<h.length;l+=1)m.push(new G(d[0],h[l]));else m.push(new G(d[0]));E(g,function(){a(m,f)})};function ta(a,b){a?this.c=a:this.c=ua;this.a=[];this.f=[];this.g=b||\"\"}var ua=\"https://fonts.googleapis.com/css\";function va(a,b){for(var c=b.length,d=0;d<c;d++){var e=b[d].split(\":\");3==e.length&&a.f.push(e.pop());var f=\"\";2==e.length&&\"\"!=e[1]&&(f=\":\");a.a.push(e.join(f))}}\nfunction wa(a){if(0==a.a.length)throw Error(\"No fonts to load!\");if(-1!=a.c.indexOf(\"kit=\"))return a.c;for(var b=a.a.length,c=[],d=0;d<b;d++)c.push(a.a[d].replace(/ /g,\"+\"));b=a.c+\"?family=\"+c.join(\"%7C\");0<a.f.length&&(b+=\"&subset=\"+a.f.join(\",\"));0<a.g.length&&(b+=\"&text=\"+encodeURIComponent(a.g));return b};function ya(a){this.f=a;this.a=[];this.c={}}\nvar za={latin:\"BESbswy\",\"latin-ext\":\"\\u00e7\\u00f6\\u00fc\\u011f\\u015f\",cyrillic:\"\\u0439\\u044f\\u0416\",greek:\"\\u03b1\\u03b2\\u03a3\",khmer:\"\\u1780\\u1781\\u1782\",Hanuman:\"\\u1780\\u1781\\u1782\"},Aa={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},Ba={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},\nCa=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;\nfunction Da(a){for(var b=a.f.length,c=0;c<b;c++){var d=a.f[c].split(\":\"),e=d[0].replace(/\\+/g,\" \"),f=[\"n4\"];if(2<=d.length){var g;var m=d[1];g=[];if(m)for(var m=m.split(\",\"),h=m.length,l=0;l<h;l++){var k;k=m[l];if(k.match(/^[\\w-]+$/)){var n=Ca.exec(k.toLowerCase());if(null==n)k=\"\";else{k=n[2];k=null==k||\"\"==k?\"n\":Ba[k];n=n[1];if(null==n||\"\"==n)n=\"4\";else var r=Aa[n],n=r?r:isNaN(n)?\"4\":n.substr(0,1);k=[k,n].join(\"\")}}else k=\"\";k&&g.push(k)}0<g.length&&(f=g);3==d.length&&(d=d[2],g=[],d=d?d.split(\",\"):\ng,0<d.length&&(d=za[d[0]])&&(a.c[e]=d))}a.c[e]||(d=za[e])&&(a.c[e]=d);for(d=0;d<f.length;d+=1)a.a.push(new G(e,f[d]))}};function Ea(a,b){this.c=a;this.a=b}var Fa={Arimo:!0,Cousine:!0,Tinos:!0};Ea.prototype.load=function(a){var b=new B,c=this.c,d=new ta(this.a.api,this.a.text),e=this.a.families;va(d,e);var f=new ya(e);Da(f);z(c,wa(d),C(b));E(b,function(){a(f.a,f.c,Fa)})};function Ga(a,b){this.c=a;this.a=b}Ga.prototype.load=function(a){var b=this.a.id,c=this.c.o;b?A(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+b+\".js\",function(b){if(b)a([]);else if(c.Typekit&&c.Typekit.config&&c.Typekit.config.fn){b=c.Typekit.config.fn;for(var e=[],f=0;f<b.length;f+=2)for(var g=b[f],m=b[f+1],h=0;h<m.length;h++)e.push(new G(g,m[h]));try{c.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}a(e)}},2E3):a([])};function Ha(a,b){this.c=a;this.f=b;this.a=[]}Ha.prototype.load=function(a){var b=this.f.id,c=this.c.o,d=this;b?(c.__webfontfontdeckmodule__||(c.__webfontfontdeckmodule__={}),c.__webfontfontdeckmodule__[b]=function(b,c){for(var g=0,m=c.fonts.length;g<m;++g){var h=c.fonts[g];d.a.push(new G(h.name,ga(\"font-weight:\"+h.weight+\";font-style:\"+h.style)))}a(d.a)},A(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+ea(this.c)+\"/\"+b+\".js\",function(b){b&&a([])})):a([])};var Y=new oa(window);Y.a.c.custom=function(a,b){return new sa(b,a)};Y.a.c.fontdeck=function(a,b){return new Ha(b,a)};Y.a.c.monotype=function(a,b){return new ra(b,a)};Y.a.c.typekit=function(a,b){return new Ga(b,a)};Y.a.c.google=function(a,b){return new Ea(b,a)};var Z={load:p(Y.load,Y)};\"function\"===typeof define&&define.amd?define(function(){return Z}):\"undefined\"!==typeof module&&module.exports?module.exports=Z:(window.WebFont=Z,window.WebFontConfig&&Y.load(window.WebFontConfig));}());\n"},{"base":"plugins","rel":"litespeed-cache/assets/js/instant_click.ori.js","ext":"js","size":16705,"mtime":1757312769,"type":"text","content":"/*! instant.page v5.2.0 - (C) 2019-2024 Alexandre Dieulot - https://instant.page/license */\n\nlet _chromiumMajorVersionInUserAgent = null\n  , _speculationRulesType\n  , _allowQueryString\n  , _allowExternalLinks\n  , _useWhitelist\n  , _delayOnHover = 65\n  , _lastTouchstartEvent\n  , _mouseoverTimer\n  , _preloadedList = new Set()\n\ninit()\n\nfunction init() {\n  const supportCheckRelList = document.createElement('link').relList\n  const isSupported = supportCheckRelList.supports('prefetch')\n    && supportCheckRelList.supports('modulepreload')\n  // instant.page is meant to be loaded with <script type=module>\n  // (though sometimes webmasters load it as a regular script).\n  // So it’s normally executed (and must not cause JavaScript errors) in:\n  // - Chromium 61+\n  // - Gecko in Firefox 60+\n  // - WebKit in Safari 10.1+ (iOS 10.3+, macOS 10.10+)\n  //\n  // The check above used to check for IntersectionObserverEntry.isIntersecting\n  // but module scripts support implies this compatibility — except in Safari\n  // 10.1–12.0, but this prefetch check takes care of it.\n  //\n  // The modulepreload check is used to drop support for Firefox < 115 in order\n  // to lessen maintenance.\n  // This implies Safari 17+ (if it supported prefetch), if we ever support\n  // fetch()-based preloading for Safari we might want to OR that check with\n  // something that Safari 15.4 or 16.4 supports.\n  // Also implies Chromium 66+.\n\n  if (!isSupported) {\n    return\n  }\n\n  const handleVaryAcceptHeader = 'instantVaryAccept' in document.body.dataset || 'Shopify' in window\n  // The `Vary: Accept` header when received in Chromium 79–109 makes prefetches\n  // unusable, as Chromium used to send a different `Accept` header.\n  // It’s applied on all Shopify sites by default, as Shopify is very popular\n  // and is the main source of this problem.\n  // `window.Shopify` only exists on “classic” Shopify sites. Those using\n  // Hydrogen (Remix SPA) aren’t concerned.\n\n  const chromiumUserAgentIndex = navigator.userAgent.indexOf('Chrome/')\n  if (chromiumUserAgentIndex > -1) {\n    _chromiumMajorVersionInUserAgent = parseInt(navigator.userAgent.substring(chromiumUserAgentIndex + 'Chrome/'.length))\n  }\n  // The user agent client hints API is a theoretically more reliable way to\n  // get Chromium’s version… but it’s not available in Samsung Internet 20.\n  // It also requires a secure context, which would make debugging harder,\n  // and is only available in recent Chromium versions.\n  // In practice, Chromium browsers never shy from announcing \"Chrome\" in\n  // their regular user agent string, as that maximizes their compatibility.\n\n  if (handleVaryAcceptHeader && _chromiumMajorVersionInUserAgent && _chromiumMajorVersionInUserAgent < 110) {\n    return\n  }\n\n  _speculationRulesType = 'none'\n  if (HTMLScriptElement.supports && HTMLScriptElement.supports('speculationrules')) {\n    const speculationRulesConfig = document.body.dataset.instantSpecrules\n    if (speculationRulesConfig == 'prerender') {\n      _speculationRulesType = 'prerender'\n    } else if (speculationRulesConfig != 'no') {\n      _speculationRulesType = 'prefetch'\n    }\n  }\n\n  const useMousedownShortcut = 'instantMousedownShortcut' in document.body.dataset\n  _allowQueryString = 'instantAllowQueryString' in document.body.dataset\n  _allowExternalLinks = 'instantAllowExternalLinks' in document.body.dataset\n  _useWhitelist = 'instantWhitelist' in document.body.dataset\n\n  let preloadOnMousedown = false\n  let preloadOnlyOnMousedown = false\n  let preloadWhenVisible = false\n  if ('instantIntensity' in document.body.dataset) {\n    const intensityParameter = document.body.dataset.instantIntensity\n\n    if (intensityParameter == 'mousedown' && !useMousedownShortcut) {\n      preloadOnMousedown = true\n    }\n\n    if (intensityParameter == 'mousedown-only' && !useMousedownShortcut) {\n      preloadOnMousedown = true\n      preloadOnlyOnMousedown = true\n    }\n\n    if (intensityParameter == 'viewport') {\n      const isOnSmallScreen = document.documentElement.clientWidth * document.documentElement.clientHeight < 450000\n      // Smartphones are the most likely to have a slow connection, and\n      // their small screen size limits the number of links (and thus\n      // server load).\n      //\n      // Foldable phones (being expensive as of 2023), tablets and PCs\n      // generally have a decent connection, and a big screen displaying\n      // more links that would put more load on the server.\n      //\n      // iPhone 14 Pro Max (want): 430×932 = 400 760\n      // Samsung Galaxy S22 Ultra with display size set to 80% (want):\n      // 450×965 = 434 250\n      // Small tablet (don’t want): 600×960 = 576 000\n      // Those number are virtual screen size, the viewport (used for\n      // the check above) will be smaller with the browser’s interface.\n\n      const isNavigatorConnectionSaveDataEnabled = navigator.connection && navigator.connection.saveData\n      const isNavigatorConnectionLike2g = navigator.connection && navigator.connection.effectiveType && navigator.connection.effectiveType.includes('2g')\n      const isNavigatorConnectionAdequate = !isNavigatorConnectionSaveDataEnabled && !isNavigatorConnectionLike2g\n\n      if (isOnSmallScreen && isNavigatorConnectionAdequate) {\n        preloadWhenVisible = true\n      }\n    }\n\n    if (intensityParameter == 'viewport-all') {\n      preloadWhenVisible = true\n    }\n\n    const intensityAsInteger = parseInt(intensityParameter)\n    if (!isNaN(intensityAsInteger)) {\n      _delayOnHover = intensityAsInteger\n    }\n  }\n\n  const eventListenersOptions = {\n    capture: true,\n    passive: true,\n  }\n\n  if (preloadOnlyOnMousedown) {\n    document.addEventListener('touchstart', touchstartEmptyListener, eventListenersOptions)\n  }\n  else {\n    document.addEventListener('touchstart', touchstartListener, eventListenersOptions)\n  }\n\n  if (!preloadOnMousedown) {\n    document.addEventListener('mouseover', mouseoverListener, eventListenersOptions)\n  }\n\n  if (preloadOnMousedown) {\n    document.addEventListener('mousedown', mousedownListener, eventListenersOptions)\n  }\n  if (useMousedownShortcut) {\n    document.addEventListener('mousedown', mousedownShortcutListener, eventListenersOptions)\n  }\n\n  if (preloadWhenVisible) {\n    let requestIdleCallbackOrFallback = window.requestIdleCallback\n    // Safari has no support as of 16.3: https://webkit.org/b/164193\n    if (!requestIdleCallbackOrFallback) {\n      requestIdleCallbackOrFallback = (callback) => {\n        callback()\n        // A smarter fallback like setTimeout is not used because devices that\n        // may eventually be eligible to a Safari version supporting prefetch\n        // will be very powerful.\n        // The weakest devices that could be eligible are the 2017 iPad and\n        // the 2016 MacBook.\n      }\n    }\n\n    requestIdleCallbackOrFallback(function observeIntersection() {\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const anchorElement = entry.target\n            intersectionObserver.unobserve(anchorElement)\n            preload(anchorElement.href)\n          }\n        })\n      })\n\n      document.querySelectorAll('a').forEach((anchorElement) => {\n        if (isPreloadable(anchorElement)) {\n          intersectionObserver.observe(anchorElement)\n        }\n      })\n    }, {\n      timeout: 1500,\n    })\n  }\n}\n\nfunction touchstartListener(event) {\n  _lastTouchstartEvent = event\n\n  const anchorElement = event.target.closest('a')\n\n  if (!isPreloadable(anchorElement)) {\n    return\n  }\n\n  preload(anchorElement.href, 'high')\n}\n\nfunction touchstartEmptyListener(event) {\n  _lastTouchstartEvent = event\n}\n\nfunction mouseoverListener(event) {\n  if (isEventLikelyTriggeredByTouch(event)) {\n    // This avoids uselessly adding a mouseout event listener and setting a timer.\n    return\n  }\n\n  if (!('closest' in event.target)) {\n    return\n    // Without this check sometimes an error “event.target.closest is not a function” is thrown, for unknown reasons\n    // That error denotes that `event.target` isn’t undefined. My best guess is that it’s the Document.\n    //\n    // Details could be gleaned from throwing such an error:\n    //throw new TypeError(`instant.page non-element event target: timeStamp=${~~event.timeStamp}, type=${event.type}, typeof=${typeof event.target}, nodeType=${event.target.nodeType}, nodeName=${event.target.nodeName}, viewport=${innerWidth}x${innerHeight}, coords=${event.clientX}x${event.clientY}, scroll=${scrollX}x${scrollY}`)\n  }\n  const anchorElement = event.target.closest('a')\n\n  if (!isPreloadable(anchorElement)) {\n    return\n  }\n\n  anchorElement.addEventListener('mouseout', mouseoutListener, {passive: true})\n\n  _mouseoverTimer = setTimeout(() => {\n    preload(anchorElement.href, 'high')\n    _mouseoverTimer = null\n  }, _delayOnHover)\n}\n\nfunction mousedownListener(event) {\n  if (isEventLikelyTriggeredByTouch(event)) {\n    // When preloading only on mousedown, not touch, we need to stop there\n    // because touches send compatibility mouse events including mousedown.\n    //\n    // (When preloading on touchstart, instructions below this block would\n    // have no effect.)\n    return\n  }\n\n  const anchorElement = event.target.closest('a')\n\n  if (!isPreloadable(anchorElement)) {\n    return\n  }\n\n  preload(anchorElement.href, 'high')\n}\n\nfunction mouseoutListener(event) {\n  if (event.relatedTarget && event.target.closest('a') == event.relatedTarget.closest('a')) {\n    return\n  }\n\n  if (_mouseoverTimer) {\n    clearTimeout(_mouseoverTimer)\n    _mouseoverTimer = null\n  }\n}\n\nfunction mousedownShortcutListener(event) {\n  if (isEventLikelyTriggeredByTouch(event)) {\n    // Due to a high potential for complications with this mousedown shortcut\n    // combined with other parties’ JavaScript code, we don’t want it to run\n    // at all on touch devices, even though mousedown and click are triggered\n    // at almost the same time on touch.\n    return\n  }\n\n  const anchorElement = event.target.closest('a')\n\n  if (event.which > 1 || event.metaKey || event.ctrlKey) {\n    return\n  }\n\n  if (!anchorElement) {\n    return\n  }\n\n  anchorElement.addEventListener('click', function (event) {\n    if (event.detail == 1337) {\n      return\n    }\n\n    event.preventDefault()\n  }, {capture: true, passive: false, once: true})\n\n  const customEvent = new MouseEvent('click', {view: window, bubbles: true, cancelable: false, detail: 1337})\n  anchorElement.dispatchEvent(customEvent)\n}\n\nfunction isEventLikelyTriggeredByTouch(event) {\n  // Touch devices fire “mouseover” and “mousedown” (and other) events after\n  // a touch for compatibility reasons.\n  // This function checks if it’s likely that we’re dealing with such an event.\n\n  if (!_lastTouchstartEvent || !event) {\n    return false\n  }\n\n  if (event.target != _lastTouchstartEvent.target) {\n    return false\n  }\n\n  const now = event.timeStamp\n  // Chromium (tested Chrome 95 and 122 on Android) sometimes uses the same\n  // event.timeStamp value in touchstart, mouseover, and mousedown.\n  // Testable in test/extras/delay-not-considered-touch.html\n  // This is okay for our purpose: two equivalent timestamps will be less\n  // than the max duration, which means they’re related events.\n  // TODO: fill/find Chromium bug\n  const durationBetweenLastTouchstartAndNow = now - _lastTouchstartEvent.timeStamp\n\n  const MAX_DURATION_TO_BE_CONSIDERED_TRIGGERED_BY_TOUCHSTART = 2500\n  // How long after a touchstart event can a simulated mouseover/mousedown event fire?\n  // /test/extras/delay-not-considered-touch.html tries to answer that question.\n  // I saw up to 1450 ms on an overwhelmed Samsung Galaxy S2.\n  // On the other hand, how soon can an unrelated mouseover event happen after an unrelated touchstart?\n  // Meaning the user taps a link, then grabs their pointing device and clicks another/the same link.\n  // That scenario could occur if a user taps a link, thinks it hasn’t worked, and thus fall back to their pointing device.\n  // I do that in about 1200 ms on a Chromebook. In which case this function returns a false positive.\n  // False positives are okay, as this function is only used to decide to abort handling mouseover/mousedown/mousedownShortcut.\n  // False negatives could lead to unforeseen state, particularly in mousedownShortcutListener.\n\n  return durationBetweenLastTouchstartAndNow < MAX_DURATION_TO_BE_CONSIDERED_TRIGGERED_BY_TOUCHSTART\n\n  // TODO: Investigate if pointer events could be used.\n  // https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerType\n\n  // TODO: Investigate if InputDeviceCapabilities could be used to make it\n  // less hacky on Chromium browsers.\n  // https://developer.mozilla.org/en-US/docs/Web/API/InputDeviceCapabilities_API\n  // https://wicg.github.io/input-device-capabilities/\n  // Needs careful reading of the spec and tests (notably, what happens with a\n  // mouse connected to an Android or iOS smartphone?) to make sure it’s solid.\n  // Also need to judge if WebKit could implement it differently, as they\n  // don’t mind doing when a spec gives room to interpretation.\n  // It seems to work well on Chrome on ChromeOS.\n\n  // TODO: Consider using event screen position as another heuristic.\n}\n\nfunction isPreloadable(anchorElement) {\n  if (!anchorElement || !anchorElement.href) {\n    return\n  }\n\n  if (_useWhitelist && !('instant' in anchorElement.dataset)) {\n    return\n  }\n\n  if (anchorElement.origin != location.origin) {\n    let allowed = _allowExternalLinks || 'instant' in anchorElement.dataset\n    if (!allowed || !_chromiumMajorVersionInUserAgent) {\n      // Chromium-only: see comment on “restrictive prefetch” and “cross-site speculation rules prefetch”\n      return\n    }\n  }\n\n  if (!['http:', 'https:'].includes(anchorElement.protocol)) {\n    return\n  }\n\n  if (anchorElement.protocol == 'http:' && location.protocol == 'https:') {\n    return\n  }\n\n  if (!_allowQueryString && anchorElement.search && !('instant' in anchorElement.dataset)) {\n    return\n  }\n\n  if (anchorElement.hash && anchorElement.pathname + anchorElement.search == location.pathname + location.search) {\n    return\n  }\n\n  if ('noInstant' in anchorElement.dataset) {\n    return\n  }\n\n  return true\n}\n\nfunction preload(url, fetchPriority = 'auto') {\n  if (_preloadedList.has(url)) {\n    return\n  }\n\n  if (_speculationRulesType != 'none') {\n    preloadUsingSpeculationRules(url)\n  } else {\n    preloadUsingLinkElement(url, fetchPriority)\n  }\n\n  _preloadedList.add(url)\n}\n\nfunction preloadUsingSpeculationRules(url) {\n  const scriptElement = document.createElement('script')\n  scriptElement.type = 'speculationrules'\n\n  scriptElement.textContent = JSON.stringify({\n    [_speculationRulesType]: [{\n      source: 'list',\n      urls: [url]\n    }]\n  })\n\n  // When using speculation rules, cross-site prefetch is supported, but will\n  // only work if the user has no cookies for the destination site. The\n  // prefetch will not be sent, if the user does have such cookies.\n\n  document.head.appendChild(scriptElement)\n}\n\nfunction preloadUsingLinkElement(url, fetchPriority = 'auto') {\n  const linkElement = document.createElement('link')\n  linkElement.rel = 'prefetch'\n  linkElement.href = url\n\n  linkElement.fetchPriority = fetchPriority\n  // By default, a prefetch is loaded with a low priority.\n  // When there’s a fair chance that this prefetch is going to be used in the\n  // near term (= after a touch/mouse event), giving it a high priority helps\n  // make the page load faster in case there are other resources loading.\n  // Prioritizing it implicitly means deprioritizing every other resource\n  // that’s loading on the page. Due to HTML documents usually being much\n  // smaller than other resources (notably images and JavaScript), and\n  // prefetches happening once the initial page is sufficiently loaded,\n  // this theft of bandwidth should rarely be detrimental.\n\n  linkElement.as = 'document'\n  // as=document is Chromium-only and allows cross-origin prefetches to be\n  // usable for navigation. They call it “restrictive prefetch” and intend\n  // to remove it: https://crbug.com/1352371\n  //\n  // This document from the Chrome team dated 2022-08-10\n  // https://docs.google.com/document/d/1x232KJUIwIf-k08vpNfV85sVCRHkAxldfuIA5KOqi6M\n  // claims (I haven’t tested) that data- and battery-saver modes as well as\n  // the setting to disable preloading do not disable restrictive prefetch,\n  // unlike regular prefetch. That’s good for prefetching on a touch/mouse\n  // event, but might be bad when prefetching every link in the viewport.\n\n  document.head.appendChild(linkElement)\n}"},{"base":"plugins","rel":"litespeed-cache/assets/js/react.min.js","ext":"js","size":132024,"mtime":1757312769,"type":"text","content":"/** @license React v17.0.1\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n(function(){'use strict';(function(c,x){\"object\"===typeof exports&&\"undefined\"!==typeof module?x(exports):\"function\"===typeof define&&define.amd?define([\"exports\"],x):(c=c||self,x(c.React={}))})(this,function(c){function x(a){if(null===a||\"object\"!==typeof a)return null;a=Y&&a[Y]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}function y(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,e=1;e<arguments.length;e++)b+=\"&args[]=\"+encodeURIComponent(arguments[e]);return\"Minified React error #\"+\na+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}function v(a,b,e){this.props=a;this.context=b;this.refs=Z;this.updater=e||aa}function ba(){}function K(a,b,e){this.props=a;this.context=b;this.refs=Z;this.updater=e||aa}function ca(a,b,e){var l,f={},c=null,da=null;if(null!=b)for(l in void 0!==b.ref&&(da=b.ref),void 0!==b.key&&(c=\"\"+b.key),b)ea.call(b,l)&&!fa.hasOwnProperty(l)&&(f[l]=b[l]);var k=arguments.length-2;if(1===\nk)f.children=e;else if(1<k){for(var h=Array(k),d=0;d<k;d++)h[d]=arguments[d+2];f.children=h}if(a&&a.defaultProps)for(l in k=a.defaultProps,k)void 0===f[l]&&(f[l]=k[l]);return{$$typeof:w,type:a,key:c,ref:da,props:f,_owner:L.current}}function va(a,b){return{$$typeof:w,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function M(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===w}function wa(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}function N(a,b){return\"object\"===\ntypeof a&&null!==a&&null!=a.key?wa(\"\"+a.key):b.toString(36)}function C(a,b,e,l,f){var c=typeof a;if(\"undefined\"===c||\"boolean\"===c)a=null;var d=!1;if(null===a)d=!0;else switch(c){case \"string\":case \"number\":d=!0;break;case \"object\":switch(a.$$typeof){case w:case ha:d=!0}}if(d)return d=a,f=f(d),a=\"\"===l?\".\"+N(d,0):l,Array.isArray(f)?(e=\"\",null!=a&&(e=a.replace(ia,\"$&/\")+\"/\"),C(f,b,e,\"\",function(a){return a})):null!=f&&(M(f)&&(f=va(f,e+(!f.key||d&&d.key===f.key?\"\":(\"\"+f.key).replace(ia,\"$&/\")+\"/\")+\na)),b.push(f)),1;d=0;l=\"\"===l?\".\":l+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){c=a[k];var h=l+N(c,k);d+=C(c,b,e,h,f)}else if(h=x(a),\"function\"===typeof h)for(a=h.call(a),k=0;!(c=a.next()).done;)c=c.value,h=l+N(c,k++),d+=C(c,b,e,h,f);else if(\"object\"===c)throw b=\"\"+a,Error(y(31,\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b));return d}function D(a,b,e){if(null==a)return a;var l=[],c=0;C(a,l,\"\",\"\",function(a){return b.call(e,a,c++)});return l}function xa(a){if(-1===\na._status){var b=a._result;b=b();a._status=0;a._result=b;b.then(function(b){0===a._status&&(b=b.default,a._status=1,a._result=b)},function(b){0===a._status&&(a._status=2,a._result=b)})}if(1===a._status)return a._result;throw a._result;}function n(){var a=ja.current;if(null===a)throw Error(y(321));return a}function O(a,b){var e=a.length;a.push(b);a:for(;;){var c=e-1>>>1,f=a[c];if(void 0!==f&&0<E(f,b))a[c]=b,a[e]=f,e=c;else break a}}function p(a){a=a[0];return void 0===a?null:a}function F(a){var b=\na[0];if(void 0!==b){var e=a.pop();if(e!==b){a[0]=e;a:for(var c=0,f=a.length;c<f;){var d=2*(c+1)-1,g=a[d],k=d+1,h=a[k];if(void 0!==g&&0>E(g,e))void 0!==h&&0>E(h,g)?(a[c]=h,a[k]=e,c=k):(a[c]=g,a[d]=e,c=d);else if(void 0!==h&&0>E(h,e))a[c]=h,a[k]=e,c=k;else break a}}return b}return null}function E(a,b){var e=a.sortIndex-b.sortIndex;return 0!==e?e:a.id-b.id}function P(a){for(var b=p(r);null!==b;){if(null===b.callback)F(r);else if(b.startTime<=a)F(r),b.sortIndex=b.expirationTime,O(q,b);else break;b=p(r)}}\nfunction Q(a){z=!1;P(a);if(!u)if(null!==p(q))u=!0,A(R);else{var b=p(r);null!==b&&G(Q,b.startTime-a)}}function R(a,b){u=!1;z&&(z=!1,S());H=!0;var e=g;try{P(b);for(m=p(q);null!==m&&(!(m.expirationTime>b)||a&&!T());){var c=m.callback;if(\"function\"===typeof c){m.callback=null;g=m.priorityLevel;var f=c(m.expirationTime<=b);b=t();\"function\"===typeof f?m.callback=f:m===p(q)&&F(q);P(b)}else F(q);m=p(q)}if(null!==m)var d=!0;else{var n=p(r);null!==n&&G(Q,n.startTime-b);d=!1}return d}finally{m=null,g=e,H=!1}}\nvar w=60103,ha=60106;c.Fragment=60107;c.StrictMode=60108;c.Profiler=60114;var ka=60109,la=60110,ma=60112;c.Suspense=60113;var na=60115,oa=60116;if(\"function\"===typeof Symbol&&Symbol.for){var d=Symbol.for;w=d(\"react.element\");ha=d(\"react.portal\");c.Fragment=d(\"react.fragment\");c.StrictMode=d(\"react.strict_mode\");c.Profiler=d(\"react.profiler\");ka=d(\"react.provider\");la=d(\"react.context\");ma=d(\"react.forward_ref\");c.Suspense=d(\"react.suspense\");na=d(\"react.memo\");oa=d(\"react.lazy\")}var Y=\"function\"===\ntypeof Symbol&&Symbol.iterator,ya=Object.prototype.hasOwnProperty,U=Object.assign||function(a,b){if(null==a)throw new TypeError(\"Object.assign target cannot be null or undefined\");for(var e=Object(a),c=1;c<arguments.length;c++){var d=arguments[c];if(null!=d){var g=void 0;d=Object(d);for(g in d)ya.call(d,g)&&(e[g]=d[g])}}return e},aa={isMounted:function(a){return!1},enqueueForceUpdate:function(a,b,c){},enqueueReplaceState:function(a,b,c,d){},enqueueSetState:function(a,b,c,d){}},Z={};v.prototype.isReactComponent=\n{};v.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(y(85));this.updater.enqueueSetState(this,a,b,\"setState\")};v.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};ba.prototype=v.prototype;d=K.prototype=new ba;d.constructor=K;U(d,v.prototype);d.isPureReactComponent=!0;var L={current:null},ea=Object.prototype.hasOwnProperty,fa={key:!0,ref:!0,__self:!0,__source:!0},ia=/\\/+/g,ja={current:null},V;if(\"object\"===typeof performance&&\n\"function\"===typeof performance.now){var za=performance;var t=function(){return za.now()}}else{var pa=Date,Aa=pa.now();t=function(){return pa.now()-Aa}}if(\"undefined\"===typeof window||\"function\"!==typeof MessageChannel){var B=null,qa=null,ra=function(){if(null!==B)try{var a=t();B(!0,a);B=null}catch(b){throw setTimeout(ra,0),b;}};var A=function(a){null!==B?setTimeout(A,0,a):(B=a,setTimeout(ra,0))};var G=function(a,b){qa=setTimeout(a,b)};var S=function(){clearTimeout(qa)};var T=function(){return!1};\nd=V=function(){}}else{var Ba=window.setTimeout,Ca=window.clearTimeout;\"undefined\"!==typeof console&&(d=window.cancelAnimationFrame,\"function\"!==typeof window.requestAnimationFrame&&console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\"),\"function\"!==typeof d&&console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills\"));\nvar I=!1,J=null,W=-1,sa=5,ta=0;T=function(){return t()>=ta};d=function(){};V=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):sa=0<a?Math.floor(1E3/a):5};var ua=new MessageChannel,X=ua.port2;ua.port1.onmessage=function(){if(null!==J){var a=t();ta=a+sa;try{J(!0,a)?X.postMessage(null):(I=!1,J=null)}catch(b){throw X.postMessage(null),b;}}else I=!1};A=function(a){J=a;I||(I=!0,X.postMessage(null))};G=\nfunction(a,b){W=Ba(function(){a(t())},b)};S=function(){Ca(W);W=-1}}var q=[],r=[],Da=1,m=null,g=3,H=!1,u=!1,z=!1,Ea=0;d={ReactCurrentDispatcher:ja,ReactCurrentOwner:L,IsSomeRendererActing:{current:!1},ReactCurrentBatchConfig:{transition:0},assign:U,Scheduler:{__proto__:null,unstable_ImmediatePriority:1,unstable_UserBlockingPriority:2,unstable_NormalPriority:3,unstable_IdlePriority:5,unstable_LowPriority:4,unstable_runWithPriority:function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=\n3}var c=g;g=a;try{return b()}finally{g=c}},unstable_next:function(a){switch(g){case 1:case 2:case 3:var b=3;break;default:b=g}var c=g;g=b;try{return a()}finally{g=c}},unstable_scheduleCallback:function(a,b,c){var d=t();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:Da++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=\nc,O(r,a),null===p(q)&&a===p(r)&&(z?S():z=!0,G(Q,c-d))):(a.sortIndex=e,O(q,a),u||H||(u=!0,A(R)));return a},unstable_cancelCallback:function(a){a.callback=null},unstable_wrapCallback:function(a){var b=g;return function(){var c=g;g=b;try{return a.apply(this,arguments)}finally{g=c}}},unstable_getCurrentPriorityLevel:function(){return g},get unstable_shouldYield(){return T},unstable_requestPaint:d,unstable_continueExecution:function(){u||H||(u=!0,A(R))},unstable_pauseExecution:function(){},unstable_getFirstCallbackNode:function(){return p(q)},\nget unstable_now(){return t},get unstable_forceFrameRate(){return V},unstable_Profiling:null},SchedulerTracing:{__proto__:null,__interactionsRef:null,__subscriberRef:null,unstable_clear:function(a){return a()},unstable_getCurrent:function(){return null},unstable_getThreadID:function(){return++Ea},unstable_trace:function(a,b,c){return c()},unstable_wrap:function(a){return a},unstable_subscribe:function(a){},unstable_unsubscribe:function(a){}}};c.Children={map:D,forEach:function(a,b,c){D(a,function(){b.apply(this,\narguments)},c)},count:function(a){var b=0;D(a,function(){b++});return b},toArray:function(a){return D(a,function(a){return a})||[]},only:function(a){if(!M(a))throw Error(y(143));return a}};c.Component=v;c.PureComponent=K;c.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=d;c.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(y(267,a));var d=U({},a.props),e=a.key,g=a.ref,n=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,n=L.current);void 0!==b.key&&(e=\"\"+b.key);if(a.type&&a.type.defaultProps)var k=\na.type.defaultProps;for(h in b)ea.call(b,h)&&!fa.hasOwnProperty(h)&&(d[h]=void 0===b[h]&&void 0!==k?k[h]:b[h])}var h=arguments.length-2;if(1===h)d.children=c;else if(1<h){k=Array(h);for(var m=0;m<h;m++)k[m]=arguments[m+2];d.children=k}return{$$typeof:w,type:a.type,key:e,ref:g,props:d,_owner:n}};c.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:la,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:ka,_context:a};return a.Consumer=\na};c.createElement=ca;c.createFactory=function(a){var b=ca.bind(null,a);b.type=a;return b};c.createRef=function(){return{current:null}};c.forwardRef=function(a){return{$$typeof:ma,render:a}};c.isValidElement=M;c.lazy=function(a){return{$$typeof:oa,_payload:{_status:-1,_result:a},_init:xa}};c.memo=function(a,b){return{$$typeof:na,type:a,compare:void 0===b?null:b}};c.useCallback=function(a,b){return n().useCallback(a,b)};c.useContext=function(a,b){return n().useContext(a,b)};c.useDebugValue=function(a,\nb){};c.useEffect=function(a,b){return n().useEffect(a,b)};c.useImperativeHandle=function(a,b,c){return n().useImperativeHandle(a,b,c)};c.useLayoutEffect=function(a,b){return n().useLayoutEffect(a,b)};c.useMemo=function(a,b){return n().useMemo(a,b)};c.useReducer=function(a,b,c){return n().useReducer(a,b,c)};c.useRef=function(a){return n().useRef(a)};c.useState=function(a){return n().useState(a)};c.version=\"17.0.1\"});\n})();\n/** @license React v17.0.1\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n(function(){/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';(function(M,ha){\"object\"===typeof exports&&\"undefined\"!==typeof module?ha(exports,require(\"react\")):\"function\"===typeof define&&define.amd?define([\"exports\",\"react\"],ha):(M=M||self,ha(M.ReactDOM={},M.React))})(this,function(M,ha){function m(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nfunction Ta(a,b){gb(a,b);gb(a+\"Capture\",b)}function gb(a,b){Ib[a]=b;for(a=0;a<b.length;a++)zf.add(b[a])}function li(a){if(Af.call(Bf,a))return!0;if(Af.call(Cf,a))return!1;if(mi.test(a))return Bf[a]=!0;Cf[a]=!0;return!1}function ni(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}function oi(a,b,c,d){if(null===\nb||\"undefined\"===typeof b||ni(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function Q(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}function Ed(a,b,c,d){var e=I.hasOwnProperty(b)?I[b]:null;var f=null!==e?0===e.type:d?!1:!(2<b.length)||\n\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1]?!1:!0;f||(oi(b,c,e,d)&&(c=null),d||null===e?li(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c))))}function Jb(a){if(null===a||\"object\"!==typeof a)return null;a=Df&&a[Df]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nfunction Kb(a,b,c){if(void 0===Fd)try{throw Error();}catch(d){Fd=(b=d.stack.trim().match(/\\n( *(at )?)/))&&b[1]||\"\"}return\"\\n\"+Fd+a}function Bc(a,b){if(!a||Gd)return\"\";Gd=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(k){var d=k}Reflect.construct(a,[],b)}else{try{b.call()}catch(k){d=k}a.call(b.prototype)}else{try{throw Error();\n}catch(k){d=k}a()}}catch(k){if(k&&d&&\"string\"===typeof k.stack){for(var e=k.stack.split(\"\\n\"),f=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h])return\"\\n\"+e[g].replace(\" at new \",\" at \");while(1<=g&&0<=h)}break}}}finally{Gd=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Kb(a):\"\"}function pi(a){switch(a.tag){case 5:return Kb(a.type);case 16:return Kb(\"Lazy\");case 13:return Kb(\"Suspense\");\ncase 19:return Kb(\"SuspenseList\");case 0:case 2:case 15:return a=Bc(a.type,!1),a;case 11:return a=Bc(a.type.render,!1),a;case 22:return a=Bc(a.type._render,!1),a;case 1:return a=Bc(a.type,!0),a;default:return\"\"}}function hb(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case wa:return\"Fragment\";case Ua:return\"Portal\";case Lb:return\"Profiler\";case Hd:return\"StrictMode\";case Mb:return\"Suspense\";case Cc:return\"SuspenseList\"}if(\"object\"===\ntypeof a)switch(a.$$typeof){case Id:return(a.displayName||\"Context\")+\".Consumer\";case Jd:return(a._context.displayName||\"Context\")+\".Provider\";case Dc:var b=a.render;b=b.displayName||b.name||\"\";return a.displayName||(\"\"!==b?\"ForwardRef(\"+b+\")\":\"ForwardRef\");case Ec:return hb(a.type);case Kd:return hb(a._render);case Ld:b=a._payload;a=a._init;try{return hb(a(b))}catch(c){}}return null}function xa(a){switch(typeof a){case \"boolean\":case \"number\":case \"object\":case \"string\":case \"undefined\":return a;\ndefault:return\"\"}}function Ef(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}function qi(a){var b=Ef(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,\nb,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}}function Fc(a){a._valueTracker||(a._valueTracker=qi(a))}function Ff(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ef(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Gc(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||\na.body}catch(b){return a.body}}function Md(a,b){var c=b.checked;return B({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Gf(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=xa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function Hf(a,b){b=b.checked;null!=b&&Ed(a,\"checked\",\nb,!1)}function Nd(a,b){Hf(a,b);var c=xa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?Od(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&Od(a,b.type,xa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}function If(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=\nb.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}function Od(a,b,c){if(\"number\"!==b||Gc(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}function ri(a){var b=\"\";ha.Children.forEach(a,function(a){null!=a&&(b+=a)});return b}\nfunction Pd(a,b){a=B({children:void 0},b);if(b=ri(b.children))a.children=b;return a}function ib(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+xa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}function Qd(a,b){if(null!=\nb.dangerouslySetInnerHTML)throw Error(m(91));return B({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Jf(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(m(92));if(Array.isArray(c)){if(!(1>=c.length))throw Error(m(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:xa(c)}}function Kf(a,b){var c=xa(b.value),d=xa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==\nc&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function Lf(a,b){b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function Mf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function Rd(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Mf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}function Nf(a,b,c){return null==\nb||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||Nb.hasOwnProperty(a)&&Nb[a]?(\"\"+b).trim():b+\"px\"}function Of(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=Nf(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}function Sd(a,b){if(b){if(si[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(m(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(m(60));if(!(\"object\"===typeof b.dangerouslySetInnerHTML&&\n\"__html\"in b.dangerouslySetInnerHTML))throw Error(m(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(m(62));}}function Td(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}function Ud(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);\nreturn 3===a.nodeType?a.parentNode:a}function Pf(a){if(a=Ob(a)){if(\"function\"!==typeof Vd)throw Error(m(280));var b=a.stateNode;b&&(b=Hc(b),Vd(a.stateNode,a.type,b))}}function Qf(a){jb?kb?kb.push(a):kb=[a]:jb=a}function Rf(){if(jb){var a=jb,b=kb;kb=jb=null;Pf(a);if(b)for(a=0;a<b.length;a++)Pf(b[a])}}function Wd(){if(null!==jb||null!==kb)Xd(),Rf()}function ti(a,b,c){if(Yd)return a(b,c);Yd=!0;try{return Sf(a,b,c)}finally{Yd=!1,Wd()}}function Pb(a,b){var c=a.stateNode;if(null===c)return null;var d=Hc(c);\nif(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==typeof c)throw Error(m(231,b,typeof c));return c}function ui(a,b,c,d,e,\nf,g,h,k){Qb=!1;Ic=null;vi.apply(wi,arguments)}function xi(a,b,c,d,e,f,g,h,k){ui.apply(this,arguments);if(Qb){if(Qb){var v=Ic;Qb=!1;Ic=null}else throw Error(m(198));Jc||(Jc=!0,Zd=v)}}function Va(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&1026)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Tf(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Uf(a){if(Va(a)!==\na)throw Error(m(188));}function yi(a){var b=a.alternate;if(!b){b=Va(a);if(null===b)throw Error(m(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Uf(e),a;if(f===d)return Uf(e),b;f=f.sibling}throw Error(m(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=\nf.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(m(189));}}if(c.alternate!==d)throw Error(m(190));}if(3!==c.tag)throw Error(m(188));return c.stateNode.current===c?a:b}function Vf(a){a=yi(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child.return=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}}return null}function Wf(a,b){for(var c=\na.alternate;null!==b;){if(b===a||b===c)return!0;b=b.return}return!1}function $d(a,b,c,d,e){return{blockedOn:a,domEventName:b,eventSystemFlags:c|16,nativeEvent:e,targetContainers:[d]}}function Xf(a,b){switch(a){case \"focusin\":case \"focusout\":ya=null;break;case \"dragenter\":case \"dragleave\":za=null;break;case \"mouseover\":case \"mouseout\":Aa=null;break;case \"pointerover\":case \"pointerout\":Rb.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Sb.delete(b.pointerId)}}function Tb(a,\nb,c,d,e,f){if(null===a||a.nativeEvent!==f)return a=$d(b,c,d,e,f),null!==b&&(b=Ob(b),null!==b&&Yf(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}function zi(a,b,c,d,e){switch(b){case \"focusin\":return ya=Tb(ya,a,b,c,d,e),!0;case \"dragenter\":return za=Tb(za,a,b,c,d,e),!0;case \"mouseover\":return Aa=Tb(Aa,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Rb.set(f,Tb(Rb.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Sb.set(f,\nTb(Sb.get(f)||null,a,b,c,d,e)),!0}return!1}function Ai(a){var b=Wa(a.target);if(null!==b){var c=Va(b);if(null!==c)if(b=c.tag,13===b){if(b=Tf(c),null!==b){a.blockedOn=b;Bi(a.lanePriority,function(){ae(a.priority,function(){Ci(c)})});return}}else if(3===b&&c.stateNode.hydrate){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}function Kc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=be(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);\nif(null!==c)return b=Ob(c),null!==b&&Yf(b),a.blockedOn=c,!1;b.shift()}return!0}function Zf(a,b,c){Kc(a)&&c.delete(b)}function Di(){for(ce=!1;0<ia.length;){var a=ia[0];if(null!==a.blockedOn){a=Ob(a.blockedOn);null!==a&&Ei(a);break}for(var b=a.targetContainers;0<b.length;){var c=be(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null!==c){a.blockedOn=c;break}b.shift()}null===a.blockedOn&&ia.shift()}null!==ya&&Kc(ya)&&(ya=null);null!==za&&Kc(za)&&(za=null);null!==Aa&&Kc(Aa)&&(Aa=null);Rb.forEach(Zf);\nSb.forEach(Zf)}function Ub(a,b){a.blockedOn===b&&(a.blockedOn=null,ce||(ce=!0,$f(ag,Di)))}function bg(a){if(0<ia.length){Ub(ia[0],a);for(var b=1;b<ia.length;b++){var c=ia[b];c.blockedOn===a&&(c.blockedOn=null)}}null!==ya&&Ub(ya,a);null!==za&&Ub(za,a);null!==Aa&&Ub(Aa,a);b=function(b){return Ub(b,a)};Rb.forEach(b);Sb.forEach(b);for(b=0;b<Vb.length;b++)c=Vb[b],c.blockedOn===a&&(c.blockedOn=null);for(;0<Vb.length&&(b=Vb[0],null===b.blockedOn);)Ai(b),null===b.blockedOn&&Vb.shift()}function Lc(a,b){var c=\n{};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}function Mc(a){if(de[a])return de[a];if(!lb[a])return a;var b=lb[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in cg)return de[a]=b[c];return a}function ee(a,b){for(var c=0;c<a.length;c+=2){var d=a[c],e=a[c+1];e=\"on\"+(e[0].toUpperCase()+e.slice(1));fe.set(d,b);dg.set(d,e);Ta(e,[d])}}function mb(a){if(0!==(1&a))return w=15,1;if(0!==(2&a))return w=14,2;if(0!==(4&a))return w=13,4;var b=24&a;if(0!==b)return w=12,b;\nif(0!==(a&32))return w=11,32;b=192&a;if(0!==b)return w=10,b;if(0!==(a&256))return w=9,256;b=3584&a;if(0!==b)return w=8,b;if(0!==(a&4096))return w=7,4096;b=4186112&a;if(0!==b)return w=6,b;b=62914560&a;if(0!==b)return w=5,b;if(a&67108864)return w=4,67108864;if(0!==(a&134217728))return w=3,134217728;b=805306368&a;if(0!==b)return w=2,b;if(0!==(1073741824&a))return w=1,1073741824;w=8;return a}function Fi(a){switch(a){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}\nfunction Gi(a){switch(a){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(m(358,a));}}function Wb(a,b){var c=a.pendingLanes;if(0===c)return w=0;var d=0,e=0,f=a.expiredLanes,g=a.suspendedLanes,h=a.pingedLanes;if(0!==f)d=f,e=w=15;else if(f=c&134217727,0!==f){var k=f&~g;0!==k?(d=mb(k),e=w):(h&=f,0!==h&&(d=mb(h),e=w))}else f=c&~g,0!==f?(d=mb(f),e=w):0!==h&&(d=mb(h),\ne=w);if(0===d)return 0;d=31-Ba(d);d=c&((0>d?0:1<<d)<<1)-1;if(0!==b&&b!==d&&0===(b&g)){mb(b);if(e<=w)return b;w=e}b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-Ba(b),e=1<<c,d|=a[c],b&=~e;return d}function eg(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function Nc(a,b){switch(a){case 15:return 1;case 14:return 2;case 12:return a=nb(24&~b),0===a?Nc(10,b):a;case 10:return a=nb(192&~b),0===a?Nc(8,b):a;case 8:return a=nb(3584&~b),0===a&&(a=nb(4186112&~b),\n0===a&&(a=512)),a;case 2:return b=nb(805306368&~b),0===b&&(b=268435456),b}throw Error(m(358,a));}function nb(a){return a&-a}function ge(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}function Oc(a,b,c){a.pendingLanes|=b;var d=b-1;a.suspendedLanes&=d;a.pingedLanes&=d;a=a.eventTimes;b=31-Ba(b);a[b]=c}function Hi(a){return 0===a?32:31-(Ii(a)/Ji|0)|0}function Ki(a,b,c,d){Xa||Xd();var e=he,f=Xa;Xa=!0;try{fg(e,a,b,c,d)}finally{(Xa=f)||Wd()}}function Li(a,b,c,d){Mi(Ni,he.bind(null,a,b,c,d))}function he(a,\nb,c,d){if(Pc){var e;if((e=0===(b&4))&&0<ia.length&&-1<gg.indexOf(a))a=$d(null,a,b,c,d),ia.push(a);else{var f=be(a,b,c,d);if(null===f)e&&Xf(a,d);else{if(e){if(-1<gg.indexOf(a)){a=$d(f,a,b,c,d);ia.push(a);return}if(zi(f,a,b,c,d))return;Xf(a,d)}hg(a,b,d,null,c)}}}}function be(a,b,c,d){var e=Ud(d);e=Wa(e);if(null!==e){var f=Va(e);if(null===f)e=null;else{var g=f.tag;if(13===g){e=Tf(f);if(null!==e)return e;e=null}else if(3===g){if(f.stateNode.hydrate)return 3===f.tag?f.stateNode.containerInfo:null;e=null}else f!==\ne&&(e=null)}}hg(a,b,d,e,c);return null}function ig(){if(Qc)return Qc;var a,b=ie,c=b.length,d,e=\"value\"in Ca?Ca.value:Ca.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return Qc=e.slice(a,1<d?1-d:void 0)}function Rc(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function Sc(){return!0}function jg(){return!1}function V(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=\nd;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?Sc:jg;this.isPropagationStopped=jg;return this}B(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=Sc)},stopPropagation:function(){var a=\nthis.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=Sc)},persist:function(){},isPersistent:Sc});return b}function Oi(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Pi[a])?!!b[a]:!1}function je(a){return Oi}function kg(a,b){switch(a){case \"keyup\":return-1!==Qi.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}\nfunction lg(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}function Ri(a,b){switch(a){case \"compositionend\":return lg(b);case \"keypress\":if(32!==b.which)return null;mg=!0;return ng;case \"textInput\":return a=b.data,a===ng&&mg?null:a;default:return null}}function Si(a,b){if(ob)return\"compositionend\"===a||!ke&&kg(a,b)?(a=ig(),Qc=ie=Ca=null,ob=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;\nif(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return og&&\"ko\"!==b.locale?null:b.data;default:return null}}function pg(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!Ti[a.type]:\"textarea\"===b?!0:!1}function Ui(a){if(!oa)return!1;a=\"on\"+a;var b=a in document;b||(b=document.createElement(\"div\"),b.setAttribute(a,\"return;\"),b=\"function\"===typeof b[a]);return b}function qg(a,b,c,d){Qf(d);b=Tc(b,\"onChange\");0<b.length&&(c=new le(\"onChange\",\"change\",\nnull,c,d),a.push({event:c,listeners:b}))}function Vi(a){rg(a,0)}function Uc(a){var b=pb(a);if(Ff(b))return a}function Wi(a,b){if(\"change\"===a)return b}function sg(){Xb&&(Xb.detachEvent(\"onpropertychange\",tg),Yb=Xb=null)}function tg(a){if(\"value\"===a.propertyName&&Uc(Yb)){var b=[];qg(b,Yb,a,Ud(a));a=Vi;if(Xa)a(b);else{Xa=!0;try{me(a,b)}finally{Xa=!1,Wd()}}}}function Xi(a,b,c){\"focusin\"===a?(sg(),Xb=b,Yb=c,Xb.attachEvent(\"onpropertychange\",tg)):\"focusout\"===a&&sg()}function Yi(a,b){if(\"selectionchange\"===\na||\"keyup\"===a||\"keydown\"===a)return Uc(Yb)}function Zi(a,b){if(\"click\"===a)return Uc(b)}function $i(a,b){if(\"input\"===a||\"change\"===a)return Uc(b)}function aj(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}function Zb(a,b){if(X(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++)if(!bj.call(b,c[d])||!X(a[c[d]],b[c[d]]))return!1;return!0}function ug(a){for(;a&&a.firstChild;)a=\na.firstChild;return a}function vg(a,b){var c=ug(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=ug(c)}}function wg(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?wg(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}function xg(){for(var a=window,b=Gc();b instanceof a.HTMLIFrameElement;){try{var c=\n\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Gc(a.document)}return b}function ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}function yg(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;oe||null==qb||qb!==Gc(d)||(d=qb,\"selectionStart\"in d&&ne(d)?d={start:d.selectionStart,\nend:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),$b&&Zb($b,d)||($b=d,d=Tc(pe,\"onSelect\"),0<d.length&&(b=new le(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=qb)))}function zg(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;xi(d,b,void 0,a);a.currentTarget=null}function rg(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=\na[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,v=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;zg(e,h,v);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;v=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;zg(e,h,v);f=k}}}if(Jc)throw a=Zd,Jc=!1,Zd=null,a;}function z(a,b){var c=Ag(b),d=a+\"__bubble\";c.has(d)||(Bg(b,a,2,!1),c.add(d))}function Cg(a){a[Dg]||(a[Dg]=!0,zf.forEach(function(b){Eg.has(b)||\nFg(b,!1,a,null);Fg(b,!0,a,null)}))}function Fg(a,b,c,d){var e=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,f=c;\"selectionchange\"===a&&9!==c.nodeType&&(f=c.ownerDocument);if(null!==d&&!b&&Eg.has(a)){if(\"scroll\"!==a)return;e|=2;f=d}var g=Ag(f),h=a+\"__\"+(b?\"capture\":\"bubble\");g.has(h)||(b&&(e|=4),Bg(f,a,e,b),g.add(h))}function Bg(a,b,c,d,e){e=fe.get(b);switch(void 0===e?2:e){case 0:e=Ki;break;case 1:e=Li;break;default:e=he}c=e.bind(null,b,c,a);e=void 0;!qe||\"touchstart\"!==b&&\"touchmove\"!==\nb&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}function hg(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&\nk.parentNode===e)return;g=g.return}for(;null!==h;){g=Wa(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}ti(function(){var d=f,e=Ud(c),g=[];a:{var h=dg.get(a);if(void 0!==h){var k=le,m=a;switch(a){case \"keypress\":if(0===Rc(c))break a;case \"keydown\":case \"keyup\":k=cj;break;case \"focusin\":m=\"focus\";k=re;break;case \"focusout\":m=\"blur\";k=re;break;case \"beforeblur\":case \"afterblur\":k=re;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=\nGg;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=dj;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=ej;break;case Hg:case Ig:case Jg:k=fj;break;case Kg:k=gj;break;case \"scroll\":k=hj;break;case \"wheel\":k=ij;break;case \"copy\":case \"cut\":case \"paste\":k=jj;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=\nLg}var l=0!==(b&4),C=!l&&\"scroll\"===a,x=l?null!==h?h+\"Capture\":null:h;l=[];for(var p=d,q;null!==p;){q=p;var u=q.stateNode;5===q.tag&&null!==u&&(q=u,null!==x&&(u=Pb(p,x),null!=u&&l.push(ac(p,u,q))));if(C)break;p=p.return}0<l.length&&(h=new k(h,m,null,c,e),g.push({event:h,listeners:l}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&0===(b&16)&&(m=c.relatedTarget||c.fromElement)&&(Wa(m)||m[rb]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||\nh.parentWindow:window;if(k){if(m=c.relatedTarget||c.toElement,k=d,m=m?Wa(m):null,null!==m&&(C=Va(m),m!==C||5!==m.tag&&6!==m.tag))m=null}else k=null,m=d;if(k!==m){l=Gg;u=\"onMouseLeave\";x=\"onMouseEnter\";p=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)l=Lg,u=\"onPointerLeave\",x=\"onPointerEnter\",p=\"pointer\";C=null==k?h:pb(k);q=null==m?h:pb(m);h=new l(u,p+\"leave\",k,c,e);h.target=C;h.relatedTarget=q;u=null;Wa(e)===d&&(l=new l(x,p+\"enter\",m,c,e),l.target=q,l.relatedTarget=C,u=l);C=u;if(k&&m)b:{l=k;x=m;p=\n0;for(q=l;q;q=sb(q))p++;q=0;for(u=x;u;u=sb(u))q++;for(;0<p-q;)l=sb(l),p--;for(;0<q-p;)x=sb(x),q--;for(;p--;){if(l===x||null!==x&&l===x.alternate)break b;l=sb(l);x=sb(x)}l=null}else l=null;null!==k&&Mg(g,h,k,l,!1);null!==m&&null!==C&&Mg(g,C,m,l,!0)}}}a:{h=d?pb(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var n=Wi;else if(pg(h))if(Ng)n=$i;else{n=Yi;var da=Xi}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(n=Zi);\nif(n&&(n=n(a,d))){qg(g,n,c,e);break a}da&&da(a,h,d);\"focusout\"===a&&(da=h._wrapperState)&&da.controlled&&\"number\"===h.type&&Od(h,\"number\",h.value)}da=d?pb(d):window;switch(a){case \"focusin\":if(pg(da)||\"true\"===da.contentEditable)qb=da,pe=d,$b=null;break;case \"focusout\":$b=pe=qb=null;break;case \"mousedown\":oe=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":oe=!1;yg(g,c,e);break;case \"selectionchange\":if(kj)break;case \"keydown\":case \"keyup\":yg(g,c,e)}var Ea;if(ke)b:{switch(a){case \"compositionstart\":var F=\n\"onCompositionStart\";break b;case \"compositionend\":F=\"onCompositionEnd\";break b;case \"compositionupdate\":F=\"onCompositionUpdate\";break b}F=void 0}else ob?kg(a,c)&&(F=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(F=\"onCompositionStart\");F&&(og&&\"ko\"!==c.locale&&(ob||\"onCompositionStart\"!==F?\"onCompositionEnd\"===F&&ob&&(Ea=ig()):(Ca=e,ie=\"value\"in Ca?Ca.value:Ca.textContent,ob=!0)),da=Tc(d,F),0<da.length&&(F=new Og(F,a,null,c,e),g.push({event:F,listeners:da}),Ea?F.data=Ea:(Ea=lg(c),null!==Ea&&\n(F.data=Ea))));if(Ea=lj?Ri(a,c):Si(a,c))d=Tc(d,\"onBeforeInput\"),0<d.length&&(e=new mj(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=Ea)}rg(g,b)})}function ac(a,b,c){return{instance:a,listener:b,currentTarget:c}}function Tc(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Pb(a,c),null!=f&&d.unshift(ac(a,f,e)),f=Pb(a,b),null!=f&&d.push(ac(a,f,e)));a=a.return}return d}function sb(a){if(null===a)return null;do a=a.return;while(a&&\n5!==a.tag);return a?a:null}function Mg(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,v=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==v&&(h=v,e?(k=Pb(c,f),null!=k&&g.unshift(ac(c,k,h))):e||(k=Pb(c,f),null!=k&&g.push(ac(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}function Vc(){}function Pg(a,b){switch(a){case \"button\":case \"input\":case \"select\":case \"textarea\":return!!b.autoFocus}return!1}function se(a,b){return\"textarea\"===a||\"option\"===\na||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}function te(a){1===a.nodeType?a.textContent=\"\":9===a.nodeType&&(a=a.body,null!=a&&(a.textContent=\"\"))}function tb(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break}return a}function Qg(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===\nc){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}function nj(a){return{$$typeof:ue,toString:a,valueOf:a}}function Wa(a){var b=a[Fa];if(b)return b;for(var c=a.parentNode;c;){if(b=c[rb]||c[Fa]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Qg(a);null!==a;){if(c=a[Fa])return c;a=Qg(a)}return b}a=c;c=a.parentNode}return null}function Ob(a){a=a[Fa]||a[rb];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function pb(a){if(5===a.tag||6===a.tag)return a.stateNode;\nthrow Error(m(33));}function Hc(a){return a[Wc]||null}function Ag(a){var b=a[Rg];void 0===b&&(b=a[Rg]=new Set);return b}function Ga(a){return{current:a}}function t(a,b){0>ub||(a.current=ve[ub],ve[ub]=null,ub--)}function A(a,b,c){ub++;ve[ub]=a.current;a.current=b}function vb(a,b){var c=a.type.contextTypes;if(!c)return Ha;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=\nb,a.__reactInternalMemoizedMaskedChildContext=e);return e}function S(a){a=a.childContextTypes;return null!==a&&void 0!==a}function Sg(a,b,c){if(D.current!==Ha)throw Error(m(168));A(D,b);A(J,c)}function Tg(a,b,c){var d=a.stateNode;a=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in a))throw Error(m(108,hb(b)||\"Unknown\",e));return B({},c,d)}function Xc(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Ha;Ya=D.current;\nA(D,a);A(J,J.current);return!0}function Ug(a,b,c){var d=a.stateNode;if(!d)throw Error(m(169));c?(a=Tg(a,b,Ya),d.__reactInternalMemoizedMergedChildContext=a,t(J),t(D),A(D,a)):t(J);A(J,c)}function wb(){switch(oj()){case Yc:return 99;case Vg:return 98;case Wg:return 97;case Xg:return 96;case Yg:return 95;default:throw Error(m(332));}}function Zg(a){switch(a){case 99:return Yc;case 98:return Vg;case 97:return Wg;case 96:return Xg;case 95:return Yg;default:throw Error(m(332));}}function Za(a,b){a=Zg(a);\nreturn pj(a,b)}function bc(a,b,c){a=Zg(a);return we(a,b,c)}function ja(){if(null!==Zc){var a=Zc;Zc=null;xe(a)}$g()}function $g(){if(!ye&&null!==pa){ye=!0;var a=0;try{var b=pa;Za(99,function(){for(;a<b.length;a++){var c=b[a];do c=c(!0);while(null!==c)}});pa=null}catch(c){throw null!==pa&&(pa=pa.slice(a+1)),we(Yc,ja),c;}finally{ye=!1}}}function ea(a,b){if(a&&a.defaultProps){b=B({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function ze(){$c=xb=ad=null}function Ae(a){var b=\nbd.current;t(bd);a.type._context._currentValue=b}function ah(a,b){for(;null!==a;){var c=a.alternate;if((a.childLanes&b)===b)if(null===c||(c.childLanes&b)===b)break;else c.childLanes|=b;else a.childLanes|=b,null!==c&&(c.childLanes|=b);a=a.return}}function yb(a,b){ad=a;$c=xb=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(fa=!0),a.firstContext=null)}function Y(a,b){if($c!==a&&!1!==b&&0!==b){if(\"number\"!==typeof b||1073741823===b)$c=a,b=1073741823;b={context:a,observedBits:b,\nnext:null};if(null===xb){if(null===ad)throw Error(m(308));xb=b;ad.dependencies={lanes:0,firstContext:b,responders:null}}else xb=xb.next=b}return a._currentValue}function Be(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function Ia(a,b){return{eventTime:a,\nlane:b,tag:0,payload:null,callback:null,next:null}}function Ja(a,b){a=a.updateQueue;if(null!==a){a=a.shared;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}}function ch(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=\nf=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=b;c.lastBaseUpdate=b}function cc(a,b,c,d){var e=a.updateQueue;Ka=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,v=k.next;k.next=null;null===g?f=v:g.next=v;g=k;var m=a.alternate;if(null!==m){m=m.updateQueue;var l=m.lastBaseUpdate;l!==g&&(null===l?m.firstBaseUpdate=\nv:l.next=v,m.lastBaseUpdate=k)}}if(null!==f){l=e.baseState;g=0;m=v=k=null;do{h=f.lane;var r=f.eventTime;if((d&h)===h){null!==m&&(m=m.next={eventTime:r,lane:0,tag:f.tag,payload:f.payload,callback:f.callback,next:null});a:{var n=a,t=f;h=b;r=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){l=n.call(r,l,h);break a}l=n;break a;case 3:n.flags=n.flags&-4097|64;case 0:n=t.payload;h=\"function\"===typeof n?n.call(r,l,h):n;if(null===h||void 0===h)break a;l=B({},l,h);break a;case 2:Ka=!0}}null!==f.callback&&\n(a.flags|=32,h=e.effects,null===h?e.effects=[f]:h.push(f))}else r={eventTime:r,lane:h,tag:f.tag,payload:f.payload,callback:f.callback,next:null},null===m?(v=m=r,k=l):m=m.next=r,g|=h;f=f.next;if(null===f)if(h=e.shared.pending,null===h)break;else f=h.next,h.next=null,e.lastBaseUpdate=h,e.shared.pending=null}while(1);null===m&&(k=l);e.baseState=k;e.firstBaseUpdate=v;e.lastBaseUpdate=m;La|=g;a.lanes=g;a.memoizedState=l}}function dh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=\na[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(m(191,e));e.call(d)}}}function cd(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:B({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}function eh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Zb(c,d)||!Zb(e,f):!0}function fh(a,b,c){var d=!1,e=Ha;var f=b.contextType;\"object\"===\ntypeof f&&null!==f?f=Y(f):(e=S(b)?Ya:D.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?vb(a,e):Ha);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=dd;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}function gh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&\nb.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&dd.enqueueReplaceState(b,b.state,null)}function Ce(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=hh;Be(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Y(f):(f=S(b)?Ya:D.current,e.context=vb(a,f));cc(a,c,e,d);e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(cd(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\n\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&dd.enqueueReplaceState(e,e.state,null),cc(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4)}function dc(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==\nc.tag)throw Error(m(309));var d=c.stateNode}if(!d)throw Error(m(147,a));var e=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===e)return b.ref;b=function(a){var b=d.refs;b===hh&&(b=d.refs={});null===a?delete b[e]:b[e]=a};b._stringRef=e;return b}if(\"string\"!==typeof a)throw Error(m(284));if(!c._owner)throw Error(m(290,a));}return a}function ed(a,b){if(\"textarea\"!==a.type)throw Error(m(31,\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\n\"}\":b));}function ih(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.flags=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Ma(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags=\n2,c):d;b.flags=2;return c}function g(b){a&&null===b.alternate&&(b.flags=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=De(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){if(null!==b&&b.elementType===c.type)return d=e(b,c.props),d.ref=dc(a,b,c),d.return=a,d;d=fd(c.type,c.key,c.props,null,a.mode,d);d.ref=dc(a,b,c);d.return=a;return d}function v(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=\nEe(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function l(a,b,c,d,f){if(null===b||7!==b.tag)return b=zb(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function n(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=De(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case ec:return c=fd(b.type,b.key,b.props,null,a.mode,c),c.ref=dc(a,null,b),c.return=a,c;case Ua:return b=Ee(b,a.mode,c),b.return=a,b}if(gd(b)||Jb(b))return b=zb(b,\na.mode,c,null),b.return=a,b;ed(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case ec:return c.key===e?c.type===wa?l(a,b,c.props.children,d,e):k(a,b,c,d):null;case Ua:return c.key===e?v(a,b,c,d):null}if(gd(c)||Jb(c))return null!==e?null:l(a,b,c,d,null);ed(a,c)}return null}function t(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||\nnull,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case ec:return a=a.get(null===d.key?c:d.key)||null,d.type===wa?l(b,a,d.props.children,e,d.key):k(b,a,d,e);case Ua:return a=a.get(null===d.key?c:d.key)||null,v(b,a,d,e)}if(gd(d)||Jb(d))return a=a.get(c)||null,l(b,a,d,e,null);ed(b,d)}return null}function w(e,g,h,k){for(var m=null,v=null,l=g,p=g=0,x=null;null!==l&&p<h.length;p++){l.index>p?(x=l,l=null):x=l.sibling;var C=r(e,l,h[p],k);if(null===C){null===l&&(l=x);break}a&&l&&null===\nC.alternate&&b(e,l);g=f(C,g,p);null===v?m=C:v.sibling=C;v=C;l=x}if(p===h.length)return c(e,l),m;if(null===l){for(;p<h.length;p++)l=n(e,h[p],k),null!==l&&(g=f(l,g,p),null===v?m=l:v.sibling=l,v=l);return m}for(l=d(e,l);p<h.length;p++)x=t(l,e,p,h[p],k),null!==x&&(a&&null!==x.alternate&&l.delete(null===x.key?p:x.key),g=f(x,g,p),null===v?m=x:v.sibling=x,v=x);a&&l.forEach(function(a){return b(e,a)});return m}function z(e,g,h,k){var l=Jb(h);if(\"function\"!==typeof l)throw Error(m(150));h=l.call(h);if(null==\nh)throw Error(m(151));for(var v=l=null,p=g,x=g=0,C=null,q=h.next();null!==p&&!q.done;x++,q=h.next()){p.index>x?(C=p,p=null):C=p.sibling;var Da=r(e,p,q.value,k);if(null===Da){null===p&&(p=C);break}a&&p&&null===Da.alternate&&b(e,p);g=f(Da,g,x);null===v?l=Da:v.sibling=Da;v=Da;p=C}if(q.done)return c(e,p),l;if(null===p){for(;!q.done;x++,q=h.next())q=n(e,q.value,k),null!==q&&(g=f(q,g,x),null===v?l=q:v.sibling=q,v=q);return l}for(p=d(e,p);!q.done;x++,q=h.next())q=t(p,e,x,q.value,k),null!==q&&(a&&null!==\nq.alternate&&p.delete(null===q.key?x:q.key),g=f(q,g,x),null===v?l=q:v.sibling=q,v=q);a&&p.forEach(function(a){return b(e,a)});return l}return function(a,d,f,h){var k=\"object\"===typeof f&&null!==f&&f.type===wa&&null===f.key;k&&(f=f.props.children);var l=\"object\"===typeof f&&null!==f;if(l)switch(f.$$typeof){case ec:a:{l=f.key;for(k=d;null!==k;){if(k.key===l){switch(k.tag){case 7:if(f.type===wa){c(a,k.sibling);d=e(k,f.props.children);d.return=a;a=d;break a}break;default:if(k.elementType===f.type){c(a,\nk.sibling);d=e(k,f.props);d.ref=dc(a,k,f);d.return=a;a=d;break a}}c(a,k);break}else b(a,k);k=k.sibling}f.type===wa?(d=zb(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=fd(f.type,f.key,f.props,null,a.mode,h),h.ref=dc(a,d,f),h.return=a,a=h)}return g(a);case Ua:a:{for(k=f.key;null!==d;){if(d.key===k)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=\nd.sibling}d=Ee(f,a.mode,h);d.return=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):(c(a,d),d=De(f,a.mode,h),d.return=a,a=d),g(a);if(gd(f))return w(a,d,f,h);if(Jb(f))return z(a,d,f,h);l&&ed(a,f);if(\"undefined\"===typeof f&&!k)switch(a.tag){case 1:case 22:case 0:case 11:case 15:throw Error(m(152,hb(a.type)||\"Component\"));}return c(a,d)}}function $a(a){if(a===fc)throw Error(m(174));return a}function Fe(a,b){A(gc,\nb);A(hc,a);A(ka,fc);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:Rd(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=Rd(b,a)}t(ka);A(ka,b)}function Ab(a){t(ka);t(hc);t(gc)}function jh(a){$a(gc.current);var b=$a(ka.current);var c=Rd(b,a.type);b!==c&&(A(hc,a),A(ka,c))}function Ge(a){hc.current===a&&(t(ka),t(hc))}function hd(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\n\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&64))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}function kh(a,b){var c=Z(5,null,null,0);c.elementType=\"DELETED\";c.type=\"DELETED\";c.stateNode=b;c.return=a;c.flags=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=\na.lastEffect=c}function lh(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,!0):!1;case 13:return!1;default:return!1}}function He(a){if(la){var b=Na;if(b){var c=b;if(!lh(a,b)){b=tb(c.nextSibling);if(!b||!lh(a,b)){a.flags=a.flags&-1025|2;la=!1;ra=a;return}kh(ra,c)}ra=a;Na=tb(b.firstChild)}else a.flags=a.flags&-1025|2,la=!1,\nra=a}}function mh(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;ra=a}function id(a){if(a!==ra)return!1;if(!la)return mh(a),la=!0,!1;var b=a.type;if(5!==a.tag||\"head\"!==b&&\"body\"!==b&&!se(b,a.memoizedProps))for(b=Na;b;)kh(a,b),b=tb(b.nextSibling);mh(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(m(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){Na=tb(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==\nc&&\"$?\"!==c||b++}a=a.nextSibling}Na=null}}else Na=ra?tb(a.stateNode.nextSibling):null;return!0}function Ie(){Na=ra=null;la=!1}function Je(){for(var a=0;a<Bb.length;a++)Bb[a]._workInProgressVersionPrimary=null;Bb.length=0}function T(){throw Error(m(321));}function Ke(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!X(a[c],b[c]))return!1;return!0}function Le(a,b,c,d,e,f){ic=f;y=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;jc.current=null===a||null===a.memoizedState?qj:rj;\na=c(d,e);if(kc){f=0;do{kc=!1;if(!(25>f))throw Error(m(301));f+=1;K=N=null;b.updateQueue=null;jc.current=sj;a=c(d,e)}while(kc)}jc.current=jd;b=null!==N&&null!==N.next;ic=0;K=N=y=null;kd=!1;if(b)throw Error(m(300));return a}function ab(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===K?y.memoizedState=K=a:K=K.next=a;return K}function bb(){if(null===N){var a=y.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===K?y.memoizedState:K.next;if(null!==\nb)K=b,N=a;else{if(null===a)throw Error(m(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===K?y.memoizedState=K=a:K=K.next=a}return K}function ma(a,b){return\"function\"===typeof b?b(a):b}function lc(a,b,c){b=bb();c=b.queue;if(null===c)throw Error(m(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){e=e.next;d=d.baseState;\nvar h=g=f=null,k=e;do{var l=k.lane;if((ic&l)===l)null!==h&&(h=h.next={lane:0,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null}),d=k.eagerReducer===a?k.eagerState:a(d,k.action);else{var n={lane:l,action:k.action,eagerReducer:k.eagerReducer,eagerState:k.eagerState,next:null};null===h?(g=h=n,f=d):h=h.next=n;y.lanes|=l;La|=l}k=k.next}while(null!==k&&k!==e);null===h?f=d:h.next=g;X(d,b.memoizedState)||(fa=!0);b.memoizedState=d;b.baseState=f;b.baseQueue=h;c.lastRenderedState=\nd}return[b.memoizedState,c.dispatch]}function mc(a,b,c){b=bb();c=b.queue;if(null===c)throw Error(m(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);X(f,b.memoizedState)||(fa=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function nh(a,b,c){var d=b._getVersion;d=d(b._source);var e=b._workInProgressVersionPrimary;if(null!==e)a=e===d;else if(a=a.mutableReadLanes,\na=(ic&a)===a)b._workInProgressVersionPrimary=d,Bb.push(b);if(a)return c(b._source);Bb.push(b);throw Error(m(350));}function oh(a,b,c,d){var e=R;if(null===e)throw Error(m(349));var f=b._getVersion,g=f(b._source),h=jc.current,k=h.useState(function(){return nh(e,b,c)}),l=k[1],n=k[0];k=K;var t=a.memoizedState,r=t.refs,w=r.getSnapshot,z=t.source;t=t.subscribe;var B=y;a.memoizedState={refs:r,source:b,subscribe:d};h.useEffect(function(){r.getSnapshot=c;r.setSnapshot=l;var a=f(b._source);if(!X(g,a)){a=c(b._source);\nX(n,a)||(l(a),a=Oa(B),e.mutableReadLanes|=a&e.pendingLanes);a=e.mutableReadLanes;e.entangledLanes|=a;for(var d=e.entanglements,h=a;0<h;){var k=31-Ba(h),m=1<<k;d[k]|=a;h&=~m}}},[c,b,d]);h.useEffect(function(){return d(b._source,function(){var a=r.getSnapshot,c=r.setSnapshot;try{c(a(b._source));var d=Oa(B);e.mutableReadLanes|=d&e.pendingLanes}catch(q){c(function(){throw q;})}})},[b,d]);X(w,c)&&X(z,b)&&X(t,d)||(a={pending:null,dispatch:null,lastRenderedReducer:ma,lastRenderedState:n},a.dispatch=l=Me.bind(null,\ny,a),k.queue=a,k.baseQueue=null,n=nh(e,b,c),k.memoizedState=k.baseState=n);return n}function ph(a,b,c){var d=bb();return oh(d,a,b,c)}function nc(a){var b=ab();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a=b.queue={pending:null,dispatch:null,lastRenderedReducer:ma,lastRenderedState:a};a=a.dispatch=Me.bind(null,y,a);return[b.memoizedState,a]}function ld(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=y.updateQueue;null===b?(b={lastEffect:null},y.updateQueue=b,b.lastEffect=\na.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function qh(a){var b=ab();a={current:a};return b.memoizedState=a}function md(a){return bb().memoizedState}function Ne(a,b,c,d){var e=ab();y.flags|=a;e.memoizedState=ld(1|b,c,void 0,void 0===d?null:d)}function Oe(a,b,c,d){var e=bb();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Ke(d,g.deps)){ld(b,c,f,d);return}}y.flags|=a;e.memoizedState=ld(1|\nb,c,f,d)}function rh(a,b){return Ne(516,4,a,b)}function nd(a,b){return Oe(516,4,a,b)}function sh(a,b){return Oe(4,2,a,b)}function th(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function uh(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Oe(4,2,th.bind(null,b,a),c)}function Pe(a,b){}function vh(a,b){var c=bb();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Ke(b,d[1]))return d[0];\nc.memoizedState=[a,b];return a}function wh(a,b){var c=bb();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Ke(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function tj(a,b){var c=wb();Za(98>c?98:c,function(){a(!0)});Za(97<c?97:c,function(){var c=aa.transition;aa.transition=1;try{a(!1),b()}finally{aa.transition=c}})}function Me(a,b,c){var d=W(),e=Oa(a),f={lane:e,action:c,eagerReducer:null,eagerState:null,next:null},g=b.pending;null===g?f.next=f:(f.next=g.next,g.next=f);\nb.pending=f;g=a.alternate;if(a===y||null!==g&&g===y)kc=kd=!0;else{if(0===a.lanes&&(null===g||0===g.lanes)&&(g=b.lastRenderedReducer,null!==g))try{var h=b.lastRenderedState,k=g(h,c);f.eagerReducer=g;f.eagerState=k;if(X(k,h))return}catch(v){}finally{}Pa(a,e,d)}}function U(a,b,c,d){b.child=null===a?xh(b,null,c,d):od(b,a.child,c,d)}function yh(a,b,c,d,e){c=c.render;var f=b.ref;yb(b,e);d=Le(a,b,c,d,f,e);if(null!==a&&!fa)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,sa(a,b,e);b.flags|=1;\nU(a,b,d,e);return b.child}function zh(a,b,c,d,e,f){if(null===a){var g=c.type;if(\"function\"===typeof g&&!Qe(g)&&void 0===g.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=g,Ah(a,b,g,d,e,f);a=fd(c.type,null,d,b,b.mode,f);a.ref=b.ref;a.return=b;return b.child=a}g=a.child;if(0===(e&f)&&(e=g.memoizedProps,c=c.compare,c=null!==c?c:Zb,c(e,d)&&a.ref===b.ref))return sa(a,b,f);b.flags|=1;a=Ma(g,d);a.ref=b.ref;a.return=b;return b.child=a}function Ah(a,b,c,d,e,f){if(null!==a&&Zb(a.memoizedProps,\nd)&&a.ref===b.ref)if(fa=!1,0!==(f&e))0!==(a.flags&16384)&&(fa=!0);else return b.lanes=a.lanes,sa(a,b,f);return Re(a,b,c,d,f)}function Se(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode||\"unstable-defer-without-hiding\"===d.mode)if(0===(b.mode&4))b.memoizedState={baseLanes:0},pd(b,c);else if(0!==(c&1073741824))b.memoizedState={baseLanes:0},pd(b,null!==f?f.baseLanes:c);else return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState=\n{baseLanes:a},pd(b,a),null;else null!==f?(d=f.baseLanes|c,b.memoizedState=null):d=c,pd(b,d);U(a,b,e,c);return b.child}function Bh(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=128}function Re(a,b,c,d,e){var f=S(c)?Ya:D.current;f=vb(b,f);yb(b,e);c=Le(a,b,c,d,f,e);if(null!==a&&!fa)return b.updateQueue=a.updateQueue,b.flags&=-517,a.lanes&=~e,sa(a,b,e);b.flags|=1;U(a,b,c,e);return b.child}function Ch(a,b,c,d,e){if(S(c)){var f=!0;Xc(b)}else f=!1;yb(b,e);if(null===b.stateNode)null!==\na&&(a.alternate=null,b.alternate=null,b.flags|=2),fh(b,c,d),Ce(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Y(l):(l=S(c)?Ya:D.current,l=vb(b,l));var m=c.getDerivedStateFromProps,n=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;n||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==d||k!==l)&&gh(b,g,d,l);Ka=!1;var r=b.memoizedState;\ng.state=r;cc(b,d,g,e);k=b.memoizedState;h!==d||r!==k||J.current||Ka?(\"function\"===typeof m&&(cd(b,c,m,d),k=b.memoizedState),(h=Ka||eh(b,c,h,d,r,k,l))?(n||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4)):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),\nb.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:ea(b.type,h);g.props=l;n=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Y(k):(k=S(c)?Ya:D.current,k=vb(b,k));var t=c.getDerivedStateFromProps;(m=\"function\"===typeof t||\"function\"===typeof g.getSnapshotBeforeUpdate)||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\n\"function\"!==typeof g.componentWillReceiveProps||(h!==n||r!==k)&&gh(b,g,d,k);Ka=!1;r=b.memoizedState;g.state=r;cc(b,d,g,e);var w=b.memoizedState;h!==n||r!==w||J.current||Ka?(\"function\"===typeof t&&(cd(b,c,t,d),w=b.memoizedState),(l=Ka||eh(b,c,l,d,r,w,k))?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,w,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&g.UNSAFE_componentWillUpdate(d,\nw,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=256)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=256),b.memoizedProps=d,b.memoizedState=w),g.props=d,g.state=w,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==\ntypeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=256),d=!1)}return Te(a,b,c,d,f,e)}function Te(a,b,c,d,e,f){Bh(a,b);var g=0!==(b.flags&64);if(!d&&!g)return e&&Ug(b,c,!1),sa(a,b,f);d=b.stateNode;uj.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=od(b,a.child,null,f),b.child=od(b,null,h,f)):U(a,b,h,f);b.memoizedState=d.state;e&&Ug(b,c,!0);return b.child}function Dh(a){var b=a.stateNode;b.pendingContext?\nSg(a,b.pendingContext,b.pendingContext!==b.context):b.context&&Sg(a,b.context,!1);Fe(a,b.containerInfo)}function Eh(a,b,c){var d=b.pendingProps,e=E.current,f=!1,g;(g=0!==(b.flags&64))||(g=null!==a&&null===a.memoizedState?!1:0!==(e&2));g?(f=!0,b.flags&=-65):null!==a&&null===a.memoizedState||void 0===d.fallback||!0===d.unstable_avoidThisFallback||(e|=1);A(E,e&1);if(null===a){void 0!==d.fallback&&He(b);a=d.children;e=d.fallback;if(f)return a=Fh(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=\nqd,a;if(\"number\"===typeof d.unstable_expectedLoadTime)return a=Fh(b,a,e,c),b.child.memoizedState={baseLanes:c},b.memoizedState=qd,b.lanes=33554432,a;c=Ue({mode:\"visible\",children:a},b.mode,c,null);c.return=b;return b.child=c}if(null!==a.memoizedState){if(f)return d=Gh(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=qd,d;c=Hh(a,b,d.children,c);b.memoizedState=null;return c}if(f)return d=\nGh(a,b,d.children,d.fallback,c),f=b.child,e=a.child.memoizedState,f.memoizedState=null===e?{baseLanes:c}:{baseLanes:e.baseLanes|c},f.childLanes=a.childLanes&~c,b.memoizedState=qd,d;c=Hh(a,b,d.children,c);b.memoizedState=null;return c}function Fh(a,b,c,d){var e=a.mode,f=a.child;b={mode:\"hidden\",children:b};0===(e&2)&&null!==f?(f.childLanes=0,f.pendingProps=b):f=Ue(b,e,0,null);c=zb(c,e,d,null);f.return=a;c.return=a;f.sibling=c;a.child=f;return c}function Hh(a,b,c,d){var e=a.child;a=e.sibling;c=Ma(e,\n{mode:\"visible\",children:c});0===(b.mode&2)&&(c.lanes=d);c.return=b;c.sibling=null;null!==a&&(a.nextEffect=null,a.flags=8,b.firstEffect=b.lastEffect=a);return b.child=c}function Gh(a,b,c,d,e){var f=b.mode,g=a.child;a=g.sibling;var h={mode:\"hidden\",children:c};0===(f&2)&&b.child!==g?(c=b.child,c.childLanes=0,c.pendingProps=h,g=c.lastEffect,null!==g?(b.firstEffect=c.firstEffect,b.lastEffect=g,g.nextEffect=null):b.firstEffect=b.lastEffect=null):c=Ma(g,h);null!==a?d=Ma(a,d):(d=zb(d,f,e,null),d.flags|=\n2);d.return=b;c.return=b;c.sibling=d;b.child=c;return d}function Ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);ah(a.return,b)}function Ve(a,b,c,d,e,f){var g=a.memoizedState;null===g?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e,lastEffect:f}:(g.isBackwards=b,g.rendering=null,g.renderingStartTime=0,g.last=d,g.tail=c,g.tailMode=e,g.lastEffect=f)}function Jh(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;U(a,b,d.children,c);d=E.current;\nif(0!==(d&2))d=d&1|2,b.flags|=64;else{if(null!==a&&0!==(a.flags&64))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&Ih(a,c);else if(19===a.tag)Ih(a,c);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}A(E,d);if(0===(b.mode&2))b.memoizedState=null;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===\nhd(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);Ve(b,!1,e,c,f,b.lastEffect);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===hd(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}Ve(b,!0,c,null,f,b.lastEffect);break;case \"together\":Ve(b,!1,null,null,void 0,b.lastEffect);break;default:b.memoizedState=null}return b.child}function sa(a,b,c){null!==a&&(b.dependencies=a.dependencies);La|=b.lanes;if(0!==(c&\nb.childLanes)){if(null!==a&&b.child!==a.child)throw Error(m(153));if(null!==b.child){a=b.child;c=Ma(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Ma(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}return null}function oc(a,b){if(!la)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&\n(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}function vj(a,b,c){var d=b.pendingProps;switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return S(b.type)&&(t(J),t(D)),null;case 3:Ab();t(J);t(D);Je();d=b.stateNode;d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)id(b)?b.flags|=4:d.hydrate||(b.flags|=256);Kh(b);return null;case 5:Ge(b);var e=$a(gc.current);\nc=b.type;if(null!==a&&null!=b.stateNode)wj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=128);else{if(!d){if(null===b.stateNode)throw Error(m(166));return null}a=$a(ka.current);if(id(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Fa]=b;d[Wc]=f;switch(c){case \"dialog\":z(\"cancel\",d);z(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":z(\"load\",d);break;case \"video\":case \"audio\":for(a=0;a<pc.length;a++)z(pc[a],d);break;case \"source\":z(\"error\",d);break;case \"img\":case \"image\":case \"link\":z(\"error\",d);\nz(\"load\",d);break;case \"details\":z(\"toggle\",d);break;case \"input\":Gf(d,f);z(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};z(\"invalid\",d);break;case \"textarea\":Jf(d,f),z(\"invalid\",d)}Sd(c,f);a=null;for(var g in f)f.hasOwnProperty(g)&&(e=f[g],\"children\"===g?\"string\"===typeof e?d.textContent!==e&&(a=[\"children\",e]):\"number\"===typeof e&&d.textContent!==\"\"+e&&(a=[\"children\",\"\"+e]):Ib.hasOwnProperty(g)&&null!=e&&\"onScroll\"===g&&z(\"scroll\",d));switch(c){case \"input\":Fc(d);If(d,\nf,!0);break;case \"textarea\":Fc(d);Lf(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Vc)}d=a;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=Mf(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?\ng.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Fa]=b;a[Wc]=d;xj(a,b,!1,!1);b.stateNode=a;g=Td(c,d);switch(c){case \"dialog\":z(\"cancel\",a);z(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":z(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<pc.length;e++)z(pc[e],a);e=d;break;case \"source\":z(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":z(\"error\",a);z(\"load\",a);e=d;break;case \"details\":z(\"toggle\",a);e=d;break;case \"input\":Gf(a,d);e=Md(a,d);z(\"invalid\",\na);break;case \"option\":e=Pd(a,d);break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=B({},d,{value:void 0});z(\"invalid\",a);break;case \"textarea\":Jf(a,d);e=Qd(a,d);z(\"invalid\",a);break;default:e=d}Sd(c,e);var h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?Of(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&Lh(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==c||\"\"!==k)&&qc(a,k):\"number\"===typeof k&&qc(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==\nf&&\"autoFocus\"!==f&&(Ib.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&z(\"scroll\",a):null!=k&&Ed(a,f,k,g))}switch(c){case \"input\":Fc(a);If(a,d,!1);break;case \"textarea\":Fc(a);Lf(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+xa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?ib(a,!!d.multiple,f,!1):null!=d.defaultValue&&ib(a,!!d.multiple,d.defaultValue,!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Vc)}Pg(c,d)&&(b.flags|=4)}null!==b.ref&&(b.flags|=\n128)}return null;case 6:if(a&&null!=b.stateNode)yj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(m(166));c=$a(gc.current);$a(ka.current);id(b)?(d=b.stateNode,c=b.memoizedProps,d[Fa]=b,d.nodeValue!==c&&(b.flags|=4)):(d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Fa]=b,b.stateNode=d)}return null;case 13:t(E);d=b.memoizedState;if(0!==(b.flags&64))return b.lanes=c,b;d=null!==d;c=!1;null===a?void 0!==b.memoizedProps.fallback&&id(b):c=null!==a.memoizedState;\nif(d&&!c&&0!==(b.mode&2))if(null===a&&!0!==b.memoizedProps.unstable_avoidThisFallback||0!==(E.current&1))0===L&&(L=3);else{if(0===L||3===L)L=4;null===R||0===(La&134217727)&&0===(Cb&134217727)||Db(R,O)}if(d||c)b.flags|=4;return null;case 4:return Ab(),Kh(b),null===a&&Cg(b.stateNode.containerInfo),null;case 10:return Ae(b),null;case 17:return S(b.type)&&(t(J),t(D)),null;case 19:t(E);d=b.memoizedState;if(null===d)return null;f=0!==(b.flags&64);g=d.rendering;if(null===g)if(f)oc(d,!1);else{if(0!==L||null!==\na&&0!==(a.flags&64))for(a=b.child;null!==a;){g=hd(a);if(null!==g){b.flags|=64;oc(d,!1);f=g.updateQueue;null!==f&&(b.updateQueue=f,b.flags|=4);null===d.lastEffect&&(b.firstEffect=null);b.lastEffect=d.lastEffect;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=2,f.nextEffect=null,f.firstEffect=null,f.lastEffect=null,g=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=\ng.lanes,f.child=g.child,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;A(E,E.current&1|2);return b.child}a=a.sibling}null!==d.tail&&P()>We&&(b.flags|=64,f=!0,oc(d,!1),b.lanes=33554432)}else{if(!f)if(a=hd(g),null!==a){if(b.flags|=64,f=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),oc(d,!0),null===d.tail&&\"hidden\"===d.tailMode&&\n!g.alternate&&!la)return b=b.lastEffect=d.lastEffect,null!==b&&(b.nextEffect=null),null}else 2*P()-d.renderingStartTime>We&&1073741824!==c&&(b.flags|=64,f=!0,oc(d,!1),b.lanes=33554432);d.isBackwards?(g.sibling=b.child,b.child=g):(c=d.last,null!==c?c.sibling=g:b.child=g,d.last=g)}return null!==d.tail?(c=d.tail,d.rendering=c,d.tail=c.sibling,d.lastEffect=b.lastEffect,d.renderingStartTime=P(),c.sibling=null,b=E.current,A(E,f?b&1|2:b&1),c):null;case 23:case 24:return ta=cb.current,t(cb),null!==a&&null!==\na.memoizedState!==(null!==b.memoizedState)&&\"unstable-defer-without-hiding\"!==d.mode&&(b.flags|=4),null}throw Error(m(156,b.tag));}function zj(a,b){switch(a.tag){case 1:return S(a.type)&&(t(J),t(D)),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 3:Ab();t(J);t(D);Je();b=a.flags;if(0!==(b&64))throw Error(m(285));a.flags=b&-4097|64;return a;case 5:return Ge(a),null;case 13:return t(E),b=a.flags,b&4096?(a.flags=b&-4097|64,a):null;case 19:return t(E),null;case 4:return Ab(),null;case 10:return Ae(a),\nnull;case 23:case 24:return ta=cb.current,t(cb),null;default:return null}}function Xe(a,b){try{var c=\"\",d=b;do c+=pi(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e}}function Ye(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}function Mh(a,b,c){c=Ia(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){rd||(rd=!0,Ze=d);Ye(a,b)};return c}function Nh(a,b,c){c=Ia(-1,c);c.tag=\n3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){Ye(a,b);return d(e)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){\"function\"!==typeof d&&(null===na?na=new Set([this]):na.add(this),Ye(a,b));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}function Oh(a){var b=a.ref;if(null!==b)if(\"function\"===typeof b)try{b(null)}catch(c){Qa(a,c)}else b.current=null}function Aj(a,\nb){switch(b.tag){case 0:case 11:case 15:case 22:return;case 1:if(b.flags&256&&null!==a){var c=a.memoizedProps,d=a.memoizedState;a=b.stateNode;b=a.getSnapshotBeforeUpdate(b.elementType===b.type?c:ea(b.type,c),d);a.__reactInternalSnapshotBeforeUpdate=b}return;case 3:b.flags&256&&te(b.stateNode.containerInfo);return;case 5:case 6:case 4:case 17:return}throw Error(m(163));}function Bj(a,b,c,d){switch(c.tag){case 0:case 11:case 15:case 22:b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;\ndo 3===(a.tag&3)&&(d=a.create,a.destroy=d()),a=a.next;while(a!==b)}b=c.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){a=b=b.next;do{var e=a;d=e.next;e=e.tag;0!==(e&4)&&0!==(e&1)&&(Ph(c,a),Cj(c,a));a=d}while(a!==b)}return;case 1:a=c.stateNode;c.flags&4&&(null===b?a.componentDidMount():(d=c.elementType===c.type?b.memoizedProps:ea(c.type,b.memoizedProps),a.componentDidUpdate(d,b.memoizedState,a.__reactInternalSnapshotBeforeUpdate)));b=c.updateQueue;null!==b&&dh(c,b,a);return;case 3:b=c.updateQueue;\nif(null!==b){a=null;if(null!==c.child)switch(c.child.tag){case 5:a=c.child.stateNode;break;case 1:a=c.child.stateNode}dh(c,b,a)}return;case 5:a=c.stateNode;null===b&&c.flags&4&&Pg(c.type,c.memoizedProps)&&a.focus();return;case 6:return;case 4:return;case 12:return;case 13:null===c.memoizedState&&(c=c.alternate,null!==c&&(c=c.memoizedState,null!==c&&(c=c.dehydrated,null!==c&&bg(c))));return;case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(m(163));}function Qh(a,b){for(var c=a;;){if(5===\nc.tag){var d=c.stateNode;if(b)d=d.style,\"function\"===typeof d.setProperty?d.setProperty(\"display\",\"none\",\"important\"):d.display=\"none\";else{d=c.stateNode;var e=c.memoizedProps.style;e=void 0!==e&&null!==e&&e.hasOwnProperty(\"display\")?e.display:null;d.style.display=Nf(\"display\",e)}}else if(6===c.tag)c.stateNode.nodeValue=b?\"\":c.memoizedProps;else if((23!==c.tag&&24!==c.tag||null===c.memoizedState||c===a)&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===a)break;for(;null===c.sibling;){if(null===\nc.return||c.return===a)return;c=c.return}c.sibling.return=c.return;c=c.sibling}}function Rh(a,b,c){if(db&&\"function\"===typeof db.onCommitFiberUnmount)try{db.onCommitFiberUnmount($e,b)}catch(f){}switch(b.tag){case 0:case 11:case 14:case 15:case 22:a=b.updateQueue;if(null!==a&&(a=a.lastEffect,null!==a)){c=a=a.next;do{var d=c,e=d.destroy;d=d.tag;if(void 0!==e)if(0!==(d&4))Ph(b,c);else{d=b;try{e()}catch(f){Qa(d,f)}}c=c.next}while(c!==a)}break;case 1:Oh(b);a=b.stateNode;if(\"function\"===typeof a.componentWillUnmount)try{a.props=\nb.memoizedProps,a.state=b.memoizedState,a.componentWillUnmount()}catch(f){Qa(b,f)}break;case 5:Oh(b);break;case 4:Sh(a,b)}}function Th(a){a.alternate=null;a.child=null;a.dependencies=null;a.firstEffect=null;a.lastEffect=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.return=null;a.updateQueue=null}function Uh(a){return 5===a.tag||3===a.tag||4===a.tag}function Vh(a){a:{for(var b=a.return;null!==b;){if(Uh(b))break a;b=b.return}throw Error(m(160));}var c=b;b=c.stateNode;switch(c.tag){case 5:var d=\n!1;break;case 3:b=b.containerInfo;d=!0;break;case 4:b=b.containerInfo;d=!0;break;default:throw Error(m(161));}c.flags&16&&(qc(b,\"\"),c.flags&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c.return||Uh(c.return)){c=null;break a}c=c.return}c.sibling.return=c.return;for(c=c.sibling;5!==c.tag&&6!==c.tag&&18!==c.tag;){if(c.flags&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child.return=c,c=c.child}if(!(c.flags&2)){c=c.stateNode;break a}}d?af(a,c,b):bf(a,c,b)}function af(a,b,c){var d=\na.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Vc));else if(4!==d&&(a=a.child,null!==a))for(af(a,b,c),a=a.sibling;null!==a;)af(a,b,c),a=a.sibling}function bf(a,b,c){var d=a.tag,e=5===d||6===d;if(e)a=e?a.stateNode:a.stateNode.instance,b?c.insertBefore(a,b):c.appendChild(a);\nelse if(4!==d&&(a=a.child,null!==a))for(bf(a,b,c),a=a.sibling;null!==a;)bf(a,b,c),a=a.sibling}function Sh(a,b,c){c=b;for(var d=!1,e,f;;){if(!d){e=c.return;a:for(;;){if(null===e)throw Error(m(160));f=e.stateNode;switch(e.tag){case 5:e=f;f=!1;break a;case 3:e=f.containerInfo;f=!0;break a;case 4:e=f.containerInfo;f=!0;break a}e=e.return}d=!0}if(5===c.tag||6===c.tag){a:for(var g=a,h=c,k=h;;)if(Rh(g,k),null!==k.child&&4!==k.tag)k.child.return=k,k=k.child;else{if(k===h)break a;for(;null===k.sibling;){if(null===\nk.return||k.return===h)break a;k=k.return}k.sibling.return=k.return;k=k.sibling}f?(g=e,h=c.stateNode,8===g.nodeType?g.parentNode.removeChild(h):g.removeChild(h)):e.removeChild(c.stateNode)}else if(4===c.tag){if(null!==c.child){e=c.stateNode.containerInfo;f=!0;c.child.return=c;c=c.child;continue}}else if(Rh(a,c),null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return;4===c.tag&&(d=!1)}c.sibling.return=c.return;c=\nc.sibling}}function cf(a,b){switch(b.tag){case 0:case 11:case 14:case 15:case 22:var c=b.updateQueue;c=null!==c?c.lastEffect:null;if(null!==c){var d=c=c.next;do 3===(d.tag&3)&&(a=d.destroy,d.destroy=void 0,void 0!==a&&a()),d=d.next;while(d!==c)}return;case 1:return;case 5:c=b.stateNode;if(null!=c){d=b.memoizedProps;var e=null!==a?a.memoizedProps:d;a=b.type;var f=b.updateQueue;b.updateQueue=null;if(null!==f){c[Wc]=d;\"input\"===a&&\"radio\"===d.type&&null!=d.name&&Hf(c,d);Td(a,e);b=Td(a,d);for(e=0;e<f.length;e+=\n2){var g=f[e],h=f[e+1];\"style\"===g?Of(c,h):\"dangerouslySetInnerHTML\"===g?Lh(c,h):\"children\"===g?qc(c,h):Ed(c,g,h,b)}switch(a){case \"input\":Nd(c,d);break;case \"textarea\":Kf(c,d);break;case \"select\":a=c._wrapperState.wasMultiple,c._wrapperState.wasMultiple=!!d.multiple,f=d.value,null!=f?ib(c,!!d.multiple,f,!1):a!==!!d.multiple&&(null!=d.defaultValue?ib(c,!!d.multiple,d.defaultValue,!0):ib(c,!!d.multiple,d.multiple?[]:\"\",!1))}}}return;case 6:if(null===b.stateNode)throw Error(m(162));b.stateNode.nodeValue=\nb.memoizedProps;return;case 3:c=b.stateNode;c.hydrate&&(c.hydrate=!1,bg(c.containerInfo));return;case 12:return;case 13:null!==b.memoizedState&&(df=P(),Qh(b.child,!0));Wh(b);return;case 19:Wh(b);return;case 17:return;case 23:case 24:Qh(b,null!==b.memoizedState);return}throw Error(m(163));}function Wh(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Dj);b.forEach(function(b){var d=Ej.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}function Fj(a,\nb){return null!==a&&(a=a.memoizedState,null===a||null!==a.dehydrated)?(b=b.memoizedState,null!==b&&null===b.dehydrated):!1}function Eb(){We=P()+500}function W(){return 0!==(n&48)?P():-1!==sd?sd:sd=P()}function Oa(a){a=a.mode;if(0===(a&2))return 1;if(0===(a&4))return 99===wb()?1:2;0===ua&&(ua=Fb);if(0!==Gj.transition){0!==td&&(td=null!==ef?ef.pendingLanes:0);a=ua;var b=4186112&~td;b&=-b;0===b&&(a=4186112&~a,b=a&-a,0===b&&(b=8192));return b}a=wb();0!==(n&4)&&98===a?a=Nc(12,ua):(a=Fi(a),a=Nc(a,ua));\nreturn a}function Pa(a,b,c){if(50<rc)throw rc=0,ff=null,Error(m(185));a=ud(a,b);if(null===a)return null;Oc(a,b,c);a===R&&(Cb|=b,4===L&&Db(a,O));var d=wb();1===b?0!==(n&8)&&0===(n&48)?gf(a):(ba(a,c),0===n&&(Eb(),ja())):(0===(n&4)||98!==d&&99!==d||(null===va?va=new Set([a]):va.add(a)),ba(a,c));ef=a}function ud(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}\nfunction ba(a,b){for(var c=a.callbackNode,d=a.suspendedLanes,e=a.pingedLanes,f=a.expirationTimes,g=a.pendingLanes;0<g;){var h=31-Ba(g),k=1<<h,l=f[h];if(-1===l){if(0===(k&d)||0!==(k&e)){l=b;mb(k);var m=w;f[h]=10<=m?l+250:6<=m?l+5E3:-1}}else l<=b&&(a.expiredLanes|=k);g&=~k}d=Wb(a,a===R?O:0);b=w;if(0===d)null!==c&&(c!==hf&&xe(c),a.callbackNode=null,a.callbackPriority=0);else{if(null!==c){if(a.callbackPriority===b)return;c!==hf&&xe(c)}15===b?(c=gf.bind(null,a),null===pa?(pa=[c],Zc=we(Yc,$g)):pa.push(c),\nc=hf):14===b?c=bc(99,gf.bind(null,a)):(c=Gi(b),c=bc(c,Xh.bind(null,a)));a.callbackPriority=b;a.callbackNode=c}}function Xh(a){sd=-1;td=ua=0;if(0!==(n&48))throw Error(m(327));var b=a.callbackNode;if(Ra()&&a.callbackNode!==b)return null;var c=Wb(a,a===R?O:0);if(0===c)return null;var d=c;var e=n;n|=16;var f=Yh();if(R!==a||O!==d)Eb(),Gb(a,d);do try{Hj();break}catch(h){Zh(a,h)}while(1);ze();vd.current=f;n=e;null!==G?d=0:(R=null,O=0,d=L);if(0!==(Fb&Cb))Gb(a,0);else if(0!==d){2===d&&(n|=64,a.hydrate&&(a.hydrate=\n!1,te(a.containerInfo)),c=eg(a),0!==c&&(d=sc(a,c)));if(1===d)throw b=wd,Gb(a,0),Db(a,c),ba(a,P()),b;a.finishedWork=a.current.alternate;a.finishedLanes=c;switch(d){case 0:case 1:throw Error(m(345));case 2:eb(a);break;case 3:Db(a,c);if((c&62914560)===c&&(d=df+500-P(),10<d)){if(0!==Wb(a,0))break;e=a.suspendedLanes;if((e&c)!==c){W();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=$h(eb.bind(null,a),d);break}eb(a);break;case 4:Db(a,c);if((c&4186112)===c)break;d=a.eventTimes;for(e=-1;0<c;){var g=\n31-Ba(c);f=1<<g;g=d[g];g>e&&(e=g);c&=~f}c=e;c=P()-c;c=(120>c?120:480>c?480:1080>c?1080:1920>c?1920:3E3>c?3E3:4320>c?4320:1960*Ij(c/1960))-c;if(10<c){a.timeoutHandle=$h(eb.bind(null,a),c);break}eb(a);break;case 5:eb(a);break;default:throw Error(m(329));}}ba(a,P());return a.callbackNode===b?Xh.bind(null,a):null}function Db(a,b){b&=~jf;b&=~Cb;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-Ba(b),d=1<<c;a[c]=-1;b&=~d}}function gf(a){if(0!==(n&48))throw Error(m(327));Ra();\nif(a===R&&0!==(a.expiredLanes&O)){var b=O;var c=sc(a,b);0!==(Fb&Cb)&&(b=Wb(a,b),c=sc(a,b))}else b=Wb(a,0),c=sc(a,b);0!==a.tag&&2===c&&(n|=64,a.hydrate&&(a.hydrate=!1,te(a.containerInfo)),b=eg(a),0!==b&&(c=sc(a,b)));if(1===c)throw c=wd,Gb(a,0),Db(a,b),ba(a,P()),c;a.finishedWork=a.current.alternate;a.finishedLanes=b;eb(a);ba(a,P());return null}function Jj(){if(null!==va){var a=va;va=null;a.forEach(function(a){a.expiredLanes|=24&a.pendingLanes;ba(a,P())})}ja()}function ai(a,b){var c=n;n|=1;try{return a(b)}finally{n=\nc,0===n&&(Eb(),ja())}}function bi(a,b){var c=n;n&=-2;n|=8;try{return a(b)}finally{n=c,0===n&&(Eb(),ja())}}function pd(a,b){A(cb,ta);ta|=b;Fb|=b}function Gb(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Kj(c));if(null!==G)for(c=G.return;null!==c;){var d=c;switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&(t(J),t(D));break;case 3:Ab();t(J);t(D);Je();break;case 5:Ge(d);break;case 4:Ab();break;case 13:t(E);break;case 19:t(E);break;case 10:Ae(d);\nbreak;case 23:case 24:ta=cb.current,t(cb)}c=c.return}R=a;G=Ma(a.current,null);O=ta=Fb=b;L=0;wd=null;jf=Cb=La=0}function Zh(a,b){do{var c=G;try{ze();jc.current=jd;if(kd){for(var d=y.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}kd=!1}ic=0;K=N=y=null;kc=!1;kf.current=null;if(null===c||null===c.return){L=1;wd=b;G=null;break}a:{var f=a,g=c.return,h=c,k=b;b=O;h.flags|=2048;h.firstEffect=h.lastEffect=null;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k;\nif(0===(h.mode&2)){var m=h.alternate;m?(h.updateQueue=m.updateQueue,h.memoizedState=m.memoizedState,h.lanes=m.lanes):(h.updateQueue=null,h.memoizedState=null)}var n=0!==(E.current&1),r=g;do{var t;if(t=13===r.tag){var w=r.memoizedState;if(null!==w)t=null!==w.dehydrated?!0:!1;else{var z=r.memoizedProps;t=void 0===z.fallback?!1:!0!==z.unstable_avoidThisFallback?!0:n?!1:!0}}if(t){var C=r.updateQueue;if(null===C){var x=new Set;x.add(l);r.updateQueue=x}else C.add(l);if(0===(r.mode&2)){r.flags|=64;h.flags|=\n16384;h.flags&=-2981;if(1===h.tag)if(null===h.alternate)h.tag=17;else{var p=Ia(-1,1);p.tag=2;Ja(h,p)}h.lanes|=1;break a}k=void 0;h=b;var q=f.pingCache;null===q?(q=f.pingCache=new Lj,k=new Set,q.set(l,k)):(k=q.get(l),void 0===k&&(k=new Set,q.set(l,k)));if(!k.has(h)){k.add(h);var u=Mj.bind(null,f,l,h);l.then(u,u)}r.flags|=4096;r.lanes=b;break a}r=r.return}while(null!==r);k=Error((hb(h.type)||\"A React component\")+\" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\")}5!==\nL&&(L=2);k=Xe(k,h);r=g;do{switch(r.tag){case 3:f=k;r.flags|=4096;b&=-b;r.lanes|=b;var B=Mh(r,f,b);ch(r,B);break a;case 1:f=k;var A=r.type,D=r.stateNode;if(0===(r.flags&64)&&(\"function\"===typeof A.getDerivedStateFromError||null!==D&&\"function\"===typeof D.componentDidCatch&&(null===na||!na.has(D)))){r.flags|=4096;b&=-b;r.lanes|=b;var F=Nh(r,f,b);ch(r,F);break a}}r=r.return}while(null!==r)}ci(c)}catch(qa){b=qa;G===c&&null!==c&&(G=c=c.return);continue}break}while(1)}function Yh(){var a=vd.current;vd.current=\njd;return null===a?jd:a}function sc(a,b){var c=n;n|=16;var d=Yh();R===a&&O===b||Gb(a,b);do try{Nj();break}catch(e){Zh(a,e)}while(1);ze();n=c;vd.current=d;if(null!==G)throw Error(m(261));R=null;O=0;return L}function Nj(){for(;null!==G;)di(G)}function Hj(){for(;null!==G&&!Oj();)di(G)}function di(a){var b=Pj(a.alternate,a,ta);a.memoizedProps=a.pendingProps;null===b?ci(a):G=b;kf.current=null}function ci(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&2048)){c=vj(c,b,ta);if(null!==c){G=c;return}c=\nb;if(24!==c.tag&&23!==c.tag||null===c.memoizedState||0!==(ta&1073741824)||0===(c.mode&4)){for(var d=0,e=c.child;null!==e;)d|=e.lanes|e.childLanes,e=e.sibling;c.childLanes=d}null!==a&&0===(a.flags&2048)&&(null===a.firstEffect&&(a.firstEffect=b.firstEffect),null!==b.lastEffect&&(null!==a.lastEffect&&(a.lastEffect.nextEffect=b.firstEffect),a.lastEffect=b.lastEffect),1<b.flags&&(null!==a.lastEffect?a.lastEffect.nextEffect=b:a.firstEffect=b,a.lastEffect=b))}else{c=zj(b);if(null!==c){c.flags&=2047;G=c;\nreturn}null!==a&&(a.firstEffect=a.lastEffect=null,a.flags|=2048)}b=b.sibling;if(null!==b){G=b;return}G=b=a}while(null!==b);0===L&&(L=5)}function eb(a){var b=wb();Za(99,Qj.bind(null,a,b));return null}function Qj(a,b){do Ra();while(null!==tc);if(0!==(n&48))throw Error(m(327));var c=a.finishedWork;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(m(177));a.callbackNode=null;var d=c.lanes|c.childLanes,e=d,f=a.pendingLanes&~e;a.pendingLanes=e;a.suspendedLanes=0;\na.pingedLanes=0;a.expiredLanes&=e;a.mutableReadLanes&=e;a.entangledLanes&=e;e=a.entanglements;for(var g=a.eventTimes,h=a.expirationTimes;0<f;){var k=31-Ba(f),v=1<<k;e[k]=0;g[k]=-1;h[k]=-1;f&=~v}null!==va&&0===(d&24)&&va.has(a)&&va.delete(a);a===R&&(G=R=null,O=0);1<c.flags?null!==c.lastEffect?(c.lastEffect.nextEffect=c,d=c.firstEffect):d=c:d=c.firstEffect;if(null!==d){e=n;n|=32;kf.current=null;lf=Pc;g=xg();if(ne(g)){if(\"selectionStart\"in g)h={start:g.selectionStart,end:g.selectionEnd};else a:if(h=\n(h=g.ownerDocument)&&h.defaultView||window,(v=h.getSelection&&h.getSelection())&&0!==v.rangeCount){h=v.anchorNode;f=v.anchorOffset;k=v.focusNode;v=v.focusOffset;try{h.nodeType,k.nodeType}catch(qa){h=null;break a}var t=0,w=-1,r=-1,z=0,B=0,y=g,C=null;b:for(;;){for(var x;;){y!==h||0!==f&&3!==y.nodeType||(w=t+f);y!==k||0!==v&&3!==y.nodeType||(r=t+v);3===y.nodeType&&(t+=y.nodeValue.length);if(null===(x=y.firstChild))break;C=y;y=x}for(;;){if(y===g)break b;C===h&&++z===f&&(w=t);C===k&&++B===v&&(r=t);if(null!==\n(x=y.nextSibling))break;y=C;C=y.parentNode}y=x}h=-1===w||-1===r?null:{start:w,end:r}}else h=null;h=h||{start:0,end:0}}else h=null;mf={focusedElem:g,selectionRange:h};Pc=!1;uc=null;xd=!1;l=d;do try{Rj()}catch(qa){if(null===l)throw Error(m(330));Qa(l,qa);l=l.nextEffect}while(null!==l);uc=null;l=d;do try{for(g=a;null!==l;){var p=l.flags;p&16&&qc(l.stateNode,\"\");if(p&128){var q=l.alternate;if(null!==q){var u=q.ref;null!==u&&(\"function\"===typeof u?u(null):u.current=null)}}switch(p&1038){case 2:Vh(l);l.flags&=\n-3;break;case 6:Vh(l);l.flags&=-3;cf(l.alternate,l);break;case 1024:l.flags&=-1025;break;case 1028:l.flags&=-1025;cf(l.alternate,l);break;case 4:cf(l.alternate,l);break;case 8:h=l;Sh(g,h);var A=h.alternate;Th(h);null!==A&&Th(A)}l=l.nextEffect}}catch(qa){if(null===l)throw Error(m(330));Qa(l,qa);l=l.nextEffect}while(null!==l);u=mf;q=xg();p=u.focusedElem;g=u.selectionRange;if(q!==p&&p&&p.ownerDocument&&wg(p.ownerDocument.documentElement,p)){null!==g&&ne(p)&&(q=g.start,u=g.end,void 0===u&&(u=q),\"selectionStart\"in\np?(p.selectionStart=q,p.selectionEnd=Math.min(u,p.value.length)):(u=(q=p.ownerDocument||document)&&q.defaultView||window,u.getSelection&&(u=u.getSelection(),h=p.textContent.length,A=Math.min(g.start,h),g=void 0===g.end?A:Math.min(g.end,h),!u.extend&&A>g&&(h=g,g=A,A=h),h=vg(p,A),f=vg(p,g),h&&f&&(1!==u.rangeCount||u.anchorNode!==h.node||u.anchorOffset!==h.offset||u.focusNode!==f.node||u.focusOffset!==f.offset)&&(q=q.createRange(),q.setStart(h.node,h.offset),u.removeAllRanges(),A>g?(u.addRange(q),u.extend(f.node,\nf.offset)):(q.setEnd(f.node,f.offset),u.addRange(q))))));q=[];for(u=p;u=u.parentNode;)1===u.nodeType&&q.push({element:u,left:u.scrollLeft,top:u.scrollTop});\"function\"===typeof p.focus&&p.focus();for(p=0;p<q.length;p++)u=q[p],u.element.scrollLeft=u.left,u.element.scrollTop=u.top}Pc=!!lf;mf=lf=null;a.current=c;l=d;do try{for(p=a;null!==l;){var D=l.flags;D&36&&Bj(p,l.alternate,l);if(D&128){q=void 0;var E=l.ref;if(null!==E){var F=l.stateNode;switch(l.tag){case 5:q=F;break;default:q=F}\"function\"===typeof E?\nE(q):E.current=q}}l=l.nextEffect}}catch(qa){if(null===l)throw Error(m(330));Qa(l,qa);l=l.nextEffect}while(null!==l);l=null;Sj();n=e}else a.current=c;if(Sa)Sa=!1,tc=a,vc=b;else for(l=d;null!==l;)b=l.nextEffect,l.nextEffect=null,l.flags&8&&(D=l,D.sibling=null,D.stateNode=null),l=b;d=a.pendingLanes;0===d&&(na=null);1===d?a===ff?rc++:(rc=0,ff=a):rc=0;c=c.stateNode;if(db&&\"function\"===typeof db.onCommitFiberRoot)try{db.onCommitFiberRoot($e,c,void 0,64===(c.current.flags&64))}catch(qa){}ba(a,P());if(rd)throw rd=\n!1,a=Ze,Ze=null,a;if(0!==(n&8))return null;ja();return null}function Rj(){for(;null!==l;){var a=l.alternate;xd||null===uc||(0!==(l.flags&8)?Wf(l,uc)&&(xd=!0):13===l.tag&&Fj(a,l)&&Wf(l,uc)&&(xd=!0));var b=l.flags;0!==(b&256)&&Aj(a,l);0===(b&512)||Sa||(Sa=!0,bc(97,function(){Ra();return null}));l=l.nextEffect}}function Ra(){if(90!==vc){var a=97<vc?97:vc;vc=90;return Za(a,Tj)}return!1}function Cj(a,b){nf.push(b,a);Sa||(Sa=!0,bc(97,function(){Ra();return null}))}function Ph(a,b){of.push(b,a);Sa||(Sa=\n!0,bc(97,function(){Ra();return null}))}function Tj(){if(null===tc)return!1;var a=tc;tc=null;if(0!==(n&48))throw Error(m(331));var b=n;n|=32;var c=of;of=[];for(var d=0;d<c.length;d+=2){var e=c[d],f=c[d+1],g=e.destroy;e.destroy=void 0;if(\"function\"===typeof g)try{g()}catch(k){if(null===f)throw Error(m(330));Qa(f,k)}}c=nf;nf=[];for(d=0;d<c.length;d+=2){e=c[d];f=c[d+1];try{var h=e.create;e.destroy=h()}catch(k){if(null===f)throw Error(m(330));Qa(f,k)}}for(h=a.current.firstEffect;null!==h;)a=h.nextEffect,\nh.nextEffect=null,h.flags&8&&(h.sibling=null,h.stateNode=null),h=a;n=b;ja();return!0}function ei(a,b,c){b=Xe(c,b);b=Mh(a,b,1);Ja(a,b);b=W();a=ud(a,1);null!==a&&(Oc(a,1,b),ba(a,b))}function Qa(a,b){if(3===a.tag)ei(a,a,b);else for(var c=a.return;null!==c;){if(3===c.tag){ei(c,a,b);break}else if(1===c.tag){var d=c.stateNode;if(\"function\"===typeof c.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===na||!na.has(d))){a=Xe(b,a);var e=Nh(c,a,1);Ja(c,e);e=W();c=ud(c,1);if(null!==\nc)Oc(c,1,e),ba(c,e);else if(\"function\"===typeof d.componentDidCatch&&(null===na||!na.has(d)))try{d.componentDidCatch(b,a)}catch(f){}break}}c=c.return}}function Mj(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=W();a.pingedLanes|=a.suspendedLanes&c;R===a&&(O&c)===c&&(4===L||3===L&&(O&62914560)===O&&500>P()-df?Gb(a,0):jf|=c);ba(a,b)}function Ej(a,b){var c=a.stateNode;null!==c&&c.delete(b);b=0;0===b&&(b=a.mode,0===(b&2)?b=1:0===(b&4)?b=99===wb()?1:2:(0===ua&&(ua=Fb),b=nb(62914560&~ua),0===b&&(b=4194304)));\nc=W();a=ud(a,b);null!==a&&(Oc(a,b,c),ba(a,c))}function Uj(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.flags=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.childLanes=this.lanes=0;this.alternate=null}function Qe(a){a=a.prototype;return!(!a||!a.isReactComponent)}function Vj(a){if(\"function\"===\ntypeof a)return Qe(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Dc)return 11;if(a===Ec)return 14}return 2}function Ma(a,b){var c=a.alternate;null===c?(c=Z(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.nextEffect=null,c.firstEffect=null,c.lastEffect=null);c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=\na.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};c.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}function fd(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)Qe(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case wa:return zb(c.children,e,f,b);case fi:g=8;e|=16;break;case Hd:g=8;e|=1;break;case Lb:return a=Z(12,c,b,e|8),a.elementType=Lb,a.type=Lb,a.lanes=f,a;case Mb:return a=Z(13,c,b,e),a.type=Mb,a.elementType=Mb,a.lanes=\nf,a;case Cc:return a=Z(19,c,b,e),a.elementType=Cc,a.lanes=f,a;case pf:return Ue(c,e,f,b);case qf:return a=Z(24,c,b,e),a.elementType=qf,a.lanes=f,a;default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Jd:g=10;break a;case Id:g=9;break a;case Dc:g=11;break a;case Ec:g=14;break a;case Ld:g=16;d=null;break a;case Kd:g=22;break a}throw Error(m(130,null==a?a:typeof a,\"\"));}b=Z(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function zb(a,b,c,d){a=Z(7,a,d,b);a.lanes=c;return a}function Ue(a,\nb,c,d){a=Z(23,a,d,b);a.elementType=pf;a.lanes=c;return a}function De(a,b,c){a=Z(6,a,null,b);a.lanes=c;return a}function Ee(a,b,c){b=Z(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}function Wj(a,b,c){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.pendingContext=this.context=null;this.hydrate=c;this.callbackNode=\nnull;this.callbackPriority=0;this.eventTimes=ge(0);this.expirationTimes=ge(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=ge(0);this.mutableSourceEagerHydrationData=null}function Xj(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ua,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}function yd(a,b,c,d){var e=b.current,f=W(),g=Oa(e);\na:if(c){c=c._reactInternals;b:{if(Va(c)!==c||1!==c.tag)throw Error(m(170));var h=c;do{switch(h.tag){case 3:h=h.stateNode.context;break b;case 1:if(S(h.type)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}}h=h.return}while(null!==h);throw Error(m(171));}if(1===c.tag){var k=c.type;if(S(k)){c=Tg(c,k,h);break a}}c=h}else c=Ha;null===b.context?b.context=c:b.pendingContext=c;b=Ia(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);Ja(e,b);Pa(e,g,f);return g}function rf(a){a=\na.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function gi(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function sf(a,b){gi(a,b);(a=a.alternate)&&gi(a,b)}function Yj(a){a=Vf(a);return null===a?null:a.stateNode}function Zj(a){return null}function tf(a,b,c){var d=null!=c&&null!=c.hydrationOptions&&c.hydrationOptions.mutableSources||null;c=new Wj(a,b,null!=c&&!0===c.hydrate);\nb=Z(3,null,null,2===b?7:1===b?3:0);c.current=b;b.stateNode=c;Be(b);a[rb]=c.current;Cg(8===a.nodeType?a.parentNode:a);if(d)for(a=0;a<d.length;a++){b=d[a];var e=b._getVersion;e=e(b._source);null==c.mutableSourceEagerHydrationData?c.mutableSourceEagerHydrationData=[b,e]:c.mutableSourceEagerHydrationData.push(b,e)}this._internalRoot=c}function wc(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ak(a,b){b||(b=a?9===\na.nodeType?a.documentElement:a.firstChild:null,b=!(!b||1!==b.nodeType||!b.hasAttribute(\"data-reactroot\")));if(!b)for(var c;c=a.lastChild;)a.removeChild(c);return new tf(a,0,b?{hydrate:!0}:void 0)}function zd(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f._internalRoot;if(\"function\"===typeof e){var h=e;e=function(){var a=rf(g);h.call(a)}}yd(b,g,a,e)}else{f=c._reactRootContainer=ak(c,d);g=f._internalRoot;if(\"function\"===typeof e){var k=e;e=function(){var a=rf(g);k.call(a)}}bi(function(){yd(b,\ng,a,e)})}return rf(g)}function hi(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!wc(b))throw Error(m(200));return Xj(a,b,null,c)}if(!ha)throw Error(m(227));var zf=new Set,Ib={},oa=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),mi=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\nAf=Object.prototype.hasOwnProperty,Cf={},Bf={},I={};\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){I[a]=new Q(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];I[b]=new Q(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){I[a]=\nnew Q(a,2,!1,a.toLowerCase(),null,!1,!1)});[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){I[a]=new Q(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){I[a]=new Q(a,3,!1,a.toLowerCase(),null,!1,!1)});[\"checked\",\"multiple\",\n\"muted\",\"selected\"].forEach(function(a){I[a]=new Q(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){I[a]=new Q(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){I[a]=new Q(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){I[a]=new Q(a,5,!1,a.toLowerCase(),null,!1,!1)});var uf=/[\\-:]([a-z])/g,vf=function(a){return a[1].toUpperCase()};\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=\na.replace(uf,vf);I[b]=new Q(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(uf,vf);I[b]=new Q(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(uf,vf);I[b]=new Q(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){I[a]=new Q(a,1,!1,a.toLowerCase(),null,!1,!1)});I.xlinkHref=new Q(\"xlinkHref\",\n1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){I[a]=new Q(a,1,!1,a.toLowerCase(),null,!0,!0)});var B=ha.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.assign,fb=ha.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,ec=60103,Ua=60106,wa=60107,Hd=60108,Lb=60114,Jd=60109,Id=60110,Dc=60112,Mb=60113,Cc=60120,Ec=60115,Ld=60116,Kd=60121,ue=60128,fi=60129,pf=60130,qf=60131;if(\"function\"===typeof Symbol&&Symbol.for){var H=Symbol.for;ec=\nH(\"react.element\");Ua=H(\"react.portal\");wa=H(\"react.fragment\");Hd=H(\"react.strict_mode\");Lb=H(\"react.profiler\");Jd=H(\"react.provider\");Id=H(\"react.context\");Dc=H(\"react.forward_ref\");Mb=H(\"react.suspense\");Cc=H(\"react.suspense_list\");Ec=H(\"react.memo\");Ld=H(\"react.lazy\");Kd=H(\"react.block\");H(\"react.scope\");ue=H(\"react.opaque.id\");fi=H(\"react.debug_trace_mode\");pf=H(\"react.offscreen\");qf=H(\"react.legacy_hidden\")}var Df=\"function\"===typeof Symbol&&Symbol.iterator,Fd,Gd=!1,Ad,Lh=function(a){return\"undefined\"!==\ntypeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{Ad=Ad||document.createElement(\"div\");Ad.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=Ad.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}}),qc=function(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=\nb;return}}a.textContent=b},Nb={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},bk=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(Nb).forEach(function(a){bk.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);Nb[b]=Nb[a]})});var si=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}),Vd=null,jb=null,kb=null,me=function(a,b){return a(b)},fg=function(a,\nb,c,d,e){return a(b,c,d,e)},Xd=function(){},Sf=me,Xa=!1,Yd=!1,qe=!1;if(oa)try{var xc={};Object.defineProperty(xc,\"passive\",{get:function(){qe=!0}});window.addEventListener(\"test\",xc,xc);window.removeEventListener(\"test\",xc,xc)}catch(a){qe=!1}var vi=function(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(Da){this.onError(Da)}},Qb=!1,Ic=null,Jc=!1,Zd=null,wi={onError:function(a){Qb=!0;Ic=a}},ca=ha.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.Scheduler,\nck=ca.unstable_cancelCallback,Bd=ca.unstable_now,$f=ca.unstable_scheduleCallback,dk=ca.unstable_shouldYield,ii=ca.unstable_requestPaint,ae=ca.unstable_runWithPriority,ek=ca.unstable_getCurrentPriorityLevel,fk=ca.unstable_ImmediatePriority,ji=ca.unstable_UserBlockingPriority,ag=ca.unstable_NormalPriority,gk=ca.unstable_LowPriority,hk=ca.unstable_IdlePriority,ce=!1,ia=[],ya=null,za=null,Aa=null,Rb=new Map,Sb=new Map,Vb=[],gg=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \"),\nlb={animationend:Lc(\"Animation\",\"AnimationEnd\"),animationiteration:Lc(\"Animation\",\"AnimationIteration\"),animationstart:Lc(\"Animation\",\"AnimationStart\"),transitionend:Lc(\"Transition\",\"TransitionEnd\")},de={},cg={};oa&&(cg=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete lb.animationend.animation,delete lb.animationiteration.animation,delete lb.animationstart.animation),\"TransitionEvent\"in window||delete lb.transitionend.transition);var Hg=Mc(\"animationend\"),Ig=Mc(\"animationiteration\"),\nJg=Mc(\"animationstart\"),Kg=Mc(\"transitionend\"),dg=new Map,fe=new Map,ik=[\"abort\",\"abort\",Hg,\"animationEnd\",Ig,\"animationIteration\",Jg,\"animationStart\",\"canplay\",\"canPlay\",\"canplaythrough\",\"canPlayThrough\",\"durationchange\",\"durationChange\",\"emptied\",\"emptied\",\"encrypted\",\"encrypted\",\"ended\",\"ended\",\"error\",\"error\",\"gotpointercapture\",\"gotPointerCapture\",\"load\",\"load\",\"loadeddata\",\"loadedData\",\"loadedmetadata\",\"loadedMetadata\",\"loadstart\",\"loadStart\",\"lostpointercapture\",\"lostPointerCapture\",\"playing\",\n\"playing\",\"progress\",\"progress\",\"seeking\",\"seeking\",\"stalled\",\"stalled\",\"suspend\",\"suspend\",\"timeupdate\",\"timeUpdate\",Kg,\"transitionEnd\",\"waiting\",\"waiting\"];Bd();var w=8,Ba=Math.clz32?Math.clz32:Hi,Ii=Math.log,Ji=Math.LN2,Ni=ji,Mi=ae,Pc=!0,Ca=null,ie=null,Qc=null,Hb={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},le=V(Hb),yc=B({},Hb,{view:0,detail:0}),hj=V(yc),wf,xf,zc,Cd=B({},yc,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,\npageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:je,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in a)return a.movementX;a!==zc&&(zc&&\"mousemove\"===a.type?(wf=a.screenX-zc.screenX,xf=a.screenY-zc.screenY):xf=wf=0,zc=a);return wf},movementY:function(a){return\"movementY\"in a?a.movementY:xf}}),Gg=V(Cd),jk=B({},Cd,{dataTransfer:0}),dj=V(jk),kk=B({},\nyc,{relatedTarget:0}),re=V(kk),lk=B({},Hb,{animationName:0,elapsedTime:0,pseudoElement:0}),fj=V(lk),mk=B({},Hb,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),jj=V(mk),nk=B({},Hb,{data:0}),Og=V(nk),mj=Og,ok={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},pk={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",\n16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Pi={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"},qk=B({},yc,{key:function(a){if(a.key){var b=ok[a.key]||a.key;if(\"Unidentified\"!==\nb)return b}return\"keypress\"===a.type?(a=Rc(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?pk[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:je,charCode:function(a){return\"keypress\"===a.type?Rc(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===a.type?Rc(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),cj=V(qk),rk=B({},\nCd,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Lg=V(rk),sk=B({},yc,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:je}),ej=V(sk),tk=B({},Hb,{propertyName:0,elapsedTime:0,pseudoElement:0}),gj=V(tk),uk=B({},Cd,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in\na?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),ij=V(uk),Qi=[9,13,27,32],ke=oa&&\"CompositionEvent\"in window,Ac=null;oa&&\"documentMode\"in document&&(Ac=document.documentMode);var lj=oa&&\"TextEvent\"in window&&!Ac,og=oa&&(!ke||Ac&&8<Ac&&11>=Ac),ng=String.fromCharCode(32),mg=!1,ob=!1,Ti={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0},Xb=null,Yb=null,Ng=!1;oa&&(Ng=Ui(\"input\")&&(!document.documentMode||9<document.documentMode));\nvar X=\"function\"===typeof Object.is?Object.is:aj,bj=Object.prototype.hasOwnProperty,kj=oa&&\"documentMode\"in document&&11>=document.documentMode,qb=null,pe=null,$b=null,oe=!1;ee(\"cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange\".split(\" \"),\n0);ee(\"drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel\".split(\" \"),1);ee(ik,2);(function(a,b){for(var c=0;c<a.length;c++)fe.set(a[c],b)})(\"change selectionchange textInput compositionstart compositionend compositionupdate\".split(\" \"),0);gb(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);\ngb(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);gb(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);gb(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);Ta(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));Ta(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));Ta(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);Ta(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));\nTa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));Ta(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var pc=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),Eg=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(pc)),\nDg=\"_reactListening\"+Math.random().toString(36).slice(2),lf=null,mf=null,$h=\"function\"===typeof setTimeout?setTimeout:void 0,Kj=\"function\"===typeof clearTimeout?clearTimeout:void 0,yf=0,Dd=Math.random().toString(36).slice(2),Fa=\"__reactFiber$\"+Dd,Wc=\"__reactProps$\"+Dd,rb=\"__reactContainer$\"+Dd,Rg=\"__reactEvents$\"+Dd,ve=[],ub=-1,Ha={},D=Ga(Ha),J=Ga(!1),Ya=Ha,$e=null,db=null,pj=ae,we=$f,xe=ck,oj=ek,Yc=fk,Vg=ji,Wg=ag,Xg=gk,Yg=hk,hf={},Oj=dk,Sj=void 0!==ii?ii:function(){},pa=null,Zc=null,ye=!1,ki=Bd(),\nP=1E4>ki?Bd:function(){return Bd()-ki},Gj=fb.ReactCurrentBatchConfig,bd=Ga(null),ad=null,xb=null,$c=null,Ka=!1,hh=(new ha.Component).refs,dd={isMounted:function(a){return(a=a._reactInternals)?Va(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=W(),e=Oa(a),f=Ia(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ja(a,f);Pa(a,e,d)},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=W(),e=Oa(a),f=Ia(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);Ja(a,f);\nPa(a,e,d)},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=W(),d=Oa(a),e=Ia(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);Ja(a,e);Pa(a,d,c)}},gd=Array.isArray,od=ih(!0),xh=ih(!1),fc={},ka=Ga(fc),hc=Ga(fc),gc=Ga(fc),E=Ga(0),ra=null,Na=null,la=!1,Bb=[],jc=fb.ReactCurrentDispatcher,aa=fb.ReactCurrentBatchConfig,ic=0,y=null,N=null,K=null,kd=!1,kc=!1,jd={readContext:Y,useCallback:T,useContext:T,useEffect:T,useImperativeHandle:T,useLayoutEffect:T,useMemo:T,useReducer:T,useRef:T,useState:T,\nuseDebugValue:T,useDeferredValue:T,useTransition:T,useMutableSource:T,useOpaqueIdentifier:T,unstable_isNewReconciler:!1},qj={readContext:Y,useCallback:function(a,b){ab().memoizedState=[a,void 0===b?null:b];return a},useContext:Y,useEffect:rh,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return Ne(4,2,th.bind(null,b,a),c)},useLayoutEffect:function(a,b){return Ne(4,2,a,b)},useMemo:function(a,b){var c=ab();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,\nb,c){var d=ab();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a=d.queue={pending:null,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};a=a.dispatch=Me.bind(null,y,a);return[d.memoizedState,a]},useRef:qh,useState:nc,useDebugValue:Pe,useDeferredValue:function(a){var b=nc(a),c=b[0],d=b[1];rh(function(){var b=aa.transition;aa.transition=1;try{d(a)}finally{aa.transition=b}},[a]);return c},useTransition:function(){var a=nc(!1),b=a[0];a=tj.bind(null,a[1]);qh(a);return[a,b]},useMutableSource:function(a,\nb,c){var d=ab();d.memoizedState={refs:{getSnapshot:b,setSnapshot:null},source:a,subscribe:c};return oh(d,a,b,c)},useOpaqueIdentifier:function(){if(la){var a=!1,b=nj(function(){a||(a=!0,c(\"r:\"+(yf++).toString(36)));throw Error(m(355));}),c=nc(b)[1];0===(y.mode&2)&&(y.flags|=516,ld(5,function(){c(\"r:\"+(yf++).toString(36))},void 0,null));return b}b=\"r:\"+(yf++).toString(36);nc(b);return b},unstable_isNewReconciler:!1},rj={readContext:Y,useCallback:vh,useContext:Y,useEffect:nd,useImperativeHandle:uh,useLayoutEffect:sh,\nuseMemo:wh,useReducer:lc,useRef:md,useState:function(a){return lc(ma)},useDebugValue:Pe,useDeferredValue:function(a){var b=lc(ma),c=b[0],d=b[1];nd(function(){var b=aa.transition;aa.transition=1;try{d(a)}finally{aa.transition=b}},[a]);return c},useTransition:function(){var a=lc(ma)[0];return[md().current,a]},useMutableSource:ph,useOpaqueIdentifier:function(){return lc(ma)[0]},unstable_isNewReconciler:!1},sj={readContext:Y,useCallback:vh,useContext:Y,useEffect:nd,useImperativeHandle:uh,useLayoutEffect:sh,\nuseMemo:wh,useReducer:mc,useRef:md,useState:function(a){return mc(ma)},useDebugValue:Pe,useDeferredValue:function(a){var b=mc(ma),c=b[0],d=b[1];nd(function(){var b=aa.transition;aa.transition=1;try{d(a)}finally{aa.transition=b}},[a]);return c},useTransition:function(){var a=mc(ma)[0];return[md().current,a]},useMutableSource:ph,useOpaqueIdentifier:function(){return mc(ma)[0]},unstable_isNewReconciler:!1},uj=fb.ReactCurrentOwner,fa=!1,qd={dehydrated:null,retryLane:0};var xj=function(a,b,c,d){for(c=\nb.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};var Kh=function(a){};var wj=function(a,b,c,d,e){var f=a.memoizedProps;if(f!==d){a=b.stateNode;$a(ka.current);e=null;switch(c){case \"input\":f=Md(a,f);d=Md(a,d);e=[];break;case \"option\":f=Pd(a,f);d=Pd(a,d);e=[];break;case \"select\":f=\nB({},f,{value:void 0});d=B({},d,{value:void 0});e=[];break;case \"textarea\":f=Qd(a,f);d=Qd(a,d);e=[];break;default:\"function\"!==typeof f.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Vc)}Sd(c,d);var g;c=null;for(l in f)if(!d.hasOwnProperty(l)&&f.hasOwnProperty(l)&&null!=f[l])if(\"style\"===l){var h=f[l];for(g in h)h.hasOwnProperty(g)&&(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(Ib.hasOwnProperty(l)?\ne||(e=[]):(e=e||[]).push(l,null));for(l in d){var k=d[l];h=null!=f?f[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(e||(e=[]),e.push(l,c)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(e=e||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(e=\ne||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(Ib.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&z(\"scroll\",a),e||h===k||(e=[])):\"object\"===typeof k&&null!==k&&k.$$typeof===ue?k.toString():(e=e||[]).push(l,k))}c&&(e=e||[]).push(\"style\",c);var l=e;if(b.updateQueue=l)b.flags|=4}};var yj=function(a,b,c,d){c!==d&&(b.flags|=4)};var Lj=\"function\"===typeof WeakMap?WeakMap:Map,Dj=\"function\"===typeof WeakSet?WeakSet:Set,Ij=Math.ceil,vd=fb.ReactCurrentDispatcher,kf=\nfb.ReactCurrentOwner,n=0,R=null,G=null,O=0,ta=0,cb=Ga(0),L=0,wd=null,Fb=0,La=0,Cb=0,jf=0,ef=null,df=0,We=Infinity,l=null,rd=!1,Ze=null,na=null,Sa=!1,tc=null,vc=90,nf=[],of=[],va=null,rc=0,ff=null,sd=-1,ua=0,td=0,uc=null,xd=!1;var Pj=function(a,b,c){var d=b.lanes;if(null!==a)if(a.memoizedProps!==b.pendingProps||J.current)fa=!0;else if(0!==(c&d))fa=0!==(a.flags&16384)?!0:!1;else{fa=!1;switch(b.tag){case 3:Dh(b);Ie();break;case 5:jh(b);break;case 1:S(b.type)&&Xc(b);break;case 4:Fe(b,b.stateNode.containerInfo);\nbreak;case 10:d=b.memoizedProps.value;var e=b.type._context;A(bd,e._currentValue);e._currentValue=d;break;case 13:if(null!==b.memoizedState){if(0!==(c&b.child.childLanes))return Eh(a,b,c);A(E,E.current&1);b=sa(a,b,c);return null!==b?b.sibling:null}A(E,E.current&1);break;case 19:d=0!==(c&b.childLanes);if(0!==(a.flags&64)){if(d)return Jh(a,b,c);b.flags|=64}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);A(E,E.current);if(d)break;else return null;case 23:case 24:return b.lanes=\n0,Se(a,b,c)}return sa(a,b,c)}else fa=!1;b.lanes=0;switch(b.tag){case 2:d=b.type;null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;e=vb(b,D.current);yb(b,c);e=Le(null,b,d,a,e,c);b.flags|=1;if(\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof){b.tag=1;b.memoizedState=null;b.updateQueue=null;if(S(d)){var f=!0;Xc(b)}else f=!1;b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null;Be(b);var g=d.getDerivedStateFromProps;\"function\"===typeof g&&\ncd(b,d,g,a);e.updater=dd;b.stateNode=e;e._reactInternals=b;Ce(b,d,a,c);b=Te(null,b,d,!0,f,c)}else b.tag=0,U(null,b,e,c),b=b.child;return b;case 16:e=b.elementType;a:{null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2);a=b.pendingProps;f=e._init;e=f(e._payload);b.type=e;f=b.tag=Vj(e);a=ea(e,a);switch(f){case 0:b=Re(null,b,e,a,c);break a;case 1:b=Ch(null,b,e,a,c);break a;case 11:b=yh(null,b,e,a,c);break a;case 14:b=zh(null,b,e,ea(e.type,a),d,c);break a}throw Error(m(306,e,\"\"));}return b;case 0:return d=\nb.type,e=b.pendingProps,e=b.elementType===d?e:ea(d,e),Re(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ea(d,e),Ch(a,b,d,e,c);case 3:Dh(b);d=b.updateQueue;if(null===a||null===d)throw Error(m(282));d=b.pendingProps;e=b.memoizedState;e=null!==e?e.element:null;bh(a,b);cc(b,d,null,c);d=b.memoizedState.element;if(d===e)Ie(),b=sa(a,b,c);else{e=b.stateNode;if(f=e.hydrate)Na=tb(b.stateNode.containerInfo.firstChild),ra=b,f=la=!0;if(f){a=e.mutableSourceEagerHydrationData;if(null!=\na)for(e=0;e<a.length;e+=2)f=a[e],f._workInProgressVersionPrimary=a[e+1],Bb.push(f);c=xh(b,null,d,c);for(b.child=c;c;)c.flags=c.flags&-3|1024,c=c.sibling}else U(a,b,d,c),Ie();b=b.child}return b;case 5:return jh(b),null===a&&He(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,se(d,e)?g=null:null!==f&&se(d,f)&&(b.flags|=16),Bh(a,b),U(a,b,g,c),b.child;case 6:return null===a&&He(b),null;case 13:return Eh(a,b,c);case 4:return Fe(b,b.stateNode.containerInfo),d=b.pendingProps,null===\na?b.child=od(b,null,d,c):U(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ea(d,e),yh(a,b,d,e,c);case 7:return U(a,b,b.pendingProps,c),b.child;case 8:return U(a,b,b.pendingProps.children,c),b.child;case 12:return U(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;g=b.memoizedProps;f=e.value;var h=b.type._context;A(bd,h._currentValue);h._currentValue=f;if(null!==g)if(h=g.value,f=X(h,f)?0:(\"function\"===typeof d._calculateChangedBits?\nd._calculateChangedBits(h,f):1073741823)|0,0===f){if(g.children===e.children&&!J.current){b=sa(a,b,c);break a}}else for(h=b.child,null!==h&&(h.return=b);null!==h;){var k=h.dependencies;if(null!==k){g=h.child;for(var l=k.firstContext;null!==l;){if(l.context===d&&0!==(l.observedBits&f)){1===h.tag&&(l=Ia(-1,c&-c),l.tag=2,Ja(h,l));h.lanes|=c;l=h.alternate;null!==l&&(l.lanes|=c);ah(h.return,c);k.lanes|=c;break}l=l.next}}else g=10===h.tag?h.type===b.type?null:h.child:h.child;if(null!==g)g.return=h;else for(g=\nh;null!==g;){if(g===b){g=null;break}h=g.sibling;if(null!==h){h.return=g.return;g=h;break}g=g.return}h=g}U(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,f=b.pendingProps,d=f.children,yb(b,c),e=Y(e,f.unstable_observedBits),d=d(e),b.flags|=1,U(a,b,d,c),b.child;case 14:return e=b.type,f=ea(e,b.pendingProps),f=ea(e.type,f),zh(a,b,e,f,d,c);case 15:return Ah(a,b,b.type,b.pendingProps,d,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:ea(d,e),null!==a&&(a.alternate=null,b.alternate=\nnull,b.flags|=2),b.tag=1,S(d)?(a=!0,Xc(b)):a=!1,yb(b,c),fh(b,d,e),Ce(b,d,e,c),Te(null,b,d,!0,a,c);case 19:return Jh(a,b,c);case 23:return Se(a,b,c);case 24:return Se(a,b,c)}throw Error(m(156,b.tag));};var Z=function(a,b,c,d){return new Uj(a,b,c,d)};tf.prototype.render=function(a){yd(a,this._internalRoot,null,null)};tf.prototype.unmount=function(){var a=this._internalRoot,b=a.containerInfo;yd(null,a,null,function(){b[rb]=null})};var Ei=function(a){if(13===a.tag){var b=W();Pa(a,4,b);sf(a,4)}};var Yf=\nfunction(a){if(13===a.tag){var b=W();Pa(a,67108864,b);sf(a,67108864)}};var Ci=function(a){if(13===a.tag){var b=W(),c=Oa(a);Pa(a,c,b);sf(a,c)}};var Bi=function(a,b){return b()};Vd=function(a,b,c){switch(b){case \"input\":Nd(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Hc(d);if(!e)throw Error(m(90));Ff(d);Nd(d,e)}}}break;case \"textarea\":Kf(a,\nc);break;case \"select\":b=c.value,null!=b&&ib(a,!!c.multiple,b,!1)}};(function(a,b,c,d){me=a;fg=b;Xd=c;Sf=d})(ai,function(a,b,c,d,e){var f=n;n|=4;try{return Za(98,a.bind(null,b,c,d,e))}finally{n=f,0===n&&(Eb(),ja())}},function(){0===(n&49)&&(Jj(),Ra())},function(a,b){var c=n;n|=2;try{return a(b)}finally{n=c,0===n&&(Eb(),ja())}});var vk={Events:[Ob,pb,Hc,Qf,Rf,Ra,{current:!1}]};(function(a){a={bundleType:a.bundleType,version:a.version,rendererPackageName:a.rendererPackageName,rendererConfig:a.rendererConfig,\noverrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:fb.ReactCurrentDispatcher,findHostInstanceByFiber:Yj,findFiberByHostInstance:a.findFiberByHostInstance||Zj,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)a=\n!1;else{var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!b.isDisabled&&b.supportsFiber)try{$e=b.inject(a),db=b}catch(c){}a=!0}return a})({findFiberByHostInstance:Wa,bundleType:0,version:\"17.0.1\",rendererPackageName:\"react-dom\"});M.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=vk;M.createPortal=hi;M.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(m(188));throw Error(m(268,Object.keys(a)));\n}a=Vf(b);a=null===a?null:a.stateNode;return a};M.flushSync=function(a,b){var c=n;if(0!==(c&48))return a(b);n|=1;try{if(a)return Za(99,a.bind(null,b))}finally{n=c,ja()}};M.hydrate=function(a,b,c){if(!wc(b))throw Error(m(200));return zd(null,a,b,!0,c)};M.render=function(a,b,c){if(!wc(b))throw Error(m(200));return zd(null,a,b,!1,c)};M.unmountComponentAtNode=function(a){if(!wc(a))throw Error(m(40));return a._reactRootContainer?(bi(function(){zd(null,null,a,!1,function(){a._reactRootContainer=null;a[rb]=\nnull})}),!0):!1};M.unstable_batchedUpdates=ai;M.unstable_createPortal=function(a,b){return hi(a,b,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)};M.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!wc(c))throw Error(m(200));if(null==a||void 0===a._reactInternals)throw Error(m(38));return zd(a,b,c,!1,d)};M.version=\"17.0.1\"});\n})();"},{"base":"plugins","rel":"litespeed-cache/assets/js/lazyload.init.js","ext":"js","size":905,"mtime":1757312769,"type":"text","content":"/**\n * Lazyload init js\n *\n * @author LiteSpeed\n * @since 1.4\n *\n */\n\n(function (window, document) {\n\t'use strict';\n\n\tvar instance;\n\tvar update_lazyload;\n\n\tvar litespeed_finish_callback = function () {\n\t\tdocument.body.classList.add('litespeed_lazyloaded');\n\t};\n\n\tvar init = function () {\n\t\tconsole.log('[LiteSpeed] Start Lazy Load');\n\t\tinstance = new LazyLoad(\n\t\t\tObject.assign(\n\t\t\t\t{},\n\t\t\t\twindow.lazyLoadOptions || {},\n\t\t\t\t{\n\t\t\t\t\telements_selector: '[data-lazyloaded]',\n\t\t\t\t\tcallback_finish: litespeed_finish_callback,\n\t\t\t\t},\n\t\t\t)\n\t\t);\n\n\t\tupdate_lazyload = function () {\n\t\t\tinstance.update();\n\t\t};\n\n\t\tif (window.MutationObserver) {\n\t\t\tnew MutationObserver(update_lazyload).observe(document.documentElement, { childList: true, subtree: true, attributes: true });\n\t\t}\n\t};\n\n\twindow.addEventListener ? window.addEventListener('load', init, false) : window.attachEvent('onload', init);\n})(window, document);\n"},{"base":"plugins","rel":"litespeed-cache/assets/js/lazyload.min.js","ext":"js","size":8025,"mtime":1757312769,"type":"text","content":"!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).LazyLoad=e()}(this,function(){\"use strict\";function e(){return(e=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n,a=arguments[e];for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n])}return t}).apply(this,arguments)}function o(t){return e({},at,t)}function l(t,e){return t.getAttribute(gt+e)}function c(t){return l(t,vt)}function s(t,e){return function(t,e,n){e=gt+e;null!==n?t.setAttribute(e,n):t.removeAttribute(e)}(t,vt,e)}function i(t){return s(t,null),0}function r(t){return null===c(t)}function u(t){return c(t)===_t}function d(t,e,n,a){t&&(void 0===a?void 0===n?t(e):t(e,n):t(e,n,a))}function f(t,e){et?t.classList.add(e):t.className+=(t.className?\" \":\"\")+e}function _(t,e){et?t.classList.remove(e):t.className=t.className.replace(new RegExp(\"(^|\\\\s+)\"+e+\"(\\\\s+|$)\"),\" \").replace(/^\\s+/,\"\").replace(/\\s+$/,\"\")}function g(t){return t.llTempImage}function v(t,e){!e||(e=e._observer)&&e.unobserve(t)}function b(t,e){t&&(t.loadingCount+=e)}function p(t,e){t&&(t.toLoadCount=e)}function n(t){for(var e,n=[],a=0;e=t.children[a];a+=1)\"SOURCE\"===e.tagName&&n.push(e);return n}function h(t,e){(t=t.parentNode)&&\"PICTURE\"===t.tagName&&n(t).forEach(e)}function a(t,e){n(t).forEach(e)}function m(t){return!!t[lt]}function E(t){return t[lt]}function I(t){return delete t[lt]}function y(e,t){var n;m(e)||(n={},t.forEach(function(t){n[t]=e.getAttribute(t)}),e[lt]=n)}function L(a,t){var o;m(a)&&(o=E(a),t.forEach(function(t){var e,n;e=a,(t=o[n=t])?e.setAttribute(n,t):e.removeAttribute(n)}))}function k(t,e,n){f(t,e.class_loading),s(t,st),n&&(b(n,1),d(e.callback_loading,t,n))}function A(t,e,n){n&&t.setAttribute(e,n)}function O(t,e){A(t,rt,l(t,e.data_sizes)),A(t,it,l(t,e.data_srcset)),A(t,ot,l(t,e.data_src))}function w(t,e,n){var a=l(t,e.data_bg_multi),o=l(t,e.data_bg_multi_hidpi);(a=nt&&o?o:a)&&(t.style.backgroundImage=a,n=n,f(t=t,(e=e).class_applied),s(t,dt),n&&(e.unobserve_completed&&v(t,e),d(e.callback_applied,t,n)))}function x(t,e){!e||0<e.loadingCount||0<e.toLoadCount||d(t.callback_finish,e)}function M(t,e,n){t.addEventListener(e,n),t.llEvLisnrs[e]=n}function N(t){return!!t.llEvLisnrs}function z(t){if(N(t)){var e,n,a=t.llEvLisnrs;for(e in a){var o=a[e];n=e,o=o,t.removeEventListener(n,o)}delete t.llEvLisnrs}}function C(t,e,n){var a;delete t.llTempImage,b(n,-1),(a=n)&&--a.toLoadCount,_(t,e.class_loading),e.unobserve_completed&&v(t,n)}function R(i,r,c){var l=g(i)||i;N(l)||function(t,e,n){N(t)||(t.llEvLisnrs={});var a=\"VIDEO\"===t.tagName?\"loadeddata\":\"load\";M(t,a,e),M(t,\"error\",n)}(l,function(t){var e,n,a,o;n=r,a=c,o=u(e=i),C(e,n,a),f(e,n.class_loaded),s(e,ut),d(n.callback_loaded,e,a),o||x(n,a),z(l)},function(t){var e,n,a,o;n=r,a=c,o=u(e=i),C(e,n,a),f(e,n.class_error),s(e,ft),d(n.callback_error,e,a),o||x(n,a),z(l)})}function T(t,e,n){var a,o,i,r,c;t.llTempImage=document.createElement(\"IMG\"),R(t,e,n),m(c=t)||(c[lt]={backgroundImage:c.style.backgroundImage}),i=n,r=l(a=t,(o=e).data_bg),c=l(a,o.data_bg_hidpi),(r=nt&&c?c:r)&&(a.style.backgroundImage='url(\"'.concat(r,'\")'),g(a).setAttribute(ot,r),k(a,o,i)),w(t,e,n)}function G(t,e,n){var a;R(t,e,n),a=e,e=n,(t=Et[(n=t).tagName])&&(t(n,a),k(n,a,e))}function D(t,e,n){var a;a=t,(-1<It.indexOf(a.tagName)?G:T)(t,e,n)}function S(t,e,n){var a;t.setAttribute(\"loading\",\"lazy\"),R(t,e,n),a=e,(e=Et[(n=t).tagName])&&e(n,a),s(t,_t)}function V(t){t.removeAttribute(ot),t.removeAttribute(it),t.removeAttribute(rt)}function j(t){h(t,function(t){L(t,mt)}),L(t,mt)}function F(t){var e;(e=yt[t.tagName])?e(t):m(e=t)&&(t=E(e),e.style.backgroundImage=t.backgroundImage)}function P(t,e){var n;F(t),n=e,r(e=t)||u(e)||(_(e,n.class_entered),_(e,n.class_exited),_(e,n.class_applied),_(e,n.class_loading),_(e,n.class_loaded),_(e,n.class_error)),i(t),I(t)}function U(t,e,n,a){var o;n.cancel_on_exit&&(c(t)!==st||\"IMG\"===t.tagName&&(z(t),h(o=t,function(t){V(t)}),V(o),j(t),_(t,n.class_loading),b(a,-1),i(t),d(n.callback_cancel,t,e,a)))}function $(t,e,n,a){var o,i,r=(i=t,0<=bt.indexOf(c(i)));s(t,\"entered\"),f(t,n.class_entered),_(t,n.class_exited),o=t,i=a,n.unobserve_entered&&v(o,i),d(n.callback_enter,t,e,a),r||D(t,n,a)}function q(t){return t.use_native&&\"loading\"in HTMLImageElement.prototype}function H(t,o,i){t.forEach(function(t){return(a=t).isIntersecting||0<a.intersectionRatio?$(t.target,t,o,i):(e=t.target,n=t,a=o,t=i,void(r(e)||(f(e,a.class_exited),U(e,n,a,t),d(a.callback_exit,e,n,t))));var e,n,a})}function B(e,n){var t;tt&&!q(e)&&(n._observer=new IntersectionObserver(function(t){H(t,e,n)},{root:(t=e).container===document?null:t.container,rootMargin:t.thresholds||t.threshold+\"px\"}))}function J(t){return Array.prototype.slice.call(t)}function K(t){return t.container.querySelectorAll(t.elements_selector)}function Q(t){return c(t)===ft}function W(t,e){return e=t||K(e),J(e).filter(r)}function X(e,t){var n;(n=K(e),J(n).filter(Q)).forEach(function(t){_(t,e.class_error),i(t)}),t.update()}function t(t,e){var n,a,t=o(t);this._settings=t,this.loadingCount=0,B(t,this),n=t,a=this,Y&&window.addEventListener(\"online\",function(){X(n,a)}),this.update(e)}var Y=\"undefined\"!=typeof window,Z=Y&&!(\"onscroll\"in window)||\"undefined\"!=typeof navigator&&/(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent),tt=Y&&\"IntersectionObserver\"in window,et=Y&&\"classList\"in document.createElement(\"p\"),nt=Y&&1<window.devicePixelRatio,at={elements_selector:\".lazy\",container:Z||Y?document:null,threshold:300,thresholds:null,data_src:\"src\",data_srcset:\"srcset\",data_sizes:\"sizes\",data_bg:\"bg\",data_bg_hidpi:\"bg-hidpi\",data_bg_multi:\"bg-multi\",data_bg_multi_hidpi:\"bg-multi-hidpi\",data_poster:\"poster\",class_applied:\"applied\",class_loading:\"litespeed-loading\",class_loaded:\"litespeed-loaded\",class_error:\"error\",class_entered:\"entered\",class_exited:\"exited\",unobserve_completed:!0,unobserve_entered:!1,cancel_on_exit:!0,callback_enter:null,callback_exit:null,callback_applied:null,callback_loading:null,callback_loaded:null,callback_error:null,callback_finish:null,callback_cancel:null,use_native:!1},ot=\"src\",it=\"srcset\",rt=\"sizes\",ct=\"poster\",lt=\"llOriginalAttrs\",st=\"loading\",ut=\"loaded\",dt=\"applied\",ft=\"error\",_t=\"native\",gt=\"data-\",vt=\"ll-status\",bt=[st,ut,dt,ft],pt=[ot],ht=[ot,ct],mt=[ot,it,rt],Et={IMG:function(t,e){h(t,function(t){y(t,mt),O(t,e)}),y(t,mt),O(t,e)},IFRAME:function(t,e){y(t,pt),A(t,ot,l(t,e.data_src))},VIDEO:function(t,e){a(t,function(t){y(t,pt),A(t,ot,l(t,e.data_src))}),y(t,ht),A(t,ct,l(t,e.data_poster)),A(t,ot,l(t,e.data_src)),t.load()}},It=[\"IMG\",\"IFRAME\",\"VIDEO\"],yt={IMG:j,IFRAME:function(t){L(t,pt)},VIDEO:function(t){a(t,function(t){L(t,pt)}),L(t,ht),t.load()}},Lt=[\"IMG\",\"IFRAME\",\"VIDEO\"];return t.prototype={update:function(t){var e,n,a,o=this._settings,i=W(t,o);{if(p(this,i.length),!Z&&tt)return q(o)?(e=o,n=this,i.forEach(function(t){-1!==Lt.indexOf(t.tagName)&&S(t,e,n)}),void p(n,0)):(t=this._observer,o=i,t.disconnect(),a=t,void o.forEach(function(t){a.observe(t)}));this.loadAll(i)}},destroy:function(){this._observer&&this._observer.disconnect(),K(this._settings).forEach(function(t){I(t)}),delete this._observer,delete this._settings,delete this.loadingCount,delete this.toLoadCount},loadAll:function(t){var e=this,n=this._settings;W(t,n).forEach(function(t){v(t,e),D(t,n,e)})},restoreAll:function(){var e=this._settings;K(e).forEach(function(t){P(t,e)})}},t.load=function(t,e){e=o(e);D(t,e)},t.resetStatus=function(t){i(t)},t}),function(t,e){\"use strict\";function n(){e.body.classList.add(\"litespeed_lazyloaded\")}function a(){console.log(\"[LiteSpeed] Start Lazy Load\"),o=new LazyLoad(Object.assign({},t.lazyLoadOptions||{},{elements_selector:\"[data-lazyloaded]\",callback_finish:n})),i=function(){o.update()},t.MutationObserver&&new MutationObserver(i).observe(e.documentElement,{childList:!0,subtree:!0,attributes:!0})}var o,i;t.addEventListener?t.addEventListener(\"load\",a,!1):t.attachEvent(\"onload\",a)}(window,document);"},{"base":"plugins","rel":"litespeed-cache/assets/js/lazyload.lib.js","ext":"js","size":25492,"mtime":1757312769,"type":"text","content":"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined'\n\t\t? (module.exports = factory())\n\t\t: typeof define === 'function' && define.amd\n\t\t? define(factory)\n\t\t: ((global = typeof globalThis !== 'undefined' ? globalThis : global || self), (global.LazyLoad = factory()));\n})(this, function () {\n\t'use strict';\n\n\tfunction _extends() {\n\t\t_extends =\n\t\t\tObject.assign ||\n\t\t\tfunction (target) {\n\t\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\t\tvar source = arguments[i];\n\n\t\t\t\t\tfor (var key in source) {\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(source, key)) {\n\t\t\t\t\t\t\ttarget[key] = source[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\t\t\t};\n\n\t\treturn _extends.apply(this, arguments);\n\t}\n\n\tvar runningOnBrowser = typeof window !== 'undefined';\n\tvar isBot = (runningOnBrowser && !('onscroll' in window)) || (typeof navigator !== 'undefined' && /(gle|ing|ro)bot|crawl|spider/i.test(navigator.userAgent));\n\tvar supportsIntersectionObserver = runningOnBrowser && 'IntersectionObserver' in window;\n\tvar supportsClassList = runningOnBrowser && 'classList' in document.createElement('p');\n\tvar isHiDpi = runningOnBrowser && window.devicePixelRatio > 1;\n\n\tvar defaultSettings = {\n\t\telements_selector: '.lazy',\n\t\tcontainer: isBot || runningOnBrowser ? document : null,\n\t\tthreshold: 300,\n\t\tthresholds: null,\n\t\tdata_src: 'src',\n\t\tdata_srcset: 'srcset',\n\t\tdata_sizes: 'sizes',\n\t\tdata_bg: 'bg',\n\t\tdata_bg_hidpi: 'bg-hidpi',\n\t\tdata_bg_multi: 'bg-multi',\n\t\tdata_bg_multi_hidpi: 'bg-multi-hidpi',\n\t\tdata_poster: 'poster',\n\t\tclass_applied: 'applied',\n\t\tclass_loading: 'litespeed-loading',\n\t\tclass_loaded: 'litespeed-loaded', // https://docs.litespeedtech.com/lscache/lscwp/pageopt/#lazy-load-images\n\t\tclass_error: 'error',\n\t\tclass_entered: 'entered',\n\t\tclass_exited: 'exited',\n\t\tunobserve_completed: true,\n\t\tunobserve_entered: false,\n\t\tcancel_on_exit: true,\n\t\tcallback_enter: null,\n\t\tcallback_exit: null,\n\t\tcallback_applied: null,\n\t\tcallback_loading: null,\n\t\tcallback_loaded: null,\n\t\tcallback_error: null,\n\t\tcallback_finish: null,\n\t\tcallback_cancel: null,\n\t\tuse_native: false,\n\t};\n\tvar getExtendedSettings = function getExtendedSettings(customSettings) {\n\t\treturn _extends({}, defaultSettings, customSettings);\n\t};\n\n\t/* Creates instance and notifies it through the window element */\n\tvar createInstance = function createInstance(classObj, options) {\n\t\tvar event;\n\t\tvar eventString = 'LazyLoad::Initialized';\n\t\tvar instance = new classObj(options);\n\n\t\ttry {\n\t\t\t// Works in modern browsers\n\t\t\tevent = new CustomEvent(eventString, {\n\t\t\t\tdetail: {\n\t\t\t\t\tinstance: instance,\n\t\t\t\t},\n\t\t\t});\n\t\t} catch (err) {\n\t\t\t// Works in Internet Explorer (all versions)\n\t\t\tevent = document.createEvent('CustomEvent');\n\t\t\tevent.initCustomEvent(eventString, false, false, {\n\t\t\t\tinstance: instance,\n\t\t\t});\n\t\t}\n\n\t\twindow.dispatchEvent(event);\n\t};\n\t/* Auto initialization of one or more instances of lazyload, depending on the\n      options passed in (plain object or an array) */\n\n\tvar autoInitialize = function autoInitialize(classObj, options) {\n\t\tif (!options) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!options.length) {\n\t\t\t// Plain object\n\t\t\tcreateInstance(classObj, options);\n\t\t} else {\n\t\t\t// Array of objects\n\t\t\tfor (var i = 0, optionsItem; (optionsItem = options[i]); i += 1) {\n\t\t\t\tcreateInstance(classObj, optionsItem);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar SRC = 'src';\n\tvar SRCSET = 'srcset';\n\tvar SIZES = 'sizes';\n\tvar POSTER = 'poster';\n\tvar ORIGINALS = 'llOriginalAttrs';\n\n\tvar statusLoading = 'loading';\n\tvar statusLoaded = 'loaded';\n\tvar statusApplied = 'applied';\n\tvar statusEntered = 'entered';\n\tvar statusError = 'error';\n\tvar statusNative = 'native';\n\n\tvar dataPrefix = 'data-';\n\tvar statusDataName = 'll-status';\n\tvar getData = function getData(element, attribute) {\n\t\treturn element.getAttribute(dataPrefix + attribute);\n\t};\n\tvar setData = function setData(element, attribute, value) {\n\t\tvar attrName = dataPrefix + attribute;\n\n\t\tif (value === null) {\n\t\t\telement.removeAttribute(attrName);\n\t\t\treturn;\n\t\t}\n\n\t\telement.setAttribute(attrName, value);\n\t};\n\tvar getStatus = function getStatus(element) {\n\t\treturn getData(element, statusDataName);\n\t};\n\tvar setStatus = function setStatus(element, status) {\n\t\treturn setData(element, statusDataName, status);\n\t};\n\tvar resetStatus = function resetStatus(element) {\n\t\treturn setStatus(element, null);\n\t};\n\tvar hasEmptyStatus = function hasEmptyStatus(element) {\n\t\treturn getStatus(element) === null;\n\t};\n\tvar hasStatusLoading = function hasStatusLoading(element) {\n\t\treturn getStatus(element) === statusLoading;\n\t};\n\tvar hasStatusError = function hasStatusError(element) {\n\t\treturn getStatus(element) === statusError;\n\t};\n\tvar hasStatusNative = function hasStatusNative(element) {\n\t\treturn getStatus(element) === statusNative;\n\t};\n\tvar statusesAfterLoading = [statusLoading, statusLoaded, statusApplied, statusError];\n\tvar hadStartedLoading = function hadStartedLoading(element) {\n\t\treturn statusesAfterLoading.indexOf(getStatus(element)) >= 0;\n\t};\n\n\tvar safeCallback = function safeCallback(callback, arg1, arg2, arg3) {\n\t\tif (!callback) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (arg3 !== undefined) {\n\t\t\tcallback(arg1, arg2, arg3);\n\t\t\treturn;\n\t\t}\n\n\t\tif (arg2 !== undefined) {\n\t\t\tcallback(arg1, arg2);\n\t\t\treturn;\n\t\t}\n\n\t\tcallback(arg1);\n\t};\n\n\tvar addClass = function addClass(element, className) {\n\t\tif (supportsClassList) {\n\t\t\telement.classList.add(className);\n\t\t\treturn;\n\t\t}\n\n\t\telement.className += (element.className ? ' ' : '') + className;\n\t};\n\tvar removeClass = function removeClass(element, className) {\n\t\tif (supportsClassList) {\n\t\t\telement.classList.remove(className);\n\t\t\treturn;\n\t\t}\n\n\t\telement.className = element.className\n\t\t\t.replace(new RegExp('(^|\\\\s+)' + className + '(\\\\s+|$)'), ' ')\n\t\t\t.replace(/^\\s+/, '')\n\t\t\t.replace(/\\s+$/, '');\n\t};\n\n\tvar addTempImage = function addTempImage(element) {\n\t\telement.llTempImage = document.createElement('IMG');\n\t};\n\tvar deleteTempImage = function deleteTempImage(element) {\n\t\tdelete element.llTempImage;\n\t};\n\tvar getTempImage = function getTempImage(element) {\n\t\treturn element.llTempImage;\n\t};\n\n\tvar unobserve = function unobserve(element, instance) {\n\t\tif (!instance) return;\n\t\tvar observer = instance._observer;\n\t\tif (!observer) return;\n\t\tobserver.unobserve(element);\n\t};\n\tvar resetObserver = function resetObserver(observer) {\n\t\tobserver.disconnect();\n\t};\n\tvar unobserveEntered = function unobserveEntered(element, settings, instance) {\n\t\tif (settings.unobserve_entered) unobserve(element, instance);\n\t};\n\n\tvar updateLoadingCount = function updateLoadingCount(instance, delta) {\n\t\tif (!instance) return;\n\t\tinstance.loadingCount += delta;\n\t};\n\tvar decreaseToLoadCount = function decreaseToLoadCount(instance) {\n\t\tif (!instance) return;\n\t\tinstance.toLoadCount -= 1;\n\t};\n\tvar setToLoadCount = function setToLoadCount(instance, value) {\n\t\tif (!instance) return;\n\t\tinstance.toLoadCount = value;\n\t};\n\tvar isSomethingLoading = function isSomethingLoading(instance) {\n\t\treturn instance.loadingCount > 0;\n\t};\n\tvar haveElementsToLoad = function haveElementsToLoad(instance) {\n\t\treturn instance.toLoadCount > 0;\n\t};\n\n\tvar getSourceTags = function getSourceTags(parentTag) {\n\t\tvar sourceTags = [];\n\n\t\tfor (var i = 0, childTag; (childTag = parentTag.children[i]); i += 1) {\n\t\t\tif (childTag.tagName === 'SOURCE') {\n\t\t\t\tsourceTags.push(childTag);\n\t\t\t}\n\t\t}\n\n\t\treturn sourceTags;\n\t};\n\n\tvar forEachPictureSource = function forEachPictureSource(element, fn) {\n\t\tvar parent = element.parentNode;\n\n\t\tif (!parent || parent.tagName !== 'PICTURE') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar sourceTags = getSourceTags(parent);\n\t\tsourceTags.forEach(fn);\n\t};\n\tvar forEachVideoSource = function forEachVideoSource(element, fn) {\n\t\tvar sourceTags = getSourceTags(element);\n\t\tsourceTags.forEach(fn);\n\t};\n\n\tvar attrsSrc = [SRC];\n\tvar attrsSrcPoster = [SRC, POSTER];\n\tvar attrsSrcSrcsetSizes = [SRC, SRCSET, SIZES];\n\tvar hasOriginalAttrs = function hasOriginalAttrs(element) {\n\t\treturn !!element[ORIGINALS];\n\t};\n\tvar getOriginalAttrs = function getOriginalAttrs(element) {\n\t\treturn element[ORIGINALS];\n\t};\n\tvar deleteOriginalAttrs = function deleteOriginalAttrs(element) {\n\t\treturn delete element[ORIGINALS];\n\t}; // ## SAVE ##\n\n\tvar setOriginalsObject = function setOriginalsObject(element, attributes) {\n\t\tif (hasOriginalAttrs(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar originals = {};\n\t\tattributes.forEach(function (attribute) {\n\t\t\toriginals[attribute] = element.getAttribute(attribute);\n\t\t});\n\t\telement[ORIGINALS] = originals;\n\t};\n\tvar saveOriginalBackgroundStyle = function saveOriginalBackgroundStyle(element) {\n\t\tif (hasOriginalAttrs(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\telement[ORIGINALS] = {\n\t\t\tbackgroundImage: element.style.backgroundImage,\n\t\t};\n\t}; // ## RESTORE ##\n\n\tvar setOrResetAttribute = function setOrResetAttribute(element, attrName, value) {\n\t\tif (!value) {\n\t\t\telement.removeAttribute(attrName);\n\t\t\treturn;\n\t\t}\n\n\t\telement.setAttribute(attrName, value);\n\t};\n\n\tvar restoreOriginalAttrs = function restoreOriginalAttrs(element, attributes) {\n\t\tif (!hasOriginalAttrs(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar originals = getOriginalAttrs(element);\n\t\tattributes.forEach(function (attribute) {\n\t\t\tsetOrResetAttribute(element, attribute, originals[attribute]);\n\t\t});\n\t};\n\tvar restoreOriginalBgImage = function restoreOriginalBgImage(element) {\n\t\tif (!hasOriginalAttrs(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar originals = getOriginalAttrs(element);\n\t\telement.style.backgroundImage = originals.backgroundImage;\n\t};\n\n\tvar manageApplied = function manageApplied(element, settings, instance) {\n\t\taddClass(element, settings.class_applied);\n\t\tsetStatus(element, statusApplied); // Instance is not provided when loading is called from static class\n\n\t\tif (!instance) return;\n\n\t\tif (settings.unobserve_completed) {\n\t\t\t// Unobserve now because we can't do it on load\n\t\t\tunobserve(element, settings);\n\t\t}\n\n\t\tsafeCallback(settings.callback_applied, element, instance);\n\t};\n\tvar manageLoading = function manageLoading(element, settings, instance) {\n\t\taddClass(element, settings.class_loading);\n\t\tsetStatus(element, statusLoading); // Instance is not provided when loading is called from static class\n\n\t\tif (!instance) return;\n\t\tupdateLoadingCount(instance, +1);\n\t\tsafeCallback(settings.callback_loading, element, instance);\n\t};\n\tvar setAttributeIfValue = function setAttributeIfValue(element, attrName, value) {\n\t\tif (!value) {\n\t\t\treturn;\n\t\t}\n\n\t\telement.setAttribute(attrName, value);\n\t};\n\tvar setImageAttributes = function setImageAttributes(element, settings) {\n\t\tsetAttributeIfValue(element, SIZES, getData(element, settings.data_sizes));\n\t\tsetAttributeIfValue(element, SRCSET, getData(element, settings.data_srcset));\n\t\tsetAttributeIfValue(element, SRC, getData(element, settings.data_src));\n\t};\n\tvar setSourcesImg = function setSourcesImg(imgEl, settings) {\n\t\tforEachPictureSource(imgEl, function (sourceTag) {\n\t\t\tsetOriginalsObject(sourceTag, attrsSrcSrcsetSizes);\n\t\t\tsetImageAttributes(sourceTag, settings);\n\t\t});\n\t\tsetOriginalsObject(imgEl, attrsSrcSrcsetSizes);\n\t\tsetImageAttributes(imgEl, settings);\n\t};\n\tvar setSourcesIframe = function setSourcesIframe(iframe, settings) {\n\t\tsetOriginalsObject(iframe, attrsSrc);\n\t\tsetAttributeIfValue(iframe, SRC, getData(iframe, settings.data_src));\n\t};\n\tvar setSourcesVideo = function setSourcesVideo(videoEl, settings) {\n\t\tforEachVideoSource(videoEl, function (sourceEl) {\n\t\t\tsetOriginalsObject(sourceEl, attrsSrc);\n\t\t\tsetAttributeIfValue(sourceEl, SRC, getData(sourceEl, settings.data_src));\n\t\t});\n\t\tsetOriginalsObject(videoEl, attrsSrcPoster);\n\t\tsetAttributeIfValue(videoEl, POSTER, getData(videoEl, settings.data_poster));\n\t\tsetAttributeIfValue(videoEl, SRC, getData(videoEl, settings.data_src));\n\t\tvideoEl.load();\n\t};\n\tvar setBackground = function setBackground(element, settings, instance) {\n\t\tvar bg1xValue = getData(element, settings.data_bg);\n\t\tvar bgHiDpiValue = getData(element, settings.data_bg_hidpi);\n\t\tvar bgDataValue = isHiDpi && bgHiDpiValue ? bgHiDpiValue : bg1xValue;\n\t\tif (!bgDataValue) return;\n\t\telement.style.backgroundImage = 'url(\"'.concat(bgDataValue, '\")');\n\t\tgetTempImage(element).setAttribute(SRC, bgDataValue);\n\t\tmanageLoading(element, settings, instance);\n\t}; // NOTE: THE TEMP IMAGE TRICK CANNOT BE DONE WITH data-multi-bg\n\t// BECAUSE INSIDE ITS VALUES MUST BE WRAPPED WITH URL() AND ONE OF THEM\n\t// COULD BE A GRADIENT BACKGROUND IMAGE\n\n\tvar setMultiBackground = function setMultiBackground(element, settings, instance) {\n\t\tvar bg1xValue = getData(element, settings.data_bg_multi);\n\t\tvar bgHiDpiValue = getData(element, settings.data_bg_multi_hidpi);\n\t\tvar bgDataValue = isHiDpi && bgHiDpiValue ? bgHiDpiValue : bg1xValue;\n\n\t\tif (!bgDataValue) {\n\t\t\treturn;\n\t\t}\n\n\t\telement.style.backgroundImage = bgDataValue;\n\t\tmanageApplied(element, settings, instance);\n\t};\n\tvar setSourcesFunctions = {\n\t\tIMG: setSourcesImg,\n\t\tIFRAME: setSourcesIframe,\n\t\tVIDEO: setSourcesVideo,\n\t};\n\tvar setSourcesNative = function setSourcesNative(element, settings) {\n\t\tvar setSourcesFunction = setSourcesFunctions[element.tagName];\n\n\t\tif (!setSourcesFunction) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetSourcesFunction(element, settings);\n\t};\n\tvar setSources = function setSources(element, settings, instance) {\n\t\tvar setSourcesFunction = setSourcesFunctions[element.tagName];\n\n\t\tif (!setSourcesFunction) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetSourcesFunction(element, settings);\n\t\tmanageLoading(element, settings, instance);\n\t};\n\n\tvar elementsWithLoadEvent = ['IMG', 'IFRAME', 'VIDEO'];\n\tvar hasLoadEvent = function hasLoadEvent(element) {\n\t\treturn elementsWithLoadEvent.indexOf(element.tagName) > -1;\n\t};\n\tvar checkFinish = function checkFinish(settings, instance) {\n\t\tif (instance && !isSomethingLoading(instance) && !haveElementsToLoad(instance)) {\n\t\t\tsafeCallback(settings.callback_finish, instance);\n\t\t}\n\t};\n\tvar addEventListener = function addEventListener(element, eventName, handler) {\n\t\telement.addEventListener(eventName, handler);\n\t\telement.llEvLisnrs[eventName] = handler;\n\t};\n\tvar removeEventListener = function removeEventListener(element, eventName, handler) {\n\t\telement.removeEventListener(eventName, handler);\n\t};\n\tvar hasEventListeners = function hasEventListeners(element) {\n\t\treturn !!element.llEvLisnrs;\n\t};\n\tvar addEventListeners = function addEventListeners(element, loadHandler, errorHandler) {\n\t\tif (!hasEventListeners(element)) element.llEvLisnrs = {};\n\t\tvar loadEventName = element.tagName === 'VIDEO' ? 'loadeddata' : 'load';\n\t\taddEventListener(element, loadEventName, loadHandler);\n\t\taddEventListener(element, 'error', errorHandler);\n\t};\n\tvar removeEventListeners = function removeEventListeners(element) {\n\t\tif (!hasEventListeners(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar eventListeners = element.llEvLisnrs;\n\n\t\tfor (var eventName in eventListeners) {\n\t\t\tvar handler = eventListeners[eventName];\n\t\t\tremoveEventListener(element, eventName, handler);\n\t\t}\n\n\t\tdelete element.llEvLisnrs;\n\t};\n\tvar doneHandler = function doneHandler(element, settings, instance) {\n\t\tdeleteTempImage(element);\n\t\tupdateLoadingCount(instance, -1);\n\t\tdecreaseToLoadCount(instance);\n\t\tremoveClass(element, settings.class_loading);\n\n\t\tif (settings.unobserve_completed) {\n\t\t\tunobserve(element, instance);\n\t\t}\n\t};\n\tvar loadHandler = function loadHandler(event, element, settings, instance) {\n\t\tvar goingNative = hasStatusNative(element);\n\t\tdoneHandler(element, settings, instance);\n\t\taddClass(element, settings.class_loaded);\n\t\tsetStatus(element, statusLoaded);\n\t\tsafeCallback(settings.callback_loaded, element, instance);\n\t\tif (!goingNative) checkFinish(settings, instance);\n\t};\n\tvar errorHandler = function errorHandler(event, element, settings, instance) {\n\t\tvar goingNative = hasStatusNative(element);\n\t\tdoneHandler(element, settings, instance);\n\t\taddClass(element, settings.class_error);\n\t\tsetStatus(element, statusError);\n\t\tsafeCallback(settings.callback_error, element, instance);\n\t\tif (!goingNative) checkFinish(settings, instance);\n\t};\n\tvar addOneShotEventListeners = function addOneShotEventListeners(element, settings, instance) {\n\t\tvar elementToListenTo = getTempImage(element) || element;\n\n\t\tif (hasEventListeners(elementToListenTo)) {\n\t\t\t// This happens when loading is retried twice\n\t\t\treturn;\n\t\t}\n\n\t\tvar _loadHandler = function _loadHandler(event) {\n\t\t\tloadHandler(event, element, settings, instance);\n\t\t\tremoveEventListeners(elementToListenTo);\n\t\t};\n\n\t\tvar _errorHandler = function _errorHandler(event) {\n\t\t\terrorHandler(event, element, settings, instance);\n\t\t\tremoveEventListeners(elementToListenTo);\n\t\t};\n\n\t\taddEventListeners(elementToListenTo, _loadHandler, _errorHandler);\n\t};\n\n\tvar loadBackground = function loadBackground(element, settings, instance) {\n\t\taddTempImage(element);\n\t\taddOneShotEventListeners(element, settings, instance);\n\t\tsaveOriginalBackgroundStyle(element);\n\t\tsetBackground(element, settings, instance);\n\t\tsetMultiBackground(element, settings, instance);\n\t};\n\n\tvar loadRegular = function loadRegular(element, settings, instance) {\n\t\taddOneShotEventListeners(element, settings, instance);\n\t\tsetSources(element, settings, instance);\n\t};\n\n\tvar load = function load(element, settings, instance) {\n\t\tif (hasLoadEvent(element)) {\n\t\t\tloadRegular(element, settings, instance);\n\t\t} else {\n\t\t\tloadBackground(element, settings, instance);\n\t\t}\n\t};\n\tvar loadNative = function loadNative(element, settings, instance) {\n\t\telement.setAttribute('loading', 'lazy');\n\t\taddOneShotEventListeners(element, settings, instance);\n\t\tsetSourcesNative(element, settings);\n\t\tsetStatus(element, statusNative);\n\t};\n\n\tvar removeImageAttributes = function removeImageAttributes(element) {\n\t\telement.removeAttribute(SRC);\n\t\telement.removeAttribute(SRCSET);\n\t\telement.removeAttribute(SIZES);\n\t};\n\n\tvar resetSourcesImg = function resetSourcesImg(element) {\n\t\tforEachPictureSource(element, function (sourceTag) {\n\t\t\tremoveImageAttributes(sourceTag);\n\t\t});\n\t\tremoveImageAttributes(element);\n\t};\n\n\tvar restoreImg = function restoreImg(imgEl) {\n\t\tforEachPictureSource(imgEl, function (sourceEl) {\n\t\t\trestoreOriginalAttrs(sourceEl, attrsSrcSrcsetSizes);\n\t\t});\n\t\trestoreOriginalAttrs(imgEl, attrsSrcSrcsetSizes);\n\t};\n\tvar restoreVideo = function restoreVideo(videoEl) {\n\t\tforEachVideoSource(videoEl, function (sourceEl) {\n\t\t\trestoreOriginalAttrs(sourceEl, attrsSrc);\n\t\t});\n\t\trestoreOriginalAttrs(videoEl, attrsSrcPoster);\n\t\tvideoEl.load();\n\t};\n\tvar restoreIframe = function restoreIframe(iframeEl) {\n\t\trestoreOriginalAttrs(iframeEl, attrsSrc);\n\t};\n\tvar restoreFunctions = {\n\t\tIMG: restoreImg,\n\t\tIFRAME: restoreIframe,\n\t\tVIDEO: restoreVideo,\n\t};\n\n\tvar restoreAttributes = function restoreAttributes(element) {\n\t\tvar restoreFunction = restoreFunctions[element.tagName];\n\n\t\tif (!restoreFunction) {\n\t\t\trestoreOriginalBgImage(element);\n\t\t\treturn;\n\t\t}\n\n\t\trestoreFunction(element);\n\t};\n\n\tvar resetClasses = function resetClasses(element, settings) {\n\t\tif (hasEmptyStatus(element) || hasStatusNative(element)) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveClass(element, settings.class_entered);\n\t\tremoveClass(element, settings.class_exited);\n\t\tremoveClass(element, settings.class_applied);\n\t\tremoveClass(element, settings.class_loading);\n\t\tremoveClass(element, settings.class_loaded);\n\t\tremoveClass(element, settings.class_error);\n\t};\n\n\tvar restore = function restore(element, settings) {\n\t\trestoreAttributes(element);\n\t\tresetClasses(element, settings);\n\t\tresetStatus(element);\n\t\tdeleteOriginalAttrs(element);\n\t};\n\n\tvar cancelLoading = function cancelLoading(element, entry, settings, instance) {\n\t\tif (!settings.cancel_on_exit) return;\n\t\tif (!hasStatusLoading(element)) return;\n\t\tif (element.tagName !== 'IMG') return; //Works only on images\n\n\t\tremoveEventListeners(element);\n\t\tresetSourcesImg(element);\n\t\trestoreImg(element);\n\t\tremoveClass(element, settings.class_loading);\n\t\tupdateLoadingCount(instance, -1);\n\t\tresetStatus(element);\n\t\tsafeCallback(settings.callback_cancel, element, entry, instance);\n\t};\n\n\tvar onEnter = function onEnter(element, entry, settings, instance) {\n\t\tvar dontLoad = hadStartedLoading(element);\n\t\t/* Save status\n    before setting it, to prevent loading it again. Fixes #526. */\n\n\t\tsetStatus(element, statusEntered);\n\t\taddClass(element, settings.class_entered);\n\t\tremoveClass(element, settings.class_exited);\n\t\tunobserveEntered(element, settings, instance);\n\t\tsafeCallback(settings.callback_enter, element, entry, instance);\n\t\tif (dontLoad) return;\n\t\tload(element, settings, instance);\n\t};\n\tvar onExit = function onExit(element, entry, settings, instance) {\n\t\tif (hasEmptyStatus(element)) return; //Ignore the first pass, at landing\n\n\t\taddClass(element, settings.class_exited);\n\t\tcancelLoading(element, entry, settings, instance);\n\t\tsafeCallback(settings.callback_exit, element, entry, instance);\n\t};\n\n\tvar tagsWithNativeLazy = ['IMG', 'IFRAME', 'VIDEO'];\n\tvar shouldUseNative = function shouldUseNative(settings) {\n\t\treturn settings.use_native && 'loading' in HTMLImageElement.prototype;\n\t};\n\tvar loadAllNative = function loadAllNative(elements, settings, instance) {\n\t\telements.forEach(function (element) {\n\t\t\tif (tagsWithNativeLazy.indexOf(element.tagName) === -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tloadNative(element, settings, instance);\n\t\t});\n\t\tsetToLoadCount(instance, 0);\n\t};\n\n\tvar isIntersecting = function isIntersecting(entry) {\n\t\treturn entry.isIntersecting || entry.intersectionRatio > 0;\n\t};\n\n\tvar getObserverSettings = function getObserverSettings(settings) {\n\t\treturn {\n\t\t\troot: settings.container === document ? null : settings.container,\n\t\t\trootMargin: settings.thresholds || settings.threshold + 'px',\n\t\t};\n\t};\n\n\tvar intersectionHandler = function intersectionHandler(entries, settings, instance) {\n\t\tentries.forEach(function (entry) {\n\t\t\treturn isIntersecting(entry) ? onEnter(entry.target, entry, settings, instance) : onExit(entry.target, entry, settings, instance);\n\t\t});\n\t};\n\n\tvar observeElements = function observeElements(observer, elements) {\n\t\telements.forEach(function (element) {\n\t\t\tobserver.observe(element);\n\t\t});\n\t};\n\tvar updateObserver = function updateObserver(observer, elementsToObserve) {\n\t\tresetObserver(observer);\n\t\tobserveElements(observer, elementsToObserve);\n\t};\n\tvar setObserver = function setObserver(settings, instance) {\n\t\tif (!supportsIntersectionObserver || shouldUseNative(settings)) {\n\t\t\treturn;\n\t\t}\n\n\t\tinstance._observer = new IntersectionObserver(function (entries) {\n\t\t\tintersectionHandler(entries, settings, instance);\n\t\t}, getObserverSettings(settings));\n\t};\n\n\tvar toArray = function toArray(nodeSet) {\n\t\treturn Array.prototype.slice.call(nodeSet);\n\t};\n\tvar queryElements = function queryElements(settings) {\n\t\treturn settings.container.querySelectorAll(settings.elements_selector);\n\t};\n\tvar excludeManagedElements = function excludeManagedElements(elements) {\n\t\treturn toArray(elements).filter(hasEmptyStatus);\n\t};\n\tvar hasError = function hasError(element) {\n\t\treturn hasStatusError(element);\n\t};\n\tvar filterErrorElements = function filterErrorElements(elements) {\n\t\treturn toArray(elements).filter(hasError);\n\t};\n\tvar getElementsToLoad = function getElementsToLoad(elements, settings) {\n\t\treturn excludeManagedElements(elements || queryElements(settings));\n\t};\n\n\tvar retryLazyLoad = function retryLazyLoad(settings, instance) {\n\t\tvar errorElements = filterErrorElements(queryElements(settings));\n\t\terrorElements.forEach(function (element) {\n\t\t\tremoveClass(element, settings.class_error);\n\t\t\tresetStatus(element);\n\t\t});\n\t\tinstance.update();\n\t};\n\tvar setOnlineCheck = function setOnlineCheck(settings, instance) {\n\t\tif (!runningOnBrowser) {\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('online', function () {\n\t\t\tretryLazyLoad(settings, instance);\n\t\t});\n\t};\n\n\tvar LazyLoad = function LazyLoad(customSettings, elements) {\n\t\tvar settings = getExtendedSettings(customSettings);\n\t\tthis._settings = settings;\n\t\tthis.loadingCount = 0;\n\t\tsetObserver(settings, this);\n\t\tsetOnlineCheck(settings, this);\n\t\tthis.update(elements);\n\t};\n\n\tLazyLoad.prototype = {\n\t\tupdate: function update(givenNodeset) {\n\t\t\tvar settings = this._settings;\n\t\t\tvar elementsToLoad = getElementsToLoad(givenNodeset, settings);\n\t\t\tsetToLoadCount(this, elementsToLoad.length);\n\n\t\t\tif (isBot || !supportsIntersectionObserver) {\n\t\t\t\tthis.loadAll(elementsToLoad);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (shouldUseNative(settings)) {\n\t\t\t\tloadAllNative(elementsToLoad, settings, this);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdateObserver(this._observer, elementsToLoad);\n\t\t},\n\t\tdestroy: function destroy() {\n\t\t\t// Observer\n\t\t\tif (this._observer) {\n\t\t\t\tthis._observer.disconnect();\n\t\t\t} // Clean custom attributes on elements\n\n\t\t\tqueryElements(this._settings).forEach(function (element) {\n\t\t\t\tdeleteOriginalAttrs(element);\n\t\t\t}); // Delete all internal props\n\n\t\t\tdelete this._observer;\n\t\t\tdelete this._settings;\n\t\t\tdelete this.loadingCount;\n\t\t\tdelete this.toLoadCount;\n\t\t},\n\t\tloadAll: function loadAll(elements) {\n\t\t\tvar _this = this;\n\n\t\t\tvar settings = this._settings;\n\t\t\tvar elementsToLoad = getElementsToLoad(elements, settings);\n\t\t\telementsToLoad.forEach(function (element) {\n\t\t\t\tunobserve(element, _this);\n\t\t\t\tload(element, settings, _this);\n\t\t\t});\n\t\t},\n\t\trestoreAll: function restoreAll() {\n\t\t\tvar settings = this._settings;\n\t\t\tqueryElements(settings).forEach(function (element) {\n\t\t\t\trestore(element, settings);\n\t\t\t});\n\t\t},\n\t};\n\n\tLazyLoad.load = function (element, customSettings) {\n\t\tvar settings = getExtendedSettings(customSettings);\n\t\tload(element, settings);\n\t};\n\n\tLazyLoad.resetStatus = function (element) {\n\t\tresetStatus(element);\n\t}; // Automatic instances creation if required (useful for async script loading)\n\n\t// if (runningOnBrowser) {\n\t// \tautoInitialize(LazyLoad, window.lazyLoadOptions);\n\t// }\n\n\treturn LazyLoad;\n});\n"},{"base":"plugins","rel":"litespeed-cache/assets/js/js_delay.js","ext":"js","size":2760,"mtime":1757312769,"type":"text","content":"window.litespeed_ui_events = window.litespeed_ui_events || ['mouseover', 'click', 'keydown', 'wheel', 'touchmove', 'touchstart'];\nvar urlCreator = window.URL || window.webkitURL;\n\n// const litespeed_js_delay_timer = setTimeout( litespeed_load_delayed_js, 70 );\n\nlitespeed_ui_events.forEach(e => {\n\twindow.addEventListener(e, litespeed_load_delayed_js_force, { passive: true }); // Use passive to save GPU in interaction\n});\n\nfunction litespeed_load_delayed_js_force() {\n\tconsole.log('[LiteSpeed] Start Load JS Delayed');\n\t// clearTimeout( litespeed_js_delay_timer );\n\tlitespeed_ui_events.forEach(e => {\n\t\twindow.removeEventListener(e, litespeed_load_delayed_js_force, { passive: true });\n\t});\n\n\tdocument.querySelectorAll('iframe[data-litespeed-src]').forEach(e => {\n\t\te.setAttribute('src', e.getAttribute('data-litespeed-src'));\n\t});\n\n\t// Prevent early loading\n\tif (document.readyState == 'loading') {\n\t\twindow.addEventListener('DOMContentLoaded', litespeed_load_delayed_js);\n\t} else {\n\t\tlitespeed_load_delayed_js();\n\t}\n}\n\nasync function litespeed_load_delayed_js() {\n\tlet js_list = [];\n\t// Prepare all JS\n\tdocument.querySelectorAll('script[type=\"litespeed/javascript\"]').forEach(e => {\n\t\tjs_list.push(e);\n\t});\n\n\t// Load by sequence\n\tfor (let script in js_list) {\n\t\tawait new Promise(resolve => litespeed_load_one(js_list[script], resolve));\n\t}\n\n\t// Simulate doc.loaded\n\tdocument.dispatchEvent(new Event('DOMContentLiteSpeedLoaded'));\n\twindow.dispatchEvent(new Event('DOMContentLiteSpeedLoaded'));\n}\n\n/**\n * Load one JS synchronously\n */\nfunction litespeed_load_one(e, resolve) {\n\tconsole.log('[LiteSpeed] Load ', e);\n\n\tvar e2 = document.createElement('script');\n\n\te2.addEventListener('load', resolve);\n\te2.addEventListener('error', resolve);\n\n\tvar attrs = e.getAttributeNames();\n\tattrs.forEach(aname => {\n\t\tif (aname == 'type') return;\n\t\te2.setAttribute(aname == 'data-src' ? 'src' : aname, e.getAttribute(aname));\n\t});\n\te2.type = 'text/javascript';\n\n\tlet is_inline = false;\n\t// Inline script\n\tif (!e2.src && e.textContent) {\n\t\te2.src = litespeed_inline2src(e.textContent);\n\t\t// e2.textContent = e.textContent;\n\t\tis_inline = true;\n\t}\n\n\t// Deploy to dom\n\te.after(e2);\n\te.remove();\n\t// document.head.appendChild(e2);\n\t// e2 = e.cloneNode(true)\n\t// e2.setAttribute( 'type', 'text/javascript' );\n\t// e2.setAttribute( 'data-delayed', '1' );\n\n\t// Kick off resolve for inline\n\tif (is_inline) resolve();\n}\n\n/**\n * Prepare inline script\n */\nfunction litespeed_inline2src(data) {\n\ttry {\n\t\tvar src = urlCreator.createObjectURL(\n\t\t\tnew Blob([data.replace(/^(?:<!--)?(.*?)(?:-->)?$/gm, '$1')], {\n\t\t\t\ttype: 'text/javascript',\n\t\t\t}),\n\t\t);\n\t} catch (e) {\n\t\tvar src = 'data:text/javascript;base64,' + btoa(data.replace(/^(?:<!--)?(.*?)(?:-->)?$/gm, '$1'));\n\t}\n\n\treturn src;\n}\n"},{"base":"plugins","rel":"litespeed-cache/assets/js/css_async.js","ext":"js","size":1489,"mtime":1757312769,"type":"text","content":"/*! loadCSS. [c]2017 Filament Group, Inc. MIT License */\n!function(a){\"use strict\";var b=function(b,c,d){function e(a){return h.body?a():void setTimeout(function(){e(a)})}function f(){i.addEventListener&&i.removeEventListener(\"load\",f),i.media=d||\"all\"}var g,h=a.document,i=h.createElement(\"link\");if(c)g=c;else{var j=(h.body||h.getElementsByTagName(\"head\")[0]).childNodes;g=j[j.length-1]}var k=h.styleSheets;i.rel=\"stylesheet\",i.href=b,i.media=\"only x\",e(function(){g.parentNode.insertBefore(i,c?g:g.nextSibling)});var l=function(a){for(var b=i.href,c=k.length;c--;)if(k[c].href===b)return a();setTimeout(function(){l(a)})};return i.addEventListener&&i.addEventListener(\"load\",f),i.onloadcssdefined=l,l(f),i};\"undefined\"!=typeof exports?exports.loadCSS=b:a.loadCSS=b}(\"undefined\"!=typeof global?global:this);\n/*! loadCSS rel=preload polyfill. [c]2017 Filament Group, Inc. MIT License */\n!function(a){if(a.loadCSS){var b=loadCSS.relpreload={};if(b.support=function(){try{return a.document.createElement(\"link\").relList.supports(\"preload\")}catch(b){return!1}},b.poly=function(){for(var b=a.document.getElementsByTagName(\"link\"),c=0;c<b.length;c++){var d=b[c];\"preload\"===d.rel&&\"style\"===d.getAttribute(\"as\")&&(a.loadCSS(d.href,d,d.getAttribute(\"media\")),d.rel=null)}},!b.support()){b.poly();var c=a.setInterval(b.poly,300);a.addEventListener&&a.addEventListener(\"load\",function(){b.poly(),a.clearInterval(c)}),a.attachEvent&&a.attachEvent(\"onload\",function(){a.clearInterval(c)})}}}(this);"},{"base":"plugins","rel":"litespeed-cache/assets/js/webfontloader.min.js","ext":"js","size":12098,"mtime":1757312769,"type":"text","content":"!function(){function e(t,n,i){return t.call.apply(t.bind,arguments)}function o(n,i,t){if(!n)throw Error();if(2<arguments.length){var e=Array.prototype.slice.call(arguments,2);return function(){var t=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(t,e),n.apply(i,t)}}return function(){return n.apply(i,arguments)}}function d(t,n,i){return(d=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?e:o).apply(null,arguments)}var r=Date.now||function(){return+new Date};function n(t,n){this.a=t,this.o=n||t,this.c=this.o.document}var f=!!window.FontFace;function c(t,n,i,e){if(n=t.c.createElement(n),i)for(var o in i)i.hasOwnProperty(o)&&(\"style\"==o?n.style.cssText=i[o]:n.setAttribute(o,i[o]));return e&&n.appendChild(t.c.createTextNode(e)),n}function h(t,n,i){(t=t.c.getElementsByTagName(n)[0])||(t=document.documentElement),t.insertBefore(i,t.lastChild)}function i(t){t.parentNode&&t.parentNode.removeChild(t)}function g(t,n,i){n=n||[],i=i||[];for(var e=t.className.split(/\\s+/),o=0;o<n.length;o+=1){for(var a=!1,s=0;s<e.length;s+=1)if(n[o]===e[s]){a=!0;break}a||e.push(n[o])}for(n=[],o=0;o<e.length;o+=1){for(a=!1,s=0;s<i.length;s+=1)if(e[o]===i[s]){a=!0;break}a||n.push(e[o])}t.className=n.join(\" \").replace(/\\s+/g,\" \").replace(/^\\s+|\\s+$/,\"\")}function a(t,n){for(var i=t.className.split(/\\s+/),e=0,o=i.length;e<o;e++)if(i[e]==n)return!0;return!1}function l(t,n,i){function e(){s&&o&&(s(a),s=null)}n=c(t,\"link\",{rel:\"stylesheet\",href:n,media:\"all\"});var o=!1,a=null,s=i||null;f?(n.onload=function(){o=!0,e()},n.onerror=function(){o=!0,a=Error(\"Stylesheet failed to load\"),e()}):setTimeout(function(){o=!0,e()},0),h(t,\"head\",n)}function u(t,n,i,e){var o=t.c.getElementsByTagName(\"head\")[0];if(o){var a=c(t,\"script\",{src:n}),s=!1;return a.onload=a.onreadystatechange=function(){s||this.readyState&&\"loaded\"!=this.readyState&&\"complete\"!=this.readyState||(s=!0,i&&i(null),a.onload=a.onreadystatechange=null,\"HEAD\"==a.parentNode.tagName&&o.removeChild(a))},o.appendChild(a),setTimeout(function(){s||(s=!0,i&&i(Error(\"Script load timeout\")))},e||5e3),a}return null}function p(){this.a=0,this.c=null}function v(t){return t.a++,function(){t.a--,s(t)}}function w(t,n){t.c=n,s(t)}function s(t){0==t.a&&t.c&&(t.c(),t.c=null)}function m(t){this.a=t||\"-\"}function y(t,n){this.c=t,this.f=4,this.a=\"n\";var i=(n||\"n4\").match(/^([nio])([1-9])$/i);i&&(this.a=i[1],this.f=parseInt(i[2],10))}function b(t){var n=[];t=t.split(/,\\s*/);for(var i=0;i<t.length;i++){var e=t[i].replace(/['\"]/g,\"\");-1!=e.indexOf(\" \")||/^\\d/.test(e)?n.push(\"'\"+e+\"'\"):n.push(e)}return n.join(\",\")}function x(t){return t.a+t.f}function j(t){var n=\"normal\";return\"o\"===t.a?n=\"oblique\":\"i\"===t.a&&(n=\"italic\"),n}function _(t,n){this.c=t,this.f=t.o.document.documentElement,this.h=n,this.a=new m(\"-\"),this.j=!1!==n.events,this.g=!1!==n.classes}function k(t){if(t.g){var n=a(t.f,t.a.c(\"wf\",\"active\")),i=[],e=[t.a.c(\"wf\",\"loading\")];n||i.push(t.a.c(\"wf\",\"inactive\")),g(t.f,i,e)}T(t,\"inactive\")}function T(t,n,i){t.j&&t.h[n]&&(i?t.h[n](i.c,x(i)):t.h[n]())}function S(){this.c={}}function C(t,n){this.c=t,this.f=n,this.a=c(this.c,\"span\",{\"aria-hidden\":\"true\"},this.f)}function A(t){h(t.c,\"body\",t.a)}function N(t){return\"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:\"+b(t.c)+\";font-style:\"+j(t)+\";font-weight:\"+t.f+\"00;\"}function E(t,n,i,e,o,a){this.g=t,this.j=n,this.a=e,this.c=i,this.f=o||3e3,this.h=a||void 0}function W(t,n,i,e,o,a,s){this.v=t,this.B=n,this.c=i,this.a=e,this.s=s||\"BESbswy\",this.f={},this.w=o||3e3,this.u=a||null,this.m=this.j=this.h=this.g=null,this.g=new C(this.c,this.s),this.h=new C(this.c,this.s),this.j=new C(this.c,this.s),this.m=new C(this.c,this.s),t=N(t=new y(this.a.c+\",serif\",x(this.a))),this.g.a.style.cssText=t,t=N(t=new y(this.a.c+\",sans-serif\",x(this.a))),this.h.a.style.cssText=t,t=N(t=new y(\"serif\",x(this.a))),this.j.a.style.cssText=t,t=N(t=new y(\"sans-serif\",x(this.a))),this.m.a.style.cssText=t,A(this.g),A(this.h),A(this.j),A(this.m)}m.prototype.c=function(t){for(var n=[],i=0;i<arguments.length;i++)n.push(arguments[i].replace(/[\\W_]+/g,\"\").toLowerCase());return n.join(this.a)},E.prototype.start=function(){var o=this.c.o.document,a=this,s=r(),t=new Promise(function(i,e){!function n(){var t;r()-s>=a.f?e():o.fonts.load((t=a.a,j(t)+\" \"+t.f+\"00 300px \"+b(t.c)),a.h).then(function(t){1<=t.length?i():setTimeout(n,25)},function(){e()})}()}),i=null,n=new Promise(function(t,n){i=setTimeout(n,a.f)});Promise.race([n,t]).then(function(){i&&(clearTimeout(i),i=null),a.g(a.a)},function(){a.j(a.a)})};var F={D:\"serif\",C:\"sans-serif\"},I=null;function O(){if(null===I){var t=/AppleWebKit\\/([0-9]+)(?:\\.([0-9]+))/.exec(window.navigator.userAgent);I=!!t&&(parseInt(t[1],10)<536||536===parseInt(t[1],10)&&parseInt(t[2],10)<=11)}return I}function P(t,n,i){for(var e in F)if(F.hasOwnProperty(e)&&n===t.f[F[e]]&&i===t.f[F[e]])return!0;return!1}function B(t){var n,i=t.g.a.offsetWidth,e=t.h.a.offsetWidth;(n=i===t.f.serif&&e===t.f[\"sans-serif\"])||(n=O()&&P(t,i,e)),n?r()-t.A>=t.w?O()&&P(t,i,e)&&(null===t.u||t.u.hasOwnProperty(t.a.c))?L(t,t.v):L(t,t.B):setTimeout(d(function(){B(this)},t),50):L(t,t.v)}function L(t,n){setTimeout(d(function(){i(this.g.a),i(this.h.a),i(this.j.a),i(this.m.a),n(this.a)},t),0)}function D(t,n,i){this.c=t,this.a=n,this.f=0,this.m=this.j=!1,this.s=i}W.prototype.start=function(){this.f.serif=this.j.a.offsetWidth,this.f[\"sans-serif\"]=this.m.a.offsetWidth,this.A=r(),B(this)};var $=null;function q(t){0==--t.f&&t.j&&(t.m?((t=t.a).g&&g(t.f,[t.a.c(\"wf\",\"active\")],[t.a.c(\"wf\",\"loading\"),t.a.c(\"wf\",\"inactive\")]),T(t,\"active\")):k(t.a))}function t(t){this.j=t,this.a=new S,this.h=0,this.f=this.g=!0}function H(t,n){this.c=t,this.a=n}function M(t,n){this.c=t,this.a=n}function z(t,n){this.c=t||\"https://fonts.googleapis.com/css\",this.a=[],this.f=[],this.g=n||\"\"}D.prototype.g=function(t){var n=this.a;n.g&&g(n.f,[n.a.c(\"wf\",t.c,x(t).toString(),\"active\")],[n.a.c(\"wf\",t.c,x(t).toString(),\"loading\"),n.a.c(\"wf\",t.c,x(t).toString(),\"inactive\")]),T(n,\"fontactive\",t),this.m=!0,q(this)},D.prototype.h=function(t){var n=this.a;if(n.g){var i=a(n.f,n.a.c(\"wf\",t.c,x(t).toString(),\"active\")),e=[],o=[n.a.c(\"wf\",t.c,x(t).toString(),\"loading\")];i||e.push(n.a.c(\"wf\",t.c,x(t).toString(),\"inactive\")),g(n.f,e,o)}T(n,\"fontinactive\",t),q(this)},t.prototype.load=function(t){this.c=new n(this.j,t.context||this.j),this.g=!1!==t.events,this.f=!1!==t.classes,function(o,t,n){var i=[],e=n.timeout;a=t,a.g&&g(a.f,[a.a.c(\"wf\",\"loading\")]),T(a,\"loading\");var a;var i=function(t,n,i){var e,o=[];for(e in n)if(n.hasOwnProperty(e)){var a=t.c[e];a&&o.push(a(n[e],i))}return o}(o.a,n,o.c),s=new D(o.c,t,e);for(o.h=i.length,t=0,n=i.length;t<n;t++)i[t].load(function(t,n,i){var e,c,h,l,u,p;c=s,h=t,l=n,u=i,p=0==--(e=o).h,(e.f||e.g)&&setTimeout(function(){var t=u||null,n=l||{};if(0===h.length&&p)k(c.a);else{c.f+=h.length,p&&(c.j=p);var i,e=[];for(i=0;i<h.length;i++){var o=h[i],a=n[o.c],s=c.a,r=o;if(s.g&&g(s.f,[s.a.c(\"wf\",r.c,x(r).toString(),\"loading\")]),T(s,\"fontloading\",r),(s=null)===$)if(window.FontFace){var r=/Gecko.*Firefox\\/(\\d+)/.exec(window.navigator.userAgent),f=/OS X.*Version\\/10\\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);$=r?42<parseInt(r[1],10):!f}else $=!1;s=$?new E(d(c.g,c),d(c.h,c),c.c,o,c.s,a):new W(d(c.g,c),d(c.h,c),c.c,o,c.s,t,a),e.push(s)}for(i=0;i<e.length;i++)e[i].start()}},0)})}(this,new _(this.c,t),t)},H.prototype.load=function(s){var n=this,r=n.a.projectId,t=n.a.version;if(r){var f=n.c.o;u(this.c,(n.a.api||\"https://fast.fonts.net/jsapi\")+\"/\"+r+\".js\"+(t?\"?v=\"+t:\"\"),function(t){t?s([]):(f[\"__MonotypeConfiguration__\"+r]=function(){return n.a},function t(){if(f[\"__mti_fntLst\"+r]){var n,i=f[\"__mti_fntLst\"+r](),e=[];if(i)for(var o=0;o<i.length;o++){var a=i[o].fontfamily;null!=i[o].fontStyle&&null!=i[o].fontWeight?(n=i[o].fontStyle+i[o].fontWeight,e.push(new y(a,n))):e.push(new y(a))}s(e)}else setTimeout(function(){t()},50)}())}).id=\"__MonotypeAPIScript__\"+r}else s([])},M.prototype.load=function(t){var n,i,e=this.a.urls||[],o=this.a.families||[],a=this.a.testStrings||{},s=new p;for(n=0,i=e.length;n<i;n++)l(this.c,e[n],v(s));var r=[];for(n=0,i=o.length;n<i;n++)if((e=o[n].split(\":\"))[1])for(var f=e[1].split(\",\"),c=0;c<f.length;c+=1)r.push(new y(e[0],f[c]));else r.push(new y(e[0]));w(s,function(){t(r,a)})};function G(t){this.f=t,this.a=[],this.c={}}var K={latin:\"BESbswy\",\"latin-ext\":\"çöüğş\",cyrillic:\"йяЖ\",greek:\"αβΣ\",khmer:\"កខគ\",Hanuman:\"កខគ\"},R={thin:\"1\",extralight:\"2\",\"extra-light\":\"2\",ultralight:\"2\",\"ultra-light\":\"2\",light:\"3\",regular:\"4\",book:\"4\",medium:\"5\",\"semi-bold\":\"6\",semibold:\"6\",\"demi-bold\":\"6\",demibold:\"6\",bold:\"7\",\"extra-bold\":\"8\",extrabold:\"8\",\"ultra-bold\":\"8\",ultrabold:\"8\",black:\"9\",heavy:\"9\",l:\"3\",r:\"4\",b:\"7\"},U={i:\"i\",italic:\"i\",n:\"n\",normal:\"n\"},V=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;function X(t,n){this.c=t,this.a=n}var J={Arimo:!0,Cousine:!0,Tinos:!0};function Q(t,n){this.c=t,this.a=n}function Y(t,n){this.c=t,this.f=n,this.a=[]}X.prototype.load=function(t){var n=new p,i=this.c,e=new z(this.a.api,this.a.text),o=this.a.families;!function(t,n){for(var i=n.length,e=0;e<i;e++){var o=n[e].split(\":\");3==o.length&&t.f.push(o.pop());var a=\"\";2==o.length&&\"\"!=o[1]&&(a=\":\"),t.a.push(o.join(a))}}(e,o);var a=new G(o);!function(t){for(var n=t.f.length,i=0;i<n;i++){var e=t.f[i].split(\":\"),o=e[0].replace(/\\+/g,\" \"),a=[\"n4\"];if(2<=e.length){var s;if(s=[],r=e[1])for(var r,f=(r=r.split(\",\")).length,c=0;c<f;c++){var h;if((h=r[c]).match(/^[\\w-]+$/))if(null==(u=V.exec(h.toLowerCase())))h=\"\";else{if(h=null==(h=u[2])||\"\"==h?\"n\":U[h],null==(u=u[1])||\"\"==u)u=\"4\";else var l=R[u],u=l||(isNaN(u)?\"4\":u.substr(0,1));h=[h,u].join(\"\")}else h=\"\";h&&s.push(h)}0<s.length&&(a=s),3==e.length&&(s=[],0<(e=(e=e[2])?e.split(\",\"):s).length&&(e=K[e[0]])&&(t.c[o]=e))}for(t.c[o]||(e=K[o])&&(t.c[o]=e),e=0;e<a.length;e+=1)t.a.push(new y(o,a[e]))}}(a),l(i,function(t){if(0==t.a.length)throw Error(\"No fonts to load!\");if(-1!=t.c.indexOf(\"kit=\"))return t.c;for(var n=t.a.length,i=[],e=0;e<n;e++)i.push(t.a[e].replace(/ /g,\"+\"));return n=t.c+\"?family=\"+i.join(\"%7C\"),0<t.f.length&&(n+=\"&subset=\"+t.f.join(\",\")),0<t.g.length&&(n+=\"&text=\"+encodeURIComponent(t.g)),n}(e),v(n)),w(n,function(){t(a.a,a.c,J)})},Q.prototype.load=function(s){var t=this.a.id,r=this.c.o;t?u(this.c,(this.a.api||\"https://use.typekit.net\")+\"/\"+t+\".js\",function(t){if(t)s([]);else if(r.Typekit&&r.Typekit.config&&r.Typekit.config.fn){t=r.Typekit.config.fn;for(var n=[],i=0;i<t.length;i+=2)for(var e=t[i],o=t[i+1],a=0;a<o.length;a++)n.push(new y(e,o[a]));try{r.Typekit.load({events:!1,classes:!1,async:!0})}catch(t){}s(n)}},2e3):s([])},Y.prototype.load=function(c){var t,n=this.f.id,i=this.c.o,h=this;n?(i.__webfontfontdeckmodule__||(i.__webfontfontdeckmodule__={}),i.__webfontfontdeckmodule__[n]=function(t,n){for(var i=0,e=n.fonts.length;i<e;++i){var o=n.fonts[i];h.a.push(new y(o.name,(a=\"font-weight:\"+o.weight+\";font-style:\"+o.style,f=r=s=void 0,s=4,r=\"n\",f=null,a&&((f=a.match(/(normal|oblique|italic)/i))&&f[1]&&(r=f[1].substr(0,1).toLowerCase()),(f=a.match(/([1-9]00|normal|bold)/i))&&f[1]&&(/bold/i.test(f[1])?s=7:/[1-9]00/.test(f[1])&&(s=parseInt(f[1].substr(0,1),10)))),r+s)))}var a,s,r,f;c(h.a)},u(this.c,(this.f.api||\"https://f.fontdeck.com/s/css/js/\")+((t=this.c).o.location.hostname||t.a.location.hostname)+\"/\"+n+\".js\",function(t){t&&c([])})):c([])};var Z=new t(window);Z.a.c.custom=function(t,n){return new M(n,t)},Z.a.c.fontdeck=function(t,n){return new Y(n,t)},Z.a.c.monotype=function(t,n){return new H(n,t)},Z.a.c.typekit=function(t,n){return new Q(n,t)},Z.a.c.google=function(t,n){return new X(n,t)};var tt={load:d(Z.load,Z)};\"function\"==typeof define&&define.amd?define(function(){return tt}):\"undefined\"!=typeof module&&module.exports?module.exports=tt:(window.WebFont=tt,window.WebFontConfig&&Z.load(window.WebFontConfig))}();"},{"base":"plugins","rel":"litespeed-cache/assets/js/component.cdn.js","ext":"js","size":6488,"mtime":1757312769,"type":"text","content":"/**\n * CDN module\n * @author Hai Zheng\n */\nclass CDNMapping extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlist: props.list,\n\t\t};\n\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.delRow = this.delRow.bind(this);\n\t\tthis.addNew = this.addNew.bind(this);\n\t}\n\n\tonChange(e, index) {\n\t\tconst target = e.currentTarget;\n\t\tconst value = target.dataset.hasOwnProperty('value') ? Boolean(target.dataset.value * 1) : target.value;\n\t\tconst list = this.state.list;\n\t\tlist[index][target.dataset.type] = value;\n\n\t\tthis.setState({\n\t\t\tlist: list,\n\t\t});\n\t}\n\n\tdelRow(index) {\n\t\tconst data = this.state.list;\n\t\tdata.splice(index, 1);\n\t\tthis.setState({ list: data });\n\t}\n\n\taddNew() {\n\t\tconst list = this.state.list;\n\t\tlist.push({ url: '' });\n\t\tthis.setState({ list: list });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.list.map((item, i) => (\n\t\t\t\t\t<CDNMappingBlock item={item} key={i} index={i} onChange={this.onChange} delRow={this.delRow} />\n\t\t\t\t))}\n\n\t\t\t\t<p>\n\t\t\t\t\t<button type=\"button\" className=\"button button-link litespeed-form-action litespeed-link-with-icon\" onClick={this.addNew}>\n\t\t\t\t\t\t<span className=\"dashicons dashicons-plus-alt\"></span>\n\t\t\t\t\t\t{litespeed_data['lang']['add_cdn_mapping_row']}\n\t\t\t\t\t</button>\n\t\t\t\t</p>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\n// { url: '', inc_img: true, inc_css: false, inc_js: false, filetype: [ '.aac', '.eot', ... ] }\nclass CDNMappingBlock extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.onChange = this.onChange.bind(this);\n\t\tthis.delRow = this.delRow.bind(this);\n\t}\n\n\tonChange(e) {\n\t\tthis.props.onChange(e, this.props.index);\n\t}\n\n\tdelRow() {\n\t\tthis.props.delRow(this.props.index);\n\t}\n\n\trender() {\n\t\tconst name_prefix = litespeed_data['ids']['cdn_mapping'];\n\n\t\tconst item = this.props.item;\n\n\t\tconst filetype = item.filetype ? (Array.isArray(item.filetype) ? item.filetype.join('\\n') : item.filetype) : '';\n\t\treturn (\n\t\t\t<div className=\"litespeed-block\">\n\t\t\t\t<div className=\"litespeed-cdn-mapping-col1\">\n\t\t\t\t\t<label className=\"litespeed-form-label\">{litespeed_data['lang']['cdn_mapping_url']}</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname={name_prefix + '[url][]'}\n\t\t\t\t\t\tclassName=\"regular-text litespeed-input-long\"\n\t\t\t\t\t\tvalue={item.url ? item.url : ''}\n\t\t\t\t\t\tdata-type=\"url\"\n\t\t\t\t\t\tonChange={this.onChange}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"litespeed-desc\">\n\t\t\t\t\t\t<span dangerouslySetInnerHTML={{ __html: litespeed_data['lang']['cdn_mapping_url_desc'] }} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"litespeed-col-auto litespeed-cdn-mapping-col2\">\n\t\t\t\t\t<div className=\"litespeed-row litespeed-toggle-wrapper\">\n\t\t\t\t\t\t<div className=\"litespeed-cdn-mapping-inc litespeed-form-label litespeed-form-label--toggle\">{litespeed_data['lang']['cdn_mapping_inc_img']}</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`litespeed-toggle litespeed-toggle-btn litespeed-toggle-btn-${item.inc_img ? 'primary' : 'default litespeed-toggleoff'}`}\n\t\t\t\t\t\t\tdata-type=\"inc_img\"\n\t\t\t\t\t\t\tdata-value={item.inc_img ? 0 : 1}\n\t\t\t\t\t\t\tonClick={this.onChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input name={name_prefix + '[inc_img][]'} type=\"hidden\" value={item.inc_img ? 1 : 0} />\n\t\t\t\t\t\t\t<div className=\"litespeed-toggle-group\">\n\t\t\t\t\t\t\t\t<label className=\"litespeed-toggle-btn litespeed-toggle-btn-primary litespeed-toggle-on\">{litespeed_data['lang']['on']}</label>\n\t\t\t\t\t\t\t\t<label className=\"litespeed-toggle-btn litespeed-toggle-btn-default litespeed-toggle-active litespeed-toggle-off\">\n\t\t\t\t\t\t\t\t\t{litespeed_data['lang']['off']}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<span className=\"litespeed-toggle-handle litespeed-toggle-btn litespeed-toggle-btn-default\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"litespeed-row litespeed-toggle-wrapper\">\n\t\t\t\t\t\t<div className=\"litespeed-cdn-mapping-inc litespeed-form-label litespeed-form-label--toggle\">{litespeed_data['lang']['cdn_mapping_inc_css']}</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`litespeed-toggle litespeed-toggle-btn litespeed-toggle-btn-${item.inc_css ? 'primary' : 'default litespeed-toggleoff'}`}\n\t\t\t\t\t\t\tdata-type=\"inc_css\"\n\t\t\t\t\t\t\tdata-value={item.inc_css ? 0 : 1}\n\t\t\t\t\t\t\tonClick={this.onChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input name={name_prefix + '[inc_css][]'} type=\"hidden\" value={item.inc_css ? 1 : 0} />\n\t\t\t\t\t\t\t<div className=\"litespeed-toggle-group\">\n\t\t\t\t\t\t\t\t<label className=\"litespeed-toggle-btn litespeed-toggle-btn-primary litespeed-toggle-on\">{litespeed_data['lang']['on']}</label>\n\t\t\t\t\t\t\t\t<label className=\"litespeed-toggle-btn litespeed-toggle-btn-default litespeed-toggle-active litespeed-toggle-off\">\n\t\t\t\t\t\t\t\t\t{litespeed_data['lang']['off']}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<span className=\"litespeed-toggle-handle litespeed-toggle-btn litespeed-toggle-btn-default\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"litespeed-row litespeed-toggle-wrapper\">\n\t\t\t\t\t\t<div className=\"litespeed-cdn-mapping-inc litespeed-form-label litespeed-form-label--toggle\">{litespeed_data['lang']['cdn_mapping_inc_js']}</div>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={`litespeed-toggle litespeed-toggle-btn litespeed-toggle-btn-${item.inc_js ? 'primary' : 'default litespeed-toggleoff'}`}\n\t\t\t\t\t\t\tdata-type=\"inc_js\"\n\t\t\t\t\t\t\tdata-value={item.inc_js ? 0 : 1}\n\t\t\t\t\t\t\tonClick={this.onChange}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<input name={name_prefix + '[inc_js][]'} type=\"hidden\" value={item.inc_js ? 1 : 0} />\n\t\t\t\t\t\t\t<div className=\"litespeed-toggle-group\">\n\t\t\t\t\t\t\t\t<label className=\"litespeed-toggle-btn litespeed-toggle-btn-primary litespeed-toggle-on\">{litespeed_data['lang']['on']}</label>\n\t\t\t\t\t\t\t\t<label className=\"litespeed-toggle-btn litespeed-toggle-btn-default litespeed-toggle-active litespeed-toggle-off\">\n\t\t\t\t\t\t\t\t\t{litespeed_data['lang']['off']}\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t<span className=\"litespeed-toggle-handle litespeed-toggle-btn litespeed-toggle-btn-default\"></span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"litespeed-col-auto\">\n\t\t\t\t\t<label className=\"litespeed-form-label\">{litespeed_data['lang']['cdn_mapping_filetype']}</label>\n\t\t\t\t\t<textarea name={name_prefix + '[filetype][]'} rows={filetype.split('\\n').length + 2} cols=\"18\" value={filetype} data-type=\"filetype\" onChange={this.onChange} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"litespeed-col-auto\">\n\t\t\t\t\t<button type=\"button\" className=\"button button-link litespeed-collection-button litespeed-danger\" onClick={this.delRow}>\n\t\t\t\t\t\t<span className=\"dashicons dashicons-dismiss\"></span>\n\t\t\t\t\t\t<span className=\"screen-reader-text\">{litespeed_data['lang']['cdn_mapping_remove']}</span>\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"}]