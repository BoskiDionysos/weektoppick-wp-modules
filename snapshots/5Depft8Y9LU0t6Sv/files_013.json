[{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Base64\/Original.php","ext":"php","size":7784,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\n\/**\n * Class ParagonIE_Sodium_Core_Base64\n *\n *  Copyright (c) 2016 - 2018 Paragon Initiative Enterprises.\n *  Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com)\n *\/\nclass ParagonIE_Sodium_Core_Base64_Original\n{\n    \/\/ COPY ParagonIE_Sodium_Core_Base64_Common STARTING HERE\n    \/**\n     * Encode into Base64\n     *\n     * Base64 character set \"[A-Z][a-z][0-9]+\/\"\n     *\n     * @param string $src\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function encode($src)\n    {\n        return self::doEncode($src, true);\n    }\n\n    \/**\n     * Encode into Base64, no = padding\n     *\n     * Base64 character set \"[A-Z][a-z][0-9]+\/\"\n     *\n     * @param string $src\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function encodeUnpadded($src)\n    {\n        return self::doEncode($src, false);\n    }\n\n    \/**\n     * @param string $src\n     * @param bool $pad   Include = padding?\n     * @return string\n     * @throws TypeError\n     *\/\n    protected static function doEncode($src, $pad = true)\n    {\n        $dest = '';\n        $srcLen = ParagonIE_Sodium_Core_Util::strlen($src);\n        \/\/ Main loop (no padding):\n        for ($i = 0; $i + 3 <= $srcLen; $i += 3) {\n            \/** @var array<int, int> $chunk *\/\n            $chunk = unpack('C*', ParagonIE_Sodium_Core_Util::substr($src, $i, 3));\n            $b0 = $chunk[1];\n            $b1 = $chunk[2];\n            $b2 = $chunk[3];\n\n            $dest .=\n                self::encode6Bits(               $b0 >> 2       ) .\n                self::encode6Bits((($b0 << 4) | ($b1 >> 4)) & 63) .\n                self::encode6Bits((($b1 << 2) | ($b2 >> 6)) & 63) .\n                self::encode6Bits(  $b2                     & 63);\n        }\n        \/\/ The last chunk, which may have padding:\n        if ($i < $srcLen) {\n            \/** @var array<int, int> $chunk *\/\n            $chunk = unpack('C*', ParagonIE_Sodium_Core_Util::substr($src, $i, $srcLen - $i));\n            $b0 = $chunk[1];\n            if ($i + 1 < $srcLen) {\n                $b1 = $chunk[2];\n                $dest .=\n                    self::encode6Bits($b0 >> 2) .\n                    self::encode6Bits((($b0 << 4) | ($b1 >> 4)) & 63) .\n                    self::encode6Bits(($b1 << 2) & 63);\n                if ($pad) {\n                    $dest .= '=';\n                }\n            } else {\n                $dest .=\n                    self::encode6Bits( $b0 >> 2) .\n                    self::encode6Bits(($b0 << 4) & 63);\n                if ($pad) {\n                    $dest .= '==';\n                }\n            }\n        }\n        return $dest;\n    }\n\n    \/**\n     * decode from base64 into binary\n     *\n     * Base64 character set \".\/[A-Z][a-z][0-9]\"\n     *\n     * @param string $src\n     * @param bool $strictPadding\n     * @return string\n     * @throws RangeException\n     * @throws TypeError\n     * @psalm-suppress RedundantCondition\n     *\/\n    public static function decode($src, $strictPadding = false)\n    {\n        \/\/ Remove padding\n        $srcLen = ParagonIE_Sodium_Core_Util::strlen($src);\n        if ($srcLen === 0) {\n            return '';\n        }\n\n        if ($strictPadding) {\n            if (($srcLen & 3) === 0) {\n                if ($src[$srcLen - 1] === '=') {\n                    $srcLen--;\n                    if ($src[$srcLen - 1] === '=') {\n                        $srcLen--;\n                    }\n                }\n            }\n            if (($srcLen & 3) === 1) {\n                throw new RangeException(\n                    'Incorrect padding'\n                );\n            }\n            if ($src[$srcLen - 1] === '=') {\n                throw new RangeException(\n                    'Incorrect padding'\n                );\n            }\n        } else {\n            $src = rtrim($src, '=');\n            $srcLen =  ParagonIE_Sodium_Core_Util::strlen($src);\n        }\n\n        $err = 0;\n        $dest = '';\n        \/\/ Main loop (no padding):\n        for ($i = 0; $i + 4 <= $srcLen; $i += 4) {\n            \/** @var array<int, int> $chunk *\/\n            $chunk = unpack('C*', ParagonIE_Sodium_Core_Util::substr($src, $i, 4));\n            $c0 = self::decode6Bits($chunk[1]);\n            $c1 = self::decode6Bits($chunk[2]);\n            $c2 = self::decode6Bits($chunk[3]);\n            $c3 = self::decode6Bits($chunk[4]);\n\n            $dest .= pack(\n                'CCC',\n                ((($c0 << 2) | ($c1 >> 4)) & 0xff),\n                ((($c1 << 4) | ($c2 >> 2)) & 0xff),\n                ((($c2 << 6) | $c3) & 0xff)\n            );\n            $err |= ($c0 | $c1 | $c2 | $c3) >> 8;\n        }\n        \/\/ The last chunk, which may have padding:\n        if ($i < $srcLen) {\n            \/** @var array<int, int> $chunk *\/\n            $chunk = unpack('C*', ParagonIE_Sodium_Core_Util::substr($src, $i, $srcLen - $i));\n            $c0 = self::decode6Bits($chunk[1]);\n\n            if ($i + 2 < $srcLen) {\n                $c1 = self::decode6Bits($chunk[2]);\n                $c2 = self::decode6Bits($chunk[3]);\n                $dest .= pack(\n                    'CC',\n                    ((($c0 << 2) | ($c1 >> 4)) & 0xff),\n                    ((($c1 << 4) | ($c2 >> 2)) & 0xff)\n                );\n                $err |= ($c0 | $c1 | $c2) >> 8;\n            } elseif ($i + 1 < $srcLen) {\n                $c1 = self::decode6Bits($chunk[2]);\n                $dest .= pack(\n                    'C',\n                    ((($c0 << 2) | ($c1 >> 4)) & 0xff)\n                );\n                $err |= ($c0 | $c1) >> 8;\n            } elseif ($i < $srcLen && $strictPadding) {\n                $err |= 1;\n            }\n        }\n        \/** @var bool $check *\/\n        $check = ($err === 0);\n        if (!$check) {\n            throw new RangeException(\n                'Base64::decode() only expects characters in the correct base64 alphabet'\n            );\n        }\n        return $dest;\n    }\n    \/\/ COPY ParagonIE_Sodium_Core_Base64_Common ENDING HERE\n\n    \/**\n     * Uses bitwise operators instead of table-lookups to turn 6-bit integers\n     * into 8-bit integers.\n     *\n     * Base64 character set:\n     * [A-Z]      [a-z]      [0-9]      +     \/\n     * 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f\n     *\n     * @param int $src\n     * @return int\n     *\/\n    protected static function decode6Bits($src)\n    {\n        $ret = -1;\n\n        \/\/ if ($src > 0x40 && $src < 0x5b) $ret += $src - 0x41 + 1; \/\/ -64\n        $ret += (((0x40 - $src) & ($src - 0x5b)) >> 8) & ($src - 64);\n\n        \/\/ if ($src > 0x60 && $src < 0x7b) $ret += $src - 0x61 + 26 + 1; \/\/ -70\n        $ret += (((0x60 - $src) & ($src - 0x7b)) >> 8) & ($src - 70);\n\n        \/\/ if ($src > 0x2f && $src < 0x3a) $ret += $src - 0x30 + 52 + 1; \/\/ 5\n        $ret += (((0x2f - $src) & ($src - 0x3a)) >> 8) & ($src + 5);\n\n        \/\/ if ($src == 0x2b) $ret += 62 + 1;\n        $ret += (((0x2a - $src) & ($src - 0x2c)) >> 8) & 63;\n\n        \/\/ if ($src == 0x2f) ret += 63 + 1;\n        $ret += (((0x2e - $src) & ($src - 0x30)) >> 8) & 64;\n\n        return $ret;\n    }\n\n    \/**\n     * Uses bitwise operators instead of table-lookups to turn 8-bit integers\n     * into 6-bit integers.\n     *\n     * @param int $src\n     * @return string\n     *\/\n    protected static function encode6Bits($src)\n    {\n        $diff = 0x41;\n\n        \/\/ if ($src > 25) $diff += 0x61 - 0x41 - 26; \/\/ 6\n        $diff += ((25 - $src) >> 8) & 6;\n\n        \/\/ if ($src > 51) $diff += 0x30 - 0x61 - 26; \/\/ -75\n        $diff -= ((51 - $src) >> 8) & 75;\n\n        \/\/ if ($src > 61) $diff += 0x2b - 0x30 - 10; \/\/ -15\n        $diff -= ((61 - $src) >> 8) & 15;\n\n        \/\/ if ($src > 62) $diff += 0x2f - 0x2b - 1; \/\/ 3\n        $diff += ((62 - $src) >> 8) & 3;\n\n        return pack('C', $src + $diff);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/ChaCha20.php","ext":"php","size":12993,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_ChaCha20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_ChaCha20\n *\/\nclass ParagonIE_Sodium_Core_ChaCha20 extends ParagonIE_Sodium_Core_Util\n{\n    \/**\n     * Bitwise left rotation\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param int $v\n     * @param int $n\n     * @return int\n     *\/\n    public static function rotate($v, $n)\n    {\n        $v &= 0xffffffff;\n        $n &= 31;\n        return (int) (\n            0xffffffff & (\n                ($v << $n)\n                    |\n                ($v >> (32 - $n))\n            )\n        );\n    }\n\n    \/**\n     * The ChaCha20 quarter round function. Works on four 32-bit integers.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param int $a\n     * @param int $b\n     * @param int $c\n     * @param int $d\n     * @return array<int, int>\n     *\/\n    protected static function quarterRound($a, $b, $c, $d)\n    {\n        # a = PLUS(a,b); d = ROTATE(XOR(d,a),16);\n        \/** @var int $a *\/\n        $a = ($a + $b) & 0xffffffff;\n        $d = self::rotate($d ^ $a, 16);\n\n        # c = PLUS(c,d); b = ROTATE(XOR(b,c),12);\n        \/** @var int $c *\/\n        $c = ($c + $d) & 0xffffffff;\n        $b = self::rotate($b ^ $c, 12);\n\n        # a = PLUS(a,b); d = ROTATE(XOR(d,a), 8);\n        \/** @var int $a *\/\n        $a = ($a + $b) & 0xffffffff;\n        $d = self::rotate($d ^ $a, 8);\n\n        # c = PLUS(c,d); b = ROTATE(XOR(b,c), 7);\n        \/** @var int $c *\/\n        $c = ($c + $d) & 0xffffffff;\n        $b = self::rotate($b ^ $c, 7);\n        return array((int) $a, (int) $b, (int) $c, (int) $d);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core_ChaCha20_Ctx $ctx\n     * @param string $message\n     *\n     * @return string\n     * @throws TypeError\n     * @throws SodiumException\n     *\/\n    public static function encryptBytes(\n        ParagonIE_Sodium_Core_ChaCha20_Ctx $ctx,\n        $message = ''\n    ) {\n        $bytes = self::strlen($message);\n\n        \/*\n        j0 = ctx->input[0];\n        j1 = ctx->input[1];\n        j2 = ctx->input[2];\n        j3 = ctx->input[3];\n        j4 = ctx->input[4];\n        j5 = ctx->input[5];\n        j6 = ctx->input[6];\n        j7 = ctx->input[7];\n        j8 = ctx->input[8];\n        j9 = ctx->input[9];\n        j10 = ctx->input[10];\n        j11 = ctx->input[11];\n        j12 = ctx->input[12];\n        j13 = ctx->input[13];\n        j14 = ctx->input[14];\n        j15 = ctx->input[15];\n        *\/\n        $j0  = (int) $ctx[0];\n        $j1  = (int) $ctx[1];\n        $j2  = (int) $ctx[2];\n        $j3  = (int) $ctx[3];\n        $j4  = (int) $ctx[4];\n        $j5  = (int) $ctx[5];\n        $j6  = (int) $ctx[6];\n        $j7  = (int) $ctx[7];\n        $j8  = (int) $ctx[8];\n        $j9  = (int) $ctx[9];\n        $j10 = (int) $ctx[10];\n        $j11 = (int) $ctx[11];\n        $j12 = (int) $ctx[12];\n        $j13 = (int) $ctx[13];\n        $j14 = (int) $ctx[14];\n        $j15 = (int) $ctx[15];\n\n        $c = '';\n        for (;;) {\n            if ($bytes < 64) {\n                $message .= str_repeat(\"\\x00\", 64 - $bytes);\n            }\n\n            $x0 =  (int) $j0;\n            $x1 =  (int) $j1;\n            $x2 =  (int) $j2;\n            $x3 =  (int) $j3;\n            $x4 =  (int) $j4;\n            $x5 =  (int) $j5;\n            $x6 =  (int) $j6;\n            $x7 =  (int) $j7;\n            $x8 =  (int) $j8;\n            $x9 =  (int) $j9;\n            $x10 = (int) $j10;\n            $x11 = (int) $j11;\n            $x12 = (int) $j12;\n            $x13 = (int) $j13;\n            $x14 = (int) $j14;\n            $x15 = (int) $j15;\n\n            # for (i = 20; i > 0; i -= 2) {\n            for ($i = 20; $i > 0; $i -= 2) {\n                # QUARTERROUND( x0,  x4,  x8,  x12)\n                list($x0, $x4, $x8, $x12) = self::quarterRound($x0, $x4, $x8, $x12);\n\n                # QUARTERROUND( x1,  x5,  x9,  x13)\n                list($x1, $x5, $x9, $x13) = self::quarterRound($x1, $x5, $x9, $x13);\n\n                # QUARTERROUND( x2,  x6,  x10,  x14)\n                list($x2, $x6, $x10, $x14) = self::quarterRound($x2, $x6, $x10, $x14);\n\n                # QUARTERROUND( x3,  x7,  x11,  x15)\n                list($x3, $x7, $x11, $x15) = self::quarterRound($x3, $x7, $x11, $x15);\n\n                # QUARTERROUND( x0,  x5,  x10,  x15)\n                list($x0, $x5, $x10, $x15) = self::quarterRound($x0, $x5, $x10, $x15);\n\n                # QUARTERROUND( x1,  x6,  x11,  x12)\n                list($x1, $x6, $x11, $x12) = self::quarterRound($x1, $x6, $x11, $x12);\n\n                # QUARTERROUND( x2,  x7,  x8,  x13)\n                list($x2, $x7, $x8, $x13) = self::quarterRound($x2, $x7, $x8, $x13);\n\n                # QUARTERROUND( x3,  x4,  x9,  x14)\n                list($x3, $x4, $x9, $x14) = self::quarterRound($x3, $x4, $x9, $x14);\n            }\n            \/*\n            x0 = PLUS(x0, j0);\n            x1 = PLUS(x1, j1);\n            x2 = PLUS(x2, j2);\n            x3 = PLUS(x3, j3);\n            x4 = PLUS(x4, j4);\n            x5 = PLUS(x5, j5);\n            x6 = PLUS(x6, j6);\n            x7 = PLUS(x7, j7);\n            x8 = PLUS(x8, j8);\n            x9 = PLUS(x9, j9);\n            x10 = PLUS(x10, j10);\n            x11 = PLUS(x11, j11);\n            x12 = PLUS(x12, j12);\n            x13 = PLUS(x13, j13);\n            x14 = PLUS(x14, j14);\n            x15 = PLUS(x15, j15);\n            *\/\n            \/** @var int $x0 *\/\n            $x0  = ($x0 & 0xffffffff) + $j0;\n            \/** @var int $x1 *\/\n            $x1  = ($x1 & 0xffffffff) + $j1;\n            \/** @var int $x2 *\/\n            $x2  = ($x2 & 0xffffffff) + $j2;\n            \/** @var int $x3 *\/\n            $x3  = ($x3 & 0xffffffff) + $j3;\n            \/** @var int $x4 *\/\n            $x4  = ($x4 & 0xffffffff) + $j4;\n            \/** @var int $x5 *\/\n            $x5  = ($x5 & 0xffffffff) + $j5;\n            \/** @var int $x6 *\/\n            $x6  = ($x6 & 0xffffffff) + $j6;\n            \/** @var int $x7 *\/\n            $x7  = ($x7 & 0xffffffff) + $j7;\n            \/** @var int $x8 *\/\n            $x8  = ($x8 & 0xffffffff) + $j8;\n            \/** @var int $x9 *\/\n            $x9  = ($x9 & 0xffffffff) + $j9;\n            \/** @var int $x10 *\/\n            $x10 = ($x10 & 0xffffffff) + $j10;\n            \/** @var int $x11 *\/\n            $x11 = ($x11 & 0xffffffff) + $j11;\n            \/** @var int $x12 *\/\n            $x12 = ($x12 & 0xffffffff) + $j12;\n            \/** @var int $x13 *\/\n            $x13 = ($x13 & 0xffffffff) + $j13;\n            \/** @var int $x14 *\/\n            $x14 = ($x14 & 0xffffffff) + $j14;\n            \/** @var int $x15 *\/\n            $x15 = ($x15 & 0xffffffff) + $j15;\n\n            \/*\n            x0 = XOR(x0, LOAD32_LE(m + 0));\n            x1 = XOR(x1, LOAD32_LE(m + 4));\n            x2 = XOR(x2, LOAD32_LE(m + 8));\n            x3 = XOR(x3, LOAD32_LE(m + 12));\n            x4 = XOR(x4, LOAD32_LE(m + 16));\n            x5 = XOR(x5, LOAD32_LE(m + 20));\n            x6 = XOR(x6, LOAD32_LE(m + 24));\n            x7 = XOR(x7, LOAD32_LE(m + 28));\n            x8 = XOR(x8, LOAD32_LE(m + 32));\n            x9 = XOR(x9, LOAD32_LE(m + 36));\n            x10 = XOR(x10, LOAD32_LE(m + 40));\n            x11 = XOR(x11, LOAD32_LE(m + 44));\n            x12 = XOR(x12, LOAD32_LE(m + 48));\n            x13 = XOR(x13, LOAD32_LE(m + 52));\n            x14 = XOR(x14, LOAD32_LE(m + 56));\n            x15 = XOR(x15, LOAD32_LE(m + 60));\n            *\/\n            $x0  ^= self::load_4(self::substr($message, 0, 4));\n            $x1  ^= self::load_4(self::substr($message, 4, 4));\n            $x2  ^= self::load_4(self::substr($message, 8, 4));\n            $x3  ^= self::load_4(self::substr($message, 12, 4));\n            $x4  ^= self::load_4(self::substr($message, 16, 4));\n            $x5  ^= self::load_4(self::substr($message, 20, 4));\n            $x6  ^= self::load_4(self::substr($message, 24, 4));\n            $x7  ^= self::load_4(self::substr($message, 28, 4));\n            $x8  ^= self::load_4(self::substr($message, 32, 4));\n            $x9  ^= self::load_4(self::substr($message, 36, 4));\n            $x10 ^= self::load_4(self::substr($message, 40, 4));\n            $x11 ^= self::load_4(self::substr($message, 44, 4));\n            $x12 ^= self::load_4(self::substr($message, 48, 4));\n            $x13 ^= self::load_4(self::substr($message, 52, 4));\n            $x14 ^= self::load_4(self::substr($message, 56, 4));\n            $x15 ^= self::load_4(self::substr($message, 60, 4));\n\n            \/*\n                j12 = PLUSONE(j12);\n                if (!j12) {\n                    j13 = PLUSONE(j13);\n                }\n             *\/\n            ++$j12;\n            if ($j12 & 0xf0000000) {\n                throw new SodiumException('Overflow');\n            }\n\n            \/*\n            STORE32_LE(c + 0, x0);\n            STORE32_LE(c + 4, x1);\n            STORE32_LE(c + 8, x2);\n            STORE32_LE(c + 12, x3);\n            STORE32_LE(c + 16, x4);\n            STORE32_LE(c + 20, x5);\n            STORE32_LE(c + 24, x6);\n            STORE32_LE(c + 28, x7);\n            STORE32_LE(c + 32, x8);\n            STORE32_LE(c + 36, x9);\n            STORE32_LE(c + 40, x10);\n            STORE32_LE(c + 44, x11);\n            STORE32_LE(c + 48, x12);\n            STORE32_LE(c + 52, x13);\n            STORE32_LE(c + 56, x14);\n            STORE32_LE(c + 60, x15);\n            *\/\n            $block = self::store32_le((int) ($x0  & 0xffffffff)) .\n                 self::store32_le((int) ($x1  & 0xffffffff)) .\n                 self::store32_le((int) ($x2  & 0xffffffff)) .\n                 self::store32_le((int) ($x3  & 0xffffffff)) .\n                 self::store32_le((int) ($x4  & 0xffffffff)) .\n                 self::store32_le((int) ($x5  & 0xffffffff)) .\n                 self::store32_le((int) ($x6  & 0xffffffff)) .\n                 self::store32_le((int) ($x7  & 0xffffffff)) .\n                 self::store32_le((int) ($x8  & 0xffffffff)) .\n                 self::store32_le((int) ($x9  & 0xffffffff)) .\n                 self::store32_le((int) ($x10 & 0xffffffff)) .\n                 self::store32_le((int) ($x11 & 0xffffffff)) .\n                 self::store32_le((int) ($x12 & 0xffffffff)) .\n                 self::store32_le((int) ($x13 & 0xffffffff)) .\n                 self::store32_le((int) ($x14 & 0xffffffff)) .\n                 self::store32_le((int) ($x15 & 0xffffffff));\n\n            \/* Partial block *\/\n            if ($bytes < 64) {\n                $c .= self::substr($block, 0, $bytes);\n                break;\n            }\n\n            \/* Full block *\/\n            $c .= $block;\n            $bytes -= 64;\n            if ($bytes <= 0) {\n                break;\n            }\n            $message = self::substr($message, 64);\n        }\n        \/* end for(;;) loop *\/\n\n        $ctx[12] = $j12;\n        $ctx[13] = $j13;\n        return $c;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $len\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function stream($len = 64, $nonce = '', $key = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core_ChaCha20_Ctx($key, $nonce),\n            str_repeat(\"\\x00\", $len)\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $len\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ietfStream($len, $nonce = '', $key = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core_ChaCha20_IetfCtx($key, $nonce),\n            str_repeat(\"\\x00\", $len)\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @param string $ic\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ietfStreamXorIc($message, $nonce = '', $key = '', $ic = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core_ChaCha20_IetfCtx($key, $nonce, $ic),\n            $message\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @param string $ic\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function streamXorIc($message, $nonce = '', $key = '', $ic = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core_ChaCha20_Ctx($key, $nonce, $ic),\n            $message\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/SipHash.php","ext":"php","size":8292,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_SipHash', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_SodiumCompat_Core_SipHash\n *\n * Only uses 32-bit arithmetic, while the original SipHash used 64-bit integers\n *\/\nclass ParagonIE_Sodium_Core_SipHash extends ParagonIE_Sodium_Core_Util\n{\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int[] $v\n     * @return int[]\n     *\n     *\/\n    public static function sipRound(array $v)\n    {\n        # v0 += v1;\n        list($v[0], $v[1]) = self::add(\n            array($v[0], $v[1]),\n            array($v[2], $v[3])\n        );\n\n        #  v1=ROTL(v1,13);\n        list($v[2], $v[3]) = self::rotl_64((int) $v[2], (int) $v[3], 13);\n\n        #  v1 ^= v0;\n        $v[2] = (int) $v[2] ^ (int) $v[0];\n        $v[3] = (int) $v[3] ^ (int) $v[1];\n\n        #  v0=ROTL(v0,32);\n        list($v[0], $v[1]) = self::rotl_64((int) $v[0], (int) $v[1], 32);\n\n        # v2 += v3;\n        list($v[4], $v[5]) = self::add(\n            array((int) $v[4], (int) $v[5]),\n            array((int) $v[6], (int) $v[7])\n        );\n\n        # v3=ROTL(v3,16);\n        list($v[6], $v[7]) = self::rotl_64((int) $v[6], (int) $v[7], 16);\n\n        #  v3 ^= v2;\n        $v[6] = (int) $v[6] ^ (int) $v[4];\n        $v[7] = (int) $v[7] ^ (int) $v[5];\n\n        # v0 += v3;\n        list($v[0], $v[1]) = self::add(\n            array((int) $v[0], (int) $v[1]),\n            array((int) $v[6], (int) $v[7])\n        );\n\n        # v3=ROTL(v3,21);\n        list($v[6], $v[7]) = self::rotl_64((int) $v[6], (int) $v[7], 21);\n\n        # v3 ^= v0;\n        $v[6] = (int) $v[6] ^ (int) $v[0];\n        $v[7] = (int) $v[7] ^ (int) $v[1];\n\n        # v2 += v1;\n        list($v[4], $v[5]) = self::add(\n            array((int) $v[4], (int) $v[5]),\n            array((int) $v[2], (int) $v[3])\n        );\n\n        # v1=ROTL(v1,17);\n        list($v[2], $v[3]) = self::rotl_64((int) $v[2], (int) $v[3], 17);\n\n        #  v1 ^= v2;;\n        $v[2] = (int) $v[2] ^ (int) $v[4];\n        $v[3] = (int) $v[3] ^ (int) $v[5];\n\n        # v2=ROTL(v2,32)\n        list($v[4], $v[5]) = self::rotl_64((int) $v[4], (int) $v[5], 32);\n\n        return $v;\n    }\n\n    \/**\n     * Add two 32 bit integers representing a 64-bit integer.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param int[] $a\n     * @param int[] $b\n     * @return array<int, mixed>\n     *\/\n    public static function add(array $a, array $b)\n    {\n        \/** @var int $x1 *\/\n        $x1 = $a[1] + $b[1];\n        \/** @var int $c *\/\n        $c = $x1 >> 32; \/\/ Carry if ($a + $b) > 0xffffffff\n        \/** @var int $x0 *\/\n        $x0 = $a[0] + $b[0] + $c;\n        return array(\n            $x0 & 0xffffffff,\n            $x1 & 0xffffffff\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $int0\n     * @param int $int1\n     * @param int $c\n     * @return array<int, mixed>\n     *\/\n    public static function rotl_64($int0, $int1, $c)\n    {\n        $int0 &= 0xffffffff;\n        $int1 &= 0xffffffff;\n        $c &= 63;\n        if ($c === 32) {\n            return array($int1, $int0);\n        }\n        if ($c > 31) {\n            $tmp = $int1;\n            $int1 = $int0;\n            $int0 = $tmp;\n            $c &= 31;\n        }\n        if ($c === 0) {\n            return array($int0, $int1);\n        }\n        return array(\n            0xffffffff & (\n                ($int0 << $c)\n                    |\n                ($int1 >> (32 - $c))\n            ),\n            0xffffffff & (\n                ($int1 << $c)\n                    |\n                ($int0 >> (32 - $c))\n            ),\n        );\n    }\n\n    \/**\n     * Implements Siphash-2-4 using only 32-bit numbers.\n     *\n     * When we split an int into two, the higher bits go to the lower index.\n     * e.g. 0xDEADBEEFAB10C92D becomes [\n     *     0 => 0xDEADBEEF,\n     *     1 => 0xAB10C92D\n     * ].\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $in\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sipHash24($in, $key)\n    {\n        $inlen = self::strlen($in);\n\n        # \/* \"somepseudorandomlygeneratedbytes\" *\/\n        # u64 v0 = 0x736f6d6570736575ULL;\n        # u64 v1 = 0x646f72616e646f6dULL;\n        # u64 v2 = 0x6c7967656e657261ULL;\n        # u64 v3 = 0x7465646279746573ULL;\n        $v = array(\n            0x736f6d65, \/\/ 0\n            0x70736575, \/\/ 1\n            0x646f7261, \/\/ 2\n            0x6e646f6d, \/\/ 3\n            0x6c796765, \/\/ 4\n            0x6e657261, \/\/ 5\n            0x74656462, \/\/ 6\n            0x79746573  \/\/ 7\n        );\n        \/\/ v0 => $v[0], $v[1]\n        \/\/ v1 => $v[2], $v[3]\n        \/\/ v2 => $v[4], $v[5]\n        \/\/ v3 => $v[6], $v[7]\n\n        # u64 k0 = LOAD64_LE( k );\n        # u64 k1 = LOAD64_LE( k + 8 );\n        $k = array(\n            self::load_4(self::substr($key, 4, 4)),\n            self::load_4(self::substr($key, 0, 4)),\n            self::load_4(self::substr($key, 12, 4)),\n            self::load_4(self::substr($key, 8, 4))\n        );\n        \/\/ k0 => $k[0], $k[1]\n        \/\/ k1 => $k[2], $k[3]\n\n        # b = ( ( u64 )inlen ) << 56;\n        $b = array(\n            $inlen << 24,\n            0\n        );\n        \/\/ See docblock for why the 0th index gets the higher bits.\n\n        # v3 ^= k1;\n        $v[6] ^= $k[2];\n        $v[7] ^= $k[3];\n        # v2 ^= k0;\n        $v[4] ^= $k[0];\n        $v[5] ^= $k[1];\n        # v1 ^= k1;\n        $v[2] ^= $k[2];\n        $v[3] ^= $k[3];\n        # v0 ^= k0;\n        $v[0] ^= $k[0];\n        $v[1] ^= $k[1];\n\n        $left = $inlen;\n        # for ( ; in != end; in += 8 )\n        while ($left >= 8) {\n            # m = LOAD64_LE( in );\n            $m = array(\n                self::load_4(self::substr($in, 4, 4)),\n                self::load_4(self::substr($in, 0, 4))\n            );\n\n            # v3 ^= m;\n            $v[6] ^= $m[0];\n            $v[7] ^= $m[1];\n\n            # SIPROUND;\n            # SIPROUND;\n            $v = self::sipRound($v);\n            $v = self::sipRound($v);\n\n            # v0 ^= m;\n            $v[0] ^= $m[0];\n            $v[1] ^= $m[1];\n\n            $in = self::substr($in, 8);\n            $left -= 8;\n        }\n\n        # switch( left )\n        #  {\n        #     case 7: b |= ( ( u64 )in[ 6] )  << 48;\n        #     case 6: b |= ( ( u64 )in[ 5] )  << 40;\n        #     case 5: b |= ( ( u64 )in[ 4] )  << 32;\n        #     case 4: b |= ( ( u64 )in[ 3] )  << 24;\n        #     case 3: b |= ( ( u64 )in[ 2] )  << 16;\n        #     case 2: b |= ( ( u64 )in[ 1] )  <<  8;\n        #     case 1: b |= ( ( u64 )in[ 0] ); break;\n        #     case 0: break;\n        # }\n        switch ($left) {\n            case 7:\n                $b[0] |= self::chrToInt($in[6]) << 16;\n            case 6:\n                $b[0] |= self::chrToInt($in[5]) << 8;\n            case 5:\n                $b[0] |= self::chrToInt($in[4]);\n            case 4:\n                $b[1] |= self::chrToInt($in[3]) << 24;\n            case 3:\n                $b[1] |= self::chrToInt($in[2]) << 16;\n            case 2:\n                $b[1] |= self::chrToInt($in[1]) << 8;\n            case 1:\n                $b[1] |= self::chrToInt($in[0]);\n            case 0:\n                break;\n        }\n        \/\/ See docblock for why the 0th index gets the higher bits.\n\n        # v3 ^= b;\n        $v[6] ^= $b[0];\n        $v[7] ^= $b[1];\n\n        # SIPROUND;\n        # SIPROUND;\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n\n        # v0 ^= b;\n        $v[0] ^= $b[0];\n        $v[1] ^= $b[1];\n\n        \/\/ Flip the lower 8 bits of v2 which is ($v[4], $v[5]) in our implementation\n        # v2 ^= 0xff;\n        $v[5] ^= 0xff;\n\n        # SIPROUND;\n        # SIPROUND;\n        # SIPROUND;\n        # SIPROUND;\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n\n        # b = v0 ^ v1 ^ v2 ^ v3;\n        # STORE64_LE( out, b );\n        return  self::store32_le($v[1] ^ $v[3] ^ $v[5] ^ $v[7]) .\n            self::store32_le($v[0] ^ $v[2] ^ $v[4] ^ $v[6]);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/HChaCha20.php","ext":"php","size":3930,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_HChaCha20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_HChaCha20\n *\/\nclass ParagonIE_Sodium_Core_HChaCha20 extends ParagonIE_Sodium_Core_ChaCha20\n{\n    \/**\n     * @param string $in\n     * @param string $key\n     * @param string|null $c\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function hChaCha20($in = '', $key = '', $c = null)\n    {\n        $ctx = array();\n\n        if ($c === null) {\n            $ctx[0] = 0x61707865;\n            $ctx[1] = 0x3320646e;\n            $ctx[2] = 0x79622d32;\n            $ctx[3] = 0x6b206574;\n        } else {\n            $ctx[0] = self::load_4(self::substr($c,  0, 4));\n            $ctx[1] = self::load_4(self::substr($c,  4, 4));\n            $ctx[2] = self::load_4(self::substr($c,  8, 4));\n            $ctx[3] = self::load_4(self::substr($c, 12, 4));\n        }\n        $ctx[4]  = self::load_4(self::substr($key,  0, 4));\n        $ctx[5]  = self::load_4(self::substr($key,  4, 4));\n        $ctx[6]  = self::load_4(self::substr($key,  8, 4));\n        $ctx[7]  = self::load_4(self::substr($key, 12, 4));\n        $ctx[8]  = self::load_4(self::substr($key, 16, 4));\n        $ctx[9]  = self::load_4(self::substr($key, 20, 4));\n        $ctx[10] = self::load_4(self::substr($key, 24, 4));\n        $ctx[11] = self::load_4(self::substr($key, 28, 4));\n        $ctx[12] = self::load_4(self::substr($in,   0, 4));\n        $ctx[13] = self::load_4(self::substr($in,   4, 4));\n        $ctx[14] = self::load_4(self::substr($in,   8, 4));\n        $ctx[15] = self::load_4(self::substr($in,  12, 4));\n        return self::hChaCha20Bytes($ctx);\n    }\n\n    \/**\n     * @param array $ctx\n     * @return string\n     * @throws TypeError\n     *\/\n    protected static function hChaCha20Bytes(array $ctx)\n    {\n        $x0  = (int) $ctx[0];\n        $x1  = (int) $ctx[1];\n        $x2  = (int) $ctx[2];\n        $x3  = (int) $ctx[3];\n        $x4  = (int) $ctx[4];\n        $x5  = (int) $ctx[5];\n        $x6  = (int) $ctx[6];\n        $x7  = (int) $ctx[7];\n        $x8  = (int) $ctx[8];\n        $x9  = (int) $ctx[9];\n        $x10 = (int) $ctx[10];\n        $x11 = (int) $ctx[11];\n        $x12 = (int) $ctx[12];\n        $x13 = (int) $ctx[13];\n        $x14 = (int) $ctx[14];\n        $x15 = (int) $ctx[15];\n\n        for ($i = 0; $i < 10; ++$i) {\n            # QUARTERROUND( x0,  x4,  x8,  x12)\n            list($x0, $x4, $x8, $x12) = self::quarterRound($x0, $x4, $x8, $x12);\n\n            # QUARTERROUND( x1,  x5,  x9,  x13)\n            list($x1, $x5, $x9, $x13) = self::quarterRound($x1, $x5, $x9, $x13);\n\n            # QUARTERROUND( x2,  x6,  x10,  x14)\n            list($x2, $x6, $x10, $x14) = self::quarterRound($x2, $x6, $x10, $x14);\n\n            # QUARTERROUND( x3,  x7,  x11,  x15)\n            list($x3, $x7, $x11, $x15) = self::quarterRound($x3, $x7, $x11, $x15);\n\n            # QUARTERROUND( x0,  x5,  x10,  x15)\n            list($x0, $x5, $x10, $x15) = self::quarterRound($x0, $x5, $x10, $x15);\n\n            # QUARTERROUND( x1,  x6,  x11,  x12)\n            list($x1, $x6, $x11, $x12) = self::quarterRound($x1, $x6, $x11, $x12);\n\n            # QUARTERROUND( x2,  x7,  x8,  x13)\n            list($x2, $x7, $x8, $x13) = self::quarterRound($x2, $x7, $x8, $x13);\n\n            # QUARTERROUND( x3,  x4,  x9,  x14)\n            list($x3, $x4, $x9, $x14) = self::quarterRound($x3, $x4, $x9, $x14);\n        }\n\n        return self::store32_le((int) ($x0  & 0xffffffff)) .\n            self::store32_le((int) ($x1  & 0xffffffff)) .\n            self::store32_le((int) ($x2  & 0xffffffff)) .\n            self::store32_le((int) ($x3  & 0xffffffff)) .\n            self::store32_le((int) ($x12 & 0xffffffff)) .\n            self::store32_le((int) ($x13 & 0xffffffff)) .\n            self::store32_le((int) ($x14 & 0xffffffff)) .\n            self::store32_le((int) ($x15 & 0xffffffff));\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Poly1305.php","ext":"php","size":1633,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_Poly1305', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_Poly1305\n *\/\nabstract class ParagonIE_Sodium_Core_Poly1305 extends ParagonIE_Sodium_Core_Util\n{\n    const BLOCK_SIZE = 16;\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $m\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function onetimeauth($m, $key)\n    {\n        if (self::strlen($key) < 32) {\n            throw new InvalidArgumentException(\n                'Key must be 32 bytes long.'\n            );\n        }\n        $state = new ParagonIE_Sodium_Core_Poly1305_State(\n            self::substr($key, 0, 32)\n        );\n        return $state\n            ->update($m)\n            ->finish();\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $mac\n     * @param string $m\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function onetimeauth_verify($mac, $m, $key)\n    {\n        if (self::strlen($key) < 32) {\n            throw new InvalidArgumentException(\n                'Key must be 32 bytes long.'\n            );\n        }\n        $state = new ParagonIE_Sodium_Core_Poly1305_State(\n            self::substr($key, 0, 32)\n        );\n        $calc = $state\n            ->update($m)\n            ->finish();\n        return self::verify_16($calc, $mac);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Curve25519\/Fe.php","ext":"php","size":3148,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_Curve25519_Fe', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_Curve25519_Fe\n *\n * This represents a Field Element\n *\/\nclass ParagonIE_Sodium_Core_Curve25519_Fe implements ArrayAccess\n{\n    \/**\n     * @var array<int, int>\n     *\/\n    protected $container = array();\n\n    \/**\n     * @var int\n     *\/\n    protected $size = 10;\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param array<int, int> $array\n     * @param bool $save_indexes\n     * @return self\n     *\/\n    public static function fromArray($array, $save_indexes = null)\n    {\n        $count = count($array);\n        if ($save_indexes) {\n            $keys = array_keys($array);\n        } else {\n            $keys = range(0, $count - 1);\n        }\n        $array = array_values($array);\n        \/** @var array<int, int> $keys *\/\n\n        $obj = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        if ($save_indexes) {\n            for ($i = 0; $i < $count; ++$i) {\n                $obj->offsetSet($keys[$i], $array[$i]);\n            }\n        } else {\n            for ($i = 0; $i < $count; ++$i) {\n                $obj->offsetSet($i, $array[$i]);\n            }\n        }\n        return $obj;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int|null $offset\n     * @param int $value\n     * @return void\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetSet($offset, $value)\n    {\n        if (!is_int($value)) {\n            throw new InvalidArgumentException('Expected an integer');\n        }\n        if (is_null($offset)) {\n            $this->container[] = $value;\n        } else {\n            $this->container[$offset] = $value;\n        }\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return bool\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetExists($offset)\n    {\n        return isset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return void\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetUnset($offset)\n    {\n        unset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return int\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetGet($offset)\n    {\n        if (!isset($this->container[$offset])) {\n            $this->container[$offset] = 0;\n        }\n        return (int) ($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @return array\n     *\/\n    public function __debugInfo()\n    {\n        return array(implode(', ', $this->container));\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Curve25519\/H.php","ext":"php","size":110516,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_Curve25519_H', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_Curve25519_H\n *\n * This just contains the constants in the ref10\/base.h file\n *\/\nclass ParagonIE_Sodium_Core_Curve25519_H extends ParagonIE_Sodium_Core_Util\n{\n    \/**\n     * See: libsodium's crypto_core\/curve25519\/ref10\/base.h\n     *\n     * @var array<int, array<int, array<int, array<int, int>>>> Basically, int[32][8][3][10]\n     *\/\n    protected static $base = array(\n        array(\n            array(\n                array(25967493, -14356035, 29566456, 3660896, -12694345, 4014787, 27544626, -11754271, -6079156, 2047605),\n                array(-12545711, 934262, -2722910, 3049990, -727428, 9406986, 12720692, 5043384, 19500929, -15469378),\n                array(-8738181, 4489570, 9688441, -14785194, 10184609, -12363380, 29287919, 11864899, -24514362, -4438546),\n            ),\n            array(\n                array(-12815894, -12976347, -21581243, 11784320, -25355658, -2750717, -11717903, -3814571, -358445, -10211303),\n                array(-21703237, 6903825, 27185491, 6451973, -29577724, -9554005, -15616551, 11189268, -26829678, -5319081),\n                array(26966642, 11152617, 32442495, 15396054, 14353839, -12752335, -3128826, -9541118, -15472047, -4166697),\n            ),\n            array(\n                array(15636291, -9688557, 24204773, -7912398, 616977, -16685262, 27787600, -14772189, 28944400, -1550024),\n                array(16568933, 4717097, -11556148, -1102322, 15682896, -11807043, 16354577, -11775962, 7689662, 11199574),\n                array(30464156, -5976125, -11779434, -15670865, 23220365, 15915852, 7512774, 10017326, -17749093, -9920357),\n            ),\n            array(\n                array(-17036878, 13921892, 10945806, -6033431, 27105052, -16084379, -28926210, 15006023, 3284568, -6276540),\n                array(23599295, -8306047, -11193664, -7687416, 13236774, 10506355, 7464579, 9656445, 13059162, 10374397),\n                array(7798556, 16710257, 3033922, 2874086, 28997861, 2835604, 32406664, -3839045, -641708, -101325),\n            ),\n            array(\n                array(10861363, 11473154, 27284546, 1981175, -30064349, 12577861, 32867885, 14515107, -15438304, 10819380),\n                array(4708026, 6336745, 20377586, 9066809, -11272109, 6594696, -25653668, 12483688, -12668491, 5581306),\n                array(19563160, 16186464, -29386857, 4097519, 10237984, -4348115, 28542350, 13850243, -23678021, -15815942),\n            ),\n            array(\n                array(-15371964, -12862754, 32573250, 4720197, -26436522, 5875511, -19188627, -15224819, -9818940, -12085777),\n                array(-8549212, 109983, 15149363, 2178705, 22900618, 4543417, 3044240, -15689887, 1762328, 14866737),\n                array(-18199695, -15951423, -10473290, 1707278, -17185920, 3916101, -28236412, 3959421, 27914454, 4383652),\n            ),\n            array(\n                array(5153746, 9909285, 1723747, -2777874, 30523605, 5516873, 19480852, 5230134, -23952439, -15175766),\n                array(-30269007, -3463509, 7665486, 10083793, 28475525, 1649722, 20654025, 16520125, 30598449, 7715701),\n                array(28881845, 14381568, 9657904, 3680757, -20181635, 7843316, -31400660, 1370708, 29794553, -1409300),\n            ),\n            array(\n                array(14499471, -2729599, -33191113, -4254652, 28494862, 14271267, 30290735, 10876454, -33154098, 2381726),\n                array(-7195431, -2655363, -14730155, 462251, -27724326, 3941372, -6236617, 3696005, -32300832, 15351955),\n                array(27431194, 8222322, 16448760, -3907995, -18707002, 11938355, -32961401, -2970515, 29551813, 10109425),\n            ),\n        ),\n        array(\n            array(\n                array(-13657040, -13155431, -31283750, 11777098, 21447386, 6519384, -2378284, -1627556, 10092783, -4764171),\n                array(27939166, 14210322, 4677035, 16277044, -22964462, -12398139, -32508754, 12005538, -17810127, 12803510),\n                array(17228999, -15661624, -1233527, 300140, -1224870, -11714777, 30364213, -9038194, 18016357, 4397660),\n            ),\n            array(\n                array(-10958843, -7690207, 4776341, -14954238, 27850028, -15602212, -26619106, 14544525, -17477504, 982639),\n                array(29253598, 15796703, -2863982, -9908884, 10057023, 3163536, 7332899, -4120128, -21047696, 9934963),\n                array(5793303, 16271923, -24131614, -10116404, 29188560, 1206517, -14747930, 4559895, -30123922, -10897950),\n            ),\n            array(\n                array(-27643952, -11493006, 16282657, -11036493, 28414021, -15012264, 24191034, 4541697, -13338309, 5500568),\n                array(12650548, -1497113, 9052871, 11355358, -17680037, -8400164, -17430592, 12264343, 10874051, 13524335),\n                array(25556948, -3045990, 714651, 2510400, 23394682, -10415330, 33119038, 5080568, -22528059, 5376628),\n            ),\n            array(\n                array(-26088264, -4011052, -17013699, -3537628, -6726793, 1920897, -22321305, -9447443, 4535768, 1569007),\n                array(-2255422, 14606630, -21692440, -8039818, 28430649, 8775819, -30494562, 3044290, 31848280, 12543772),\n                array(-22028579, 2943893, -31857513, 6777306, 13784462, -4292203, -27377195, -2062731, 7718482, 14474653),\n            ),\n            array(\n                array(2385315, 2454213, -22631320, 46603, -4437935, -15680415, 656965, -7236665, 24316168, -5253567),\n                array(13741529, 10911568, -33233417, -8603737, -20177830, -1033297, 33040651, -13424532, -20729456, 8321686),\n                array(21060490, -2212744, 15712757, -4336099, 1639040, 10656336, 23845965, -11874838, -9984458, 608372),\n            ),\n            array(\n                array(-13672732, -15087586, -10889693, -7557059, -6036909, 11305547, 1123968, -6780577, 27229399, 23887),\n                array(-23244140, -294205, -11744728, 14712571, -29465699, -2029617, 12797024, -6440308, -1633405, 16678954),\n                array(-29500620, 4770662, -16054387, 14001338, 7830047, 9564805, -1508144, -4795045, -17169265, 4904953),\n            ),\n            array(\n                array(24059557, 14617003, 19037157, -15039908, 19766093, -14906429, 5169211, 16191880, 2128236, -4326833),\n                array(-16981152, 4124966, -8540610, -10653797, 30336522, -14105247, -29806336, 916033, -6882542, -2986532),\n                array(-22630907, 12419372, -7134229, -7473371, -16478904, 16739175, 285431, 2763829, 15736322, 4143876),\n            ),\n            array(\n                array(2379352, 11839345, -4110402, -5988665, 11274298, 794957, 212801, -14594663, 23527084, -16458268),\n                array(33431127, -11130478, -17838966, -15626900, 8909499, 8376530, -32625340, 4087881, -15188911, -14416214),\n                array(1767683, 7197987, -13205226, -2022635, -13091350, 448826, 5799055, 4357868, -4774191, -16323038),\n            ),\n        ),\n        array(\n            array(\n                array(6721966, 13833823, -23523388, -1551314, 26354293, -11863321, 23365147, -3949732, 7390890, 2759800),\n                array(4409041, 2052381, 23373853, 10530217, 7676779, -12885954, 21302353, -4264057, 1244380, -12919645),\n                array(-4421239, 7169619, 4982368, -2957590, 30256825, -2777540, 14086413, 9208236, 15886429, 16489664),\n            ),\n            array(\n                array(1996075, 10375649, 14346367, 13311202, -6874135, -16438411, -13693198, 398369, -30606455, -712933),\n                array(-25307465, 9795880, -2777414, 14878809, -33531835, 14780363, 13348553, 12076947, -30836462, 5113182),\n                array(-17770784, 11797796, 31950843, 13929123, -25888302, 12288344, -30341101, -7336386, 13847711, 5387222),\n            ),\n            array(\n                array(-18582163, -3416217, 17824843, -2340966, 22744343, -10442611, 8763061, 3617786, -19600662, 10370991),\n                array(20246567, -14369378, 22358229, -543712, 18507283, -10413996, 14554437, -8746092, 32232924, 16763880),\n                array(9648505, 10094563, 26416693, 14745928, -30374318, -6472621, 11094161, 15689506, 3140038, -16510092),\n            ),\n            array(\n                array(-16160072, 5472695, 31895588, 4744994, 8823515, 10365685, -27224800, 9448613, -28774454, 366295),\n                array(19153450, 11523972, -11096490, -6503142, -24647631, 5420647, 28344573, 8041113, 719605, 11671788),\n                array(8678025, 2694440, -6808014, 2517372, 4964326, 11152271, -15432916, -15266516, 27000813, -10195553),\n            ),\n            array(\n                array(-15157904, 7134312, 8639287, -2814877, -7235688, 10421742, 564065, 5336097, 6750977, -14521026),\n                array(11836410, -3979488, 26297894, 16080799, 23455045, 15735944, 1695823, -8819122, 8169720, 16220347),\n                array(-18115838, 8653647, 17578566, -6092619, -8025777, -16012763, -11144307, -2627664, -5990708, -14166033),\n            ),\n            array(\n                array(-23308498, -10968312, 15213228, -10081214, -30853605, -11050004, 27884329, 2847284, 2655861, 1738395),\n                array(-27537433, -14253021, -25336301, -8002780, -9370762, 8129821, 21651608, -3239336, -19087449, -11005278),\n                array(1533110, 3437855, 23735889, 459276, 29970501, 11335377, 26030092, 5821408, 10478196, 8544890),\n            ),\n            array(\n                array(32173121, -16129311, 24896207, 3921497, 22579056, -3410854, 19270449, 12217473, 17789017, -3395995),\n                array(-30552961, -2228401, -15578829, -10147201, 13243889, 517024, 15479401, -3853233, 30460520, 1052596),\n                array(-11614875, 13323618, 32618793, 8175907, -15230173, 12596687, 27491595, -4612359, 3179268, -9478891),\n            ),\n            array(\n                array(31947069, -14366651, -4640583, -15339921, -15125977, -6039709, -14756777, -16411740, 19072640, -9511060),\n                array(11685058, 11822410, 3158003, -13952594, 33402194, -4165066, 5977896, -5215017, 473099, 5040608),\n                array(-20290863, 8198642, -27410132, 11602123, 1290375, -2799760, 28326862, 1721092, -19558642, -3131606),\n            ),\n        ),\n        array(\n            array(\n                array(7881532, 10687937, 7578723, 7738378, -18951012, -2553952, 21820786, 8076149, -27868496, 11538389),\n                array(-19935666, 3899861, 18283497, -6801568, -15728660, -11249211, 8754525, 7446702, -5676054, 5797016),\n                array(-11295600, -3793569, -15782110, -7964573, 12708869, -8456199, 2014099, -9050574, -2369172, -5877341),\n            ),\n            array(\n                array(-22472376, -11568741, -27682020, 1146375, 18956691, 16640559, 1192730, -3714199, 15123619, 10811505),\n                array(14352098, -3419715, -18942044, 10822655, 32750596, 4699007, -70363, 15776356, -28886779, -11974553),\n                array(-28241164, -8072475, -4978962, -5315317, 29416931, 1847569, -20654173, -16484855, 4714547, -9600655),\n            ),\n            array(\n                array(15200332, 8368572, 19679101, 15970074, -31872674, 1959451, 24611599, -4543832, -11745876, 12340220),\n                array(12876937, -10480056, 33134381, 6590940, -6307776, 14872440, 9613953, 8241152, 15370987, 9608631),\n                array(-4143277, -12014408, 8446281, -391603, 4407738, 13629032, -7724868, 15866074, -28210621, -8814099),\n            ),\n            array(\n                array(26660628, -15677655, 8393734, 358047, -7401291, 992988, -23904233, 858697, 20571223, 8420556),\n                array(14620715, 13067227, -15447274, 8264467, 14106269, 15080814, 33531827, 12516406, -21574435, -12476749),\n                array(236881, 10476226, 57258, -14677024, 6472998, 2466984, 17258519, 7256740, 8791136, 15069930),\n            ),\n            array(\n                array(1276410, -9371918, 22949635, -16322807, -23493039, -5702186, 14711875, 4874229, -30663140, -2331391),\n                array(5855666, 4990204, -13711848, 7294284, -7804282, 1924647, -1423175, -7912378, -33069337, 9234253),\n                array(20590503, -9018988, 31529744, -7352666, -2706834, 10650548, 31559055, -11609587, 18979186, 13396066),\n            ),\n            array(\n                array(24474287, 4968103, 22267082, 4407354, 24063882, -8325180, -18816887, 13594782, 33514650, 7021958),\n                array(-11566906, -6565505, -21365085, 15928892, -26158305, 4315421, -25948728, -3916677, -21480480, 12868082),\n                array(-28635013, 13504661, 19988037, -2132761, 21078225, 6443208, -21446107, 2244500, -12455797, -8089383),\n            ),\n            array(\n                array(-30595528, 13793479, -5852820, 319136, -25723172, -6263899, 33086546, 8957937, -15233648, 5540521),\n                array(-11630176, -11503902, -8119500, -7643073, 2620056, 1022908, -23710744, -1568984, -16128528, -14962807),\n                array(23152971, 775386, 27395463, 14006635, -9701118, 4649512, 1689819, 892185, -11513277, -15205948),\n            ),\n            array(\n                array(9770129, 9586738, 26496094, 4324120, 1556511, -3550024, 27453819, 4763127, -19179614, 5867134),\n                array(-32765025, 1927590, 31726409, -4753295, 23962434, -16019500, 27846559, 5931263, -29749703, -16108455),\n                array(27461885, -2977536, 22380810, 1815854, -23033753, -3031938, 7283490, -15148073, -19526700, 7734629),\n            ),\n        ),\n        array(\n            array(\n                array(-8010264, -9590817, -11120403, 6196038, 29344158, -13430885, 7585295, -3176626, 18549497, 15302069),\n                array(-32658337, -6171222, -7672793, -11051681, 6258878, 13504381, 10458790, -6418461, -8872242, 8424746),\n                array(24687205, 8613276, -30667046, -3233545, 1863892, -1830544, 19206234, 7134917, -11284482, -828919),\n            ),\n            array(\n                array(11334899, -9218022, 8025293, 12707519, 17523892, -10476071, 10243738, -14685461, -5066034, 16498837),\n                array(8911542, 6887158, -9584260, -6958590, 11145641, -9543680, 17303925, -14124238, 6536641, 10543906),\n                array(-28946384, 15479763, -17466835, 568876, -1497683, 11223454, -2669190, -16625574, -27235709, 8876771),\n            ),\n            array(\n                array(-25742899, -12566864, -15649966, -846607, -33026686, -796288, -33481822, 15824474, -604426, -9039817),\n                array(10330056, 70051, 7957388, -9002667, 9764902, 15609756, 27698697, -4890037, 1657394, 3084098),\n                array(10477963, -7470260, 12119566, -13250805, 29016247, -5365589, 31280319, 14396151, -30233575, 15272409),\n            ),\n            array(\n                array(-12288309, 3169463, 28813183, 16658753, 25116432, -5630466, -25173957, -12636138, -25014757, 1950504),\n                array(-26180358, 9489187, 11053416, -14746161, -31053720, 5825630, -8384306, -8767532, 15341279, 8373727),\n                array(28685821, 7759505, -14378516, -12002860, -31971820, 4079242, 298136, -10232602, -2878207, 15190420),\n            ),\n            array(\n                array(-32932876, 13806336, -14337485, -15794431, -24004620, 10940928, 8669718, 2742393, -26033313, -6875003),\n                array(-1580388, -11729417, -25979658, -11445023, -17411874, -10912854, 9291594, -16247779, -12154742, 6048605),\n                array(-30305315, 14843444, 1539301, 11864366, 20201677, 1900163, 13934231, 5128323, 11213262, 9168384),\n            ),\n            array(\n                array(-26280513, 11007847, 19408960, -940758, -18592965, -4328580, -5088060, -11105150, 20470157, -16398701),\n                array(-23136053, 9282192, 14855179, -15390078, -7362815, -14408560, -22783952, 14461608, 14042978, 5230683),\n                array(29969567, -2741594, -16711867, -8552442, 9175486, -2468974, 21556951, 3506042, -5933891, -12449708),\n            ),\n            array(\n                array(-3144746, 8744661, 19704003, 4581278, -20430686, 6830683, -21284170, 8971513, -28539189, 15326563),\n                array(-19464629, 10110288, -17262528, -3503892, -23500387, 1355669, -15523050, 15300988, -20514118, 9168260),\n                array(-5353335, 4488613, -23803248, 16314347, 7780487, -15638939, -28948358, 9601605, 33087103, -9011387),\n            ),\n            array(\n                array(-19443170, -15512900, -20797467, -12445323, -29824447, 10229461, -27444329, -15000531, -5996870, 15664672),\n                array(23294591, -16632613, -22650781, -8470978, 27844204, 11461195, 13099750, -2460356, 18151676, 13417686),\n                array(-24722913, -4176517, -31150679, 5988919, -26858785, 6685065, 1661597, -12551441, 15271676, -15452665),\n            ),\n        ),\n        array(\n            array(\n                array(11433042, -13228665, 8239631, -5279517, -1985436, -725718, -18698764, 2167544, -6921301, -13440182),\n                array(-31436171, 15575146, 30436815, 12192228, -22463353, 9395379, -9917708, -8638997, 12215110, 12028277),\n                array(14098400, 6555944, 23007258, 5757252, -15427832, -12950502, 30123440, 4617780, -16900089, -655628),\n            ),\n            array(\n                array(-4026201, -15240835, 11893168, 13718664, -14809462, 1847385, -15819999, 10154009, 23973261, -12684474),\n                array(-26531820, -3695990, -1908898, 2534301, -31870557, -16550355, 18341390, -11419951, 32013174, -10103539),\n                array(-25479301, 10876443, -11771086, -14625140, -12369567, 1838104, 21911214, 6354752, 4425632, -837822),\n            ),\n            array(\n                array(-10433389, -14612966, 22229858, -3091047, -13191166, 776729, -17415375, -12020462, 4725005, 14044970),\n                array(19268650, -7304421, 1555349, 8692754, -21474059, -9910664, 6347390, -1411784, -19522291, -16109756),\n                array(-24864089, 12986008, -10898878, -5558584, -11312371, -148526, 19541418, 8180106, 9282262, 10282508),\n            ),\n            array(\n                array(-26205082, 4428547, -8661196, -13194263, 4098402, -14165257, 15522535, 8372215, 5542595, -10702683),\n                array(-10562541, 14895633, 26814552, -16673850, -17480754, -2489360, -2781891, 6993761, -18093885, 10114655),\n                array(-20107055, -929418, 31422704, 10427861, -7110749, 6150669, -29091755, -11529146, 25953725, -106158),\n            ),\n            array(\n                array(-4234397, -8039292, -9119125, 3046000, 2101609, -12607294, 19390020, 6094296, -3315279, 12831125),\n                array(-15998678, 7578152, 5310217, 14408357, -33548620, -224739, 31575954, 6326196, 7381791, -2421839),\n                array(-20902779, 3296811, 24736065, -16328389, 18374254, 7318640, 6295303, 8082724, -15362489, 12339664),\n            ),\n            array(\n                array(27724736, 2291157, 6088201, -14184798, 1792727, 5857634, 13848414, 15768922, 25091167, 14856294),\n                array(-18866652, 8331043, 24373479, 8541013, -701998, -9269457, 12927300, -12695493, -22182473, -9012899),\n                array(-11423429, -5421590, 11632845, 3405020, 30536730, -11674039, -27260765, 13866390, 30146206, 9142070),\n            ),\n            array(\n                array(3924129, -15307516, -13817122, -10054960, 12291820, -668366, -27702774, 9326384, -8237858, 4171294),\n                array(-15921940, 16037937, 6713787, 16606682, -21612135, 2790944, 26396185, 3731949, 345228, -5462949),\n                array(-21327538, 13448259, 25284571, 1143661, 20614966, -8849387, 2031539, -12391231, -16253183, -13582083),\n            ),\n            array(\n                array(31016211, -16722429, 26371392, -14451233, -5027349, 14854137, 17477601, 3842657, 28012650, -16405420),\n                array(-5075835, 9368966, -8562079, -4600902, -15249953, 6970560, -9189873, 16292057, -8867157, 3507940),\n                array(29439664, 3537914, 23333589, 6997794, -17555561, -11018068, -15209202, -15051267, -9164929, 6580396),\n            ),\n        ),\n        array(\n            array(\n                array(-12185861, -7679788, 16438269, 10826160, -8696817, -6235611, 17860444, -9273846, -2095802, 9304567),\n                array(20714564, -4336911, 29088195, 7406487, 11426967, -5095705, 14792667, -14608617, 5289421, -477127),\n                array(-16665533, -10650790, -6160345, -13305760, 9192020, -1802462, 17271490, 12349094, 26939669, -3752294),\n            ),\n            array(\n                array(-12889898, 9373458, 31595848, 16374215, 21471720, 13221525, -27283495, -12348559, -3698806, 117887),\n                array(22263325, -6560050, 3984570, -11174646, -15114008, -566785, 28311253, 5358056, -23319780, 541964),\n                array(16259219, 3261970, 2309254, -15534474, -16885711, -4581916, 24134070, -16705829, -13337066, -13552195),\n            ),\n            array(\n                array(9378160, -13140186, -22845982, -12745264, 28198281, -7244098, -2399684, -717351, 690426, 14876244),\n                array(24977353, -314384, -8223969, -13465086, 28432343, -1176353, -13068804, -12297348, -22380984, 6618999),\n                array(-1538174, 11685646, 12944378, 13682314, -24389511, -14413193, 8044829, -13817328, 32239829, -5652762),\n            ),\n            array(\n                array(-18603066, 4762990, -926250, 8885304, -28412480, -3187315, 9781647, -10350059, 32779359, 5095274),\n                array(-33008130, -5214506, -32264887, -3685216, 9460461, -9327423, -24601656, 14506724, 21639561, -2630236),\n                array(-16400943, -13112215, 25239338, 15531969, 3987758, -4499318, -1289502, -6863535, 17874574, 558605),\n            ),\n            array(\n                array(-13600129, 10240081, 9171883, 16131053, -20869254, 9599700, 33499487, 5080151, 2085892, 5119761),\n                array(-22205145, -2519528, -16381601, 414691, -25019550, 2170430, 30634760, -8363614, -31999993, -5759884),\n                array(-6845704, 15791202, 8550074, -1312654, 29928809, -12092256, 27534430, -7192145, -22351378, 12961482),\n            ),\n            array(\n                array(-24492060, -9570771, 10368194, 11582341, -23397293, -2245287, 16533930, 8206996, -30194652, -5159638),\n                array(-11121496, -3382234, 2307366, 6362031, -135455, 8868177, -16835630, 7031275, 7589640, 8945490),\n                array(-32152748, 8917967, 6661220, -11677616, -1192060, -15793393, 7251489, -11182180, 24099109, -14456170),\n            ),\n            array(\n                array(5019558, -7907470, 4244127, -14714356, -26933272, 6453165, -19118182, -13289025, -6231896, -10280736),\n                array(10853594, 10721687, 26480089, 5861829, -22995819, 1972175, -1866647, -10557898, -3363451, -6441124),\n                array(-17002408, 5906790, 221599, -6563147, 7828208, -13248918, 24362661, -2008168, -13866408, 7421392),\n            ),\n            array(\n                array(8139927, -6546497, 32257646, -5890546, 30375719, 1886181, -21175108, 15441252, 28826358, -4123029),\n                array(6267086, 9695052, 7709135, -16603597, -32869068, -1886135, 14795160, -7840124, 13746021, -1742048),\n                array(28584902, 7787108, -6732942, -15050729, 22846041, -7571236, -3181936, -363524, 4771362, -8419958),\n            ),\n        ),\n        array(\n            array(\n                array(24949256, 6376279, -27466481, -8174608, -18646154, -9930606, 33543569, -12141695, 3569627, 11342593),\n                array(26514989, 4740088, 27912651, 3697550, 19331575, -11472339, 6809886, 4608608, 7325975, -14801071),\n                array(-11618399, -14554430, -24321212, 7655128, -1369274, 5214312, -27400540, 10258390, -17646694, -8186692),\n            ),\n            array(\n                array(11431204, 15823007, 26570245, 14329124, 18029990, 4796082, -31446179, 15580664, 9280358, -3973687),\n                array(-160783, -10326257, -22855316, -4304997, -20861367, -13621002, -32810901, -11181622, -15545091, 4387441),\n                array(-20799378, 12194512, 3937617, -5805892, -27154820, 9340370, -24513992, 8548137, 20617071, -7482001),\n            ),\n            array(\n                array(-938825, -3930586, -8714311, 16124718, 24603125, -6225393, -13775352, -11875822, 24345683, 10325460),\n                array(-19855277, -1568885, -22202708, 8714034, 14007766, 6928528, 16318175, -1010689, 4766743, 3552007),\n                array(-21751364, -16730916, 1351763, -803421, -4009670, 3950935, 3217514, 14481909, 10988822, -3994762),\n            ),\n            array(\n                array(15564307, -14311570, 3101243, 5684148, 30446780, -8051356, 12677127, -6505343, -8295852, 13296005),\n                array(-9442290, 6624296, -30298964, -11913677, -4670981, -2057379, 31521204, 9614054, -30000824, 12074674),\n                array(4771191, -135239, 14290749, -13089852, 27992298, 14998318, -1413936, -1556716, 29832613, -16391035),\n            ),\n            array(\n                array(7064884, -7541174, -19161962, -5067537, -18891269, -2912736, 25825242, 5293297, -27122660, 13101590),\n                array(-2298563, 2439670, -7466610, 1719965, -27267541, -16328445, 32512469, -5317593, -30356070, -4190957),\n                array(-30006540, 10162316, -33180176, 3981723, -16482138, -13070044, 14413974, 9515896, 19568978, 9628812),\n            ),\n            array(\n                array(33053803, 199357, 15894591, 1583059, 27380243, -4580435, -17838894, -6106839, -6291786, 3437740),\n                array(-18978877, 3884493, 19469877, 12726490, 15913552, 13614290, -22961733, 70104, 7463304, 4176122),\n                array(-27124001, 10659917, 11482427, -16070381, 12771467, -6635117, -32719404, -5322751, 24216882, 5944158),\n            ),\n            array(\n                array(8894125, 7450974, -2664149, -9765752, -28080517, -12389115, 19345746, 14680796, 11632993, 5847885),\n                array(26942781, -2315317, 9129564, -4906607, 26024105, 11769399, -11518837, 6367194, -9727230, 4782140),\n                array(19916461, -4828410, -22910704, -11414391, 25606324, -5972441, 33253853, 8220911, 6358847, -1873857),\n            ),\n            array(\n                array(801428, -2081702, 16569428, 11065167, 29875704, 96627, 7908388, -4480480, -13538503, 1387155),\n                array(19646058, 5720633, -11416706, 12814209, 11607948, 12749789, 14147075, 15156355, -21866831, 11835260),\n                array(19299512, 1155910, 28703737, 14890794, 2925026, 7269399, 26121523, 15467869, -26560550, 5052483),\n            ),\n        ),\n        array(\n            array(\n                array(-3017432, 10058206, 1980837, 3964243, 22160966, 12322533, -6431123, -12618185, 12228557, -7003677),\n                array(32944382, 14922211, -22844894, 5188528, 21913450, -8719943, 4001465, 13238564, -6114803, 8653815),\n                array(22865569, -4652735, 27603668, -12545395, 14348958, 8234005, 24808405, 5719875, 28483275, 2841751),\n            ),\n            array(\n                array(-16420968, -1113305, -327719, -12107856, 21886282, -15552774, -1887966, -315658, 19932058, -12739203),\n                array(-11656086, 10087521, -8864888, -5536143, -19278573, -3055912, 3999228, 13239134, -4777469, -13910208),\n                array(1382174, -11694719, 17266790, 9194690, -13324356, 9720081, 20403944, 11284705, -14013818, 3093230),\n            ),\n            array(\n                array(16650921, -11037932, -1064178, 1570629, -8329746, 7352753, -302424, 16271225, -24049421, -6691850),\n                array(-21911077, -5927941, -4611316, -5560156, -31744103, -10785293, 24123614, 15193618, -21652117, -16739389),\n                array(-9935934, -4289447, -25279823, 4372842, 2087473, 10399484, 31870908, 14690798, 17361620, 11864968),\n            ),\n            array(\n                array(-11307610, 6210372, 13206574, 5806320, -29017692, -13967200, -12331205, -7486601, -25578460, -16240689),\n                array(14668462, -12270235, 26039039, 15305210, 25515617, 4542480, 10453892, 6577524, 9145645, -6443880),\n                array(5974874, 3053895, -9433049, -10385191, -31865124, 3225009, -7972642, 3936128, -5652273, -3050304),\n            ),\n            array(\n                array(30625386, -4729400, -25555961, -12792866, -20484575, 7695099, 17097188, -16303496, -27999779, 1803632),\n                array(-3553091, 9865099, -5228566, 4272701, -5673832, -16689700, 14911344, 12196514, -21405489, 7047412),\n                array(20093277, 9920966, -11138194, -5343857, 13161587, 12044805, -32856851, 4124601, -32343828, -10257566),\n            ),\n            array(\n                array(-20788824, 14084654, -13531713, 7842147, 19119038, -13822605, 4752377, -8714640, -21679658, 2288038),\n                array(-26819236, -3283715, 29965059, 3039786, -14473765, 2540457, 29457502, 14625692, -24819617, 12570232),\n                array(-1063558, -11551823, 16920318, 12494842, 1278292, -5869109, -21159943, -3498680, -11974704, 4724943),\n            ),\n            array(\n                array(17960970, -11775534, -4140968, -9702530, -8876562, -1410617, -12907383, -8659932, -29576300, 1903856),\n                array(23134274, -14279132, -10681997, -1611936, 20684485, 15770816, -12989750, 3190296, 26955097, 14109738),\n                array(15308788, 5320727, -30113809, -14318877, 22902008, 7767164, 29425325, -11277562, 31960942, 11934971),\n            ),\n            array(\n                array(-27395711, 8435796, 4109644, 12222639, -24627868, 14818669, 20638173, 4875028, 10491392, 1379718),\n                array(-13159415, 9197841, 3875503, -8936108, -1383712, -5879801, 33518459, 16176658, 21432314, 12180697),\n                array(-11787308, 11500838, 13787581, -13832590, -22430679, 10140205, 1465425, 12689540, -10301319, -13872883),\n            ),\n        ),\n        array(\n            array(\n                array(5414091, -15386041, -21007664, 9643570, 12834970, 1186149, -2622916, -1342231, 26128231, 6032912),\n                array(-26337395, -13766162, 32496025, -13653919, 17847801, -12669156, 3604025, 8316894, -25875034, -10437358),\n                array(3296484, 6223048, 24680646, -12246460, -23052020, 5903205, -8862297, -4639164, 12376617, 3188849),\n            ),\n            array(\n                array(29190488, -14659046, 27549113, -1183516, 3520066, -10697301, 32049515, -7309113, -16109234, -9852307),\n                array(-14744486, -9309156, 735818, -598978, -20407687, -5057904, 25246078, -15795669, 18640741, -960977),\n                array(-6928835, -16430795, 10361374, 5642961, 4910474, 12345252, -31638386, -494430, 10530747, 1053335),\n            ),\n            array(\n                array(-29265967, -14186805, -13538216, -12117373, -19457059, -10655384, -31462369, -2948985, 24018831, 15026644),\n                array(-22592535, -3145277, -2289276, 5953843, -13440189, 9425631, 25310643, 13003497, -2314791, -15145616),\n                array(-27419985, -603321, -8043984, -1669117, -26092265, 13987819, -27297622, 187899, -23166419, -2531735),\n            ),\n            array(\n                array(-21744398, -13810475, 1844840, 5021428, -10434399, -15911473, 9716667, 16266922, -5070217, 726099),\n                array(29370922, -6053998, 7334071, -15342259, 9385287, 2247707, -13661962, -4839461, 30007388, -15823341),\n                array(-936379, 16086691, 23751945, -543318, -1167538, -5189036, 9137109, 730663, 9835848, 4555336),\n            ),\n            array(\n                array(-23376435, 1410446, -22253753, -12899614, 30867635, 15826977, 17693930, 544696, -11985298, 12422646),\n                array(31117226, -12215734, -13502838, 6561947, -9876867, -12757670, -5118685, -4096706, 29120153, 13924425),\n                array(-17400879, -14233209, 19675799, -2734756, -11006962, -5858820, -9383939, -11317700, 7240931, -237388),\n            ),\n            array(\n                array(-31361739, -11346780, -15007447, -5856218, -22453340, -12152771, 1222336, 4389483, 3293637, -15551743),\n                array(-16684801, -14444245, 11038544, 11054958, -13801175, -3338533, -24319580, 7733547, 12796905, -6335822),\n                array(-8759414, -10817836, -25418864, 10783769, -30615557, -9746811, -28253339, 3647836, 3222231, -11160462),\n            ),\n            array(\n                array(18606113, 1693100, -25448386, -15170272, 4112353, 10045021, 23603893, -2048234, -7550776, 2484985),\n                array(9255317, -3131197, -12156162, -1004256, 13098013, -9214866, 16377220, -2102812, -19802075, -3034702),\n                array(-22729289, 7496160, -5742199, 11329249, 19991973, -3347502, -31718148, 9936966, -30097688, -10618797),\n            ),\n            array(\n                array(21878590, -5001297, 4338336, 13643897, -3036865, 13160960, 19708896, 5415497, -7360503, -4109293),\n                array(27736861, 10103576, 12500508, 8502413, -3413016, -9633558, 10436918, -1550276, -23659143, -8132100),\n                array(19492550, -12104365, -29681976, -852630, -3208171, 12403437, 30066266, 8367329, 13243957, 8709688),\n            ),\n        ),\n        array(\n            array(\n                array(12015105, 2801261, 28198131, 10151021, 24818120, -4743133, -11194191, -5645734, 5150968, 7274186),\n                array(2831366, -12492146, 1478975, 6122054, 23825128, -12733586, 31097299, 6083058, 31021603, -9793610),\n                array(-2529932, -2229646, 445613, 10720828, -13849527, -11505937, -23507731, 16354465, 15067285, -14147707),\n            ),\n            array(\n                array(7840942, 14037873, -33364863, 15934016, -728213, -3642706, 21403988, 1057586, -19379462, -12403220),\n                array(915865, -16469274, 15608285, -8789130, -24357026, 6060030, -17371319, 8410997, -7220461, 16527025),\n                array(32922597, -556987, 20336074, -16184568, 10903705, -5384487, 16957574, 52992, 23834301, 6588044),\n            ),\n            array(\n                array(32752030, 11232950, 3381995, -8714866, 22652988, -10744103, 17159699, 16689107, -20314580, -1305992),\n                array(-4689649, 9166776, -25710296, -10847306, 11576752, 12733943, 7924251, -2752281, 1976123, -7249027),\n                array(21251222, 16309901, -2983015, -6783122, 30810597, 12967303, 156041, -3371252, 12331345, -8237197),\n            ),\n            array(\n                array(8651614, -4477032, -16085636, -4996994, 13002507, 2950805, 29054427, -5106970, 10008136, -4667901),\n                array(31486080, 15114593, -14261250, 12951354, 14369431, -7387845, 16347321, -13662089, 8684155, -10532952),\n                array(19443825, 11385320, 24468943, -9659068, -23919258, 2187569, -26263207, -6086921, 31316348, 14219878),\n            ),\n            array(\n                array(-28594490, 1193785, 32245219, 11392485, 31092169, 15722801, 27146014, 6992409, 29126555, 9207390),\n                array(32382935, 1110093, 18477781, 11028262, -27411763, -7548111, -4980517, 10843782, -7957600, -14435730),\n                array(2814918, 7836403, 27519878, -7868156, -20894015, -11553689, -21494559, 8550130, 28346258, 1994730),\n            ),\n            array(\n                array(-19578299, 8085545, -14000519, -3948622, 2785838, -16231307, -19516951, 7174894, 22628102, 8115180),\n                array(-30405132, 955511, -11133838, -15078069, -32447087, -13278079, -25651578, 3317160, -9943017, 930272),\n                array(-15303681, -6833769, 28856490, 1357446, 23421993, 1057177, 24091212, -1388970, -22765376, -10650715),\n            ),\n            array(\n                array(-22751231, -5303997, -12907607, -12768866, -15811511, -7797053, -14839018, -16554220, -1867018, 8398970),\n                array(-31969310, 2106403, -4736360, 1362501, 12813763, 16200670, 22981545, -6291273, 18009408, -15772772),\n                array(-17220923, -9545221, -27784654, 14166835, 29815394, 7444469, 29551787, -3727419, 19288549, 1325865),\n            ),\n            array(\n                array(15100157, -15835752, -23923978, -1005098, -26450192, 15509408, 12376730, -3479146, 33166107, -8042750),\n                array(20909231, 13023121, -9209752, 16251778, -5778415, -8094914, 12412151, 10018715, 2213263, -13878373),\n                array(32529814, -11074689, 30361439, -16689753, -9135940, 1513226, 22922121, 6382134, -5766928, 8371348),\n            ),\n        ),\n        array(\n            array(\n                array(9923462, 11271500, 12616794, 3544722, -29998368, -1721626, 12891687, -8193132, -26442943, 10486144),\n                array(-22597207, -7012665, 8587003, -8257861, 4084309, -12970062, 361726, 2610596, -23921530, -11455195),\n                array(5408411, -1136691, -4969122, 10561668, 24145918, 14240566, 31319731, -4235541, 19985175, -3436086),\n            ),\n            array(\n                array(-13994457, 16616821, 14549246, 3341099, 32155958, 13648976, -17577068, 8849297, 65030, 8370684),\n                array(-8320926, -12049626, 31204563, 5839400, -20627288, -1057277, -19442942, 6922164, 12743482, -9800518),\n                array(-2361371, 12678785, 28815050, 4759974, -23893047, 4884717, 23783145, 11038569, 18800704, 255233),\n            ),\n            array(\n                array(-5269658, -1773886, 13957886, 7990715, 23132995, 728773, 13393847, 9066957, 19258688, -14753793),\n                array(-2936654, -10827535, -10432089, 14516793, -3640786, 4372541, -31934921, 2209390, -1524053, 2055794),\n                array(580882, 16705327, 5468415, -2683018, -30926419, -14696000, -7203346, -8994389, -30021019, 7394435),\n            ),\n            array(\n                array(23838809, 1822728, -15738443, 15242727, 8318092, -3733104, -21672180, -3492205, -4821741, 14799921),\n                array(13345610, 9759151, 3371034, -16137791, 16353039, 8577942, 31129804, 13496856, -9056018, 7402518),\n                array(2286874, -4435931, -20042458, -2008336, -13696227, 5038122, 11006906, -15760352, 8205061, 1607563),\n            ),\n            array(\n                array(14414086, -8002132, 3331830, -3208217, 22249151, -5594188, 18364661, -2906958, 30019587, -9029278),\n                array(-27688051, 1585953, -10775053, 931069, -29120221, -11002319, -14410829, 12029093, 9944378, 8024),\n                array(4368715, -3709630, 29874200, -15022983, -20230386, -11410704, -16114594, -999085, -8142388, 5640030),\n            ),\n            array(\n                array(10299610, 13746483, 11661824, 16234854, 7630238, 5998374, 9809887, -16694564, 15219798, -14327783),\n                array(27425505, -5719081, 3055006, 10660664, 23458024, 595578, -15398605, -1173195, -18342183, 9742717),\n                array(6744077, 2427284, 26042789, 2720740, -847906, 1118974, 32324614, 7406442, 12420155, 1994844),\n            ),\n            array(\n                array(14012521, -5024720, -18384453, -9578469, -26485342, -3936439, -13033478, -10909803, 24319929, -6446333),\n                array(16412690, -4507367, 10772641, 15929391, -17068788, -4658621, 10555945, -10484049, -30102368, -4739048),\n                array(22397382, -7767684, -9293161, -12792868, 17166287, -9755136, -27333065, 6199366, 21880021, -12250760),\n            ),\n            array(\n                array(-4283307, 5368523, -31117018, 8163389, -30323063, 3209128, 16557151, 8890729, 8840445, 4957760),\n                array(-15447727, 709327, -6919446, -10870178, -29777922, 6522332, -21720181, 12130072, -14796503, 5005757),\n                array(-2114751, -14308128, 23019042, 15765735, -25269683, 6002752, 10183197, -13239326, -16395286, -2176112),\n            ),\n        ),\n        array(\n            array(\n                array(-19025756, 1632005, 13466291, -7995100, -23640451, 16573537, -32013908, -3057104, 22208662, 2000468),\n                array(3065073, -1412761, -25598674, -361432, -17683065, -5703415, -8164212, 11248527, -3691214, -7414184),\n                array(10379208, -6045554, 8877319, 1473647, -29291284, -12507580, 16690915, 2553332, -3132688, 16400289),\n            ),\n            array(\n                array(15716668, 1254266, -18472690, 7446274, -8448918, 6344164, -22097271, -7285580, 26894937, 9132066),\n                array(24158887, 12938817, 11085297, -8177598, -28063478, -4457083, -30576463, 64452, -6817084, -2692882),\n                array(13488534, 7794716, 22236231, 5989356, 25426474, -12578208, 2350710, -3418511, -4688006, 2364226),\n            ),\n            array(\n                array(16335052, 9132434, 25640582, 6678888, 1725628, 8517937, -11807024, -11697457, 15445875, -7798101),\n                array(29004207, -7867081, 28661402, -640412, -12794003, -7943086, 31863255, -4135540, -278050, -15759279),\n                array(-6122061, -14866665, -28614905, 14569919, -10857999, -3591829, 10343412, -6976290, -29828287, -10815811),\n            ),\n            array(\n                array(27081650, 3463984, 14099042, -4517604, 1616303, -6205604, 29542636, 15372179, 17293797, 960709),\n                array(20263915, 11434237, -5765435, 11236810, 13505955, -10857102, -16111345, 6493122, -19384511, 7639714),\n                array(-2830798, -14839232, 25403038, -8215196, -8317012, -16173699, 18006287, -16043750, 29994677, -15808121),\n            ),\n            array(\n                array(9769828, 5202651, -24157398, -13631392, -28051003, -11561624, -24613141, -13860782, -31184575, 709464),\n                array(12286395, 13076066, -21775189, -1176622, -25003198, 4057652, -32018128, -8890874, 16102007, 13205847),\n                array(13733362, 5599946, 10557076, 3195751, -5557991, 8536970, -25540170, 8525972, 10151379, 10394400),\n            ),\n            array(\n                array(4024660, -16137551, 22436262, 12276534, -9099015, -2686099, 19698229, 11743039, -33302334, 8934414),\n                array(-15879800, -4525240, -8580747, -2934061, 14634845, -698278, -9449077, 3137094, -11536886, 11721158),\n                array(17555939, -5013938, 8268606, 2331751, -22738815, 9761013, 9319229, 8835153, -9205489, -1280045),\n            ),\n            array(\n                array(-461409, -7830014, 20614118, 16688288, -7514766, -4807119, 22300304, 505429, 6108462, -6183415),\n                array(-5070281, 12367917, -30663534, 3234473, 32617080, -8422642, 29880583, -13483331, -26898490, -7867459),\n                array(-31975283, 5726539, 26934134, 10237677, -3173717, -605053, 24199304, 3795095, 7592688, -14992079),\n            ),\n            array(\n                array(21594432, -14964228, 17466408, -4077222, 32537084, 2739898, 6407723, 12018833, -28256052, 4298412),\n                array(-20650503, -11961496, -27236275, 570498, 3767144, -1717540, 13891942, -1569194, 13717174, 10805743),\n                array(-14676630, -15644296, 15287174, 11927123, 24177847, -8175568, -796431, 14860609, -26938930, -5863836),\n            ),\n        ),\n        array(\n            array(\n                array(12962541, 5311799, -10060768, 11658280, 18855286, -7954201, 13286263, -12808704, -4381056, 9882022),\n                array(18512079, 11319350, -20123124, 15090309, 18818594, 5271736, -22727904, 3666879, -23967430, -3299429),\n                array(-6789020, -3146043, 16192429, 13241070, 15898607, -14206114, -10084880, -6661110, -2403099, 5276065),\n            ),\n            array(\n                array(30169808, -5317648, 26306206, -11750859, 27814964, 7069267, 7152851, 3684982, 1449224, 13082861),\n                array(10342826, 3098505, 2119311, 193222, 25702612, 12233820, 23697382, 15056736, -21016438, -8202000),\n                array(-33150110, 3261608, 22745853, 7948688, 19370557, -15177665, -26171976, 6482814, -10300080, -11060101),\n            ),\n            array(\n                array(32869458, -5408545, 25609743, 15678670, -10687769, -15471071, 26112421, 2521008, -22664288, 6904815),\n                array(29506923, 4457497, 3377935, -9796444, -30510046, 12935080, 1561737, 3841096, -29003639, -6657642),\n                array(10340844, -6630377, -18656632, -2278430, 12621151, -13339055, 30878497, -11824370, -25584551, 5181966),\n            ),\n            array(\n                array(25940115, -12658025, 17324188, -10307374, -8671468, 15029094, 24396252, -16450922, -2322852, -12388574),\n                array(-21765684, 9916823, -1300409, 4079498, -1028346, 11909559, 1782390, 12641087, 20603771, -6561742),\n                array(-18882287, -11673380, 24849422, 11501709, 13161720, -4768874, 1925523, 11914390, 4662781, 7820689),\n            ),\n            array(\n                array(12241050, -425982, 8132691, 9393934, 32846760, -1599620, 29749456, 12172924, 16136752, 15264020),\n                array(-10349955, -14680563, -8211979, 2330220, -17662549, -14545780, 10658213, 6671822, 19012087, 3772772),\n                array(3753511, -3421066, 10617074, 2028709, 14841030, -6721664, 28718732, -15762884, 20527771, 12988982),\n            ),\n            array(\n                array(-14822485, -5797269, -3707987, 12689773, -898983, -10914866, -24183046, -10564943, 3299665, -12424953),\n                array(-16777703, -15253301, -9642417, 4978983, 3308785, 8755439, 6943197, 6461331, -25583147, 8991218),\n                array(-17226263, 1816362, -1673288, -6086439, 31783888, -8175991, -32948145, 7417950, -30242287, 1507265),\n            ),\n            array(\n                array(29692663, 6829891, -10498800, 4334896, 20945975, -11906496, -28887608, 8209391, 14606362, -10647073),\n                array(-3481570, 8707081, 32188102, 5672294, 22096700, 1711240, -33020695, 9761487, 4170404, -2085325),\n                array(-11587470, 14855945, -4127778, -1531857, -26649089, 15084046, 22186522, 16002000, -14276837, -8400798),\n            ),\n            array(\n                array(-4811456, 13761029, -31703877, -2483919, -3312471, 7869047, -7113572, -9620092, 13240845, 10965870),\n                array(-7742563, -8256762, -14768334, -13656260, -23232383, 12387166, 4498947, 14147411, 29514390, 4302863),\n                array(-13413405, -12407859, 20757302, -13801832, 14785143, 8976368, -5061276, -2144373, 17846988, -13971927),\n            ),\n        ),\n        array(\n            array(\n                array(-2244452, -754728, -4597030, -1066309, -6247172, 1455299, -21647728, -9214789, -5222701, 12650267),\n                array(-9906797, -16070310, 21134160, 12198166, -27064575, 708126, 387813, 13770293, -19134326, 10958663),\n                array(22470984, 12369526, 23446014, -5441109, -21520802, -9698723, -11772496, -11574455, -25083830, 4271862),\n            ),\n            array(\n                array(-25169565, -10053642, -19909332, 15361595, -5984358, 2159192, 75375, -4278529, -32526221, 8469673),\n                array(15854970, 4148314, -8893890, 7259002, 11666551, 13824734, -30531198, 2697372, 24154791, -9460943),\n                array(15446137, -15806644, 29759747, 14019369, 30811221, -9610191, -31582008, 12840104, 24913809, 9815020),\n            ),\n            array(\n                array(-4709286, -5614269, -31841498, -12288893, -14443537, 10799414, -9103676, 13438769, 18735128, 9466238),\n                array(11933045, 9281483, 5081055, -5183824, -2628162, -4905629, -7727821, -10896103, -22728655, 16199064),\n                array(14576810, 379472, -26786533, -8317236, -29426508, -10812974, -102766, 1876699, 30801119, 2164795),\n            ),\n            array(\n                array(15995086, 3199873, 13672555, 13712240, -19378835, -4647646, -13081610, -15496269, -13492807, 1268052),\n                array(-10290614, -3659039, -3286592, 10948818, 23037027, 3794475, -3470338, -12600221, -17055369, 3565904),\n                array(29210088, -9419337, -5919792, -4952785, 10834811, -13327726, -16512102, -10820713, -27162222, -14030531),\n            ),\n            array(\n                array(-13161890, 15508588, 16663704, -8156150, -28349942, 9019123, -29183421, -3769423, 2244111, -14001979),\n                array(-5152875, -3800936, -9306475, -6071583, 16243069, 14684434, -25673088, -16180800, 13491506, 4641841),\n                array(10813417, 643330, -19188515, -728916, 30292062, -16600078, 27548447, -7721242, 14476989, -12767431),\n            ),\n            array(\n                array(10292079, 9984945, 6481436, 8279905, -7251514, 7032743, 27282937, -1644259, -27912810, 12651324),\n                array(-31185513, -813383, 22271204, 11835308, 10201545, 15351028, 17099662, 3988035, 21721536, -3148940),\n                array(10202177, -6545839, -31373232, -9574638, -32150642, -8119683, -12906320, 3852694, 13216206, 14842320),\n            ),\n            array(\n                array(-15815640, -10601066, -6538952, -7258995, -6984659, -6581778, -31500847, 13765824, -27434397, 9900184),\n                array(14465505, -13833331, -32133984, -14738873, -27443187, 12990492, 33046193, 15796406, -7051866, -8040114),\n                array(30924417, -8279620, 6359016, -12816335, 16508377, 9071735, -25488601, 15413635, 9524356, -7018878),\n            ),\n            array(\n                array(12274201, -13175547, 32627641, -1785326, 6736625, 13267305, 5237659, -5109483, 15663516, 4035784),\n                array(-2951309, 8903985, 17349946, 601635, -16432815, -4612556, -13732739, -15889334, -22258478, 4659091),\n                array(-16916263, -4952973, -30393711, -15158821, 20774812, 15897498, 5736189, 15026997, -2178256, -13455585),\n            ),\n        ),\n        array(\n            array(\n                array(-8858980, -2219056, 28571666, -10155518, -474467, -10105698, -3801496, 278095, 23440562, -290208),\n                array(10226241, -5928702, 15139956, 120818, -14867693, 5218603, 32937275, 11551483, -16571960, -7442864),\n                array(17932739, -12437276, -24039557, 10749060, 11316803, 7535897, 22503767, 5561594, -3646624, 3898661),\n            ),\n            array(\n                array(7749907, -969567, -16339731, -16464, -25018111, 15122143, -1573531, 7152530, 21831162, 1245233),\n                array(26958459, -14658026, 4314586, 8346991, -5677764, 11960072, -32589295, -620035, -30402091, -16716212),\n                array(-12165896, 9166947, 33491384, 13673479, 29787085, 13096535, 6280834, 14587357, -22338025, 13987525),\n            ),\n            array(\n                array(-24349909, 7778775, 21116000, 15572597, -4833266, -5357778, -4300898, -5124639, -7469781, -2858068),\n                array(9681908, -6737123, -31951644, 13591838, -6883821, 386950, 31622781, 6439245, -14581012, 4091397),\n                array(-8426427, 1470727, -28109679, -1596990, 3978627, -5123623, -19622683, 12092163, 29077877, -14741988),\n            ),\n            array(\n                array(5269168, -6859726, -13230211, -8020715, 25932563, 1763552, -5606110, -5505881, -20017847, 2357889),\n                array(32264008, -15407652, -5387735, -1160093, -2091322, -3946900, 23104804, -12869908, 5727338, 189038),\n                array(14609123, -8954470, -6000566, -16622781, -14577387, -7743898, -26745169, 10942115, -25888931, -14884697),\n            ),\n            array(\n                array(20513500, 5557931, -15604613, 7829531, 26413943, -2019404, -21378968, 7471781, 13913677, -5137875),\n                array(-25574376, 11967826, 29233242, 12948236, -6754465, 4713227, -8940970, 14059180, 12878652, 8511905),\n                array(-25656801, 3393631, -2955415, -7075526, -2250709, 9366908, -30223418, 6812974, 5568676, -3127656),\n            ),\n            array(\n                array(11630004, 12144454, 2116339, 13606037, 27378885, 15676917, -17408753, -13504373, -14395196, 8070818),\n                array(27117696, -10007378, -31282771, -5570088, 1127282, 12772488, -29845906, 10483306, -11552749, -1028714),\n                array(10637467, -5688064, 5674781, 1072708, -26343588, -6982302, -1683975, 9177853, -27493162, 15431203),\n            ),\n            array(\n                array(20525145, 10892566, -12742472, 12779443, -29493034, 16150075, -28240519, 14943142, -15056790, -7935931),\n                array(-30024462, 5626926, -551567, -9981087, 753598, 11981191, 25244767, -3239766, -3356550, 9594024),\n                array(-23752644, 2636870, -5163910, -10103818, 585134, 7877383, 11345683, -6492290, 13352335, -10977084),\n            ),\n            array(\n                array(-1931799, -5407458, 3304649, -12884869, 17015806, -4877091, -29783850, -7752482, -13215537, -319204),\n                array(20239939, 6607058, 6203985, 3483793, -18386976, -779229, -20723742, 15077870, -22750759, 14523817),\n                array(27406042, -6041657, 27423596, -4497394, 4996214, 10002360, -28842031, -4545494, -30172742, -4805667),\n            ),\n        ),\n        array(\n            array(\n                array(11374242, 12660715, 17861383, -12540833, 10935568, 1099227, -13886076, -9091740, -27727044, 11358504),\n                array(-12730809, 10311867, 1510375, 10778093, -2119455, -9145702, 32676003, 11149336, -26123651, 4985768),\n                array(-19096303, 341147, -6197485, -239033, 15756973, -8796662, -983043, 13794114, -19414307, -15621255),\n            ),\n            array(\n                array(6490081, 11940286, 25495923, -7726360, 8668373, -8751316, 3367603, 6970005, -1691065, -9004790),\n                array(1656497, 13457317, 15370807, 6364910, 13605745, 8362338, -19174622, -5475723, -16796596, -5031438),\n                array(-22273315, -13524424, -64685, -4334223, -18605636, -10921968, -20571065, -7007978, -99853, -10237333),\n            ),\n            array(\n                array(17747465, 10039260, 19368299, -4050591, -20630635, -16041286, 31992683, -15857976, -29260363, -5511971),\n                array(31932027, -4986141, -19612382, 16366580, 22023614, 88450, 11371999, -3744247, 4882242, -10626905),\n                array(29796507, 37186, 19818052, 10115756, -11829032, 3352736, 18551198, 3272828, -5190932, -4162409),\n            ),\n            array(\n                array(12501286, 4044383, -8612957, -13392385, -32430052, 5136599, -19230378, -3529697, 330070, -3659409),\n                array(6384877, 2899513, 17807477, 7663917, -2358888, 12363165, 25366522, -8573892, -271295, 12071499),\n                array(-8365515, -4042521, 25133448, -4517355, -6211027, 2265927, -32769618, 1936675, -5159697, 3829363),\n            ),\n            array(\n                array(28425966, -5835433, -577090, -4697198, -14217555, 6870930, 7921550, -6567787, 26333140, 14267664),\n                array(-11067219, 11871231, 27385719, -10559544, -4585914, -11189312, 10004786, -8709488, -21761224, 8930324),\n                array(-21197785, -16396035, 25654216, -1725397, 12282012, 11008919, 1541940, 4757911, -26491501, -16408940),\n            ),\n            array(\n                array(13537262, -7759490, -20604840, 10961927, -5922820, -13218065, -13156584, 6217254, -15943699, 13814990),\n                array(-17422573, 15157790, 18705543, 29619, 24409717, -260476, 27361681, 9257833, -1956526, -1776914),\n                array(-25045300, -10191966, 15366585, 15166509, -13105086, 8423556, -29171540, 12361135, -18685978, 4578290),\n            ),\n            array(\n                array(24579768, 3711570, 1342322, -11180126, -27005135, 14124956, -22544529, 14074919, 21964432, 8235257),\n                array(-6528613, -2411497, 9442966, -5925588, 12025640, -1487420, -2981514, -1669206, 13006806, 2355433),\n                array(-16304899, -13605259, -6632427, -5142349, 16974359, -10911083, 27202044, 1719366, 1141648, -12796236),\n            ),\n            array(\n                array(-12863944, -13219986, -8318266, -11018091, -6810145, -4843894, 13475066, -3133972, 32674895, 13715045),\n                array(11423335, -5468059, 32344216, 8962751, 24989809, 9241752, -13265253, 16086212, -28740881, -15642093),\n                array(-1409668, 12530728, -6368726, 10847387, 19531186, -14132160, -11709148, 7791794, -27245943, 4383347),\n            ),\n        ),\n        array(\n            array(\n                array(-28970898, 5271447, -1266009, -9736989, -12455236, 16732599, -4862407, -4906449, 27193557, 6245191),\n                array(-15193956, 5362278, -1783893, 2695834, 4960227, 12840725, 23061898, 3260492, 22510453, 8577507),\n                array(-12632451, 11257346, -32692994, 13548177, -721004, 10879011, 31168030, 13952092, -29571492, -3635906),\n            ),\n            array(\n                array(3877321, -9572739, 32416692, 5405324, -11004407, -13656635, 3759769, 11935320, 5611860, 8164018),\n                array(-16275802, 14667797, 15906460, 12155291, -22111149, -9039718, 32003002, -8832289, 5773085, -8422109),\n                array(-23788118, -8254300, 1950875, 8937633, 18686727, 16459170, -905725, 12376320, 31632953, 190926),\n            ),\n            array(\n                array(-24593607, -16138885, -8423991, 13378746, 14162407, 6901328, -8288749, 4508564, -25341555, -3627528),\n                array(8884438, -5884009, 6023974, 10104341, -6881569, -4941533, 18722941, -14786005, -1672488, 827625),\n                array(-32720583, -16289296, -32503547, 7101210, 13354605, 2659080, -1800575, -14108036, -24878478, 1541286),\n            ),\n            array(\n                array(2901347, -1117687, 3880376, -10059388, -17620940, -3612781, -21802117, -3567481, 20456845, -1885033),\n                array(27019610, 12299467, -13658288, -1603234, -12861660, -4861471, -19540150, -5016058, 29439641, 15138866),\n                array(21536104, -6626420, -32447818, -10690208, -22408077, 5175814, -5420040, -16361163, 7779328, 109896),\n            ),\n            array(\n                array(30279744, 14648750, -8044871, 6425558, 13639621, -743509, 28698390, 12180118, 23177719, -554075),\n                array(26572847, 3405927, -31701700, 12890905, -19265668, 5335866, -6493768, 2378492, 4439158, -13279347),\n                array(-22716706, 3489070, -9225266, -332753, 18875722, -1140095, 14819434, -12731527, -17717757, -5461437),\n            ),\n            array(\n                array(-5056483, 16566551, 15953661, 3767752, -10436499, 15627060, -820954, 2177225, 8550082, -15114165),\n                array(-18473302, 16596775, -381660, 15663611, 22860960, 15585581, -27844109, -3582739, -23260460, -8428588),\n                array(-32480551, 15707275, -8205912, -5652081, 29464558, 2713815, -22725137, 15860482, -21902570, 1494193),\n            ),\n            array(\n                array(-19562091, -14087393, -25583872, -9299552, 13127842, 759709, 21923482, 16529112, 8742704, 12967017),\n                array(-28464899, 1553205, 32536856, -10473729, -24691605, -406174, -8914625, -2933896, -29903758, 15553883),\n                array(21877909, 3230008, 9881174, 10539357, -4797115, 2841332, 11543572, 14513274, 19375923, -12647961),\n            ),\n            array(\n                array(8832269, -14495485, 13253511, 5137575, 5037871, 4078777, 24880818, -6222716, 2862653, 9455043),\n                array(29306751, 5123106, 20245049, -14149889, 9592566, 8447059, -2077124, -2990080, 15511449, 4789663),\n                array(-20679756, 7004547, 8824831, -9434977, -4045704, -3750736, -5754762, 108893, 23513200, 16652362),\n            ),\n        ),\n        array(\n            array(\n                array(-33256173, 4144782, -4476029, -6579123, 10770039, -7155542, -6650416, -12936300, -18319198, 10212860),\n                array(2756081, 8598110, 7383731, -6859892, 22312759, -1105012, 21179801, 2600940, -9988298, -12506466),\n                array(-24645692, 13317462, -30449259, -15653928, 21365574, -10869657, 11344424, 864440, -2499677, -16710063),\n            ),\n            array(\n                array(-26432803, 6148329, -17184412, -14474154, 18782929, -275997, -22561534, 211300, 2719757, 4940997),\n                array(-1323882, 3911313, -6948744, 14759765, -30027150, 7851207, 21690126, 8518463, 26699843, 5276295),\n                array(-13149873, -6429067, 9396249, 365013, 24703301, -10488939, 1321586, 149635, -15452774, 7159369),\n            ),\n            array(\n                array(9987780, -3404759, 17507962, 9505530, 9731535, -2165514, 22356009, 8312176, 22477218, -8403385),\n                array(18155857, -16504990, 19744716, 9006923, 15154154, -10538976, 24256460, -4864995, -22548173, 9334109),\n                array(2986088, -4911893, 10776628, -3473844, 10620590, -7083203, -21413845, 14253545, -22587149, 536906),\n            ),\n            array(\n                array(4377756, 8115836, 24567078, 15495314, 11625074, 13064599, 7390551, 10589625, 10838060, -15420424),\n                array(-19342404, 867880, 9277171, -3218459, -14431572, -1986443, 19295826, -15796950, 6378260, 699185),\n                array(7895026, 4057113, -7081772, -13077756, -17886831, -323126, -716039, 15693155, -5045064, -13373962),\n            ),\n            array(\n                array(-7737563, -5869402, -14566319, -7406919, 11385654, 13201616, 31730678, -10962840, -3918636, -9669325),\n                array(10188286, -15770834, -7336361, 13427543, 22223443, 14896287, 30743455, 7116568, -21786507, 5427593),\n                array(696102, 13206899, 27047647, -10632082, 15285305, -9853179, 10798490, -4578720, 19236243, 12477404),\n            ),\n            array(\n                array(-11229439, 11243796, -17054270, -8040865, -788228, -8167967, -3897669, 11180504, -23169516, 7733644),\n                array(17800790, -14036179, -27000429, -11766671, 23887827, 3149671, 23466177, -10538171, 10322027, 15313801),\n                array(26246234, 11968874, 32263343, -5468728, 6830755, -13323031, -15794704, -101982, -24449242, 10890804),\n            ),\n            array(\n                array(-31365647, 10271363, -12660625, -6267268, 16690207, -13062544, -14982212, 16484931, 25180797, -5334884),\n                array(-586574, 10376444, -32586414, -11286356, 19801893, 10997610, 2276632, 9482883, 316878, 13820577),\n                array(-9882808, -4510367, -2115506, 16457136, -11100081, 11674996, 30756178, -7515054, 30696930, -3712849),\n            ),\n            array(\n                array(32988917, -9603412, 12499366, 7910787, -10617257, -11931514, -7342816, -9985397, -32349517, 7392473),\n                array(-8855661, 15927861, 9866406, -3649411, -2396914, -16655781, -30409476, -9134995, 25112947, -2926644),\n                array(-2504044, -436966, 25621774, -5678772, 15085042, -5479877, -24884878, -13526194, 5537438, -13914319),\n            ),\n        ),\n        array(\n            array(\n                array(-11225584, 2320285, -9584280, 10149187, -33444663, 5808648, -14876251, -1729667, 31234590, 6090599),\n                array(-9633316, 116426, 26083934, 2897444, -6364437, -2688086, 609721, 15878753, -6970405, -9034768),\n                array(-27757857, 247744, -15194774, -9002551, 23288161, -10011936, -23869595, 6503646, 20650474, 1804084),\n            ),\n            array(\n                array(-27589786, 15456424, 8972517, 8469608, 15640622, 4439847, 3121995, -10329713, 27842616, -202328),\n                array(-15306973, 2839644, 22530074, 10026331, 4602058, 5048462, 28248656, 5031932, -11375082, 12714369),\n                array(20807691, -7270825, 29286141, 11421711, -27876523, -13868230, -21227475, 1035546, -19733229, 12796920),\n            ),\n            array(\n                array(12076899, -14301286, -8785001, -11848922, -25012791, 16400684, -17591495, -12899438, 3480665, -15182815),\n                array(-32361549, 5457597, 28548107, 7833186, 7303070, -11953545, -24363064, -15921875, -33374054, 2771025),\n                array(-21389266, 421932, 26597266, 6860826, 22486084, -6737172, -17137485, -4210226, -24552282, 15673397),\n            ),\n            array(\n                array(-20184622, 2338216, 19788685, -9620956, -4001265, -8740893, -20271184, 4733254, 3727144, -12934448),\n                array(6120119, 814863, -11794402, -622716, 6812205, -15747771, 2019594, 7975683, 31123697, -10958981),\n                array(30069250, -11435332, 30434654, 2958439, 18399564, -976289, 12296869, 9204260, -16432438, 9648165),\n            ),\n            array(\n                array(32705432, -1550977, 30705658, 7451065, -11805606, 9631813, 3305266, 5248604, -26008332, -11377501),\n                array(17219865, 2375039, -31570947, -5575615, -19459679, 9219903, 294711, 15298639, 2662509, -16297073),\n                array(-1172927, -7558695, -4366770, -4287744, -21346413, -8434326, 32087529, -1222777, 32247248, -14389861),\n            ),\n            array(\n                array(14312628, 1221556, 17395390, -8700143, -4945741, -8684635, -28197744, -9637817, -16027623, -13378845),\n                array(-1428825, -9678990, -9235681, 6549687, -7383069, -468664, 23046502, 9803137, 17597934, 2346211),\n                array(18510800, 15337574, 26171504, 981392, -22241552, 7827556, -23491134, -11323352, 3059833, -11782870),\n            ),\n            array(\n                array(10141598, 6082907, 17829293, -1947643, 9830092, 13613136, -25556636, -5544586, -33502212, 3592096),\n                array(33114168, -15889352, -26525686, -13343397, 33076705, 8716171, 1151462, 1521897, -982665, -6837803),\n                array(-32939165, -4255815, 23947181, -324178, -33072974, -12305637, -16637686, 3891704, 26353178, 693168),\n            ),\n            array(\n                array(30374239, 1595580, -16884039, 13186931, 4600344, 406904, 9585294, -400668, 31375464, 14369965),\n                array(-14370654, -7772529, 1510301, 6434173, -18784789, -6262728, 32732230, -13108839, 17901441, 16011505),\n                array(18171223, -11934626, -12500402, 15197122, -11038147, -15230035, -19172240, -16046376, 8764035, 12309598),\n            ),\n        ),\n        array(\n            array(\n                array(5975908, -5243188, -19459362, -9681747, -11541277, 14015782, -23665757, 1228319, 17544096, -10593782),\n                array(5811932, -1715293, 3442887, -2269310, -18367348, -8359541, -18044043, -15410127, -5565381, 12348900),\n                array(-31399660, 11407555, 25755363, 6891399, -3256938, 14872274, -24849353, 8141295, -10632534, -585479),\n            ),\n            array(\n                array(-12675304, 694026, -5076145, 13300344, 14015258, -14451394, -9698672, -11329050, 30944593, 1130208),\n                array(8247766, -6710942, -26562381, -7709309, -14401939, -14648910, 4652152, 2488540, 23550156, -271232),\n                array(17294316, -3788438, 7026748, 15626851, 22990044, 113481, 2267737, -5908146, -408818, -137719),\n            ),\n            array(\n                array(16091085, -16253926, 18599252, 7340678, 2137637, -1221657, -3364161, 14550936, 3260525, -7166271),\n                array(-4910104, -13332887, 18550887, 10864893, -16459325, -7291596, -23028869, -13204905, -12748722, 2701326),\n                array(-8574695, 16099415, 4629974, -16340524, -20786213, -6005432, -10018363, 9276971, 11329923, 1862132),\n            ),\n            array(\n                array(14763076, -15903608, -30918270, 3689867, 3511892, 10313526, -21951088, 12219231, -9037963, -940300),\n                array(8894987, -3446094, 6150753, 3013931, 301220, 15693451, -31981216, -2909717, -15438168, 11595570),\n                array(15214962, 3537601, -26238722, -14058872, 4418657, -15230761, 13947276, 10730794, -13489462, -4363670),\n            ),\n            array(\n                array(-2538306, 7682793, 32759013, 263109, -29984731, -7955452, -22332124, -10188635, 977108, 699994),\n                array(-12466472, 4195084, -9211532, 550904, -15565337, 12917920, 19118110, -439841, -30534533, -14337913),\n                array(31788461, -14507657, 4799989, 7372237, 8808585, -14747943, 9408237, -10051775, 12493932, -5409317),\n            ),\n            array(\n                array(-25680606, 5260744, -19235809, -6284470, -3695942, 16566087, 27218280, 2607121, 29375955, 6024730),\n                array(842132, -2794693, -4763381, -8722815, 26332018, -12405641, 11831880, 6985184, -9940361, 2854096),\n                array(-4847262, -7969331, 2516242, -5847713, 9695691, -7221186, 16512645, 960770, 12121869, 16648078),\n            ),\n            array(\n                array(-15218652, 14667096, -13336229, 2013717, 30598287, -464137, -31504922, -7882064, 20237806, 2838411),\n                array(-19288047, 4453152, 15298546, -16178388, 22115043, -15972604, 12544294, -13470457, 1068881, -12499905),\n                array(-9558883, -16518835, 33238498, 13506958, 30505848, -1114596, -8486907, -2630053, 12521378, 4845654),\n            ),\n            array(\n                array(-28198521, 10744108, -2958380, 10199664, 7759311, -13088600, 3409348, -873400, -6482306, -12885870),\n                array(-23561822, 6230156, -20382013, 10655314, -24040585, -11621172, 10477734, -1240216, -3113227, 13974498),\n                array(12966261, 15550616, -32038948, -1615346, 21025980, -629444, 5642325, 7188737, 18895762, 12629579),\n            ),\n        ),\n        array(\n            array(\n                array(14741879, -14946887, 22177208, -11721237, 1279741, 8058600, 11758140, 789443, 32195181, 3895677),\n                array(10758205, 15755439, -4509950, 9243698, -4879422, 6879879, -2204575, -3566119, -8982069, 4429647),\n                array(-2453894, 15725973, -20436342, -10410672, -5803908, -11040220, -7135870, -11642895, 18047436, -15281743),\n            ),\n            array(\n                array(-25173001, -11307165, 29759956, 11776784, -22262383, -15820455, 10993114, -12850837, -17620701, -9408468),\n                array(21987233, 700364, -24505048, 14972008, -7774265, -5718395, 32155026, 2581431, -29958985, 8773375),\n                array(-25568350, 454463, -13211935, 16126715, 25240068, 8594567, 20656846, 12017935, -7874389, -13920155),\n            ),\n            array(\n                array(6028182, 6263078, -31011806, -11301710, -818919, 2461772, -31841174, -5468042, -1721788, -2776725),\n                array(-12278994, 16624277, 987579, -5922598, 32908203, 1248608, 7719845, -4166698, 28408820, 6816612),\n                array(-10358094, -8237829, 19549651, -12169222, 22082623, 16147817, 20613181, 13982702, -10339570, 5067943),\n            ),\n            array(\n                array(-30505967, -3821767, 12074681, 13582412, -19877972, 2443951, -19719286, 12746132, 5331210, -10105944),\n                array(30528811, 3601899, -1957090, 4619785, -27361822, -15436388, 24180793, -12570394, 27679908, -1648928),\n                array(9402404, -13957065, 32834043, 10838634, -26580150, -13237195, 26653274, -8685565, 22611444, -12715406),\n            ),\n            array(\n                array(22190590, 1118029, 22736441, 15130463, -30460692, -5991321, 19189625, -4648942, 4854859, 6622139),\n                array(-8310738, -2953450, -8262579, -3388049, -10401731, -271929, 13424426, -3567227, 26404409, 13001963),\n                array(-31241838, -15415700, -2994250, 8939346, 11562230, -12840670, -26064365, -11621720, -15405155, 11020693),\n            ),\n            array(\n                array(1866042, -7949489, -7898649, -10301010, 12483315, 13477547, 3175636, -12424163, 28761762, 1406734),\n                array(-448555, -1777666, 13018551, 3194501, -9580420, -11161737, 24760585, -4347088, 25577411, -13378680),\n                array(-24290378, 4759345, -690653, -1852816, 2066747, 10693769, -29595790, 9884936, -9368926, 4745410),\n            ),\n            array(\n                array(-9141284, 6049714, -19531061, -4341411, -31260798, 9944276, -15462008, -11311852, 10931924, -11931931),\n                array(-16561513, 14112680, -8012645, 4817318, -8040464, -11414606, -22853429, 10856641, -20470770, 13434654),\n                array(22759489, -10073434, -16766264, -1871422, 13637442, -10168091, 1765144, -12654326, 28445307, -5364710),\n            ),\n            array(\n                array(29875063, 12493613, 2795536, -3786330, 1710620, 15181182, -10195717, -8788675, 9074234, 1167180),\n                array(-26205683, 11014233, -9842651, -2635485, -26908120, 7532294, -18716888, -9535498, 3843903, 9367684),\n                array(-10969595, -6403711, 9591134, 9582310, 11349256, 108879, 16235123, 8601684, -139197, 4242895),\n            ),\n        ),\n        array(\n            array(\n                array(22092954, -13191123, -2042793, -11968512, 32186753, -11517388, -6574341, 2470660, -27417366, 16625501),\n                array(-11057722, 3042016, 13770083, -9257922, 584236, -544855, -7770857, 2602725, -27351616, 14247413),\n                array(6314175, -10264892, -32772502, 15957557, -10157730, 168750, -8618807, 14290061, 27108877, -1180880),\n            ),\n            array(\n                array(-8586597, -7170966, 13241782, 10960156, -32991015, -13794596, 33547976, -11058889, -27148451, 981874),\n                array(22833440, 9293594, -32649448, -13618667, -9136966, 14756819, -22928859, -13970780, -10479804, -16197962),\n                array(-7768587, 3326786, -28111797, 10783824, 19178761, 14905060, 22680049, 13906969, -15933690, 3797899),\n            ),\n            array(\n                array(21721356, -4212746, -12206123, 9310182, -3882239, -13653110, 23740224, -2709232, 20491983, -8042152),\n                array(9209270, -15135055, -13256557, -6167798, -731016, 15289673, 25947805, 15286587, 30997318, -6703063),\n                array(7392032, 16618386, 23946583, -8039892, -13265164, -1533858, -14197445, -2321576, 17649998, -250080),\n            ),\n            array(\n                array(-9301088, -14193827, 30609526, -3049543, -25175069, -1283752, -15241566, -9525724, -2233253, 7662146),\n                array(-17558673, 1763594, -33114336, 15908610, -30040870, -12174295, 7335080, -8472199, -3174674, 3440183),\n                array(-19889700, -5977008, -24111293, -9688870, 10799743, -16571957, 40450, -4431835, 4862400, 1133),\n            ),\n            array(\n                array(-32856209, -7873957, -5422389, 14860950, -16319031, 7956142, 7258061, 311861, -30594991, -7379421),\n                array(-3773428, -1565936, 28985340, 7499440, 24445838, 9325937, 29727763, 16527196, 18278453, 15405622),\n                array(-4381906, 8508652, -19898366, -3674424, -5984453, 15149970, -13313598, 843523, -21875062, 13626197),\n            ),\n            array(\n                array(2281448, -13487055, -10915418, -2609910, 1879358, 16164207, -10783882, 3953792, 13340839, 15928663),\n                array(31727126, -7179855, -18437503, -8283652, 2875793, -16390330, -25269894, -7014826, -23452306, 5964753),\n                array(4100420, -5959452, -17179337, 6017714, -18705837, 12227141, -26684835, 11344144, 2538215, -7570755),\n            ),\n            array(\n                array(-9433605, 6123113, 11159803, -2156608, 30016280, 14966241, -20474983, 1485421, -629256, -15958862),\n                array(-26804558, 4260919, 11851389, 9658551, -32017107, 16367492, -20205425, -13191288, 11659922, -11115118),\n                array(26180396, 10015009, -30844224, -8581293, 5418197, 9480663, 2231568, -10170080, 33100372, -1306171),\n            ),\n            array(\n                array(15121113, -5201871, -10389905, 15427821, -27509937, -15992507, 21670947, 4486675, -5931810, -14466380),\n                array(16166486, -9483733, -11104130, 6023908, -31926798, -1364923, 2340060, -16254968, -10735770, -10039824),\n                array(28042865, -3557089, -12126526, 12259706, -3717498, -6945899, 6766453, -8689599, 18036436, 5803270),\n            ),\n        ),\n        array(\n            array(\n                array(-817581, 6763912, 11803561, 1585585, 10958447, -2671165, 23855391, 4598332, -6159431, -14117438),\n                array(-31031306, -14256194, 17332029, -2383520, 31312682, -5967183, 696309, 50292, -20095739, 11763584),\n                array(-594563, -2514283, -32234153, 12643980, 12650761, 14811489, 665117, -12613632, -19773211, -10713562),\n            ),\n            array(\n                array(30464590, -11262872, -4127476, -12734478, 19835327, -7105613, -24396175, 2075773, -17020157, 992471),\n                array(18357185, -6994433, 7766382, 16342475, -29324918, 411174, 14578841, 8080033, -11574335, -10601610),\n                array(19598397, 10334610, 12555054, 2555664, 18821899, -10339780, 21873263, 16014234, 26224780, 16452269),\n            ),\n            array(\n                array(-30223925, 5145196, 5944548, 16385966, 3976735, 2009897, -11377804, -7618186, -20533829, 3698650),\n                array(14187449, 3448569, -10636236, -10810935, -22663880, -3433596, 7268410, -10890444, 27394301, 12015369),\n                array(19695761, 16087646, 28032085, 12999827, 6817792, 11427614, 20244189, -1312777, -13259127, -3402461),\n            ),\n            array(\n                array(30860103, 12735208, -1888245, -4699734, -16974906, 2256940, -8166013, 12298312, -8550524, -10393462),\n                array(-5719826, -11245325, -1910649, 15569035, 26642876, -7587760, -5789354, -15118654, -4976164, 12651793),\n                array(-2848395, 9953421, 11531313, -5282879, 26895123, -12697089, -13118820, -16517902, 9768698, -2533218),\n            ),\n            array(\n                array(-24719459, 1894651, -287698, -4704085, 15348719, -8156530, 32767513, 12765450, 4940095, 10678226),\n                array(18860224, 15980149, -18987240, -1562570, -26233012, -11071856, -7843882, 13944024, -24372348, 16582019),\n                array(-15504260, 4970268, -29893044, 4175593, -20993212, -2199756, -11704054, 15444560, -11003761, 7989037),\n            ),\n            array(\n                array(31490452, 5568061, -2412803, 2182383, -32336847, 4531686, -32078269, 6200206, -19686113, -14800171),\n                array(-17308668, -15879940, -31522777, -2831, -32887382, 16375549, 8680158, -16371713, 28550068, -6857132),\n                array(-28126887, -5688091, 16837845, -1820458, -6850681, 12700016, -30039981, 4364038, 1155602, 5988841),\n            ),\n            array(\n                array(21890435, -13272907, -12624011, 12154349, -7831873, 15300496, 23148983, -4470481, 24618407, 8283181),\n                array(-33136107, -10512751, 9975416, 6841041, -31559793, 16356536, 3070187, -7025928, 1466169, 10740210),\n                array(-1509399, -15488185, -13503385, -10655916, 32799044, 909394, -13938903, -5779719, -32164649, -15327040),\n            ),\n            array(\n                array(3960823, -14267803, -28026090, -15918051, -19404858, 13146868, 15567327, 951507, -3260321, -573935),\n                array(24740841, 5052253, -30094131, 8961361, 25877428, 6165135, -24368180, 14397372, -7380369, -6144105),\n                array(-28888365, 3510803, -28103278, -1158478, -11238128, -10631454, -15441463, -14453128, -1625486, -6494814),\n            ),\n        ),\n        array(\n            array(\n                array(793299, -9230478, 8836302, -6235707, -27360908, -2369593, 33152843, -4885251, -9906200, -621852),\n                array(5666233, 525582, 20782575, -8038419, -24538499, 14657740, 16099374, 1468826, -6171428, -15186581),\n                array(-4859255, -3779343, -2917758, -6748019, 7778750, 11688288, -30404353, -9871238, -1558923, -9863646),\n            ),\n            array(\n                array(10896332, -7719704, 824275, 472601, -19460308, 3009587, 25248958, 14783338, -30581476, -15757844),\n                array(10566929, 12612572, -31944212, 11118703, -12633376, 12362879, 21752402, 8822496, 24003793, 14264025),\n                array(27713862, -7355973, -11008240, 9227530, 27050101, 2504721, 23886875, -13117525, 13958495, -5732453),\n            ),\n            array(\n                array(-23481610, 4867226, -27247128, 3900521, 29838369, -8212291, -31889399, -10041781, 7340521, -15410068),\n                array(4646514, -8011124, -22766023, -11532654, 23184553, 8566613, 31366726, -1381061, -15066784, -10375192),\n                array(-17270517, 12723032, -16993061, 14878794, 21619651, -6197576, 27584817, 3093888, -8843694, 3849921),\n            ),\n            array(\n                array(-9064912, 2103172, 25561640, -15125738, -5239824, 9582958, 32477045, -9017955, 5002294, -15550259),\n                array(-12057553, -11177906, 21115585, -13365155, 8808712, -12030708, 16489530, 13378448, -25845716, 12741426),\n                array(-5946367, 10645103, -30911586, 15390284, -3286982, -7118677, 24306472, 15852464, 28834118, -7646072),\n            ),\n            array(\n                array(-17335748, -9107057, -24531279, 9434953, -8472084, -583362, -13090771, 455841, 20461858, 5491305),\n                array(13669248, -16095482, -12481974, -10203039, -14569770, -11893198, -24995986, 11293807, -28588204, -9421832),\n                array(28497928, 6272777, -33022994, 14470570, 8906179, -1225630, 18504674, -14165166, 29867745, -8795943),\n            ),\n            array(\n                array(-16207023, 13517196, -27799630, -13697798, 24009064, -6373891, -6367600, -13175392, 22853429, -4012011),\n                array(24191378, 16712145, -13931797, 15217831, 14542237, 1646131, 18603514, -11037887, 12876623, -2112447),\n                array(17902668, 4518229, -411702, -2829247, 26878217, 5258055, -12860753, 608397, 16031844, 3723494),\n            ),\n            array(\n                array(-28632773, 12763728, -20446446, 7577504, 33001348, -13017745, 17558842, -7872890, 23896954, -4314245),\n                array(-20005381, -12011952, 31520464, 605201, 2543521, 5991821, -2945064, 7229064, -9919646, -8826859),\n                array(28816045, 298879, -28165016, -15920938, 19000928, -1665890, -12680833, -2949325, -18051778, -2082915),\n            ),\n            array(\n                array(16000882, -344896, 3493092, -11447198, -29504595, -13159789, 12577740, 16041268, -19715240, 7847707),\n                array(10151868, 10572098, 27312476, 7922682, 14825339, 4723128, -32855931, -6519018, -10020567, 3852848),\n                array(-11430470, 15697596, -21121557, -4420647, 5386314, 15063598, 16514493, -15932110, 29330899, -15076224),\n            ),\n        ),\n        array(\n            array(\n                array(-25499735, -4378794, -15222908, -6901211, 16615731, 2051784, 3303702, 15490, -27548796, 12314391),\n                array(15683520, -6003043, 18109120, -9980648, 15337968, -5997823, -16717435, 15921866, 16103996, -3731215),\n                array(-23169824, -10781249, 13588192, -1628807, -3798557, -1074929, -19273607, 5402699, -29815713, -9841101),\n            ),\n            array(\n                array(23190676, 2384583, -32714340, 3462154, -29903655, -1529132, -11266856, 8911517, -25205859, 2739713),\n                array(21374101, -3554250, -33524649, 9874411, 15377179, 11831242, -33529904, 6134907, 4931255, 11987849),\n                array(-7732, -2978858, -16223486, 7277597, 105524, -322051, -31480539, 13861388, -30076310, 10117930),\n            ),\n            array(\n                array(-29501170, -10744872, -26163768, 13051539, -25625564, 5089643, -6325503, 6704079, 12890019, 15728940),\n                array(-21972360, -11771379, -951059, -4418840, 14704840, 2695116, 903376, -10428139, 12885167, 8311031),\n                array(-17516482, 5352194, 10384213, -13811658, 7506451, 13453191, 26423267, 4384730, 1888765, -5435404),\n            ),\n            array(\n                array(-25817338, -3107312, -13494599, -3182506, 30896459, -13921729, -32251644, -12707869, -19464434, -3340243),\n                array(-23607977, -2665774, -526091, 4651136, 5765089, 4618330, 6092245, 14845197, 17151279, -9854116),\n                array(-24830458, -12733720, -15165978, 10367250, -29530908, -265356, 22825805, -7087279, -16866484, 16176525),\n            ),\n            array(\n                array(-23583256, 6564961, 20063689, 3798228, -4740178, 7359225, 2006182, -10363426, -28746253, -10197509),\n                array(-10626600, -4486402, -13320562, -5125317, 3432136, -6393229, 23632037, -1940610, 32808310, 1099883),\n                array(15030977, 5768825, -27451236, -2887299, -6427378, -15361371, -15277896, -6809350, 2051441, -15225865),\n            ),\n            array(\n                array(-3362323, -7239372, 7517890, 9824992, 23555850, 295369, 5148398, -14154188, -22686354, 16633660),\n                array(4577086, -16752288, 13249841, -15304328, 19958763, -14537274, 18559670, -10759549, 8402478, -9864273),\n                array(-28406330, -1051581, -26790155, -907698, -17212414, -11030789, 9453451, -14980072, 17983010, 9967138),\n            ),\n            array(\n                array(-25762494, 6524722, 26585488, 9969270, 24709298, 1220360, -1677990, 7806337, 17507396, 3651560),\n                array(-10420457, -4118111, 14584639, 15971087, -15768321, 8861010, 26556809, -5574557, -18553322, -11357135),\n                array(2839101, 14284142, 4029895, 3472686, 14402957, 12689363, -26642121, 8459447, -5605463, -7621941),\n            ),\n            array(\n                array(-4839289, -3535444, 9744961, 2871048, 25113978, 3187018, -25110813, -849066, 17258084, -7977739),\n                array(18164541, -10595176, -17154882, -1542417, 19237078, -9745295, 23357533, -15217008, 26908270, 12150756),\n                array(-30264870, -7647865, 5112249, -7036672, -1499807, -6974257, 43168, -5537701, -32302074, 16215819),\n            ),\n        ),\n        array(\n            array(\n                array(-6898905, 9824394, -12304779, -4401089, -31397141, -6276835, 32574489, 12532905, -7503072, -8675347),\n                array(-27343522, -16515468, -27151524, -10722951, 946346, 16291093, 254968, 7168080, 21676107, -1943028),\n                array(21260961, -8424752, -16831886, -11920822, -23677961, 3968121, -3651949, -6215466, -3556191, -7913075),\n            ),\n            array(\n                array(16544754, 13250366, -16804428, 15546242, -4583003, 12757258, -2462308, -8680336, -18907032, -9662799),\n                array(-2415239, -15577728, 18312303, 4964443, -15272530, -12653564, 26820651, 16690659, 25459437, -4564609),\n                array(-25144690, 11425020, 28423002, -11020557, -6144921, -15826224, 9142795, -2391602, -6432418, -1644817),\n            ),\n            array(\n                array(-23104652, 6253476, 16964147, -3768872, -25113972, -12296437, -27457225, -16344658, 6335692, 7249989),\n                array(-30333227, 13979675, 7503222, -12368314, -11956721, -4621693, -30272269, 2682242, 25993170, -12478523),\n                array(4364628, 5930691, 32304656, -10044554, -8054781, 15091131, 22857016, -10598955, 31820368, 15075278),\n            ),\n            array(\n                array(31879134, -8918693, 17258761, 90626, -8041836, -4917709, 24162788, -9650886, -17970238, 12833045),\n                array(19073683, 14851414, -24403169, -11860168, 7625278, 11091125, -19619190, 2074449, -9413939, 14905377),\n                array(24483667, -11935567, -2518866, -11547418, -1553130, 15355506, -25282080, 9253129, 27628530, -7555480),\n            ),\n            array(\n                array(17597607, 8340603, 19355617, 552187, 26198470, -3176583, 4593324, -9157582, -14110875, 15297016),\n                array(510886, 14337390, -31785257, 16638632, 6328095, 2713355, -20217417, -11864220, 8683221, 2921426),\n                array(18606791, 11874196, 27155355, -5281482, -24031742, 6265446, -25178240, -1278924, 4674690, 13890525),\n            ),\n            array(\n                array(13609624, 13069022, -27372361, -13055908, 24360586, 9592974, 14977157, 9835105, 4389687, 288396),\n                array(9922506, -519394, 13613107, 5883594, -18758345, -434263, -12304062, 8317628, 23388070, 16052080),\n                array(12720016, 11937594, -31970060, -5028689, 26900120, 8561328, -20155687, -11632979, -14754271, -10812892),\n            ),\n            array(\n                array(15961858, 14150409, 26716931, -665832, -22794328, 13603569, 11829573, 7467844, -28822128, 929275),\n                array(11038231, -11582396, -27310482, -7316562, -10498527, -16307831, -23479533, -9371869, -21393143, 2465074),\n                array(20017163, -4323226, 27915242, 1529148, 12396362, 15675764, 13817261, -9658066, 2463391, -4622140),\n            ),\n            array(\n                array(-16358878, -12663911, -12065183, 4996454, -1256422, 1073572, 9583558, 12851107, 4003896, 12673717),\n                array(-1731589, -15155870, -3262930, 16143082, 19294135, 13385325, 14741514, -9103726, 7903886, 2348101),\n                array(24536016, -16515207, 12715592, -3862155, 1511293, 10047386, -3842346, -7129159, -28377538, 10048127),\n            ),\n        ),\n        array(\n            array(\n                array(-12622226, -6204820, 30718825, 2591312, -10617028, 12192840, 18873298, -7297090, -32297756, 15221632),\n                array(-26478122, -11103864, 11546244, -1852483, 9180880, 7656409, -21343950, 2095755, 29769758, 6593415),\n                array(-31994208, -2907461, 4176912, 3264766, 12538965, -868111, 26312345, -6118678, 30958054, 8292160),\n            ),\n            array(\n                array(31429822, -13959116, 29173532, 15632448, 12174511, -2760094, 32808831, 3977186, 26143136, -3148876),\n                array(22648901, 1402143, -22799984, 13746059, 7936347, 365344, -8668633, -1674433, -3758243, -2304625),\n                array(-15491917, 8012313, -2514730, -12702462, -23965846, -10254029, -1612713, -1535569, -16664475, 8194478),\n            ),\n            array(\n                array(27338066, -7507420, -7414224, 10140405, -19026427, -6589889, 27277191, 8855376, 28572286, 3005164),\n                array(26287124, 4821776, 25476601, -4145903, -3764513, -15788984, -18008582, 1182479, -26094821, -13079595),\n                array(-7171154, 3178080, 23970071, 6201893, -17195577, -4489192, -21876275, -13982627, 32208683, -1198248),\n            ),\n            array(\n                array(-16657702, 2817643, -10286362, 14811298, 6024667, 13349505, -27315504, -10497842, -27672585, -11539858),\n                array(15941029, -9405932, -21367050, 8062055, 31876073, -238629, -15278393, -1444429, 15397331, -4130193),\n                array(8934485, -13485467, -23286397, -13423241, -32446090, 14047986, 31170398, -1441021, -27505566, 15087184),\n            ),\n            array(\n                array(-18357243, -2156491, 24524913, -16677868, 15520427, -6360776, -15502406, 11461896, 16788528, -5868942),\n                array(-1947386, 16013773, 21750665, 3714552, -17401782, -16055433, -3770287, -10323320, 31322514, -11615635),\n                array(21426655, -5650218, -13648287, -5347537, -28812189, -4920970, -18275391, -14621414, 13040862, -12112948),\n            ),\n            array(\n                array(11293895, 12478086, -27136401, 15083750, -29307421, 14748872, 14555558, -13417103, 1613711, 4896935),\n                array(-25894883, 15323294, -8489791, -8057900, 25967126, -13425460, 2825960, -4897045, -23971776, -11267415),\n                array(-15924766, -5229880, -17443532, 6410664, 3622847, 10243618, 20615400, 12405433, -23753030, -8436416),\n            ),\n            array(\n                array(-7091295, 12556208, -20191352, 9025187, -17072479, 4333801, 4378436, 2432030, 23097949, -566018),\n                array(4565804, -16025654, 20084412, -7842817, 1724999, 189254, 24767264, 10103221, -18512313, 2424778),\n                array(366633, -11976806, 8173090, -6890119, 30788634, 5745705, -7168678, 1344109, -3642553, 12412659),\n            ),\n            array(\n                array(-24001791, 7690286, 14929416, -168257, -32210835, -13412986, 24162697, -15326504, -3141501, 11179385),\n                array(18289522, -14724954, 8056945, 16430056, -21729724, 7842514, -6001441, -1486897, -18684645, -11443503),\n                array(476239, 6601091, -6152790, -9723375, 17503545, -4863900, 27672959, 13403813, 11052904, 5219329),\n            ),\n        ),\n        array(\n            array(\n                array(20678546, -8375738, -32671898, 8849123, -5009758, 14574752, 31186971, -3973730, 9014762, -8579056),\n                array(-13644050, -10350239, -15962508, 5075808, -1514661, -11534600, -33102500, 9160280, 8473550, -3256838),\n                array(24900749, 14435722, 17209120, -15292541, -22592275, 9878983, -7689309, -16335821, -24568481, 11788948),\n            ),\n            array(\n                array(-3118155, -11395194, -13802089, 14797441, 9652448, -6845904, -20037437, 10410733, -24568470, -1458691),\n                array(-15659161, 16736706, -22467150, 10215878, -9097177, 7563911, 11871841, -12505194, -18513325, 8464118),\n                array(-23400612, 8348507, -14585951, -861714, -3950205, -6373419, 14325289, 8628612, 33313881, -8370517),\n            ),\n            array(\n                array(-20186973, -4967935, 22367356, 5271547, -1097117, -4788838, -24805667, -10236854, -8940735, -5818269),\n                array(-6948785, -1795212, -32625683, -16021179, 32635414, -7374245, 15989197, -12838188, 28358192, -4253904),\n                array(-23561781, -2799059, -32351682, -1661963, -9147719, 10429267, -16637684, 4072016, -5351664, 5596589),\n            ),\n            array(\n                array(-28236598, -3390048, 12312896, 6213178, 3117142, 16078565, 29266239, 2557221, 1768301, 15373193),\n                array(-7243358, -3246960, -4593467, -7553353, -127927, -912245, -1090902, -4504991, -24660491, 3442910),\n                array(-30210571, 5124043, 14181784, 8197961, 18964734, -11939093, 22597931, 7176455, -18585478, 13365930),\n            ),\n            array(\n                array(-7877390, -1499958, 8324673, 4690079, 6261860, 890446, 24538107, -8570186, -9689599, -3031667),\n                array(25008904, -10771599, -4305031, -9638010, 16265036, 15721635, 683793, -11823784, 15723479, -15163481),\n                array(-9660625, 12374379, -27006999, -7026148, -7724114, -12314514, 11879682, 5400171, 519526, -1235876),\n            ),\n            array(\n                array(22258397, -16332233, -7869817, 14613016, -22520255, -2950923, -20353881, 7315967, 16648397, 7605640),\n                array(-8081308, -8464597, -8223311, 9719710, 19259459, -15348212, 23994942, -5281555, -9468848, 4763278),\n                array(-21699244, 9220969, -15730624, 1084137, -25476107, -2852390, 31088447, -7764523, -11356529, 728112),\n            ),\n            array(\n                array(26047220, -11751471, -6900323, -16521798, 24092068, 9158119, -4273545, -12555558, -29365436, -5498272),\n                array(17510331, -322857, 5854289, 8403524, 17133918, -3112612, -28111007, 12327945, 10750447, 10014012),\n                array(-10312768, 3936952, 9156313, -8897683, 16498692, -994647, -27481051, -666732, 3424691, 7540221),\n            ),\n            array(\n                array(30322361, -6964110, 11361005, -4143317, 7433304, 4989748, -7071422, -16317219, -9244265, 15258046),\n                array(13054562, -2779497, 19155474, 469045, -12482797, 4566042, 5631406, 2711395, 1062915, -5136345),\n                array(-19240248, -11254599, -29509029, -7499965, -5835763, 13005411, -6066489, 12194497, 32960380, 1459310),\n            ),\n        ),\n        array(\n            array(\n                array(19852034, 7027924, 23669353, 10020366, 8586503, -6657907, 394197, -6101885, 18638003, -11174937),\n                array(31395534, 15098109, 26581030, 8030562, -16527914, -5007134, 9012486, -7584354, -6643087, -5442636),\n                array(-9192165, -2347377, -1997099, 4529534, 25766844, 607986, -13222, 9677543, -32294889, -6456008),\n            ),\n            array(\n                array(-2444496, -149937, 29348902, 8186665, 1873760, 12489863, -30934579, -7839692, -7852844, -8138429),\n                array(-15236356, -15433509, 7766470, 746860, 26346930, -10221762, -27333451, 10754588, -9431476, 5203576),\n                array(31834314, 14135496, -770007, 5159118, 20917671, -16768096, -7467973, -7337524, 31809243, 7347066),\n            ),\n            array(\n                array(-9606723, -11874240, 20414459, 13033986, 13716524, -11691881, 19797970, -12211255, 15192876, -2087490),\n                array(-12663563, -2181719, 1168162, -3804809, 26747877, -14138091, 10609330, 12694420, 33473243, -13382104),\n                array(33184999, 11180355, 15832085, -11385430, -1633671, 225884, 15089336, -11023903, -6135662, 14480053),\n            ),\n            array(\n                array(31308717, -5619998, 31030840, -1897099, 15674547, -6582883, 5496208, 13685227, 27595050, 8737275),\n                array(-20318852, -15150239, 10933843, -16178022, 8335352, -7546022, -31008351, -12610604, 26498114, 66511),\n                array(22644454, -8761729, -16671776, 4884562, -3105614, -13559366, 30540766, -4286747, -13327787, -7515095),\n            ),\n            array(\n                array(-28017847, 9834845, 18617207, -2681312, -3401956, -13307506, 8205540, 13585437, -17127465, 15115439),\n                array(23711543, -672915, 31206561, -8362711, 6164647, -9709987, -33535882, -1426096, 8236921, 16492939),\n                array(-23910559, -13515526, -26299483, -4503841, 25005590, -7687270, 19574902, 10071562, 6708380, -6222424),\n            ),\n            array(\n                array(2101391, -4930054, 19702731, 2367575, -15427167, 1047675, 5301017, 9328700, 29955601, -11678310),\n                array(3096359, 9271816, -21620864, -15521844, -14847996, -7592937, -25892142, -12635595, -9917575, 6216608),\n                array(-32615849, 338663, -25195611, 2510422, -29213566, -13820213, 24822830, -6146567, -26767480, 7525079),\n            ),\n            array(\n                array(-23066649, -13985623, 16133487, -7896178, -3389565, 778788, -910336, -2782495, -19386633, 11994101),\n                array(21691500, -13624626, -641331, -14367021, 3285881, -3483596, -25064666, 9718258, -7477437, 13381418),\n                array(18445390, -4202236, 14979846, 11622458, -1727110, -3582980, 23111648, -6375247, 28535282, 15779576),\n            ),\n            array(\n                array(30098053, 3089662, -9234387, 16662135, -21306940, 11308411, -14068454, 12021730, 9955285, -16303356),\n                array(9734894, -14576830, -7473633, -9138735, 2060392, 11313496, -18426029, 9924399, 20194861, 13380996),\n                array(-26378102, -7965207, -22167821, 15789297, -18055342, -6168792, -1984914, 15707771, 26342023, 10146099),\n            ),\n        ),\n        array(\n            array(\n                array(-26016874, -219943, 21339191, -41388, 19745256, -2878700, -29637280, 2227040, 21612326, -545728),\n                array(-13077387, 1184228, 23562814, -5970442, -20351244, -6348714, 25764461, 12243797, -20856566, 11649658),\n                array(-10031494, 11262626, 27384172, 2271902, 26947504, -15997771, 39944, 6114064, 33514190, 2333242),\n            ),\n            array(\n                array(-21433588, -12421821, 8119782, 7219913, -21830522, -9016134, -6679750, -12670638, 24350578, -13450001),\n                array(-4116307, -11271533, -23886186, 4843615, -30088339, 690623, -31536088, -10406836, 8317860, 12352766),\n                array(18200138, -14475911, -33087759, -2696619, -23702521, -9102511, -23552096, -2287550, 20712163, 6719373),\n            ),\n            array(\n                array(26656208, 6075253, -7858556, 1886072, -28344043, 4262326, 11117530, -3763210, 26224235, -3297458),\n                array(-17168938, -14854097, -3395676, -16369877, -19954045, 14050420, 21728352, 9493610, 18620611, -16428628),\n                array(-13323321, 13325349, 11432106, 5964811, 18609221, 6062965, -5269471, -9725556, -30701573, -16479657),\n            ),\n            array(\n                array(-23860538, -11233159, 26961357, 1640861, -32413112, -16737940, 12248509, -5240639, 13735342, 1934062),\n                array(25089769, 6742589, 17081145, -13406266, 21909293, -16067981, -15136294, -3765346, -21277997, 5473616),\n                array(31883677, -7961101, 1083432, -11572403, 22828471, 13290673, -7125085, 12469656, 29111212, -5451014),\n            ),\n            array(\n                array(24244947, -15050407, -26262976, 2791540, -14997599, 16666678, 24367466, 6388839, -10295587, 452383),\n                array(-25640782, -3417841, 5217916, 16224624, 19987036, -4082269, -24236251, -5915248, 15766062, 8407814),\n                array(-20406999, 13990231, 15495425, 16395525, 5377168, 15166495, -8917023, -4388953, -8067909, 2276718),\n            ),\n            array(\n                array(30157918, 12924066, -17712050, 9245753, 19895028, 3368142, -23827587, 5096219, 22740376, -7303417),\n                array(2041139, -14256350, 7783687, 13876377, -25946985, -13352459, 24051124, 13742383, -15637599, 13295222),\n                array(33338237, -8505733, 12532113, 7977527, 9106186, -1715251, -17720195, -4612972, -4451357, -14669444),\n            ),\n            array(\n                array(-20045281, 5454097, -14346548, 6447146, 28862071, 1883651, -2469266, -4141880, 7770569, 9620597),\n                array(23208068, 7979712, 33071466, 8149229, 1758231, -10834995, 30945528, -1694323, -33502340, -14767970),\n                array(1439958, -16270480, -1079989, -793782, 4625402, 10647766, -5043801, 1220118, 30494170, -11440799),\n            ),\n            array(\n                array(-5037580, -13028295, -2970559, -3061767, 15640974, -6701666, -26739026, 926050, -1684339, -13333647),\n                array(13908495, -3549272, 30919928, -6273825, -21521863, 7989039, 9021034, 9078865, 3353509, 4033511),\n                array(-29663431, -15113610, 32259991, -344482, 24295849, -12912123, 23161163, 8839127, 27485041, 7356032),\n            ),\n        ),\n        array(\n            array(\n                array(9661027, 705443, 11980065, -5370154, -1628543, 14661173, -6346142, 2625015, 28431036, -16771834),\n                array(-23839233, -8311415, -25945511, 7480958, -17681669, -8354183, -22545972, 14150565, 15970762, 4099461),\n                array(29262576, 16756590, 26350592, -8793563, 8529671, -11208050, 13617293, -9937143, 11465739, 8317062),\n            ),\n            array(\n                array(-25493081, -6962928, 32500200, -9419051, -23038724, -2302222, 14898637, 3848455, 20969334, -5157516),\n                array(-20384450, -14347713, -18336405, 13884722, -33039454, 2842114, -21610826, -3649888, 11177095, 14989547),\n                array(-24496721, -11716016, 16959896, 2278463, 12066309, 10137771, 13515641, 2581286, -28487508, 9930240),\n            ),\n            array(\n                array(-17751622, -2097826, 16544300, -13009300, -15914807, -14949081, 18345767, -13403753, 16291481, -5314038),\n                array(-33229194, 2553288, 32678213, 9875984, 8534129, 6889387, -9676774, 6957617, 4368891, 9788741),\n                array(16660756, 7281060, -10830758, 12911820, 20108584, -8101676, -21722536, -8613148, 16250552, -11111103),\n            ),\n            array(\n                array(-19765507, 2390526, -16551031, 14161980, 1905286, 6414907, 4689584, 10604807, -30190403, 4782747),\n                array(-1354539, 14736941, -7367442, -13292886, 7710542, -14155590, -9981571, 4383045, 22546403, 437323),\n                array(31665577, -12180464, -16186830, 1491339, -18368625, 3294682, 27343084, 2786261, -30633590, -14097016),\n            ),\n            array(\n                array(-14467279, -683715, -33374107, 7448552, 19294360, 14334329, -19690631, 2355319, -19284671, -6114373),\n                array(15121312, -15796162, 6377020, -6031361, -10798111, -12957845, 18952177, 15496498, -29380133, 11754228),\n                array(-2637277, -13483075, 8488727, -14303896, 12728761, -1622493, 7141596, 11724556, 22761615, -10134141),\n            ),\n            array(\n                array(16918416, 11729663, -18083579, 3022987, -31015732, -13339659, -28741185, -12227393, 32851222, 11717399),\n                array(11166634, 7338049, -6722523, 4531520, -29468672, -7302055, 31474879, 3483633, -1193175, -4030831),\n                array(-185635, 9921305, 31456609, -13536438, -12013818, 13348923, 33142652, 6546660, -19985279, -3948376),\n            ),\n            array(\n                array(-32460596, 11266712, -11197107, -7899103, 31703694, 3855903, -8537131, -12833048, -30772034, -15486313),\n                array(-18006477, 12709068, 3991746, -6479188, -21491523, -10550425, -31135347, -16049879, 10928917, 3011958),\n                array(-6957757, -15594337, 31696059, 334240, 29576716, 14796075, -30831056, -12805180, 18008031, 10258577),\n            ),\n            array(\n                array(-22448644, 15655569, 7018479, -4410003, -30314266, -1201591, -1853465, 1367120, 25127874, 6671743),\n                array(29701166, -14373934, -10878120, 9279288, -17568, 13127210, 21382910, 11042292, 25838796, 4642684),\n                array(-20430234, 14955537, -24126347, 8124619, -5369288, -5990470, 30468147, -13900640, 18423289, 4177476),\n            ),\n        )\n    );\n\n    \/**\n     * See: libsodium's crypto_core\/curve25519\/ref10\/base2.h\n     *\n     * @var array basically int[8][3]\n     *\/\n    protected static $base2 = array(\n        array(\n            array(25967493, -14356035, 29566456, 3660896, -12694345, 4014787, 27544626, -11754271, -6079156, 2047605),\n            array(-12545711, 934262, -2722910, 3049990, -727428, 9406986, 12720692, 5043384, 19500929, -15469378),\n            array(-8738181, 4489570, 9688441, -14785194, 10184609, -12363380, 29287919, 11864899, -24514362, -4438546),\n        ),\n        array(\n            array(15636291, -9688557, 24204773, -7912398, 616977, -16685262, 27787600, -14772189, 28944400, -1550024),\n            array(16568933, 4717097, -11556148, -1102322, 15682896, -11807043, 16354577, -11775962, 7689662, 11199574),\n            array(30464156, -5976125, -11779434, -15670865, 23220365, 15915852, 7512774, 10017326, -17749093, -9920357),\n        ),\n        array(\n            array(10861363, 11473154, 27284546, 1981175, -30064349, 12577861, 32867885, 14515107, -15438304, 10819380),\n            array(4708026, 6336745, 20377586, 9066809, -11272109, 6594696, -25653668, 12483688, -12668491, 5581306),\n            array(19563160, 16186464, -29386857, 4097519, 10237984, -4348115, 28542350, 13850243, -23678021, -15815942),\n        ),\n        array(\n            array(5153746, 9909285, 1723747, -2777874, 30523605, 5516873, 19480852, 5230134, -23952439, -15175766),\n            array(-30269007, -3463509, 7665486, 10083793, 28475525, 1649722, 20654025, 16520125, 30598449, 7715701),\n            array(28881845, 14381568, 9657904, 3680757, -20181635, 7843316, -31400660, 1370708, 29794553, -1409300),\n        ),\n        array(\n            array(-22518993, -6692182, 14201702, -8745502, -23510406, 8844726, 18474211, -1361450, -13062696, 13821877),\n            array(-6455177, -7839871, 3374702, -4740862, -27098617, -10571707, 31655028, -7212327, 18853322, -14220951),\n            array(4566830, -12963868, -28974889, -12240689, -7602672, -2830569, -8514358, -10431137, 2207753, -3209784),\n        ),\n        array(\n            array(-25154831, -4185821, 29681144, 7868801, -6854661, -9423865, -12437364, -663000, -31111463, -16132436),\n            array(25576264, -2703214, 7349804, -11814844, 16472782, 9300885, 3844789, 15725684, 171356, 6466918),\n            array(23103977, 13316479, 9739013, -16149481, 817875, -15038942, 8965339, -14088058, -30714912, 16193877),\n        ),\n        array(\n            array(-33521811, 3180713, -2394130, 14003687, -16903474, -16270840, 17238398, 4729455, -18074513, 9256800),\n            array(-25182317, -4174131, 32336398, 5036987, -21236817, 11360617, 22616405, 9761698, -19827198, 630305),\n            array(-13720693, 2639453, -24237460, -7406481, 9494427, -5774029, -6554551, -15960994, -2449256, -14291300),\n        ),\n        array(\n            array(-3151181, -5046075, 9282714, 6866145, -31907062, -863023, -18940575, 15033784, 25105118, -7894876),\n            array(-24326370, 15950226, -31801215, -14592823, -11662737, -5090925, 1573892, -2625887, 2198790, -15804619),\n            array(-3099351, 10324967, -2241613, 7453183, -5446979, -2735503, -13812022, -16236442, -32461234, -12290683),\n        )\n    );\n\n    \/**\n     * 37095705934669439343138083508754565189542113879843219016388785533085940283555\n     *\n     * @var array<int, int>\n     *\/\n    protected static $d = array(\n        -10913610,\n        13857413,\n        -15372611,\n        6949391,\n        114729,\n        -8787816,\n        -6275908,\n        -3247719,\n        -18696448,\n        -12055116\n    );\n\n    \/**\n     * 2 * d = 16295367250680780974490674513165176452449235426866156013048779062215315747161\n     *\n     * @var array<int, int>\n     *\/\n    protected static $d2 = array(\n        -21827239,\n        -5839606,\n        -30745221,\n        13898782,\n        229458,\n        15978800,\n        -12551817,\n        -6495438,\n        29715968,\n        9444199\n    );\n\n    \/**\n     * sqrt(-1)\n     *\n     * @var array<int, int>\n     *\/\n    protected static $sqrtm1 = array(\n        -32595792,\n        -7943725,\n        9377950,\n        3500415,\n        12389472,\n        -272473,\n        -25146209,\n        -2005654,\n        326686,\n        11406482\n    );\n\n    \/**\n     * 1 \/ sqrt(a - d)\n     *\n     * @var array<int, int>\n     *\/\n    protected static $invsqrtamd = array(\n        6111485,\n        4156064,\n        -27798727,\n        12243468,\n        -25904040,\n        120897,\n        20826367,\n        -7060776,\n        6093568,\n        -1986012\n    );\n\n    \/**\n     *  sqrt(ad - 1) with a = -1 (mod p)\n     *\n     * @var array<int, int>\n     *\/\n    protected static $sqrtadm1 = array(\n        24849947,\n        -153582,\n        -23613485,\n        6347715,\n        -21072328,\n        -667138,\n        -25271143,\n        -15367704,\n        -870347,\n        14525639\n    );\n\n    \/**\n     * 1 - d ^ 2\n     *\n     * @var array<int, int>\n     *\/\n    protected static $onemsqd = array(\n        6275446,\n        -16617371,\n        -22938544,\n        -3773710,\n        11667077,\n        7397348,\n        -27922721,\n        1766195,\n        -24433858,\n        672203\n    );\n\n    \/**\n     * (d - 1) ^ 2\n     * @var array<int, int>\n     *\/\n    protected static $sqdmone = array(\n        15551795,\n        -11097455,\n        -13425098,\n        -10125071,\n        -11896535,\n        10178284,\n        -26634327,\n        4729244,\n        -5282110,\n        -10116402\n    );\n\n\n    \/*\n     *  2^252+27742317777372353535851937790883648493\n        static const unsigned char L[] = {\n            0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7,\n            0xa2, 0xde, 0xf9, 0xde, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10\n        };\n    *\/\n    const L = \"\\xed\\xd3\\xf5\\x5c\\x1a\\x63\\x12\\x58\\xd6\\x9c\\xf7\\xa2\\xde\\xf9\\xde\\x14\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\";\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Curve25519\/Ge\/Cached.php","ext":"php","size":1824,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\n\nif (class_exists('ParagonIE_Sodium_Core_Curve25519_Ge_Cached', false)) {\n    return;\n}\n\/**\n * Class ParagonIE_Sodium_Core_Curve25519_Ge_Cached\n *\/\nclass ParagonIE_Sodium_Core_Curve25519_Ge_Cached\n{\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $YplusX;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $YminusX;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $T2d;\n\n    \/**\n     * ParagonIE_Sodium_Core_Curve25519_Ge_Cached constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $YplusX\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $YminusX\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $Z\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $T2d\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core_Curve25519_Fe $YplusX = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $YminusX = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $Z = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $T2d = null\n    ) {\n        if ($YplusX === null) {\n            $YplusX = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->YplusX = $YplusX;\n        if ($YminusX === null) {\n            $YminusX = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->YminusX = $YminusX;\n        if ($Z === null) {\n            $Z = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->Z = $Z;\n        if ($T2d === null) {\n            $T2d = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->T2d = $T2d;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Curve25519\/Ge\/Precomp.php","ext":"php","size":1507,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_Curve25519_Ge_Precomp', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_Curve25519_Ge_Precomp\n *\/\nclass ParagonIE_Sodium_Core_Curve25519_Ge_Precomp\n{\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $yplusx;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $yminusx;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $xy2d;\n\n    \/**\n     * ParagonIE_Sodium_Core_Curve25519_Ge_Precomp constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe $yplusx\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe $yminusx\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe $xy2d\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core_Curve25519_Fe $yplusx = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $yminusx = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $xy2d = null\n    ) {\n        if ($yplusx === null) {\n            $yplusx = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->yplusx = $yplusx;\n        if ($yminusx === null) {\n            $yminusx = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->yminusx = $yminusx;\n        if ($xy2d === null) {\n            $xy2d = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->xy2d = $xy2d;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Curve25519\/Ge\/P3.php","ext":"php","size":1717,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_Curve25519_Ge_P3', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_Curve25519_Ge_P3\n *\/\nclass ParagonIE_Sodium_Core_Curve25519_Ge_P3\n{\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $X;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $Y;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $T;\n\n    \/**\n     * ParagonIE_Sodium_Core_Curve25519_Ge_P3 constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $x\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $y\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $z\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $t\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core_Curve25519_Fe $x = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $y = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $z = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $t = null\n    ) {\n        if ($x === null) {\n            $x = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->X = $x;\n        if ($y === null) {\n            $y = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->Y = $y;\n        if ($z === null) {\n            $z = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->Z = $z;\n        if ($t === null) {\n            $t = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->T = $t;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Curve25519\/Ge\/P1p1.php","ext":"php","size":1724,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_Curve25519_Ge_P1p1', false)) {\n    return;\n}\n\/**\n * Class ParagonIE_Sodium_Core_Curve25519_Ge_P1p1\n *\/\nclass ParagonIE_Sodium_Core_Curve25519_Ge_P1p1\n{\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $X;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $Y;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $T;\n\n    \/**\n     * ParagonIE_Sodium_Core_Curve25519_Ge_P1p1 constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $x\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $y\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $z\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $t\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core_Curve25519_Fe $x = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $y = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $z = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $t = null\n    ) {\n        if ($x === null) {\n            $x = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->X = $x;\n        if ($y === null) {\n            $y = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->Y = $y;\n        if ($z === null) {\n            $z = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->Z = $z;\n        if ($t === null) {\n            $t = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->T = $t;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/Curve25519\/Ge\/P2.php","ext":"php","size":1404,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_Curve25519_Ge_P2', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_Curve25519_Ge_P2\n *\/\nclass ParagonIE_Sodium_Core_Curve25519_Ge_P2\n{\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $X;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $Y;\n\n    \/**\n     * @var ParagonIE_Sodium_Core_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * ParagonIE_Sodium_Core_Curve25519_Ge_P2 constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $x\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $y\n     * @param ParagonIE_Sodium_Core_Curve25519_Fe|null $z\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core_Curve25519_Fe $x = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $y = null,\n        ParagonIE_Sodium_Core_Curve25519_Fe $z = null\n    ) {\n        if ($x === null) {\n            $x = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->X = $x;\n        if ($y === null) {\n            $y = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->Y = $y;\n        if ($z === null) {\n            $z = new ParagonIE_Sodium_Core_Curve25519_Fe();\n        }\n        $this->Z = $z;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/HSalsa20.php","ext":"php","size":3732,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_HSalsa20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_HSalsa20\n *\/\nabstract class ParagonIE_Sodium_Core_HSalsa20 extends ParagonIE_Sodium_Core_Salsa20\n{\n    \/**\n     * Calculate an hsalsa20 hash of a single block\n     *\n     * HSalsa20 doesn't have a counter and will never be used for more than\n     * one block (used to derive a subkey for xsalsa20).\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $in\n     * @param string $k\n     * @param string|null $c\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function hsalsa20($in, $k, $c = null)\n    {\n        if ($c === null) {\n            $x0  = 0x61707865;\n            $x5  = 0x3320646e;\n            $x10 = 0x79622d32;\n            $x15 = 0x6b206574;\n        } else {\n            $x0  = self::load_4(self::substr($c, 0, 4));\n            $x5  = self::load_4(self::substr($c, 4, 4));\n            $x10 = self::load_4(self::substr($c, 8, 4));\n            $x15 = self::load_4(self::substr($c, 12, 4));\n        }\n        $x1  = self::load_4(self::substr($k, 0, 4));\n        $x2  = self::load_4(self::substr($k, 4, 4));\n        $x3  = self::load_4(self::substr($k, 8, 4));\n        $x4  = self::load_4(self::substr($k, 12, 4));\n        $x11 = self::load_4(self::substr($k, 16, 4));\n        $x12 = self::load_4(self::substr($k, 20, 4));\n        $x13 = self::load_4(self::substr($k, 24, 4));\n        $x14 = self::load_4(self::substr($k, 28, 4));\n        $x6  = self::load_4(self::substr($in, 0, 4));\n        $x7  = self::load_4(self::substr($in, 4, 4));\n        $x8  = self::load_4(self::substr($in, 8, 4));\n        $x9  = self::load_4(self::substr($in, 12, 4));\n\n        for ($i = self::ROUNDS; $i > 0; $i -= 2) {\n            $x4 ^= self::rotate($x0 + $x12, 7);\n            $x8 ^= self::rotate($x4 + $x0, 9);\n            $x12 ^= self::rotate($x8 + $x4, 13);\n            $x0 ^= self::rotate($x12 + $x8, 18);\n            $x9 ^= self::rotate($x5 + $x1, 7);\n            $x13 ^= self::rotate($x9 + $x5, 9);\n            $x1 ^= self::rotate($x13 + $x9, 13);\n            $x5 ^= self::rotate($x1 + $x13, 18);\n            $x14 ^= self::rotate($x10 + $x6, 7);\n            $x2 ^= self::rotate($x14 + $x10, 9);\n            $x6 ^= self::rotate($x2 + $x14, 13);\n            $x10 ^= self::rotate($x6 + $x2, 18);\n            $x3 ^= self::rotate($x15 + $x11, 7);\n            $x7 ^= self::rotate($x3 + $x15, 9);\n            $x11 ^= self::rotate($x7 + $x3, 13);\n            $x15 ^= self::rotate($x11 + $x7, 18);\n            $x1 ^= self::rotate($x0 + $x3, 7);\n            $x2 ^= self::rotate($x1 + $x0, 9);\n            $x3 ^= self::rotate($x2 + $x1, 13);\n            $x0 ^= self::rotate($x3 + $x2, 18);\n            $x6 ^= self::rotate($x5 + $x4, 7);\n            $x7 ^= self::rotate($x6 + $x5, 9);\n            $x4 ^= self::rotate($x7 + $x6, 13);\n            $x5 ^= self::rotate($x4 + $x7, 18);\n            $x11 ^= self::rotate($x10 + $x9, 7);\n            $x8 ^= self::rotate($x11 + $x10, 9);\n            $x9 ^= self::rotate($x8 + $x11, 13);\n            $x10 ^= self::rotate($x9 + $x8, 18);\n            $x12 ^= self::rotate($x15 + $x14, 7);\n            $x13 ^= self::rotate($x12 + $x15, 9);\n            $x14 ^= self::rotate($x13 + $x12, 13);\n            $x15 ^= self::rotate($x14 + $x13, 18);\n        }\n\n        return self::store32_le($x0) .\n            self::store32_le($x5) .\n            self::store32_le($x10) .\n            self::store32_le($x15) .\n            self::store32_le($x6) .\n            self::store32_le($x7) .\n            self::store32_le($x8) .\n            self::store32_le($x9);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/ChaCha20\/IetfCtx.php","ext":"php","size":1381,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_ChaCha20_IetfCtx', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_ChaCha20_IetfCtx\n *\/\nclass ParagonIE_Sodium_Core_ChaCha20_IetfCtx extends ParagonIE_Sodium_Core_ChaCha20_Ctx\n{\n    \/**\n     * ParagonIE_Sodium_Core_ChaCha20_IetfCtx constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $key     ChaCha20 key.\n     * @param string $iv      Initialization Vector (a.k.a. nonce).\n     * @param string $counter The initial counter value.\n     *                        Defaults to 4 0x00 bytes.\n     * @throws InvalidArgumentException\n     * @throws TypeError\n     *\/\n    public function __construct($key = '', $iv = '', $counter = '')\n    {\n        if (self::strlen($iv) !== 12) {\n            throw new InvalidArgumentException('ChaCha20 expects a 96-bit nonce in IETF mode.');\n        }\n        parent::__construct($key, self::substr($iv, 0, 8), $counter);\n\n        if (!empty($counter)) {\n            $this->container[12] = self::load_4(self::substr($counter, 0, 4));\n        }\n        $this->container[13] = self::load_4(self::substr($iv, 0, 4));\n        $this->container[14] = self::load_4(self::substr($iv, 4, 4));\n        $this->container[15] = self::load_4(self::substr($iv, 8, 4));\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core\/ChaCha20\/Ctx.php","ext":"php","size":4001,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_ChaCha20_Ctx', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_ChaCha20_Ctx\n *\/\nclass ParagonIE_Sodium_Core_ChaCha20_Ctx extends ParagonIE_Sodium_Core_Util implements ArrayAccess\n{\n    \/**\n     * @var SplFixedArray internally, <int, int>\n     *\/\n    protected $container;\n\n    \/**\n     * ParagonIE_Sodium_Core_ChaCha20_Ctx constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $key     ChaCha20 key.\n     * @param string $iv      Initialization Vector (a.k.a. nonce).\n     * @param string $counter The initial counter value.\n     *                        Defaults to 8 0x00 bytes.\n     * @throws InvalidArgumentException\n     * @throws TypeError\n     *\/\n    public function __construct($key = '', $iv = '', $counter = '')\n    {\n        if (self::strlen($key) !== 32) {\n            throw new InvalidArgumentException('ChaCha20 expects a 256-bit key.');\n        }\n        if (self::strlen($iv) !== 8) {\n            throw new InvalidArgumentException('ChaCha20 expects a 64-bit nonce.');\n        }\n        $this->container = new SplFixedArray(16);\n\n        \/* \"expand 32-byte k\" as per ChaCha20 spec *\/\n        $this->container[0]  = 0x61707865;\n        $this->container[1]  = 0x3320646e;\n        $this->container[2]  = 0x79622d32;\n        $this->container[3]  = 0x6b206574;\n        $this->container[4]  = self::load_4(self::substr($key, 0, 4));\n        $this->container[5]  = self::load_4(self::substr($key, 4, 4));\n        $this->container[6]  = self::load_4(self::substr($key, 8, 4));\n        $this->container[7]  = self::load_4(self::substr($key, 12, 4));\n        $this->container[8]  = self::load_4(self::substr($key, 16, 4));\n        $this->container[9]  = self::load_4(self::substr($key, 20, 4));\n        $this->container[10] = self::load_4(self::substr($key, 24, 4));\n        $this->container[11] = self::load_4(self::substr($key, 28, 4));\n\n        if (empty($counter)) {\n            $this->container[12] = 0;\n            $this->container[13] = 0;\n        } else {\n            $this->container[12] = self::load_4(self::substr($counter, 0, 4));\n            $this->container[13] = self::load_4(self::substr($counter, 4, 4));\n        }\n        $this->container[14] = self::load_4(self::substr($iv, 0, 4));\n        $this->container[15] = self::load_4(self::substr($iv, 4, 4));\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @param int $value\n     * @return void\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetSet($offset, $value)\n    {\n        if (!is_int($offset)) {\n            throw new InvalidArgumentException('Expected an integer');\n        }\n        if (!is_int($value)) {\n            throw new InvalidArgumentException('Expected an integer');\n        }\n        $this->container[$offset] = $value;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return bool\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetExists($offset)\n    {\n        return isset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return void\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetUnset($offset)\n    {\n        unset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return mixed|null\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetGet($offset)\n    {\n        return isset($this->container[$offset])\n            ? $this->container[$offset]\n            : null;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Crypto32.php","ext":"php","size":55178,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Crypto32', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Crypto\n *\n * ATTENTION!\n *\n * If you are using this library, you should be using\n * ParagonIE_Sodium_Compat in your code, not this class.\n *\/\nabstract class ParagonIE_Sodium_Crypto32\n{\n    const aead_chacha20poly1305_KEYBYTES = 32;\n    const aead_chacha20poly1305_NSECBYTES = 0;\n    const aead_chacha20poly1305_NPUBBYTES = 8;\n    const aead_chacha20poly1305_ABYTES = 16;\n\n    const aead_chacha20poly1305_IETF_KEYBYTES = 32;\n    const aead_chacha20poly1305_IETF_NSECBYTES = 0;\n    const aead_chacha20poly1305_IETF_NPUBBYTES = 12;\n    const aead_chacha20poly1305_IETF_ABYTES = 16;\n\n    const aead_xchacha20poly1305_IETF_KEYBYTES = 32;\n    const aead_xchacha20poly1305_IETF_NSECBYTES = 0;\n    const aead_xchacha20poly1305_IETF_NPUBBYTES = 24;\n    const aead_xchacha20poly1305_IETF_ABYTES = 16;\n\n    const box_curve25519xsalsa20poly1305_SEEDBYTES = 32;\n    const box_curve25519xsalsa20poly1305_PUBLICKEYBYTES = 32;\n    const box_curve25519xsalsa20poly1305_SECRETKEYBYTES = 32;\n    const box_curve25519xsalsa20poly1305_BEFORENMBYTES = 32;\n    const box_curve25519xsalsa20poly1305_NONCEBYTES = 24;\n    const box_curve25519xsalsa20poly1305_MACBYTES = 16;\n    const box_curve25519xsalsa20poly1305_BOXZEROBYTES = 16;\n    const box_curve25519xsalsa20poly1305_ZEROBYTES = 32;\n\n    const onetimeauth_poly1305_BYTES = 16;\n    const onetimeauth_poly1305_KEYBYTES = 32;\n\n    const secretbox_xsalsa20poly1305_KEYBYTES = 32;\n    const secretbox_xsalsa20poly1305_NONCEBYTES = 24;\n    const secretbox_xsalsa20poly1305_MACBYTES = 16;\n    const secretbox_xsalsa20poly1305_BOXZEROBYTES = 16;\n    const secretbox_xsalsa20poly1305_ZEROBYTES = 32;\n\n    const secretbox_xchacha20poly1305_KEYBYTES = 32;\n    const secretbox_xchacha20poly1305_NONCEBYTES = 24;\n    const secretbox_xchacha20poly1305_MACBYTES = 16;\n    const secretbox_xchacha20poly1305_BOXZEROBYTES = 16;\n    const secretbox_xchacha20poly1305_ZEROBYTES = 32;\n\n    const stream_salsa20_KEYBYTES = 32;\n\n    \/**\n     * AEAD Decryption with ChaCha20-Poly1305\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_decrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $len - Length of message (ciphertext + MAC) *\/\n        $len = ParagonIE_Sodium_Core32_Util::strlen($message);\n\n        \/** @var int  $clen - Length of ciphertext *\/\n        $clen = $len - self::aead_chacha20poly1305_ABYTES;\n\n        \/** @var int $adlen - Length of associated data *\/\n        $adlen = ParagonIE_Sodium_Core32_Util::strlen($ad);\n\n        \/** @var string $mac - Message authentication code *\/\n        $mac = ParagonIE_Sodium_Core32_Util::substr(\n            $message,\n            $clen,\n            self::aead_chacha20poly1305_ABYTES\n        );\n\n        \/** @var string $ciphertext - The encrypted message (sans MAC) *\/\n        $ciphertext = ParagonIE_Sodium_Core32_Util::substr($message, 0, $clen);\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core32_ChaCha20::stream(\n            32,\n            $nonce,\n            $key\n        );\n\n        \/* Recalculate the Poly1305 authentication tag (MAC): *\/\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n        $state->update($ad);\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($adlen));\n        $state->update($ciphertext);\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($clen));\n        $computed_mac = $state->finish();\n\n        \/* Compare the given MAC with the recalculated MAC: *\/\n        if (!ParagonIE_Sodium_Core32_Util::verify_16($computed_mac, $mac)) {\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/\/ Here, we know that the MAC is valid, so we decrypt and return the plaintext\n        return ParagonIE_Sodium_Core32_ChaCha20::streamXorIc(\n            $ciphertext,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core32_Util::store64_le(1)\n        );\n    }\n\n    \/**\n     * AEAD Encryption with ChaCha20-Poly1305\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_encrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $len - Length of the plaintext message *\/\n        $len = ParagonIE_Sodium_Core32_Util::strlen($message);\n\n        \/** @var int $adlen - Length of the associated data *\/\n        $adlen = ParagonIE_Sodium_Core32_Util::strlen($ad);\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core32_ChaCha20::stream(\n            32,\n            $nonce,\n            $key\n        );\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n\n        \/** @var string $ciphertext - Raw encrypted data *\/\n        $ciphertext = ParagonIE_Sodium_Core32_ChaCha20::streamXorIc(\n            $message,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core32_Util::store64_le(1)\n        );\n\n        $state->update($ad);\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($adlen));\n        $state->update($ciphertext);\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($len));\n        return $ciphertext . $state->finish();\n    }\n\n    \/**\n     * AEAD Decryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_ietf_decrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $adlen - Length of associated data *\/\n        $adlen = ParagonIE_Sodium_Core32_Util::strlen($ad);\n\n        \/** @var int $len - Length of message (ciphertext + MAC) *\/\n        $len = ParagonIE_Sodium_Core32_Util::strlen($message);\n\n        \/** @var int  $clen - Length of ciphertext *\/\n        $clen = $len - self::aead_chacha20poly1305_IETF_ABYTES;\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core32_ChaCha20::ietfStream(\n            32,\n            $nonce,\n            $key\n        );\n\n        \/** @var string $mac - Message authentication code *\/\n        $mac = ParagonIE_Sodium_Core32_Util::substr(\n            $message,\n            $len - self::aead_chacha20poly1305_IETF_ABYTES,\n            self::aead_chacha20poly1305_IETF_ABYTES\n        );\n\n        \/** @var string $ciphertext - The encrypted message (sans MAC) *\/\n        $ciphertext = ParagonIE_Sodium_Core32_Util::substr(\n            $message,\n            0,\n            $len - self::aead_chacha20poly1305_IETF_ABYTES\n        );\n\n        \/* Recalculate the Poly1305 authentication tag (MAC): *\/\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n        $state->update($ad);\n        $state->update(str_repeat(\"\\x00\", ((0x10 - $adlen) & 0xf)));\n        $state->update($ciphertext);\n        $state->update(str_repeat(\"\\x00\", (0x10 - $clen) & 0xf));\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($adlen));\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($clen));\n        $computed_mac = $state->finish();\n\n        \/* Compare the given MAC with the recalculated MAC: *\/\n        if (!ParagonIE_Sodium_Core32_Util::verify_16($computed_mac, $mac)) {\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/\/ Here, we know that the MAC is valid, so we decrypt and return the plaintext\n        return ParagonIE_Sodium_Core32_ChaCha20::ietfStreamXorIc(\n            $ciphertext,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core32_Util::store64_le(1)\n        );\n    }\n\n    \/**\n     * AEAD Encryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_ietf_encrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $len - Length of the plaintext message *\/\n        $len = ParagonIE_Sodium_Core32_Util::strlen($message);\n\n        \/** @var int $adlen - Length of the associated data *\/\n        $adlen = ParagonIE_Sodium_Core32_Util::strlen($ad);\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core32_ChaCha20::ietfStream(\n            32,\n            $nonce,\n            $key\n        );\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n\n        \/** @var string $ciphertext - Raw encrypted data *\/\n        $ciphertext = ParagonIE_Sodium_Core32_ChaCha20::ietfStreamXorIc(\n            $message,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core32_Util::store64_le(1)\n        );\n\n        $state->update($ad);\n        $state->update(str_repeat(\"\\x00\", ((0x10 - $adlen) & 0xf)));\n        $state->update($ciphertext);\n        $state->update(str_repeat(\"\\x00\", ((0x10 - $len) & 0xf)));\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($adlen));\n        $state->update(ParagonIE_Sodium_Core32_Util::store64_le($len));\n        return $ciphertext . $state->finish();\n    }\n\n    \/**\n     * AEAD Decryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_xchacha20poly1305_ietf_decrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        $subkey = ParagonIE_Sodium_Core32_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 0, 16),\n            $key\n        );\n        $nonceLast = \"\\x00\\x00\\x00\\x00\" .\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8);\n\n        return self::aead_chacha20poly1305_ietf_decrypt($message, $ad, $nonceLast, $subkey);\n    }\n\n    \/**\n     * AEAD Encryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_xchacha20poly1305_ietf_encrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        $subkey = ParagonIE_Sodium_Core32_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 0, 16),\n            $key\n        );\n        $nonceLast = \"\\x00\\x00\\x00\\x00\" .\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8);\n\n        return self::aead_chacha20poly1305_ietf_encrypt($message, $ad, $nonceLast, $subkey);\n    }\n\n    \/**\n     * HMAC-SHA-512-256 (a.k.a. the leftmost 256 bits of HMAC-SHA-512)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $key\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function auth($message, $key)\n    {\n        return ParagonIE_Sodium_Core32_Util::substr(\n            hash_hmac('sha512', $message, $key, true),\n            0,\n            32\n        );\n    }\n\n    \/**\n     * HMAC-SHA-512-256 validation. Constant-time via hash_equals().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $mac\n     * @param string $message\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function auth_verify($mac, $message, $key)\n    {\n        return ParagonIE_Sodium_Core32_Util::hashEquals(\n            $mac,\n            self::auth($message, $key)\n        );\n    }\n\n    \/**\n     * X25519 key exchange followed by XSalsa20Poly1305 symmetric encryption\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $plaintext\n     * @param string $nonce\n     * @param string $keypair\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box($plaintext, $nonce, $keypair)\n    {\n        return self::secretbox(\n            $plaintext,\n            $nonce,\n            self::box_beforenm(\n                self::box_secretkey($keypair),\n                self::box_publickey($keypair)\n            )\n        );\n    }\n\n    \/**\n     * X25519-XSalsa20-Poly1305 with one ephemeral X25519 keypair.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $publicKey\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seal($message, $publicKey)\n    {\n        \/** @var string $ephemeralKeypair *\/\n        $ephemeralKeypair = self::box_keypair();\n\n        \/** @var string $ephemeralSK *\/\n        $ephemeralSK = self::box_secretkey($ephemeralKeypair);\n\n        \/** @var string $ephemeralPK *\/\n        $ephemeralPK = self::box_publickey($ephemeralKeypair);\n\n        \/** @var string $nonce *\/\n        $nonce = self::generichash(\n            $ephemeralPK . $publicKey,\n            '',\n            24\n        );\n\n        \/** @var string $keypair - The combined keypair used in crypto_box() *\/\n        $keypair = self::box_keypair_from_secretkey_and_publickey($ephemeralSK, $publicKey);\n\n        \/** @var string $ciphertext Ciphertext + MAC from crypto_box *\/\n        $ciphertext = self::box($message, $nonce, $keypair);\n        try {\n            ParagonIE_Sodium_Compat::memzero($ephemeralKeypair);\n            ParagonIE_Sodium_Compat::memzero($ephemeralSK);\n            ParagonIE_Sodium_Compat::memzero($nonce);\n        } catch (SodiumException $ex) {\n            $ephemeralKeypair = null;\n            $ephemeralSK = null;\n            $nonce = null;\n        }\n        return $ephemeralPK . $ciphertext;\n    }\n\n    \/**\n     * Opens a message encrypted via box_seal().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $keypair\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seal_open($message, $keypair)\n    {\n        \/** @var string $ephemeralPK *\/\n        $ephemeralPK = ParagonIE_Sodium_Core32_Util::substr($message, 0, 32);\n\n        \/** @var string $ciphertext (ciphertext + MAC) *\/\n        $ciphertext = ParagonIE_Sodium_Core32_Util::substr($message, 32);\n\n        \/** @var string $secretKey *\/\n        $secretKey = self::box_secretkey($keypair);\n\n        \/** @var string $publicKey *\/\n        $publicKey = self::box_publickey($keypair);\n\n        \/** @var string $nonce *\/\n        $nonce = self::generichash(\n            $ephemeralPK . $publicKey,\n            '',\n            24\n        );\n\n        \/** @var string $keypair *\/\n        $keypair = self::box_keypair_from_secretkey_and_publickey($secretKey, $ephemeralPK);\n\n        \/** @var string $m *\/\n        $m = self::box_open($ciphertext, $nonce, $keypair);\n        try {\n            ParagonIE_Sodium_Compat::memzero($secretKey);\n            ParagonIE_Sodium_Compat::memzero($ephemeralPK);\n            ParagonIE_Sodium_Compat::memzero($nonce);\n        } catch (SodiumException $ex) {\n            $secretKey = null;\n            $ephemeralPK = null;\n            $nonce = null;\n        }\n        return $m;\n    }\n\n    \/**\n     * Used by crypto_box() to get the crypto_secretbox() key.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sk\n     * @param string $pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_beforenm($sk, $pk)\n    {\n        return ParagonIE_Sodium_Core32_HSalsa20::hsalsa20(\n            str_repeat(\"\\x00\", 16),\n            self::scalarmult($sk, $pk)\n        );\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @return string\n     * @throws Exception\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_keypair()\n    {\n        $sKey = random_bytes(32);\n        $pKey = self::scalarmult_base($sKey);\n        return $sKey . $pKey;\n    }\n\n    \/**\n     * @param string $seed\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seed_keypair($seed)\n    {\n        $sKey = ParagonIE_Sodium_Core32_Util::substr(\n            hash('sha512', $seed, true),\n            0,\n            32\n        );\n        $pKey = self::scalarmult_base($sKey);\n        return $sKey . $pKey;\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sKey\n     * @param string $pKey\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function box_keypair_from_secretkey_and_publickey($sKey, $pKey)\n    {\n        return ParagonIE_Sodium_Core32_Util::substr($sKey, 0, 32) .\n            ParagonIE_Sodium_Core32_Util::substr($pKey, 0, 32);\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $keypair\n     * @return string\n     * @throws RangeException\n     * @throws TypeError\n     *\/\n    public static function box_secretkey($keypair)\n    {\n        if (ParagonIE_Sodium_Core32_Util::strlen($keypair) !== 64) {\n            throw new RangeException(\n                'Must be ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES bytes long.'\n            );\n        }\n        return ParagonIE_Sodium_Core32_Util::substr($keypair, 0, 32);\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $keypair\n     * @return string\n     * @throws RangeException\n     * @throws TypeError\n     *\/\n    public static function box_publickey($keypair)\n    {\n        if (ParagonIE_Sodium_Core32_Util::strlen($keypair) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new RangeException(\n                'Must be ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES bytes long.'\n            );\n        }\n        return ParagonIE_Sodium_Core32_Util::substr($keypair, 32, 32);\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sKey\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_publickey_from_secretkey($sKey)\n    {\n        if (ParagonIE_Sodium_Core32_Util::strlen($sKey) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_SECRETKEYBYTES) {\n            throw new RangeException(\n                'Must be ParagonIE_Sodium_Compat::CRYPTO_BOX_SECRETKEYBYTES bytes long.'\n            );\n        }\n        return self::scalarmult_base($sKey);\n    }\n\n    \/**\n     * Decrypt a message encrypted with box().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ciphertext\n     * @param string $nonce\n     * @param string $keypair\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_open($ciphertext, $nonce, $keypair)\n    {\n        return self::secretbox_open(\n            $ciphertext,\n            $nonce,\n            self::box_beforenm(\n                self::box_secretkey($keypair),\n                self::box_publickey($keypair)\n            )\n        );\n    }\n\n    \/**\n     * Calculate a BLAKE2b hash.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string|null $key\n     * @param int $outlen\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash($message, $key = '', $outlen = 32)\n    {\n        \/\/ This ensures that ParagonIE_Sodium_Core32_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core32_BLAKE2b::pseudoConstructor();\n\n        $k = null;\n        if (!empty($key)) {\n            \/** @var SplFixedArray $k *\/\n            $k = ParagonIE_Sodium_Core32_BLAKE2b::stringToSplFixedArray($key);\n            if ($k->count() > ParagonIE_Sodium_Core32_BLAKE2b::KEYBYTES) {\n                throw new RangeException('Invalid key size');\n            }\n        }\n\n        \/** @var SplFixedArray $in *\/\n        $in = ParagonIE_Sodium_Core32_BLAKE2b::stringToSplFixedArray($message);\n\n        \/** @var SplFixedArray $ctx *\/\n        $ctx = ParagonIE_Sodium_Core32_BLAKE2b::init($k, $outlen);\n        ParagonIE_Sodium_Core32_BLAKE2b::update($ctx, $in, $in->count());\n\n        \/** @var SplFixedArray $out *\/\n        $out = new SplFixedArray($outlen);\n        $out = ParagonIE_Sodium_Core32_BLAKE2b::finish($ctx, $out);\n\n        \/** @var array<int, int> *\/\n        $outArray = $out->toArray();\n        return ParagonIE_Sodium_Core32_Util::intArrayToString($outArray);\n    }\n\n    \/**\n     * Finalize a BLAKE2b hashing context, returning the hash.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ctx\n     * @param int $outlen\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_final($ctx, $outlen = 32)\n    {\n        if (!is_string($ctx)) {\n            throw new TypeError('Context must be a string');\n        }\n        $out = new SplFixedArray($outlen);\n\n        \/** @var SplFixedArray $context *\/\n        $context = ParagonIE_Sodium_Core32_BLAKE2b::stringToContext($ctx);\n\n        \/** @var SplFixedArray $out *\/\n        $out = ParagonIE_Sodium_Core32_BLAKE2b::finish($context, $out);\n\n        \/** @var array<int, int> *\/\n        $outArray = $out->toArray();\n        return ParagonIE_Sodium_Core32_Util::intArrayToString($outArray);\n    }\n\n    \/**\n     * Initialize a hashing context for BLAKE2b.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $key\n     * @param int $outputLength\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_init($key = '', $outputLength = 32)\n    {\n        \/\/ This ensures that ParagonIE_Sodium_Core32_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core32_BLAKE2b::pseudoConstructor();\n\n        $k = null;\n        if (!empty($key)) {\n            $k = ParagonIE_Sodium_Core32_BLAKE2b::stringToSplFixedArray($key);\n            if ($k->count() > ParagonIE_Sodium_Core32_BLAKE2b::KEYBYTES) {\n                throw new RangeException('Invalid key size');\n            }\n        }\n\n        \/** @var SplFixedArray $ctx *\/\n        $ctx = ParagonIE_Sodium_Core32_BLAKE2b::init($k, $outputLength);\n\n        return ParagonIE_Sodium_Core32_BLAKE2b::contextToString($ctx);\n    }\n\n    \/**\n     * Initialize a hashing context for BLAKE2b.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $key\n     * @param int $outputLength\n     * @param string $salt\n     * @param string $personal\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_init_salt_personal(\n        $key = '',\n        $outputLength = 32,\n        $salt = '',\n        $personal = ''\n    ) {\n        \/\/ This ensures that ParagonIE_Sodium_Core32_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core32_BLAKE2b::pseudoConstructor();\n\n        $k = null;\n        if (!empty($key)) {\n            $k = ParagonIE_Sodium_Core32_BLAKE2b::stringToSplFixedArray($key);\n            if ($k->count() > ParagonIE_Sodium_Core32_BLAKE2b::KEYBYTES) {\n                throw new RangeException('Invalid key size');\n            }\n        }\n        if (!empty($salt)) {\n            $s = ParagonIE_Sodium_Core32_BLAKE2b::stringToSplFixedArray($salt);\n        } else {\n            $s = null;\n        }\n        if (!empty($salt)) {\n            $p = ParagonIE_Sodium_Core32_BLAKE2b::stringToSplFixedArray($personal);\n        } else {\n            $p = null;\n        }\n\n        \/** @var SplFixedArray $ctx *\/\n        $ctx = ParagonIE_Sodium_Core32_BLAKE2b::init($k, $outputLength, $s, $p);\n\n        return ParagonIE_Sodium_Core32_BLAKE2b::contextToString($ctx);\n    }\n\n    \/**\n     * Update a hashing context for BLAKE2b with $message\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ctx\n     * @param string $message\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_update($ctx, $message)\n    {\n        \/\/ This ensures that ParagonIE_Sodium_Core32_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core32_BLAKE2b::pseudoConstructor();\n\n        \/** @var SplFixedArray $context *\/\n        $context = ParagonIE_Sodium_Core32_BLAKE2b::stringToContext($ctx);\n\n        \/** @var SplFixedArray $in *\/\n        $in = ParagonIE_Sodium_Core32_BLAKE2b::stringToSplFixedArray($message);\n\n        ParagonIE_Sodium_Core32_BLAKE2b::update($context, $in, $in->count());\n\n        return ParagonIE_Sodium_Core32_BLAKE2b::contextToString($context);\n    }\n\n    \/**\n     * Libsodium's crypto_kx().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $my_sk\n     * @param string $their_pk\n     * @param string $client_pk\n     * @param string $server_pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function keyExchange($my_sk, $their_pk, $client_pk, $server_pk)\n    {\n        return self::generichash(\n            self::scalarmult($my_sk, $their_pk) .\n            $client_pk .\n            $server_pk\n        );\n    }\n\n    \/**\n     * ECDH over Curve25519\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sKey\n     * @param string $pKey\n     * @return string\n     *\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function scalarmult($sKey, $pKey)\n    {\n        $q = ParagonIE_Sodium_Core32_X25519::crypto_scalarmult_curve25519_ref10($sKey, $pKey);\n        self::scalarmult_throw_if_zero($q);\n        return $q;\n    }\n\n    \/**\n     * ECDH over Curve25519, using the basepoint.\n     * Used to get a secret key from a public key.\n     *\n     * @param string $secret\n     * @return string\n     *\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function scalarmult_base($secret)\n    {\n        $q = ParagonIE_Sodium_Core32_X25519::crypto_scalarmult_curve25519_ref10_base($secret);\n        self::scalarmult_throw_if_zero($q);\n        return $q;\n    }\n\n    \/**\n     * This throws an Error if a zero public key was passed to the function.\n     *\n     * @param string $q\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function scalarmult_throw_if_zero($q)\n    {\n        $d = 0;\n        for ($i = 0; $i < self::box_curve25519xsalsa20poly1305_SECRETKEYBYTES; ++$i) {\n            $d |= ParagonIE_Sodium_Core32_Util::chrToInt($q[$i]);\n        }\n\n        \/* branch-free variant of === 0 *\/\n        if (-(1 & (($d - 1) >> 8))) {\n            throw new SodiumException('Zero public key is not allowed');\n        }\n    }\n\n    \/**\n     * XSalsa20-Poly1305 authenticated symmetric-key encryption.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $plaintext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox($plaintext, $nonce, $key)\n    {\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core32_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $block0 *\/\n        $block0 = str_repeat(\"\\x00\", 32);\n\n        \/** @var int $mlen - Length of the plaintext message *\/\n        $mlen = ParagonIE_Sodium_Core32_Util::strlen($plaintext);\n        $mlen0 = $mlen;\n        if ($mlen0 > 64 - self::secretbox_xsalsa20poly1305_ZEROBYTES) {\n            $mlen0 = 64 - self::secretbox_xsalsa20poly1305_ZEROBYTES;\n        }\n        $block0 .= ParagonIE_Sodium_Core32_Util::substr($plaintext, 0, $mlen0);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core32_Salsa20::salsa20_xor(\n            $block0,\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core32_Util::substr(\n            $block0,\n            self::secretbox_xsalsa20poly1305_ZEROBYTES\n        );\n        if ($mlen > $mlen0) {\n            $c .= ParagonIE_Sodium_Core32_Salsa20::salsa20_xor_ic(\n                ParagonIE_Sodium_Core32_Util::substr(\n                    $plaintext,\n                    self::secretbox_xsalsa20poly1305_ZEROBYTES\n                ),\n                ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8),\n                1,\n                $subkey\n            );\n        }\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State(\n            ParagonIE_Sodium_Core32_Util::substr(\n                $block0,\n                0,\n                self::onetimeauth_poly1305_KEYBYTES\n            )\n        );\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n            ParagonIE_Sodium_Compat::memzero($subkey);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n            $subkey = null;\n        }\n\n        $state->update($c);\n\n        \/** @var string $c - MAC || ciphertext *\/\n        $c = $state->finish() . $c;\n        unset($state);\n\n        return $c;\n    }\n\n    \/**\n     * Decrypt a ciphertext generated via secretbox().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ciphertext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox_open($ciphertext, $nonce, $key)\n    {\n        \/** @var string $mac *\/\n        $mac = ParagonIE_Sodium_Core32_Util::substr(\n            $ciphertext,\n            0,\n            self::secretbox_xsalsa20poly1305_MACBYTES\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core32_Util::substr(\n            $ciphertext,\n            self::secretbox_xsalsa20poly1305_MACBYTES\n        );\n\n        \/** @var int $clen *\/\n        $clen = ParagonIE_Sodium_Core32_Util::strlen($c);\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core32_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core32_Salsa20::salsa20(\n            64,\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n        $verified = ParagonIE_Sodium_Core32_Poly1305::onetimeauth_verify(\n            $mac,\n            $c,\n            ParagonIE_Sodium_Core32_Util::substr($block0, 0, 32)\n        );\n        if (!$verified) {\n            try {\n                ParagonIE_Sodium_Compat::memzero($subkey);\n            } catch (SodiumException $ex) {\n                $subkey = null;\n            }\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/** @var string $m - Decrypted message *\/\n        $m = ParagonIE_Sodium_Core32_Util::xorStrings(\n            ParagonIE_Sodium_Core32_Util::substr($block0, self::secretbox_xsalsa20poly1305_ZEROBYTES),\n            ParagonIE_Sodium_Core32_Util::substr($c, 0, self::secretbox_xsalsa20poly1305_ZEROBYTES)\n        );\n        if ($clen > self::secretbox_xsalsa20poly1305_ZEROBYTES) {\n            \/\/ We had more than 1 block, so let's continue to decrypt the rest.\n            $m .= ParagonIE_Sodium_Core32_Salsa20::salsa20_xor_ic(\n                ParagonIE_Sodium_Core32_Util::substr(\n                    $c,\n                    self::secretbox_xsalsa20poly1305_ZEROBYTES\n                ),\n                ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8),\n                1,\n                (string) $subkey\n            );\n        }\n        return $m;\n    }\n\n    \/**\n     * XChaCha20-Poly1305 authenticated symmetric-key encryption.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $plaintext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox_xchacha20poly1305($plaintext, $nonce, $key)\n    {\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core32_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 0, 16),\n            $key\n        );\n        $nonceLast = ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8);\n\n        \/** @var string $block0 *\/\n        $block0 = str_repeat(\"\\x00\", 32);\n\n        \/** @var int $mlen - Length of the plaintext message *\/\n        $mlen = ParagonIE_Sodium_Core32_Util::strlen($plaintext);\n        $mlen0 = $mlen;\n        if ($mlen0 > 64 - self::secretbox_xchacha20poly1305_ZEROBYTES) {\n            $mlen0 = 64 - self::secretbox_xchacha20poly1305_ZEROBYTES;\n        }\n        $block0 .= ParagonIE_Sodium_Core32_Util::substr($plaintext, 0, $mlen0);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core32_ChaCha20::streamXorIc(\n            $block0,\n            $nonceLast,\n            $subkey\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core32_Util::substr(\n            $block0,\n            self::secretbox_xchacha20poly1305_ZEROBYTES\n        );\n        if ($mlen > $mlen0) {\n            $c .= ParagonIE_Sodium_Core32_ChaCha20::streamXorIc(\n                ParagonIE_Sodium_Core32_Util::substr(\n                    $plaintext,\n                    self::secretbox_xchacha20poly1305_ZEROBYTES\n                ),\n                $nonceLast,\n                $subkey,\n                ParagonIE_Sodium_Core32_Util::store64_le(1)\n            );\n        }\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State(\n            ParagonIE_Sodium_Core32_Util::substr(\n                $block0,\n                0,\n                self::onetimeauth_poly1305_KEYBYTES\n            )\n        );\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n            ParagonIE_Sodium_Compat::memzero($subkey);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n            $subkey = null;\n        }\n\n        $state->update($c);\n\n        \/** @var string $c - MAC || ciphertext *\/\n        $c = $state->finish() . $c;\n        unset($state);\n\n        return $c;\n    }\n\n    \/**\n     * Decrypt a ciphertext generated via secretbox_xchacha20poly1305().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ciphertext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox_xchacha20poly1305_open($ciphertext, $nonce, $key)\n    {\n        \/** @var string $mac *\/\n        $mac = ParagonIE_Sodium_Core32_Util::substr(\n            $ciphertext,\n            0,\n            self::secretbox_xchacha20poly1305_MACBYTES\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core32_Util::substr(\n            $ciphertext,\n            self::secretbox_xchacha20poly1305_MACBYTES\n        );\n\n        \/** @var int $clen *\/\n        $clen = ParagonIE_Sodium_Core32_Util::strlen($c);\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core32_HChaCha20::hchacha20($nonce, $key);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core32_ChaCha20::stream(\n            64,\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n        $verified = ParagonIE_Sodium_Core32_Poly1305::onetimeauth_verify(\n            $mac,\n            $c,\n            ParagonIE_Sodium_Core32_Util::substr($block0, 0, 32)\n        );\n\n        if (!$verified) {\n            try {\n                ParagonIE_Sodium_Compat::memzero($subkey);\n            } catch (SodiumException $ex) {\n                $subkey = null;\n            }\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/** @var string $m - Decrypted message *\/\n        $m = ParagonIE_Sodium_Core32_Util::xorStrings(\n            ParagonIE_Sodium_Core32_Util::substr($block0, self::secretbox_xchacha20poly1305_ZEROBYTES),\n            ParagonIE_Sodium_Core32_Util::substr($c, 0, self::secretbox_xchacha20poly1305_ZEROBYTES)\n        );\n\n        if ($clen > self::secretbox_xchacha20poly1305_ZEROBYTES) {\n            \/\/ We had more than 1 block, so let's continue to decrypt the rest.\n            $m .= ParagonIE_Sodium_Core32_ChaCha20::streamXorIc(\n                ParagonIE_Sodium_Core32_Util::substr(\n                    $c,\n                    self::secretbox_xchacha20poly1305_ZEROBYTES\n                ),\n                ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8),\n                (string) $subkey,\n                ParagonIE_Sodium_Core32_Util::store64_le(1)\n            );\n        }\n        return $m;\n    }\n\n    \/**\n     * @param string $key\n     * @return array<int, string> Returns a state and a header.\n     * @throws Exception\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_init_push($key)\n    {\n        # randombytes_buf(out, crypto_secretstream_xchacha20poly1305_HEADERBYTES);\n        $out = random_bytes(24);\n\n        # crypto_core_hchacha20(state->k, out, k, NULL);\n        $subkey = ParagonIE_Sodium_Core32_HChaCha20::hChaCha20($out, $key);\n        $state = new ParagonIE_Sodium_Core32_SecretStream_State(\n            $subkey,\n            ParagonIE_Sodium_Core32_Util::substr($out, 16, 8) . str_repeat(\"\\0\", 4)\n        );\n\n        # _crypto_secretstream_xchacha20poly1305_counter_reset(state);\n        $state->counterReset();\n\n        # memcpy(STATE_INONCE(state), out + crypto_core_hchacha20_INPUTBYTES,\n        #        crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        # memset(state->_pad, 0, sizeof state->_pad);\n        return array(\n            $state->toString(),\n            $out\n        );\n    }\n\n    \/**\n     * @param string $key\n     * @param string $header\n     * @return string Returns a state.\n     * @throws Exception\n     *\/\n    public static function secretstream_xchacha20poly1305_init_pull($key, $header)\n    {\n        # crypto_core_hchacha20(state->k, in, k, NULL);\n        $subkey = ParagonIE_Sodium_Core32_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core32_Util::substr($header, 0, 16),\n            $key\n        );\n        $state = new ParagonIE_Sodium_Core32_SecretStream_State(\n            $subkey,\n            ParagonIE_Sodium_Core32_Util::substr($header, 16)\n        );\n        $state->counterReset();\n        # memcpy(STATE_INONCE(state), in + crypto_core_hchacha20_INPUTBYTES,\n        #     crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        # memset(state->_pad, 0, sizeof state->_pad);\n        # return 0;\n        return $state->toString();\n    }\n\n    \/**\n     * @param string $state\n     * @param string $msg\n     * @param string $aad\n     * @param int $tag\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_push(&$state, $msg, $aad = '', $tag = 0)\n    {\n        $st = ParagonIE_Sodium_Core32_SecretStream_State::fromString($state);\n        # crypto_onetimeauth_poly1305_state poly1305_state;\n        # unsigned char                     block[64U];\n        # unsigned char                     slen[8U];\n        # unsigned char                    *c;\n        # unsigned char                    *mac;\n\n        $msglen = ParagonIE_Sodium_Core32_Util::strlen($msg);\n        $aadlen = ParagonIE_Sodium_Core32_Util::strlen($aad);\n\n        if ((($msglen + 63) >> 6) > 0xfffffffe) {\n            throw new SodiumException(\n                'message cannot be larger than SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX bytes'\n            );\n        }\n\n        # if (outlen_p != NULL) {\n        #     *outlen_p = 0U;\n        # }\n        # if (mlen > crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX) {\n        #     sodium_misuse();\n        # }\n\n        # crypto_stream_chacha20_ietf(block, sizeof block, state->nonce, state->k);\n        # crypto_onetimeauth_poly1305_init(&poly1305_state, block);\n        # sodium_memzero(block, sizeof block);\n        $auth = new ParagonIE_Sodium_Core32_Poly1305_State(\n            ParagonIE_Sodium_Core32_ChaCha20::ietfStream(32, $st->getCombinedNonce(), $st->getKey())\n        );\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, ad, adlen);\n        $auth->update($aad);\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, _pad0,\n        #     (0x10 - adlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - $aadlen) & 0xf)));\n\n        # memset(block, 0, sizeof block);\n        # block[0] = tag;\n        # crypto_stream_chacha20_ietf_xor_ic(block, block, sizeof block,\n        #                                    state->nonce, 1U, state->k);\n        $block = ParagonIE_Sodium_Core32_ChaCha20::ietfStreamXorIc(\n            ParagonIE_Sodium_Core32_Util::intToChr($tag) . str_repeat(\"\\0\", 63),\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core32_Util::store64_le(1)\n        );\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, block, sizeof block);\n        $auth->update($block);\n\n        # out[0] = block[0];\n        $out = $block[0];\n        # c = out + (sizeof tag);\n        # crypto_stream_chacha20_ietf_xor_ic(c, m, mlen, state->nonce, 2U, state->k);\n        $cipher = ParagonIE_Sodium_Core32_ChaCha20::ietfStreamXorIc(\n            $msg,\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core32_Util::store64_le(2)\n        );\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, c, mlen);\n        $auth->update($cipher);\n\n        $out .= $cipher;\n        unset($cipher);\n\n        # crypto_onetimeauth_poly1305_update\n        # (&poly1305_state, _pad0, (0x10 - (sizeof block) + mlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - 64 + $msglen) & 0xf)));\n\n        # STORE64_LE(slen, (uint64_t) adlen);\n        $slen = ParagonIE_Sodium_Core32_Util::store64_le($aadlen);\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $auth->update($slen);\n\n        # STORE64_LE(slen, (sizeof block) + mlen);\n        $slen = ParagonIE_Sodium_Core32_Util::store64_le(64 + $msglen);\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $auth->update($slen);\n\n        # mac = c + mlen;\n        # crypto_onetimeauth_poly1305_final(&poly1305_state, mac);\n        $mac = $auth->finish();\n        $out .= $mac;\n\n        # sodium_memzero(&poly1305_state, sizeof poly1305_state);\n        unset($auth);\n\n\n        # XOR_BUF(STATE_INONCE(state), mac,\n        #     crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        $st->xorNonce($mac);\n\n        # sodium_increment(STATE_COUNTER(state),\n        #     crypto_secretstream_xchacha20poly1305_COUNTERBYTES);\n        $st->incrementCounter();\n        \/\/ Overwrite by reference:\n        $state = $st->toString();\n\n        \/** @var bool $rekey *\/\n        $rekey = ($tag & ParagonIE_Sodium_Compat::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY) !== 0;\n        # if ((tag & crypto_secretstream_xchacha20poly1305_TAG_REKEY) != 0 ||\n        #     sodium_is_zero(STATE_COUNTER(state),\n        #         crypto_secretstream_xchacha20poly1305_COUNTERBYTES)) {\n        #     crypto_secretstream_xchacha20poly1305_rekey(state);\n        # }\n        if ($rekey || $st->needsRekey()) {\n            \/\/ DO REKEY\n            self::secretstream_xchacha20poly1305_rekey($state);\n        }\n        # if (outlen_p != NULL) {\n        #     *outlen_p = crypto_secretstream_xchacha20poly1305_ABYTES + mlen;\n        # }\n        return $out;\n    }\n\n    \/**\n     * @param string $state\n     * @param string $cipher\n     * @param string $aad\n     * @return bool|array{0: string, 1: int}\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_pull(&$state, $cipher, $aad = '')\n    {\n        $st = ParagonIE_Sodium_Core32_SecretStream_State::fromString($state);\n\n        $cipherlen = ParagonIE_Sodium_Core32_Util::strlen($cipher);\n        #     mlen = inlen - crypto_secretstream_xchacha20poly1305_ABYTES;\n        $msglen = $cipherlen - ParagonIE_Sodium_Compat::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES;\n        $aadlen = ParagonIE_Sodium_Core32_Util::strlen($aad);\n\n        #     if (mlen > crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX) {\n        #         sodium_misuse();\n        #     }\n        if ((($msglen + 63) >> 6) > 0xfffffffe) {\n            throw new SodiumException(\n                'message cannot be larger than SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX bytes'\n            );\n        }\n\n        #     crypto_stream_chacha20_ietf(block, sizeof block, state->nonce, state->k);\n        #     crypto_onetimeauth_poly1305_init(&poly1305_state, block);\n        #     sodium_memzero(block, sizeof block);\n        $auth = new ParagonIE_Sodium_Core32_Poly1305_State(\n            ParagonIE_Sodium_Core32_ChaCha20::ietfStream(32, $st->getCombinedNonce(), $st->getKey())\n        );\n\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, ad, adlen);\n        $auth->update($aad);\n\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, _pad0,\n        #         (0x10 - adlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - $aadlen) & 0xf)));\n\n\n        #     memset(block, 0, sizeof block);\n        #     block[0] = in[0];\n        #     crypto_stream_chacha20_ietf_xor_ic(block, block, sizeof block,\n        #                                        state->nonce, 1U, state->k);\n        $block = ParagonIE_Sodium_Core32_ChaCha20::ietfStreamXorIc(\n            $cipher[0] . str_repeat(\"\\0\", 63),\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core32_Util::store64_le(1)\n        );\n        #     tag = block[0];\n        #     block[0] = in[0];\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, block, sizeof block);\n        $tag = ParagonIE_Sodium_Core32_Util::chrToInt($block[0]);\n        $block[0] = $cipher[0];\n        $auth->update($block);\n\n\n        #     c = in + (sizeof tag);\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, c, mlen);\n        $auth->update(ParagonIE_Sodium_Core32_Util::substr($cipher, 1, $msglen));\n\n        #     crypto_onetimeauth_poly1305_update\n        #     (&poly1305_state, _pad0, (0x10 - (sizeof block) + mlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - 64 + $msglen) & 0xf)));\n\n        #     STORE64_LE(slen, (uint64_t) adlen);\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $slen = ParagonIE_Sodium_Core32_Util::store64_le($aadlen);\n        $auth->update($slen);\n\n        #     STORE64_LE(slen, (sizeof block) + mlen);\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $slen = ParagonIE_Sodium_Core32_Util::store64_le(64 + $msglen);\n        $auth->update($slen);\n\n        #     crypto_onetimeauth_poly1305_final(&poly1305_state, mac);\n        #     sodium_memzero(&poly1305_state, sizeof poly1305_state);\n        $mac = $auth->finish();\n\n        #     stored_mac = c + mlen;\n        #     if (sodium_memcmp(mac, stored_mac, sizeof mac) != 0) {\n        #     sodium_memzero(mac, sizeof mac);\n        #         return -1;\n        #     }\n\n        $stored = ParagonIE_Sodium_Core32_Util::substr($cipher, $msglen + 1, 16);\n        if (!ParagonIE_Sodium_Core32_Util::hashEquals($mac, $stored)) {\n            return false;\n        }\n\n        #     crypto_stream_chacha20_ietf_xor_ic(m, c, mlen, state->nonce, 2U, state->k);\n        $out = ParagonIE_Sodium_Core32_ChaCha20::ietfStreamXorIc(\n            ParagonIE_Sodium_Core32_Util::substr($cipher, 1, $msglen),\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core32_Util::store64_le(2)\n        );\n\n        #     XOR_BUF(STATE_INONCE(state), mac,\n        #         crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        $st->xorNonce($mac);\n\n        #     sodium_increment(STATE_COUNTER(state),\n        #         crypto_secretstream_xchacha20poly1305_COUNTERBYTES);\n        $st->incrementCounter();\n\n        #     if ((tag & crypto_secretstream_xchacha20poly1305_TAG_REKEY) != 0 ||\n        #         sodium_is_zero(STATE_COUNTER(state),\n        #             crypto_secretstream_xchacha20poly1305_COUNTERBYTES)) {\n        #         crypto_secretstream_xchacha20poly1305_rekey(state);\n        #     }\n\n        \/\/ Overwrite by reference:\n        $state = $st->toString();\n\n        \/** @var bool $rekey *\/\n        $rekey = ($tag & ParagonIE_Sodium_Compat::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY) !== 0;\n        if ($rekey || $st->needsRekey()) {\n            \/\/ DO REKEY\n            self::secretstream_xchacha20poly1305_rekey($state);\n        }\n        return array($out, $tag);\n    }\n\n    \/**\n     * @param string $state\n     * @return void\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_rekey(&$state)\n    {\n        $st = ParagonIE_Sodium_Core32_SecretStream_State::fromString($state);\n        # unsigned char new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES +\n        # crypto_secretstream_xchacha20poly1305_INONCEBYTES];\n        # size_t        i;\n        # for (i = 0U; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n        #     new_key_and_inonce[i] = state->k[i];\n        # }\n        $new_key_and_inonce = $st->getKey();\n\n        # for (i = 0U; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n        #     new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i] =\n        #         STATE_INONCE(state)[i];\n        # }\n        $new_key_and_inonce .= ParagonIE_Sodium_Core32_Util::substR($st->getNonce(), 0, 8);\n\n        # crypto_stream_chacha20_ietf_xor(new_key_and_inonce, new_key_and_inonce,\n        #                                 sizeof new_key_and_inonce,\n        #                                 state->nonce, state->k);\n\n        $st->rekey(ParagonIE_Sodium_Core32_ChaCha20::ietfStreamXorIc(\n            $new_key_and_inonce,\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core32_Util::store64_le(0)\n        ));\n\n        # for (i = 0U; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n        #     state->k[i] = new_key_and_inonce[i];\n        # }\n        # for (i = 0U; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n        #     STATE_INONCE(state)[i] =\n        #          new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i];\n        # }\n        # _crypto_secretstream_xchacha20poly1305_counter_reset(state);\n        $st->counterReset();\n\n        $state = $st->toString();\n    }\n\n    \/**\n     * Detached Ed25519 signature.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign_detached($message, $sk)\n    {\n        return ParagonIE_Sodium_Core32_Ed25519::sign_detached($message, $sk);\n    }\n\n    \/**\n     * Attached Ed25519 signature. (Returns a signed message.)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign($message, $sk)\n    {\n        return ParagonIE_Sodium_Core32_Ed25519::sign($message, $sk);\n    }\n\n    \/**\n     * Opens a signed message. If valid, returns the message.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $signedMessage\n     * @param string $pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign_open($signedMessage, $pk)\n    {\n        return ParagonIE_Sodium_Core32_Ed25519::sign_open($signedMessage, $pk);\n    }\n\n    \/**\n     * Verify a detached signature of a given message and public key.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $signature\n     * @param string $message\n     * @param string $pk\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign_verify_detached($signature, $message, $pk)\n    {\n        return ParagonIE_Sodium_Core32_Ed25519::verify_detached($signature, $message, $pk);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Crypto.php","ext":"php","size":54869,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Crypto', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Crypto\n *\n * ATTENTION!\n *\n * If you are using this library, you should be using\n * ParagonIE_Sodium_Compat in your code, not this class.\n *\/\nabstract class ParagonIE_Sodium_Crypto\n{\n    const aead_chacha20poly1305_KEYBYTES = 32;\n    const aead_chacha20poly1305_NSECBYTES = 0;\n    const aead_chacha20poly1305_NPUBBYTES = 8;\n    const aead_chacha20poly1305_ABYTES = 16;\n\n    const aead_chacha20poly1305_IETF_KEYBYTES = 32;\n    const aead_chacha20poly1305_IETF_NSECBYTES = 0;\n    const aead_chacha20poly1305_IETF_NPUBBYTES = 12;\n    const aead_chacha20poly1305_IETF_ABYTES = 16;\n\n    const aead_xchacha20poly1305_IETF_KEYBYTES = 32;\n    const aead_xchacha20poly1305_IETF_NSECBYTES = 0;\n    const aead_xchacha20poly1305_IETF_NPUBBYTES = 24;\n    const aead_xchacha20poly1305_IETF_ABYTES = 16;\n\n    const box_curve25519xsalsa20poly1305_SEEDBYTES = 32;\n    const box_curve25519xsalsa20poly1305_PUBLICKEYBYTES = 32;\n    const box_curve25519xsalsa20poly1305_SECRETKEYBYTES = 32;\n    const box_curve25519xsalsa20poly1305_BEFORENMBYTES = 32;\n    const box_curve25519xsalsa20poly1305_NONCEBYTES = 24;\n    const box_curve25519xsalsa20poly1305_MACBYTES = 16;\n    const box_curve25519xsalsa20poly1305_BOXZEROBYTES = 16;\n    const box_curve25519xsalsa20poly1305_ZEROBYTES = 32;\n\n    const onetimeauth_poly1305_BYTES = 16;\n    const onetimeauth_poly1305_KEYBYTES = 32;\n\n    const secretbox_xsalsa20poly1305_KEYBYTES = 32;\n    const secretbox_xsalsa20poly1305_NONCEBYTES = 24;\n    const secretbox_xsalsa20poly1305_MACBYTES = 16;\n    const secretbox_xsalsa20poly1305_BOXZEROBYTES = 16;\n    const secretbox_xsalsa20poly1305_ZEROBYTES = 32;\n\n    const secretbox_xchacha20poly1305_KEYBYTES = 32;\n    const secretbox_xchacha20poly1305_NONCEBYTES = 24;\n    const secretbox_xchacha20poly1305_MACBYTES = 16;\n    const secretbox_xchacha20poly1305_BOXZEROBYTES = 16;\n    const secretbox_xchacha20poly1305_ZEROBYTES = 32;\n\n    const stream_salsa20_KEYBYTES = 32;\n\n    \/**\n     * AEAD Decryption with ChaCha20-Poly1305\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_decrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $len - Length of message (ciphertext + MAC) *\/\n        $len = ParagonIE_Sodium_Core_Util::strlen($message);\n\n        \/** @var int  $clen - Length of ciphertext *\/\n        $clen = $len - self::aead_chacha20poly1305_ABYTES;\n\n        \/** @var int $adlen - Length of associated data *\/\n        $adlen = ParagonIE_Sodium_Core_Util::strlen($ad);\n\n        \/** @var string $mac - Message authentication code *\/\n        $mac = ParagonIE_Sodium_Core_Util::substr(\n            $message,\n            $clen,\n            self::aead_chacha20poly1305_ABYTES\n        );\n\n        \/** @var string $ciphertext - The encrypted message (sans MAC) *\/\n        $ciphertext = ParagonIE_Sodium_Core_Util::substr($message, 0, $clen);\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core_ChaCha20::stream(\n            32,\n            $nonce,\n            $key\n        );\n\n        \/* Recalculate the Poly1305 authentication tag (MAC): *\/\n        $state = new ParagonIE_Sodium_Core_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n        $state->update($ad);\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($adlen));\n        $state->update($ciphertext);\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($clen));\n        $computed_mac = $state->finish();\n\n        \/* Compare the given MAC with the recalculated MAC: *\/\n        if (!ParagonIE_Sodium_Core_Util::verify_16($computed_mac, $mac)) {\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/\/ Here, we know that the MAC is valid, so we decrypt and return the plaintext\n        return ParagonIE_Sodium_Core_ChaCha20::streamXorIc(\n            $ciphertext,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core_Util::store64_le(1)\n        );\n    }\n\n    \/**\n     * AEAD Encryption with ChaCha20-Poly1305\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_encrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $len - Length of the plaintext message *\/\n        $len = ParagonIE_Sodium_Core_Util::strlen($message);\n\n        \/** @var int $adlen - Length of the associated data *\/\n        $adlen = ParagonIE_Sodium_Core_Util::strlen($ad);\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core_ChaCha20::stream(\n            32,\n            $nonce,\n            $key\n        );\n        $state = new ParagonIE_Sodium_Core_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n\n        \/** @var string $ciphertext - Raw encrypted data *\/\n        $ciphertext = ParagonIE_Sodium_Core_ChaCha20::streamXorIc(\n            $message,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core_Util::store64_le(1)\n        );\n\n        $state->update($ad);\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($adlen));\n        $state->update($ciphertext);\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($len));\n        return $ciphertext . $state->finish();\n    }\n\n    \/**\n     * AEAD Decryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_ietf_decrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $adlen - Length of associated data *\/\n        $adlen = ParagonIE_Sodium_Core_Util::strlen($ad);\n\n        \/** @var int $len - Length of message (ciphertext + MAC) *\/\n        $len = ParagonIE_Sodium_Core_Util::strlen($message);\n\n        \/** @var int  $clen - Length of ciphertext *\/\n        $clen = $len - self::aead_chacha20poly1305_IETF_ABYTES;\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core_ChaCha20::ietfStream(\n            32,\n            $nonce,\n            $key\n        );\n\n        \/** @var string $mac - Message authentication code *\/\n        $mac = ParagonIE_Sodium_Core_Util::substr(\n            $message,\n            $len - self::aead_chacha20poly1305_IETF_ABYTES,\n            self::aead_chacha20poly1305_IETF_ABYTES\n        );\n\n        \/** @var string $ciphertext - The encrypted message (sans MAC) *\/\n        $ciphertext = ParagonIE_Sodium_Core_Util::substr(\n            $message,\n            0,\n            $len - self::aead_chacha20poly1305_IETF_ABYTES\n        );\n\n        \/* Recalculate the Poly1305 authentication tag (MAC): *\/\n        $state = new ParagonIE_Sodium_Core_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n        $state->update($ad);\n        $state->update(str_repeat(\"\\x00\", ((0x10 - $adlen) & 0xf)));\n        $state->update($ciphertext);\n        $state->update(str_repeat(\"\\x00\", (0x10 - $clen) & 0xf));\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($adlen));\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($clen));\n        $computed_mac = $state->finish();\n\n        \/* Compare the given MAC with the recalculated MAC: *\/\n        if (!ParagonIE_Sodium_Core_Util::verify_16($computed_mac, $mac)) {\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/\/ Here, we know that the MAC is valid, so we decrypt and return the plaintext\n        return ParagonIE_Sodium_Core_ChaCha20::ietfStreamXorIc(\n            $ciphertext,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core_Util::store64_le(1)\n        );\n    }\n\n    \/**\n     * AEAD Encryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_chacha20poly1305_ietf_encrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/** @var int $len - Length of the plaintext message *\/\n        $len = ParagonIE_Sodium_Core_Util::strlen($message);\n\n        \/** @var int $adlen - Length of the associated data *\/\n        $adlen = ParagonIE_Sodium_Core_Util::strlen($ad);\n\n        \/** @var string The first block of the chacha20 keystream, used as a poly1305 key *\/\n        $block0 = ParagonIE_Sodium_Core_ChaCha20::ietfStream(\n            32,\n            $nonce,\n            $key\n        );\n        $state = new ParagonIE_Sodium_Core_Poly1305_State($block0);\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n        }\n\n        \/** @var string $ciphertext - Raw encrypted data *\/\n        $ciphertext = ParagonIE_Sodium_Core_ChaCha20::ietfStreamXorIc(\n            $message,\n            $nonce,\n            $key,\n            ParagonIE_Sodium_Core_Util::store64_le(1)\n        );\n\n        $state->update($ad);\n        $state->update(str_repeat(\"\\x00\", ((0x10 - $adlen) & 0xf)));\n        $state->update($ciphertext);\n        $state->update(str_repeat(\"\\x00\", ((0x10 - $len) & 0xf)));\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($adlen));\n        $state->update(ParagonIE_Sodium_Core_Util::store64_le($len));\n        return $ciphertext . $state->finish();\n    }\n\n    \/**\n     * AEAD Decryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_xchacha20poly1305_ietf_decrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        $subkey = ParagonIE_Sodium_Core_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core_Util::substr($nonce, 0, 16),\n            $key\n        );\n        $nonceLast = \"\\x00\\x00\\x00\\x00\" .\n            ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8);\n\n        return self::aead_chacha20poly1305_ietf_decrypt($message, $ad, $nonceLast, $subkey);\n    }\n\n    \/**\n     * AEAD Encryption with ChaCha20-Poly1305, IETF mode (96-bit nonce)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $ad\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function aead_xchacha20poly1305_ietf_encrypt(\n        $message = '',\n        $ad = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        $subkey = ParagonIE_Sodium_Core_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core_Util::substr($nonce, 0, 16),\n            $key\n        );\n        $nonceLast = \"\\x00\\x00\\x00\\x00\" .\n            ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8);\n\n        return self::aead_chacha20poly1305_ietf_encrypt($message, $ad, $nonceLast, $subkey);\n    }\n\n    \/**\n     * HMAC-SHA-512-256 (a.k.a. the leftmost 256 bits of HMAC-SHA-512)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $key\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function auth($message, $key)\n    {\n        return ParagonIE_Sodium_Core_Util::substr(\n            hash_hmac('sha512', $message, $key, true),\n            0,\n            32\n        );\n    }\n\n    \/**\n     * HMAC-SHA-512-256 validation. Constant-time via hash_equals().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $mac\n     * @param string $message\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function auth_verify($mac, $message, $key)\n    {\n        return ParagonIE_Sodium_Core_Util::hashEquals(\n            $mac,\n            self::auth($message, $key)\n        );\n    }\n\n    \/**\n     * X25519 key exchange followed by XSalsa20Poly1305 symmetric encryption\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $plaintext\n     * @param string $nonce\n     * @param string $keypair\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box($plaintext, $nonce, $keypair)\n    {\n        $c = self::secretbox(\n            $plaintext,\n            $nonce,\n            self::box_beforenm(\n                self::box_secretkey($keypair),\n                self::box_publickey($keypair)\n            )\n        );\n        return $c;\n    }\n\n    \/**\n     * X25519-XSalsa20-Poly1305 with one ephemeral X25519 keypair.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $publicKey\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seal($message, $publicKey)\n    {\n        \/** @var string $ephemeralKeypair *\/\n        $ephemeralKeypair = self::box_keypair();\n\n        \/** @var string $ephemeralSK *\/\n        $ephemeralSK = self::box_secretkey($ephemeralKeypair);\n\n        \/** @var string $ephemeralPK *\/\n        $ephemeralPK = self::box_publickey($ephemeralKeypair);\n\n        \/** @var string $nonce *\/\n        $nonce = self::generichash(\n            $ephemeralPK . $publicKey,\n            '',\n            24\n        );\n\n        \/** @var string $keypair - The combined keypair used in crypto_box() *\/\n        $keypair = self::box_keypair_from_secretkey_and_publickey($ephemeralSK, $publicKey);\n\n        \/** @var string $ciphertext Ciphertext + MAC from crypto_box *\/\n        $ciphertext = self::box($message, $nonce, $keypair);\n        try {\n            ParagonIE_Sodium_Compat::memzero($ephemeralKeypair);\n            ParagonIE_Sodium_Compat::memzero($ephemeralSK);\n            ParagonIE_Sodium_Compat::memzero($nonce);\n        } catch (SodiumException $ex) {\n            $ephemeralKeypair = null;\n            $ephemeralSK = null;\n            $nonce = null;\n        }\n        return $ephemeralPK . $ciphertext;\n    }\n\n    \/**\n     * Opens a message encrypted via box_seal().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $keypair\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seal_open($message, $keypair)\n    {\n        \/** @var string $ephemeralPK *\/\n        $ephemeralPK = ParagonIE_Sodium_Core_Util::substr($message, 0, 32);\n\n        \/** @var string $ciphertext (ciphertext + MAC) *\/\n        $ciphertext = ParagonIE_Sodium_Core_Util::substr($message, 32);\n\n        \/** @var string $secretKey *\/\n        $secretKey = self::box_secretkey($keypair);\n\n        \/** @var string $publicKey *\/\n        $publicKey = self::box_publickey($keypair);\n\n        \/** @var string $nonce *\/\n        $nonce = self::generichash(\n            $ephemeralPK . $publicKey,\n            '',\n            24\n        );\n\n        \/** @var string $keypair *\/\n        $keypair = self::box_keypair_from_secretkey_and_publickey($secretKey, $ephemeralPK);\n\n        \/** @var string $m *\/\n        $m = self::box_open($ciphertext, $nonce, $keypair);\n        try {\n            ParagonIE_Sodium_Compat::memzero($secretKey);\n            ParagonIE_Sodium_Compat::memzero($ephemeralPK);\n            ParagonIE_Sodium_Compat::memzero($nonce);\n        } catch (SodiumException $ex) {\n            $secretKey = null;\n            $ephemeralPK = null;\n            $nonce = null;\n        }\n        return $m;\n    }\n\n    \/**\n     * Used by crypto_box() to get the crypto_secretbox() key.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sk\n     * @param string $pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_beforenm($sk, $pk)\n    {\n        return ParagonIE_Sodium_Core_HSalsa20::hsalsa20(\n            str_repeat(\"\\x00\", 16),\n            self::scalarmult($sk, $pk)\n        );\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @return string\n     * @throws Exception\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_keypair()\n    {\n        $sKey = random_bytes(32);\n        $pKey = self::scalarmult_base($sKey);\n        return $sKey . $pKey;\n    }\n\n    \/**\n     * @param string $seed\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seed_keypair($seed)\n    {\n        $sKey = ParagonIE_Sodium_Core_Util::substr(\n            hash('sha512', $seed, true),\n            0,\n            32\n        );\n        $pKey = self::scalarmult_base($sKey);\n        return $sKey . $pKey;\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sKey\n     * @param string $pKey\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function box_keypair_from_secretkey_and_publickey($sKey, $pKey)\n    {\n        return ParagonIE_Sodium_Core_Util::substr($sKey, 0, 32) .\n            ParagonIE_Sodium_Core_Util::substr($pKey, 0, 32);\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $keypair\n     * @return string\n     * @throws RangeException\n     * @throws TypeError\n     *\/\n    public static function box_secretkey($keypair)\n    {\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== 64) {\n            throw new RangeException(\n                'Must be ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES bytes long.'\n            );\n        }\n        return ParagonIE_Sodium_Core_Util::substr($keypair, 0, 32);\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $keypair\n     * @return string\n     * @throws RangeException\n     * @throws TypeError\n     *\/\n    public static function box_publickey($keypair)\n    {\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new RangeException(\n                'Must be ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES bytes long.'\n            );\n        }\n        return ParagonIE_Sodium_Core_Util::substr($keypair, 32, 32);\n    }\n\n    \/**\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sKey\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_publickey_from_secretkey($sKey)\n    {\n        if (ParagonIE_Sodium_Core_Util::strlen($sKey) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_SECRETKEYBYTES) {\n            throw new RangeException(\n                'Must be ParagonIE_Sodium_Compat::CRYPTO_BOX_SECRETKEYBYTES bytes long.'\n            );\n        }\n        return self::scalarmult_base($sKey);\n    }\n\n    \/**\n     * Decrypt a message encrypted with box().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ciphertext\n     * @param string $nonce\n     * @param string $keypair\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_open($ciphertext, $nonce, $keypair)\n    {\n        return self::secretbox_open(\n            $ciphertext,\n            $nonce,\n            self::box_beforenm(\n                self::box_secretkey($keypair),\n                self::box_publickey($keypair)\n            )\n        );\n    }\n\n    \/**\n     * Calculate a BLAKE2b hash.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string|null $key\n     * @param int $outlen\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash($message, $key = '', $outlen = 32)\n    {\n        \/\/ This ensures that ParagonIE_Sodium_Core_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core_BLAKE2b::pseudoConstructor();\n\n        $k = null;\n        if (!empty($key)) {\n            \/** @var SplFixedArray $k *\/\n            $k = ParagonIE_Sodium_Core_BLAKE2b::stringToSplFixedArray($key);\n            if ($k->count() > ParagonIE_Sodium_Core_BLAKE2b::KEYBYTES) {\n                throw new RangeException('Invalid key size');\n            }\n        }\n\n        \/** @var SplFixedArray $in *\/\n        $in = ParagonIE_Sodium_Core_BLAKE2b::stringToSplFixedArray($message);\n\n        \/** @var SplFixedArray $ctx *\/\n        $ctx = ParagonIE_Sodium_Core_BLAKE2b::init($k, $outlen);\n        ParagonIE_Sodium_Core_BLAKE2b::update($ctx, $in, $in->count());\n\n        \/** @var SplFixedArray $out *\/\n        $out = new SplFixedArray($outlen);\n        $out = ParagonIE_Sodium_Core_BLAKE2b::finish($ctx, $out);\n\n        \/** @var array<int, int> *\/\n        $outArray = $out->toArray();\n        return ParagonIE_Sodium_Core_Util::intArrayToString($outArray);\n    }\n\n    \/**\n     * Finalize a BLAKE2b hashing context, returning the hash.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ctx\n     * @param int $outlen\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_final($ctx, $outlen = 32)\n    {\n        if (!is_string($ctx)) {\n            throw new TypeError('Context must be a string');\n        }\n        $out = new SplFixedArray($outlen);\n\n        \/** @var SplFixedArray $context *\/\n        $context = ParagonIE_Sodium_Core_BLAKE2b::stringToContext($ctx);\n\n        \/** @var SplFixedArray $out *\/\n        $out = ParagonIE_Sodium_Core_BLAKE2b::finish($context, $out);\n\n        \/** @var array<int, int> *\/\n        $outArray = $out->toArray();\n        return ParagonIE_Sodium_Core_Util::intArrayToString($outArray);\n    }\n\n    \/**\n     * Initialize a hashing context for BLAKE2b.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $key\n     * @param int $outputLength\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_init($key = '', $outputLength = 32)\n    {\n        \/\/ This ensures that ParagonIE_Sodium_Core_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core_BLAKE2b::pseudoConstructor();\n\n        $k = null;\n        if (!empty($key)) {\n            $k = ParagonIE_Sodium_Core_BLAKE2b::stringToSplFixedArray($key);\n            if ($k->count() > ParagonIE_Sodium_Core_BLAKE2b::KEYBYTES) {\n                throw new RangeException('Invalid key size');\n            }\n        }\n\n        \/** @var SplFixedArray $ctx *\/\n        $ctx = ParagonIE_Sodium_Core_BLAKE2b::init($k, $outputLength);\n\n        return ParagonIE_Sodium_Core_BLAKE2b::contextToString($ctx);\n    }\n\n    \/**\n     * Initialize a hashing context for BLAKE2b.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $key\n     * @param int $outputLength\n     * @param string $salt\n     * @param string $personal\n     * @return string\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_init_salt_personal(\n        $key = '',\n        $outputLength = 32,\n        $salt = '',\n        $personal = ''\n    ) {\n        \/\/ This ensures that ParagonIE_Sodium_Core_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core_BLAKE2b::pseudoConstructor();\n\n        $k = null;\n        if (!empty($key)) {\n            $k = ParagonIE_Sodium_Core_BLAKE2b::stringToSplFixedArray($key);\n            if ($k->count() > ParagonIE_Sodium_Core_BLAKE2b::KEYBYTES) {\n                throw new RangeException('Invalid key size');\n            }\n        }\n        if (!empty($salt)) {\n            $s = ParagonIE_Sodium_Core_BLAKE2b::stringToSplFixedArray($salt);\n        } else {\n            $s = null;\n        }\n        if (!empty($salt)) {\n            $p = ParagonIE_Sodium_Core_BLAKE2b::stringToSplFixedArray($personal);\n        } else {\n            $p = null;\n        }\n\n        \/** @var SplFixedArray $ctx *\/\n        $ctx = ParagonIE_Sodium_Core_BLAKE2b::init($k, $outputLength, $s, $p);\n\n        return ParagonIE_Sodium_Core_BLAKE2b::contextToString($ctx);\n    }\n\n    \/**\n     * Update a hashing context for BLAKE2b with $message\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ctx\n     * @param string $message\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function generichash_update($ctx, $message)\n    {\n        \/\/ This ensures that ParagonIE_Sodium_Core_BLAKE2b::$iv is initialized\n        ParagonIE_Sodium_Core_BLAKE2b::pseudoConstructor();\n\n        \/** @var SplFixedArray $context *\/\n        $context = ParagonIE_Sodium_Core_BLAKE2b::stringToContext($ctx);\n\n        \/** @var SplFixedArray $in *\/\n        $in = ParagonIE_Sodium_Core_BLAKE2b::stringToSplFixedArray($message);\n\n        ParagonIE_Sodium_Core_BLAKE2b::update($context, $in, $in->count());\n\n        return ParagonIE_Sodium_Core_BLAKE2b::contextToString($context);\n    }\n\n    \/**\n     * Libsodium's crypto_kx().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $my_sk\n     * @param string $their_pk\n     * @param string $client_pk\n     * @param string $server_pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function keyExchange($my_sk, $their_pk, $client_pk, $server_pk)\n    {\n        return ParagonIE_Sodium_Compat::crypto_generichash(\n            ParagonIE_Sodium_Compat::crypto_scalarmult($my_sk, $their_pk) .\n            $client_pk .\n            $server_pk\n        );\n    }\n\n    \/**\n     * ECDH over Curve25519\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $sKey\n     * @param string $pKey\n     * @return string\n     *\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function scalarmult($sKey, $pKey)\n    {\n        $q = ParagonIE_Sodium_Core_X25519::crypto_scalarmult_curve25519_ref10($sKey, $pKey);\n        self::scalarmult_throw_if_zero($q);\n        return $q;\n    }\n\n    \/**\n     * ECDH over Curve25519, using the basepoint.\n     * Used to get a secret key from a public key.\n     *\n     * @param string $secret\n     * @return string\n     *\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function scalarmult_base($secret)\n    {\n        $q = ParagonIE_Sodium_Core_X25519::crypto_scalarmult_curve25519_ref10_base($secret);\n        self::scalarmult_throw_if_zero($q);\n        return $q;\n    }\n\n    \/**\n     * This throws an Error if a zero public key was passed to the function.\n     *\n     * @param string $q\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function scalarmult_throw_if_zero($q)\n    {\n        $d = 0;\n        for ($i = 0; $i < self::box_curve25519xsalsa20poly1305_SECRETKEYBYTES; ++$i) {\n            $d |= ParagonIE_Sodium_Core_Util::chrToInt($q[$i]);\n        }\n\n        \/* branch-free variant of === 0 *\/\n        if (-(1 & (($d - 1) >> 8))) {\n            throw new SodiumException('Zero public key is not allowed');\n        }\n    }\n\n    \/**\n     * XSalsa20-Poly1305 authenticated symmetric-key encryption.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $plaintext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox($plaintext, $nonce, $key)\n    {\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $block0 *\/\n        $block0 = str_repeat(\"\\x00\", 32);\n\n        \/** @var int $mlen - Length of the plaintext message *\/\n        $mlen = ParagonIE_Sodium_Core_Util::strlen($plaintext);\n        $mlen0 = $mlen;\n        if ($mlen0 > 64 - self::secretbox_xsalsa20poly1305_ZEROBYTES) {\n            $mlen0 = 64 - self::secretbox_xsalsa20poly1305_ZEROBYTES;\n        }\n        $block0 .= ParagonIE_Sodium_Core_Util::substr($plaintext, 0, $mlen0);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core_Salsa20::salsa20_xor(\n            $block0,\n            ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core_Util::substr(\n            $block0,\n            self::secretbox_xsalsa20poly1305_ZEROBYTES\n        );\n        if ($mlen > $mlen0) {\n            $c .= ParagonIE_Sodium_Core_Salsa20::salsa20_xor_ic(\n                ParagonIE_Sodium_Core_Util::substr(\n                    $plaintext,\n                    self::secretbox_xsalsa20poly1305_ZEROBYTES\n                ),\n                ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8),\n                1,\n                $subkey\n            );\n        }\n        $state = new ParagonIE_Sodium_Core_Poly1305_State(\n            ParagonIE_Sodium_Core_Util::substr(\n                $block0,\n                0,\n                self::onetimeauth_poly1305_KEYBYTES\n            )\n        );\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n            ParagonIE_Sodium_Compat::memzero($subkey);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n            $subkey = null;\n        }\n\n        $state->update($c);\n\n        \/** @var string $c - MAC || ciphertext *\/\n        $c = $state->finish() . $c;\n        unset($state);\n\n        return $c;\n    }\n\n    \/**\n     * Decrypt a ciphertext generated via secretbox().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ciphertext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox_open($ciphertext, $nonce, $key)\n    {\n        \/** @var string $mac *\/\n        $mac = ParagonIE_Sodium_Core_Util::substr(\n            $ciphertext,\n            0,\n            self::secretbox_xsalsa20poly1305_MACBYTES\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core_Util::substr(\n            $ciphertext,\n            self::secretbox_xsalsa20poly1305_MACBYTES\n        );\n\n        \/** @var int $clen *\/\n        $clen = ParagonIE_Sodium_Core_Util::strlen($c);\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core_Salsa20::salsa20(\n            64,\n            ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n        $verified = ParagonIE_Sodium_Core_Poly1305::onetimeauth_verify(\n            $mac,\n            $c,\n            ParagonIE_Sodium_Core_Util::substr($block0, 0, 32)\n        );\n        if (!$verified) {\n            try {\n                ParagonIE_Sodium_Compat::memzero($subkey);\n            } catch (SodiumException $ex) {\n                $subkey = null;\n            }\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/** @var string $m - Decrypted message *\/\n        $m = ParagonIE_Sodium_Core_Util::xorStrings(\n            ParagonIE_Sodium_Core_Util::substr($block0, self::secretbox_xsalsa20poly1305_ZEROBYTES),\n            ParagonIE_Sodium_Core_Util::substr($c, 0, self::secretbox_xsalsa20poly1305_ZEROBYTES)\n        );\n        if ($clen > self::secretbox_xsalsa20poly1305_ZEROBYTES) {\n            \/\/ We had more than 1 block, so let's continue to decrypt the rest.\n            $m .= ParagonIE_Sodium_Core_Salsa20::salsa20_xor_ic(\n                ParagonIE_Sodium_Core_Util::substr(\n                    $c,\n                    self::secretbox_xsalsa20poly1305_ZEROBYTES\n                ),\n                ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8),\n                1,\n                (string) $subkey\n            );\n        }\n        return $m;\n    }\n\n    \/**\n     * XChaCha20-Poly1305 authenticated symmetric-key encryption.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $plaintext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox_xchacha20poly1305($plaintext, $nonce, $key)\n    {\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core_Util::substr($nonce, 0, 16),\n            $key\n        );\n        $nonceLast = ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8);\n\n        \/** @var string $block0 *\/\n        $block0 = str_repeat(\"\\x00\", 32);\n\n        \/** @var int $mlen - Length of the plaintext message *\/\n        $mlen = ParagonIE_Sodium_Core_Util::strlen($plaintext);\n        $mlen0 = $mlen;\n        if ($mlen0 > 64 - self::secretbox_xchacha20poly1305_ZEROBYTES) {\n            $mlen0 = 64 - self::secretbox_xchacha20poly1305_ZEROBYTES;\n        }\n        $block0 .= ParagonIE_Sodium_Core_Util::substr($plaintext, 0, $mlen0);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core_ChaCha20::streamXorIc(\n            $block0,\n            $nonceLast,\n            $subkey\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core_Util::substr(\n            $block0,\n            self::secretbox_xchacha20poly1305_ZEROBYTES\n        );\n        if ($mlen > $mlen0) {\n            $c .= ParagonIE_Sodium_Core_ChaCha20::streamXorIc(\n                ParagonIE_Sodium_Core_Util::substr(\n                    $plaintext,\n                    self::secretbox_xchacha20poly1305_ZEROBYTES\n                ),\n                $nonceLast,\n                $subkey,\n                ParagonIE_Sodium_Core_Util::store64_le(1)\n            );\n        }\n        $state = new ParagonIE_Sodium_Core_Poly1305_State(\n            ParagonIE_Sodium_Core_Util::substr(\n                $block0,\n                0,\n                self::onetimeauth_poly1305_KEYBYTES\n            )\n        );\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n            ParagonIE_Sodium_Compat::memzero($subkey);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n            $subkey = null;\n        }\n\n        $state->update($c);\n\n        \/** @var string $c - MAC || ciphertext *\/\n        $c = $state->finish() . $c;\n        unset($state);\n\n        return $c;\n    }\n\n    \/**\n     * Decrypt a ciphertext generated via secretbox_xchacha20poly1305().\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $ciphertext\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox_xchacha20poly1305_open($ciphertext, $nonce, $key)\n    {\n        \/** @var string $mac *\/\n        $mac = ParagonIE_Sodium_Core_Util::substr(\n            $ciphertext,\n            0,\n            self::secretbox_xchacha20poly1305_MACBYTES\n        );\n\n        \/** @var string $c *\/\n        $c = ParagonIE_Sodium_Core_Util::substr(\n            $ciphertext,\n            self::secretbox_xchacha20poly1305_MACBYTES\n        );\n\n        \/** @var int $clen *\/\n        $clen = ParagonIE_Sodium_Core_Util::strlen($c);\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core_HChaCha20::hchacha20($nonce, $key);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core_ChaCha20::stream(\n            64,\n            ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n        $verified = ParagonIE_Sodium_Core_Poly1305::onetimeauth_verify(\n            $mac,\n            $c,\n            ParagonIE_Sodium_Core_Util::substr($block0, 0, 32)\n        );\n\n        if (!$verified) {\n            try {\n                ParagonIE_Sodium_Compat::memzero($subkey);\n            } catch (SodiumException $ex) {\n                $subkey = null;\n            }\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/** @var string $m - Decrypted message *\/\n        $m = ParagonIE_Sodium_Core_Util::xorStrings(\n            ParagonIE_Sodium_Core_Util::substr($block0, self::secretbox_xchacha20poly1305_ZEROBYTES),\n            ParagonIE_Sodium_Core_Util::substr($c, 0, self::secretbox_xchacha20poly1305_ZEROBYTES)\n        );\n\n        if ($clen > self::secretbox_xchacha20poly1305_ZEROBYTES) {\n            \/\/ We had more than 1 block, so let's continue to decrypt the rest.\n            $m .= ParagonIE_Sodium_Core_ChaCha20::streamXorIc(\n                ParagonIE_Sodium_Core_Util::substr(\n                    $c,\n                    self::secretbox_xchacha20poly1305_ZEROBYTES\n                ),\n                ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8),\n                (string) $subkey,\n                ParagonIE_Sodium_Core_Util::store64_le(1)\n            );\n        }\n        return $m;\n    }\n\n    \/**\n     * @param string $key\n     * @return array<int, string> Returns a state and a header.\n     * @throws Exception\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_init_push($key)\n    {\n        # randombytes_buf(out, crypto_secretstream_xchacha20poly1305_HEADERBYTES);\n        $out = random_bytes(24);\n\n        # crypto_core_hchacha20(state->k, out, k, NULL);\n        $subkey = ParagonIE_Sodium_Core_HChaCha20::hChaCha20($out, $key);\n        $state = new ParagonIE_Sodium_Core_SecretStream_State(\n            $subkey,\n            ParagonIE_Sodium_Core_Util::substr($out, 16, 8) . str_repeat(\"\\0\", 4)\n        );\n\n        # _crypto_secretstream_xchacha20poly1305_counter_reset(state);\n        $state->counterReset();\n\n        # memcpy(STATE_INONCE(state), out + crypto_core_hchacha20_INPUTBYTES,\n        #        crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        # memset(state->_pad, 0, sizeof state->_pad);\n        return array(\n            $state->toString(),\n            $out\n        );\n    }\n\n    \/**\n     * @param string $key\n     * @param string $header\n     * @return string Returns a state.\n     * @throws Exception\n     *\/\n    public static function secretstream_xchacha20poly1305_init_pull($key, $header)\n    {\n        # crypto_core_hchacha20(state->k, in, k, NULL);\n        $subkey = ParagonIE_Sodium_Core_HChaCha20::hChaCha20(\n            ParagonIE_Sodium_Core_Util::substr($header, 0, 16),\n            $key\n        );\n        $state = new ParagonIE_Sodium_Core_SecretStream_State(\n            $subkey,\n            ParagonIE_Sodium_Core_Util::substr($header, 16)\n        );\n        $state->counterReset();\n        # memcpy(STATE_INONCE(state), in + crypto_core_hchacha20_INPUTBYTES,\n        #     crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        # memset(state->_pad, 0, sizeof state->_pad);\n        # return 0;\n        return $state->toString();\n    }\n\n    \/**\n     * @param string $state\n     * @param string $msg\n     * @param string $aad\n     * @param int $tag\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_push(&$state, $msg, $aad = '', $tag = 0)\n    {\n        $st = ParagonIE_Sodium_Core_SecretStream_State::fromString($state);\n        # crypto_onetimeauth_poly1305_state poly1305_state;\n        # unsigned char                     block[64U];\n        # unsigned char                     slen[8U];\n        # unsigned char                    *c;\n        # unsigned char                    *mac;\n\n        $msglen = ParagonIE_Sodium_Core_Util::strlen($msg);\n        $aadlen = ParagonIE_Sodium_Core_Util::strlen($aad);\n\n        if ((($msglen + 63) >> 6) > 0xfffffffe) {\n            throw new SodiumException(\n                'message cannot be larger than SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX bytes'\n            );\n        }\n\n        # if (outlen_p != NULL) {\n        #     *outlen_p = 0U;\n        # }\n        # if (mlen > crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX) {\n        #     sodium_misuse();\n        # }\n\n        # crypto_stream_chacha20_ietf(block, sizeof block, state->nonce, state->k);\n        # crypto_onetimeauth_poly1305_init(&poly1305_state, block);\n        # sodium_memzero(block, sizeof block);\n        $auth = new ParagonIE_Sodium_Core_Poly1305_State(\n            ParagonIE_Sodium_Core_ChaCha20::ietfStream(32, $st->getCombinedNonce(), $st->getKey())\n        );\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, ad, adlen);\n        $auth->update($aad);\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, _pad0,\n        #     (0x10 - adlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - $aadlen) & 0xf)));\n\n        # memset(block, 0, sizeof block);\n        # block[0] = tag;\n        # crypto_stream_chacha20_ietf_xor_ic(block, block, sizeof block,\n        #                                    state->nonce, 1U, state->k);\n        $block = ParagonIE_Sodium_Core_ChaCha20::ietfStreamXorIc(\n            ParagonIE_Sodium_Core_Util::intToChr($tag) . str_repeat(\"\\0\", 63),\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core_Util::store64_le(1)\n        );\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, block, sizeof block);\n        $auth->update($block);\n\n        # out[0] = block[0];\n        $out = $block[0];\n        # c = out + (sizeof tag);\n        # crypto_stream_chacha20_ietf_xor_ic(c, m, mlen, state->nonce, 2U, state->k);\n        $cipher = ParagonIE_Sodium_Core_ChaCha20::ietfStreamXorIc(\n            $msg,\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core_Util::store64_le(2)\n        );\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, c, mlen);\n        $auth->update($cipher);\n\n        $out .= $cipher;\n        unset($cipher);\n\n        # crypto_onetimeauth_poly1305_update\n        # (&poly1305_state, _pad0, (0x10 - (sizeof block) + mlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - 64 + $msglen) & 0xf)));\n\n        # STORE64_LE(slen, (uint64_t) adlen);\n        $slen = ParagonIE_Sodium_Core_Util::store64_le($aadlen);\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $auth->update($slen);\n\n        # STORE64_LE(slen, (sizeof block) + mlen);\n        $slen = ParagonIE_Sodium_Core_Util::store64_le(64 + $msglen);\n\n        # crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $auth->update($slen);\n\n        # mac = c + mlen;\n        # crypto_onetimeauth_poly1305_final(&poly1305_state, mac);\n        $mac = $auth->finish();\n        $out .= $mac;\n\n        # sodium_memzero(&poly1305_state, sizeof poly1305_state);\n        unset($auth);\n\n\n        # XOR_BUF(STATE_INONCE(state), mac,\n        #     crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        $st->xorNonce($mac);\n\n        # sodium_increment(STATE_COUNTER(state),\n        #     crypto_secretstream_xchacha20poly1305_COUNTERBYTES);\n        $st->incrementCounter();\n        \/\/ Overwrite by reference:\n        $state = $st->toString();\n\n        \/** @var bool $rekey *\/\n        $rekey = ($tag & ParagonIE_Sodium_Compat::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY) !== 0;\n        # if ((tag & crypto_secretstream_xchacha20poly1305_TAG_REKEY) != 0 ||\n        #     sodium_is_zero(STATE_COUNTER(state),\n        #         crypto_secretstream_xchacha20poly1305_COUNTERBYTES)) {\n        #     crypto_secretstream_xchacha20poly1305_rekey(state);\n        # }\n        if ($rekey || $st->needsRekey()) {\n            \/\/ DO REKEY\n            self::secretstream_xchacha20poly1305_rekey($state);\n        }\n        # if (outlen_p != NULL) {\n        #     *outlen_p = crypto_secretstream_xchacha20poly1305_ABYTES + mlen;\n        # }\n        return $out;\n    }\n\n    \/**\n     * @param string $state\n     * @param string $cipher\n     * @param string $aad\n     * @return bool|array{0: string, 1: int}\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_pull(&$state, $cipher, $aad = '')\n    {\n        $st = ParagonIE_Sodium_Core_SecretStream_State::fromString($state);\n\n        $cipherlen = ParagonIE_Sodium_Core_Util::strlen($cipher);\n        #     mlen = inlen - crypto_secretstream_xchacha20poly1305_ABYTES;\n        $msglen = $cipherlen - ParagonIE_Sodium_Compat::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES;\n        $aadlen = ParagonIE_Sodium_Core_Util::strlen($aad);\n\n        #     if (mlen > crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX) {\n        #         sodium_misuse();\n        #     }\n        if ((($msglen + 63) >> 6) > 0xfffffffe) {\n            throw new SodiumException(\n                'message cannot be larger than SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX bytes'\n            );\n        }\n\n        #     crypto_stream_chacha20_ietf(block, sizeof block, state->nonce, state->k);\n        #     crypto_onetimeauth_poly1305_init(&poly1305_state, block);\n        #     sodium_memzero(block, sizeof block);\n        $auth = new ParagonIE_Sodium_Core_Poly1305_State(\n            ParagonIE_Sodium_Core_ChaCha20::ietfStream(32, $st->getCombinedNonce(), $st->getKey())\n        );\n\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, ad, adlen);\n        $auth->update($aad);\n\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, _pad0,\n        #         (0x10 - adlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - $aadlen) & 0xf)));\n\n\n        #     memset(block, 0, sizeof block);\n        #     block[0] = in[0];\n        #     crypto_stream_chacha20_ietf_xor_ic(block, block, sizeof block,\n        #                                        state->nonce, 1U, state->k);\n        $block = ParagonIE_Sodium_Core_ChaCha20::ietfStreamXorIc(\n            $cipher[0] . str_repeat(\"\\0\", 63),\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core_Util::store64_le(1)\n        );\n        #     tag = block[0];\n        #     block[0] = in[0];\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, block, sizeof block);\n        $tag = ParagonIE_Sodium_Core_Util::chrToInt($block[0]);\n        $block[0] = $cipher[0];\n        $auth->update($block);\n\n\n        #     c = in + (sizeof tag);\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, c, mlen);\n        $auth->update(ParagonIE_Sodium_Core_Util::substr($cipher, 1, $msglen));\n\n        #     crypto_onetimeauth_poly1305_update\n        #     (&poly1305_state, _pad0, (0x10 - (sizeof block) + mlen) & 0xf);\n        $auth->update(str_repeat(\"\\0\", ((0x10 - 64 + $msglen) & 0xf)));\n\n        #     STORE64_LE(slen, (uint64_t) adlen);\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $slen = ParagonIE_Sodium_Core_Util::store64_le($aadlen);\n        $auth->update($slen);\n\n        #     STORE64_LE(slen, (sizeof block) + mlen);\n        #     crypto_onetimeauth_poly1305_update(&poly1305_state, slen, sizeof slen);\n        $slen = ParagonIE_Sodium_Core_Util::store64_le(64 + $msglen);\n        $auth->update($slen);\n\n        #     crypto_onetimeauth_poly1305_final(&poly1305_state, mac);\n        #     sodium_memzero(&poly1305_state, sizeof poly1305_state);\n        $mac = $auth->finish();\n\n        #     stored_mac = c + mlen;\n        #     if (sodium_memcmp(mac, stored_mac, sizeof mac) != 0) {\n        #     sodium_memzero(mac, sizeof mac);\n        #         return -1;\n        #     }\n\n        $stored = ParagonIE_Sodium_Core_Util::substr($cipher, $msglen + 1, 16);\n        if (!ParagonIE_Sodium_Core_Util::hashEquals($mac, $stored)) {\n            return false;\n        }\n\n        #     crypto_stream_chacha20_ietf_xor_ic(m, c, mlen, state->nonce, 2U, state->k);\n        $out = ParagonIE_Sodium_Core_ChaCha20::ietfStreamXorIc(\n            ParagonIE_Sodium_Core_Util::substr($cipher, 1, $msglen),\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core_Util::store64_le(2)\n        );\n\n        #     XOR_BUF(STATE_INONCE(state), mac,\n        #         crypto_secretstream_xchacha20poly1305_INONCEBYTES);\n        $st->xorNonce($mac);\n\n        #     sodium_increment(STATE_COUNTER(state),\n        #         crypto_secretstream_xchacha20poly1305_COUNTERBYTES);\n        $st->incrementCounter();\n\n        #     if ((tag & crypto_secretstream_xchacha20poly1305_TAG_REKEY) != 0 ||\n        #         sodium_is_zero(STATE_COUNTER(state),\n        #             crypto_secretstream_xchacha20poly1305_COUNTERBYTES)) {\n        #         crypto_secretstream_xchacha20poly1305_rekey(state);\n        #     }\n\n        \/\/ Overwrite by reference:\n        $state = $st->toString();\n\n        \/** @var bool $rekey *\/\n        $rekey = ($tag & ParagonIE_Sodium_Compat::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY) !== 0;\n        if ($rekey || $st->needsRekey()) {\n            \/\/ DO REKEY\n            self::secretstream_xchacha20poly1305_rekey($state);\n        }\n        return array($out, $tag);\n    }\n\n    \/**\n     * @param string $state\n     * @return void\n     * @throws SodiumException\n     *\/\n    public static function secretstream_xchacha20poly1305_rekey(&$state)\n    {\n        $st = ParagonIE_Sodium_Core_SecretStream_State::fromString($state);\n        # unsigned char new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES +\n        # crypto_secretstream_xchacha20poly1305_INONCEBYTES];\n        # size_t        i;\n        # for (i = 0U; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n        #     new_key_and_inonce[i] = state->k[i];\n        # }\n        $new_key_and_inonce = $st->getKey();\n\n        # for (i = 0U; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n        #     new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i] =\n        #         STATE_INONCE(state)[i];\n        # }\n        $new_key_and_inonce .= ParagonIE_Sodium_Core_Util::substR($st->getNonce(), 0, 8);\n\n        # crypto_stream_chacha20_ietf_xor(new_key_and_inonce, new_key_and_inonce,\n        #                                 sizeof new_key_and_inonce,\n        #                                 state->nonce, state->k);\n\n        $st->rekey(ParagonIE_Sodium_Core_ChaCha20::ietfStreamXorIc(\n            $new_key_and_inonce,\n            $st->getCombinedNonce(),\n            $st->getKey(),\n            ParagonIE_Sodium_Core_Util::store64_le(0)\n        ));\n\n        # for (i = 0U; i < crypto_stream_chacha20_ietf_KEYBYTES; i++) {\n        #     state->k[i] = new_key_and_inonce[i];\n        # }\n        # for (i = 0U; i < crypto_secretstream_xchacha20poly1305_INONCEBYTES; i++) {\n        #     STATE_INONCE(state)[i] =\n        #          new_key_and_inonce[crypto_stream_chacha20_ietf_KEYBYTES + i];\n        # }\n        # _crypto_secretstream_xchacha20poly1305_counter_reset(state);\n        $st->counterReset();\n\n        $state = $st->toString();\n    }\n\n    \/**\n     * Detached Ed25519 signature.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign_detached($message, $sk)\n    {\n        return ParagonIE_Sodium_Core_Ed25519::sign_detached($message, $sk);\n    }\n\n    \/**\n     * Attached Ed25519 signature. (Returns a signed message.)\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $message\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign($message, $sk)\n    {\n        return ParagonIE_Sodium_Core_Ed25519::sign($message, $sk);\n    }\n\n    \/**\n     * Opens a signed message. If valid, returns the message.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $signedMessage\n     * @param string $pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign_open($signedMessage, $pk)\n    {\n        return ParagonIE_Sodium_Core_Ed25519::sign_open($signedMessage, $pk);\n    }\n\n    \/**\n     * Verify a detached signature of a given message and public key.\n     *\n     * @internal Do not use this directly. Use ParagonIE_Sodium_Compat.\n     *\n     * @param string $signature\n     * @param string $message\n     * @param string $pk\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign_verify_detached($signature, $message, $pk)\n    {\n        return ParagonIE_Sodium_Core_Ed25519::verify_detached($signature, $message, $pk);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Ed25519.php","ext":"php","size":15794,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Ed25519', false)) {\n    return;\n}\nif (!class_exists('ParagonIE_Sodium_Core32_Curve25519')) {\n    require_once dirname(__FILE__) . '\/Curve25519.php';\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Ed25519\n *\/\nabstract class ParagonIE_Sodium_Core32_Ed25519 extends ParagonIE_Sodium_Core32_Curve25519\n{\n    const KEYPAIR_BYTES = 96;\n    const SEED_BYTES = 32;\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @return string (96 bytes)\n     * @throws Exception\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function keypair()\n    {\n        $seed = random_bytes(self::SEED_BYTES);\n        $pk = '';\n        $sk = '';\n        self::seed_keypair($pk, $sk, $seed);\n        return $sk . $pk;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $pk\n     * @param string $sk\n     * @param string $seed\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function seed_keypair(&$pk, &$sk, $seed)\n    {\n        if (self::strlen($seed) !== self::SEED_BYTES) {\n            throw new RangeException('crypto_sign keypair seed must be 32 bytes long');\n        }\n\n        \/** @var string $pk *\/\n        $pk = self::publickey_from_secretkey($seed);\n        $sk = $seed . $pk;\n        return $sk;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $keypair\n     * @return string\n     * @throws TypeError\n     *\/\n    public static function secretkey($keypair)\n    {\n        if (self::strlen($keypair) !== self::KEYPAIR_BYTES) {\n            throw new RangeException('crypto_sign keypair must be 96 bytes long');\n        }\n        return self::substr($keypair, 0, 64);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $keypair\n     * @return string\n     * @throws RangeException\n     * @throws TypeError\n     *\/\n    public static function publickey($keypair)\n    {\n        if (self::strlen($keypair) !== self::KEYPAIR_BYTES) {\n            throw new RangeException('crypto_sign keypair must be 96 bytes long');\n        }\n        return self::substr($keypair, 64, 32);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function publickey_from_secretkey($sk)\n    {\n        \/** @var string $sk *\/\n        $sk = hash('sha512', self::substr($sk, 0, 32), true);\n        $sk[0] = self::intToChr(\n            self::chrToInt($sk[0]) & 248\n        );\n        $sk[31] = self::intToChr(\n            (self::chrToInt($sk[31]) & 63) | 64\n        );\n        return self::sk_to_pk($sk);\n    }\n\n    \/**\n     * @param string $pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function pk_to_curve25519($pk)\n    {\n        if (self::small_order($pk)) {\n            throw new SodiumException('Public key is on a small order');\n        }\n        $A = self::ge_frombytes_negate_vartime($pk);\n        $p1 = self::ge_mul_l($A);\n        if (!self::fe_isnonzero($p1->X)) {\n            throw new SodiumException('Unexpected zero result');\n        }\n\n        # fe_1(one_minus_y);\n        # fe_sub(one_minus_y, one_minus_y, A.Y);\n        # fe_invert(one_minus_y, one_minus_y);\n        $one_minux_y = self::fe_invert(\n            self::fe_sub(\n                self::fe_1(),\n                $A->Y\n            )\n        );\n\n\n        # fe_1(x);\n        # fe_add(x, x, A.Y);\n        # fe_mul(x, x, one_minus_y);\n        $x = self::fe_mul(\n            self::fe_add(self::fe_1(), $A->Y),\n            $one_minux_y\n        );\n\n        # fe_tobytes(curve25519_pk, x);\n        return self::fe_tobytes($x);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sk_to_pk($sk)\n    {\n        return self::ge_p3_tobytes(\n            self::ge_scalarmult_base(\n                self::substr($sk, 0, 32)\n            )\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign($message, $sk)\n    {\n        \/** @var string $signature *\/\n        $signature = self::sign_detached($message, $sk);\n        return $signature . $message;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message A signed message\n     * @param string $pk      Public key\n     * @return string         Message (without signature)\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign_open($message, $pk)\n    {\n        \/** @var string $signature *\/\n        $signature = self::substr($message, 0, 64);\n\n        \/** @var string $message *\/\n        $message = self::substr($message, 64);\n\n        if (self::verify_detached($signature, $message, $pk)) {\n            return $message;\n        }\n        throw new SodiumException('Invalid signature');\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress PossiblyInvalidArgument\n     *\/\n    public static function sign_detached($message, $sk)\n    {\n        # crypto_hash_sha512(az, sk, 32);\n        $az =  hash('sha512', self::substr($sk, 0, 32), true);\n\n        # az[0] &= 248;\n        # az[31] &= 63;\n        # az[31] |= 64;\n        $az[0] = self::intToChr(self::chrToInt($az[0]) & 248);\n        $az[31] = self::intToChr((self::chrToInt($az[31]) & 63) | 64);\n\n        # crypto_hash_sha512_init(&hs);\n        # crypto_hash_sha512_update(&hs, az + 32, 32);\n        # crypto_hash_sha512_update(&hs, m, mlen);\n        # crypto_hash_sha512_final(&hs, nonce);\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($az, 32, 32));\n        self::hash_update($hs, $message);\n        $nonceHash = hash_final($hs, true);\n\n        # memmove(sig + 32, sk + 32, 32);\n        $pk = self::substr($sk, 32, 32);\n\n        # sc_reduce(nonce);\n        # ge_scalarmult_base(&R, nonce);\n        # ge_p3_tobytes(sig, &R);\n        $nonce = self::sc_reduce($nonceHash) . self::substr($nonceHash, 32);\n        $sig = self::ge_p3_tobytes(\n            self::ge_scalarmult_base($nonce)\n        );\n\n        # crypto_hash_sha512_init(&hs);\n        # crypto_hash_sha512_update(&hs, sig, 64);\n        # crypto_hash_sha512_update(&hs, m, mlen);\n        # crypto_hash_sha512_final(&hs, hram);\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($sig, 0, 32));\n        self::hash_update($hs, self::substr($pk, 0, 32));\n        self::hash_update($hs, $message);\n        $hramHash = hash_final($hs, true);\n\n        # sc_reduce(hram);\n        # sc_muladd(sig + 32, hram, az, nonce);\n        $hram = self::sc_reduce($hramHash);\n        $sigAfter = self::sc_muladd($hram, $az, $nonce);\n        $sig = self::substr($sig, 0, 32) . self::substr($sigAfter, 0, 32);\n\n        try {\n            ParagonIE_Sodium_Compat::memzero($az);\n        } catch (SodiumException $ex) {\n            $az = null;\n        }\n        return $sig;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $sig\n     * @param string $message\n     * @param string $pk\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function verify_detached($sig, $message, $pk)\n    {\n        if (self::strlen($sig) < 64) {\n            throw new SodiumException('Signature is too short');\n        }\n        if ((self::chrToInt($sig[63]) & 240) && self::check_S_lt_L(self::substr($sig, 32, 32))) {\n            throw new SodiumException('S < L - Invalid signature');\n        }\n        if (self::small_order($sig)) {\n            throw new SodiumException('Signature is on too small of an order');\n        }\n        if ((self::chrToInt($sig[63]) & 224) !== 0) {\n            throw new SodiumException('Invalid signature');\n        }\n        $d = 0;\n        for ($i = 0; $i < 32; ++$i) {\n            $d |= self::chrToInt($pk[$i]);\n        }\n        if ($d === 0) {\n            throw new SodiumException('All zero public key');\n        }\n\n        \/** @var bool The original value of ParagonIE_Sodium_Compat::$fastMult *\/\n        $orig = ParagonIE_Sodium_Compat::$fastMult;\n\n        \/\/ Set ParagonIE_Sodium_Compat::$fastMult to true to speed up verification.\n        ParagonIE_Sodium_Compat::$fastMult = true;\n\n        \/** @var ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $A *\/\n        $A = self::ge_frombytes_negate_vartime($pk);\n\n        \/** @var string $hDigest *\/\n        $hDigest = hash(\n            'sha512',\n            self::substr($sig, 0, 32) .\n            self::substr($pk, 0, 32) .\n            $message,\n            true\n        );\n\n        \/** @var string $h *\/\n        $h = self::sc_reduce($hDigest) . self::substr($hDigest, 32);\n\n        \/** @var ParagonIE_Sodium_Core32_Curve25519_Ge_P2 $R *\/\n        $R = self::ge_double_scalarmult_vartime(\n            $h,\n            $A,\n            self::substr($sig, 32)\n        );\n\n        \/** @var string $rcheck *\/\n        $rcheck = self::ge_tobytes($R);\n\n        \/\/ Reset ParagonIE_Sodium_Compat::$fastMult to what it was before.\n        ParagonIE_Sodium_Compat::$fastMult = $orig;\n\n        return self::verify_32($rcheck, self::substr($sig, 0, 32));\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $S\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function check_S_lt_L($S)\n    {\n        if (self::strlen($S) < 32) {\n            throw new SodiumException('Signature must be 32 bytes');\n        }\n        static $L = array(\n            0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n            0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10\n        );\n        \/** @var array<int, int> $L *\/\n        $c = 0;\n        $n = 1;\n        $i = 32;\n\n        do {\n            --$i;\n            $x = self::chrToInt($S[$i]);\n            $c |= (\n                (($x - $L[$i]) >> 8) & $n\n            );\n            $n &= (\n                (($x ^ $L[$i]) - 1) >> 8\n            );\n        } while ($i !== 0);\n\n        return $c === 0;\n    }\n\n    \/**\n     * @param string $R\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function small_order($R)\n    {\n        static $blocklist = array(\n            \/* 0 (order 4) *\/\n            array(\n                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n            ),\n            \/* 1 (order 1) *\/\n            array(\n                0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00\n            ),\n            \/* 2707385501144840649318225287225658788936804267575313519463743609750303402022 (order 8) *\/\n            array(\n                0x26, 0xe8, 0x95, 0x8f, 0xc2, 0xb2, 0x27, 0xb0,\n                0x45, 0xc3, 0xf4, 0x89, 0xf2, 0xef, 0x98, 0xf0,\n                0xd5, 0xdf, 0xac, 0x05, 0xd3, 0xc6, 0x33, 0x39,\n                0xb1, 0x38, 0x02, 0x88, 0x6d, 0x53, 0xfc, 0x05\n            ),\n            \/* 55188659117513257062467267217118295137698188065244968500265048394206261417927 (order 8) *\/\n            array(\n                0xc7, 0x17, 0x6a, 0x70, 0x3d, 0x4d, 0xd8, 0x4f,\n                0xba, 0x3c, 0x0b, 0x76, 0x0d, 0x10, 0x67, 0x0f,\n                0x2a, 0x20, 0x53, 0xfa, 0x2c, 0x39, 0xcc, 0xc6,\n                0x4e, 0xc7, 0xfd, 0x77, 0x92, 0xac, 0x03, 0x7a\n            ),\n            \/* p-1 (order 2) *\/\n            array(\n                0x13, 0xe8, 0x95, 0x8f, 0xc2, 0xb2, 0x27, 0xb0,\n                0x45, 0xc3, 0xf4, 0x89, 0xf2, 0xef, 0x98, 0xf0,\n                0xd5, 0xdf, 0xac, 0x05, 0xd3, 0xc6, 0x33, 0x39,\n                0xb1, 0x38, 0x02, 0x88, 0x6d, 0x53, 0xfc, 0x85\n            ),\n            \/* p (order 4) *\/\n            array(\n                0xb4, 0x17, 0x6a, 0x70, 0x3d, 0x4d, 0xd8, 0x4f,\n                0xba, 0x3c, 0x0b, 0x76, 0x0d, 0x10, 0x67, 0x0f,\n                0x2a, 0x20, 0x53, 0xfa, 0x2c, 0x39, 0xcc, 0xc6,\n                0x4e, 0xc7, 0xfd, 0x77, 0x92, 0xac, 0x03, 0xfa\n            ),\n            \/* p+1 (order 1) *\/\n            array(\n                0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f\n            ),\n            \/* p+2707385501144840649318225287225658788936804267575313519463743609750303402022 (order 8) *\/\n            array(\n                0xed, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f\n            ),\n            \/* p+55188659117513257062467267217118295137698188065244968500265048394206261417927 (order 8) *\/\n            array(\n                0xee, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f\n            ),\n            \/* 2p-1 (order 2) *\/\n            array(\n                0xd9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff\n            ),\n            \/* 2p (order 4) *\/\n            array(\n                0xda, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff\n            ),\n            \/* 2p+1 (order 1) *\/\n            array(\n                0xdb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,\n                0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff\n            )\n        );\n        \/** @var array<int, array<int, int>> $blocklist *\/\n        $countBlocklist = count($blocklist);\n\n        for ($i = 0; $i < $countBlocklist; ++$i) {\n            $c = 0;\n            for ($j = 0; $j < 32; ++$j) {\n                $c |= self::chrToInt($R[$j]) ^ $blocklist[$i][$j];\n            }\n            if ($c === 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/X25519.php","ext":"php","size":11101,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_X25519', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_X25519\n *\/\nabstract class ParagonIE_Sodium_Core32_X25519 extends ParagonIE_Sodium_Core32_Curve25519\n{\n    \/**\n     * Alters the objects passed to this method in place.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $g\n     * @param int $b\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_cswap(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $f,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $g,\n        $b = 0\n    ) {\n        $f0 = (int) $f[0]->toInt();\n        $f1 = (int) $f[1]->toInt();\n        $f2 = (int) $f[2]->toInt();\n        $f3 = (int) $f[3]->toInt();\n        $f4 = (int) $f[4]->toInt();\n        $f5 = (int) $f[5]->toInt();\n        $f6 = (int) $f[6]->toInt();\n        $f7 = (int) $f[7]->toInt();\n        $f8 = (int) $f[8]->toInt();\n        $f9 = (int) $f[9]->toInt();\n        $g0 = (int) $g[0]->toInt();\n        $g1 = (int) $g[1]->toInt();\n        $g2 = (int) $g[2]->toInt();\n        $g3 = (int) $g[3]->toInt();\n        $g4 = (int) $g[4]->toInt();\n        $g5 = (int) $g[5]->toInt();\n        $g6 = (int) $g[6]->toInt();\n        $g7 = (int) $g[7]->toInt();\n        $g8 = (int) $g[8]->toInt();\n        $g9 = (int) $g[9]->toInt();\n        $b = -$b;\n        \/** @var int $x0 *\/\n        $x0 = ($f0 ^ $g0) & $b;\n        \/** @var int $x1 *\/\n        $x1 = ($f1 ^ $g1) & $b;\n        \/** @var int $x2 *\/\n        $x2 = ($f2 ^ $g2) & $b;\n        \/** @var int $x3 *\/\n        $x3 = ($f3 ^ $g3) & $b;\n        \/** @var int $x4 *\/\n        $x4 = ($f4 ^ $g4) & $b;\n        \/** @var int $x5 *\/\n        $x5 = ($f5 ^ $g5) & $b;\n        \/** @var int $x6 *\/\n        $x6 = ($f6 ^ $g6) & $b;\n        \/** @var int $x7 *\/\n        $x7 = ($f7 ^ $g7) & $b;\n        \/** @var int $x8 *\/\n        $x8 = ($f8 ^ $g8) & $b;\n        \/** @var int $x9 *\/\n        $x9 = ($f9 ^ $g9) & $b;\n        $f[0] = ParagonIE_Sodium_Core32_Int32::fromInt($f0 ^ $x0);\n        $f[1] = ParagonIE_Sodium_Core32_Int32::fromInt($f1 ^ $x1);\n        $f[2] = ParagonIE_Sodium_Core32_Int32::fromInt($f2 ^ $x2);\n        $f[3] = ParagonIE_Sodium_Core32_Int32::fromInt($f3 ^ $x3);\n        $f[4] = ParagonIE_Sodium_Core32_Int32::fromInt($f4 ^ $x4);\n        $f[5] = ParagonIE_Sodium_Core32_Int32::fromInt($f5 ^ $x5);\n        $f[6] = ParagonIE_Sodium_Core32_Int32::fromInt($f6 ^ $x6);\n        $f[7] = ParagonIE_Sodium_Core32_Int32::fromInt($f7 ^ $x7);\n        $f[8] = ParagonIE_Sodium_Core32_Int32::fromInt($f8 ^ $x8);\n        $f[9] = ParagonIE_Sodium_Core32_Int32::fromInt($f9 ^ $x9);\n        $g[0] = ParagonIE_Sodium_Core32_Int32::fromInt($g0 ^ $x0);\n        $g[1] = ParagonIE_Sodium_Core32_Int32::fromInt($g1 ^ $x1);\n        $g[2] = ParagonIE_Sodium_Core32_Int32::fromInt($g2 ^ $x2);\n        $g[3] = ParagonIE_Sodium_Core32_Int32::fromInt($g3 ^ $x3);\n        $g[4] = ParagonIE_Sodium_Core32_Int32::fromInt($g4 ^ $x4);\n        $g[5] = ParagonIE_Sodium_Core32_Int32::fromInt($g5 ^ $x5);\n        $g[6] = ParagonIE_Sodium_Core32_Int32::fromInt($g6 ^ $x6);\n        $g[7] = ParagonIE_Sodium_Core32_Int32::fromInt($g7 ^ $x7);\n        $g[8] = ParagonIE_Sodium_Core32_Int32::fromInt($g8 ^ $x8);\n        $g[9] = ParagonIE_Sodium_Core32_Int32::fromInt($g9 ^ $x9);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_mul121666(ParagonIE_Sodium_Core32_Curve25519_Fe $f)\n    {\n        \/** @var array<int, ParagonIE_Sodium_Core32_Int64> $h *\/\n        $h = array();\n        for ($i = 0; $i < 10; ++$i) {\n            $h[$i] = $f[$i]->toInt64()->mulInt(121666, 17);\n        }\n\n        $carry9 = $h[9]->addInt(1 << 24)->shiftRight(25);\n        $h[0] = $h[0]->addInt64($carry9->mulInt(19, 5));\n        $h[9] = $h[9]->subInt64($carry9->shiftLeft(25));\n\n        $carry1 = $h[1]->addInt(1 << 24)->shiftRight(25);\n        $h[2] = $h[2]->addInt64($carry1);\n        $h[1] = $h[1]->subInt64($carry1->shiftLeft(25));\n\n        $carry3 = $h[3]->addInt(1 << 24)->shiftRight(25);\n        $h[4] = $h[4]->addInt64($carry3);\n        $h[3] = $h[3]->subInt64($carry3->shiftLeft(25));\n\n        $carry5 = $h[5]->addInt(1 << 24)->shiftRight(25);\n        $h[6] = $h[6]->addInt64($carry5);\n        $h[5] = $h[5]->subInt64($carry5->shiftLeft(25));\n\n        $carry7 = $h[7]->addInt(1 << 24)->shiftRight(25);\n        $h[8] = $h[8]->addInt64($carry7);\n        $h[7] = $h[7]->subInt64($carry7->shiftLeft(25));\n\n        $carry0 = $h[0]->addInt(1 << 25)->shiftRight(26);\n        $h[1] = $h[1]->addInt64($carry0);\n        $h[0] = $h[0]->subInt64($carry0->shiftLeft(26));\n\n        $carry2 = $h[2]->addInt(1 << 25)->shiftRight(26);\n        $h[3] = $h[3]->addInt64($carry2);\n        $h[2] = $h[2]->subInt64($carry2->shiftLeft(26));\n\n        $carry4 = $h[4]->addInt(1 << 25)->shiftRight(26);\n        $h[5] = $h[5]->addInt64($carry4);\n        $h[4] = $h[4]->subInt64($carry4->shiftLeft(26));\n\n        $carry6 = $h[6]->addInt(1 << 25)->shiftRight(26);\n        $h[7] = $h[7]->addInt64($carry6);\n        $h[6] = $h[6]->subInt64($carry6->shiftLeft(26));\n\n        $carry8 = $h[8]->addInt(1 << 25)->shiftRight(26);\n        $h[9] = $h[9]->addInt64($carry8);\n        $h[8] = $h[8]->subInt64($carry8->shiftLeft(26));\n\n        for ($i = 0; $i < 10; ++$i) {\n            $h[$i] = $h[$i]->toInt32();\n        }\n        \/** @var array<int, ParagonIE_Sodium_Core32_Int32> $h2 *\/\n        $h2 = $h;\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray($h2);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * Inline comments preceded by # are from libsodium's ref10 code.\n     *\n     * @param string $n\n     * @param string $p\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function crypto_scalarmult_curve25519_ref10($n, $p)\n    {\n        # for (i = 0;i < 32;++i) e[i] = n[i];\n        $e = '' . $n;\n        # e[0] &= 248;\n        $e[0] = self::intToChr(\n            self::chrToInt($e[0]) & 248\n        );\n        # e[31] &= 127;\n        # e[31] |= 64;\n        $e[31] = self::intToChr(\n            (self::chrToInt($e[31]) & 127) | 64\n        );\n        # fe_frombytes(x1,p);\n        $x1 = self::fe_frombytes($p);\n        # fe_1(x2);\n        $x2 = self::fe_1();\n        # fe_0(z2);\n        $z2 = self::fe_0();\n        # fe_copy(x3,x1);\n        $x3 = self::fe_copy($x1);\n        # fe_1(z3);\n        $z3 = self::fe_1();\n\n        # swap = 0;\n        \/** @var int $swap *\/\n        $swap = 0;\n\n        # for (pos = 254;pos >= 0;--pos) {\n        for ($pos = 254; $pos >= 0; --$pos) {\n            # b = e[pos \/ 8] >> (pos & 7);\n            \/** @var int $b *\/\n            $b = self::chrToInt(\n                    $e[(int) floor($pos \/ 8)]\n                ) >> ($pos & 7);\n            # b &= 1;\n            $b &= 1;\n\n            # swap ^= b;\n            $swap ^= $b;\n\n            # fe_cswap(x2,x3,swap);\n            self::fe_cswap($x2, $x3, $swap);\n\n            # fe_cswap(z2,z3,swap);\n            self::fe_cswap($z2, $z3, $swap);\n\n            # swap = b;\n            \/** @var int $swap *\/\n            $swap = $b;\n\n            # fe_sub(tmp0,x3,z3);\n            $tmp0 = self::fe_sub($x3, $z3);\n\n            # fe_sub(tmp1,x2,z2);\n            $tmp1 = self::fe_sub($x2, $z2);\n\n            # fe_add(x2,x2,z2);\n            $x2 = self::fe_add($x2, $z2);\n\n            # fe_add(z2,x3,z3);\n            $z2 = self::fe_add($x3, $z3);\n\n            # fe_mul(z3,tmp0,x2);\n            $z3 = self::fe_mul($tmp0, $x2);\n\n            # fe_mul(z2,z2,tmp1);\n            $z2 = self::fe_mul($z2, $tmp1);\n\n            # fe_sq(tmp0,tmp1);\n            $tmp0 = self::fe_sq($tmp1);\n\n            # fe_sq(tmp1,x2);\n            $tmp1 = self::fe_sq($x2);\n\n            # fe_add(x3,z3,z2);\n            $x3 = self::fe_add($z3, $z2);\n\n            # fe_sub(z2,z3,z2);\n            $z2 = self::fe_sub($z3, $z2);\n\n            # fe_mul(x2,tmp1,tmp0);\n            $x2 = self::fe_mul($tmp1, $tmp0);\n\n            # fe_sub(tmp1,tmp1,tmp0);\n            $tmp1 = self::fe_sub($tmp1, $tmp0);\n\n            # fe_sq(z2,z2);\n            $z2 = self::fe_sq($z2);\n\n            # fe_mul121666(z3,tmp1);\n            $z3 = self::fe_mul121666($tmp1);\n\n            # fe_sq(x3,x3);\n            $x3 = self::fe_sq($x3);\n\n            # fe_add(tmp0,tmp0,z3);\n            $tmp0 = self::fe_add($tmp0, $z3);\n\n            # fe_mul(z3,x1,z2);\n            $z3 = self::fe_mul($x1, $z2);\n\n            # fe_mul(z2,tmp1,tmp0);\n            $z2 = self::fe_mul($tmp1, $tmp0);\n        }\n\n        # fe_cswap(x2,x3,swap);\n        self::fe_cswap($x2, $x3, $swap);\n\n        # fe_cswap(z2,z3,swap);\n        self::fe_cswap($z2, $z3, $swap);\n\n        # fe_invert(z2,z2);\n        $z2 = self::fe_invert($z2);\n\n        # fe_mul(x2,x2,z2);\n        $x2 = self::fe_mul($x2, $z2);\n        # fe_tobytes(q,x2);\n        return (string) self::fe_tobytes($x2);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $edwardsY\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $edwardsZ\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function edwards_to_montgomery(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $edwardsY,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $edwardsZ\n    ) {\n        $tempX = self::fe_add($edwardsZ, $edwardsY);\n        $tempZ = self::fe_sub($edwardsZ, $edwardsY);\n        $tempZ = self::fe_invert($tempZ);\n        return self::fe_mul($tempX, $tempZ);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $n\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function crypto_scalarmult_curve25519_ref10_base($n)\n    {\n        # for (i = 0;i < 32;++i) e[i] = n[i];\n        $e = '' . $n;\n\n        # e[0] &= 248;\n        $e[0] = self::intToChr(\n            self::chrToInt($e[0]) & 248\n        );\n\n        # e[31] &= 127;\n        # e[31] |= 64;\n        $e[31] = self::intToChr(\n            (self::chrToInt($e[31]) & 127) | 64\n        );\n\n        $A = self::ge_scalarmult_base($e);\n        if (\n            !($A->Y instanceof ParagonIE_Sodium_Core32_Curve25519_Fe)\n                ||\n            !($A->Z instanceof ParagonIE_Sodium_Core32_Curve25519_Fe)\n        ) {\n            throw new TypeError('Null points encountered');\n        }\n        $pk = self::edwards_to_montgomery($A->Y, $A->Z);\n        return self::fe_tobytes($pk);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Int32.php","ext":"php","size":24639,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\n\/**\n * Class ParagonIE_Sodium_Core32_Int32\n *\n * Encapsulates a 32-bit integer.\n *\n * These are immutable. It always returns a new instance.\n *\/\nclass ParagonIE_Sodium_Core32_Int32\n{\n    \/**\n     * @var array<int, int> - two 16-bit integers\n     *\n     * 0 is the higher 16 bits\n     * 1 is the lower 16 bits\n     *\/\n    public $limbs = array(0, 0);\n\n    \/**\n     * @var int\n     *\/\n    public $overflow = 0;\n\n    \/**\n     * @var bool\n     *\/\n    public $unsignedInt = false;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Int32 constructor.\n     * @param array $array\n     * @param bool $unsignedInt\n     *\/\n    public function __construct($array = array(0, 0), $unsignedInt = false)\n    {\n        $this->limbs = array(\n            (int) $array[0],\n            (int) $array[1]\n        );\n        $this->overflow = 0;\n        $this->unsignedInt = $unsignedInt;\n    }\n\n    \/**\n     * Adds two int32 objects\n     *\n     * @param ParagonIE_Sodium_Core32_Int32 $addend\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function addInt32(ParagonIE_Sodium_Core32_Int32 $addend)\n    {\n        $i0 = $this->limbs[0];\n        $i1 = $this->limbs[1];\n        $j0 = $addend->limbs[0];\n        $j1 = $addend->limbs[1];\n\n        $r1 = $i1 + ($j1 & 0xffff);\n        $carry = $r1 >> 16;\n\n        $r0 = $i0 + ($j0 & 0xffff) + $carry;\n        $carry = $r0 >> 16;\n\n        $r0 &= 0xffff;\n        $r1 &= 0xffff;\n\n        $return = new ParagonIE_Sodium_Core32_Int32(\n            array($r0, $r1)\n        );\n        $return->overflow = $carry;\n        $return->unsignedInt = $this->unsignedInt;\n        return $return;\n    }\n\n    \/**\n     * Adds a normal integer to an int32 object\n     *\n     * @param int $int\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function addInt($int)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($int, 'int', 1);\n        \/** @var int $int *\/\n        $int = (int) $int;\n\n        $int = (int) $int;\n\n        $i0 = $this->limbs[0];\n        $i1 = $this->limbs[1];\n\n        $r1 = $i1 + ($int & 0xffff);\n        $carry = $r1 >> 16;\n\n        $r0 = $i0 + (($int >> 16) & 0xffff) + $carry;\n        $carry = $r0 >> 16;\n        $r0 &= 0xffff;\n        $r1 &= 0xffff;\n        $return = new ParagonIE_Sodium_Core32_Int32(\n            array($r0, $r1)\n        );\n        $return->overflow = $carry;\n        $return->unsignedInt = $this->unsignedInt;\n        return $return;\n    }\n\n    \/**\n     * @param int $b\n     * @return int\n     *\/\n    public function compareInt($b = 0)\n    {\n        $gt = 0;\n        $eq = 1;\n\n        $i = 2;\n        $j = 0;\n        while ($i > 0) {\n            --$i;\n            \/** @var int $x1 *\/\n            $x1 = $this->limbs[$i];\n            \/** @var int $x2 *\/\n            $x2 = ($b >> ($j << 4)) & 0xffff;\n            \/** @var int $gt *\/\n            $gt |= (($x2 - $x1) >> 8) & $eq;\n            \/** @var int $eq *\/\n            $eq &= (($x2 ^ $x1) - 1) >> 8;\n        }\n        return ($gt + $gt - $eq) + 1;\n    }\n\n    \/**\n     * @param int $m\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function mask($m = 0)\n    {\n        \/** @var int $hi *\/\n        $hi = ((int) $m >> 16);\n        $hi &= 0xffff;\n        \/** @var int $lo *\/\n        $lo = ((int) $m) & 0xffff;\n        return new ParagonIE_Sodium_Core32_Int32(\n            array(\n                (int) ($this->limbs[0] & $hi),\n                (int) ($this->limbs[1] & $lo)\n            ),\n            $this->unsignedInt\n        );\n    }\n\n    \/**\n     * @param array<int, int> $a\n     * @param array<int, int> $b\n     * @param int $baseLog2\n     * @return array<int, int>\n     *\/\n    public function multiplyLong(array $a, array $b, $baseLog2 = 16)\n    {\n        $a_l = count($a);\n        $b_l = count($b);\n        \/** @var array<int, int> $r *\/\n        $r = array_fill(0, $a_l + $b_l + 1, 0);\n        $base = 1 << $baseLog2;\n        for ($i = 0; $i < $a_l; ++$i) {\n            $a_i = $a[$i];\n            for ($j = 0; $j < $a_l; ++$j) {\n                $b_j = $b[$j];\n                $product = ($a_i * $b_j) + $r[$i + $j];\n                $carry = ((int) $product >> $baseLog2 & 0xffff);\n                $r[$i + $j] = ((int) $product - (int) ($carry * $base)) & 0xffff;\n                $r[$i + $j + 1] += $carry;\n            }\n        }\n        return array_slice($r, 0, 5);\n    }\n\n    \/**\n     * @param int $int\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function mulIntFast($int)\n    {\n        \/\/ Handle negative numbers\n        $aNeg = ($this->limbs[0] >> 15) & 1;\n        $bNeg = ($int >> 31) & 1;\n        $a = array_reverse($this->limbs);\n        $b = array(\n            $int & 0xffff,\n            ($int >> 16) & 0xffff\n        );\n        if ($aNeg) {\n            for ($i = 0; $i < 2; ++$i) {\n                $a[$i] = ($a[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$a[0];\n        }\n        if ($bNeg) {\n            for ($i = 0; $i < 2; ++$i) {\n                $b[$i] = ($b[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$b[0];\n        }\n        \/\/ Multiply\n        $res = $this->multiplyLong($a, $b);\n\n        \/\/ Re-apply negation to results\n        if ($aNeg !== $bNeg) {\n            for ($i = 0; $i < 2; ++$i) {\n                $res[$i] = (0xffff ^ $res[$i]) & 0xffff;\n            }\n            \/\/ Handle integer overflow\n            $c = 1;\n            for ($i = 0; $i < 2; ++$i) {\n                $res[$i] += $c;\n                $c = $res[$i] >> 16;\n                $res[$i] &= 0xffff;\n            }\n        }\n\n        \/\/ Return our values\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->limbs = array(\n            $res[1] & 0xffff,\n            $res[0] & 0xffff\n        );\n        if (count($res) > 2) {\n            $return->overflow = $res[2] & 0xffff;\n        }\n        $return->unsignedInt = $this->unsignedInt;\n        return $return;\n    }\n\n    \/**\n     * @param ParagonIE_Sodium_Core32_Int32 $right\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function mulInt32Fast(ParagonIE_Sodium_Core32_Int32 $right)\n    {\n        $aNeg = ($this->limbs[0] >> 15) & 1;\n        $bNeg = ($right->limbs[0] >> 15) & 1;\n\n        $a = array_reverse($this->limbs);\n        $b = array_reverse($right->limbs);\n        if ($aNeg) {\n            for ($i = 0; $i < 2; ++$i) {\n                $a[$i] = ($a[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$a[0];\n        }\n        if ($bNeg) {\n            for ($i = 0; $i < 2; ++$i) {\n                $b[$i] = ($b[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$b[0];\n        }\n        $res = $this->multiplyLong($a, $b);\n        if ($aNeg !== $bNeg) {\n            if ($aNeg !== $bNeg) {\n                for ($i = 0; $i < 2; ++$i) {\n                    $res[$i] = ($res[$i] ^ 0xffff) & 0xffff;\n                }\n                $c = 1;\n                for ($i = 0; $i < 2; ++$i) {\n                    $res[$i] += $c;\n                    $c = $res[$i] >> 16;\n                    $res[$i] &= 0xffff;\n                }\n            }\n        }\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->limbs = array(\n            $res[1] & 0xffff,\n            $res[0] & 0xffff\n        );\n        if (count($res) > 2) {\n            $return->overflow = $res[2];\n        }\n        return $return;\n    }\n\n    \/**\n     * @param int $int\n     * @param int $size\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function mulInt($int = 0, $size = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($int, 'int', 1);\n        ParagonIE_Sodium_Core32_Util::declareScalarType($size, 'int', 2);\n        if (ParagonIE_Sodium_Compat::$fastMult) {\n            return $this->mulIntFast((int) $int);\n        }\n        \/** @var int $int *\/\n        $int = (int) $int;\n        \/** @var int $size *\/\n        $size = (int) $size;\n\n        if (!$size) {\n            $size = 31;\n        }\n        \/** @var int $size *\/\n\n        $a = clone $this;\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n\n        \/\/ Initialize:\n        $ret0 = 0;\n        $ret1 = 0;\n        $a0 = $a->limbs[0];\n        $a1 = $a->limbs[1];\n\n        \/** @var int $size *\/\n        \/** @var int $i *\/\n        for ($i = $size; $i >= 0; --$i) {\n            $m = (int) (-($int & 1));\n            $x0 = $a0 & $m;\n            $x1 = $a1 & $m;\n\n            $ret1 += $x1;\n            $c = $ret1 >> 16;\n\n            $ret0 += $x0 + $c;\n\n            $ret0 &= 0xffff;\n            $ret1 &= 0xffff;\n\n            $a1 = ($a1 << 1);\n            $x1 = $a1 >> 16;\n            $a0 = ($a0 << 1) | $x1;\n            $a0 &= 0xffff;\n            $a1 &= 0xffff;\n            $int >>= 1;\n        }\n        $return->limbs[0] = $ret0;\n        $return->limbs[1] = $ret1;\n        return $return;\n    }\n\n    \/**\n     * @param ParagonIE_Sodium_Core32_Int32 $int\n     * @param int $size\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function mulInt32(ParagonIE_Sodium_Core32_Int32 $int, $size = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($size, 'int', 2);\n        if (ParagonIE_Sodium_Compat::$fastMult) {\n            return $this->mulInt32Fast($int);\n        }\n        if (!$size) {\n            $size = 31;\n        }\n        \/** @var int $size *\/\n\n        $a = clone $this;\n        $b = clone $int;\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n\n        \/\/ Initialize:\n        $ret0 = 0;\n        $ret1 = 0;\n        $a0 = $a->limbs[0];\n        $a1 = $a->limbs[1];\n        $b0 = $b->limbs[0];\n        $b1 = $b->limbs[1];\n\n        \/** @var int $size *\/\n        \/** @var int $i *\/\n        for ($i = $size; $i >= 0; --$i) {\n            $m = (int) (-($b1 & 1));\n            $x0 = $a0 & $m;\n            $x1 = $a1 & $m;\n\n            $ret1 += $x1;\n            $c = $ret1 >> 16;\n\n            $ret0 += $x0 + $c;\n\n            $ret0 &= 0xffff;\n            $ret1 &= 0xffff;\n\n            $a1 = ($a1 << 1);\n            $x1 = $a1 >> 16;\n            $a0 = ($a0 << 1) | $x1;\n            $a0 &= 0xffff;\n            $a1 &= 0xffff;\n\n            $x0 = ($b0 & 1) << 16;\n            $b0 = ($b0 >> 1);\n            $b1 = (($b1 | $x0) >> 1);\n\n            $b0 &= 0xffff;\n            $b1 &= 0xffff;\n\n        }\n        $return->limbs[0] = $ret0;\n        $return->limbs[1] = $ret1;\n\n        return $return;\n    }\n\n    \/**\n     * OR this 32-bit integer with another.\n     *\n     * @param ParagonIE_Sodium_Core32_Int32 $b\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function orInt32(ParagonIE_Sodium_Core32_Int32 $b)\n    {\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n        $return->limbs = array(\n            (int) ($this->limbs[0] | $b->limbs[0]),\n            (int) ($this->limbs[1] | $b->limbs[1])\n        );\n        \/** @var int overflow *\/\n        $return->overflow = $this->overflow | $b->overflow;\n        return $return;\n    }\n\n    \/**\n     * @param int $b\n     * @return bool\n     *\/\n    public function isGreaterThan($b = 0)\n    {\n        return $this->compareInt($b) > 0;\n    }\n\n    \/**\n     * @param int $b\n     * @return bool\n     *\/\n    public function isLessThanInt($b = 0)\n    {\n        return $this->compareInt($b) < 0;\n    }\n\n    \/**\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayAccess\n     *\/\n    public function rotateLeft($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        \/** @var int $c *\/\n        $c = (int) $c;\n\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 31;\n        if ($c === 0) {\n            \/\/ NOP, but we want a copy.\n            $return->limbs = $this->limbs;\n        } else {\n            \/** @var int $c *\/\n\n            \/** @var int $idx_shift *\/\n            $idx_shift = ($c >> 4) & 1;\n\n            \/** @var int $sub_shift *\/\n            $sub_shift = $c & 15;\n\n            \/** @var array<int, int> $limbs *\/\n            $limbs =& $return->limbs;\n\n            \/** @var array<int, int> $myLimbs *\/\n            $myLimbs =& $this->limbs;\n\n            for ($i = 1; $i >= 0; --$i) {\n                \/** @var int $j *\/\n                $j = ($i + $idx_shift) & 1;\n                \/** @var int $k *\/\n                $k = ($i + $idx_shift + 1) & 1;\n                $limbs[$i] = (int) (\n                    (\n                        ((int) ($myLimbs[$j]) << $sub_shift)\n                            |\n                        ((int) ($myLimbs[$k]) >> (16 - $sub_shift))\n                    ) & 0xffff\n                );\n            }\n        }\n        return $return;\n    }\n\n    \/**\n     * Rotate to the right\n     *\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayAccess\n     *\/\n    public function rotateRight($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        \/** @var int $c *\/\n        $c = (int) $c;\n\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 31;\n        \/** @var int $c *\/\n        if ($c === 0) {\n            \/\/ NOP, but we want a copy.\n            $return->limbs = $this->limbs;\n        } else {\n            \/** @var int $c *\/\n\n            \/** @var int $idx_shift *\/\n            $idx_shift = ($c >> 4) & 1;\n\n            \/** @var int $sub_shift *\/\n            $sub_shift = $c & 15;\n\n            \/** @var array<int, int> $limbs *\/\n            $limbs =& $return->limbs;\n\n            \/** @var array<int, int> $myLimbs *\/\n            $myLimbs =& $this->limbs;\n\n            for ($i = 1; $i >= 0; --$i) {\n                \/** @var int $j *\/\n                $j = ($i - $idx_shift) & 1;\n                \/** @var int $k *\/\n                $k = ($i - $idx_shift - 1) & 1;\n                $limbs[$i] = (int) (\n                    (\n                        ((int) ($myLimbs[$j]) >> (int) ($sub_shift))\n                            |\n                        ((int) ($myLimbs[$k]) << (16 - (int) ($sub_shift)))\n                    ) & 0xffff\n                );\n            }\n        }\n        return $return;\n    }\n\n    \/**\n     * @param bool $bool\n     * @return self\n     *\/\n    public function setUnsignedInt($bool = false)\n    {\n        $this->unsignedInt = !empty($bool);\n        return $this;\n    }\n\n    \/**\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function shiftLeft($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        \/** @var int $c *\/\n        $c = (int) $c;\n\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 63;\n        \/** @var int $c *\/\n        if ($c === 0) {\n            $return->limbs = $this->limbs;\n        } elseif ($c < 0) {\n            \/** @var int $c *\/\n            return $this->shiftRight(-$c);\n        } else {\n            \/** @var int $c *\/\n            \/** @var int $tmp *\/\n            $tmp = $this->limbs[1] << $c;\n            $return->limbs[1] = (int)($tmp & 0xffff);\n            \/** @var int $carry *\/\n            $carry = $tmp >> 16;\n\n            \/** @var int $tmp *\/\n            $tmp = ($this->limbs[0] << $c) | ($carry & 0xffff);\n            $return->limbs[0] = (int) ($tmp & 0xffff);\n        }\n        return $return;\n    }\n\n    \/**\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedOperand\n     *\/\n    public function shiftRight($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        \/** @var int $c *\/\n        $c = (int) $c;\n\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 63;\n        \/** @var int $c *\/\n        if ($c >= 16) {\n            $return->limbs = array(\n                (int) ($this->overflow & 0xffff),\n                (int) ($this->limbs[0])\n            );\n            $return->overflow = $this->overflow >> 16;\n            return $return->shiftRight($c & 15);\n        }\n        if ($c === 0) {\n            $return->limbs = $this->limbs;\n        } elseif ($c < 0) {\n            \/** @var int $c *\/\n            return $this->shiftLeft(-$c);\n        } else {\n            if (!is_int($c)) {\n                throw new TypeError();\n            }\n            \/** @var int $c *\/\n            \/\/ $return->limbs[0] = (int) (($this->limbs[0] >> $c) & 0xffff);\n            $carryLeft = (int) ($this->overflow & ((1 << ($c + 1)) - 1));\n            $return->limbs[0] = (int) ((($this->limbs[0] >> $c) | ($carryLeft << (16 - $c))) & 0xffff);\n            $carryRight = (int) ($this->limbs[0] & ((1 << ($c + 1)) - 1));\n            $return->limbs[1] = (int) ((($this->limbs[1] >> $c) | ($carryRight << (16 - $c))) & 0xffff);\n            $return->overflow >>= $c;\n        }\n        return $return;\n    }\n\n    \/**\n     * Subtract a normal integer from an int32 object.\n     *\n     * @param int $int\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function subInt($int)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($int, 'int', 1);\n        \/** @var int $int *\/\n        $int = (int) $int;\n\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n\n        \/** @var int $tmp *\/\n        $tmp = $this->limbs[1] - ($int & 0xffff);\n        \/** @var int $carry *\/\n        $carry = $tmp >> 16;\n        $return->limbs[1] = (int) ($tmp & 0xffff);\n\n        \/** @var int $tmp *\/\n        $tmp = $this->limbs[0] - (($int >> 16) & 0xffff) + $carry;\n        $return->limbs[0] = (int) ($tmp & 0xffff);\n        return $return;\n    }\n\n    \/**\n     * Subtract two int32 objects from each other\n     *\n     * @param ParagonIE_Sodium_Core32_Int32 $b\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function subInt32(ParagonIE_Sodium_Core32_Int32 $b)\n    {\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n\n        \/** @var int $tmp *\/\n        $tmp = $this->limbs[1] - ($b->limbs[1] & 0xffff);\n        \/** @var int $carry *\/\n        $carry = $tmp >> 16;\n        $return->limbs[1] = (int) ($tmp & 0xffff);\n\n        \/** @var int $tmp *\/\n        $tmp = $this->limbs[0] - ($b->limbs[0] & 0xffff) + $carry;\n        $return->limbs[0] = (int) ($tmp & 0xffff);\n        return $return;\n    }\n\n    \/**\n     * XOR this 32-bit integer with another.\n     *\n     * @param ParagonIE_Sodium_Core32_Int32 $b\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function xorInt32(ParagonIE_Sodium_Core32_Int32 $b)\n    {\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->unsignedInt = $this->unsignedInt;\n        $return->limbs = array(\n            (int) ($this->limbs[0] ^ $b->limbs[0]),\n            (int) ($this->limbs[1] ^ $b->limbs[1])\n        );\n        return $return;\n    }\n\n    \/**\n     * @param int $signed\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromInt($signed)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($signed, 'int', 1);;\n        \/** @var int $signed *\/\n        $signed = (int) $signed;\n\n        return new ParagonIE_Sodium_Core32_Int32(\n            array(\n                (int) (($signed >> 16) & 0xffff),\n                (int) ($signed & 0xffff)\n            )\n        );\n    }\n\n    \/**\n     * @param string $string\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromString($string)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($string, 'string', 1);\n        $string = (string) $string;\n        if (ParagonIE_Sodium_Core32_Util::strlen($string) !== 4) {\n            throw new RangeException(\n                'String must be 4 bytes; ' . ParagonIE_Sodium_Core32_Util::strlen($string) . ' given.'\n            );\n        }\n        $return = new ParagonIE_Sodium_Core32_Int32();\n\n        $return->limbs[0]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[0]) & 0xff) << 8);\n        $return->limbs[0] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[1]) & 0xff);\n        $return->limbs[1]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[2]) & 0xff) << 8);\n        $return->limbs[1] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[3]) & 0xff);\n        return $return;\n    }\n\n    \/**\n     * @param string $string\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromReverseString($string)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($string, 'string', 1);\n        $string = (string) $string;\n        if (ParagonIE_Sodium_Core32_Util::strlen($string) !== 4) {\n            throw new RangeException(\n                'String must be 4 bytes; ' . ParagonIE_Sodium_Core32_Util::strlen($string) . ' given.'\n            );\n        }\n        $return = new ParagonIE_Sodium_Core32_Int32();\n\n        $return->limbs[0]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[3]) & 0xff) << 8);\n        $return->limbs[0] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[2]) & 0xff);\n        $return->limbs[1]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[1]) & 0xff) << 8);\n        $return->limbs[1] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[0]) & 0xff);\n        return $return;\n    }\n\n    \/**\n     * @return array<int, int>\n     *\/\n    public function toArray()\n    {\n        return array((int) ($this->limbs[0] << 16 | $this->limbs[1]));\n    }\n\n    \/**\n     * @return string\n     * @throws TypeError\n     *\/\n    public function toString()\n    {\n        return\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[0] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[0] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[1] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[1] & 0xff);\n    }\n\n    \/**\n     * @return int\n     *\/\n    public function toInt()\n    {\n        return (int) (\n            (($this->limbs[0] & 0xffff) << 16)\n                |\n            ($this->limbs[1] & 0xffff)\n        );\n    }\n\n    \/**\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function toInt32()\n    {\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->limbs[0] = (int) ($this->limbs[0] & 0xffff);\n        $return->limbs[1] = (int) ($this->limbs[1] & 0xffff);\n        $return->unsignedInt = $this->unsignedInt;\n        $return->overflow = (int) ($this->overflow & 0x7fffffff);\n        return $return;\n    }\n\n    \/**\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function toInt64()\n    {\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        if ($this->unsignedInt) {\n            $return->limbs[0] += (($this->overflow >> 16) & 0xffff);\n            $return->limbs[1] += (($this->overflow) & 0xffff);\n        } else {\n            $neg = -(($this->limbs[0] >> 15) & 1);\n            $return->limbs[0] = (int)($neg & 0xffff);\n            $return->limbs[1] = (int)($neg & 0xffff);\n        }\n        $return->limbs[2] = (int) ($this->limbs[0] & 0xffff);\n        $return->limbs[3] = (int) ($this->limbs[1] & 0xffff);\n        return $return;\n    }\n\n    \/**\n     * @return string\n     * @throws TypeError\n     *\/\n    public function toReverseString()\n    {\n        return ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[1] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[1] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[0] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[0] >> 8) & 0xff);\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function __toString()\n    {\n        try {\n            return $this->toString();\n        } catch (TypeError $ex) {\n            \/\/ PHP engine can't handle exceptions from __toString()\n            return '';\n        }\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/XChaCha20.php","ext":"php","size":2513,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_XChaCha20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_XChaCha20\n *\/\nclass ParagonIE_Sodium_Core32_XChaCha20 extends ParagonIE_Sodium_Core32_HChaCha20\n{\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $len\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function stream($len = 64, $nonce = '', $key = '')\n    {\n        if (self::strlen($nonce) !== 24) {\n            throw new SodiumException('Nonce must be 24 bytes long');\n        }\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core32_ChaCha20_Ctx(\n                self::hChaCha20(\n                    self::substr($nonce, 0, 16),\n                    $key\n                ),\n                self::substr($nonce, 16, 8)\n            ),\n            str_repeat(\"\\x00\", $len)\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @param string $ic\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function streamXorIc($message, $nonce = '', $key = '', $ic = '')\n    {\n        if (self::strlen($nonce) !== 24) {\n            throw new SodiumException('Nonce must be 24 bytes long');\n        }\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core32_ChaCha20_Ctx(\n                self::hChaCha20(self::substr($nonce, 0, 16), $key),\n                self::substr($nonce, 16, 8),\n                $ic\n            ),\n            $message\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @param string $ic\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ietfStreamXorIc($message, $nonce = '', $key = '', $ic = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core32_ChaCha20_IetfCtx(\n                self::hChaCha20(self::substr($nonce, 0, 16), $key),\n                \"\\x00\\x00\\x00\\x00\" . self::substr($nonce, 16, 8),\n                $ic\n            ),\n            $message\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/XSalsa20.php","ext":"php","size":1438,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_XSalsa20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_XSalsa20\n *\/\nabstract class ParagonIE_Sodium_Core32_XSalsa20 extends ParagonIE_Sodium_Core32_HSalsa20\n{\n    \/**\n     * Expand a key and nonce into an xsalsa20 keystream.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param int $len\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function xsalsa20($len, $nonce, $key)\n    {\n        $ret = self::salsa20(\n            $len,\n            self::substr($nonce, 16, 8),\n            self::hsalsa20($nonce, $key)\n        );\n        return $ret;\n    }\n\n    \/**\n     * Encrypt a string with XSalsa20. Doesn't provide integrity.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function xsalsa20_xor($message, $nonce, $key)\n    {\n        return self::xorStrings(\n            $message,\n            self::xsalsa20(\n                self::strlen($message),\n                $nonce,\n                $key\n            )\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Salsa20.php","ext":"php","size":11565,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Salsa20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Salsa20\n *\/\nabstract class ParagonIE_Sodium_Core32_Salsa20 extends ParagonIE_Sodium_Core32_Util\n{\n    const ROUNDS = 20;\n\n    \/**\n     * Calculate an salsa20 hash of a single block\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $in\n     * @param string $k\n     * @param string|null $c\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function core_salsa20($in, $k, $c = null)\n    {\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int32 $x0\n         * @var ParagonIE_Sodium_Core32_Int32 $x1\n         * @var ParagonIE_Sodium_Core32_Int32 $x2\n         * @var ParagonIE_Sodium_Core32_Int32 $x3\n         * @var ParagonIE_Sodium_Core32_Int32 $x4\n         * @var ParagonIE_Sodium_Core32_Int32 $x5\n         * @var ParagonIE_Sodium_Core32_Int32 $x6\n         * @var ParagonIE_Sodium_Core32_Int32 $x7\n         * @var ParagonIE_Sodium_Core32_Int32 $x8\n         * @var ParagonIE_Sodium_Core32_Int32 $x9\n         * @var ParagonIE_Sodium_Core32_Int32 $x10\n         * @var ParagonIE_Sodium_Core32_Int32 $x11\n         * @var ParagonIE_Sodium_Core32_Int32 $x12\n         * @var ParagonIE_Sodium_Core32_Int32 $x13\n         * @var ParagonIE_Sodium_Core32_Int32 $x14\n         * @var ParagonIE_Sodium_Core32_Int32 $x15\n         * @var ParagonIE_Sodium_Core32_Int32 $j0\n         * @var ParagonIE_Sodium_Core32_Int32 $j1\n         * @var ParagonIE_Sodium_Core32_Int32 $j2\n         * @var ParagonIE_Sodium_Core32_Int32 $j3\n         * @var ParagonIE_Sodium_Core32_Int32 $j4\n         * @var ParagonIE_Sodium_Core32_Int32 $j5\n         * @var ParagonIE_Sodium_Core32_Int32 $j6\n         * @var ParagonIE_Sodium_Core32_Int32 $j7\n         * @var ParagonIE_Sodium_Core32_Int32 $j8\n         * @var ParagonIE_Sodium_Core32_Int32 $j9\n         * @var ParagonIE_Sodium_Core32_Int32 $j10\n         * @var ParagonIE_Sodium_Core32_Int32 $j11\n         * @var ParagonIE_Sodium_Core32_Int32 $j12\n         * @var ParagonIE_Sodium_Core32_Int32 $j13\n         * @var ParagonIE_Sodium_Core32_Int32 $j14\n         * @var ParagonIE_Sodium_Core32_Int32 $j15\n         *\/\n        if (self::strlen($k) < 32) {\n            throw new RangeException('Key must be 32 bytes long');\n        }\n        if ($c === null) {\n            $x0  = new ParagonIE_Sodium_Core32_Int32(array(0x6170, 0x7865));\n            $x5  = new ParagonIE_Sodium_Core32_Int32(array(0x3320, 0x646e));\n            $x10 = new ParagonIE_Sodium_Core32_Int32(array(0x7962, 0x2d32));\n            $x15 = new ParagonIE_Sodium_Core32_Int32(array(0x6b20, 0x6574));\n        } else {\n            $x0  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 0, 4));\n            $x5  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 4, 4));\n            $x10 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 8, 4));\n            $x15 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 12, 4));\n        }\n        $x1  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 0, 4));\n        $x2  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 4, 4));\n        $x3  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 8, 4));\n        $x4  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 12, 4));\n        $x6  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 0, 4));\n        $x7  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 4, 4));\n        $x8  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 8, 4));\n        $x9  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 12, 4));\n        $x11 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 16, 4));\n        $x12 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 20, 4));\n        $x13 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 24, 4));\n        $x14 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 28, 4));\n\n        $j0  = clone $x0;\n        $j1  = clone $x1;\n        $j2  = clone $x2;\n        $j3  = clone $x3;\n        $j4  = clone $x4;\n        $j5  = clone $x5;\n        $j6  = clone $x6;\n        $j7  = clone $x7;\n        $j8  = clone $x8;\n        $j9  = clone $x9;\n        $j10  = clone $x10;\n        $j11  = clone $x11;\n        $j12  = clone $x12;\n        $j13  = clone $x13;\n        $j14  = clone $x14;\n        $j15  = clone $x15;\n\n        for ($i = self::ROUNDS; $i > 0; $i -= 2) {\n            $x4  = $x4->xorInt32($x0->addInt32($x12)->rotateLeft(7));\n            $x8  = $x8->xorInt32($x4->addInt32($x0)->rotateLeft(9));\n            $x12 = $x12->xorInt32($x8->addInt32($x4)->rotateLeft(13));\n            $x0  = $x0->xorInt32($x12->addInt32($x8)->rotateLeft(18));\n\n            $x9  = $x9->xorInt32($x5->addInt32($x1)->rotateLeft(7));\n            $x13 = $x13->xorInt32($x9->addInt32($x5)->rotateLeft(9));\n            $x1  = $x1->xorInt32($x13->addInt32($x9)->rotateLeft(13));\n            $x5  = $x5->xorInt32($x1->addInt32($x13)->rotateLeft(18));\n\n            $x14 = $x14->xorInt32($x10->addInt32($x6)->rotateLeft(7));\n            $x2  = $x2->xorInt32($x14->addInt32($x10)->rotateLeft(9));\n            $x6  = $x6->xorInt32($x2->addInt32($x14)->rotateLeft(13));\n            $x10 = $x10->xorInt32($x6->addInt32($x2)->rotateLeft(18));\n\n            $x3  = $x3->xorInt32($x15->addInt32($x11)->rotateLeft(7));\n            $x7  = $x7->xorInt32($x3->addInt32($x15)->rotateLeft(9));\n            $x11 = $x11->xorInt32($x7->addInt32($x3)->rotateLeft(13));\n            $x15 = $x15->xorInt32($x11->addInt32($x7)->rotateLeft(18));\n\n            $x1  = $x1->xorInt32($x0->addInt32($x3)->rotateLeft(7));\n            $x2  = $x2->xorInt32($x1->addInt32($x0)->rotateLeft(9));\n            $x3  = $x3->xorInt32($x2->addInt32($x1)->rotateLeft(13));\n            $x0  = $x0->xorInt32($x3->addInt32($x2)->rotateLeft(18));\n\n            $x6  = $x6->xorInt32($x5->addInt32($x4)->rotateLeft(7));\n            $x7  = $x7->xorInt32($x6->addInt32($x5)->rotateLeft(9));\n            $x4  = $x4->xorInt32($x7->addInt32($x6)->rotateLeft(13));\n            $x5  = $x5->xorInt32($x4->addInt32($x7)->rotateLeft(18));\n\n            $x11 = $x11->xorInt32($x10->addInt32($x9)->rotateLeft(7));\n            $x8  = $x8->xorInt32($x11->addInt32($x10)->rotateLeft(9));\n            $x9  = $x9->xorInt32($x8->addInt32($x11)->rotateLeft(13));\n            $x10 = $x10->xorInt32($x9->addInt32($x8)->rotateLeft(18));\n\n            $x12 = $x12->xorInt32($x15->addInt32($x14)->rotateLeft(7));\n            $x13 = $x13->xorInt32($x12->addInt32($x15)->rotateLeft(9));\n            $x14 = $x14->xorInt32($x13->addInt32($x12)->rotateLeft(13));\n            $x15 = $x15->xorInt32($x14->addInt32($x13)->rotateLeft(18));\n        }\n\n        $x0  = $x0->addInt32($j0);\n        $x1  = $x1->addInt32($j1);\n        $x2  = $x2->addInt32($j2);\n        $x3  = $x3->addInt32($j3);\n        $x4  = $x4->addInt32($j4);\n        $x5  = $x5->addInt32($j5);\n        $x6  = $x6->addInt32($j6);\n        $x7  = $x7->addInt32($j7);\n        $x8  = $x8->addInt32($j8);\n        $x9  = $x9->addInt32($j9);\n        $x10 = $x10->addInt32($j10);\n        $x11 = $x11->addInt32($j11);\n        $x12 = $x12->addInt32($j12);\n        $x13 = $x13->addInt32($j13);\n        $x14 = $x14->addInt32($j14);\n        $x15 = $x15->addInt32($j15);\n\n        return $x0->toReverseString() .\n            $x1->toReverseString() .\n            $x2->toReverseString() .\n            $x3->toReverseString() .\n            $x4->toReverseString() .\n            $x5->toReverseString() .\n            $x6->toReverseString() .\n            $x7->toReverseString() .\n            $x8->toReverseString() .\n            $x9->toReverseString() .\n            $x10->toReverseString() .\n            $x11->toReverseString() .\n            $x12->toReverseString() .\n            $x13->toReverseString() .\n            $x14->toReverseString() .\n            $x15->toReverseString();\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $len\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function salsa20($len, $nonce, $key)\n    {\n        if (self::strlen($key) !== 32) {\n            throw new RangeException('Key must be 32 bytes long');\n        }\n        $kcopy = '' . $key;\n        $in = self::substr($nonce, 0, 8) . str_repeat(\"\\0\", 8);\n        $c = '';\n        while ($len >= 64) {\n            $c .= self::core_salsa20($in, $kcopy, null);\n            $u = 1;\n            \/\/ Internal counter.\n            for ($i = 8; $i < 16; ++$i) {\n                $u += self::chrToInt($in[$i]);\n                $in[$i] = self::intToChr($u & 0xff);\n                $u >>= 8;\n            }\n            $len -= 64;\n        }\n        if ($len > 0) {\n            $c .= self::substr(\n                self::core_salsa20($in, $kcopy, null),\n                0,\n                $len\n            );\n        }\n        try {\n            ParagonIE_Sodium_Compat::memzero($kcopy);\n        } catch (SodiumException $ex) {\n            $kcopy = null;\n        }\n        return $c;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $m\n     * @param string $n\n     * @param int $ic\n     * @param string $k\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function salsa20_xor_ic($m, $n, $ic, $k)\n    {\n        $mlen = self::strlen($m);\n        if ($mlen < 1) {\n            return '';\n        }\n        $kcopy = self::substr($k, 0, 32);\n        $in = self::substr($n, 0, 8);\n        \/\/ Initialize the counter\n        $in .= ParagonIE_Sodium_Core32_Util::store64_le($ic);\n\n        $c = '';\n        while ($mlen >= 64) {\n            $block = self::core_salsa20($in, $kcopy, null);\n            $c .= self::xorStrings(\n                self::substr($m, 0, 64),\n                self::substr($block, 0, 64)\n            );\n            $u = 1;\n            for ($i = 8; $i < 16; ++$i) {\n                $u += self::chrToInt($in[$i]);\n                $in[$i] = self::intToChr($u & 0xff);\n                $u >>= 8;\n            }\n\n            $mlen -= 64;\n            $m = self::substr($m, 64);\n        }\n\n        if ($mlen) {\n            $block = self::core_salsa20($in, $kcopy, null);\n            $c .= self::xorStrings(\n                self::substr($m, 0, $mlen),\n                self::substr($block, 0, $mlen)\n            );\n        }\n        try {\n            ParagonIE_Sodium_Compat::memzero($block);\n            ParagonIE_Sodium_Compat::memzero($kcopy);\n        } catch (SodiumException $ex) {\n            $block = null;\n            $kcopy = null;\n        }\n\n        return $c;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function salsa20_xor($message, $nonce, $key)\n    {\n        return self::xorStrings(\n            $message,\n            self::salsa20(\n                self::strlen($message),\n                $nonce,\n                $key\n            )\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Int64.php","ext":"php","size":31231,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\n\/**\n * Class ParagonIE_Sodium_Core32_Int64\n *\n * Encapsulates a 64-bit integer.\n *\n * These are immutable. It always returns a new instance.\n *\/\nclass ParagonIE_Sodium_Core32_Int64\n{\n    \/**\n     * @var array<int, int> - four 16-bit integers\n     *\/\n    public $limbs = array(0, 0, 0, 0);\n\n    \/**\n     * @var int\n     *\/\n    public $overflow = 0;\n\n    \/**\n     * @var bool\n     *\/\n    public $unsignedInt = false;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Int64 constructor.\n     * @param array $array\n     * @param bool $unsignedInt\n     *\/\n    public function __construct($array = array(0, 0, 0, 0), $unsignedInt = false)\n    {\n        $this->limbs = array(\n            (int) $array[0],\n            (int) $array[1],\n            (int) $array[2],\n            (int) $array[3]\n        );\n        $this->overflow = 0;\n        $this->unsignedInt = $unsignedInt;\n    }\n\n    \/**\n     * Adds two int64 objects\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $addend\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function addInt64(ParagonIE_Sodium_Core32_Int64 $addend)\n    {\n        $i0 = $this->limbs[0];\n        $i1 = $this->limbs[1];\n        $i2 = $this->limbs[2];\n        $i3 = $this->limbs[3];\n        $j0 = $addend->limbs[0];\n        $j1 = $addend->limbs[1];\n        $j2 = $addend->limbs[2];\n        $j3 = $addend->limbs[3];\n\n        $r3 = $i3 + ($j3 & 0xffff);\n        $carry = $r3 >> 16;\n\n        $r2 = $i2 + ($j2 & 0xffff) + $carry;\n        $carry = $r2 >> 16;\n\n        $r1 = $i1 + ($j1 & 0xffff) + $carry;\n        $carry = $r1 >> 16;\n\n        $r0 = $i0 + ($j0 & 0xffff) + $carry;\n        $carry = $r0 >> 16;\n\n        $r0 &= 0xffff;\n        $r1 &= 0xffff;\n        $r2 &= 0xffff;\n        $r3 &= 0xffff;\n\n        $return = new ParagonIE_Sodium_Core32_Int64(\n            array($r0, $r1, $r2, $r3)\n        );\n        $return->overflow = $carry;\n        $return->unsignedInt = $this->unsignedInt;\n        return $return;\n    }\n\n    \/**\n     * Adds a normal integer to an int64 object\n     *\n     * @param int $int\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function addInt($int)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($int, 'int', 1);\n        \/** @var int $int *\/\n        $int = (int) $int;\n\n        $i0 = $this->limbs[0];\n        $i1 = $this->limbs[1];\n        $i2 = $this->limbs[2];\n        $i3 = $this->limbs[3];\n\n        $r3 = $i3 + ($int & 0xffff);\n        $carry = $r3 >> 16;\n\n        $r2 = $i2 + (($int >> 16) & 0xffff) + $carry;\n        $carry = $r2 >> 16;\n\n        $r1 = $i1 + $carry;\n        $carry = $r1 >> 16;\n\n        $r0 = $i0 + $carry;\n        $carry = $r0 >> 16;\n\n        $r0 &= 0xffff;\n        $r1 &= 0xffff;\n        $r2 &= 0xffff;\n        $r3 &= 0xffff;\n        $return = new ParagonIE_Sodium_Core32_Int64(\n            array($r0, $r1, $r2, $r3)\n        );\n        $return->overflow = $carry;\n        $return->unsignedInt = $this->unsignedInt;\n        return $return;\n    }\n\n    \/**\n     * @param int $b\n     * @return int\n     *\/\n    public function compareInt($b = 0)\n    {\n        $gt = 0;\n        $eq = 1;\n\n        $i = 4;\n        $j = 0;\n        while ($i > 0) {\n            --$i;\n            \/** @var int $x1 *\/\n            $x1 = $this->limbs[$i];\n            \/** @var int $x2 *\/\n            $x2 = ($b >> ($j << 4)) & 0xffff;\n            \/** int *\/\n            $gt |= (($x2 - $x1) >> 8) & $eq;\n            \/** int *\/\n            $eq &= (($x2 ^ $x1) - 1) >> 8;\n        }\n        return ($gt + $gt - $eq) + 1;\n    }\n\n    \/**\n     * @param int $b\n     * @return bool\n     *\/\n    public function isGreaterThan($b = 0)\n    {\n        return $this->compareInt($b) > 0;\n    }\n\n    \/**\n     * @param int $b\n     * @return bool\n     *\/\n    public function isLessThanInt($b = 0)\n    {\n        return $this->compareInt($b) < 0;\n    }\n\n    \/**\n     * @param int $hi\n     * @param int $lo\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function mask64($hi = 0, $lo = 0)\n    {\n        \/** @var int $a *\/\n        $a = ($hi >> 16) & 0xffff;\n        \/** @var int $b *\/\n        $b = ($hi) & 0xffff;\n        \/** @var int $c *\/\n        $c = ($lo >> 16) & 0xffff;\n        \/** @var int $d *\/\n        $d = ($lo & 0xffff);\n        return new ParagonIE_Sodium_Core32_Int64(\n            array(\n                $this->limbs[0] & $a,\n                $this->limbs[1] & $b,\n                $this->limbs[2] & $c,\n                $this->limbs[3] & $d\n            ),\n            $this->unsignedInt\n        );\n    }\n\n    \/**\n     * @param int $int\n     * @param int $size\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedAssignment\n     *\/\n    public function mulInt($int = 0, $size = 0)\n    {\n        if (ParagonIE_Sodium_Compat::$fastMult) {\n            return $this->mulIntFast($int);\n        }\n        ParagonIE_Sodium_Core32_Util::declareScalarType($int, 'int', 1);\n        ParagonIE_Sodium_Core32_Util::declareScalarType($size, 'int', 2);\n        \/** @var int $int *\/\n        $int = (int) $int;\n        \/** @var int $size *\/\n        $size = (int) $size;\n\n        if (!$size) {\n            $size = 63;\n        }\n\n        $a = clone $this;\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n\n        \/\/ Initialize:\n        $ret0 = 0;\n        $ret1 = 0;\n        $ret2 = 0;\n        $ret3 = 0;\n        $a0 = $a->limbs[0];\n        $a1 = $a->limbs[1];\n        $a2 = $a->limbs[2];\n        $a3 = $a->limbs[3];\n\n        \/** @var int $size *\/\n        \/** @var int $i *\/\n        for ($i = $size; $i >= 0; --$i) {\n            $mask = -($int & 1);\n            $x0 = $a0 & $mask;\n            $x1 = $a1 & $mask;\n            $x2 = $a2 & $mask;\n            $x3 = $a3 & $mask;\n\n            $ret3 += $x3;\n            $c = $ret3 >> 16;\n\n            $ret2 += $x2 + $c;\n            $c = $ret2 >> 16;\n\n            $ret1 += $x1 + $c;\n            $c = $ret1 >> 16;\n\n            $ret0 += $x0 + $c;\n\n            $ret0 &= 0xffff;\n            $ret1 &= 0xffff;\n            $ret2 &= 0xffff;\n            $ret3 &= 0xffff;\n\n            $a3 = $a3 << 1;\n            $x3 = $a3 >> 16;\n            $a2 = ($a2 << 1) | $x3;\n            $x2 = $a2 >> 16;\n            $a1 = ($a1 << 1) | $x2;\n            $x1 = $a1 >> 16;\n            $a0 = ($a0 << 1) | $x1;\n            $a0 &= 0xffff;\n            $a1 &= 0xffff;\n            $a2 &= 0xffff;\n            $a3 &= 0xffff;\n\n            $int >>= 1;\n        }\n        $return->limbs[0] = $ret0;\n        $return->limbs[1] = $ret1;\n        $return->limbs[2] = $ret2;\n        $return->limbs[3] = $ret3;\n        return $return;\n    }\n\n    \/**\n     * @param ParagonIE_Sodium_Core32_Int64 $A\n     * @param ParagonIE_Sodium_Core32_Int64 $B\n     * @return array<int, ParagonIE_Sodium_Core32_Int64>\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedInferredReturnType\n     *\/\n    public static function ctSelect(\n        ParagonIE_Sodium_Core32_Int64 $A,\n        ParagonIE_Sodium_Core32_Int64 $B\n    ) {\n        $a = clone $A;\n        $b = clone $B;\n        \/** @var int $aNeg *\/\n        $aNeg = ($a->limbs[0] >> 15) & 1;\n        \/** @var int $bNeg *\/\n        $bNeg = ($b->limbs[0] >> 15) & 1;\n        \/** @var int $m *\/\n        $m = (-($aNeg & $bNeg)) | 1;\n        \/** @var int $swap *\/\n        $swap = $bNeg & ~$aNeg;\n        \/** @var int $d *\/\n        $d = -$swap;\n\n        \/*\n        if ($bNeg && !$aNeg) {\n            $a = clone $int;\n            $b = clone $this;\n        } elseif($bNeg && $aNeg) {\n            $a = $this->mulInt(-1);\n            $b = $int->mulInt(-1);\n        }\n         *\/\n        $x = $a->xorInt64($b)->mask64($d, $d);\n        return array(\n            $a->xorInt64($x)->mulInt($m),\n            $b->xorInt64($x)->mulInt($m)\n        );\n    }\n\n    \/**\n     * @param array<int, int> $a\n     * @param array<int, int> $b\n     * @param int $baseLog2\n     * @return array<int, int>\n     *\/\n    public function multiplyLong(array $a, array $b, $baseLog2 = 16)\n    {\n        $a_l = count($a);\n        $b_l = count($b);\n        \/** @var array<int, int> $r *\/\n        $r = array_fill(0, $a_l + $b_l + 1, 0);\n        $base = 1 << $baseLog2;\n        for ($i = 0; $i < $a_l; ++$i) {\n            $a_i = $a[$i];\n            for ($j = 0; $j < $a_l; ++$j) {\n                $b_j = $b[$j];\n                $product = (($a_i * $b_j) + $r[$i + $j]);\n                $carry = (((int) $product >> $baseLog2) & 0xffff);\n                $r[$i + $j] = ((int) $product - (int) ($carry * $base)) & 0xffff;\n                $r[$i + $j + 1] += $carry;\n            }\n        }\n        return array_slice($r, 0, 5);\n    }\n\n    \/**\n     * @param int $int\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function mulIntFast($int)\n    {\n        \/\/ Handle negative numbers\n        $aNeg = ($this->limbs[0] >> 15) & 1;\n        $bNeg = ($int >> 31) & 1;\n        $a = array_reverse($this->limbs);\n        $b = array(\n            $int & 0xffff,\n            ($int >> 16) & 0xffff,\n            -$bNeg & 0xffff,\n            -$bNeg & 0xffff\n        );\n        if ($aNeg) {\n            for ($i = 0; $i < 4; ++$i) {\n                $a[$i] = ($a[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$a[0];\n        }\n        if ($bNeg) {\n            for ($i = 0; $i < 4; ++$i) {\n                $b[$i] = ($b[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$b[0];\n        }\n        \/\/ Multiply\n        $res = $this->multiplyLong($a, $b);\n\n        \/\/ Re-apply negation to results\n        if ($aNeg !== $bNeg) {\n            for ($i = 0; $i < 4; ++$i) {\n                $res[$i] = (0xffff ^ $res[$i]) & 0xffff;\n            }\n            \/\/ Handle integer overflow\n            $c = 1;\n            for ($i = 0; $i < 4; ++$i) {\n                $res[$i] += $c;\n                $c = $res[$i] >> 16;\n                $res[$i] &= 0xffff;\n            }\n        }\n\n        \/\/ Return our values\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->limbs = array(\n            $res[3] & 0xffff,\n            $res[2] & 0xffff,\n            $res[1] & 0xffff,\n            $res[0] & 0xffff\n        );\n        if (count($res) > 4) {\n            $return->overflow = $res[4] & 0xffff;\n        }\n        $return->unsignedInt = $this->unsignedInt;\n        return $return;\n    }\n\n    \/**\n     * @param ParagonIE_Sodium_Core32_Int64 $right\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function mulInt64Fast(ParagonIE_Sodium_Core32_Int64 $right)\n    {\n        $aNeg = ($this->limbs[0] >> 15) & 1;\n        $bNeg = ($right->limbs[0] >> 15) & 1;\n\n        $a = array_reverse($this->limbs);\n        $b = array_reverse($right->limbs);\n        if ($aNeg) {\n            for ($i = 0; $i < 4; ++$i) {\n                $a[$i] = ($a[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$a[0];\n        }\n        if ($bNeg) {\n            for ($i = 0; $i < 4; ++$i) {\n                $b[$i] = ($b[$i] ^ 0xffff) & 0xffff;\n            }\n            ++$b[0];\n        }\n        $res = $this->multiplyLong($a, $b);\n        if ($aNeg !== $bNeg) {\n            if ($aNeg !== $bNeg) {\n                for ($i = 0; $i < 4; ++$i) {\n                    $res[$i] = ($res[$i] ^ 0xffff) & 0xffff;\n                }\n                $c = 1;\n                for ($i = 0; $i < 4; ++$i) {\n                    $res[$i] += $c;\n                    $c = $res[$i] >> 16;\n                    $res[$i] &= 0xffff;\n                }\n            }\n        }\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->limbs = array(\n            $res[3] & 0xffff,\n            $res[2] & 0xffff,\n            $res[1] & 0xffff,\n            $res[0] & 0xffff\n        );\n        if (count($res) > 4) {\n            $return->overflow = $res[4];\n        }\n        return $return;\n    }\n\n    \/**\n     * @param ParagonIE_Sodium_Core32_Int64 $int\n     * @param int $size\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedAssignment\n     *\/\n    public function mulInt64(ParagonIE_Sodium_Core32_Int64 $int, $size = 0)\n    {\n        if (ParagonIE_Sodium_Compat::$fastMult) {\n            return $this->mulInt64Fast($int);\n        }\n        ParagonIE_Sodium_Core32_Util::declareScalarType($size, 'int', 2);\n        if (!$size) {\n            $size = 63;\n        }\n        list($a, $b) = self::ctSelect($this, $int);\n\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n\n        \/\/ Initialize:\n        $ret0 = 0;\n        $ret1 = 0;\n        $ret2 = 0;\n        $ret3 = 0;\n        $a0 = $a->limbs[0];\n        $a1 = $a->limbs[1];\n        $a2 = $a->limbs[2];\n        $a3 = $a->limbs[3];\n        $b0 = $b->limbs[0];\n        $b1 = $b->limbs[1];\n        $b2 = $b->limbs[2];\n        $b3 = $b->limbs[3];\n\n        \/** @var int $size *\/\n        \/** @var int $i *\/\n        for ($i = (int) $size; $i >= 0; --$i) {\n            $mask = -($b3 & 1);\n            $x0 = $a0 & $mask;\n            $x1 = $a1 & $mask;\n            $x2 = $a2 & $mask;\n            $x3 = $a3 & $mask;\n\n            $ret3 += $x3;\n            $c = $ret3 >> 16;\n\n            $ret2 += $x2 + $c;\n            $c = $ret2 >> 16;\n\n            $ret1 += $x1 + $c;\n            $c = $ret1 >> 16;\n\n            $ret0 += $x0 + $c;\n\n            $ret0 &= 0xffff;\n            $ret1 &= 0xffff;\n            $ret2 &= 0xffff;\n            $ret3 &= 0xffff;\n\n            $a3 = $a3 << 1;\n            $x3 = $a3 >> 16;\n            $a2 = ($a2 << 1) | $x3;\n            $x2 = $a2 >> 16;\n            $a1 = ($a1 << 1) | $x2;\n            $x1 = $a1 >> 16;\n            $a0 = ($a0 << 1) | $x1;\n            $a0 &= 0xffff;\n            $a1 &= 0xffff;\n            $a2 &= 0xffff;\n            $a3 &= 0xffff;\n\n            $x0 = ($b0 & 1) << 16;\n            $x1 = ($b1 & 1) << 16;\n            $x2 = ($b2 & 1) << 16;\n\n            $b0 = ($b0 >> 1);\n            $b1 = (($b1 | $x0) >> 1);\n            $b2 = (($b2 | $x1) >> 1);\n            $b3 = (($b3 | $x2) >> 1);\n\n            $b0 &= 0xffff;\n            $b1 &= 0xffff;\n            $b2 &= 0xffff;\n            $b3 &= 0xffff;\n\n        }\n        $return->limbs[0] = $ret0;\n        $return->limbs[1] = $ret1;\n        $return->limbs[2] = $ret2;\n        $return->limbs[3] = $ret3;\n\n        return $return;\n    }\n\n    \/**\n     * OR this 64-bit integer with another.\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $b\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function orInt64(ParagonIE_Sodium_Core32_Int64 $b)\n    {\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        $return->limbs = array(\n            (int) ($this->limbs[0] | $b->limbs[0]),\n            (int) ($this->limbs[1] | $b->limbs[1]),\n            (int) ($this->limbs[2] | $b->limbs[2]),\n            (int) ($this->limbs[3] | $b->limbs[3])\n        );\n        return $return;\n    }\n\n    \/**\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayAccess\n     *\/\n    public function rotateLeft($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        \/** @var int $c *\/\n        $c = (int) $c;\n\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 63;\n        if ($c === 0) {\n            \/\/ NOP, but we want a copy.\n            $return->limbs = $this->limbs;\n        } else {\n            \/** @var array<int, int> $limbs *\/\n            $limbs =& $return->limbs;\n\n            \/** @var array<int, int> $myLimbs *\/\n            $myLimbs =& $this->limbs;\n\n            \/** @var int $idx_shift *\/\n            $idx_shift = ($c >> 4) & 3;\n            \/** @var int $sub_shift *\/\n            $sub_shift = $c & 15;\n\n            for ($i = 3; $i >= 0; --$i) {\n                \/** @var int $j *\/\n                $j = ($i + $idx_shift) & 3;\n                \/** @var int $k *\/\n                $k = ($i + $idx_shift + 1) & 3;\n                $limbs[$i] = (int) (\n                    (\n                        ((int) ($myLimbs[$j]) << $sub_shift)\n                            |\n                        ((int) ($myLimbs[$k]) >> (16 - $sub_shift))\n                    ) & 0xffff\n                );\n            }\n        }\n        return $return;\n    }\n\n    \/**\n     * Rotate to the right\n     *\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayAccess\n     *\/\n    public function rotateRight($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        \/** @var int $c *\/\n        $c = (int) $c;\n\n        \/** @var ParagonIE_Sodium_Core32_Int64 $return *\/\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 63;\n        \/** @var int $c *\/\n        if ($c === 0) {\n            \/\/ NOP, but we want a copy.\n            $return->limbs = $this->limbs;\n        } else {\n            \/** @var array<int, int> $limbs *\/\n            $limbs =& $return->limbs;\n\n            \/** @var array<int, int> $myLimbs *\/\n            $myLimbs =& $this->limbs;\n\n            \/** @var int $idx_shift *\/\n            $idx_shift = ($c >> 4) & 3;\n            \/** @var int $sub_shift *\/\n            $sub_shift = $c & 15;\n\n            for ($i = 3; $i >= 0; --$i) {\n                \/** @var int $j *\/\n                $j = ($i - $idx_shift) & 3;\n                \/** @var int $k *\/\n                $k = ($i - $idx_shift - 1) & 3;\n                $limbs[$i] = (int) (\n                    (\n                        ((int) ($myLimbs[$j]) >> (int) ($sub_shift))\n                            |\n                        ((int) ($myLimbs[$k]) << (16 - (int) ($sub_shift)))\n                    ) & 0xffff\n                );\n            }\n        }\n        return $return;\n    }\n    \/**\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function shiftLeft($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        \/** @var int $c *\/\n        $c = (int) $c;\n\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 63;\n\n        if ($c >= 16) {\n            if ($c >= 48) {\n                $return->limbs = array(\n                    $this->limbs[3], 0, 0, 0\n                );\n            } elseif ($c >= 32) {\n                $return->limbs = array(\n                    $this->limbs[2], $this->limbs[3], 0, 0\n                );\n            } else {\n                $return->limbs = array(\n                    $this->limbs[1], $this->limbs[2], $this->limbs[3], 0\n                );\n            }\n            return $return->shiftLeft($c & 15);\n        }\n        if ($c === 0) {\n            $return->limbs = $this->limbs;\n        } elseif ($c < 0) {\n            \/** @var int $c *\/\n            return $this->shiftRight(-$c);\n        } else {\n            if (!is_int($c)) {\n                throw new TypeError();\n            }\n            \/** @var int $carry *\/\n            $carry = 0;\n            for ($i = 3; $i >= 0; --$i) {\n                \/** @var int $tmp *\/\n                $tmp = ($this->limbs[$i] << $c) | ($carry & 0xffff);\n                $return->limbs[$i] = (int) ($tmp & 0xffff);\n                \/** @var int $carry *\/\n                $carry = $tmp >> 16;\n            }\n        }\n        return $return;\n    }\n\n    \/**\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function shiftRight($c = 0)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($c, 'int', 1);\n        $c = (int) $c;\n        \/** @var int $c *\/\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        $c &= 63;\n\n        $negative = -(($this->limbs[0] >> 15) & 1);\n        if ($c >= 16) {\n            if ($c >= 48) {\n                $return->limbs = array(\n                    (int) ($negative & 0xffff),\n                    (int) ($negative & 0xffff),\n                    (int) ($negative & 0xffff),\n                    (int) $this->limbs[0]\n                );\n            } elseif ($c >= 32) {\n                $return->limbs = array(\n                    (int) ($negative & 0xffff),\n                    (int) ($negative & 0xffff),\n                    (int) $this->limbs[0],\n                    (int) $this->limbs[1]\n                );\n            } else {\n                $return->limbs = array(\n                    (int) ($negative & 0xffff),\n                    (int) $this->limbs[0],\n                    (int) $this->limbs[1],\n                    (int) $this->limbs[2]\n                );\n            }\n            return $return->shiftRight($c & 15);\n        }\n\n        if ($c === 0) {\n            $return->limbs = $this->limbs;\n        } elseif ($c < 0) {\n            return $this->shiftLeft(-$c);\n        } else {\n            if (!is_int($c)) {\n                throw new TypeError();\n            }\n            \/** @var int $carryRight *\/\n            $carryRight = ($negative & 0xffff);\n            $mask = (int) (((1 << ($c + 1)) - 1) & 0xffff);\n            for ($i = 0; $i < 4; ++$i) {\n                $return->limbs[$i] = (int) (\n                    (($this->limbs[$i] >> $c) | ($carryRight << (16 - $c))) & 0xffff\n                );\n                $carryRight = (int) ($this->limbs[$i] & $mask);\n            }\n        }\n        return $return;\n    }\n\n\n    \/**\n     * Subtract a normal integer from an int64 object.\n     *\n     * @param int $int\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function subInt($int)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($int, 'int', 1);\n        $int = (int) $int;\n\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n\n        \/** @var int $carry *\/\n        $carry = 0;\n        for ($i = 3; $i >= 0; --$i) {\n            \/** @var int $tmp *\/\n            $tmp = $this->limbs[$i] - (($int >> 16) & 0xffff) + $carry;\n            \/** @var int $carry *\/\n            $carry = $tmp >> 16;\n            $return->limbs[$i] = (int) ($tmp & 0xffff);\n        }\n        return $return;\n    }\n\n    \/**\n     * The difference between two Int64 objects.\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $b\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function subInt64(ParagonIE_Sodium_Core32_Int64 $b)\n    {\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        \/** @var int $carry *\/\n        $carry = 0;\n        for ($i = 3; $i >= 0; --$i) {\n            \/** @var int $tmp *\/\n            $tmp = $this->limbs[$i] - $b->limbs[$i] + $carry;\n            \/** @var int $carry *\/\n            $carry = ($tmp >> 16);\n            $return->limbs[$i] = (int) ($tmp & 0xffff);\n        }\n        return $return;\n    }\n\n    \/**\n     * XOR this 64-bit integer with another.\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $b\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function xorInt64(ParagonIE_Sodium_Core32_Int64 $b)\n    {\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->unsignedInt = $this->unsignedInt;\n        $return->limbs = array(\n            (int) ($this->limbs[0] ^ $b->limbs[0]),\n            (int) ($this->limbs[1] ^ $b->limbs[1]),\n            (int) ($this->limbs[2] ^ $b->limbs[2]),\n            (int) ($this->limbs[3] ^ $b->limbs[3])\n        );\n        return $return;\n    }\n\n    \/**\n     * @param int $low\n     * @param int $high\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromInts($low, $high)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($low, 'int', 1);\n        ParagonIE_Sodium_Core32_Util::declareScalarType($high, 'int', 2);\n\n        $high = (int) $high;\n        $low = (int) $low;\n        return new ParagonIE_Sodium_Core32_Int64(\n            array(\n                (int) (($high >> 16) & 0xffff),\n                (int) ($high & 0xffff),\n                (int) (($low >> 16) & 0xffff),\n                (int) ($low & 0xffff)\n            )\n        );\n    }\n\n    \/**\n     * @param int $low\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromInt($low)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($low, 'int', 1);\n        $low = (int) $low;\n\n        return new ParagonIE_Sodium_Core32_Int64(\n            array(\n                0,\n                0,\n                (int) (($low >> 16) & 0xffff),\n                (int) ($low & 0xffff)\n            )\n        );\n    }\n\n    \/**\n     * @return int\n     *\/\n    public function toInt()\n    {\n        return (int) (\n            (($this->limbs[2] & 0xffff) << 16)\n                |\n            ($this->limbs[3] & 0xffff)\n        );\n    }\n\n    \/**\n     * @param string $string\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromString($string)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($string, 'string', 1);\n        $string = (string) $string;\n        if (ParagonIE_Sodium_Core32_Util::strlen($string) !== 8) {\n            throw new RangeException(\n                'String must be 8 bytes; ' . ParagonIE_Sodium_Core32_Util::strlen($string) . ' given.'\n            );\n        }\n        $return = new ParagonIE_Sodium_Core32_Int64();\n\n        $return->limbs[0]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[0]) & 0xff) << 8);\n        $return->limbs[0] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[1]) & 0xff);\n        $return->limbs[1]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[2]) & 0xff) << 8);\n        $return->limbs[1] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[3]) & 0xff);\n        $return->limbs[2]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[4]) & 0xff) << 8);\n        $return->limbs[2] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[5]) & 0xff);\n        $return->limbs[3]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[6]) & 0xff) << 8);\n        $return->limbs[3] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[7]) & 0xff);\n        return $return;\n    }\n\n    \/**\n     * @param string $string\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromReverseString($string)\n    {\n        ParagonIE_Sodium_Core32_Util::declareScalarType($string, 'string', 1);\n        $string = (string) $string;\n        if (ParagonIE_Sodium_Core32_Util::strlen($string) !== 8) {\n            throw new RangeException(\n                'String must be 8 bytes; ' . ParagonIE_Sodium_Core32_Util::strlen($string) . ' given.'\n            );\n        }\n        $return = new ParagonIE_Sodium_Core32_Int64();\n\n        $return->limbs[0]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[7]) & 0xff) << 8);\n        $return->limbs[0] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[6]) & 0xff);\n        $return->limbs[1]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[5]) & 0xff) << 8);\n        $return->limbs[1] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[4]) & 0xff);\n        $return->limbs[2]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[3]) & 0xff) << 8);\n        $return->limbs[2] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[2]) & 0xff);\n        $return->limbs[3]  = (int) ((ParagonIE_Sodium_Core32_Util::chrToInt($string[1]) & 0xff) << 8);\n        $return->limbs[3] |= (ParagonIE_Sodium_Core32_Util::chrToInt($string[0]) & 0xff);\n        return $return;\n    }\n\n    \/**\n     * @return array<int, int>\n     *\/\n    public function toArray()\n    {\n        return array(\n            (int) ((($this->limbs[0] & 0xffff) << 16) | ($this->limbs[1] & 0xffff)),\n            (int) ((($this->limbs[2] & 0xffff) << 16) | ($this->limbs[3] & 0xffff))\n        );\n    }\n\n    \/**\n     * @return ParagonIE_Sodium_Core32_Int32\n     *\/\n    public function toInt32()\n    {\n        $return = new ParagonIE_Sodium_Core32_Int32();\n        $return->limbs[0] = (int) ($this->limbs[2]);\n        $return->limbs[1] = (int) ($this->limbs[3]);\n        $return->unsignedInt = $this->unsignedInt;\n        $return->overflow = (int) (ParagonIE_Sodium_Core32_Util::abs($this->limbs[1], 16) & 0xffff);\n        return $return;\n    }\n\n    \/**\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public function toInt64()\n    {\n        $return = new ParagonIE_Sodium_Core32_Int64();\n        $return->limbs[0] = (int) ($this->limbs[0]);\n        $return->limbs[1] = (int) ($this->limbs[1]);\n        $return->limbs[2] = (int) ($this->limbs[2]);\n        $return->limbs[3] = (int) ($this->limbs[3]);\n        $return->unsignedInt = $this->unsignedInt;\n        $return->overflow = ParagonIE_Sodium_Core32_Util::abs($this->overflow);\n        return $return;\n    }\n\n    \/**\n     * @param bool $bool\n     * @return self\n     *\/\n    public function setUnsignedInt($bool = false)\n    {\n        $this->unsignedInt = !empty($bool);\n        return $this;\n    }\n\n    \/**\n     * @return string\n     * @throws TypeError\n     *\/\n    public function toString()\n    {\n        return ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[0] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[0] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[1] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[1] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[2] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[2] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[3] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[3] & 0xff);\n    }\n\n    \/**\n     * @return string\n     * @throws TypeError\n     *\/\n    public function toReverseString()\n    {\n        return ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[3] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[3] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[2] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[2] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[1] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[1] >> 8) & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr($this->limbs[0] & 0xff) .\n            ParagonIE_Sodium_Core32_Util::intToChr(($this->limbs[0] >> 8) & 0xff);\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function __toString()\n    {\n        try {\n            return $this->toString();\n        } catch (TypeError $ex) {\n            \/\/ PHP engine can't handle exceptions from __toString()\n            return '';\n        }\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Util.php","ext":"php","size":268,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Util', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_Util\n *\/\nabstract class ParagonIE_Sodium_Core32_Util extends ParagonIE_Sodium_Core_Util\n{\n\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519.php","ext":"php","size":133033,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519\n *\n * Implements Curve25519 core functions\n *\n * Based on the ref10 curve25519 code provided by libsodium\n *\n * @ref https:\/\/github.com\/jedisct1\/libsodium\/blob\/master\/src\/libsodium\/crypto_core\/curve25519\/ref10\/curve25519_ref10.c\n *\/\nabstract class ParagonIE_Sodium_Core32_Curve25519 extends ParagonIE_Sodium_Core32_Curve25519_H\n{\n    \/**\n     * Get a field element of size 10 with a value of 0\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fe_0()\n    {\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n            array(\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32()\n            )\n        );\n    }\n\n    \/**\n     * Get a field element of size 10 with a value of 1\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fe_1()\n    {\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n            array(\n                ParagonIE_Sodium_Core32_Int32::fromInt(1),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32(),\n                new ParagonIE_Sodium_Core32_Int32()\n            )\n        );\n    }\n\n    \/**\n     * Add two field elements.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $g\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_add(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $f,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $g\n    ) {\n        $arr = array();\n        for ($i = 0; $i < 10; ++$i) {\n            $arr[$i] = $f[$i]->addInt32($g[$i]);\n        }\n        \/** @var array<int, ParagonIE_Sodium_Core32_Int32> $arr *\/\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray($arr);\n    }\n\n    \/**\n     * Constant-time conditional move.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $g\n     * @param int $b\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_cmov(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $f,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $g,\n        $b = 0\n    ) {\n        \/** @var array<int, ParagonIE_Sodium_Core32_Int32> $h *\/\n        $h = array();\n        for ($i = 0; $i < 10; ++$i) {\n            if (!($f[$i] instanceof ParagonIE_Sodium_Core32_Int32)) {\n                throw new TypeError('Expected Int32');\n            }\n            if (!($g[$i] instanceof ParagonIE_Sodium_Core32_Int32)) {\n                throw new TypeError('Expected Int32');\n            }\n            $h[$i] = $f[$i]->xorInt32(\n                $f[$i]->xorInt32($g[$i])->mask($b)\n            );\n        }\n        \/** @var array<int, ParagonIE_Sodium_Core32_Int32> $h *\/\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray($h);\n    }\n\n    \/**\n     * Create a copy of a field element.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public static function fe_copy(ParagonIE_Sodium_Core32_Curve25519_Fe $f)\n    {\n        $h = clone $f;\n        return $h;\n    }\n\n    \/**\n     * Give: 32-byte string.\n     * Receive: A field element object to use for internal calculations.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $s\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws RangeException\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_frombytes($s)\n    {\n        if (self::strlen($s) !== 32) {\n            throw new RangeException('Expected a 32-byte string.');\n        }\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h0 *\/\n        $h0 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_4($s)\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h1 *\/\n        $h1 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_3(self::substr($s, 4, 3)) << 6\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h2 *\/\n        $h2 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_3(self::substr($s, 7, 3)) << 5\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h3 *\/\n        $h3 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_3(self::substr($s, 10, 3)) << 3\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h4 *\/\n        $h4 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_3(self::substr($s, 13, 3)) << 2\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h5 *\/\n        $h5 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_4(self::substr($s, 16, 4))\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h6 *\/\n        $h6 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_3(self::substr($s, 20, 3)) << 7\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h7 *\/\n        $h7 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_3(self::substr($s, 23, 3)) << 5\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h8 *\/\n        $h8 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            self::load_3(self::substr($s, 26, 3)) << 4\n        );\n        \/** @var ParagonIE_Sodium_Core32_Int32 $h9 *\/\n        $h9 = ParagonIE_Sodium_Core32_Int32::fromInt(\n            (self::load_3(self::substr($s, 29, 3)) & 8388607) << 2\n        );\n\n        $carry9 = $h9->addInt(1 << 24)->shiftRight(25);\n        $h0 = $h0->addInt32($carry9->mulInt(19, 5));\n        $h9 = $h9->subInt32($carry9->shiftLeft(25));\n\n        $carry1 = $h1->addInt(1 << 24)->shiftRight(25);\n        $h2 = $h2->addInt32($carry1);\n        $h1 = $h1->subInt32($carry1->shiftLeft(25));\n\n        $carry3 = $h3->addInt(1 << 24)->shiftRight(25);\n        $h4 = $h4->addInt32($carry3);\n        $h3 = $h3->subInt32($carry3->shiftLeft(25));\n\n        $carry5 = $h5->addInt(1 << 24)->shiftRight(25);\n        $h6 = $h6->addInt32($carry5);\n        $h5 = $h5->subInt32($carry5->shiftLeft(25));\n\n        $carry7 = $h7->addInt(1 << 24)->shiftRight(25);\n        $h8 = $h8->addInt32($carry7);\n        $h7 = $h7->subInt32($carry7->shiftLeft(25));\n\n        $carry0 = $h0->addInt(1 << 25)->shiftRight(26);\n        $h1 = $h1->addInt32($carry0);\n        $h0 = $h0->subInt32($carry0->shiftLeft(26));\n\n        $carry2 = $h2->addInt(1 << 25)->shiftRight(26);\n        $h3 = $h3->addInt32($carry2);\n        $h2 = $h2->subInt32($carry2->shiftLeft(26));\n\n        $carry4 = $h4->addInt(1 << 25)->shiftRight(26);\n        $h5 = $h5->addInt32($carry4);\n        $h4 = $h4->subInt32($carry4->shiftLeft(26));\n\n        $carry6 = $h6->addInt(1 << 25)->shiftRight(26);\n        $h7 = $h7->addInt32($carry6);\n        $h6 = $h6->subInt32($carry6->shiftLeft(26));\n\n        $carry8 = $h8->addInt(1 << 25)->shiftRight(26);\n        $h9 = $h9->addInt32($carry8);\n        $h8 = $h8->subInt32($carry8->shiftLeft(26));\n\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n            array($h0, $h1, $h2,$h3, $h4, $h5, $h6, $h7, $h8, $h9)\n        );\n    }\n\n    \/**\n     * Convert a field element to a byte string.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $h\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_tobytes(ParagonIE_Sodium_Core32_Curve25519_Fe $h)\n    {\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int64[] $f\n         * @var ParagonIE_Sodium_Core32_Int64 $q\n         *\/\n        $f = array();\n\n        for ($i = 0; $i < 10; ++$i) {\n            $f[$i] = $h[$i]->toInt64();\n        }\n\n        $q = $f[9]->mulInt(19, 5)->addInt(1 << 14)->shiftRight(25)\n            ->addInt64($f[0])->shiftRight(26)\n            ->addInt64($f[1])->shiftRight(25)\n            ->addInt64($f[2])->shiftRight(26)\n            ->addInt64($f[3])->shiftRight(25)\n            ->addInt64($f[4])->shiftRight(26)\n            ->addInt64($f[5])->shiftRight(25)\n            ->addInt64($f[6])->shiftRight(26)\n            ->addInt64($f[7])->shiftRight(25)\n            ->addInt64($f[8])->shiftRight(26)\n            ->addInt64($f[9])->shiftRight(25);\n\n        $f[0] = $f[0]->addInt64($q->mulInt(19, 5));\n\n        $carry0 = $f[0]->shiftRight(26);\n        $f[1] = $f[1]->addInt64($carry0);\n        $f[0] = $f[0]->subInt64($carry0->shiftLeft(26));\n\n        $carry1 = $f[1]->shiftRight(25);\n        $f[2] = $f[2]->addInt64($carry1);\n        $f[1] = $f[1]->subInt64($carry1->shiftLeft(25));\n\n        $carry2 = $f[2]->shiftRight(26);\n        $f[3] = $f[3]->addInt64($carry2);\n        $f[2] = $f[2]->subInt64($carry2->shiftLeft(26));\n\n        $carry3 = $f[3]->shiftRight(25);\n        $f[4] = $f[4]->addInt64($carry3);\n        $f[3] = $f[3]->subInt64($carry3->shiftLeft(25));\n\n        $carry4 = $f[4]->shiftRight(26);\n        $f[5] = $f[5]->addInt64($carry4);\n        $f[4] = $f[4]->subInt64($carry4->shiftLeft(26));\n\n        $carry5 = $f[5]->shiftRight(25);\n        $f[6] = $f[6]->addInt64($carry5);\n        $f[5] = $f[5]->subInt64($carry5->shiftLeft(25));\n\n        $carry6 = $f[6]->shiftRight(26);\n        $f[7] = $f[7]->addInt64($carry6);\n        $f[6] = $f[6]->subInt64($carry6->shiftLeft(26));\n\n        $carry7 = $f[7]->shiftRight(25);\n        $f[8] = $f[8]->addInt64($carry7);\n        $f[7] = $f[7]->subInt64($carry7->shiftLeft(25));\n\n        $carry8 = $f[8]->shiftRight(26);\n        $f[9] = $f[9]->addInt64($carry8);\n        $f[8] = $f[8]->subInt64($carry8->shiftLeft(26));\n\n        $carry9 = $f[9]->shiftRight(25);\n        $f[9] = $f[9]->subInt64($carry9->shiftLeft(25));\n\n        $h0 = $f[0]->toInt32()->toInt();\n        $h1 = $f[1]->toInt32()->toInt();\n        $h2 = $f[2]->toInt32()->toInt();\n        $h3 = $f[3]->toInt32()->toInt();\n        $h4 = $f[4]->toInt32()->toInt();\n        $h5 = $f[5]->toInt32()->toInt();\n        $h6 = $f[6]->toInt32()->toInt();\n        $h7 = $f[7]->toInt32()->toInt();\n        $h8 = $f[8]->toInt32()->toInt();\n        $h9 = $f[9]->toInt32()->toInt();\n\n        \/**\n         * @var array<int, int>\n         *\/\n        $s = array(\n            (int) (($h0 >> 0) & 0xff),\n            (int) (($h0 >> 8) & 0xff),\n            (int) (($h0 >> 16) & 0xff),\n            (int) ((($h0 >> 24) | ($h1 << 2)) & 0xff),\n            (int) (($h1 >> 6) & 0xff),\n            (int) (($h1 >> 14) & 0xff),\n            (int) ((($h1 >> 22) | ($h2 << 3)) & 0xff),\n            (int) (($h2 >> 5) & 0xff),\n            (int) (($h2 >> 13) & 0xff),\n            (int) ((($h2 >> 21) | ($h3 << 5)) & 0xff),\n            (int) (($h3 >> 3) & 0xff),\n            (int) (($h3 >> 11) & 0xff),\n            (int) ((($h3 >> 19) | ($h4 << 6)) & 0xff),\n            (int) (($h4 >> 2) & 0xff),\n            (int) (($h4 >> 10) & 0xff),\n            (int) (($h4 >> 18) & 0xff),\n            (int) (($h5 >> 0) & 0xff),\n            (int) (($h5 >> 8) & 0xff),\n            (int) (($h5 >> 16) & 0xff),\n            (int) ((($h5 >> 24) | ($h6 << 1)) & 0xff),\n            (int) (($h6 >> 7) & 0xff),\n            (int) (($h6 >> 15) & 0xff),\n            (int) ((($h6 >> 23) | ($h7 << 3)) & 0xff),\n            (int) (($h7 >> 5) & 0xff),\n            (int) (($h7 >> 13) & 0xff),\n            (int) ((($h7 >> 21) | ($h8 << 4)) & 0xff),\n            (int) (($h8 >> 4) & 0xff),\n            (int) (($h8 >> 12) & 0xff),\n            (int) ((($h8 >> 20) | ($h9 << 6)) & 0xff),\n            (int) (($h9 >> 2) & 0xff),\n            (int) (($h9 >> 10) & 0xff),\n            (int) (($h9 >> 18) & 0xff)\n        );\n        return self::intArrayToString($s);\n    }\n\n    \/**\n     * Is a field element negative? (1 = yes, 0 = no. Used in calculations.)\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @return int\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fe_isnegative(ParagonIE_Sodium_Core32_Curve25519_Fe $f)\n    {\n        $str = self::fe_tobytes($f);\n        return (int) (self::chrToInt($str[0]) & 1);\n    }\n\n    \/**\n     * Returns 0 if this field element results in all NUL bytes.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fe_isnonzero(ParagonIE_Sodium_Core32_Curve25519_Fe $f)\n    {\n        static $zero;\n        if ($zero === null) {\n            $zero = str_repeat(\"\\x00\", 32);\n        }\n        $str = self::fe_tobytes($f);\n        \/** @var string $zero *\/\n        return !self::verify_32($str, $zero);\n    }\n\n    \/**\n     * Multiply two field elements\n     *\n     * h = f * g\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @security Is multiplication a source of timing leaks? If so, can we do\n     *           anything to prevent that from happening?\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $g\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fe_mul(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $f,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $g\n    ) {\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int32[] $f\n         * @var ParagonIE_Sodium_Core32_Int32[] $g\n         * @var ParagonIE_Sodium_Core32_Int64 $f0\n         * @var ParagonIE_Sodium_Core32_Int64 $f1\n         * @var ParagonIE_Sodium_Core32_Int64 $f2\n         * @var ParagonIE_Sodium_Core32_Int64 $f3\n         * @var ParagonIE_Sodium_Core32_Int64 $f4\n         * @var ParagonIE_Sodium_Core32_Int64 $f5\n         * @var ParagonIE_Sodium_Core32_Int64 $f6\n         * @var ParagonIE_Sodium_Core32_Int64 $f7\n         * @var ParagonIE_Sodium_Core32_Int64 $f8\n         * @var ParagonIE_Sodium_Core32_Int64 $f9\n         * @var ParagonIE_Sodium_Core32_Int64 $g0\n         * @var ParagonIE_Sodium_Core32_Int64 $g1\n         * @var ParagonIE_Sodium_Core32_Int64 $g2\n         * @var ParagonIE_Sodium_Core32_Int64 $g3\n         * @var ParagonIE_Sodium_Core32_Int64 $g4\n         * @var ParagonIE_Sodium_Core32_Int64 $g5\n         * @var ParagonIE_Sodium_Core32_Int64 $g6\n         * @var ParagonIE_Sodium_Core32_Int64 $g7\n         * @var ParagonIE_Sodium_Core32_Int64 $g8\n         * @var ParagonIE_Sodium_Core32_Int64 $g9\n         *\/\n        $f0 = $f[0]->toInt64();\n        $f1 = $f[1]->toInt64();\n        $f2 = $f[2]->toInt64();\n        $f3 = $f[3]->toInt64();\n        $f4 = $f[4]->toInt64();\n        $f5 = $f[5]->toInt64();\n        $f6 = $f[6]->toInt64();\n        $f7 = $f[7]->toInt64();\n        $f8 = $f[8]->toInt64();\n        $f9 = $f[9]->toInt64();\n        $g0 = $g[0]->toInt64();\n        $g1 = $g[1]->toInt64();\n        $g2 = $g[2]->toInt64();\n        $g3 = $g[3]->toInt64();\n        $g4 = $g[4]->toInt64();\n        $g5 = $g[5]->toInt64();\n        $g6 = $g[6]->toInt64();\n        $g7 = $g[7]->toInt64();\n        $g8 = $g[8]->toInt64();\n        $g9 = $g[9]->toInt64();\n        $g1_19 = $g1->mulInt(19, 5); \/* 2^4 <= 19 <= 2^5, but we only want 5 bits *\/\n        $g2_19 = $g2->mulInt(19, 5);\n        $g3_19 = $g3->mulInt(19, 5);\n        $g4_19 = $g4->mulInt(19, 5);\n        $g5_19 = $g5->mulInt(19, 5);\n        $g6_19 = $g6->mulInt(19, 5);\n        $g7_19 = $g7->mulInt(19, 5);\n        $g8_19 = $g8->mulInt(19, 5);\n        $g9_19 = $g9->mulInt(19, 5);\n        $f1_2 = $f1->shiftLeft(1);\n        $f3_2 = $f3->shiftLeft(1);\n        $f5_2 = $f5->shiftLeft(1);\n        $f7_2 = $f7->shiftLeft(1);\n        $f9_2 = $f9->shiftLeft(1);\n        $f0g0    = $f0->mulInt64($g0, 27);\n        $f0g1    = $f0->mulInt64($g1, 27);\n        $f0g2    = $f0->mulInt64($g2, 27);\n        $f0g3    = $f0->mulInt64($g3, 27);\n        $f0g4    = $f0->mulInt64($g4, 27);\n        $f0g5    = $f0->mulInt64($g5, 27);\n        $f0g6    = $f0->mulInt64($g6, 27);\n        $f0g7    = $f0->mulInt64($g7, 27);\n        $f0g8    = $f0->mulInt64($g8, 27);\n        $f0g9    = $f0->mulInt64($g9, 27);\n        $f1g0    = $f1->mulInt64($g0, 27);\n        $f1g1_2  = $f1_2->mulInt64($g1, 27);\n        $f1g2    = $f1->mulInt64($g2, 27);\n        $f1g3_2  = $f1_2->mulInt64($g3, 27);\n        $f1g4    = $f1->mulInt64($g4, 30);\n        $f1g5_2  = $f1_2->mulInt64($g5, 30);\n        $f1g6    = $f1->mulInt64($g6, 30);\n        $f1g7_2  = $f1_2->mulInt64($g7, 30);\n        $f1g8    = $f1->mulInt64($g8, 30);\n        $f1g9_38 = $g9_19->mulInt64($f1_2, 30);\n        $f2g0    = $f2->mulInt64($g0, 30);\n        $f2g1    = $f2->mulInt64($g1, 29);\n        $f2g2    = $f2->mulInt64($g2, 30);\n        $f2g3    = $f2->mulInt64($g3, 29);\n        $f2g4    = $f2->mulInt64($g4, 30);\n        $f2g5    = $f2->mulInt64($g5, 29);\n        $f2g6    = $f2->mulInt64($g6, 30);\n        $f2g7    = $f2->mulInt64($g7, 29);\n        $f2g8_19 = $g8_19->mulInt64($f2, 30);\n        $f2g9_19 = $g9_19->mulInt64($f2, 30);\n        $f3g0    = $f3->mulInt64($g0, 30);\n        $f3g1_2  = $f3_2->mulInt64($g1, 30);\n        $f3g2    = $f3->mulInt64($g2, 30);\n        $f3g3_2  = $f3_2->mulInt64($g3, 30);\n        $f3g4    = $f3->mulInt64($g4, 30);\n        $f3g5_2  = $f3_2->mulInt64($g5, 30);\n        $f3g6    = $f3->mulInt64($g6, 30);\n        $f3g7_38 = $g7_19->mulInt64($f3_2, 30);\n        $f3g8_19 = $g8_19->mulInt64($f3, 30);\n        $f3g9_38 = $g9_19->mulInt64($f3_2, 30);\n        $f4g0    = $f4->mulInt64($g0, 30);\n        $f4g1    = $f4->mulInt64($g1, 30);\n        $f4g2    = $f4->mulInt64($g2, 30);\n        $f4g3    = $f4->mulInt64($g3, 30);\n        $f4g4    = $f4->mulInt64($g4, 30);\n        $f4g5    = $f4->mulInt64($g5, 30);\n        $f4g6_19 = $g6_19->mulInt64($f4, 30);\n        $f4g7_19 = $g7_19->mulInt64($f4, 30);\n        $f4g8_19 = $g8_19->mulInt64($f4, 30);\n        $f4g9_19 = $g9_19->mulInt64($f4, 30);\n        $f5g0    = $f5->mulInt64($g0, 30);\n        $f5g1_2  = $f5_2->mulInt64($g1, 30);\n        $f5g2    = $f5->mulInt64($g2, 30);\n        $f5g3_2  = $f5_2->mulInt64($g3, 30);\n        $f5g4    = $f5->mulInt64($g4, 30);\n        $f5g5_38 = $g5_19->mulInt64($f5_2, 30);\n        $f5g6_19 = $g6_19->mulInt64($f5, 30);\n        $f5g7_38 = $g7_19->mulInt64($f5_2, 30);\n        $f5g8_19 = $g8_19->mulInt64($f5, 30);\n        $f5g9_38 = $g9_19->mulInt64($f5_2, 30);\n        $f6g0    = $f6->mulInt64($g0, 30);\n        $f6g1    = $f6->mulInt64($g1, 30);\n        $f6g2    = $f6->mulInt64($g2, 30);\n        $f6g3    = $f6->mulInt64($g3, 30);\n        $f6g4_19 = $g4_19->mulInt64($f6, 30);\n        $f6g5_19 = $g5_19->mulInt64($f6, 30);\n        $f6g6_19 = $g6_19->mulInt64($f6, 30);\n        $f6g7_19 = $g7_19->mulInt64($f6, 30);\n        $f6g8_19 = $g8_19->mulInt64($f6, 30);\n        $f6g9_19 = $g9_19->mulInt64($f6, 30);\n        $f7g0    = $f7->mulInt64($g0, 30);\n        $f7g1_2  = $g1->mulInt64($f7_2, 30);\n        $f7g2    = $f7->mulInt64($g2, 30);\n        $f7g3_38 = $g3_19->mulInt64($f7_2, 30);\n        $f7g4_19 = $g4_19->mulInt64($f7, 30);\n        $f7g5_38 = $g5_19->mulInt64($f7_2, 30);\n        $f7g6_19 = $g6_19->mulInt64($f7, 30);\n        $f7g7_38 = $g7_19->mulInt64($f7_2, 30);\n        $f7g8_19 = $g8_19->mulInt64($f7, 30);\n        $f7g9_38 = $g9_19->mulInt64($f7_2, 30);\n        $f8g0    = $f8->mulInt64($g0, 30);\n        $f8g1    = $f8->mulInt64($g1, 29);\n        $f8g2_19 = $g2_19->mulInt64($f8, 30);\n        $f8g3_19 = $g3_19->mulInt64($f8, 30);\n        $f8g4_19 = $g4_19->mulInt64($f8, 30);\n        $f8g5_19 = $g5_19->mulInt64($f8, 30);\n        $f8g6_19 = $g6_19->mulInt64($f8, 30);\n        $f8g7_19 = $g7_19->mulInt64($f8, 30);\n        $f8g8_19 = $g8_19->mulInt64($f8, 30);\n        $f8g9_19 = $g9_19->mulInt64($f8, 30);\n        $f9g0    = $f9->mulInt64($g0, 30);\n        $f9g1_38 = $g1_19->mulInt64($f9_2, 30);\n        $f9g2_19 = $g2_19->mulInt64($f9, 30);\n        $f9g3_38 = $g3_19->mulInt64($f9_2, 30);\n        $f9g4_19 = $g4_19->mulInt64($f9, 30);\n        $f9g5_38 = $g5_19->mulInt64($f9_2, 30);\n        $f9g6_19 = $g6_19->mulInt64($f9, 30);\n        $f9g7_38 = $g7_19->mulInt64($f9_2, 30);\n        $f9g8_19 = $g8_19->mulInt64($f9, 30);\n        $f9g9_38 = $g9_19->mulInt64($f9_2, 30);\n\n        \/\/ $h0 = $f0g0 + $f1g9_38 + $f2g8_19 + $f3g7_38 + $f4g6_19 + $f5g5_38 + $f6g4_19 + $f7g3_38 + $f8g2_19 + $f9g1_38;\n        $h0 = $f0g0->addInt64($f1g9_38)->addInt64($f2g8_19)->addInt64($f3g7_38)\n            ->addInt64($f4g6_19)->addInt64($f5g5_38)->addInt64($f6g4_19)\n            ->addInt64($f7g3_38)->addInt64($f8g2_19)->addInt64($f9g1_38);\n\n        \/\/ $h1 = $f0g1 + $f1g0    + $f2g9_19 + $f3g8_19 + $f4g7_19 + $f5g6_19 + $f6g5_19 + $f7g4_19 + $f8g3_19 + $f9g2_19;\n        $h1 = $f0g1->addInt64($f1g0)->addInt64($f2g9_19)->addInt64($f3g8_19)\n            ->addInt64($f4g7_19)->addInt64($f5g6_19)->addInt64($f6g5_19)\n            ->addInt64($f7g4_19)->addInt64($f8g3_19)->addInt64($f9g2_19);\n\n        \/\/ $h2 = $f0g2 + $f1g1_2  + $f2g0    + $f3g9_38 + $f4g8_19 + $f5g7_38 + $f6g6_19 + $f7g5_38 + $f8g4_19 + $f9g3_38;\n        $h2 = $f0g2->addInt64($f1g1_2)->addInt64($f2g0)->addInt64($f3g9_38)\n            ->addInt64($f4g8_19)->addInt64($f5g7_38)->addInt64($f6g6_19)\n            ->addInt64($f7g5_38)->addInt64($f8g4_19)->addInt64($f9g3_38);\n\n        \/\/ $h3 = $f0g3 + $f1g2    + $f2g1    + $f3g0    + $f4g9_19 + $f5g8_19 + $f6g7_19 + $f7g6_19 + $f8g5_19 + $f9g4_19;\n        $h3 = $f0g3->addInt64($f1g2)->addInt64($f2g1)->addInt64($f3g0)\n            ->addInt64($f4g9_19)->addInt64($f5g8_19)->addInt64($f6g7_19)\n            ->addInt64($f7g6_19)->addInt64($f8g5_19)->addInt64($f9g4_19);\n\n        \/\/ $h4 = $f0g4 + $f1g3_2  + $f2g2    + $f3g1_2  + $f4g0    + $f5g9_38 + $f6g8_19 + $f7g7_38 + $f8g6_19 + $f9g5_38;\n        $h4 = $f0g4->addInt64($f1g3_2)->addInt64($f2g2)->addInt64($f3g1_2)\n            ->addInt64($f4g0)->addInt64($f5g9_38)->addInt64($f6g8_19)\n            ->addInt64($f7g7_38)->addInt64($f8g6_19)->addInt64($f9g5_38);\n\n        \/\/ $h5 = $f0g5 + $f1g4    + $f2g3    + $f3g2    + $f4g1    + $f5g0    + $f6g9_19 + $f7g8_19 + $f8g7_19 + $f9g6_19;\n        $h5 = $f0g5->addInt64($f1g4)->addInt64($f2g3)->addInt64($f3g2)\n            ->addInt64($f4g1)->addInt64($f5g0)->addInt64($f6g9_19)\n            ->addInt64($f7g8_19)->addInt64($f8g7_19)->addInt64($f9g6_19);\n\n        \/\/ $h6 = $f0g6 + $f1g5_2  + $f2g4    + $f3g3_2  + $f4g2    + $f5g1_2  + $f6g0    + $f7g9_38 + $f8g8_19 + $f9g7_38;\n        $h6 = $f0g6->addInt64($f1g5_2)->addInt64($f2g4)->addInt64($f3g3_2)\n            ->addInt64($f4g2)->addInt64($f5g1_2)->addInt64($f6g0)\n            ->addInt64($f7g9_38)->addInt64($f8g8_19)->addInt64($f9g7_38);\n\n        \/\/ $h7 = $f0g7 + $f1g6    + $f2g5    + $f3g4    + $f4g3    + $f5g2    + $f6g1    + $f7g0    + $f8g9_19 + $f9g8_19;\n        $h7 = $f0g7->addInt64($f1g6)->addInt64($f2g5)->addInt64($f3g4)\n            ->addInt64($f4g3)->addInt64($f5g2)->addInt64($f6g1)\n            ->addInt64($f7g0)->addInt64($f8g9_19)->addInt64($f9g8_19);\n\n        \/\/ $h8 = $f0g8 + $f1g7_2  + $f2g6    + $f3g5_2  + $f4g4    + $f5g3_2  + $f6g2    + $f7g1_2  + $f8g0    + $f9g9_38;\n        $h8 = $f0g8->addInt64($f1g7_2)->addInt64($f2g6)->addInt64($f3g5_2)\n            ->addInt64($f4g4)->addInt64($f5g3_2)->addInt64($f6g2)\n            ->addInt64($f7g1_2)->addInt64($f8g0)->addInt64($f9g9_38);\n\n        \/\/ $h9 = $f0g9 + $f1g8    + $f2g7    + $f3g6    + $f4g5    + $f5g4    + $f6g3    + $f7g2    + $f8g1    + $f9g0   ;\n        $h9 = $f0g9->addInt64($f1g8)->addInt64($f2g7)->addInt64($f3g6)\n            ->addInt64($f4g5)->addInt64($f5g4)->addInt64($f6g3)\n            ->addInt64($f7g2)->addInt64($f8g1)->addInt64($f9g0);\n\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int64 $h0\n         * @var ParagonIE_Sodium_Core32_Int64 $h1\n         * @var ParagonIE_Sodium_Core32_Int64 $h2\n         * @var ParagonIE_Sodium_Core32_Int64 $h3\n         * @var ParagonIE_Sodium_Core32_Int64 $h4\n         * @var ParagonIE_Sodium_Core32_Int64 $h5\n         * @var ParagonIE_Sodium_Core32_Int64 $h6\n         * @var ParagonIE_Sodium_Core32_Int64 $h7\n         * @var ParagonIE_Sodium_Core32_Int64 $h8\n         * @var ParagonIE_Sodium_Core32_Int64 $h9\n         * @var ParagonIE_Sodium_Core32_Int64 $carry0\n         * @var ParagonIE_Sodium_Core32_Int64 $carry1\n         * @var ParagonIE_Sodium_Core32_Int64 $carry2\n         * @var ParagonIE_Sodium_Core32_Int64 $carry3\n         * @var ParagonIE_Sodium_Core32_Int64 $carry4\n         * @var ParagonIE_Sodium_Core32_Int64 $carry5\n         * @var ParagonIE_Sodium_Core32_Int64 $carry6\n         * @var ParagonIE_Sodium_Core32_Int64 $carry7\n         * @var ParagonIE_Sodium_Core32_Int64 $carry8\n         * @var ParagonIE_Sodium_Core32_Int64 $carry9\n         *\/\n        $carry0 = $h0->addInt(1 << 25)->shiftRight(26);\n        $h1 = $h1->addInt64($carry0);\n        $h0 = $h0->subInt64($carry0->shiftLeft(26));\n        $carry4 = $h4->addInt(1 << 25)->shiftRight(26);\n        $h5 = $h5->addInt64($carry4);\n        $h4 = $h4->subInt64($carry4->shiftLeft(26));\n\n        $carry1 = $h1->addInt(1 << 24)->shiftRight(25);\n        $h2 = $h2->addInt64($carry1);\n        $h1 = $h1->subInt64($carry1->shiftLeft(25));\n        $carry5 = $h5->addInt(1 << 24)->shiftRight(25);\n        $h6 = $h6->addInt64($carry5);\n        $h5 = $h5->subInt64($carry5->shiftLeft(25));\n\n        $carry2 = $h2->addInt(1 << 25)->shiftRight(26);\n        $h3 = $h3->addInt64($carry2);\n        $h2 = $h2->subInt64($carry2->shiftLeft(26));\n        $carry6 = $h6->addInt(1 << 25)->shiftRight(26);\n        $h7 = $h7->addInt64($carry6);\n        $h6 = $h6->subInt64($carry6->shiftLeft(26));\n\n        $carry3 = $h3->addInt(1 << 24)->shiftRight(25);\n        $h4 = $h4->addInt64($carry3);\n        $h3 = $h3->subInt64($carry3->shiftLeft(25));\n        $carry7 = $h7->addInt(1 << 24)->shiftRight(25);\n        $h8 = $h8->addInt64($carry7);\n        $h7 = $h7->subInt64($carry7->shiftLeft(25));\n\n        $carry4 = $h4->addInt(1 << 25)->shiftRight(26);\n        $h5 = $h5->addInt64($carry4);\n        $h4 = $h4->subInt64($carry4->shiftLeft(26));\n        $carry8 = $h8->addInt(1 << 25)->shiftRight(26);\n        $h9 = $h9->addInt64($carry8);\n        $h8 = $h8->subInt64($carry8->shiftLeft(26));\n\n        $carry9 = $h9->addInt(1 << 24)->shiftRight(25);\n        $h0 = $h0->addInt64($carry9->mulInt(19, 5));\n        $h9 = $h9->subInt64($carry9->shiftLeft(25));\n\n        $carry0 = $h0->addInt(1 << 25)->shiftRight(26);\n        $h1 = $h1->addInt64($carry0);\n        $h0 = $h0->subInt64($carry0->shiftLeft(26));\n\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n            array(\n                $h0->toInt32(),\n                $h1->toInt32(),\n                $h2->toInt32(),\n                $h3->toInt32(),\n                $h4->toInt32(),\n                $h5->toInt32(),\n                $h6->toInt32(),\n                $h7->toInt32(),\n                $h8->toInt32(),\n                $h9->toInt32()\n            )\n        );\n    }\n\n    \/**\n     * Get the negative values for each piece of the field element.\n     *\n     * h = -f\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_neg(ParagonIE_Sodium_Core32_Curve25519_Fe $f)\n    {\n        $h = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        for ($i = 0; $i < 10; ++$i) {\n            $h[$i] = $h[$i]->subInt32($f[$i]);\n        }\n        return $h;\n    }\n\n    \/**\n     * Square a field element\n     *\n     * h = f * f\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_sq(ParagonIE_Sodium_Core32_Curve25519_Fe $f)\n    {\n        $f0 = $f[0]->toInt64();\n        $f1 = $f[1]->toInt64();\n        $f2 = $f[2]->toInt64();\n        $f3 = $f[3]->toInt64();\n        $f4 = $f[4]->toInt64();\n        $f5 = $f[5]->toInt64();\n        $f6 = $f[6]->toInt64();\n        $f7 = $f[7]->toInt64();\n        $f8 = $f[8]->toInt64();\n        $f9 = $f[9]->toInt64();\n\n        $f0_2 = $f0->shiftLeft(1);\n        $f1_2 = $f1->shiftLeft(1);\n        $f2_2 = $f2->shiftLeft(1);\n        $f3_2 = $f3->shiftLeft(1);\n        $f4_2 = $f4->shiftLeft(1);\n        $f5_2 = $f5->shiftLeft(1);\n        $f6_2 = $f6->shiftLeft(1);\n        $f7_2 = $f7->shiftLeft(1);\n        $f5_38 = $f5->mulInt(38, 6);\n        $f6_19 = $f6->mulInt(19, 5);\n        $f7_38 = $f7->mulInt(38, 6);\n        $f8_19 = $f8->mulInt(19, 5);\n        $f9_38 = $f9->mulInt(38, 6);\n\n        $f0f0    = $f0->mulInt64($f0, 28);\n        $f0f1_2  = $f0_2->mulInt64($f1, 28);\n        $f0f2_2 =  $f0_2->mulInt64($f2, 28);\n        $f0f3_2 =  $f0_2->mulInt64($f3, 28);\n        $f0f4_2 =  $f0_2->mulInt64($f4, 28);\n        $f0f5_2 =  $f0_2->mulInt64($f5, 28);\n        $f0f6_2 =  $f0_2->mulInt64($f6, 28);\n        $f0f7_2 =  $f0_2->mulInt64($f7, 28);\n        $f0f8_2 =  $f0_2->mulInt64($f8, 28);\n        $f0f9_2 =  $f0_2->mulInt64($f9, 28);\n\n        $f1f1_2 = $f1_2->mulInt64($f1, 28);\n        $f1f2_2 = $f1_2->mulInt64($f2, 28);\n        $f1f3_4 = $f1_2->mulInt64($f3_2, 28);\n        $f1f4_2 = $f1_2->mulInt64($f4, 28);\n        $f1f5_4 = $f1_2->mulInt64($f5_2, 30);\n        $f1f6_2 = $f1_2->mulInt64($f6, 28);\n        $f1f7_4 = $f1_2->mulInt64($f7_2, 28);\n        $f1f8_2 = $f1_2->mulInt64($f8, 28);\n        $f1f9_76 = $f9_38->mulInt64($f1_2, 30);\n\n        $f2f2 = $f2->mulInt64($f2, 28);\n        $f2f3_2 = $f2_2->mulInt64($f3, 28);\n        $f2f4_2 = $f2_2->mulInt64($f4, 28);\n        $f2f5_2 = $f2_2->mulInt64($f5, 28);\n        $f2f6_2 = $f2_2->mulInt64($f6, 28);\n        $f2f7_2 = $f2_2->mulInt64($f7, 28);\n        $f2f8_38 = $f8_19->mulInt64($f2_2, 30);\n        $f2f9_38 = $f9_38->mulInt64($f2, 30);\n\n        $f3f3_2 = $f3_2->mulInt64($f3, 28);\n        $f3f4_2 = $f3_2->mulInt64($f4, 28);\n        $f3f5_4 = $f3_2->mulInt64($f5_2, 30);\n        $f3f6_2 = $f3_2->mulInt64($f6, 28);\n        $f3f7_76 = $f7_38->mulInt64($f3_2, 30);\n        $f3f8_38 = $f8_19->mulInt64($f3_2, 30);\n        $f3f9_76 = $f9_38->mulInt64($f3_2, 30);\n\n        $f4f4 = $f4->mulInt64($f4, 28);\n        $f4f5_2 = $f4_2->mulInt64($f5, 28);\n        $f4f6_38 = $f6_19->mulInt64($f4_2, 30);\n        $f4f7_38 = $f7_38->mulInt64($f4, 30);\n        $f4f8_38 = $f8_19->mulInt64($f4_2, 30);\n        $f4f9_38 = $f9_38->mulInt64($f4, 30);\n\n        $f5f5_38 = $f5_38->mulInt64($f5, 30);\n        $f5f6_38 = $f6_19->mulInt64($f5_2, 30);\n        $f5f7_76 = $f7_38->mulInt64($f5_2, 30);\n        $f5f8_38 = $f8_19->mulInt64($f5_2, 30);\n        $f5f9_76 = $f9_38->mulInt64($f5_2, 30);\n\n        $f6f6_19 = $f6_19->mulInt64($f6, 30);\n        $f6f7_38 = $f7_38->mulInt64($f6, 30);\n        $f6f8_38 = $f8_19->mulInt64($f6_2, 30);\n        $f6f9_38 = $f9_38->mulInt64($f6, 30);\n\n        $f7f7_38 = $f7_38->mulInt64($f7, 28);\n        $f7f8_38 = $f8_19->mulInt64($f7_2, 30);\n        $f7f9_76 = $f9_38->mulInt64($f7_2, 30);\n\n        $f8f8_19 = $f8_19->mulInt64($f8, 30);\n        $f8f9_38 = $f9_38->mulInt64($f8, 30);\n\n        $f9f9_38 = $f9_38->mulInt64($f9, 28);\n\n        $h0 = $f0f0->addInt64($f1f9_76)->addInt64($f2f8_38)->addInt64($f3f7_76)->addInt64($f4f6_38)->addInt64($f5f5_38);\n        $h1 = $f0f1_2->addInt64($f2f9_38)->addInt64($f3f8_38)->addInt64($f4f7_38)->addInt64($f5f6_38);\n        $h2 = $f0f2_2->addInt64($f1f1_2)->addInt64($f3f9_76)->addInt64($f4f8_38)->addInt64($f5f7_76)->addInt64($f6f6_19);\n        $h3 = $f0f3_2->addInt64($f1f2_2)->addInt64($f4f9_38)->addInt64($f5f8_38)->addInt64($f6f7_38);\n        $h4 = $f0f4_2->addInt64($f1f3_4)->addInt64($f2f2)->addInt64($f5f9_76)->addInt64($f6f8_38)->addInt64($f7f7_38);\n        $h5 = $f0f5_2->addInt64($f1f4_2)->addInt64($f2f3_2)->addInt64($f6f9_38)->addInt64($f7f8_38);\n        $h6 = $f0f6_2->addInt64($f1f5_4)->addInt64($f2f4_2)->addInt64($f3f3_2)->addInt64($f7f9_76)->addInt64($f8f8_19);\n        $h7 = $f0f7_2->addInt64($f1f6_2)->addInt64($f2f5_2)->addInt64($f3f4_2)->addInt64($f8f9_38);\n        $h8 = $f0f8_2->addInt64($f1f7_4)->addInt64($f2f6_2)->addInt64($f3f5_4)->addInt64($f4f4)->addInt64($f9f9_38);\n        $h9 = $f0f9_2->addInt64($f1f8_2)->addInt64($f2f7_2)->addInt64($f3f6_2)->addInt64($f4f5_2);\n\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int64 $h0\n         * @var ParagonIE_Sodium_Core32_Int64 $h1\n         * @var ParagonIE_Sodium_Core32_Int64 $h2\n         * @var ParagonIE_Sodium_Core32_Int64 $h3\n         * @var ParagonIE_Sodium_Core32_Int64 $h4\n         * @var ParagonIE_Sodium_Core32_Int64 $h5\n         * @var ParagonIE_Sodium_Core32_Int64 $h6\n         * @var ParagonIE_Sodium_Core32_Int64 $h7\n         * @var ParagonIE_Sodium_Core32_Int64 $h8\n         * @var ParagonIE_Sodium_Core32_Int64 $h9\n         *\/\n\n        $carry0 = $h0->addInt(1 << 25)->shiftRight(26);\n        $h1 = $h1->addInt64($carry0);\n        $h0 = $h0->subInt64($carry0->shiftLeft(26));\n\n        $carry4 = $h4->addInt(1 << 25)->shiftRight(26);\n        $h5 = $h5->addInt64($carry4);\n        $h4 = $h4->subInt64($carry4->shiftLeft(26));\n\n        $carry1 = $h1->addInt(1 << 24)->shiftRight(25);\n        $h2 = $h2->addInt64($carry1);\n        $h1 = $h1->subInt64($carry1->shiftLeft(25));\n\n        $carry5 = $h5->addInt(1 << 24)->shiftRight(25);\n        $h6 = $h6->addInt64($carry5);\n        $h5 = $h5->subInt64($carry5->shiftLeft(25));\n\n        $carry2 = $h2->addInt(1 << 25)->shiftRight(26);\n        $h3 = $h3->addInt64($carry2);\n        $h2 = $h2->subInt64($carry2->shiftLeft(26));\n\n        $carry6 = $h6->addInt(1 << 25)->shiftRight(26);\n        $h7 = $h7->addInt64($carry6);\n        $h6 = $h6->subInt64($carry6->shiftLeft(26));\n\n        $carry3 = $h3->addInt(1 << 24)->shiftRight(25);\n        $h4 = $h4->addInt64($carry3);\n        $h3 = $h3->subInt64($carry3->shiftLeft(25));\n\n        $carry7 = $h7->addInt(1 << 24)->shiftRight(25);\n        $h8 = $h8->addInt64($carry7);\n        $h7 = $h7->subInt64($carry7->shiftLeft(25));\n\n        $carry4 = $h4->addInt(1 << 25)->shiftRight(26);\n        $h5 = $h5->addInt64($carry4);\n        $h4 = $h4->subInt64($carry4->shiftLeft(26));\n\n        $carry8 = $h8->addInt(1 << 25)->shiftRight(26);\n        $h9 = $h9->addInt64($carry8);\n        $h8 = $h8->subInt64($carry8->shiftLeft(26));\n\n        $carry9 = $h9->addInt(1 << 24)->shiftRight(25);\n        $h0 = $h0->addInt64($carry9->mulInt(19, 5));\n        $h9 = $h9->subInt64($carry9->shiftLeft(25));\n\n        $carry0 = $h0->addInt(1 << 25)->shiftRight(26);\n        $h1 = $h1->addInt64($carry0);\n        $h0 = $h0->subInt64($carry0->shiftLeft(26));\n\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n            array(\n                $h0->toInt32(),\n                $h1->toInt32(),\n                $h2->toInt32(),\n                $h3->toInt32(),\n                $h4->toInt32(),\n                $h5->toInt32(),\n                $h6->toInt32(),\n                $h7->toInt32(),\n                $h8->toInt32(),\n                $h9->toInt32()\n            )\n        );\n    }\n\n    \/**\n     * Square and double a field element\n     *\n     * h = 2 * f * f\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function fe_sq2(ParagonIE_Sodium_Core32_Curve25519_Fe $f)\n    {\n        $f0 = $f[0]->toInt64();\n        $f1 = $f[1]->toInt64();\n        $f2 = $f[2]->toInt64();\n        $f3 = $f[3]->toInt64();\n        $f4 = $f[4]->toInt64();\n        $f5 = $f[5]->toInt64();\n        $f6 = $f[6]->toInt64();\n        $f7 = $f[7]->toInt64();\n        $f8 = $f[8]->toInt64();\n        $f9 = $f[9]->toInt64();\n\n        $f0_2 = $f0->shiftLeft(1);\n        $f1_2 = $f1->shiftLeft(1);\n        $f2_2 = $f2->shiftLeft(1);\n        $f3_2 = $f3->shiftLeft(1);\n        $f4_2 = $f4->shiftLeft(1);\n        $f5_2 = $f5->shiftLeft(1);\n        $f6_2 = $f6->shiftLeft(1);\n        $f7_2 = $f7->shiftLeft(1);\n        $f5_38 = $f5->mulInt(38, 6); \/* 1.959375*2^30 *\/\n        $f6_19 = $f6->mulInt(19, 5); \/* 1.959375*2^30 *\/\n        $f7_38 = $f7->mulInt(38, 6); \/* 1.959375*2^30 *\/\n        $f8_19 = $f8->mulInt(19, 5); \/* 1.959375*2^30 *\/\n        $f9_38 = $f9->mulInt(38, 6); \/* 1.959375*2^30 *\/\n        $f0f0 = $f0->mulInt64($f0, 28);\n        $f0f1_2 = $f0_2->mulInt64($f1, 28);\n        $f0f2_2 = $f0_2->mulInt64($f2, 28);\n        $f0f3_2 = $f0_2->mulInt64($f3, 28);\n        $f0f4_2 = $f0_2->mulInt64($f4, 28);\n        $f0f5_2 = $f0_2->mulInt64($f5, 28);\n        $f0f6_2 = $f0_2->mulInt64($f6, 28);\n        $f0f7_2 = $f0_2->mulInt64($f7, 28);\n        $f0f8_2 = $f0_2->mulInt64($f8, 28);\n        $f0f9_2 = $f0_2->mulInt64($f9, 28);\n        $f1f1_2 = $f1_2->mulInt64($f1, 28);\n        $f1f2_2 = $f1_2->mulInt64($f2, 28);\n        $f1f3_4 = $f1_2->mulInt64($f3_2, 29);\n        $f1f4_2 = $f1_2->mulInt64($f4, 28);\n        $f1f5_4 = $f1_2->mulInt64($f5_2, 29);\n        $f1f6_2 = $f1_2->mulInt64($f6, 28);\n        $f1f7_4 = $f1_2->mulInt64($f7_2, 29);\n        $f1f8_2 = $f1_2->mulInt64($f8, 28);\n        $f1f9_76 = $f9_38->mulInt64($f1_2, 29);\n        $f2f2 = $f2->mulInt64($f2, 28);\n        $f2f3_2 = $f2_2->mulInt64($f3, 28);\n        $f2f4_2 = $f2_2->mulInt64($f4, 28);\n        $f2f5_2 = $f2_2->mulInt64($f5, 28);\n        $f2f6_2 = $f2_2->mulInt64($f6, 28);\n        $f2f7_2 = $f2_2->mulInt64($f7, 28);\n        $f2f8_38 = $f8_19->mulInt64($f2_2, 29);\n        $f2f9_38 = $f9_38->mulInt64($f2, 29);\n        $f3f3_2 = $f3_2->mulInt64($f3, 28);\n        $f3f4_2 = $f3_2->mulInt64($f4, 28);\n        $f3f5_4 = $f3_2->mulInt64($f5_2, 28);\n        $f3f6_2 = $f3_2->mulInt64($f6, 28);\n        $f3f7_76 = $f7_38->mulInt64($f3_2, 29);\n        $f3f8_38 = $f8_19->mulInt64($f3_2, 29);\n        $f3f9_76 = $f9_38->mulInt64($f3_2, 29);\n        $f4f4 = $f4->mulInt64($f4, 28);\n        $f4f5_2 = $f4_2->mulInt64($f5, 28);\n        $f4f6_38 = $f6_19->mulInt64($f4_2, 29);\n        $f4f7_38 = $f7_38->mulInt64($f4, 29);\n        $f4f8_38 = $f8_19->mulInt64($f4_2, 29);\n        $f4f9_38 = $f9_38->mulInt64($f4, 29);\n        $f5f5_38 = $f5_38->mulInt64($f5, 29);\n        $f5f6_38 = $f6_19->mulInt64($f5_2, 29);\n        $f5f7_76 = $f7_38->mulInt64($f5_2, 29);\n        $f5f8_38 = $f8_19->mulInt64($f5_2, 29);\n        $f5f9_76 = $f9_38->mulInt64($f5_2, 29);\n        $f6f6_19 = $f6_19->mulInt64($f6, 29);\n        $f6f7_38 = $f7_38->mulInt64($f6, 29);\n        $f6f8_38 = $f8_19->mulInt64($f6_2, 29);\n        $f6f9_38 = $f9_38->mulInt64($f6, 29);\n        $f7f7_38 = $f7_38->mulInt64($f7, 29);\n        $f7f8_38 = $f8_19->mulInt64($f7_2, 29);\n        $f7f9_76 = $f9_38->mulInt64($f7_2, 29);\n        $f8f8_19 = $f8_19->mulInt64($f8, 29);\n        $f8f9_38 = $f9_38->mulInt64($f8, 29);\n        $f9f9_38 = $f9_38->mulInt64($f9, 29);\n\n        $h0 = $f0f0->addInt64($f1f9_76)->addInt64($f2f8_38)->addInt64($f3f7_76)->addInt64($f4f6_38)->addInt64($f5f5_38);\n        $h1 = $f0f1_2->addInt64($f2f9_38)->addInt64($f3f8_38)->addInt64($f4f7_38)->addInt64($f5f6_38);\n        $h2 = $f0f2_2->addInt64($f1f1_2)->addInt64($f3f9_76)->addInt64($f4f8_38)->addInt64($f5f7_76)->addInt64($f6f6_19);\n        $h3 = $f0f3_2->addInt64($f1f2_2)->addInt64($f4f9_38)->addInt64($f5f8_38)->addInt64($f6f7_38);\n        $h4 = $f0f4_2->addInt64($f1f3_4)->addInt64($f2f2)->addInt64($f5f9_76)->addInt64($f6f8_38)->addInt64($f7f7_38);\n        $h5 = $f0f5_2->addInt64($f1f4_2)->addInt64($f2f3_2)->addInt64($f6f9_38)->addInt64($f7f8_38);\n        $h6 = $f0f6_2->addInt64($f1f5_4)->addInt64($f2f4_2)->addInt64($f3f3_2)->addInt64($f7f9_76)->addInt64($f8f8_19);\n        $h7 = $f0f7_2->addInt64($f1f6_2)->addInt64($f2f5_2)->addInt64($f3f4_2)->addInt64($f8f9_38);\n        $h8 = $f0f8_2->addInt64($f1f7_4)->addInt64($f2f6_2)->addInt64($f3f5_4)->addInt64($f4f4)->addInt64($f9f9_38);\n        $h9 = $f0f9_2->addInt64($f1f8_2)->addInt64($f2f7_2)->addInt64($f3f6_2)->addInt64($f4f5_2);\n\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int64 $h0\n         * @var ParagonIE_Sodium_Core32_Int64 $h1\n         * @var ParagonIE_Sodium_Core32_Int64 $h2\n         * @var ParagonIE_Sodium_Core32_Int64 $h3\n         * @var ParagonIE_Sodium_Core32_Int64 $h4\n         * @var ParagonIE_Sodium_Core32_Int64 $h5\n         * @var ParagonIE_Sodium_Core32_Int64 $h6\n         * @var ParagonIE_Sodium_Core32_Int64 $h7\n         * @var ParagonIE_Sodium_Core32_Int64 $h8\n         * @var ParagonIE_Sodium_Core32_Int64 $h9\n         *\/\n        $h0 = $h0->shiftLeft(1);\n        $h1 = $h1->shiftLeft(1);\n        $h2 = $h2->shiftLeft(1);\n        $h3 = $h3->shiftLeft(1);\n        $h4 = $h4->shiftLeft(1);\n        $h5 = $h5->shiftLeft(1);\n        $h6 = $h6->shiftLeft(1);\n        $h7 = $h7->shiftLeft(1);\n        $h8 = $h8->shiftLeft(1);\n        $h9 = $h9->shiftLeft(1);\n\n        $carry0 = $h0->addInt(1 << 25)->shiftRight(26);\n        $h1 = $h1->addInt64($carry0);\n        $h0 = $h0->subInt64($carry0->shiftLeft(26));\n        $carry4 = $h4->addInt(1 << 25)->shiftRight(26);\n        $h5 = $h5->addInt64($carry4);\n        $h4 = $h4->subInt64($carry4->shiftLeft(26));\n\n        $carry1 = $h1->addInt(1 << 24)->shiftRight(25);\n        $h2 = $h2->addInt64($carry1);\n        $h1 = $h1->subInt64($carry1->shiftLeft(25));\n        $carry5 = $h5->addInt(1 << 24)->shiftRight(25);\n        $h6 = $h6->addInt64($carry5);\n        $h5 = $h5->subInt64($carry5->shiftLeft(25));\n\n        $carry2 = $h2->addInt(1 << 25)->shiftRight(26);\n        $h3 = $h3->addInt64($carry2);\n        $h2 = $h2->subInt64($carry2->shiftLeft(26));\n        $carry6 = $h6->addInt(1 << 25)->shiftRight(26);\n        $h7 = $h7->addInt64($carry6);\n        $h6 = $h6->subInt64($carry6->shiftLeft(26));\n\n        $carry3 = $h3->addInt(1 << 24)->shiftRight(25);\n        $h4 = $h4->addInt64($carry3);\n        $h3 = $h3->subInt64($carry3->shiftLeft(25));\n        $carry7 = $h7->addInt(1 << 24)->shiftRight(25);\n        $h8 = $h8->addInt64($carry7);\n        $h7 = $h7->subInt64($carry7->shiftLeft(25));\n\n        $carry4 = $h4->addInt(1 << 25)->shiftRight(26);\n        $h5 = $h5->addInt64($carry4);\n        $h4 = $h4->subInt64($carry4->shiftLeft(26));\n        $carry8 = $h8->addInt(1 << 25)->shiftRight(26);\n        $h9 = $h9->addInt64($carry8);\n        $h8 = $h8->subInt64($carry8->shiftLeft(26));\n\n        $carry9 = $h9->addInt(1 << 24)->shiftRight(25);\n        $h0 = $h0->addInt64($carry9->mulInt(19, 5));\n        $h9 = $h9->subInt64($carry9->shiftLeft(25));\n\n        $carry0 = $h0->addInt(1 << 25)->shiftRight(26);\n        $h1 = $h1->addInt64($carry0);\n        $h0 = $h0->subInt64($carry0->shiftLeft(26));\n\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n            array(\n                $h0->toInt32(),\n                $h1->toInt32(),\n                $h2->toInt32(),\n                $h3->toInt32(),\n                $h4->toInt32(),\n                $h5->toInt32(),\n                $h6->toInt32(),\n                $h7->toInt32(),\n                $h8->toInt32(),\n                $h9->toInt32()\n            )\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $Z\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fe_invert(ParagonIE_Sodium_Core32_Curve25519_Fe $Z)\n    {\n        $z = clone $Z;\n        $t0 = self::fe_sq($z);\n        $t1 = self::fe_sq($t0);\n        $t1 = self::fe_sq($t1);\n        $t1 = self::fe_mul($z, $t1);\n        $t0 = self::fe_mul($t0, $t1);\n        $t2 = self::fe_sq($t0);\n        $t1 = self::fe_mul($t1, $t2);\n        $t2 = self::fe_sq($t1);\n        for ($i = 1; $i < 5; ++$i) {\n            $t2 = self::fe_sq($t2);\n        }\n        $t1 = self::fe_mul($t2, $t1);\n        $t2 = self::fe_sq($t1);\n        for ($i = 1; $i < 10; ++$i) {\n            $t2 = self::fe_sq($t2);\n        }\n        $t2 = self::fe_mul($t2, $t1);\n        $t3 = self::fe_sq($t2);\n        for ($i = 1; $i < 20; ++$i) {\n            $t3 = self::fe_sq($t3);\n        }\n        $t2 = self::fe_mul($t3, $t2);\n        $t2 = self::fe_sq($t2);\n        for ($i = 1; $i < 10; ++$i) {\n            $t2 = self::fe_sq($t2);\n        }\n        $t1 = self::fe_mul($t2, $t1);\n        $t2 = self::fe_sq($t1);\n        for ($i = 1; $i < 50; ++$i) {\n            $t2 = self::fe_sq($t2);\n        }\n        $t2 = self::fe_mul($t2, $t1);\n        $t3 = self::fe_sq($t2);\n        for ($i = 1; $i < 100; ++$i) {\n            $t3 = self::fe_sq($t3);\n        }\n        $t2 = self::fe_mul($t3, $t2);\n        $t2 = self::fe_sq($t2);\n        for ($i = 1; $i < 50; ++$i) {\n            $t2 = self::fe_sq($t2);\n        }\n        $t1 = self::fe_mul($t2, $t1);\n        $t1 = self::fe_sq($t1);\n        for ($i = 1; $i < 5; ++$i) {\n            $t1 = self::fe_sq($t1);\n        }\n        return self::fe_mul($t1, $t0);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @ref https:\/\/github.com\/jedisct1\/libsodium\/blob\/68564326e1e9dc57ef03746f85734232d20ca6fb\/src\/libsodium\/crypto_core\/curve25519\/ref10\/curve25519_ref10.c#L1054-L1106\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $z\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fe_pow22523(ParagonIE_Sodium_Core32_Curve25519_Fe $z)\n    {\n        # fe_sq(t0, z);\n        # fe_sq(t1, t0);\n        # fe_sq(t1, t1);\n        # fe_mul(t1, z, t1);\n        # fe_mul(t0, t0, t1);\n        # fe_sq(t0, t0);\n        # fe_mul(t0, t1, t0);\n        # fe_sq(t1, t0);\n        $t0 = self::fe_sq($z);\n        $t1 = self::fe_sq($t0);\n        $t1 = self::fe_sq($t1);\n        $t1 = self::fe_mul($z, $t1);\n        $t0 = self::fe_mul($t0, $t1);\n        $t0 = self::fe_sq($t0);\n        $t0 = self::fe_mul($t1, $t0);\n        $t1 = self::fe_sq($t0);\n\n        # for (i = 1; i < 5; ++i) {\n        #     fe_sq(t1, t1);\n        # }\n        for ($i = 1; $i < 5; ++$i) {\n            $t1 = self::fe_sq($t1);\n        }\n\n        # fe_mul(t0, t1, t0);\n        # fe_sq(t1, t0);\n        $t0 = self::fe_mul($t1, $t0);\n        $t1 = self::fe_sq($t0);\n\n        # for (i = 1; i < 10; ++i) {\n        #     fe_sq(t1, t1);\n        # }\n        for ($i = 1; $i < 10; ++$i) {\n            $t1 = self::fe_sq($t1);\n        }\n\n        # fe_mul(t1, t1, t0);\n        # fe_sq(t2, t1);\n        $t1 = self::fe_mul($t1, $t0);\n        $t2 = self::fe_sq($t1);\n\n        # for (i = 1; i < 20; ++i) {\n        #     fe_sq(t2, t2);\n        # }\n        for ($i = 1; $i < 20; ++$i) {\n            $t2 = self::fe_sq($t2);\n        }\n\n        # fe_mul(t1, t2, t1);\n        # fe_sq(t1, t1);\n        $t1 = self::fe_mul($t2, $t1);\n        $t1 = self::fe_sq($t1);\n\n        # for (i = 1; i < 10; ++i) {\n        #     fe_sq(t1, t1);\n        # }\n        for ($i = 1; $i < 10; ++$i) {\n            $t1 = self::fe_sq($t1);\n        }\n\n        # fe_mul(t0, t1, t0);\n        # fe_sq(t1, t0);\n        $t0 = self::fe_mul($t1, $t0);\n        $t1 = self::fe_sq($t0);\n\n        # for (i = 1; i < 50; ++i) {\n        #     fe_sq(t1, t1);\n        # }\n        for ($i = 1; $i < 50; ++$i) {\n            $t1 = self::fe_sq($t1);\n        }\n\n        # fe_mul(t1, t1, t0);\n        # fe_sq(t2, t1);\n        $t1 = self::fe_mul($t1, $t0);\n        $t2 = self::fe_sq($t1);\n\n        # for (i = 1; i < 100; ++i) {\n        #     fe_sq(t2, t2);\n        # }\n        for ($i = 1; $i < 100; ++$i) {\n            $t2 = self::fe_sq($t2);\n        }\n\n        # fe_mul(t1, t2, t1);\n        # fe_sq(t1, t1);\n        $t1 = self::fe_mul($t2, $t1);\n        $t1 = self::fe_sq($t1);\n\n        # for (i = 1; i < 50; ++i) {\n        #     fe_sq(t1, t1);\n        # }\n        for ($i = 1; $i < 50; ++$i) {\n            $t1 = self::fe_sq($t1);\n        }\n\n        # fe_mul(t0, t1, t0);\n        # fe_sq(t0, t0);\n        # fe_sq(t0, t0);\n        # fe_mul(out, t0, z);\n        $t0 = self::fe_mul($t1, $t0);\n        $t0 = self::fe_sq($t0);\n        $t0 = self::fe_sq($t0);\n        return self::fe_mul($t0, $z);\n    }\n\n    \/**\n     * Subtract two field elements.\n     *\n     * h = f - g\n     *\n     * Preconditions:\n     * |f| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.\n     * |g| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.\n     *\n     * Postconditions:\n     * |h| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $f\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $g\n     * @return ParagonIE_Sodium_Core32_Curve25519_Fe\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedMethodCall\n     * @psalm-suppress MixedTypeCoercion\n     *\/\n    public static function fe_sub(ParagonIE_Sodium_Core32_Curve25519_Fe $f, ParagonIE_Sodium_Core32_Curve25519_Fe $g)\n    {\n        return ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n            array(\n                $f[0]->subInt32($g[0]),\n                $f[1]->subInt32($g[1]),\n                $f[2]->subInt32($g[2]),\n                $f[3]->subInt32($g[3]),\n                $f[4]->subInt32($g[4]),\n                $f[5]->subInt32($g[5]),\n                $f[6]->subInt32($g[6]),\n                $f[7]->subInt32($g[7]),\n                $f[8]->subInt32($g[8]),\n                $f[9]->subInt32($g[9])\n            )\n        );\n    }\n\n    \/**\n     * Add two group elements.\n     *\n     * r = p + q\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_Cached $q\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_add(\n        ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_Cached $q\n    ) {\n        $r = new ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1();\n        $r->X = self::fe_add($p->Y, $p->X);\n        $r->Y = self::fe_sub($p->Y, $p->X);\n        $r->Z = self::fe_mul($r->X, $q->YplusX);\n        $r->Y = self::fe_mul($r->Y, $q->YminusX);\n        $r->T = self::fe_mul($q->T2d, $p->T);\n        $r->X = self::fe_mul($p->Z, $q->Z);\n        $t0   = self::fe_add($r->X, $r->X);\n        $r->X = self::fe_sub($r->Z, $r->Y);\n        $r->Y = self::fe_add($r->Z, $r->Y);\n        $r->Z = self::fe_add($t0, $r->T);\n        $r->T = self::fe_sub($t0, $r->T);\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @ref https:\/\/github.com\/jedisct1\/libsodium\/blob\/157c4a80c13b117608aeae12178b2d38825f9f8f\/src\/libsodium\/crypto_core\/curve25519\/ref10\/curve25519_ref10.c#L1185-L1215\n     * @param string $a\n     * @return array<int, mixed>\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    public static function slide($a)\n    {\n        if (self::strlen($a) < 256) {\n            if (self::strlen($a) < 16) {\n                $a = str_pad($a, 256, '0', STR_PAD_RIGHT);\n            }\n        }\n        \/** @var array<int, int> $r *\/\n        $r = array();\n        for ($i = 0; $i < 256; ++$i) {\n            $r[$i] = (int) (1 &\n                (\n                    self::chrToInt($a[$i >> 3])\n                        >>\n                    ($i & 7)\n                )\n            );\n        }\n\n        for ($i = 0;$i < 256;++$i) {\n            if ($r[$i]) {\n                for ($b = 1;$b <= 6 && $i + $b < 256;++$b) {\n                    if ($r[$i + $b]) {\n                        if ($r[$i] + ($r[$i + $b] << $b) <= 15) {\n                            $r[$i] += $r[$i + $b] << $b;\n                            $r[$i + $b] = 0;\n                        } elseif ($r[$i] - ($r[$i + $b] << $b) >= -15) {\n                            $r[$i] -= $r[$i + $b] << $b;\n                            for ($k = $i + $b; $k < 256; ++$k) {\n                                if (!$r[$k]) {\n                                    $r[$k] = 1;\n                                    break;\n                                }\n                                $r[$k] = 0;\n                            }\n                        } else {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $s\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P3\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_frombytes_negate_vartime($s)\n    {\n        static $d = null;\n        if (!$d) {\n            $d = ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                array(\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[0]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[1]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[2]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[3]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[4]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[5]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[6]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[7]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[8]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d[9])\n                )\n            );\n        }\n        \/** @var ParagonIE_Sodium_Core32_Curve25519_Fe $d *\/\n\n        # fe_frombytes(h->Y,s);\n        # fe_1(h->Z);\n        $h = new ParagonIE_Sodium_Core32_Curve25519_Ge_P3(\n            self::fe_0(),\n            self::fe_frombytes($s),\n            self::fe_1()\n        );\n\n        # fe_sq(u,h->Y);\n        # fe_mul(v,u,d);\n        # fe_sub(u,u,h->Z);       \/* u = y^2-1 *\/\n        # fe_add(v,v,h->Z);       \/* v = dy^2+1 *\/\n        $u = self::fe_sq($h->Y);\n        \/** @var ParagonIE_Sodium_Core32_Curve25519_Fe $d *\/\n        $v = self::fe_mul($u, $d);\n        $u = self::fe_sub($u, $h->Z); \/* u =  y^2 - 1 *\/\n        $v = self::fe_add($v, $h->Z); \/* v = dy^2 + 1 *\/\n\n        # fe_sq(v3,v);\n        # fe_mul(v3,v3,v);        \/* v3 = v^3 *\/\n        # fe_sq(h->X,v3);\n        # fe_mul(h->X,h->X,v);\n        # fe_mul(h->X,h->X,u);    \/* x = uv^7 *\/\n        $v3 = self::fe_sq($v);\n        $v3 = self::fe_mul($v3, $v); \/* v3 = v^3 *\/\n        $h->X = self::fe_sq($v3);\n        $h->X = self::fe_mul($h->X, $v);\n        $h->X = self::fe_mul($h->X, $u); \/* x = uv^7 *\/\n\n        # fe_pow22523(h->X,h->X); \/* x = (uv^7)^((q-5)\/8) *\/\n        # fe_mul(h->X,h->X,v3);\n        # fe_mul(h->X,h->X,u);    \/* x = uv^3(uv^7)^((q-5)\/8) *\/\n        $h->X = self::fe_pow22523($h->X); \/* x = (uv^7)^((q-5)\/8) *\/\n        $h->X = self::fe_mul($h->X, $v3);\n        $h->X = self::fe_mul($h->X, $u); \/* x = uv^3(uv^7)^((q-5)\/8) *\/\n\n        # fe_sq(vxx,h->X);\n        # fe_mul(vxx,vxx,v);\n        # fe_sub(check,vxx,u);    \/* vx^2-u *\/\n        $vxx = self::fe_sq($h->X);\n        $vxx = self::fe_mul($vxx, $v);\n        $check = self::fe_sub($vxx, $u); \/* vx^2 - u *\/\n\n        # if (fe_isnonzero(check)) {\n        #     fe_add(check,vxx,u);  \/* vx^2+u *\/\n        #     if (fe_isnonzero(check)) {\n        #         return -1;\n        #     }\n        #     fe_mul(h->X,h->X,sqrtm1);\n        # }\n        if (self::fe_isnonzero($check)) {\n            $check = self::fe_add($vxx, $u); \/* vx^2 + u *\/\n            if (self::fe_isnonzero($check)) {\n                throw new RangeException('Internal check failed.');\n            }\n            $h->X = self::fe_mul(\n                $h->X,\n                ParagonIE_Sodium_Core32_Curve25519_Fe::fromIntArray(self::$sqrtm1)\n            );\n        }\n\n        # if (fe_isnegative(h->X) == (s[31] >> 7)) {\n        #     fe_neg(h->X,h->X);\n        # }\n        $i = self::chrToInt($s[31]);\n        if (self::fe_isnegative($h->X) === ($i >> 7)) {\n            $h->X = self::fe_neg($h->X);\n        }\n\n        # fe_mul(h->T,h->X,h->Y);\n        $h->T = self::fe_mul($h->X, $h->Y);\n        return $h;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $R\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $q\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_madd(\n        ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $R,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $q\n    ) {\n        $r = clone $R;\n        $r->X = self::fe_add($p->Y, $p->X);\n        $r->Y = self::fe_sub($p->Y, $p->X);\n        $r->Z = self::fe_mul($r->X, $q->yplusx);\n        $r->Y = self::fe_mul($r->Y, $q->yminusx);\n        $r->T = self::fe_mul($q->xy2d, $p->T);\n        $t0 = self::fe_add(clone $p->Z, clone $p->Z);\n        $r->X = self::fe_sub($r->Z, $r->Y);\n        $r->Y = self::fe_add($r->Z, $r->Y);\n        $r->Z = self::fe_add($t0, $r->T);\n        $r->T = self::fe_sub($t0, $r->T);\n\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $R\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $q\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_msub(\n        ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $R,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $q\n    ) {\n        $r = clone $R;\n\n        $r->X = self::fe_add($p->Y, $p->X);\n        $r->Y = self::fe_sub($p->Y, $p->X);\n        $r->Z = self::fe_mul($r->X, $q->yminusx);\n        $r->Y = self::fe_mul($r->Y, $q->yplusx);\n        $r->T = self::fe_mul($q->xy2d, $p->T);\n        $t0 = self::fe_add($p->Z, $p->Z);\n        $r->X = self::fe_sub($r->Z, $r->Y);\n        $r->Y = self::fe_add($r->Z, $r->Y);\n        $r->Z = self::fe_sub($t0, $r->T);\n        $r->T = self::fe_add($t0, $r->T);\n\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $p\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P2\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p1p1_to_p2(ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $p)\n    {\n        $r = new ParagonIE_Sodium_Core32_Curve25519_Ge_P2();\n        $r->X = self::fe_mul($p->X, $p->T);\n        $r->Y = self::fe_mul($p->Y, $p->Z);\n        $r->Z = self::fe_mul($p->Z, $p->T);\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $p\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P3\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p1p1_to_p3(ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 $p)\n    {\n        $r = new ParagonIE_Sodium_Core32_Curve25519_Ge_P3();\n        $r->X = self::fe_mul($p->X, $p->T);\n        $r->Y = self::fe_mul($p->Y, $p->Z);\n        $r->Z = self::fe_mul($p->Z, $p->T);\n        $r->T = self::fe_mul($p->X, $p->Y);\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P2\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p2_0()\n    {\n        return new ParagonIE_Sodium_Core32_Curve25519_Ge_P2(\n            self::fe_0(),\n            self::fe_1(),\n            self::fe_1()\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P2 $p\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p2_dbl(ParagonIE_Sodium_Core32_Curve25519_Ge_P2 $p)\n    {\n        $r = new ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1();\n\n        $r->X = self::fe_sq($p->X);\n        $r->Z = self::fe_sq($p->Y);\n        $r->T = self::fe_sq2($p->Z);\n        $r->Y = self::fe_add($p->X, $p->Y);\n        $t0   = self::fe_sq($r->Y);\n        $r->Y = self::fe_add($r->Z, $r->X);\n        $r->Z = self::fe_sub($r->Z, $r->X);\n        $r->X = self::fe_sub($t0, $r->Y);\n        $r->T = self::fe_sub($r->T, $r->Z);\n\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P3\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p3_0()\n    {\n        return new ParagonIE_Sodium_Core32_Curve25519_Ge_P3(\n            self::fe_0(),\n            self::fe_1(),\n            self::fe_1(),\n            self::fe_0()\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_Cached\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p3_to_cached(ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p)\n    {\n        static $d2 = null;\n        if ($d2 === null) {\n            $d2 = ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                array(\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[0]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[1]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[2]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[3]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[4]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[5]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[6]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[7]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[8]),\n                    ParagonIE_Sodium_Core32_Int32::fromInt(self::$d2[9])\n                )\n            );\n        }\n        \/** @var ParagonIE_Sodium_Core32_Curve25519_Fe $d2 *\/\n        $r = new ParagonIE_Sodium_Core32_Curve25519_Ge_Cached();\n        $r->YplusX = self::fe_add($p->Y, $p->X);\n        $r->YminusX = self::fe_sub($p->Y, $p->X);\n        $r->Z = self::fe_copy($p->Z);\n        $r->T2d = self::fe_mul($p->T, $d2);\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P2\n     *\/\n    public static function ge_p3_to_p2(ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p)\n    {\n        return new ParagonIE_Sodium_Core32_Curve25519_Ge_P2(\n            $p->X,\n            $p->Y,\n            $p->Z\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $h\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p3_tobytes(ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $h)\n    {\n        $recip = self::fe_invert($h->Z);\n        $x = self::fe_mul($h->X, $recip);\n        $y = self::fe_mul($h->Y, $recip);\n        $s = self::fe_tobytes($y);\n        $s[31] = self::intToChr(\n            self::chrToInt($s[31]) ^ (self::fe_isnegative($x) << 7)\n        );\n        return $s;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_p3_dbl(ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p)\n    {\n        $q = self::ge_p3_to_p2($p);\n        return self::ge_p2_dbl($q);\n    }\n\n    \/**\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_precomp_0()\n    {\n        return new ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp(\n            self::fe_1(),\n            self::fe_1(),\n            self::fe_0()\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $b\n     * @param int $c\n     * @return int\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function equal($b, $c)\n    {\n        $b0 = $b & 0xffff;\n        $b1 = ($b >> 16) & 0xffff;\n        $c0 = $c & 0xffff;\n        $c1 = ($c >> 16) & 0xffff;\n\n        $d0 = (($b0 ^ $c0) - 1) >> 31;\n        $d1 = (($b1 ^ $c1) - 1) >> 31;\n        return ($d0 & $d1) & 1;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string|int $char\n     * @return int (1 = yes, 0 = no)\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function negative($char)\n    {\n        if (is_int($char)) {\n            return $char < 0 ? 1 : 0;\n        }\n        \/** @var string $char *\/\n        $x = self::chrToInt(self::substr($char, 0, 1));\n        return (int) ($x >> 31);\n    }\n\n    \/**\n     * Conditional move\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $t\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $u\n     * @param int $b\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function cmov(\n        ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $t,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $u,\n        $b\n    ) {\n        if (!is_int($b)) {\n            throw new InvalidArgumentException('Expected an integer.');\n        }\n        return new ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp(\n            self::fe_cmov($t->yplusx, $u->yplusx, $b),\n            self::fe_cmov($t->yminusx, $u->yminusx, $b),\n            self::fe_cmov($t->xy2d, $u->xy2d, $b)\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $pos\n     * @param int $b\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayOffset\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function ge_select($pos = 0, $b = 0)\n    {\n        static $base = null;\n        if ($base === null) {\n            $base = array();\n            foreach (self::$base as $i => $bas) {\n                for ($j = 0; $j < 8; ++$j) {\n                    $base[$i][$j] = new ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp(\n                        ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                            array(\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][0]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][1]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][2]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][3]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][4]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][5]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][6]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][7]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][8]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][0][9])\n                            )\n                        ),\n                        ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                            array(\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][0]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][1]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][2]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][3]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][4]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][5]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][6]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][7]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][8]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][1][9])\n                            )\n                        ),\n                        ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                            array(\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][0]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][1]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][2]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][3]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][4]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][5]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][6]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][7]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][8]),\n                                ParagonIE_Sodium_Core32_Int32::fromInt($bas[$j][2][9])\n                            )\n                        )\n                    );\n                }\n            }\n        }\n        if (!is_int($pos)) {\n            throw new InvalidArgumentException('Position must be an integer');\n        }\n        if ($pos < 0 || $pos > 31) {\n            throw new RangeException('Position is out of range [0, 31]');\n        }\n\n        $bnegative = self::negative($b);\n        $babs = $b - (((-$bnegative) & $b) << 1);\n\n        $t = self::ge_precomp_0();\n        for ($i = 0; $i < 8; ++$i) {\n            $t = self::cmov(\n                $t,\n                $base[$pos][$i],\n                -self::equal($babs, $i + 1)\n            );\n        }\n        $minusT = new ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp(\n            self::fe_copy($t->yminusx),\n            self::fe_copy($t->yplusx),\n            self::fe_neg($t->xy2d)\n        );\n        return self::cmov($t, $minusT, -$bnegative);\n    }\n\n    \/**\n     * Subtract two group elements.\n     *\n     * r = p - q\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_Cached $q\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_sub(\n        ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $p,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_Cached $q\n    ) {\n        $r = new ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1();\n\n        $r->X = self::fe_add($p->Y, $p->X);\n        $r->Y = self::fe_sub($p->Y, $p->X);\n        $r->Z = self::fe_mul($r->X, $q->YminusX);\n        $r->Y = self::fe_mul($r->Y, $q->YplusX);\n        $r->T = self::fe_mul($q->T2d, $p->T);\n        $r->X = self::fe_mul($p->Z, $q->Z);\n        $t0 = self::fe_add($r->X, $r->X);\n        $r->X = self::fe_sub($r->Z, $r->Y);\n        $r->Y = self::fe_add($r->Z, $r->Y);\n        $r->Z = self::fe_sub($t0, $r->T);\n        $r->T = self::fe_add($t0, $r->T);\n\n        return $r;\n    }\n\n    \/**\n     * Convert a group element to a byte string.\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P2 $h\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_tobytes(ParagonIE_Sodium_Core32_Curve25519_Ge_P2 $h)\n    {\n        $recip = self::fe_invert($h->Z);\n        $x = self::fe_mul($h->X, $recip);\n        $y = self::fe_mul($h->Y, $recip);\n        $s = self::fe_tobytes($y);\n        $s[31] = self::intToChr(\n            self::chrToInt($s[31]) ^ (self::fe_isnegative($x) << 7)\n        );\n        return $s;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $a\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $A\n     * @param string $b\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P2\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayAccess\n     *\/\n    public static function ge_double_scalarmult_vartime(\n        $a,\n        ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $A,\n        $b\n    ) {\n        \/** @var array<int, ParagonIE_Sodium_Core32_Curve25519_Ge_Cached> $Ai *\/\n        $Ai = array();\n\n        static $Bi = array();\n        \/** @var array<int, ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp> $Bi *\/\n        if (!$Bi) {\n            for ($i = 0; $i < 8; ++$i) {\n                $Bi[$i] = new ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp(\n                    ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                        array(\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][0]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][1]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][2]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][3]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][4]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][5]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][6]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][7]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][8]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][0][9])\n                        )\n                    ),\n                    ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                        array(\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][0]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][1]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][2]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][3]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][4]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][5]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][6]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][7]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][8]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][1][9])\n                        )\n                    ),\n                    ParagonIE_Sodium_Core32_Curve25519_Fe::fromArray(\n                        array(\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][0]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][1]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][2]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][3]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][4]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][5]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][6]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][7]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][8]),\n                            ParagonIE_Sodium_Core32_Int32::fromInt(self::$base2[$i][2][9])\n                        )\n                    )\n                );\n            }\n        }\n\n        for ($i = 0; $i < 8; ++$i) {\n            $Ai[$i] = new ParagonIE_Sodium_Core32_Curve25519_Ge_Cached(\n                self::fe_0(),\n                self::fe_0(),\n                self::fe_0(),\n                self::fe_0()\n            );\n        }\n        \/** @var array<int, ParagonIE_Sodium_Core32_Curve25519_Ge_Cached> $Ai *\/\n\n        # slide(aslide,a);\n        # slide(bslide,b);\n        \/** @var array<int, int> $aslide *\/\n        $aslide = self::slide($a);\n        \/** @var array<int, int> $bslide *\/\n        $bslide = self::slide($b);\n\n        # ge_p3_to_cached(&Ai[0],A);\n        # ge_p3_dbl(&t,A); ge_p1p1_to_p3(&A2,&t);\n        $Ai[0] = self::ge_p3_to_cached($A);\n        $t = self::ge_p3_dbl($A);\n        $A2 = self::ge_p1p1_to_p3($t);\n\n        # ge_add(&t,&A2,&Ai[0]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[1],&u);\n        # ge_add(&t,&A2,&Ai[1]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[2],&u);\n        # ge_add(&t,&A2,&Ai[2]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[3],&u);\n        # ge_add(&t,&A2,&Ai[3]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[4],&u);\n        # ge_add(&t,&A2,&Ai[4]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[5],&u);\n        # ge_add(&t,&A2,&Ai[5]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[6],&u);\n        # ge_add(&t,&A2,&Ai[6]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[7],&u);\n        for ($i = 0; $i < 7; ++$i) {\n            $t = self::ge_add($A2, $Ai[$i]);\n            $u = self::ge_p1p1_to_p3($t);\n            $Ai[$i + 1] = self::ge_p3_to_cached($u);\n        }\n\n        # ge_p2_0(r);\n        $r = self::ge_p2_0();\n\n        # for (i = 255;i >= 0;--i) {\n        #     if (aslide[i] || bslide[i]) break;\n        # }\n        $i = 255;\n        for (; $i >= 0; --$i) {\n            if ($aslide[$i] || $bslide[$i]) {\n                break;\n            }\n        }\n\n        # for (;i >= 0;--i) {\n        for (; $i >= 0; --$i) {\n            # ge_p2_dbl(&t,r);\n            $t = self::ge_p2_dbl($r);\n\n            # if (aslide[i] > 0) {\n            if ($aslide[$i] > 0) {\n                # ge_p1p1_to_p3(&u,&t);\n                # ge_add(&t,&u,&Ai[aslide[i]\/2]);\n                $u = self::ge_p1p1_to_p3($t);\n                $t = self::ge_add(\n                    $u,\n                    $Ai[(int) floor($aslide[$i] \/ 2)]\n                );\n                # } else if (aslide[i] < 0) {\n            } elseif ($aslide[$i] < 0) {\n                # ge_p1p1_to_p3(&u,&t);\n                # ge_sub(&t,&u,&Ai[(-aslide[i])\/2]);\n                $u = self::ge_p1p1_to_p3($t);\n                $t = self::ge_sub(\n                    $u,\n                    $Ai[(int) floor(-$aslide[$i] \/ 2)]\n                );\n            }\n            \/** @var array<int, ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp> $Bi *\/\n\n            # if (bslide[i] > 0) {\n            if ($bslide[$i] > 0) {\n                # ge_p1p1_to_p3(&u,&t);\n                # ge_madd(&t,&u,&Bi[bslide[i]\/2]);\n                $u = self::ge_p1p1_to_p3($t);\n                \/** @var int $index *\/\n                $index = (int) floor($bslide[$i] \/ 2);\n                \/** @var ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $thisB *\/\n                $thisB = $Bi[$index];\n                $t = self::ge_madd($t, $u, $thisB);\n                # } else if (bslide[i] < 0) {\n            } elseif ($bslide[$i] < 0) {\n                # ge_p1p1_to_p3(&u,&t);\n                # ge_msub(&t,&u,&Bi[(-bslide[i])\/2]);\n                $u = self::ge_p1p1_to_p3($t);\n\n                \/** @var int $index *\/\n                $index = (int) floor(-$bslide[$i] \/ 2);\n\n                \/** @var ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp $thisB *\/\n                $thisB = $Bi[$index];\n                $t = self::ge_msub($t, $u, $thisB);\n            }\n            # ge_p1p1_to_p2(r,&t);\n            $r = self::ge_p1p1_to_p2($t);\n        }\n        return $r;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $a\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P3\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedOperand\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_scalarmult_base($a)\n    {\n        \/** @var array<int, int> $e *\/\n        $e = array();\n        $r = new ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1();\n\n        for ($i = 0; $i < 32; ++$i) {\n            \/** @var int $dbl *\/\n            $dbl = (int) $i << 1;\n            $e[$dbl] = (int) self::chrToInt($a[$i]) & 15;\n            $e[$dbl + 1] = (int) (self::chrToInt($a[$i]) >> 4) & 15;\n        }\n\n        \/** @var int $carry *\/\n        $carry = 0;\n        for ($i = 0; $i < 63; ++$i) {\n            $e[$i] += $carry;\n            $carry = $e[$i] + 8;\n            $carry >>= 4;\n            $e[$i] -= $carry << 4;\n        }\n\n        \/** @var array<int, int> $e *\/\n        $e[63] += (int) $carry;\n\n        $h = self::ge_p3_0();\n\n        for ($i = 1; $i < 64; $i += 2) {\n            $t = self::ge_select((int) floor($i \/ 2), (int) $e[$i]);\n            $r = self::ge_madd($r, $h, $t);\n            $h = self::ge_p1p1_to_p3($r);\n        }\n\n        $r = self::ge_p3_dbl($h);\n\n        $s = self::ge_p1p1_to_p2($r);\n        $r = self::ge_p2_dbl($s);\n        $s = self::ge_p1p1_to_p2($r);\n        $r = self::ge_p2_dbl($s);\n        $s = self::ge_p1p1_to_p2($r);\n        $r = self::ge_p2_dbl($s);\n\n        $h = self::ge_p1p1_to_p3($r);\n\n        for ($i = 0; $i < 64; $i += 2) {\n            $t = self::ge_select($i >> 1, (int) $e[$i]);\n            $r = self::ge_madd($r, $h, $t);\n            $h = self::ge_p1p1_to_p3($r);\n        }\n        return $h;\n    }\n\n    \/**\n     * Calculates (ab + c) mod l\n     * where l = 2^252 + 27742317777372353535851937790883648493\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $a\n     * @param string $b\n     * @param string $c\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sc_muladd($a, $b, $c)\n    {\n        $a0 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($a, 0, 3)));\n        $a1 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($a, 2, 4)) >> 5));\n        $a2 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($a, 5, 3)) >> 2));\n        $a3 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($a, 7, 4)) >> 7));\n        $a4 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($a, 10, 4)) >> 4));\n        $a5 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($a, 13, 3)) >> 1));\n        $a6 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($a, 15, 4)) >> 6));\n        $a7 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($a, 18, 3)) >> 3));\n        $a8 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($a, 21, 3)));\n        $a9 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($a, 23, 4)) >> 5));\n        $a10 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($a, 26, 3)) >> 2));\n        $a11 = ParagonIE_Sodium_Core32_Int64::fromInt(0x1fffffff & (self::load_4(self::substr($a, 28, 4)) >> 7));\n        $b0 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($b, 0, 3)));\n        $b1 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($b, 2, 4)) >> 5));\n        $b2 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($b, 5, 3)) >> 2));\n        $b3 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($b, 7, 4)) >> 7));\n        $b4 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($b, 10, 4)) >> 4));\n        $b5 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($b, 13, 3)) >> 1));\n        $b6 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($b, 15, 4)) >> 6));\n        $b7 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($b, 18, 3)) >> 3));\n        $b8 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($b, 21, 3)));\n        $b9 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($b, 23, 4)) >> 5));\n        $b10 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($b, 26, 3)) >> 2));\n        $b11 = ParagonIE_Sodium_Core32_Int64::fromInt(0x1fffffff & (self::load_4(self::substr($b, 28, 4)) >> 7));\n        $c0 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($c, 0, 3)));\n        $c1 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($c, 2, 4)) >> 5));\n        $c2 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($c, 5, 3)) >> 2));\n        $c3 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($c, 7, 4)) >> 7));\n        $c4 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($c, 10, 4)) >> 4));\n        $c5 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($c, 13, 3)) >> 1));\n        $c6 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($c, 15, 4)) >> 6));\n        $c7 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($c, 18, 3)) >> 3));\n        $c8 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($c, 21, 3)));\n        $c9 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($c, 23, 4)) >> 5));\n        $c10 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($c, 26, 3)) >> 2));\n        $c11 = ParagonIE_Sodium_Core32_Int64::fromInt(0x1fffffff & (self::load_4(self::substr($c, 28, 4)) >> 7));\n\n        \/* Can't really avoid the pyramid here: *\/\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int64 $s0\n         * @var ParagonIE_Sodium_Core32_Int64 $s1\n         * @var ParagonIE_Sodium_Core32_Int64 $s2\n         * @var ParagonIE_Sodium_Core32_Int64 $s3\n         * @var ParagonIE_Sodium_Core32_Int64 $s4\n         * @var ParagonIE_Sodium_Core32_Int64 $s5\n         * @var ParagonIE_Sodium_Core32_Int64 $s6\n         * @var ParagonIE_Sodium_Core32_Int64 $s7\n         * @var ParagonIE_Sodium_Core32_Int64 $s8\n         * @var ParagonIE_Sodium_Core32_Int64 $s9\n         * @var ParagonIE_Sodium_Core32_Int64 $s10\n         * @var ParagonIE_Sodium_Core32_Int64 $s11\n         * @var ParagonIE_Sodium_Core32_Int64 $s12\n         * @var ParagonIE_Sodium_Core32_Int64 $s13\n         * @var ParagonIE_Sodium_Core32_Int64 $s14\n         * @var ParagonIE_Sodium_Core32_Int64 $s15\n         * @var ParagonIE_Sodium_Core32_Int64 $s16\n         * @var ParagonIE_Sodium_Core32_Int64 $s17\n         * @var ParagonIE_Sodium_Core32_Int64 $s18\n         * @var ParagonIE_Sodium_Core32_Int64 $s19\n         * @var ParagonIE_Sodium_Core32_Int64 $s20\n         * @var ParagonIE_Sodium_Core32_Int64 $s21\n         * @var ParagonIE_Sodium_Core32_Int64 $s22\n         * @var ParagonIE_Sodium_Core32_Int64 $s23\n         *\/\n\n        $s0 = $c0->addInt64($a0->mulInt64($b0, 24));\n        $s1 = $c1->addInt64($a0->mulInt64($b1, 24))->addInt64($a1->mulInt64($b0, 24));\n        $s2 = $c2->addInt64($a0->mulInt64($b2, 24))->addInt64($a1->mulInt64($b1, 24))->addInt64($a2->mulInt64($b0, 24));\n        $s3 = $c3->addInt64($a0->mulInt64($b3, 24))->addInt64($a1->mulInt64($b2, 24))->addInt64($a2->mulInt64($b1, 24))\n                 ->addInt64($a3->mulInt64($b0, 24));\n        $s4 = $c4->addInt64($a0->mulInt64($b4, 24))->addInt64($a1->mulInt64($b3, 24))->addInt64($a2->mulInt64($b2, 24))\n                 ->addInt64($a3->mulInt64($b1, 24))->addInt64($a4->mulInt64($b0, 24));\n        $s5 = $c5->addInt64($a0->mulInt64($b5, 24))->addInt64($a1->mulInt64($b4, 24))->addInt64($a2->mulInt64($b3, 24))\n                 ->addInt64($a3->mulInt64($b2, 24))->addInt64($a4->mulInt64($b1, 24))->addInt64($a5->mulInt64($b0, 24));\n        $s6 = $c6->addInt64($a0->mulInt64($b6, 24))->addInt64($a1->mulInt64($b5, 24))->addInt64($a2->mulInt64($b4, 24))\n                 ->addInt64($a3->mulInt64($b3, 24))->addInt64($a4->mulInt64($b2, 24))->addInt64($a5->mulInt64($b1, 24))\n                 ->addInt64($a6->mulInt64($b0, 24));\n        $s7 = $c7->addInt64($a0->mulInt64($b7, 24))->addInt64($a1->mulInt64($b6, 24))->addInt64($a2->mulInt64($b5, 24))\n                 ->addInt64($a3->mulInt64($b4, 24))->addInt64($a4->mulInt64($b3, 24))->addInt64($a5->mulInt64($b2, 24))\n                 ->addInt64($a6->mulInt64($b1, 24))->addInt64($a7->mulInt64($b0, 24));\n        $s8 = $c8->addInt64($a0->mulInt64($b8, 24))->addInt64($a1->mulInt64($b7, 24))->addInt64($a2->mulInt64($b6, 24))\n                 ->addInt64($a3->mulInt64($b5, 24))->addInt64($a4->mulInt64($b4, 24))->addInt64($a5->mulInt64($b3, 24))\n                 ->addInt64($a6->mulInt64($b2, 24))->addInt64($a7->mulInt64($b1, 24))->addInt64($a8->mulInt64($b0, 24));\n        $s9 = $c9->addInt64($a0->mulInt64($b9, 24))->addInt64($a1->mulInt64($b8, 24))->addInt64($a2->mulInt64($b7, 24))\n                 ->addInt64($a3->mulInt64($b6, 24))->addInt64($a4->mulInt64($b5, 24))->addInt64($a5->mulInt64($b4, 24))\n                 ->addInt64($a6->mulInt64($b3, 24))->addInt64($a7->mulInt64($b2, 24))->addInt64($a8->mulInt64($b1, 24))\n                 ->addInt64($a9->mulInt64($b0, 24));\n        $s10 = $c10->addInt64($a0->mulInt64($b10, 24))->addInt64($a1->mulInt64($b9, 24))->addInt64($a2->mulInt64($b8, 24))\n                   ->addInt64($a3->mulInt64($b7, 24))->addInt64($a4->mulInt64($b6, 24))->addInt64($a5->mulInt64($b5, 24))\n                   ->addInt64($a6->mulInt64($b4, 24))->addInt64($a7->mulInt64($b3, 24))->addInt64($a8->mulInt64($b2, 24))\n                   ->addInt64($a9->mulInt64($b1, 24))->addInt64($a10->mulInt64($b0, 24));\n        $s11 = $c11->addInt64($a0->mulInt64($b11, 24))->addInt64($a1->mulInt64($b10, 24))->addInt64($a2->mulInt64($b9, 24))\n                   ->addInt64($a3->mulInt64($b8, 24))->addInt64($a4->mulInt64($b7, 24))->addInt64($a5->mulInt64($b6, 24))\n                   ->addInt64($a6->mulInt64($b5, 24))->addInt64($a7->mulInt64($b4, 24))->addInt64($a8->mulInt64($b3, 24))\n                   ->addInt64($a9->mulInt64($b2, 24))->addInt64($a10->mulInt64($b1, 24))->addInt64($a11->mulInt64($b0, 24));\n        $s12 = $a1->mulInt64($b11, 24)->addInt64($a2->mulInt64($b10, 24))->addInt64($a3->mulInt64($b9, 24))\n                  ->addInt64($a4->mulInt64($b8, 24))->addInt64($a5->mulInt64($b7, 24))->addInt64($a6->mulInt64($b6, 24))\n                  ->addInt64($a7->mulInt64($b5, 24))->addInt64($a8->mulInt64($b4, 24))->addInt64($a9->mulInt64($b3, 24))\n                  ->addInt64($a10->mulInt64($b2, 24))->addInt64($a11->mulInt64($b1, 24));\n        $s13 = $a2->mulInt64($b11, 24)->addInt64($a3->mulInt64($b10, 24))->addInt64($a4->mulInt64($b9, 24))\n                  ->addInt64($a5->mulInt64($b8, 24))->addInt64($a6->mulInt64($b7, 24))->addInt64($a7->mulInt64($b6, 24))\n                  ->addInt64($a8->mulInt64($b5, 24))->addInt64($a9->mulInt64($b4, 24))->addInt64($a10->mulInt64($b3, 24))\n                  ->addInt64($a11->mulInt64($b2, 24));\n        $s14 = $a3->mulInt64($b11, 24)->addInt64($a4->mulInt64($b10, 24))->addInt64($a5->mulInt64($b9, 24))\n                  ->addInt64($a6->mulInt64($b8, 24))->addInt64($a7->mulInt64($b7, 24))->addInt64($a8->mulInt64($b6, 24))\n                  ->addInt64($a9->mulInt64($b5, 24))->addInt64($a10->mulInt64($b4, 24))->addInt64($a11->mulInt64($b3, 24));\n        $s15 = $a4->mulInt64($b11, 24)->addInt64($a5->mulInt64($b10, 24))->addInt64($a6->mulInt64($b9, 24))\n                  ->addInt64($a7->mulInt64($b8, 24))->addInt64($a8->mulInt64($b7, 24))->addInt64($a9->mulInt64($b6, 24))\n                  ->addInt64($a10->mulInt64($b5, 24))->addInt64($a11->mulInt64($b4, 24));\n        $s16 = $a5->mulInt64($b11, 24)->addInt64($a6->mulInt64($b10, 24))->addInt64($a7->mulInt64($b9, 24))\n                  ->addInt64($a8->mulInt64($b8, 24))->addInt64($a9->mulInt64($b7, 24))->addInt64($a10->mulInt64($b6, 24))\n                  ->addInt64($a11->mulInt64($b5, 24));\n        $s17 = $a6->mulInt64($b11, 24)->addInt64($a7->mulInt64($b10, 24))->addInt64($a8->mulInt64($b9, 24))\n                  ->addInt64($a9->mulInt64($b8, 24))->addInt64($a10->mulInt64($b7, 24))->addInt64($a11->mulInt64($b6, 24));\n        $s18 = $a7->mulInt64($b11, 24)->addInt64($a8->mulInt64($b10, 24))->addInt64($a9->mulInt64($b9, 24))\n                  ->addInt64($a10->mulInt64($b8, 24))->addInt64($a11->mulInt64($b7, 24));\n        $s19 = $a8->mulInt64($b11, 24)->addInt64($a9->mulInt64($b10, 24))->addInt64($a10->mulInt64($b9, 24))\n                  ->addInt64($a11->mulInt64($b8, 24));\n        $s20 = $a9->mulInt64($b11, 24)->addInt64($a10->mulInt64($b10, 24))->addInt64($a11->mulInt64($b9, 24));\n        $s21 = $a10->mulInt64($b11, 24)->addInt64($a11->mulInt64($b10, 24));\n        $s22 = $a11->mulInt64($b11, 24);\n        $s23 = new ParagonIE_Sodium_Core32_Int64();\n\n        $carry0 = $s0->addInt(1 << 20)->shiftRight(21);\n        $s1 = $s1->addInt64($carry0);\n        $s0 = $s0->subInt64($carry0->shiftLeft(21));\n        $carry2 = $s2->addInt(1 << 20)->shiftRight(21);\n        $s3 = $s3->addInt64($carry2);\n        $s2 = $s2->subInt64($carry2->shiftLeft(21));\n        $carry4 = $s4->addInt(1 << 20)->shiftRight(21);\n        $s5 = $s5->addInt64($carry4);\n        $s4 = $s4->subInt64($carry4->shiftLeft(21));\n        $carry6 = $s6->addInt(1 << 20)->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry8 = $s8->addInt(1 << 20)->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry10 = $s10->addInt(1 << 20)->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n        $carry12 = $s12->addInt(1 << 20)->shiftRight(21);\n        $s13 = $s13->addInt64($carry12);\n        $s12 = $s12->subInt64($carry12->shiftLeft(21));\n        $carry14 = $s14->addInt(1 << 20)->shiftRight(21);\n        $s15 = $s15->addInt64($carry14);\n        $s14 = $s14->subInt64($carry14->shiftLeft(21));\n        $carry16 = $s16->addInt(1 << 20)->shiftRight(21);\n        $s17 = $s17->addInt64($carry16);\n        $s16 = $s16->subInt64($carry16->shiftLeft(21));\n        $carry18 = $s18->addInt(1 << 20)->shiftRight(21);\n        $s19 = $s19->addInt64($carry18);\n        $s18 = $s18->subInt64($carry18->shiftLeft(21));\n        $carry20 = $s20->addInt(1 << 20)->shiftRight(21);\n        $s21 = $s21->addInt64($carry20);\n        $s20 = $s20->subInt64($carry20->shiftLeft(21));\n        $carry22 = $s22->addInt(1 << 20)->shiftRight(21);\n        $s23 = $s23->addInt64($carry22);\n        $s22 = $s22->subInt64($carry22->shiftLeft(21));\n\n        $carry1 = $s1->addInt(1 << 20)->shiftRight(21);\n        $s2 = $s2->addInt64($carry1);\n        $s1 = $s1->subInt64($carry1->shiftLeft(21));\n        $carry3 = $s3->addInt(1 << 20)->shiftRight(21);\n        $s4 = $s4->addInt64($carry3);\n        $s3 = $s3->subInt64($carry3->shiftLeft(21));\n        $carry5 = $s5->addInt(1 << 20)->shiftRight(21);\n        $s6 = $s6->addInt64($carry5);\n        $s5 = $s5->subInt64($carry5->shiftLeft(21));\n        $carry7 = $s7->addInt(1 << 20)->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry9 = $s9->addInt(1 << 20)->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry11 = $s11->addInt(1 << 20)->shiftRight(21);\n        $s12 = $s12->addInt64($carry11);\n        $s11 = $s11->subInt64($carry11->shiftLeft(21));\n        $carry13 = $s13->addInt(1 << 20)->shiftRight(21);\n        $s14 = $s14->addInt64($carry13);\n        $s13 = $s13->subInt64($carry13->shiftLeft(21));\n        $carry15 = $s15->addInt(1 << 20)->shiftRight(21);\n        $s16 = $s16->addInt64($carry15);\n        $s15 = $s15->subInt64($carry15->shiftLeft(21));\n        $carry17 = $s17->addInt(1 << 20)->shiftRight(21);\n        $s18 = $s18->addInt64($carry17);\n        $s17 = $s17->subInt64($carry17->shiftLeft(21));\n        $carry19 = $s19->addInt(1 << 20)->shiftRight(21);\n        $s20 = $s20->addInt64($carry19);\n        $s19 = $s19->subInt64($carry19->shiftLeft(21));\n        $carry21 = $s21->addInt(1 << 20)->shiftRight(21);\n        $s22 = $s22->addInt64($carry21);\n        $s21 = $s21->subInt64($carry21->shiftLeft(21));\n\n        $s11 = $s11->addInt64($s23->mulInt(666643, 20));\n        $s12 = $s12->addInt64($s23->mulInt(470296, 19));\n        $s13 = $s13->addInt64($s23->mulInt(654183, 20));\n        $s14 = $s14->subInt64($s23->mulInt(997805, 20));\n        $s15 = $s15->addInt64($s23->mulInt(136657, 18));\n        $s16 = $s16->subInt64($s23->mulInt(683901, 20));\n\n        $s10 = $s10->addInt64($s22->mulInt(666643, 20));\n        $s11 = $s11->addInt64($s22->mulInt(470296, 19));\n        $s12 = $s12->addInt64($s22->mulInt(654183, 20));\n        $s13 = $s13->subInt64($s22->mulInt(997805, 20));\n        $s14 = $s14->addInt64($s22->mulInt(136657, 18));\n        $s15 = $s15->subInt64($s22->mulInt(683901, 20));\n\n        $s9  =  $s9->addInt64($s21->mulInt(666643, 20));\n        $s10 = $s10->addInt64($s21->mulInt(470296, 19));\n        $s11 = $s11->addInt64($s21->mulInt(654183, 20));\n        $s12 = $s12->subInt64($s21->mulInt(997805, 20));\n        $s13 = $s13->addInt64($s21->mulInt(136657, 18));\n        $s14 = $s14->subInt64($s21->mulInt(683901, 20));\n\n        $s8  =  $s8->addInt64($s20->mulInt(666643, 20));\n        $s9  =  $s9->addInt64($s20->mulInt(470296, 19));\n        $s10 = $s10->addInt64($s20->mulInt(654183, 20));\n        $s11 = $s11->subInt64($s20->mulInt(997805, 20));\n        $s12 = $s12->addInt64($s20->mulInt(136657, 18));\n        $s13 = $s13->subInt64($s20->mulInt(683901, 20));\n\n        $s7  =  $s7->addInt64($s19->mulInt(666643, 20));\n        $s8  =  $s8->addInt64($s19->mulInt(470296, 19));\n        $s9  =  $s9->addInt64($s19->mulInt(654183, 20));\n        $s10 = $s10->subInt64($s19->mulInt(997805, 20));\n        $s11 = $s11->addInt64($s19->mulInt(136657, 18));\n        $s12 = $s12->subInt64($s19->mulInt(683901, 20));\n\n        $s6  =  $s6->addInt64($s18->mulInt(666643, 20));\n        $s7  =  $s7->addInt64($s18->mulInt(470296, 19));\n        $s8  =  $s8->addInt64($s18->mulInt(654183, 20));\n        $s9  =  $s9->subInt64($s18->mulInt(997805, 20));\n        $s10 = $s10->addInt64($s18->mulInt(136657, 18));\n        $s11 = $s11->subInt64($s18->mulInt(683901, 20));\n\n        $carry6 = $s6->addInt(1 << 20)->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry8 = $s8->addInt(1 << 20)->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry10 = $s10->addInt(1 << 20)->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n        $carry12 = $s12->addInt(1 << 20)->shiftRight(21);\n        $s13 = $s13->addInt64($carry12);\n        $s12 = $s12->subInt64($carry12->shiftLeft(21));\n        $carry14 = $s14->addInt(1 << 20)->shiftRight(21);\n        $s15 = $s15->addInt64($carry14);\n        $s14 = $s14->subInt64($carry14->shiftLeft(21));\n        $carry16 = $s16->addInt(1 << 20)->shiftRight(21);\n        $s17 = $s17->addInt64($carry16);\n        $s16 = $s16->subInt64($carry16->shiftLeft(21));\n\n        $carry7 = $s7->addInt(1 << 20)->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry9 = $s9->addInt(1 << 20)->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry11 = $s11->addInt(1 << 20)->shiftRight(21);\n        $s12 = $s12->addInt64($carry11);\n        $s11 = $s11->subInt64($carry11->shiftLeft(21));\n        $carry13 = $s13->addInt(1 << 20)->shiftRight(21);\n        $s14 = $s14->addInt64($carry13);\n        $s13 = $s13->subInt64($carry13->shiftLeft(21));\n        $carry15 = $s15->addInt(1 << 20)->shiftRight(21);\n        $s16 = $s16->addInt64($carry15);\n        $s15 = $s15->subInt64($carry15->shiftLeft(21));\n\n        $s5  =  $s5->addInt64($s17->mulInt(666643, 20));\n        $s6  =  $s6->addInt64($s17->mulInt(470296, 19));\n        $s7  =  $s7->addInt64($s17->mulInt(654183, 20));\n        $s8  =  $s8->subInt64($s17->mulInt(997805, 20));\n        $s9  =  $s9->addInt64($s17->mulInt(136657, 18));\n        $s10 = $s10->subInt64($s17->mulInt(683901, 20));\n\n        $s4  =  $s4->addInt64($s16->mulInt(666643, 20));\n        $s5  =  $s5->addInt64($s16->mulInt(470296, 19));\n        $s6  =  $s6->addInt64($s16->mulInt(654183, 20));\n        $s7  =  $s7->subInt64($s16->mulInt(997805, 20));\n        $s8  =  $s8->addInt64($s16->mulInt(136657, 18));\n        $s9  =  $s9->subInt64($s16->mulInt(683901, 20));\n\n        $s3  =  $s3->addInt64($s15->mulInt(666643, 20));\n        $s4  =  $s4->addInt64($s15->mulInt(470296, 19));\n        $s5  =  $s5->addInt64($s15->mulInt(654183, 20));\n        $s6  =  $s6->subInt64($s15->mulInt(997805, 20));\n        $s7  =  $s7->addInt64($s15->mulInt(136657, 18));\n        $s8  =  $s8->subInt64($s15->mulInt(683901, 20));\n\n        $s2  =  $s2->addInt64($s14->mulInt(666643, 20));\n        $s3  =  $s3->addInt64($s14->mulInt(470296, 19));\n        $s4  =  $s4->addInt64($s14->mulInt(654183, 20));\n        $s5  =  $s5->subInt64($s14->mulInt(997805, 20));\n        $s6  =  $s6->addInt64($s14->mulInt(136657, 18));\n        $s7  =  $s7->subInt64($s14->mulInt(683901, 20));\n\n        $s1  =  $s1->addInt64($s13->mulInt(666643, 20));\n        $s2  =  $s2->addInt64($s13->mulInt(470296, 19));\n        $s3  =  $s3->addInt64($s13->mulInt(654183, 20));\n        $s4  =  $s4->subInt64($s13->mulInt(997805, 20));\n        $s5  =  $s5->addInt64($s13->mulInt(136657, 18));\n        $s6  =  $s6->subInt64($s13->mulInt(683901, 20));\n\n        $s0  =  $s0->addInt64($s12->mulInt(666643, 20));\n        $s1  =  $s1->addInt64($s12->mulInt(470296, 19));\n        $s2  =  $s2->addInt64($s12->mulInt(654183, 20));\n        $s3  =  $s3->subInt64($s12->mulInt(997805, 20));\n        $s4  =  $s4->addInt64($s12->mulInt(136657, 18));\n        $s5  =  $s5->subInt64($s12->mulInt(683901, 20));\n        $s12 = new ParagonIE_Sodium_Core32_Int64();\n\n        $carry0 = $s0->addInt(1 << 20)->shiftRight(21);\n        $s1 = $s1->addInt64($carry0);\n        $s0 = $s0->subInt64($carry0->shiftLeft(21));\n        $carry2 = $s2->addInt(1 << 20)->shiftRight(21);\n        $s3 = $s3->addInt64($carry2);\n        $s2 = $s2->subInt64($carry2->shiftLeft(21));\n        $carry4 = $s4->addInt(1 << 20)->shiftRight(21);\n        $s5 = $s5->addInt64($carry4);\n        $s4 = $s4->subInt64($carry4->shiftLeft(21));\n        $carry6 = $s6->addInt(1 << 20)->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry8 = $s8->addInt(1 << 20)->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry10 = $s10->addInt(1 << 20)->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n\n        $carry1 = $s1->addInt(1 << 20)->shiftRight(21);\n        $s2 = $s2->addInt64($carry1);\n        $s1 = $s1->subInt64($carry1->shiftLeft(21));\n        $carry3 = $s3->addInt(1 << 20)->shiftRight(21);\n        $s4 = $s4->addInt64($carry3);\n        $s3 = $s3->subInt64($carry3->shiftLeft(21));\n        $carry5 = $s5->addInt(1 << 20)->shiftRight(21);\n        $s6 = $s6->addInt64($carry5);\n        $s5 = $s5->subInt64($carry5->shiftLeft(21));\n        $carry7 = $s7->addInt(1 << 20)->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry9 = $s9->addInt(1 << 20)->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry11 = $s11->addInt(1 << 20)->shiftRight(21);\n        $s12 = $s12->addInt64($carry11);\n        $s11 = $s11->subInt64($carry11->shiftLeft(21));\n\n        $s0  =  $s0->addInt64($s12->mulInt(666643, 20));\n        $s1  =  $s1->addInt64($s12->mulInt(470296, 19));\n        $s2  =  $s2->addInt64($s12->mulInt(654183, 20));\n        $s3  =  $s3->subInt64($s12->mulInt(997805, 20));\n        $s4  =  $s4->addInt64($s12->mulInt(136657, 18));\n        $s5  =  $s5->subInt64($s12->mulInt(683901, 20));\n        $s12 = new ParagonIE_Sodium_Core32_Int64();\n\n        $carry0 = $s0->shiftRight(21);\n        $s1 = $s1->addInt64($carry0);\n        $s0 = $s0->subInt64($carry0->shiftLeft(21));\n        $carry1 = $s1->shiftRight(21);\n        $s2 = $s2->addInt64($carry1);\n        $s1 = $s1->subInt64($carry1->shiftLeft(21));\n        $carry2 = $s2->shiftRight(21);\n        $s3 = $s3->addInt64($carry2);\n        $s2 = $s2->subInt64($carry2->shiftLeft(21));\n        $carry3 = $s3->shiftRight(21);\n        $s4 = $s4->addInt64($carry3);\n        $s3 = $s3->subInt64($carry3->shiftLeft(21));\n        $carry4 = $s4->shiftRight(21);\n        $s5 = $s5->addInt64($carry4);\n        $s4 = $s4->subInt64($carry4->shiftLeft(21));\n        $carry5 = $s5->shiftRight(21);\n        $s6 = $s6->addInt64($carry5);\n        $s5 = $s5->subInt64($carry5->shiftLeft(21));\n        $carry6 = $s6->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry7 = $s7->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry8 = $s8->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry9 = $s9->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry10 = $s10->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n        $carry11 = $s11->shiftRight(21);\n        $s12 = $s12->addInt64($carry11);\n        $s11 = $s11->subInt64($carry11->shiftLeft(21));\n\n        $s0  =  $s0->addInt64($s12->mulInt(666643, 20));\n        $s1  =  $s1->addInt64($s12->mulInt(470296, 19));\n        $s2  =  $s2->addInt64($s12->mulInt(654183, 20));\n        $s3  =  $s3->subInt64($s12->mulInt(997805, 20));\n        $s4  =  $s4->addInt64($s12->mulInt(136657, 18));\n        $s5  =  $s5->subInt64($s12->mulInt(683901, 20));\n\n        $carry0 = $s0->shiftRight(21);\n        $s1 = $s1->addInt64($carry0);\n        $s0 = $s0->subInt64($carry0->shiftLeft(21));\n        $carry1 = $s1->shiftRight(21);\n        $s2 = $s2->addInt64($carry1);\n        $s1 = $s1->subInt64($carry1->shiftLeft(21));\n        $carry2 = $s2->shiftRight(21);\n        $s3 = $s3->addInt64($carry2);\n        $s2 = $s2->subInt64($carry2->shiftLeft(21));\n        $carry3 = $s3->shiftRight(21);\n        $s4 = $s4->addInt64($carry3);\n        $s3 = $s3->subInt64($carry3->shiftLeft(21));\n        $carry4 = $s4->shiftRight(21);\n        $s5 = $s5->addInt64($carry4);\n        $s4 = $s4->subInt64($carry4->shiftLeft(21));\n        $carry5 = $s5->shiftRight(21);\n        $s6 = $s6->addInt64($carry5);\n        $s5 = $s5->subInt64($carry5->shiftLeft(21));\n        $carry6 = $s6->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry7 = $s7->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry8 = $s10->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry9 = $s9->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry10 = $s10->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n\n        $S0  =  $s0->toInt();\n        $S1  =  $s1->toInt();\n        $S2  =  $s2->toInt();\n        $S3  =  $s3->toInt();\n        $S4  =  $s4->toInt();\n        $S5  =  $s5->toInt();\n        $S6  =  $s6->toInt();\n        $S7  =  $s7->toInt();\n        $S8  =  $s8->toInt();\n        $S9  =  $s9->toInt();\n        $S10 = $s10->toInt();\n        $S11 = $s11->toInt();\n\n        \/**\n         * @var array<int, int>\n         *\/\n        $arr = array(\n            (int) (0xff & ($S0 >> 0)),\n            (int) (0xff & ($S0 >> 8)),\n            (int) (0xff & (($S0 >> 16) | ($S1 << 5))),\n            (int) (0xff & ($S1 >> 3)),\n            (int) (0xff & ($S1 >> 11)),\n            (int) (0xff & (($S1 >> 19) | ($S2 << 2))),\n            (int) (0xff & ($S2 >> 6)),\n            (int) (0xff & (($S2 >> 14) | ($S3 << 7))),\n            (int) (0xff & ($S3 >> 1)),\n            (int) (0xff & ($S3 >> 9)),\n            (int) (0xff & (($S3 >> 17) | ($S4 << 4))),\n            (int) (0xff & ($S4 >> 4)),\n            (int) (0xff & ($S4 >> 12)),\n            (int) (0xff & (($S4 >> 20) | ($S5 << 1))),\n            (int) (0xff & ($S5 >> 7)),\n            (int) (0xff & (($S5 >> 15) | ($S6 << 6))),\n            (int) (0xff & ($S6 >> 2)),\n            (int) (0xff & ($S6 >> 10)),\n            (int) (0xff & (($S6 >> 18) | ($S7 << 3))),\n            (int) (0xff & ($S7 >> 5)),\n            (int) (0xff & ($S7 >> 13)),\n            (int) (0xff & ($S8 >> 0)),\n            (int) (0xff & ($S8 >> 8)),\n            (int) (0xff & (($S8 >> 16) | ($S9 << 5))),\n            (int) (0xff & ($S9 >> 3)),\n            (int) (0xff & ($S9 >> 11)),\n            (int) (0xff & (($S9 >> 19) | ($S10 << 2))),\n            (int) (0xff & ($S10 >> 6)),\n            (int) (0xff & (($S10 >> 14) | ($S11 << 7))),\n            (int) (0xff & ($S11 >> 1)),\n            (int) (0xff & ($S11 >> 9)),\n            (int) (0xff & ($S11 >> 17))\n        );\n        return self::intArrayToString($arr);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $s\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sc_reduce($s)\n    {\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int64 $s0\n         * @var ParagonIE_Sodium_Core32_Int64 $s1\n         * @var ParagonIE_Sodium_Core32_Int64 $s2\n         * @var ParagonIE_Sodium_Core32_Int64 $s3\n         * @var ParagonIE_Sodium_Core32_Int64 $s4\n         * @var ParagonIE_Sodium_Core32_Int64 $s5\n         * @var ParagonIE_Sodium_Core32_Int64 $s6\n         * @var ParagonIE_Sodium_Core32_Int64 $s7\n         * @var ParagonIE_Sodium_Core32_Int64 $s8\n         * @var ParagonIE_Sodium_Core32_Int64 $s9\n         * @var ParagonIE_Sodium_Core32_Int64 $s10\n         * @var ParagonIE_Sodium_Core32_Int64 $s11\n         * @var ParagonIE_Sodium_Core32_Int64 $s12\n         * @var ParagonIE_Sodium_Core32_Int64 $s13\n         * @var ParagonIE_Sodium_Core32_Int64 $s14\n         * @var ParagonIE_Sodium_Core32_Int64 $s15\n         * @var ParagonIE_Sodium_Core32_Int64 $s16\n         * @var ParagonIE_Sodium_Core32_Int64 $s17\n         * @var ParagonIE_Sodium_Core32_Int64 $s18\n         * @var ParagonIE_Sodium_Core32_Int64 $s19\n         * @var ParagonIE_Sodium_Core32_Int64 $s20\n         * @var ParagonIE_Sodium_Core32_Int64 $s21\n         * @var ParagonIE_Sodium_Core32_Int64 $s22\n         * @var ParagonIE_Sodium_Core32_Int64 $s23\n         *\/\n        $s0 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($s, 0, 3)));\n        $s1 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 2, 4)) >> 5));\n        $s2 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 5, 3)) >> 2));\n        $s3 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 7, 4)) >> 7));\n        $s4 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 10, 4)) >> 4));\n        $s5 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 13, 3)) >> 1));\n        $s6 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 15, 4)) >> 6));\n        $s7 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 18, 4)) >> 3));\n        $s8 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($s, 21, 3)));\n        $s9 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 23, 4)) >> 5));\n        $s10 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 26, 3)) >> 2));\n        $s11 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 28, 4)) >> 7));\n        $s12 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 31, 4)) >> 4));\n        $s13 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 34, 3)) >> 1));\n        $s14 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 36, 4)) >> 6));\n        $s15 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 39, 4)) >> 3));\n        $s16 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & self::load_3(self::substr($s, 42, 3)));\n        $s17 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 44, 4)) >> 5));\n        $s18 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 47, 3)) >> 2));\n        $s19 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 49, 4)) >> 7));\n        $s20 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 52, 4)) >> 4));\n        $s21 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_3(self::substr($s, 55, 3)) >> 1));\n        $s22 = ParagonIE_Sodium_Core32_Int64::fromInt(2097151 & (self::load_4(self::substr($s, 57, 4)) >> 6));\n        $s23 = ParagonIE_Sodium_Core32_Int64::fromInt(0x1fffffff & (self::load_4(self::substr($s, 60, 4)) >> 3));\n\n        $s11 = $s11->addInt64($s23->mulInt(666643, 20));\n        $s12 = $s12->addInt64($s23->mulInt(470296, 19));\n        $s13 = $s13->addInt64($s23->mulInt(654183, 20));\n        $s14 = $s14->subInt64($s23->mulInt(997805, 20));\n        $s15 = $s15->addInt64($s23->mulInt(136657, 18));\n        $s16 = $s16->subInt64($s23->mulInt(683901, 20));\n\n        $s10 = $s10->addInt64($s22->mulInt(666643, 20));\n        $s11 = $s11->addInt64($s22->mulInt(470296, 19));\n        $s12 = $s12->addInt64($s22->mulInt(654183, 20));\n        $s13 = $s13->subInt64($s22->mulInt(997805, 20));\n        $s14 = $s14->addInt64($s22->mulInt(136657, 18));\n        $s15 = $s15->subInt64($s22->mulInt(683901, 20));\n\n        $s9  =  $s9->addInt64($s21->mulInt(666643, 20));\n        $s10 = $s10->addInt64($s21->mulInt(470296, 19));\n        $s11 = $s11->addInt64($s21->mulInt(654183, 20));\n        $s12 = $s12->subInt64($s21->mulInt(997805, 20));\n        $s13 = $s13->addInt64($s21->mulInt(136657, 18));\n        $s14 = $s14->subInt64($s21->mulInt(683901, 20));\n\n        $s8  =  $s8->addInt64($s20->mulInt(666643, 20));\n        $s9  =  $s9->addInt64($s20->mulInt(470296, 19));\n        $s10 = $s10->addInt64($s20->mulInt(654183, 20));\n        $s11 = $s11->subInt64($s20->mulInt(997805, 20));\n        $s12 = $s12->addInt64($s20->mulInt(136657, 18));\n        $s13 = $s13->subInt64($s20->mulInt(683901, 20));\n\n        $s7  =  $s7->addInt64($s19->mulInt(666643, 20));\n        $s8  =  $s8->addInt64($s19->mulInt(470296, 19));\n        $s9  =  $s9->addInt64($s19->mulInt(654183, 20));\n        $s10 = $s10->subInt64($s19->mulInt(997805, 20));\n        $s11 = $s11->addInt64($s19->mulInt(136657, 18));\n        $s12 = $s12->subInt64($s19->mulInt(683901, 20));\n\n        $s6  =  $s6->addInt64($s18->mulInt(666643, 20));\n        $s7  =  $s7->addInt64($s18->mulInt(470296, 19));\n        $s8  =  $s8->addInt64($s18->mulInt(654183, 20));\n        $s9  =  $s9->subInt64($s18->mulInt(997805, 20));\n        $s10 = $s10->addInt64($s18->mulInt(136657, 18));\n        $s11 = $s11->subInt64($s18->mulInt(683901, 20));\n\n        $carry6 = $s6->addInt(1 << 20)->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry8 = $s8->addInt(1 << 20)->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry10 = $s10->addInt(1 << 20)->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n        $carry12 = $s12->addInt(1 << 20)->shiftRight(21);\n        $s13 = $s13->addInt64($carry12);\n        $s12 = $s12->subInt64($carry12->shiftLeft(21));\n        $carry14 = $s14->addInt(1 << 20)->shiftRight(21);\n        $s15 = $s15->addInt64($carry14);\n        $s14 = $s14->subInt64($carry14->shiftLeft(21));\n        $carry16 = $s16->addInt(1 << 20)->shiftRight(21);\n        $s17 = $s17->addInt64($carry16);\n        $s16 = $s16->subInt64($carry16->shiftLeft(21));\n\n        $carry7 = $s7->addInt(1 << 20)->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry9 = $s9->addInt(1 << 20)->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry11 = $s11->addInt(1 << 20)->shiftRight(21);\n        $s12 = $s12->addInt64($carry11);\n        $s11 = $s11->subInt64($carry11->shiftLeft(21));\n        $carry13 = $s13->addInt(1 << 20)->shiftRight(21);\n        $s14 = $s14->addInt64($carry13);\n        $s13 = $s13->subInt64($carry13->shiftLeft(21));\n        $carry15 = $s15->addInt(1 << 20)->shiftRight(21);\n        $s16 = $s16->addInt64($carry15);\n        $s15 = $s15->subInt64($carry15->shiftLeft(21));\n\n        $s5  =  $s5->addInt64($s17->mulInt(666643, 20));\n        $s6  =  $s6->addInt64($s17->mulInt(470296, 19));\n        $s7  =  $s7->addInt64($s17->mulInt(654183, 20));\n        $s8  =  $s8->subInt64($s17->mulInt(997805, 20));\n        $s9  =  $s9->addInt64($s17->mulInt(136657, 18));\n        $s10 = $s10->subInt64($s17->mulInt(683901, 20));\n\n        $s4  =  $s4->addInt64($s16->mulInt(666643, 20));\n        $s5  =  $s5->addInt64($s16->mulInt(470296, 19));\n        $s6  =  $s6->addInt64($s16->mulInt(654183, 20));\n        $s7  =  $s7->subInt64($s16->mulInt(997805, 20));\n        $s8  =  $s8->addInt64($s16->mulInt(136657, 18));\n        $s9  =  $s9->subInt64($s16->mulInt(683901, 20));\n\n        $s3  =  $s3->addInt64($s15->mulInt(666643, 20));\n        $s4  =  $s4->addInt64($s15->mulInt(470296, 19));\n        $s5  =  $s5->addInt64($s15->mulInt(654183, 20));\n        $s6  =  $s6->subInt64($s15->mulInt(997805, 20));\n        $s7  =  $s7->addInt64($s15->mulInt(136657, 18));\n        $s8  =  $s8->subInt64($s15->mulInt(683901, 20));\n\n        $s2  =  $s2->addInt64($s14->mulInt(666643, 20));\n        $s3  =  $s3->addInt64($s14->mulInt(470296, 19));\n        $s4  =  $s4->addInt64($s14->mulInt(654183, 20));\n        $s5  =  $s5->subInt64($s14->mulInt(997805, 20));\n        $s6  =  $s6->addInt64($s14->mulInt(136657, 18));\n        $s7  =  $s7->subInt64($s14->mulInt(683901, 20));\n\n        $s1  =  $s1->addInt64($s13->mulInt(666643, 20));\n        $s2  =  $s2->addInt64($s13->mulInt(470296, 19));\n        $s3  =  $s3->addInt64($s13->mulInt(654183, 20));\n        $s4  =  $s4->subInt64($s13->mulInt(997805, 20));\n        $s5  =  $s5->addInt64($s13->mulInt(136657, 18));\n        $s6  =  $s6->subInt64($s13->mulInt(683901, 20));\n\n        $s0  =  $s0->addInt64($s12->mulInt(666643, 20));\n        $s1  =  $s1->addInt64($s12->mulInt(470296, 19));\n        $s2  =  $s2->addInt64($s12->mulInt(654183, 20));\n        $s3  =  $s3->subInt64($s12->mulInt(997805, 20));\n        $s4  =  $s4->addInt64($s12->mulInt(136657, 18));\n        $s5  =  $s5->subInt64($s12->mulInt(683901, 20));\n        $s12 = new ParagonIE_Sodium_Core32_Int64();\n\n        $carry0 = $s0->addInt(1 << 20)->shiftRight(21);\n        $s1 = $s1->addInt64($carry0);\n        $s0 = $s0->subInt64($carry0->shiftLeft(21));\n        $carry2 = $s2->addInt(1 << 20)->shiftRight(21);\n        $s3 = $s3->addInt64($carry2);\n        $s2 = $s2->subInt64($carry2->shiftLeft(21));\n        $carry4 = $s4->addInt(1 << 20)->shiftRight(21);\n        $s5 = $s5->addInt64($carry4);\n        $s4 = $s4->subInt64($carry4->shiftLeft(21));\n        $carry6 = $s6->addInt(1 << 20)->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry8 = $s8->addInt(1 << 20)->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry10 = $s10->addInt(1 << 20)->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n        $carry1 = $s1->addInt(1 << 20)->shiftRight(21);\n        $s2 = $s2->addInt64($carry1);\n        $s1 = $s1->subInt64($carry1->shiftLeft(21));\n        $carry3 = $s3->addInt(1 << 20)->shiftRight(21);\n        $s4 = $s4->addInt64($carry3);\n        $s3 = $s3->subInt64($carry3->shiftLeft(21));\n        $carry5 = $s5->addInt(1 << 20)->shiftRight(21);\n        $s6 = $s6->addInt64($carry5);\n        $s5 = $s5->subInt64($carry5->shiftLeft(21));\n        $carry7 = $s7->addInt(1 << 20)->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry9 = $s9->addInt(1 << 20)->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry11 = $s11->addInt(1 << 20)->shiftRight(21);\n        $s12 = $s12->addInt64($carry11);\n        $s11 = $s11->subInt64($carry11->shiftLeft(21));\n\n        $s0  =  $s0->addInt64($s12->mulInt(666643, 20));\n        $s1  =  $s1->addInt64($s12->mulInt(470296, 19));\n        $s2  =  $s2->addInt64($s12->mulInt(654183, 20));\n        $s3  =  $s3->subInt64($s12->mulInt(997805, 20));\n        $s4  =  $s4->addInt64($s12->mulInt(136657, 18));\n        $s5  =  $s5->subInt64($s12->mulInt(683901, 20));\n        $s12 = new ParagonIE_Sodium_Core32_Int64();\n\n        $carry0 = $s0->shiftRight(21);\n        $s1 = $s1->addInt64($carry0);\n        $s0 = $s0->subInt64($carry0->shiftLeft(21));\n        $carry1 = $s1->shiftRight(21);\n        $s2 = $s2->addInt64($carry1);\n        $s1 = $s1->subInt64($carry1->shiftLeft(21));\n        $carry2 = $s2->shiftRight(21);\n        $s3 = $s3->addInt64($carry2);\n        $s2 = $s2->subInt64($carry2->shiftLeft(21));\n        $carry3 = $s3->shiftRight(21);\n        $s4 = $s4->addInt64($carry3);\n        $s3 = $s3->subInt64($carry3->shiftLeft(21));\n        $carry4 = $s4->shiftRight(21);\n        $s5 = $s5->addInt64($carry4);\n        $s4 = $s4->subInt64($carry4->shiftLeft(21));\n        $carry5 = $s5->shiftRight(21);\n        $s6 = $s6->addInt64($carry5);\n        $s5 = $s5->subInt64($carry5->shiftLeft(21));\n        $carry6 = $s6->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry7 = $s7->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry8 = $s8->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry9 = $s9->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry10 = $s10->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n        $carry11 = $s11->shiftRight(21);\n        $s12 = $s12->addInt64($carry11);\n        $s11 = $s11->subInt64($carry11->shiftLeft(21));\n\n        $s0  =  $s0->addInt64($s12->mulInt(666643, 20));\n        $s1  =  $s1->addInt64($s12->mulInt(470296, 19));\n        $s2  =  $s2->addInt64($s12->mulInt(654183, 20));\n        $s3  =  $s3->subInt64($s12->mulInt(997805, 20));\n        $s4  =  $s4->addInt64($s12->mulInt(136657, 18));\n        $s5  =  $s5->subInt64($s12->mulInt(683901, 20));\n\n        $carry0 = $s0->shiftRight(21);\n        $s1 = $s1->addInt64($carry0);\n        $s0 = $s0->subInt64($carry0->shiftLeft(21));\n        $carry1 = $s1->shiftRight(21);\n        $s2 = $s2->addInt64($carry1);\n        $s1 = $s1->subInt64($carry1->shiftLeft(21));\n        $carry2 = $s2->shiftRight(21);\n        $s3 = $s3->addInt64($carry2);\n        $s2 = $s2->subInt64($carry2->shiftLeft(21));\n        $carry3 = $s3->shiftRight(21);\n        $s4 = $s4->addInt64($carry3);\n        $s3 = $s3->subInt64($carry3->shiftLeft(21));\n        $carry4 = $s4->shiftRight(21);\n        $s5 = $s5->addInt64($carry4);\n        $s4 = $s4->subInt64($carry4->shiftLeft(21));\n        $carry5 = $s5->shiftRight(21);\n        $s6 = $s6->addInt64($carry5);\n        $s5 = $s5->subInt64($carry5->shiftLeft(21));\n        $carry6 = $s6->shiftRight(21);\n        $s7 = $s7->addInt64($carry6);\n        $s6 = $s6->subInt64($carry6->shiftLeft(21));\n        $carry7 = $s7->shiftRight(21);\n        $s8 = $s8->addInt64($carry7);\n        $s7 = $s7->subInt64($carry7->shiftLeft(21));\n        $carry8 = $s8->shiftRight(21);\n        $s9 = $s9->addInt64($carry8);\n        $s8 = $s8->subInt64($carry8->shiftLeft(21));\n        $carry9 = $s9->shiftRight(21);\n        $s10 = $s10->addInt64($carry9);\n        $s9 = $s9->subInt64($carry9->shiftLeft(21));\n        $carry10 = $s10->shiftRight(21);\n        $s11 = $s11->addInt64($carry10);\n        $s10 = $s10->subInt64($carry10->shiftLeft(21));\n\n        $S0 = $s0->toInt32()->toInt();\n        $S1 = $s1->toInt32()->toInt();\n        $S2 = $s2->toInt32()->toInt();\n        $S3 = $s3->toInt32()->toInt();\n        $S4 = $s4->toInt32()->toInt();\n        $S5 = $s5->toInt32()->toInt();\n        $S6 = $s6->toInt32()->toInt();\n        $S7 = $s7->toInt32()->toInt();\n        $S8 = $s8->toInt32()->toInt();\n        $S9 = $s9->toInt32()->toInt();\n        $S10 = $s10->toInt32()->toInt();\n        $S11 = $s11->toInt32()->toInt();\n\n        \/**\n         * @var array<int, int>\n         *\/\n        $arr = array(\n            (int) ($S0 >> 0),\n            (int) ($S0 >> 8),\n            (int) (($S0 >> 16) | ($S1 << 5)),\n            (int) ($S1 >> 3),\n            (int) ($S1 >> 11),\n            (int) (($S1 >> 19) | ($S2 << 2)),\n            (int) ($S2 >> 6),\n            (int) (($S2 >> 14) | ($S3 << 7)),\n            (int) ($S3 >> 1),\n            (int) ($S3 >> 9),\n            (int) (($S3 >> 17) | ($S4 << 4)),\n            (int) ($S4 >> 4),\n            (int) ($S4 >> 12),\n            (int) (($S4 >> 20) | ($S5 << 1)),\n            (int) ($S5 >> 7),\n            (int) (($S5 >> 15) | ($S6 << 6)),\n            (int) ($S6 >> 2),\n            (int) ($S6 >> 10),\n            (int) (($S6 >> 18) | ($S7 << 3)),\n            (int) ($S7 >> 5),\n            (int) ($S7 >> 13),\n            (int) ($S8 >> 0),\n            (int) ($S8 >> 8),\n            (int) (($S8 >> 16) | ($S9 << 5)),\n            (int) ($S9 >> 3),\n            (int) ($S9 >> 11),\n            (int) (($S9 >> 19) | ($S10 << 2)),\n            (int) ($S10 >> 6),\n            (int) (($S10 >> 14) | ($S11 << 7)),\n            (int) ($S11 >> 1),\n            (int) ($S11 >> 9),\n            (int) $S11 >> 17\n        );\n        return self::intArrayToString($arr);\n    }\n\n    \/**\n     * multiply by the order of the main subgroup l = 2^252+27742317777372353535851937790883648493\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $A\n     * @return ParagonIE_Sodium_Core32_Curve25519_Ge_P3\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ge_mul_l(ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $A)\n    {\n        $aslide = array(\n            13, 0, 0, 0, 0, -1, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, -5, 0, 0, 0,\n            0, 0, 0, -3, 0, 0, 0, 0, -13, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 3, 0,\n            0, 0, 0, -13, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0,\n            0, 0, 11, 0, 0, 0, 0, -13, 0, 0, 0, 0, 0, 0, -3, 0, 0, 0, 0, 0, -1,\n            0, 0, 0, 0, 3, 0, 0, 0, 0, -11, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0,\n            0, 0, -1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 7, 0, 0, 0, 0, 5, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1\n        );\n\n        \/** @var array<int, ParagonIE_Sodium_Core32_Curve25519_Ge_Cached> $Ai size 8 *\/\n        $Ai = array();\n\n        # ge_p3_to_cached(&Ai[0], A);\n        $Ai[0] = self::ge_p3_to_cached($A);\n        # ge_p3_dbl(&t, A);\n        $t = self::ge_p3_dbl($A);\n        # ge_p1p1_to_p3(&A2, &t);\n        $A2 = self::ge_p1p1_to_p3($t);\n\n        for ($i = 1; $i < 8; ++$i) {\n            # ge_add(&t, &A2, &Ai[0]);\n            $t = self::ge_add($A2, $Ai[$i - 1]);\n            # ge_p1p1_to_p3(&u, &t);\n            $u = self::ge_p1p1_to_p3($t);\n            # ge_p3_to_cached(&Ai[i], &u);\n            $Ai[$i] = self::ge_p3_to_cached($u);\n        }\n\n        $r = self::ge_p3_0();\n        for ($i = 252; $i >= 0; --$i) {\n            $t = self::ge_p3_dbl($r);\n            if ($aslide[$i] > 0) {\n                # ge_p1p1_to_p3(&u, &t);\n                $u = self::ge_p1p1_to_p3($t);\n                # ge_add(&t, &u, &Ai[aslide[i] \/ 2]);\n                $t = self::ge_add($u, $Ai[(int)($aslide[$i] \/ 2)]);\n            } elseif ($aslide[$i] < 0) {\n                # ge_p1p1_to_p3(&u, &t);\n                $u = self::ge_p1p1_to_p3($t);\n                # ge_sub(&t, &u, &Ai[(-aslide[i]) \/ 2]);\n                $t = self::ge_sub($u, $Ai[(int)(-$aslide[$i] \/ 2)]);\n            }\n        }\n        # ge_p1p1_to_p3(r, &t);\n        return self::ge_p1p1_to_p3($t);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Poly1305\/State.php","ext":"php","size":16024,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Poly1305_State', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Poly1305_State\n *\/\nclass ParagonIE_Sodium_Core32_Poly1305_State extends ParagonIE_Sodium_Core32_Util\n{\n    \/**\n     * @var array<int, int>\n     *\/\n    protected $buffer = array();\n\n    \/**\n     * @var bool\n     *\/\n    protected $final = false;\n\n    \/**\n     * @var array<int, ParagonIE_Sodium_Core32_Int32>\n     *\/\n    public $h;\n\n    \/**\n     * @var int\n     *\/\n    protected $leftover = 0;\n\n    \/**\n     * @var array<int, ParagonIE_Sodium_Core32_Int32>\n     *\/\n    public $r;\n\n    \/**\n     * @var array<int, ParagonIE_Sodium_Core32_Int64>\n     *\/\n    public $pad;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Poly1305_State constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $key\n     * @throws InvalidArgumentException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function __construct($key = '')\n    {\n        if (self::strlen($key) < 32) {\n            throw new InvalidArgumentException(\n                'Poly1305 requires a 32-byte key'\n            );\n        }\n        \/* r &= 0xffffffc0ffffffc0ffffffc0fffffff *\/\n        $this->r = array(\n            \/\/ st->r[0] = ...\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 0, 4))\n                ->setUnsignedInt(true)\n                ->mask(0x3ffffff),\n            \/\/ st->r[1] = ...\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 3, 4))\n                ->setUnsignedInt(true)\n                ->shiftRight(2)\n                ->mask(0x3ffff03),\n            \/\/ st->r[2] = ...\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 6, 4))\n                ->setUnsignedInt(true)\n                ->shiftRight(4)\n                ->mask(0x3ffc0ff),\n            \/\/ st->r[3] = ...\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 9, 4))\n                ->setUnsignedInt(true)\n                ->shiftRight(6)\n                ->mask(0x3f03fff),\n            \/\/ st->r[4] = ...\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 12, 4))\n                ->setUnsignedInt(true)\n                ->shiftRight(8)\n                ->mask(0x00fffff)\n        );\n\n        \/* h = 0 *\/\n        $this->h = array(\n            new ParagonIE_Sodium_Core32_Int32(array(0, 0), true),\n            new ParagonIE_Sodium_Core32_Int32(array(0, 0), true),\n            new ParagonIE_Sodium_Core32_Int32(array(0, 0), true),\n            new ParagonIE_Sodium_Core32_Int32(array(0, 0), true),\n            new ParagonIE_Sodium_Core32_Int32(array(0, 0), true)\n        );\n\n        \/* save pad for later *\/\n        $this->pad = array(\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 16, 4))\n                ->setUnsignedInt(true)->toInt64(),\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 20, 4))\n                ->setUnsignedInt(true)->toInt64(),\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 24, 4))\n                ->setUnsignedInt(true)->toInt64(),\n            ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 28, 4))\n                ->setUnsignedInt(true)->toInt64(),\n        );\n\n        $this->leftover = 0;\n        $this->final = false;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function update($message = '')\n    {\n        $bytes = self::strlen($message);\n\n        \/* handle leftover *\/\n        if ($this->leftover) {\n            \/** @var int $want *\/\n            $want = ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE - $this->leftover;\n            if ($want > $bytes) {\n                $want = $bytes;\n            }\n            for ($i = 0; $i < $want; ++$i) {\n                $mi = self::chrToInt($message[$i]);\n                $this->buffer[$this->leftover + $i] = $mi;\n            }\n            \/\/ We snip off the leftmost bytes.\n            $message = self::substr($message, $want);\n            $bytes = self::strlen($message);\n            $this->leftover += $want;\n            if ($this->leftover < ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE) {\n                \/\/ We still don't have enough to run $this->blocks()\n                return $this;\n            }\n\n            $this->blocks(\n                self::intArrayToString($this->buffer),\n                ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE\n            );\n            $this->leftover = 0;\n        }\n\n        \/* process full blocks *\/\n        if ($bytes >= ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE) {\n            \/** @var int $want *\/\n            $want = $bytes & ~(ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE - 1);\n            if ($want >= ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE) {\n                \/** @var string $block *\/\n                $block = self::substr($message, 0, $want);\n                if (self::strlen($block) >= ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE) {\n                    $this->blocks($block, $want);\n                    $message = self::substr($message, $want);\n                    $bytes = self::strlen($message);\n                }\n            }\n        }\n\n        \/* store leftover *\/\n        if ($bytes) {\n            for ($i = 0; $i < $bytes; ++$i) {\n                $mi = self::chrToInt($message[$i]);\n                $this->buffer[$this->leftover + $i] = $mi;\n            }\n            $this->leftover = (int) $this->leftover + $bytes;\n        }\n        return $this;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param int $bytes\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function blocks($message, $bytes)\n    {\n        if (self::strlen($message) < 16) {\n            $message = str_pad($message, 16, \"\\x00\", STR_PAD_RIGHT);\n        }\n        $hibit = ParagonIE_Sodium_Core32_Int32::fromInt((int) ($this->final ? 0 : 1 << 24)); \/* 1 << 128 *\/\n        $hibit->setUnsignedInt(true);\n        $zero = new ParagonIE_Sodium_Core32_Int64(array(0, 0, 0, 0), true);\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int64 $d0\n         * @var ParagonIE_Sodium_Core32_Int64 $d1\n         * @var ParagonIE_Sodium_Core32_Int64 $d2\n         * @var ParagonIE_Sodium_Core32_Int64 $d3\n         * @var ParagonIE_Sodium_Core32_Int64 $d4\n         * @var ParagonIE_Sodium_Core32_Int64 $r0\n         * @var ParagonIE_Sodium_Core32_Int64 $r1\n         * @var ParagonIE_Sodium_Core32_Int64 $r2\n         * @var ParagonIE_Sodium_Core32_Int64 $r3\n         * @var ParagonIE_Sodium_Core32_Int64 $r4\n         *\n         * @var ParagonIE_Sodium_Core32_Int32 $h0\n         * @var ParagonIE_Sodium_Core32_Int32 $h1\n         * @var ParagonIE_Sodium_Core32_Int32 $h2\n         * @var ParagonIE_Sodium_Core32_Int32 $h3\n         * @var ParagonIE_Sodium_Core32_Int32 $h4\n         *\/\n        $r0 = $this->r[0]->toInt64();\n        $r1 = $this->r[1]->toInt64();\n        $r2 = $this->r[2]->toInt64();\n        $r3 = $this->r[3]->toInt64();\n        $r4 = $this->r[4]->toInt64();\n\n        $s1 = $r1->toInt64()->mulInt(5, 3);\n        $s2 = $r2->toInt64()->mulInt(5, 3);\n        $s3 = $r3->toInt64()->mulInt(5, 3);\n        $s4 = $r4->toInt64()->mulInt(5, 3);\n\n        $h0 = $this->h[0];\n        $h1 = $this->h[1];\n        $h2 = $this->h[2];\n        $h3 = $this->h[3];\n        $h4 = $this->h[4];\n\n        while ($bytes >= ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE) {\n            \/* h += m[i] *\/\n            $h0 = $h0->addInt32(\n                ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 0, 4))\n                    ->mask(0x3ffffff)\n            )->toInt64();\n            $h1 = $h1->addInt32(\n                ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 3, 4))\n                    ->shiftRight(2)\n                    ->mask(0x3ffffff)\n            )->toInt64();\n            $h2 = $h2->addInt32(\n                ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 6, 4))\n                    ->shiftRight(4)\n                    ->mask(0x3ffffff)\n            )->toInt64();\n            $h3 = $h3->addInt32(\n                ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 9, 4))\n                    ->shiftRight(6)\n                    ->mask(0x3ffffff)\n            )->toInt64();\n            $h4 = $h4->addInt32(\n                ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 12, 4))\n                    ->shiftRight(8)\n                    ->orInt32($hibit)\n            )->toInt64();\n\n            \/* h *= r *\/\n            $d0 = $zero\n                ->addInt64($h0->mulInt64($r0, 27))\n                ->addInt64($s4->mulInt64($h1, 27))\n                ->addInt64($s3->mulInt64($h2, 27))\n                ->addInt64($s2->mulInt64($h3, 27))\n                ->addInt64($s1->mulInt64($h4, 27));\n\n            $d1 = $zero\n                ->addInt64($h0->mulInt64($r1, 27))\n                ->addInt64($h1->mulInt64($r0, 27))\n                ->addInt64($s4->mulInt64($h2, 27))\n                ->addInt64($s3->mulInt64($h3, 27))\n                ->addInt64($s2->mulInt64($h4, 27));\n\n            $d2 = $zero\n                ->addInt64($h0->mulInt64($r2, 27))\n                ->addInt64($h1->mulInt64($r1, 27))\n                ->addInt64($h2->mulInt64($r0, 27))\n                ->addInt64($s4->mulInt64($h3, 27))\n                ->addInt64($s3->mulInt64($h4, 27));\n\n            $d3 = $zero\n                ->addInt64($h0->mulInt64($r3, 27))\n                ->addInt64($h1->mulInt64($r2, 27))\n                ->addInt64($h2->mulInt64($r1, 27))\n                ->addInt64($h3->mulInt64($r0, 27))\n                ->addInt64($s4->mulInt64($h4, 27));\n\n            $d4 = $zero\n                ->addInt64($h0->mulInt64($r4, 27))\n                ->addInt64($h1->mulInt64($r3, 27))\n                ->addInt64($h2->mulInt64($r2, 27))\n                ->addInt64($h3->mulInt64($r1, 27))\n                ->addInt64($h4->mulInt64($r0, 27));\n\n            \/* (partial) h %= p *\/\n            $c = $d0->shiftRight(26);\n            $h0 = $d0->toInt32()->mask(0x3ffffff);\n            $d1 = $d1->addInt64($c);\n\n            $c = $d1->shiftRight(26);\n            $h1 = $d1->toInt32()->mask(0x3ffffff);\n            $d2 = $d2->addInt64($c);\n\n            $c = $d2->shiftRight(26);\n            $h2 = $d2->toInt32()->mask(0x3ffffff);\n            $d3 = $d3->addInt64($c);\n\n            $c = $d3->shiftRight(26);\n            $h3 = $d3->toInt32()->mask(0x3ffffff);\n            $d4 = $d4->addInt64($c);\n\n            $c = $d4->shiftRight(26);\n            $h4 = $d4->toInt32()->mask(0x3ffffff);\n            $h0 = $h0->addInt32($c->toInt32()->mulInt(5, 3));\n\n            $c = $h0->shiftRight(26);\n            $h0 = $h0->mask(0x3ffffff);\n            $h1 = $h1->addInt32($c);\n\n            \/\/ Chop off the left 32 bytes.\n            $message = self::substr(\n                $message,\n                ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE\n            );\n            $bytes -= ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE;\n        }\n\n        \/** @var array<int, ParagonIE_Sodium_Core32_Int32> $h *\/\n        $this->h = array($h0, $h1, $h2, $h3, $h4);\n        return $this;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function finish()\n    {\n        \/* process the remaining block *\/\n        if ($this->leftover) {\n            $i = $this->leftover;\n            $this->buffer[$i++] = 1;\n            for (; $i < ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE; ++$i) {\n                $this->buffer[$i] = 0;\n            }\n            $this->final = true;\n            $this->blocks(\n                self::substr(\n                    self::intArrayToString($this->buffer),\n                    0,\n                    ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE\n                ),\n                $b = ParagonIE_Sodium_Core32_Poly1305::BLOCK_SIZE\n            );\n        }\n\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int32 $f\n         * @var ParagonIE_Sodium_Core32_Int32 $g0\n         * @var ParagonIE_Sodium_Core32_Int32 $g1\n         * @var ParagonIE_Sodium_Core32_Int32 $g2\n         * @var ParagonIE_Sodium_Core32_Int32 $g3\n         * @var ParagonIE_Sodium_Core32_Int32 $g4\n         * @var ParagonIE_Sodium_Core32_Int32 $h0\n         * @var ParagonIE_Sodium_Core32_Int32 $h1\n         * @var ParagonIE_Sodium_Core32_Int32 $h2\n         * @var ParagonIE_Sodium_Core32_Int32 $h3\n         * @var ParagonIE_Sodium_Core32_Int32 $h4\n         *\/\n        $h0 = $this->h[0];\n        $h1 = $this->h[1];\n        $h2 = $this->h[2];\n        $h3 = $this->h[3];\n        $h4 = $this->h[4];\n\n        $c = $h1->shiftRight(26);           # $c = $h1 >> 26;\n        $h1 = $h1->mask(0x3ffffff);         # $h1 &= 0x3ffffff;\n\n        $h2 = $h2->addInt32($c);            # $h2 += $c;\n        $c = $h2->shiftRight(26);           # $c = $h2 >> 26;\n        $h2 = $h2->mask(0x3ffffff);         # $h2 &= 0x3ffffff;\n\n        $h3 = $h3->addInt32($c);            # $h3 += $c;\n        $c = $h3->shiftRight(26);           # $c = $h3 >> 26;\n        $h3 = $h3->mask(0x3ffffff);         # $h3 &= 0x3ffffff;\n\n        $h4 = $h4->addInt32($c);            # $h4 += $c;\n        $c = $h4->shiftRight(26);           # $c = $h4 >> 26;\n        $h4 = $h4->mask(0x3ffffff);         # $h4 &= 0x3ffffff;\n\n        $h0 = $h0->addInt32($c->mulInt(5, 3)); # $h0 += self::mul($c, 5);\n        $c = $h0->shiftRight(26);           # $c = $h0 >> 26;\n        $h0 = $h0->mask(0x3ffffff);         # $h0 &= 0x3ffffff;\n        $h1 = $h1->addInt32($c);            # $h1 += $c;\n\n        \/* compute h + -p *\/\n        $g0 = $h0->addInt(5);\n        $c  = $g0->shiftRight(26);\n        $g0 = $g0->mask(0x3ffffff);\n        $g1 = $h1->addInt32($c);\n        $c  = $g1->shiftRight(26);\n        $g1 = $g1->mask(0x3ffffff);\n        $g2 = $h2->addInt32($c);\n        $c  = $g2->shiftRight(26);\n        $g2 = $g2->mask(0x3ffffff);\n        $g3 = $h3->addInt32($c);\n        $c  = $g3->shiftRight(26);\n        $g3 = $g3->mask(0x3ffffff);\n        $g4 = $h4->addInt32($c)->subInt(1 << 26);\n\n        # $mask = ($g4 >> 31) - 1;\n        \/* select h if h < p, or h + -p if h >= p *\/\n        $mask = (int) (($g4->toInt() >> 31) + 1);\n\n        $g0 = $g0->mask($mask);\n        $g1 = $g1->mask($mask);\n        $g2 = $g2->mask($mask);\n        $g3 = $g3->mask($mask);\n        $g4 = $g4->mask($mask);\n\n        \/** @var int $mask *\/\n        $mask = ~$mask;\n\n        $h0 = $h0->mask($mask)->orInt32($g0);\n        $h1 = $h1->mask($mask)->orInt32($g1);\n        $h2 = $h2->mask($mask)->orInt32($g2);\n        $h3 = $h3->mask($mask)->orInt32($g3);\n        $h4 = $h4->mask($mask)->orInt32($g4);\n\n        \/* h = h % (2^128) *\/\n        $h0 = $h0->orInt32($h1->shiftLeft(26));\n        $h1 = $h1->shiftRight(6)->orInt32($h2->shiftLeft(20));\n        $h2 = $h2->shiftRight(12)->orInt32($h3->shiftLeft(14));\n        $h3 = $h3->shiftRight(18)->orInt32($h4->shiftLeft(8));\n\n        \/* mac = (h + pad) % (2^128) *\/\n        $f = $h0->toInt64()->addInt64($this->pad[0]);\n        $h0 = $f->toInt32();\n        $f = $h1->toInt64()->addInt64($this->pad[1])->addInt($h0->overflow);\n        $h1 = $f->toInt32();\n        $f = $h2->toInt64()->addInt64($this->pad[2])->addInt($h1->overflow);\n        $h2 = $f->toInt32();\n        $f = $h3->toInt64()->addInt64($this->pad[3])->addInt($h2->overflow);\n        $h3 = $f->toInt32();\n\n        return $h0->toReverseString() .\n            $h1->toReverseString() .\n            $h2->toReverseString() .\n            $h3->toReverseString();\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/BLAKE2b.php","ext":"php","size":22383,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_BLAKE2b', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_BLAKE2b\n *\n * Based on the work of Devi Mandiri in devi\/salt.\n *\/\nabstract class ParagonIE_Sodium_Core32_BLAKE2b extends ParagonIE_Sodium_Core_Util\n{\n    \/**\n     * @var SplFixedArray\n     *\/\n    public static $iv;\n\n    \/**\n     * @var array<int, array<int, int>>\n     *\/\n    public static $sigma = array(\n        array(  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15),\n        array( 14, 10,  4,  8,  9, 15, 13,  6,  1, 12,  0,  2, 11,  7,  5,  3),\n        array( 11,  8, 12,  0,  5,  2, 15, 13, 10, 14,  3,  6,  7,  1,  9,  4),\n        array(  7,  9,  3,  1, 13, 12, 11, 14,  2,  6,  5, 10,  4,  0, 15,  8),\n        array(  9,  0,  5,  7,  2,  4, 10, 15, 14,  1, 11, 12,  6,  8,  3, 13),\n        array(  2, 12,  6, 10,  0, 11,  8,  3,  4, 13,  7,  5, 15, 14,  1,  9),\n        array( 12,  5,  1, 15, 14, 13,  4, 10,  0,  7,  6,  3,  9,  2,  8, 11),\n        array( 13, 11,  7, 14, 12,  1,  3,  9,  5,  0, 15,  4,  8,  6,  2, 10),\n        array(  6, 15, 14,  9, 11,  3,  0,  8, 12,  2, 13,  7,  1,  4, 10,  5),\n        array( 10,  2,  8,  4,  7,  6,  1,  5, 15, 11,  9, 14,  3, 12, 13 , 0),\n        array(  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15),\n        array( 14, 10,  4,  8,  9, 15, 13,  6,  1, 12,  0,  2, 11,  7,  5,  3)\n    );\n\n    const BLOCKBYTES = 128;\n    const OUTBYTES   = 64;\n    const KEYBYTES   = 64;\n\n    \/**\n     * Turn two 32-bit integers into a fixed array representing a 64-bit integer.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param int $high\n     * @param int $low\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function new64($high, $low)\n    {\n        return ParagonIE_Sodium_Core32_Int64::fromInts($low, $high);\n    }\n\n    \/**\n     * Convert an arbitrary number into an SplFixedArray of two 32-bit integers\n     * that represents a 64-bit integer.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param int $num\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function to64($num)\n    {\n        list($hi, $lo) = self::numericTo64BitInteger($num);\n        return self::new64($hi, $lo);\n    }\n\n    \/**\n     * Adds two 64-bit integers together, returning their sum as a SplFixedArray\n     * containing two 32-bit integers (representing a 64-bit integer).\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $x\n     * @param ParagonIE_Sodium_Core32_Int64 $y\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    protected static function add64($x, $y)\n    {\n        return $x->addInt64($y);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $x\n     * @param ParagonIE_Sodium_Core32_Int64 $y\n     * @param ParagonIE_Sodium_Core32_Int64 $z\n     * @return ParagonIE_Sodium_Core32_Int64\n     *\/\n    public static function add364($x, $y, $z)\n    {\n        return $x->addInt64($y)->addInt64($z);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $x\n     * @param ParagonIE_Sodium_Core32_Int64 $y\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws TypeError\n     *\/\n    public static function xor64(ParagonIE_Sodium_Core32_Int64 $x, ParagonIE_Sodium_Core32_Int64 $y)\n    {\n        return $x->xorInt64($y);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Int64 $x\n     * @param int $c\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function rotr64(ParagonIE_Sodium_Core32_Int64 $x, $c)\n    {\n        return $x->rotateRight($c);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $x\n     * @param int $i\n     * @return ParagonIE_Sodium_Core32_Int64\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function load64($x, $i)\n    {\n        \/** @var int $l *\/\n        $l = (int) ($x[$i])\n             | ((int) ($x[$i+1]) << 8)\n             | ((int) ($x[$i+2]) << 16)\n             | ((int) ($x[$i+3]) << 24);\n        \/** @var int $h *\/\n        $h = (int) ($x[$i+4])\n             | ((int) ($x[$i+5]) << 8)\n             | ((int) ($x[$i+6]) << 16)\n             | ((int) ($x[$i+7]) << 24);\n        return self::new64($h, $l);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $x\n     * @param int $i\n     * @param ParagonIE_Sodium_Core32_Int64 $u\n     * @return void\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    public static function store64(SplFixedArray $x, $i, ParagonIE_Sodium_Core32_Int64 $u)\n    {\n        $v = clone $u;\n        $maxLength = $x->getSize() - 1;\n        for ($j = 0; $j < 8; ++$j) {\n            $k = 3 - ($j >> 1);\n            $x[$i] = $v->limbs[$k] & 0xff;\n            if (++$i > $maxLength) {\n                return;\n            }\n            $v->limbs[$k] >>= 8;\n        }\n    }\n\n    \/**\n     * This just sets the $iv static variable.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function pseudoConstructor()\n    {\n        static $called = false;\n        if ($called) {\n            return;\n        }\n        self::$iv = new SplFixedArray(8);\n        self::$iv[0] = self::new64(0x6a09e667, 0xf3bcc908);\n        self::$iv[1] = self::new64(0xbb67ae85, 0x84caa73b);\n        self::$iv[2] = self::new64(0x3c6ef372, 0xfe94f82b);\n        self::$iv[3] = self::new64(0xa54ff53a, 0x5f1d36f1);\n        self::$iv[4] = self::new64(0x510e527f, 0xade682d1);\n        self::$iv[5] = self::new64(0x9b05688c, 0x2b3e6c1f);\n        self::$iv[6] = self::new64(0x1f83d9ab, 0xfb41bd6b);\n        self::$iv[7] = self::new64(0x5be0cd19, 0x137e2179);\n\n        $called = true;\n    }\n\n    \/**\n     * Returns a fresh BLAKE2 context.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @return SplFixedArray\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     * @psalm-suppress MixedArrayOffset\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function context()\n    {\n        $ctx    = new SplFixedArray(6);\n        $ctx[0] = new SplFixedArray(8);   \/\/ h\n        $ctx[1] = new SplFixedArray(2);   \/\/ t\n        $ctx[2] = new SplFixedArray(2);   \/\/ f\n        $ctx[3] = new SplFixedArray(256); \/\/ buf\n        $ctx[4] = 0;                      \/\/ buflen\n        $ctx[5] = 0;                      \/\/ last_node (uint8_t)\n\n        for ($i = 8; $i--;) {\n            $ctx[0][$i] = self::$iv[$i];\n        }\n        for ($i = 256; $i--;) {\n            $ctx[3][$i] = 0;\n        }\n\n        $zero = self::new64(0, 0);\n        $ctx[1][0] = $zero;\n        $ctx[1][1] = $zero;\n        $ctx[2][0] = $zero;\n        $ctx[2][1] = $zero;\n\n        return $ctx;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $ctx\n     * @param SplFixedArray $buf\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     * @psalm-suppress MixedAssignment\n     *\/\n    protected static function compress(SplFixedArray $ctx, SplFixedArray $buf)\n    {\n        $m = new SplFixedArray(16);\n        $v = new SplFixedArray(16);\n\n        for ($i = 16; $i--;) {\n            $m[$i] = self::load64($buf, $i << 3);\n        }\n\n        for ($i = 8; $i--;) {\n            $v[$i] = $ctx[0][$i];\n        }\n\n        $v[ 8] = self::$iv[0];\n        $v[ 9] = self::$iv[1];\n        $v[10] = self::$iv[2];\n        $v[11] = self::$iv[3];\n\n        $v[12] = self::xor64($ctx[1][0], self::$iv[4]);\n        $v[13] = self::xor64($ctx[1][1], self::$iv[5]);\n        $v[14] = self::xor64($ctx[2][0], self::$iv[6]);\n        $v[15] = self::xor64($ctx[2][1], self::$iv[7]);\n\n        for ($r = 0; $r < 12; ++$r) {\n            $v = self::G($r, 0, 0, 4, 8, 12, $v, $m);\n            $v = self::G($r, 1, 1, 5, 9, 13, $v, $m);\n            $v = self::G($r, 2, 2, 6, 10, 14, $v, $m);\n            $v = self::G($r, 3, 3, 7, 11, 15, $v, $m);\n            $v = self::G($r, 4, 0, 5, 10, 15, $v, $m);\n            $v = self::G($r, 5, 1, 6, 11, 12, $v, $m);\n            $v = self::G($r, 6, 2, 7, 8, 13, $v, $m);\n            $v = self::G($r, 7, 3, 4, 9, 14, $v, $m);\n        }\n\n        for ($i = 8; $i--;) {\n            $ctx[0][$i] = self::xor64(\n                $ctx[0][$i], self::xor64($v[$i], $v[$i+8])\n            );\n        }\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $r\n     * @param int $i\n     * @param int $a\n     * @param int $b\n     * @param int $c\n     * @param int $d\n     * @param SplFixedArray $v\n     * @param SplFixedArray $m\n     * @return SplFixedArray\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    public static function G($r, $i, $a, $b, $c, $d, SplFixedArray $v, SplFixedArray $m)\n    {\n        $v[$a] = self::add364($v[$a], $v[$b], $m[self::$sigma[$r][$i << 1]]);\n        $v[$d] = self::rotr64(self::xor64($v[$d], $v[$a]), 32);\n        $v[$c] = self::add64($v[$c], $v[$d]);\n        $v[$b] = self::rotr64(self::xor64($v[$b], $v[$c]), 24);\n        $v[$a] = self::add364($v[$a], $v[$b], $m[self::$sigma[$r][($i << 1) + 1]]);\n        $v[$d] = self::rotr64(self::xor64($v[$d], $v[$a]), 16);\n        $v[$c] = self::add64($v[$c], $v[$d]);\n        $v[$b] = self::rotr64(self::xor64($v[$b], $v[$c]), 63);\n        return $v;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $ctx\n     * @param int $inc\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     *\/\n    public static function increment_counter($ctx, $inc)\n    {\n        if ($inc < 0) {\n            throw new SodiumException('Increasing by a negative number makes no sense.');\n        }\n        $t = self::to64($inc);\n        # S->t is $ctx[1] in our implementation\n\n        # S->t[0] = ( uint64_t )( t >> 0 );\n        $ctx[1][0] = self::add64($ctx[1][0], $t);\n\n        # S->t[1] += ( S->t[0] < inc );\n        if (!($ctx[1][0] instanceof ParagonIE_Sodium_Core32_Int64)) {\n            throw new TypeError('Not an int64');\n        }\n        \/** @var ParagonIE_Sodium_Core32_Int64 $c*\/\n        $c = $ctx[1][0];\n        if ($c->isLessThanInt($inc)) {\n            $ctx[1][1] = self::add64($ctx[1][1], self::to64(1));\n        }\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $ctx\n     * @param SplFixedArray $p\n     * @param int $plen\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     * @psalm-suppress MixedArrayOffset\n     * @psalm-suppress MixedMethodCall\n     * @psalm-suppress MixedOperand\n     *\/\n    public static function update(SplFixedArray $ctx, SplFixedArray $p, $plen)\n    {\n        self::pseudoConstructor();\n\n        $offset = 0;\n        while ($plen > 0) {\n            $left = $ctx[4];\n            $fill = 256 - $left;\n\n            if ($plen > $fill) {\n                # memcpy( S->buf + left, in, fill ); \/* Fill buffer *\/\n                for ($i = $fill; $i--;) {\n                    $ctx[3][$i + $left] = $p[$i + $offset];\n                }\n\n                # S->buflen += fill;\n                $ctx[4] += $fill;\n\n                # blake2b_increment_counter( S, BLAKE2B_BLOCKBYTES );\n                self::increment_counter($ctx, 128);\n\n                # blake2b_compress( S, S->buf ); \/* Compress *\/\n                self::compress($ctx, $ctx[3]);\n\n                # memcpy( S->buf, S->buf + BLAKE2B_BLOCKBYTES, BLAKE2B_BLOCKBYTES ); \/* Shift buffer left *\/\n                for ($i = 128; $i--;) {\n                    $ctx[3][$i] = $ctx[3][$i + 128];\n                }\n\n                # S->buflen -= BLAKE2B_BLOCKBYTES;\n                $ctx[4] -= 128;\n\n                # in += fill;\n                $offset += $fill;\n\n                # inlen -= fill;\n                $plen -= $fill;\n            } else {\n                for ($i = $plen; $i--;) {\n                    $ctx[3][$i + $left] = $p[$i + $offset];\n                }\n                $ctx[4] += $plen;\n                $offset += $plen;\n                $plen -= $plen;\n            }\n        }\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $ctx\n     * @param SplFixedArray $out\n     * @return SplFixedArray\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     * @psalm-suppress MixedArrayOffset\n     * @psalm-suppress MixedMethodCall\n     * @psalm-suppress MixedOperand\n     *\/\n    public static function finish(SplFixedArray $ctx, SplFixedArray $out)\n    {\n        self::pseudoConstructor();\n        if ($ctx[4] > 128) {\n            self::increment_counter($ctx, 128);\n            self::compress($ctx, $ctx[3]);\n            $ctx[4] -= 128;\n            if ($ctx[4] > 128) {\n                throw new SodiumException('Failed to assert that buflen <= 128 bytes');\n            }\n            for ($i = $ctx[4]; $i--;) {\n                $ctx[3][$i] = $ctx[3][$i + 128];\n            }\n        }\n\n        self::increment_counter($ctx, $ctx[4]);\n        $ctx[2][0] = self::new64(0xffffffff, 0xffffffff);\n\n        for ($i = 256 - $ctx[4]; $i--;) {\n            \/** @var int $i *\/\n            $ctx[3][$i + $ctx[4]] = 0;\n        }\n\n        self::compress($ctx, $ctx[3]);\n\n        $i = (int) (($out->getSize() - 1) \/ 8);\n        for (; $i >= 0; --$i) {\n            self::store64($out, $i << 3, $ctx[0][$i]);\n        }\n        return $out;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray|null $key\n     * @param int $outlen\n     * @param SplFixedArray|null $salt\n     * @param SplFixedArray|null $personal\n     * @return SplFixedArray\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedAssignment\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function init(\n        $key = null,\n        $outlen = 64,\n        $salt = null,\n        $personal = null\n    ) {\n        self::pseudoConstructor();\n        $klen = 0;\n\n        if ($key !== null) {\n            if (count($key) > 64) {\n                throw new SodiumException('Invalid key size');\n            }\n            $klen = count($key);\n        }\n\n        if ($outlen > 64) {\n            throw new SodiumException('Invalid output size');\n        }\n\n        $ctx = self::context();\n\n        $p = new SplFixedArray(64);\n        \/\/ Zero our param buffer...\n        for ($i = 64; --$i;) {\n            $p[$i] = 0;\n        }\n\n        $p[0] = $outlen; \/\/ digest_length\n        $p[1] = $klen;   \/\/ key_length\n        $p[2] = 1;       \/\/ fanout\n        $p[3] = 1;       \/\/ depth\n\n        if ($salt instanceof SplFixedArray) {\n            \/\/ salt: [32] through [47]\n            for ($i = 0; $i < 16; ++$i) {\n                $p[32 + $i] = (int) $salt[$i];\n            }\n        }\n        if ($personal instanceof SplFixedArray) {\n            \/\/ personal: [48] through [63]\n            for ($i = 0; $i < 16; ++$i) {\n                $p[48 + $i] = (int) $personal[$i];\n            }\n        }\n\n        $ctx[0][0] = self::xor64(\n            $ctx[0][0],\n            self::load64($p, 0)\n        );\n\n        if ($salt instanceof SplFixedArray || $personal instanceof SplFixedArray) {\n            \/\/ We need to do what blake2b_init_param() does:\n            for ($i = 1; $i < 8; ++$i) {\n                $ctx[0][$i] = self::xor64(\n                    $ctx[0][$i],\n                    self::load64($p, $i << 3)\n                );\n            }\n        }\n\n        if ($klen > 0 && $key instanceof SplFixedArray) {\n            $block = new SplFixedArray(128);\n            for ($i = 128; $i--;) {\n                $block[$i] = 0;\n            }\n            for ($i = $klen; $i--;) {\n                $block[$i] = $key[$i];\n            }\n            self::update($ctx, $block, 128);\n            $ctx[4] = 128;\n        }\n\n        return $ctx;\n    }\n\n    \/**\n     * Convert a string into an SplFixedArray of integers\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $str\n     * @return SplFixedArray\n     * @psalm-suppress MixedArgumentTypeCoercion\n     *\/\n    public static function stringToSplFixedArray($str = '')\n    {\n        $values = unpack('C*', $str);\n        return SplFixedArray::fromArray(array_values($values));\n    }\n\n    \/**\n     * Convert an SplFixedArray of integers into a string\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $a\n     * @return string\n     *\/\n    public static function SplFixedArrayToString(SplFixedArray $a)\n    {\n        \/**\n         * @var array<int, string|int>\n         *\/\n        $arr = $a->toArray();\n        $c = $a->count();\n        array_unshift($arr, str_repeat('C', $c));\n        return (string) (call_user_func_array('pack', $arr));\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param SplFixedArray $ctx\n     * @return string\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     * @psalm-suppress MixedMethodCall\n     *\/\n    public static function contextToString(SplFixedArray $ctx)\n    {\n        $str = '';\n        \/** @var array<int, ParagonIE_Sodium_Core32_Int64> $ctxA *\/\n        $ctxA = $ctx[0]->toArray();\n\n        # uint64_t h[8];\n        for ($i = 0; $i < 8; ++$i) {\n            if (!($ctxA[$i] instanceof ParagonIE_Sodium_Core32_Int64)) {\n                throw new TypeError('Not an instance of Int64');\n            }\n            \/** @var ParagonIE_Sodium_Core32_Int64 $ctxAi *\/\n            $ctxAi = $ctxA[$i];\n            $str .= $ctxAi->toReverseString();\n        }\n\n        # uint64_t t[2];\n        # uint64_t f[2];\n        for ($i = 1; $i < 3; ++$i) {\n            \/** @var array<int, ParagonIE_Sodium_Core32_Int64> $ctxA *\/\n            $ctxA = $ctx[$i]->toArray();\n            \/** @var ParagonIE_Sodium_Core32_Int64 $ctxA1 *\/\n            $ctxA1 = $ctxA[0];\n            \/** @var ParagonIE_Sodium_Core32_Int64 $ctxA2 *\/\n            $ctxA2 = $ctxA[1];\n\n            $str .= $ctxA1->toReverseString();\n            $str .= $ctxA2->toReverseString();\n        }\n\n        # uint8_t buf[2 * 128];\n        $str .= self::SplFixedArrayToString($ctx[3]);\n\n        \/** @var int $ctx4 *\/\n        $ctx4 = $ctx[4];\n\n        # size_t buflen;\n        $str .= implode('', array(\n            self::intToChr($ctx4 & 0xff),\n            self::intToChr(($ctx4 >> 8) & 0xff),\n            self::intToChr(($ctx4 >> 16) & 0xff),\n            self::intToChr(($ctx4 >> 24) & 0xff),\n            \"\\x00\\x00\\x00\\x00\"\n            \/*\n            self::intToChr(($ctx4 >> 32) & 0xff),\n            self::intToChr(($ctx4 >> 40) & 0xff),\n            self::intToChr(($ctx4 >> 48) & 0xff),\n            self::intToChr(($ctx4 >> 56) & 0xff)\n            *\/\n        ));\n        # uint8_t last_node;\n        return $str . self::intToChr($ctx[5]) . str_repeat(\"\\x00\", 23);\n    }\n\n    \/**\n     * Creates an SplFixedArray containing other SplFixedArray elements, from\n     * a string (compatible with \\Sodium\\crypto_generichash_{init, update, final})\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $string\n     * @return SplFixedArray\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArrayAccess\n     * @psalm-suppress MixedArrayAssignment\n     *\/\n    public static function stringToContext($string)\n    {\n        $ctx = self::context();\n\n        # uint64_t h[8];\n        for ($i = 0; $i < 8; ++$i) {\n            $ctx[0][$i] = ParagonIE_Sodium_Core32_Int64::fromReverseString(\n                self::substr($string, (($i << 3) + 0), 8)\n            );\n        }\n\n        # uint64_t t[2];\n        # uint64_t f[2];\n        for ($i = 1; $i < 3; ++$i) {\n            $ctx[$i][1] = ParagonIE_Sodium_Core32_Int64::fromReverseString(\n                self::substr($string, 72 + (($i - 1) << 4), 8)\n            );\n            $ctx[$i][0] = ParagonIE_Sodium_Core32_Int64::fromReverseString(\n                self::substr($string, 64 + (($i - 1) << 4), 8)\n            );\n        }\n\n        # uint8_t buf[2 * 128];\n        $ctx[3] = self::stringToSplFixedArray(self::substr($string, 96, 256));\n\n        # uint8_t buf[2 * 128];\n        $int = 0;\n        for ($i = 0; $i < 8; ++$i) {\n            $int |= self::chrToInt($string[352 + $i]) << ($i << 3);\n        }\n        $ctx[4] = $int;\n\n        return $ctx;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/SecretStream\/State.php","ext":"php","size":3715,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\n\/**\n * Class ParagonIE_Sodium_Core32_SecretStream_State\n *\/\nclass ParagonIE_Sodium_Core32_SecretStream_State\n{\n    \/** @var string $key *\/\n    protected $key;\n\n    \/** @var int $counter *\/\n    protected $counter;\n\n    \/** @var string $nonce *\/\n    protected $nonce;\n\n    \/** @var string $_pad *\/\n    protected $_pad;\n\n    \/**\n     * ParagonIE_Sodium_Core32_SecretStream_State constructor.\n     * @param string $key\n     * @param string|null $nonce\n     *\/\n    public function __construct($key, $nonce = null)\n    {\n        $this->key = $key;\n        $this->counter = 1;\n        if (is_null($nonce)) {\n            $nonce = str_repeat(\"\\0\", 12);\n        }\n        $this->nonce = str_pad($nonce, 12, \"\\0\", STR_PAD_RIGHT);;\n        $this->_pad = str_repeat(\"\\0\", 4);\n    }\n\n    \/**\n     * @return self\n     *\/\n    public function counterReset()\n    {\n        $this->counter = 1;\n        $this->_pad = str_repeat(\"\\0\", 4);\n        return $this;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getKey()\n    {\n        return $this->key;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getCounter()\n    {\n        return ParagonIE_Sodium_Core32_Util::store32_le($this->counter);\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getNonce()\n    {\n        if (!is_string($this->nonce)) {\n            $this->nonce = str_repeat(\"\\0\", 12);\n        }\n        if (ParagonIE_Sodium_Core32_Util::strlen($this->nonce) !== 12) {\n            $this->nonce = str_pad($this->nonce, 12, \"\\0\", STR_PAD_RIGHT);\n        }\n        return $this->nonce;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function getCombinedNonce()\n    {\n        return $this->getCounter() .\n            ParagonIE_Sodium_Core32_Util::substr($this->getNonce(), 0, 8);\n    }\n\n    \/**\n     * @return self\n     *\/\n    public function incrementCounter()\n    {\n        ++$this->counter;\n        return $this;\n    }\n\n    \/**\n     * @return bool\n     *\/\n    public function needsRekey()\n    {\n        return ($this->counter & 0xffff) === 0;\n    }\n\n    \/**\n     * @param string $newKeyAndNonce\n     * @return self\n     *\/\n    public function rekey($newKeyAndNonce)\n    {\n        $this->key = ParagonIE_Sodium_Core32_Util::substr($newKeyAndNonce, 0, 32);\n        $this->nonce = str_pad(\n            ParagonIE_Sodium_Core32_Util::substr($newKeyAndNonce, 32),\n            12,\n            \"\\0\",\n            STR_PAD_RIGHT\n        );\n        return $this;\n    }\n\n    \/**\n     * @param string $str\n     * @return self\n     *\/\n    public function xorNonce($str)\n    {\n        $this->nonce = ParagonIE_Sodium_Core32_Util::xorStrings(\n            $this->getNonce(),\n            str_pad(\n                ParagonIE_Sodium_Core32_Util::substr($str, 0, 8),\n                12,\n                \"\\0\",\n                STR_PAD_RIGHT\n            )\n        );\n        return $this;\n    }\n\n    \/**\n     * @param string $string\n     * @return self\n     *\/\n    public static function fromString($string)\n    {\n        $state = new ParagonIE_Sodium_Core32_SecretStream_State(\n            ParagonIE_Sodium_Core32_Util::substr($string, 0, 32)\n        );\n        $state->counter = ParagonIE_Sodium_Core32_Util::load_4(\n            ParagonIE_Sodium_Core32_Util::substr($string, 32, 4)\n        );\n        $state->nonce = ParagonIE_Sodium_Core32_Util::substr($string, 36, 12);\n        $state->_pad = ParagonIE_Sodium_Core32_Util::substr($string, 48, 8);\n        return $state;\n    }\n\n    \/**\n     * @return string\n     *\/\n    public function toString()\n    {\n        return $this->key .\n            $this->getCounter() .\n            $this->nonce .\n            $this->_pad;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/ChaCha20.php","ext":"php","size":14570,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_ChaCha20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_ChaCha20\n *\/\nclass ParagonIE_Sodium_Core32_ChaCha20 extends ParagonIE_Sodium_Core32_Util\n{\n    \/**\n     * The ChaCha20 quarter round function. Works on four 32-bit integers.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Int32 $a\n     * @param ParagonIE_Sodium_Core32_Int32 $b\n     * @param ParagonIE_Sodium_Core32_Int32 $c\n     * @param ParagonIE_Sodium_Core32_Int32 $d\n     * @return array<int, ParagonIE_Sodium_Core32_Int32>\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function quarterRound(\n        ParagonIE_Sodium_Core32_Int32 $a,\n        ParagonIE_Sodium_Core32_Int32 $b,\n        ParagonIE_Sodium_Core32_Int32 $c,\n        ParagonIE_Sodium_Core32_Int32 $d\n    ) {\n        \/** @var ParagonIE_Sodium_Core32_Int32 $a *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $b *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $c *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $d *\/\n\n        # a = PLUS(a,b); d = ROTATE(XOR(d,a),16);\n        $a = $a->addInt32($b);\n        $d = $d->xorInt32($a)->rotateLeft(16);\n\n        # c = PLUS(c,d); b = ROTATE(XOR(b,c),12);\n        $c = $c->addInt32($d);\n        $b = $b->xorInt32($c)->rotateLeft(12);\n\n        # a = PLUS(a,b); d = ROTATE(XOR(d,a), 8);\n        $a = $a->addInt32($b);\n        $d = $d->xorInt32($a)->rotateLeft(8);\n\n        # c = PLUS(c,d); b = ROTATE(XOR(b,c), 7);\n        $c = $c->addInt32($d);\n        $b = $b->xorInt32($c)->rotateLeft(7);\n\n        return array($a, $b, $c, $d);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_ChaCha20_Ctx $ctx\n     * @param string $message\n     *\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function encryptBytes(\n        ParagonIE_Sodium_Core32_ChaCha20_Ctx $ctx,\n        $message = ''\n    ) {\n        $bytes = self::strlen($message);\n\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x0 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x1 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x2 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x3 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x4 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x5 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x6 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x7 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x8 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x9 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x10 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x11 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x12 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x13 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x14 *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x15 *\/\n\n        \/*\n        j0 = ctx->input[0];\n        j1 = ctx->input[1];\n        j2 = ctx->input[2];\n        j3 = ctx->input[3];\n        j4 = ctx->input[4];\n        j5 = ctx->input[5];\n        j6 = ctx->input[6];\n        j7 = ctx->input[7];\n        j8 = ctx->input[8];\n        j9 = ctx->input[9];\n        j10 = ctx->input[10];\n        j11 = ctx->input[11];\n        j12 = ctx->input[12];\n        j13 = ctx->input[13];\n        j14 = ctx->input[14];\n        j15 = ctx->input[15];\n        *\/\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j0 *\/\n        $j0  = $ctx[0];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j1 *\/\n        $j1  = $ctx[1];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j2 *\/\n        $j2  = $ctx[2];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j3 *\/\n        $j3  = $ctx[3];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j4 *\/\n        $j4  = $ctx[4];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j5 *\/\n        $j5  = $ctx[5];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j6 *\/\n        $j6  = $ctx[6];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j7 *\/\n        $j7  = $ctx[7];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j8 *\/\n        $j8  = $ctx[8];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j9 *\/\n        $j9  = $ctx[9];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j10 *\/\n        $j10 = $ctx[10];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j11 *\/\n        $j11 = $ctx[11];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j12 *\/\n        $j12 = $ctx[12];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j13 *\/\n        $j13 = $ctx[13];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j14 *\/\n        $j14 = $ctx[14];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $j15 *\/\n        $j15 = $ctx[15];\n\n        $c = '';\n        for (;;) {\n            if ($bytes < 64) {\n                $message .= str_repeat(\"\\x00\", 64 - $bytes);\n            }\n\n            $x0 =  clone $j0;\n            $x1 =  clone $j1;\n            $x2 =  clone $j2;\n            $x3 =  clone $j3;\n            $x4 =  clone $j4;\n            $x5 =  clone $j5;\n            $x6 =  clone $j6;\n            $x7 =  clone $j7;\n            $x8 =  clone $j8;\n            $x9 =  clone $j9;\n            $x10 = clone $j10;\n            $x11 = clone $j11;\n            $x12 = clone $j12;\n            $x13 = clone $j13;\n            $x14 = clone $j14;\n            $x15 = clone $j15;\n\n            # for (i = 20; i > 0; i -= 2) {\n            for ($i = 20; $i > 0; $i -= 2) {\n                # QUARTERROUND( x0,  x4,  x8,  x12)\n                list($x0, $x4, $x8, $x12) = self::quarterRound($x0, $x4, $x8, $x12);\n\n                # QUARTERROUND( x1,  x5,  x9,  x13)\n                list($x1, $x5, $x9, $x13) = self::quarterRound($x1, $x5, $x9, $x13);\n\n                # QUARTERROUND( x2,  x6,  x10,  x14)\n                list($x2, $x6, $x10, $x14) = self::quarterRound($x2, $x6, $x10, $x14);\n\n                # QUARTERROUND( x3,  x7,  x11,  x15)\n                list($x3, $x7, $x11, $x15) = self::quarterRound($x3, $x7, $x11, $x15);\n\n                # QUARTERROUND( x0,  x5,  x10,  x15)\n                list($x0, $x5, $x10, $x15) = self::quarterRound($x0, $x5, $x10, $x15);\n\n                # QUARTERROUND( x1,  x6,  x11,  x12)\n                list($x1, $x6, $x11, $x12) = self::quarterRound($x1, $x6, $x11, $x12);\n\n                # QUARTERROUND( x2,  x7,  x8,  x13)\n                list($x2, $x7, $x8, $x13) = self::quarterRound($x2, $x7, $x8, $x13);\n\n                # QUARTERROUND( x3,  x4,  x9,  x14)\n                list($x3, $x4, $x9, $x14) = self::quarterRound($x3, $x4, $x9, $x14);\n            }\n            \/*\n            x0 = PLUS(x0, j0);\n            x1 = PLUS(x1, j1);\n            x2 = PLUS(x2, j2);\n            x3 = PLUS(x3, j3);\n            x4 = PLUS(x4, j4);\n            x5 = PLUS(x5, j5);\n            x6 = PLUS(x6, j6);\n            x7 = PLUS(x7, j7);\n            x8 = PLUS(x8, j8);\n            x9 = PLUS(x9, j9);\n            x10 = PLUS(x10, j10);\n            x11 = PLUS(x11, j11);\n            x12 = PLUS(x12, j12);\n            x13 = PLUS(x13, j13);\n            x14 = PLUS(x14, j14);\n            x15 = PLUS(x15, j15);\n            *\/\n            $x0 = $x0->addInt32($j0);\n            $x1 = $x1->addInt32($j1);\n            $x2 = $x2->addInt32($j2);\n            $x3 = $x3->addInt32($j3);\n            $x4 = $x4->addInt32($j4);\n            $x5 = $x5->addInt32($j5);\n            $x6 = $x6->addInt32($j6);\n            $x7 = $x7->addInt32($j7);\n            $x8 = $x8->addInt32($j8);\n            $x9 = $x9->addInt32($j9);\n            $x10 = $x10->addInt32($j10);\n            $x11 = $x11->addInt32($j11);\n            $x12 = $x12->addInt32($j12);\n            $x13 = $x13->addInt32($j13);\n            $x14 = $x14->addInt32($j14);\n            $x15 = $x15->addInt32($j15);\n\n            \/*\n            x0 = XOR(x0, LOAD32_LE(m + 0));\n            x1 = XOR(x1, LOAD32_LE(m + 4));\n            x2 = XOR(x2, LOAD32_LE(m + 8));\n            x3 = XOR(x3, LOAD32_LE(m + 12));\n            x4 = XOR(x4, LOAD32_LE(m + 16));\n            x5 = XOR(x5, LOAD32_LE(m + 20));\n            x6 = XOR(x6, LOAD32_LE(m + 24));\n            x7 = XOR(x7, LOAD32_LE(m + 28));\n            x8 = XOR(x8, LOAD32_LE(m + 32));\n            x9 = XOR(x9, LOAD32_LE(m + 36));\n            x10 = XOR(x10, LOAD32_LE(m + 40));\n            x11 = XOR(x11, LOAD32_LE(m + 44));\n            x12 = XOR(x12, LOAD32_LE(m + 48));\n            x13 = XOR(x13, LOAD32_LE(m + 52));\n            x14 = XOR(x14, LOAD32_LE(m + 56));\n            x15 = XOR(x15, LOAD32_LE(m + 60));\n            *\/\n            $x0  =  $x0->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message,  0, 4)));\n            $x1  =  $x1->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message,  4, 4)));\n            $x2  =  $x2->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message,  8, 4)));\n            $x3  =  $x3->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 12, 4)));\n            $x4  =  $x4->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 16, 4)));\n            $x5  =  $x5->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 20, 4)));\n            $x6  =  $x6->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 24, 4)));\n            $x7  =  $x7->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 28, 4)));\n            $x8  =  $x8->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 32, 4)));\n            $x9  =  $x9->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 36, 4)));\n            $x10 = $x10->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 40, 4)));\n            $x11 = $x11->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 44, 4)));\n            $x12 = $x12->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 48, 4)));\n            $x13 = $x13->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 52, 4)));\n            $x14 = $x14->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 56, 4)));\n            $x15 = $x15->xorInt32(ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($message, 60, 4)));\n\n            \/*\n                j12 = PLUSONE(j12);\n                if (!j12) {\n                    j13 = PLUSONE(j13);\n                }\n             *\/\n            \/** @var ParagonIE_Sodium_Core32_Int32 $j12 *\/\n            $j12 = $j12->addInt(1);\n            if ($j12->limbs[0] === 0 && $j12->limbs[1] === 0) {\n                $j13 = $j13->addInt(1);\n            }\n\n            \/*\n            STORE32_LE(c + 0, x0);\n            STORE32_LE(c + 4, x1);\n            STORE32_LE(c + 8, x2);\n            STORE32_LE(c + 12, x3);\n            STORE32_LE(c + 16, x4);\n            STORE32_LE(c + 20, x5);\n            STORE32_LE(c + 24, x6);\n            STORE32_LE(c + 28, x7);\n            STORE32_LE(c + 32, x8);\n            STORE32_LE(c + 36, x9);\n            STORE32_LE(c + 40, x10);\n            STORE32_LE(c + 44, x11);\n            STORE32_LE(c + 48, x12);\n            STORE32_LE(c + 52, x13);\n            STORE32_LE(c + 56, x14);\n            STORE32_LE(c + 60, x15);\n            *\/\n\n            $block = $x0->toReverseString() .\n                $x1->toReverseString() .\n                $x2->toReverseString() .\n                $x3->toReverseString() .\n                $x4->toReverseString() .\n                $x5->toReverseString() .\n                $x6->toReverseString() .\n                $x7->toReverseString() .\n                $x8->toReverseString() .\n                $x9->toReverseString() .\n                $x10->toReverseString() .\n                $x11->toReverseString() .\n                $x12->toReverseString() .\n                $x13->toReverseString() .\n                $x14->toReverseString() .\n                $x15->toReverseString();\n\n            \/* Partial block *\/\n            if ($bytes < 64) {\n                $c .= self::substr($block, 0, $bytes);\n                break;\n            }\n\n            \/* Full block *\/\n            $c .= $block;\n            $bytes -= 64;\n            if ($bytes <= 0) {\n                break;\n            }\n            $message = self::substr($message, 64);\n        }\n        \/* end for(;;) loop *\/\n\n        $ctx[12] = $j12;\n        $ctx[13] = $j13;\n        return $c;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $len\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function stream($len = 64, $nonce = '', $key = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core32_ChaCha20_Ctx($key, $nonce),\n            str_repeat(\"\\x00\", $len)\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $len\n     * @param string $nonce\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ietfStream($len, $nonce = '', $key = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core32_ChaCha20_IetfCtx($key, $nonce),\n            str_repeat(\"\\x00\", $len)\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @param string $ic\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function ietfStreamXorIc($message, $nonce = '', $key = '', $ic = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core32_ChaCha20_IetfCtx($key, $nonce, $ic),\n            $message\n        );\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $message\n     * @param string $nonce\n     * @param string $key\n     * @param string $ic\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function streamXorIc($message, $nonce = '', $key = '', $ic = '')\n    {\n        return self::encryptBytes(\n            new ParagonIE_Sodium_Core32_ChaCha20_Ctx($key, $nonce, $ic),\n            $message\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/SipHash.php","ext":"php","size":6672,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_SipHash', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_SodiumCompat_Core32_SipHash\n *\n * Only uses 32-bit arithmetic, while the original SipHash used 64-bit integers\n *\/\nclass ParagonIE_Sodium_Core32_SipHash extends ParagonIE_Sodium_Core32_Util\n{\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param array<int, ParagonIE_Sodium_Core32_Int64> $v\n     * @return array<int, ParagonIE_Sodium_Core32_Int64>\n     *\/\n    public static function sipRound(array $v)\n    {\n        # v0 += v1;\n        $v[0] = $v[0]->addInt64($v[1]);\n\n        # v1 = ROTL(v1, 13);\n        $v[1] = $v[1]->rotateLeft(13);\n\n        #  v1 ^= v0;\n        $v[1] = $v[1]->xorInt64($v[0]);\n\n        #  v0=ROTL(v0,32);\n        $v[0] = $v[0]->rotateLeft(32);\n\n        # v2 += v3;\n        $v[2] = $v[2]->addInt64($v[3]);\n\n        # v3=ROTL(v3,16);\n        $v[3] = $v[3]->rotateLeft(16);\n\n        #  v3 ^= v2;\n        $v[3] = $v[3]->xorInt64($v[2]);\n\n        # v0 += v3;\n        $v[0] = $v[0]->addInt64($v[3]);\n\n        # v3=ROTL(v3,21);\n        $v[3] = $v[3]->rotateLeft(21);\n\n        # v3 ^= v0;\n        $v[3] = $v[3]->xorInt64($v[0]);\n\n        # v2 += v1;\n        $v[2] = $v[2]->addInt64($v[1]);\n\n        # v1=ROTL(v1,17);\n        $v[1] = $v[1]->rotateLeft(17);\n\n        #  v1 ^= v2;\n        $v[1] = $v[1]->xorInt64($v[2]);\n\n        # v2=ROTL(v2,32)\n        $v[2] = $v[2]->rotateLeft(32);\n\n        return $v;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $in\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sipHash24($in, $key)\n    {\n        $inlen = self::strlen($in);\n\n        # \/* \"somepseudorandomlygeneratedbytes\" *\/\n        # u64 v0 = 0x736f6d6570736575ULL;\n        # u64 v1 = 0x646f72616e646f6dULL;\n        # u64 v2 = 0x6c7967656e657261ULL;\n        # u64 v3 = 0x7465646279746573ULL;\n        $v = array(\n            new ParagonIE_Sodium_Core32_Int64(\n                array(0x736f, 0x6d65, 0x7073, 0x6575)\n            ),\n            new ParagonIE_Sodium_Core32_Int64(\n                array(0x646f, 0x7261, 0x6e64, 0x6f6d)\n            ),\n            new ParagonIE_Sodium_Core32_Int64(\n                array(0x6c79, 0x6765, 0x6e65, 0x7261)\n            ),\n            new ParagonIE_Sodium_Core32_Int64(\n                array(0x7465, 0x6462, 0x7974, 0x6573)\n            )\n        );\n\n        # u64 k0 = LOAD64_LE( k );\n        # u64 k1 = LOAD64_LE( k + 8 );\n        $k = array(\n            ParagonIE_Sodium_Core32_Int64::fromReverseString(\n                self::substr($key, 0, 8)\n            ),\n            ParagonIE_Sodium_Core32_Int64::fromReverseString(\n                self::substr($key, 8, 8)\n            )\n        );\n\n        # b = ( ( u64 )inlen ) << 56;\n        $b = new ParagonIE_Sodium_Core32_Int64(\n            array(($inlen << 8) & 0xffff, 0, 0, 0)\n        );\n\n        # v3 ^= k1;\n        $v[3] = $v[3]->xorInt64($k[1]);\n        # v2 ^= k0;\n        $v[2] = $v[2]->xorInt64($k[0]);\n        # v1 ^= k1;\n        $v[1] = $v[1]->xorInt64($k[1]);\n        # v0 ^= k0;\n        $v[0] = $v[0]->xorInt64($k[0]);\n\n        $left = $inlen;\n        # for ( ; in != end; in += 8 )\n        while ($left >= 8) {\n            # m = LOAD64_LE( in );\n            $m = ParagonIE_Sodium_Core32_Int64::fromReverseString(\n                self::substr($in, 0, 8)\n            );\n\n            # v3 ^= m;\n            $v[3] = $v[3]->xorInt64($m);\n\n            # SIPROUND;\n            # SIPROUND;\n            $v = self::sipRound($v);\n            $v = self::sipRound($v);\n\n            # v0 ^= m;\n            $v[0] = $v[0]->xorInt64($m);\n\n            $in = self::substr($in, 8);\n            $left -= 8;\n        }\n\n        # switch( left )\n        #  {\n        #     case 7: b |= ( ( u64 )in[ 6] )  << 48;\n        #     case 6: b |= ( ( u64 )in[ 5] )  << 40;\n        #     case 5: b |= ( ( u64 )in[ 4] )  << 32;\n        #     case 4: b |= ( ( u64 )in[ 3] )  << 24;\n        #     case 3: b |= ( ( u64 )in[ 2] )  << 16;\n        #     case 2: b |= ( ( u64 )in[ 1] )  <<  8;\n        #     case 1: b |= ( ( u64 )in[ 0] ); break;\n        #     case 0: break;\n        # }\n        switch ($left) {\n            case 7:\n                $b = $b->orInt64(\n                    ParagonIE_Sodium_Core32_Int64::fromInts(\n                        0, self::chrToInt($in[6]) << 16\n                    )\n                );\n            case 6:\n                $b = $b->orInt64(\n                    ParagonIE_Sodium_Core32_Int64::fromInts(\n                        0, self::chrToInt($in[5]) << 8\n                    )\n                );\n            case 5:\n                $b = $b->orInt64(\n                    ParagonIE_Sodium_Core32_Int64::fromInts(\n                        0, self::chrToInt($in[4])\n                    )\n                );\n            case 4:\n                $b = $b->orInt64(\n                    ParagonIE_Sodium_Core32_Int64::fromInts(\n                        self::chrToInt($in[3]) << 24, 0\n                    )\n                );\n            case 3:\n                $b = $b->orInt64(\n                    ParagonIE_Sodium_Core32_Int64::fromInts(\n                        self::chrToInt($in[2]) << 16, 0\n                    )\n                );\n            case 2:\n                $b = $b->orInt64(\n                    ParagonIE_Sodium_Core32_Int64::fromInts(\n                        self::chrToInt($in[1]) << 8, 0\n                    )\n                );\n            case 1:\n                $b = $b->orInt64(\n                    ParagonIE_Sodium_Core32_Int64::fromInts(\n                        self::chrToInt($in[0]), 0\n                    )\n                );\n            case 0:\n                break;\n        }\n\n        # v3 ^= b;\n        $v[3] = $v[3]->xorInt64($b);\n\n        # SIPROUND;\n        # SIPROUND;\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n\n        # v0 ^= b;\n        $v[0] = $v[0]->xorInt64($b);\n\n        \/\/ Flip the lower 8 bits of v2 which is ($v[4], $v[5]) in our implementation\n        # v2 ^= 0xff;\n        $v[2]->limbs[3] ^= 0xff;\n\n        # SIPROUND;\n        # SIPROUND;\n        # SIPROUND;\n        # SIPROUND;\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n        $v = self::sipRound($v);\n\n        # b = v0 ^ v1 ^ v2 ^ v3;\n        # STORE64_LE( out, b );\n        return $v[0]\n            ->xorInt64($v[1])\n            ->xorInt64($v[2])\n            ->xorInt64($v[3])\n            ->toReverseString();\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/HChaCha20.php","ext":"php","size":5356,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_HChaCha20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core_HChaCha20\n *\/\nclass ParagonIE_Sodium_Core32_HChaCha20 extends ParagonIE_Sodium_Core32_ChaCha20\n{\n    \/**\n     * @param string $in\n     * @param string $key\n     * @param string|null $c\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function hChaCha20($in = '', $key = '', $c = null)\n    {\n        $ctx = array();\n\n        if ($c === null) {\n            $ctx[0] = new ParagonIE_Sodium_Core32_Int32(array(0x6170, 0x7865));\n            $ctx[1] = new ParagonIE_Sodium_Core32_Int32(array(0x3320, 0x646e));\n            $ctx[2] = new ParagonIE_Sodium_Core32_Int32(array(0x7962, 0x2d32));\n            $ctx[3] = new ParagonIE_Sodium_Core32_Int32(array(0x6b20, 0x6574));\n        } else {\n            $ctx[0] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 0, 4));\n            $ctx[1] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 4, 4));\n            $ctx[2] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 8, 4));\n            $ctx[3] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 12, 4));\n        }\n        $ctx[4]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 0, 4));\n        $ctx[5]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 4, 4));\n        $ctx[6]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 8, 4));\n        $ctx[7]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 12, 4));\n        $ctx[8]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 16, 4));\n        $ctx[9]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 20, 4));\n        $ctx[10] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 24, 4));\n        $ctx[11] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 28, 4));\n        $ctx[12] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 0, 4));\n        $ctx[13] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 4, 4));\n        $ctx[14] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 8, 4));\n        $ctx[15] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 12, 4));\n\n        return self::hChaCha20Bytes($ctx);\n    }\n\n    \/**\n     * @param array $ctx\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function hChaCha20Bytes(array $ctx)\n    {\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x0 *\/\n        $x0  = $ctx[0];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x1 *\/\n        $x1  = $ctx[1];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x2 *\/\n        $x2  = $ctx[2];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x3 *\/\n        $x3  = $ctx[3];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x4 *\/\n        $x4  = $ctx[4];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x5 *\/\n        $x5  = $ctx[5];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x6 *\/\n        $x6  = $ctx[6];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x7 *\/\n        $x7  = $ctx[7];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x8 *\/\n        $x8  = $ctx[8];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x9 *\/\n        $x9  = $ctx[9];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x10 *\/\n        $x10 = $ctx[10];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x11 *\/\n        $x11 = $ctx[11];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x12 *\/\n        $x12 = $ctx[12];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x13 *\/\n        $x13 = $ctx[13];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x14 *\/\n        $x14 = $ctx[14];\n        \/** @var ParagonIE_Sodium_Core32_Int32 $x15 *\/\n        $x15 = $ctx[15];\n\n        for ($i = 0; $i < 10; ++$i) {\n            # QUARTERROUND( x0,  x4,  x8,  x12)\n            list($x0, $x4, $x8, $x12) = self::quarterRound($x0, $x4, $x8, $x12);\n\n            # QUARTERROUND( x1,  x5,  x9,  x13)\n            list($x1, $x5, $x9, $x13) = self::quarterRound($x1, $x5, $x9, $x13);\n\n            # QUARTERROUND( x2,  x6,  x10,  x14)\n            list($x2, $x6, $x10, $x14) = self::quarterRound($x2, $x6, $x10, $x14);\n\n            # QUARTERROUND( x3,  x7,  x11,  x15)\n            list($x3, $x7, $x11, $x15) = self::quarterRound($x3, $x7, $x11, $x15);\n\n            # QUARTERROUND( x0,  x5,  x10,  x15)\n            list($x0, $x5, $x10, $x15) = self::quarterRound($x0, $x5, $x10, $x15);\n\n            # QUARTERROUND( x1,  x6,  x11,  x12)\n            list($x1, $x6, $x11, $x12) = self::quarterRound($x1, $x6, $x11, $x12);\n\n            # QUARTERROUND( x2,  x7,  x8,  x13)\n            list($x2, $x7, $x8, $x13) = self::quarterRound($x2, $x7, $x8, $x13);\n\n            # QUARTERROUND( x3,  x4,  x9,  x14)\n            list($x3, $x4, $x9, $x14) = self::quarterRound($x3, $x4, $x9, $x14);\n        }\n\n        return $x0->toReverseString() .\n            $x1->toReverseString() .\n            $x2->toReverseString() .\n            $x3->toReverseString() .\n            $x12->toReverseString() .\n            $x13->toReverseString() .\n            $x14->toReverseString() .\n            $x15->toReverseString();\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Poly1305.php","ext":"php","size":1645,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Poly1305', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Poly1305\n *\/\nabstract class ParagonIE_Sodium_Core32_Poly1305 extends ParagonIE_Sodium_Core32_Util\n{\n    const BLOCK_SIZE = 16;\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $m\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function onetimeauth($m, $key)\n    {\n        if (self::strlen($key) < 32) {\n            throw new InvalidArgumentException(\n                'Key must be 32 bytes long.'\n            );\n        }\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State(\n            self::substr($key, 0, 32)\n        );\n        return $state\n            ->update($m)\n            ->finish();\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param string $mac\n     * @param string $m\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function onetimeauth_verify($mac, $m, $key)\n    {\n        if (self::strlen($key) < 32) {\n            throw new InvalidArgumentException(\n                'Key must be 32 bytes long.'\n            );\n        }\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State(\n            self::substr($key, 0, 32)\n        );\n        $calc = $state\n            ->update($m)\n            ->finish();\n        return self::verify_16($calc, $mac);\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519\/Fe.php","ext":"php","size":5557,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519_Fe', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519_Fe\n *\n * This represents a Field Element\n *\/\nclass ParagonIE_Sodium_Core32_Curve25519_Fe implements ArrayAccess\n{\n    \/**\n     * @var array<int, ParagonIE_Sodium_Core32_Int32>\n     *\/\n    protected $container = array();\n\n    \/**\n     * @var int\n     *\/\n    protected $size = 10;\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param array<int, ParagonIE_Sodium_Core32_Int32> $array\n     * @param bool $save_indexes\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromArray($array, $save_indexes = null)\n    {\n        $count = count($array);\n        if ($save_indexes) {\n            $keys = array_keys($array);\n        } else {\n            $keys = range(0, $count - 1);\n        }\n        $array = array_values($array);\n\n        $obj = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        if ($save_indexes) {\n            for ($i = 0; $i < $count; ++$i) {\n                $array[$i]->overflow = 0;\n                $obj->offsetSet($keys[$i], $array[$i]);\n            }\n        } else {\n            for ($i = 0; $i < $count; ++$i) {\n                if (!($array[$i] instanceof ParagonIE_Sodium_Core32_Int32)) {\n                    throw new TypeError('Expected ParagonIE_Sodium_Core32_Int32');\n                }\n                $array[$i]->overflow = 0;\n                $obj->offsetSet($i, $array[$i]);\n            }\n        }\n        return $obj;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param array<int, int> $array\n     * @param bool $save_indexes\n     * @return self\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function fromIntArray($array, $save_indexes = null)\n    {\n        $count = count($array);\n        if ($save_indexes) {\n            $keys = array_keys($array);\n        } else {\n            $keys = range(0, $count - 1);\n        }\n        $array = array_values($array);\n        $set = array();\n        \/** @var int $i *\/\n        \/** @var int $v *\/\n        foreach ($array as $i => $v) {\n            $set[$i] = ParagonIE_Sodium_Core32_Int32::fromInt($v);\n        }\n\n        $obj = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        if ($save_indexes) {\n            for ($i = 0; $i < $count; ++$i) {\n                $set[$i]->overflow = 0;\n                $obj->offsetSet($keys[$i], $set[$i]);\n            }\n        } else {\n            for ($i = 0; $i < $count; ++$i) {\n                $set[$i]->overflow = 0;\n                $obj->offsetSet($i, $set[$i]);\n            }\n        }\n        return $obj;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param mixed $offset\n     * @param mixed $value\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetSet($offset, $value)\n    {\n        if (!($value instanceof ParagonIE_Sodium_Core32_Int32)) {\n            throw new InvalidArgumentException('Expected an instance of ParagonIE_Sodium_Core32_Int32');\n        }\n        if (is_null($offset)) {\n            $this->container[] = $value;\n        } else {\n            ParagonIE_Sodium_Core32_Util::declareScalarType($offset, 'int', 1);\n            $this->container[(int) $offset] = $value;\n        }\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param mixed $offset\n     * @return bool\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetExists($offset)\n    {\n        return isset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param mixed $offset\n     * @return void\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetUnset($offset)\n    {\n        unset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param mixed $offset\n     * @return ParagonIE_Sodium_Core32_Int32\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetGet($offset)\n    {\n        if (!isset($this->container[$offset])) {\n            $this->container[(int) $offset] = new ParagonIE_Sodium_Core32_Int32();\n        }\n        \/** @var ParagonIE_Sodium_Core32_Int32 $get *\/\n        $get = $this->container[$offset];\n        return $get;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @return array\n     *\/\n    public function __debugInfo()\n    {\n        if (empty($this->container)) {\n            return array();\n        }\n        $c = array(\n            (int) ($this->container[0]->toInt()),\n            (int) ($this->container[1]->toInt()),\n            (int) ($this->container[2]->toInt()),\n            (int) ($this->container[3]->toInt()),\n            (int) ($this->container[4]->toInt()),\n            (int) ($this->container[5]->toInt()),\n            (int) ($this->container[6]->toInt()),\n            (int) ($this->container[7]->toInt()),\n            (int) ($this->container[8]->toInt()),\n            (int) ($this->container[9]->toInt())\n        );\n        return array(implode(', ', $c));\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519\/H.php","ext":"php","size":108856,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519_H', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519_H\n *\n * This just contains the constants in the ref10\/base.h file\n *\/\nclass ParagonIE_Sodium_Core32_Curve25519_H extends ParagonIE_Sodium_Core32_Util\n{\n    \/**\n     * See: libsodium's crypto_core\/curve25519\/ref10\/base.h\n     *\n     * @var array<int, array<int, array<int, array<int, int>>>> Basically, int[32][8][3][10]\n     *\/\n    protected static $base = array(\n        array(\n            array(\n                array(25967493, -14356035, 29566456, 3660896, -12694345, 4014787, 27544626, -11754271, -6079156, 2047605),\n                array(-12545711, 934262, -2722910, 3049990, -727428, 9406986, 12720692, 5043384, 19500929, -15469378),\n                array(-8738181, 4489570, 9688441, -14785194, 10184609, -12363380, 29287919, 11864899, -24514362, -4438546),\n            ),\n            array(\n                array(-12815894, -12976347, -21581243, 11784320, -25355658, -2750717, -11717903, -3814571, -358445, -10211303),\n                array(-21703237, 6903825, 27185491, 6451973, -29577724, -9554005, -15616551, 11189268, -26829678, -5319081),\n                array(26966642, 11152617, 32442495, 15396054, 14353839, -12752335, -3128826, -9541118, -15472047, -4166697),\n            ),\n            array(\n                array(15636291, -9688557, 24204773, -7912398, 616977, -16685262, 27787600, -14772189, 28944400, -1550024),\n                array(16568933, 4717097, -11556148, -1102322, 15682896, -11807043, 16354577, -11775962, 7689662, 11199574),\n                array(30464156, -5976125, -11779434, -15670865, 23220365, 15915852, 7512774, 10017326, -17749093, -9920357),\n            ),\n            array(\n                array(-17036878, 13921892, 10945806, -6033431, 27105052, -16084379, -28926210, 15006023, 3284568, -6276540),\n                array(23599295, -8306047, -11193664, -7687416, 13236774, 10506355, 7464579, 9656445, 13059162, 10374397),\n                array(7798556, 16710257, 3033922, 2874086, 28997861, 2835604, 32406664, -3839045, -641708, -101325),\n            ),\n            array(\n                array(10861363, 11473154, 27284546, 1981175, -30064349, 12577861, 32867885, 14515107, -15438304, 10819380),\n                array(4708026, 6336745, 20377586, 9066809, -11272109, 6594696, -25653668, 12483688, -12668491, 5581306),\n                array(19563160, 16186464, -29386857, 4097519, 10237984, -4348115, 28542350, 13850243, -23678021, -15815942),\n            ),\n            array(\n                array(-15371964, -12862754, 32573250, 4720197, -26436522, 5875511, -19188627, -15224819, -9818940, -12085777),\n                array(-8549212, 109983, 15149363, 2178705, 22900618, 4543417, 3044240, -15689887, 1762328, 14866737),\n                array(-18199695, -15951423, -10473290, 1707278, -17185920, 3916101, -28236412, 3959421, 27914454, 4383652),\n            ),\n            array(\n                array(5153746, 9909285, 1723747, -2777874, 30523605, 5516873, 19480852, 5230134, -23952439, -15175766),\n                array(-30269007, -3463509, 7665486, 10083793, 28475525, 1649722, 20654025, 16520125, 30598449, 7715701),\n                array(28881845, 14381568, 9657904, 3680757, -20181635, 7843316, -31400660, 1370708, 29794553, -1409300),\n            ),\n            array(\n                array(14499471, -2729599, -33191113, -4254652, 28494862, 14271267, 30290735, 10876454, -33154098, 2381726),\n                array(-7195431, -2655363, -14730155, 462251, -27724326, 3941372, -6236617, 3696005, -32300832, 15351955),\n                array(27431194, 8222322, 16448760, -3907995, -18707002, 11938355, -32961401, -2970515, 29551813, 10109425),\n            ),\n        ),\n        array(\n            array(\n                array(-13657040, -13155431, -31283750, 11777098, 21447386, 6519384, -2378284, -1627556, 10092783, -4764171),\n                array(27939166, 14210322, 4677035, 16277044, -22964462, -12398139, -32508754, 12005538, -17810127, 12803510),\n                array(17228999, -15661624, -1233527, 300140, -1224870, -11714777, 30364213, -9038194, 18016357, 4397660),\n            ),\n            array(\n                array(-10958843, -7690207, 4776341, -14954238, 27850028, -15602212, -26619106, 14544525, -17477504, 982639),\n                array(29253598, 15796703, -2863982, -9908884, 10057023, 3163536, 7332899, -4120128, -21047696, 9934963),\n                array(5793303, 16271923, -24131614, -10116404, 29188560, 1206517, -14747930, 4559895, -30123922, -10897950),\n            ),\n            array(\n                array(-27643952, -11493006, 16282657, -11036493, 28414021, -15012264, 24191034, 4541697, -13338309, 5500568),\n                array(12650548, -1497113, 9052871, 11355358, -17680037, -8400164, -17430592, 12264343, 10874051, 13524335),\n                array(25556948, -3045990, 714651, 2510400, 23394682, -10415330, 33119038, 5080568, -22528059, 5376628),\n            ),\n            array(\n                array(-26088264, -4011052, -17013699, -3537628, -6726793, 1920897, -22321305, -9447443, 4535768, 1569007),\n                array(-2255422, 14606630, -21692440, -8039818, 28430649, 8775819, -30494562, 3044290, 31848280, 12543772),\n                array(-22028579, 2943893, -31857513, 6777306, 13784462, -4292203, -27377195, -2062731, 7718482, 14474653),\n            ),\n            array(\n                array(2385315, 2454213, -22631320, 46603, -4437935, -15680415, 656965, -7236665, 24316168, -5253567),\n                array(13741529, 10911568, -33233417, -8603737, -20177830, -1033297, 33040651, -13424532, -20729456, 8321686),\n                array(21060490, -2212744, 15712757, -4336099, 1639040, 10656336, 23845965, -11874838, -9984458, 608372),\n            ),\n            array(\n                array(-13672732, -15087586, -10889693, -7557059, -6036909, 11305547, 1123968, -6780577, 27229399, 23887),\n                array(-23244140, -294205, -11744728, 14712571, -29465699, -2029617, 12797024, -6440308, -1633405, 16678954),\n                array(-29500620, 4770662, -16054387, 14001338, 7830047, 9564805, -1508144, -4795045, -17169265, 4904953),\n            ),\n            array(\n                array(24059557, 14617003, 19037157, -15039908, 19766093, -14906429, 5169211, 16191880, 2128236, -4326833),\n                array(-16981152, 4124966, -8540610, -10653797, 30336522, -14105247, -29806336, 916033, -6882542, -2986532),\n                array(-22630907, 12419372, -7134229, -7473371, -16478904, 16739175, 285431, 2763829, 15736322, 4143876),\n            ),\n            array(\n                array(2379352, 11839345, -4110402, -5988665, 11274298, 794957, 212801, -14594663, 23527084, -16458268),\n                array(33431127, -11130478, -17838966, -15626900, 8909499, 8376530, -32625340, 4087881, -15188911, -14416214),\n                array(1767683, 7197987, -13205226, -2022635, -13091350, 448826, 5799055, 4357868, -4774191, -16323038),\n            ),\n        ),\n        array(\n            array(\n                array(6721966, 13833823, -23523388, -1551314, 26354293, -11863321, 23365147, -3949732, 7390890, 2759800),\n                array(4409041, 2052381, 23373853, 10530217, 7676779, -12885954, 21302353, -4264057, 1244380, -12919645),\n                array(-4421239, 7169619, 4982368, -2957590, 30256825, -2777540, 14086413, 9208236, 15886429, 16489664),\n            ),\n            array(\n                array(1996075, 10375649, 14346367, 13311202, -6874135, -16438411, -13693198, 398369, -30606455, -712933),\n                array(-25307465, 9795880, -2777414, 14878809, -33531835, 14780363, 13348553, 12076947, -30836462, 5113182),\n                array(-17770784, 11797796, 31950843, 13929123, -25888302, 12288344, -30341101, -7336386, 13847711, 5387222),\n            ),\n            array(\n                array(-18582163, -3416217, 17824843, -2340966, 22744343, -10442611, 8763061, 3617786, -19600662, 10370991),\n                array(20246567, -14369378, 22358229, -543712, 18507283, -10413996, 14554437, -8746092, 32232924, 16763880),\n                array(9648505, 10094563, 26416693, 14745928, -30374318, -6472621, 11094161, 15689506, 3140038, -16510092),\n            ),\n            array(\n                array(-16160072, 5472695, 31895588, 4744994, 8823515, 10365685, -27224800, 9448613, -28774454, 366295),\n                array(19153450, 11523972, -11096490, -6503142, -24647631, 5420647, 28344573, 8041113, 719605, 11671788),\n                array(8678025, 2694440, -6808014, 2517372, 4964326, 11152271, -15432916, -15266516, 27000813, -10195553),\n            ),\n            array(\n                array(-15157904, 7134312, 8639287, -2814877, -7235688, 10421742, 564065, 5336097, 6750977, -14521026),\n                array(11836410, -3979488, 26297894, 16080799, 23455045, 15735944, 1695823, -8819122, 8169720, 16220347),\n                array(-18115838, 8653647, 17578566, -6092619, -8025777, -16012763, -11144307, -2627664, -5990708, -14166033),\n            ),\n            array(\n                array(-23308498, -10968312, 15213228, -10081214, -30853605, -11050004, 27884329, 2847284, 2655861, 1738395),\n                array(-27537433, -14253021, -25336301, -8002780, -9370762, 8129821, 21651608, -3239336, -19087449, -11005278),\n                array(1533110, 3437855, 23735889, 459276, 29970501, 11335377, 26030092, 5821408, 10478196, 8544890),\n            ),\n            array(\n                array(32173121, -16129311, 24896207, 3921497, 22579056, -3410854, 19270449, 12217473, 17789017, -3395995),\n                array(-30552961, -2228401, -15578829, -10147201, 13243889, 517024, 15479401, -3853233, 30460520, 1052596),\n                array(-11614875, 13323618, 32618793, 8175907, -15230173, 12596687, 27491595, -4612359, 3179268, -9478891),\n            ),\n            array(\n                array(31947069, -14366651, -4640583, -15339921, -15125977, -6039709, -14756777, -16411740, 19072640, -9511060),\n                array(11685058, 11822410, 3158003, -13952594, 33402194, -4165066, 5977896, -5215017, 473099, 5040608),\n                array(-20290863, 8198642, -27410132, 11602123, 1290375, -2799760, 28326862, 1721092, -19558642, -3131606),\n            ),\n        ),\n        array(\n            array(\n                array(7881532, 10687937, 7578723, 7738378, -18951012, -2553952, 21820786, 8076149, -27868496, 11538389),\n                array(-19935666, 3899861, 18283497, -6801568, -15728660, -11249211, 8754525, 7446702, -5676054, 5797016),\n                array(-11295600, -3793569, -15782110, -7964573, 12708869, -8456199, 2014099, -9050574, -2369172, -5877341),\n            ),\n            array(\n                array(-22472376, -11568741, -27682020, 1146375, 18956691, 16640559, 1192730, -3714199, 15123619, 10811505),\n                array(14352098, -3419715, -18942044, 10822655, 32750596, 4699007, -70363, 15776356, -28886779, -11974553),\n                array(-28241164, -8072475, -4978962, -5315317, 29416931, 1847569, -20654173, -16484855, 4714547, -9600655),\n            ),\n            array(\n                array(15200332, 8368572, 19679101, 15970074, -31872674, 1959451, 24611599, -4543832, -11745876, 12340220),\n                array(12876937, -10480056, 33134381, 6590940, -6307776, 14872440, 9613953, 8241152, 15370987, 9608631),\n                array(-4143277, -12014408, 8446281, -391603, 4407738, 13629032, -7724868, 15866074, -28210621, -8814099),\n            ),\n            array(\n                array(26660628, -15677655, 8393734, 358047, -7401291, 992988, -23904233, 858697, 20571223, 8420556),\n                array(14620715, 13067227, -15447274, 8264467, 14106269, 15080814, 33531827, 12516406, -21574435, -12476749),\n                array(236881, 10476226, 57258, -14677024, 6472998, 2466984, 17258519, 7256740, 8791136, 15069930),\n            ),\n            array(\n                array(1276410, -9371918, 22949635, -16322807, -23493039, -5702186, 14711875, 4874229, -30663140, -2331391),\n                array(5855666, 4990204, -13711848, 7294284, -7804282, 1924647, -1423175, -7912378, -33069337, 9234253),\n                array(20590503, -9018988, 31529744, -7352666, -2706834, 10650548, 31559055, -11609587, 18979186, 13396066),\n            ),\n            array(\n                array(24474287, 4968103, 22267082, 4407354, 24063882, -8325180, -18816887, 13594782, 33514650, 7021958),\n                array(-11566906, -6565505, -21365085, 15928892, -26158305, 4315421, -25948728, -3916677, -21480480, 12868082),\n                array(-28635013, 13504661, 19988037, -2132761, 21078225, 6443208, -21446107, 2244500, -12455797, -8089383),\n            ),\n            array(\n                array(-30595528, 13793479, -5852820, 319136, -25723172, -6263899, 33086546, 8957937, -15233648, 5540521),\n                array(-11630176, -11503902, -8119500, -7643073, 2620056, 1022908, -23710744, -1568984, -16128528, -14962807),\n                array(23152971, 775386, 27395463, 14006635, -9701118, 4649512, 1689819, 892185, -11513277, -15205948),\n            ),\n            array(\n                array(9770129, 9586738, 26496094, 4324120, 1556511, -3550024, 27453819, 4763127, -19179614, 5867134),\n                array(-32765025, 1927590, 31726409, -4753295, 23962434, -16019500, 27846559, 5931263, -29749703, -16108455),\n                array(27461885, -2977536, 22380810, 1815854, -23033753, -3031938, 7283490, -15148073, -19526700, 7734629),\n            ),\n        ),\n        array(\n            array(\n                array(-8010264, -9590817, -11120403, 6196038, 29344158, -13430885, 7585295, -3176626, 18549497, 15302069),\n                array(-32658337, -6171222, -7672793, -11051681, 6258878, 13504381, 10458790, -6418461, -8872242, 8424746),\n                array(24687205, 8613276, -30667046, -3233545, 1863892, -1830544, 19206234, 7134917, -11284482, -828919),\n            ),\n            array(\n                array(11334899, -9218022, 8025293, 12707519, 17523892, -10476071, 10243738, -14685461, -5066034, 16498837),\n                array(8911542, 6887158, -9584260, -6958590, 11145641, -9543680, 17303925, -14124238, 6536641, 10543906),\n                array(-28946384, 15479763, -17466835, 568876, -1497683, 11223454, -2669190, -16625574, -27235709, 8876771),\n            ),\n            array(\n                array(-25742899, -12566864, -15649966, -846607, -33026686, -796288, -33481822, 15824474, -604426, -9039817),\n                array(10330056, 70051, 7957388, -9002667, 9764902, 15609756, 27698697, -4890037, 1657394, 3084098),\n                array(10477963, -7470260, 12119566, -13250805, 29016247, -5365589, 31280319, 14396151, -30233575, 15272409),\n            ),\n            array(\n                array(-12288309, 3169463, 28813183, 16658753, 25116432, -5630466, -25173957, -12636138, -25014757, 1950504),\n                array(-26180358, 9489187, 11053416, -14746161, -31053720, 5825630, -8384306, -8767532, 15341279, 8373727),\n                array(28685821, 7759505, -14378516, -12002860, -31971820, 4079242, 298136, -10232602, -2878207, 15190420),\n            ),\n            array(\n                array(-32932876, 13806336, -14337485, -15794431, -24004620, 10940928, 8669718, 2742393, -26033313, -6875003),\n                array(-1580388, -11729417, -25979658, -11445023, -17411874, -10912854, 9291594, -16247779, -12154742, 6048605),\n                array(-30305315, 14843444, 1539301, 11864366, 20201677, 1900163, 13934231, 5128323, 11213262, 9168384),\n            ),\n            array(\n                array(-26280513, 11007847, 19408960, -940758, -18592965, -4328580, -5088060, -11105150, 20470157, -16398701),\n                array(-23136053, 9282192, 14855179, -15390078, -7362815, -14408560, -22783952, 14461608, 14042978, 5230683),\n                array(29969567, -2741594, -16711867, -8552442, 9175486, -2468974, 21556951, 3506042, -5933891, -12449708),\n            ),\n            array(\n                array(-3144746, 8744661, 19704003, 4581278, -20430686, 6830683, -21284170, 8971513, -28539189, 15326563),\n                array(-19464629, 10110288, -17262528, -3503892, -23500387, 1355669, -15523050, 15300988, -20514118, 9168260),\n                array(-5353335, 4488613, -23803248, 16314347, 7780487, -15638939, -28948358, 9601605, 33087103, -9011387),\n            ),\n            array(\n                array(-19443170, -15512900, -20797467, -12445323, -29824447, 10229461, -27444329, -15000531, -5996870, 15664672),\n                array(23294591, -16632613, -22650781, -8470978, 27844204, 11461195, 13099750, -2460356, 18151676, 13417686),\n                array(-24722913, -4176517, -31150679, 5988919, -26858785, 6685065, 1661597, -12551441, 15271676, -15452665),\n            ),\n        ),\n        array(\n            array(\n                array(11433042, -13228665, 8239631, -5279517, -1985436, -725718, -18698764, 2167544, -6921301, -13440182),\n                array(-31436171, 15575146, 30436815, 12192228, -22463353, 9395379, -9917708, -8638997, 12215110, 12028277),\n                array(14098400, 6555944, 23007258, 5757252, -15427832, -12950502, 30123440, 4617780, -16900089, -655628),\n            ),\n            array(\n                array(-4026201, -15240835, 11893168, 13718664, -14809462, 1847385, -15819999, 10154009, 23973261, -12684474),\n                array(-26531820, -3695990, -1908898, 2534301, -31870557, -16550355, 18341390, -11419951, 32013174, -10103539),\n                array(-25479301, 10876443, -11771086, -14625140, -12369567, 1838104, 21911214, 6354752, 4425632, -837822),\n            ),\n            array(\n                array(-10433389, -14612966, 22229858, -3091047, -13191166, 776729, -17415375, -12020462, 4725005, 14044970),\n                array(19268650, -7304421, 1555349, 8692754, -21474059, -9910664, 6347390, -1411784, -19522291, -16109756),\n                array(-24864089, 12986008, -10898878, -5558584, -11312371, -148526, 19541418, 8180106, 9282262, 10282508),\n            ),\n            array(\n                array(-26205082, 4428547, -8661196, -13194263, 4098402, -14165257, 15522535, 8372215, 5542595, -10702683),\n                array(-10562541, 14895633, 26814552, -16673850, -17480754, -2489360, -2781891, 6993761, -18093885, 10114655),\n                array(-20107055, -929418, 31422704, 10427861, -7110749, 6150669, -29091755, -11529146, 25953725, -106158),\n            ),\n            array(\n                array(-4234397, -8039292, -9119125, 3046000, 2101609, -12607294, 19390020, 6094296, -3315279, 12831125),\n                array(-15998678, 7578152, 5310217, 14408357, -33548620, -224739, 31575954, 6326196, 7381791, -2421839),\n                array(-20902779, 3296811, 24736065, -16328389, 18374254, 7318640, 6295303, 8082724, -15362489, 12339664),\n            ),\n            array(\n                array(27724736, 2291157, 6088201, -14184798, 1792727, 5857634, 13848414, 15768922, 25091167, 14856294),\n                array(-18866652, 8331043, 24373479, 8541013, -701998, -9269457, 12927300, -12695493, -22182473, -9012899),\n                array(-11423429, -5421590, 11632845, 3405020, 30536730, -11674039, -27260765, 13866390, 30146206, 9142070),\n            ),\n            array(\n                array(3924129, -15307516, -13817122, -10054960, 12291820, -668366, -27702774, 9326384, -8237858, 4171294),\n                array(-15921940, 16037937, 6713787, 16606682, -21612135, 2790944, 26396185, 3731949, 345228, -5462949),\n                array(-21327538, 13448259, 25284571, 1143661, 20614966, -8849387, 2031539, -12391231, -16253183, -13582083),\n            ),\n            array(\n                array(31016211, -16722429, 26371392, -14451233, -5027349, 14854137, 17477601, 3842657, 28012650, -16405420),\n                array(-5075835, 9368966, -8562079, -4600902, -15249953, 6970560, -9189873, 16292057, -8867157, 3507940),\n                array(29439664, 3537914, 23333589, 6997794, -17555561, -11018068, -15209202, -15051267, -9164929, 6580396),\n            ),\n        ),\n        array(\n            array(\n                array(-12185861, -7679788, 16438269, 10826160, -8696817, -6235611, 17860444, -9273846, -2095802, 9304567),\n                array(20714564, -4336911, 29088195, 7406487, 11426967, -5095705, 14792667, -14608617, 5289421, -477127),\n                array(-16665533, -10650790, -6160345, -13305760, 9192020, -1802462, 17271490, 12349094, 26939669, -3752294),\n            ),\n            array(\n                array(-12889898, 9373458, 31595848, 16374215, 21471720, 13221525, -27283495, -12348559, -3698806, 117887),\n                array(22263325, -6560050, 3984570, -11174646, -15114008, -566785, 28311253, 5358056, -23319780, 541964),\n                array(16259219, 3261970, 2309254, -15534474, -16885711, -4581916, 24134070, -16705829, -13337066, -13552195),\n            ),\n            array(\n                array(9378160, -13140186, -22845982, -12745264, 28198281, -7244098, -2399684, -717351, 690426, 14876244),\n                array(24977353, -314384, -8223969, -13465086, 28432343, -1176353, -13068804, -12297348, -22380984, 6618999),\n                array(-1538174, 11685646, 12944378, 13682314, -24389511, -14413193, 8044829, -13817328, 32239829, -5652762),\n            ),\n            array(\n                array(-18603066, 4762990, -926250, 8885304, -28412480, -3187315, 9781647, -10350059, 32779359, 5095274),\n                array(-33008130, -5214506, -32264887, -3685216, 9460461, -9327423, -24601656, 14506724, 21639561, -2630236),\n                array(-16400943, -13112215, 25239338, 15531969, 3987758, -4499318, -1289502, -6863535, 17874574, 558605),\n            ),\n            array(\n                array(-13600129, 10240081, 9171883, 16131053, -20869254, 9599700, 33499487, 5080151, 2085892, 5119761),\n                array(-22205145, -2519528, -16381601, 414691, -25019550, 2170430, 30634760, -8363614, -31999993, -5759884),\n                array(-6845704, 15791202, 8550074, -1312654, 29928809, -12092256, 27534430, -7192145, -22351378, 12961482),\n            ),\n            array(\n                array(-24492060, -9570771, 10368194, 11582341, -23397293, -2245287, 16533930, 8206996, -30194652, -5159638),\n                array(-11121496, -3382234, 2307366, 6362031, -135455, 8868177, -16835630, 7031275, 7589640, 8945490),\n                array(-32152748, 8917967, 6661220, -11677616, -1192060, -15793393, 7251489, -11182180, 24099109, -14456170),\n            ),\n            array(\n                array(5019558, -7907470, 4244127, -14714356, -26933272, 6453165, -19118182, -13289025, -6231896, -10280736),\n                array(10853594, 10721687, 26480089, 5861829, -22995819, 1972175, -1866647, -10557898, -3363451, -6441124),\n                array(-17002408, 5906790, 221599, -6563147, 7828208, -13248918, 24362661, -2008168, -13866408, 7421392),\n            ),\n            array(\n                array(8139927, -6546497, 32257646, -5890546, 30375719, 1886181, -21175108, 15441252, 28826358, -4123029),\n                array(6267086, 9695052, 7709135, -16603597, -32869068, -1886135, 14795160, -7840124, 13746021, -1742048),\n                array(28584902, 7787108, -6732942, -15050729, 22846041, -7571236, -3181936, -363524, 4771362, -8419958),\n            ),\n        ),\n        array(\n            array(\n                array(24949256, 6376279, -27466481, -8174608, -18646154, -9930606, 33543569, -12141695, 3569627, 11342593),\n                array(26514989, 4740088, 27912651, 3697550, 19331575, -11472339, 6809886, 4608608, 7325975, -14801071),\n                array(-11618399, -14554430, -24321212, 7655128, -1369274, 5214312, -27400540, 10258390, -17646694, -8186692),\n            ),\n            array(\n                array(11431204, 15823007, 26570245, 14329124, 18029990, 4796082, -31446179, 15580664, 9280358, -3973687),\n                array(-160783, -10326257, -22855316, -4304997, -20861367, -13621002, -32810901, -11181622, -15545091, 4387441),\n                array(-20799378, 12194512, 3937617, -5805892, -27154820, 9340370, -24513992, 8548137, 20617071, -7482001),\n            ),\n            array(\n                array(-938825, -3930586, -8714311, 16124718, 24603125, -6225393, -13775352, -11875822, 24345683, 10325460),\n                array(-19855277, -1568885, -22202708, 8714034, 14007766, 6928528, 16318175, -1010689, 4766743, 3552007),\n                array(-21751364, -16730916, 1351763, -803421, -4009670, 3950935, 3217514, 14481909, 10988822, -3994762),\n            ),\n            array(\n                array(15564307, -14311570, 3101243, 5684148, 30446780, -8051356, 12677127, -6505343, -8295852, 13296005),\n                array(-9442290, 6624296, -30298964, -11913677, -4670981, -2057379, 31521204, 9614054, -30000824, 12074674),\n                array(4771191, -135239, 14290749, -13089852, 27992298, 14998318, -1413936, -1556716, 29832613, -16391035),\n            ),\n            array(\n                array(7064884, -7541174, -19161962, -5067537, -18891269, -2912736, 25825242, 5293297, -27122660, 13101590),\n                array(-2298563, 2439670, -7466610, 1719965, -27267541, -16328445, 32512469, -5317593, -30356070, -4190957),\n                array(-30006540, 10162316, -33180176, 3981723, -16482138, -13070044, 14413974, 9515896, 19568978, 9628812),\n            ),\n            array(\n                array(33053803, 199357, 15894591, 1583059, 27380243, -4580435, -17838894, -6106839, -6291786, 3437740),\n                array(-18978877, 3884493, 19469877, 12726490, 15913552, 13614290, -22961733, 70104, 7463304, 4176122),\n                array(-27124001, 10659917, 11482427, -16070381, 12771467, -6635117, -32719404, -5322751, 24216882, 5944158),\n            ),\n            array(\n                array(8894125, 7450974, -2664149, -9765752, -28080517, -12389115, 19345746, 14680796, 11632993, 5847885),\n                array(26942781, -2315317, 9129564, -4906607, 26024105, 11769399, -11518837, 6367194, -9727230, 4782140),\n                array(19916461, -4828410, -22910704, -11414391, 25606324, -5972441, 33253853, 8220911, 6358847, -1873857),\n            ),\n            array(\n                array(801428, -2081702, 16569428, 11065167, 29875704, 96627, 7908388, -4480480, -13538503, 1387155),\n                array(19646058, 5720633, -11416706, 12814209, 11607948, 12749789, 14147075, 15156355, -21866831, 11835260),\n                array(19299512, 1155910, 28703737, 14890794, 2925026, 7269399, 26121523, 15467869, -26560550, 5052483),\n            ),\n        ),\n        array(\n            array(\n                array(-3017432, 10058206, 1980837, 3964243, 22160966, 12322533, -6431123, -12618185, 12228557, -7003677),\n                array(32944382, 14922211, -22844894, 5188528, 21913450, -8719943, 4001465, 13238564, -6114803, 8653815),\n                array(22865569, -4652735, 27603668, -12545395, 14348958, 8234005, 24808405, 5719875, 28483275, 2841751),\n            ),\n            array(\n                array(-16420968, -1113305, -327719, -12107856, 21886282, -15552774, -1887966, -315658, 19932058, -12739203),\n                array(-11656086, 10087521, -8864888, -5536143, -19278573, -3055912, 3999228, 13239134, -4777469, -13910208),\n                array(1382174, -11694719, 17266790, 9194690, -13324356, 9720081, 20403944, 11284705, -14013818, 3093230),\n            ),\n            array(\n                array(16650921, -11037932, -1064178, 1570629, -8329746, 7352753, -302424, 16271225, -24049421, -6691850),\n                array(-21911077, -5927941, -4611316, -5560156, -31744103, -10785293, 24123614, 15193618, -21652117, -16739389),\n                array(-9935934, -4289447, -25279823, 4372842, 2087473, 10399484, 31870908, 14690798, 17361620, 11864968),\n            ),\n            array(\n                array(-11307610, 6210372, 13206574, 5806320, -29017692, -13967200, -12331205, -7486601, -25578460, -16240689),\n                array(14668462, -12270235, 26039039, 15305210, 25515617, 4542480, 10453892, 6577524, 9145645, -6443880),\n                array(5974874, 3053895, -9433049, -10385191, -31865124, 3225009, -7972642, 3936128, -5652273, -3050304),\n            ),\n            array(\n                array(30625386, -4729400, -25555961, -12792866, -20484575, 7695099, 17097188, -16303496, -27999779, 1803632),\n                array(-3553091, 9865099, -5228566, 4272701, -5673832, -16689700, 14911344, 12196514, -21405489, 7047412),\n                array(20093277, 9920966, -11138194, -5343857, 13161587, 12044805, -32856851, 4124601, -32343828, -10257566),\n            ),\n            array(\n                array(-20788824, 14084654, -13531713, 7842147, 19119038, -13822605, 4752377, -8714640, -21679658, 2288038),\n                array(-26819236, -3283715, 29965059, 3039786, -14473765, 2540457, 29457502, 14625692, -24819617, 12570232),\n                array(-1063558, -11551823, 16920318, 12494842, 1278292, -5869109, -21159943, -3498680, -11974704, 4724943),\n            ),\n            array(\n                array(17960970, -11775534, -4140968, -9702530, -8876562, -1410617, -12907383, -8659932, -29576300, 1903856),\n                array(23134274, -14279132, -10681997, -1611936, 20684485, 15770816, -12989750, 3190296, 26955097, 14109738),\n                array(15308788, 5320727, -30113809, -14318877, 22902008, 7767164, 29425325, -11277562, 31960942, 11934971),\n            ),\n            array(\n                array(-27395711, 8435796, 4109644, 12222639, -24627868, 14818669, 20638173, 4875028, 10491392, 1379718),\n                array(-13159415, 9197841, 3875503, -8936108, -1383712, -5879801, 33518459, 16176658, 21432314, 12180697),\n                array(-11787308, 11500838, 13787581, -13832590, -22430679, 10140205, 1465425, 12689540, -10301319, -13872883),\n            ),\n        ),\n        array(\n            array(\n                array(5414091, -15386041, -21007664, 9643570, 12834970, 1186149, -2622916, -1342231, 26128231, 6032912),\n                array(-26337395, -13766162, 32496025, -13653919, 17847801, -12669156, 3604025, 8316894, -25875034, -10437358),\n                array(3296484, 6223048, 24680646, -12246460, -23052020, 5903205, -8862297, -4639164, 12376617, 3188849),\n            ),\n            array(\n                array(29190488, -14659046, 27549113, -1183516, 3520066, -10697301, 32049515, -7309113, -16109234, -9852307),\n                array(-14744486, -9309156, 735818, -598978, -20407687, -5057904, 25246078, -15795669, 18640741, -960977),\n                array(-6928835, -16430795, 10361374, 5642961, 4910474, 12345252, -31638386, -494430, 10530747, 1053335),\n            ),\n            array(\n                array(-29265967, -14186805, -13538216, -12117373, -19457059, -10655384, -31462369, -2948985, 24018831, 15026644),\n                array(-22592535, -3145277, -2289276, 5953843, -13440189, 9425631, 25310643, 13003497, -2314791, -15145616),\n                array(-27419985, -603321, -8043984, -1669117, -26092265, 13987819, -27297622, 187899, -23166419, -2531735),\n            ),\n            array(\n                array(-21744398, -13810475, 1844840, 5021428, -10434399, -15911473, 9716667, 16266922, -5070217, 726099),\n                array(29370922, -6053998, 7334071, -15342259, 9385287, 2247707, -13661962, -4839461, 30007388, -15823341),\n                array(-936379, 16086691, 23751945, -543318, -1167538, -5189036, 9137109, 730663, 9835848, 4555336),\n            ),\n            array(\n                array(-23376435, 1410446, -22253753, -12899614, 30867635, 15826977, 17693930, 544696, -11985298, 12422646),\n                array(31117226, -12215734, -13502838, 6561947, -9876867, -12757670, -5118685, -4096706, 29120153, 13924425),\n                array(-17400879, -14233209, 19675799, -2734756, -11006962, -5858820, -9383939, -11317700, 7240931, -237388),\n            ),\n            array(\n                array(-31361739, -11346780, -15007447, -5856218, -22453340, -12152771, 1222336, 4389483, 3293637, -15551743),\n                array(-16684801, -14444245, 11038544, 11054958, -13801175, -3338533, -24319580, 7733547, 12796905, -6335822),\n                array(-8759414, -10817836, -25418864, 10783769, -30615557, -9746811, -28253339, 3647836, 3222231, -11160462),\n            ),\n            array(\n                array(18606113, 1693100, -25448386, -15170272, 4112353, 10045021, 23603893, -2048234, -7550776, 2484985),\n                array(9255317, -3131197, -12156162, -1004256, 13098013, -9214866, 16377220, -2102812, -19802075, -3034702),\n                array(-22729289, 7496160, -5742199, 11329249, 19991973, -3347502, -31718148, 9936966, -30097688, -10618797),\n            ),\n            array(\n                array(21878590, -5001297, 4338336, 13643897, -3036865, 13160960, 19708896, 5415497, -7360503, -4109293),\n                array(27736861, 10103576, 12500508, 8502413, -3413016, -9633558, 10436918, -1550276, -23659143, -8132100),\n                array(19492550, -12104365, -29681976, -852630, -3208171, 12403437, 30066266, 8367329, 13243957, 8709688),\n            ),\n        ),\n        array(\n            array(\n                array(12015105, 2801261, 28198131, 10151021, 24818120, -4743133, -11194191, -5645734, 5150968, 7274186),\n                array(2831366, -12492146, 1478975, 6122054, 23825128, -12733586, 31097299, 6083058, 31021603, -9793610),\n                array(-2529932, -2229646, 445613, 10720828, -13849527, -11505937, -23507731, 16354465, 15067285, -14147707),\n            ),\n            array(\n                array(7840942, 14037873, -33364863, 15934016, -728213, -3642706, 21403988, 1057586, -19379462, -12403220),\n                array(915865, -16469274, 15608285, -8789130, -24357026, 6060030, -17371319, 8410997, -7220461, 16527025),\n                array(32922597, -556987, 20336074, -16184568, 10903705, -5384487, 16957574, 52992, 23834301, 6588044),\n            ),\n            array(\n                array(32752030, 11232950, 3381995, -8714866, 22652988, -10744103, 17159699, 16689107, -20314580, -1305992),\n                array(-4689649, 9166776, -25710296, -10847306, 11576752, 12733943, 7924251, -2752281, 1976123, -7249027),\n                array(21251222, 16309901, -2983015, -6783122, 30810597, 12967303, 156041, -3371252, 12331345, -8237197),\n            ),\n            array(\n                array(8651614, -4477032, -16085636, -4996994, 13002507, 2950805, 29054427, -5106970, 10008136, -4667901),\n                array(31486080, 15114593, -14261250, 12951354, 14369431, -7387845, 16347321, -13662089, 8684155, -10532952),\n                array(19443825, 11385320, 24468943, -9659068, -23919258, 2187569, -26263207, -6086921, 31316348, 14219878),\n            ),\n            array(\n                array(-28594490, 1193785, 32245219, 11392485, 31092169, 15722801, 27146014, 6992409, 29126555, 9207390),\n                array(32382935, 1110093, 18477781, 11028262, -27411763, -7548111, -4980517, 10843782, -7957600, -14435730),\n                array(2814918, 7836403, 27519878, -7868156, -20894015, -11553689, -21494559, 8550130, 28346258, 1994730),\n            ),\n            array(\n                array(-19578299, 8085545, -14000519, -3948622, 2785838, -16231307, -19516951, 7174894, 22628102, 8115180),\n                array(-30405132, 955511, -11133838, -15078069, -32447087, -13278079, -25651578, 3317160, -9943017, 930272),\n                array(-15303681, -6833769, 28856490, 1357446, 23421993, 1057177, 24091212, -1388970, -22765376, -10650715),\n            ),\n            array(\n                array(-22751231, -5303997, -12907607, -12768866, -15811511, -7797053, -14839018, -16554220, -1867018, 8398970),\n                array(-31969310, 2106403, -4736360, 1362501, 12813763, 16200670, 22981545, -6291273, 18009408, -15772772),\n                array(-17220923, -9545221, -27784654, 14166835, 29815394, 7444469, 29551787, -3727419, 19288549, 1325865),\n            ),\n            array(\n                array(15100157, -15835752, -23923978, -1005098, -26450192, 15509408, 12376730, -3479146, 33166107, -8042750),\n                array(20909231, 13023121, -9209752, 16251778, -5778415, -8094914, 12412151, 10018715, 2213263, -13878373),\n                array(32529814, -11074689, 30361439, -16689753, -9135940, 1513226, 22922121, 6382134, -5766928, 8371348),\n            ),\n        ),\n        array(\n            array(\n                array(9923462, 11271500, 12616794, 3544722, -29998368, -1721626, 12891687, -8193132, -26442943, 10486144),\n                array(-22597207, -7012665, 8587003, -8257861, 4084309, -12970062, 361726, 2610596, -23921530, -11455195),\n                array(5408411, -1136691, -4969122, 10561668, 24145918, 14240566, 31319731, -4235541, 19985175, -3436086),\n            ),\n            array(\n                array(-13994457, 16616821, 14549246, 3341099, 32155958, 13648976, -17577068, 8849297, 65030, 8370684),\n                array(-8320926, -12049626, 31204563, 5839400, -20627288, -1057277, -19442942, 6922164, 12743482, -9800518),\n                array(-2361371, 12678785, 28815050, 4759974, -23893047, 4884717, 23783145, 11038569, 18800704, 255233),\n            ),\n            array(\n                array(-5269658, -1773886, 13957886, 7990715, 23132995, 728773, 13393847, 9066957, 19258688, -14753793),\n                array(-2936654, -10827535, -10432089, 14516793, -3640786, 4372541, -31934921, 2209390, -1524053, 2055794),\n                array(580882, 16705327, 5468415, -2683018, -30926419, -14696000, -7203346, -8994389, -30021019, 7394435),\n            ),\n            array(\n                array(23838809, 1822728, -15738443, 15242727, 8318092, -3733104, -21672180, -3492205, -4821741, 14799921),\n                array(13345610, 9759151, 3371034, -16137791, 16353039, 8577942, 31129804, 13496856, -9056018, 7402518),\n                array(2286874, -4435931, -20042458, -2008336, -13696227, 5038122, 11006906, -15760352, 8205061, 1607563),\n            ),\n            array(\n                array(14414086, -8002132, 3331830, -3208217, 22249151, -5594188, 18364661, -2906958, 30019587, -9029278),\n                array(-27688051, 1585953, -10775053, 931069, -29120221, -11002319, -14410829, 12029093, 9944378, 8024),\n                array(4368715, -3709630, 29874200, -15022983, -20230386, -11410704, -16114594, -999085, -8142388, 5640030),\n            ),\n            array(\n                array(10299610, 13746483, 11661824, 16234854, 7630238, 5998374, 9809887, -16694564, 15219798, -14327783),\n                array(27425505, -5719081, 3055006, 10660664, 23458024, 595578, -15398605, -1173195, -18342183, 9742717),\n                array(6744077, 2427284, 26042789, 2720740, -847906, 1118974, 32324614, 7406442, 12420155, 1994844),\n            ),\n            array(\n                array(14012521, -5024720, -18384453, -9578469, -26485342, -3936439, -13033478, -10909803, 24319929, -6446333),\n                array(16412690, -4507367, 10772641, 15929391, -17068788, -4658621, 10555945, -10484049, -30102368, -4739048),\n                array(22397382, -7767684, -9293161, -12792868, 17166287, -9755136, -27333065, 6199366, 21880021, -12250760),\n            ),\n            array(\n                array(-4283307, 5368523, -31117018, 8163389, -30323063, 3209128, 16557151, 8890729, 8840445, 4957760),\n                array(-15447727, 709327, -6919446, -10870178, -29777922, 6522332, -21720181, 12130072, -14796503, 5005757),\n                array(-2114751, -14308128, 23019042, 15765735, -25269683, 6002752, 10183197, -13239326, -16395286, -2176112),\n            ),\n        ),\n        array(\n            array(\n                array(-19025756, 1632005, 13466291, -7995100, -23640451, 16573537, -32013908, -3057104, 22208662, 2000468),\n                array(3065073, -1412761, -25598674, -361432, -17683065, -5703415, -8164212, 11248527, -3691214, -7414184),\n                array(10379208, -6045554, 8877319, 1473647, -29291284, -12507580, 16690915, 2553332, -3132688, 16400289),\n            ),\n            array(\n                array(15716668, 1254266, -18472690, 7446274, -8448918, 6344164, -22097271, -7285580, 26894937, 9132066),\n                array(24158887, 12938817, 11085297, -8177598, -28063478, -4457083, -30576463, 64452, -6817084, -2692882),\n                array(13488534, 7794716, 22236231, 5989356, 25426474, -12578208, 2350710, -3418511, -4688006, 2364226),\n            ),\n            array(\n                array(16335052, 9132434, 25640582, 6678888, 1725628, 8517937, -11807024, -11697457, 15445875, -7798101),\n                array(29004207, -7867081, 28661402, -640412, -12794003, -7943086, 31863255, -4135540, -278050, -15759279),\n                array(-6122061, -14866665, -28614905, 14569919, -10857999, -3591829, 10343412, -6976290, -29828287, -10815811),\n            ),\n            array(\n                array(27081650, 3463984, 14099042, -4517604, 1616303, -6205604, 29542636, 15372179, 17293797, 960709),\n                array(20263915, 11434237, -5765435, 11236810, 13505955, -10857102, -16111345, 6493122, -19384511, 7639714),\n                array(-2830798, -14839232, 25403038, -8215196, -8317012, -16173699, 18006287, -16043750, 29994677, -15808121),\n            ),\n            array(\n                array(9769828, 5202651, -24157398, -13631392, -28051003, -11561624, -24613141, -13860782, -31184575, 709464),\n                array(12286395, 13076066, -21775189, -1176622, -25003198, 4057652, -32018128, -8890874, 16102007, 13205847),\n                array(13733362, 5599946, 10557076, 3195751, -5557991, 8536970, -25540170, 8525972, 10151379, 10394400),\n            ),\n            array(\n                array(4024660, -16137551, 22436262, 12276534, -9099015, -2686099, 19698229, 11743039, -33302334, 8934414),\n                array(-15879800, -4525240, -8580747, -2934061, 14634845, -698278, -9449077, 3137094, -11536886, 11721158),\n                array(17555939, -5013938, 8268606, 2331751, -22738815, 9761013, 9319229, 8835153, -9205489, -1280045),\n            ),\n            array(\n                array(-461409, -7830014, 20614118, 16688288, -7514766, -4807119, 22300304, 505429, 6108462, -6183415),\n                array(-5070281, 12367917, -30663534, 3234473, 32617080, -8422642, 29880583, -13483331, -26898490, -7867459),\n                array(-31975283, 5726539, 26934134, 10237677, -3173717, -605053, 24199304, 3795095, 7592688, -14992079),\n            ),\n            array(\n                array(21594432, -14964228, 17466408, -4077222, 32537084, 2739898, 6407723, 12018833, -28256052, 4298412),\n                array(-20650503, -11961496, -27236275, 570498, 3767144, -1717540, 13891942, -1569194, 13717174, 10805743),\n                array(-14676630, -15644296, 15287174, 11927123, 24177847, -8175568, -796431, 14860609, -26938930, -5863836),\n            ),\n        ),\n        array(\n            array(\n                array(12962541, 5311799, -10060768, 11658280, 18855286, -7954201, 13286263, -12808704, -4381056, 9882022),\n                array(18512079, 11319350, -20123124, 15090309, 18818594, 5271736, -22727904, 3666879, -23967430, -3299429),\n                array(-6789020, -3146043, 16192429, 13241070, 15898607, -14206114, -10084880, -6661110, -2403099, 5276065),\n            ),\n            array(\n                array(30169808, -5317648, 26306206, -11750859, 27814964, 7069267, 7152851, 3684982, 1449224, 13082861),\n                array(10342826, 3098505, 2119311, 193222, 25702612, 12233820, 23697382, 15056736, -21016438, -8202000),\n                array(-33150110, 3261608, 22745853, 7948688, 19370557, -15177665, -26171976, 6482814, -10300080, -11060101),\n            ),\n            array(\n                array(32869458, -5408545, 25609743, 15678670, -10687769, -15471071, 26112421, 2521008, -22664288, 6904815),\n                array(29506923, 4457497, 3377935, -9796444, -30510046, 12935080, 1561737, 3841096, -29003639, -6657642),\n                array(10340844, -6630377, -18656632, -2278430, 12621151, -13339055, 30878497, -11824370, -25584551, 5181966),\n            ),\n            array(\n                array(25940115, -12658025, 17324188, -10307374, -8671468, 15029094, 24396252, -16450922, -2322852, -12388574),\n                array(-21765684, 9916823, -1300409, 4079498, -1028346, 11909559, 1782390, 12641087, 20603771, -6561742),\n                array(-18882287, -11673380, 24849422, 11501709, 13161720, -4768874, 1925523, 11914390, 4662781, 7820689),\n            ),\n            array(\n                array(12241050, -425982, 8132691, 9393934, 32846760, -1599620, 29749456, 12172924, 16136752, 15264020),\n                array(-10349955, -14680563, -8211979, 2330220, -17662549, -14545780, 10658213, 6671822, 19012087, 3772772),\n                array(3753511, -3421066, 10617074, 2028709, 14841030, -6721664, 28718732, -15762884, 20527771, 12988982),\n            ),\n            array(\n                array(-14822485, -5797269, -3707987, 12689773, -898983, -10914866, -24183046, -10564943, 3299665, -12424953),\n                array(-16777703, -15253301, -9642417, 4978983, 3308785, 8755439, 6943197, 6461331, -25583147, 8991218),\n                array(-17226263, 1816362, -1673288, -6086439, 31783888, -8175991, -32948145, 7417950, -30242287, 1507265),\n            ),\n            array(\n                array(29692663, 6829891, -10498800, 4334896, 20945975, -11906496, -28887608, 8209391, 14606362, -10647073),\n                array(-3481570, 8707081, 32188102, 5672294, 22096700, 1711240, -33020695, 9761487, 4170404, -2085325),\n                array(-11587470, 14855945, -4127778, -1531857, -26649089, 15084046, 22186522, 16002000, -14276837, -8400798),\n            ),\n            array(\n                array(-4811456, 13761029, -31703877, -2483919, -3312471, 7869047, -7113572, -9620092, 13240845, 10965870),\n                array(-7742563, -8256762, -14768334, -13656260, -23232383, 12387166, 4498947, 14147411, 29514390, 4302863),\n                array(-13413405, -12407859, 20757302, -13801832, 14785143, 8976368, -5061276, -2144373, 17846988, -13971927),\n            ),\n        ),\n        array(\n            array(\n                array(-2244452, -754728, -4597030, -1066309, -6247172, 1455299, -21647728, -9214789, -5222701, 12650267),\n                array(-9906797, -16070310, 21134160, 12198166, -27064575, 708126, 387813, 13770293, -19134326, 10958663),\n                array(22470984, 12369526, 23446014, -5441109, -21520802, -9698723, -11772496, -11574455, -25083830, 4271862),\n            ),\n            array(\n                array(-25169565, -10053642, -19909332, 15361595, -5984358, 2159192, 75375, -4278529, -32526221, 8469673),\n                array(15854970, 4148314, -8893890, 7259002, 11666551, 13824734, -30531198, 2697372, 24154791, -9460943),\n                array(15446137, -15806644, 29759747, 14019369, 30811221, -9610191, -31582008, 12840104, 24913809, 9815020),\n            ),\n            array(\n                array(-4709286, -5614269, -31841498, -12288893, -14443537, 10799414, -9103676, 13438769, 18735128, 9466238),\n                array(11933045, 9281483, 5081055, -5183824, -2628162, -4905629, -7727821, -10896103, -22728655, 16199064),\n                array(14576810, 379472, -26786533, -8317236, -29426508, -10812974, -102766, 1876699, 30801119, 2164795),\n            ),\n            array(\n                array(15995086, 3199873, 13672555, 13712240, -19378835, -4647646, -13081610, -15496269, -13492807, 1268052),\n                array(-10290614, -3659039, -3286592, 10948818, 23037027, 3794475, -3470338, -12600221, -17055369, 3565904),\n                array(29210088, -9419337, -5919792, -4952785, 10834811, -13327726, -16512102, -10820713, -27162222, -14030531),\n            ),\n            array(\n                array(-13161890, 15508588, 16663704, -8156150, -28349942, 9019123, -29183421, -3769423, 2244111, -14001979),\n                array(-5152875, -3800936, -9306475, -6071583, 16243069, 14684434, -25673088, -16180800, 13491506, 4641841),\n                array(10813417, 643330, -19188515, -728916, 30292062, -16600078, 27548447, -7721242, 14476989, -12767431),\n            ),\n            array(\n                array(10292079, 9984945, 6481436, 8279905, -7251514, 7032743, 27282937, -1644259, -27912810, 12651324),\n                array(-31185513, -813383, 22271204, 11835308, 10201545, 15351028, 17099662, 3988035, 21721536, -3148940),\n                array(10202177, -6545839, -31373232, -9574638, -32150642, -8119683, -12906320, 3852694, 13216206, 14842320),\n            ),\n            array(\n                array(-15815640, -10601066, -6538952, -7258995, -6984659, -6581778, -31500847, 13765824, -27434397, 9900184),\n                array(14465505, -13833331, -32133984, -14738873, -27443187, 12990492, 33046193, 15796406, -7051866, -8040114),\n                array(30924417, -8279620, 6359016, -12816335, 16508377, 9071735, -25488601, 15413635, 9524356, -7018878),\n            ),\n            array(\n                array(12274201, -13175547, 32627641, -1785326, 6736625, 13267305, 5237659, -5109483, 15663516, 4035784),\n                array(-2951309, 8903985, 17349946, 601635, -16432815, -4612556, -13732739, -15889334, -22258478, 4659091),\n                array(-16916263, -4952973, -30393711, -15158821, 20774812, 15897498, 5736189, 15026997, -2178256, -13455585),\n            ),\n        ),\n        array(\n            array(\n                array(-8858980, -2219056, 28571666, -10155518, -474467, -10105698, -3801496, 278095, 23440562, -290208),\n                array(10226241, -5928702, 15139956, 120818, -14867693, 5218603, 32937275, 11551483, -16571960, -7442864),\n                array(17932739, -12437276, -24039557, 10749060, 11316803, 7535897, 22503767, 5561594, -3646624, 3898661),\n            ),\n            array(\n                array(7749907, -969567, -16339731, -16464, -25018111, 15122143, -1573531, 7152530, 21831162, 1245233),\n                array(26958459, -14658026, 4314586, 8346991, -5677764, 11960072, -32589295, -620035, -30402091, -16716212),\n                array(-12165896, 9166947, 33491384, 13673479, 29787085, 13096535, 6280834, 14587357, -22338025, 13987525),\n            ),\n            array(\n                array(-24349909, 7778775, 21116000, 15572597, -4833266, -5357778, -4300898, -5124639, -7469781, -2858068),\n                array(9681908, -6737123, -31951644, 13591838, -6883821, 386950, 31622781, 6439245, -14581012, 4091397),\n                array(-8426427, 1470727, -28109679, -1596990, 3978627, -5123623, -19622683, 12092163, 29077877, -14741988),\n            ),\n            array(\n                array(5269168, -6859726, -13230211, -8020715, 25932563, 1763552, -5606110, -5505881, -20017847, 2357889),\n                array(32264008, -15407652, -5387735, -1160093, -2091322, -3946900, 23104804, -12869908, 5727338, 189038),\n                array(14609123, -8954470, -6000566, -16622781, -14577387, -7743898, -26745169, 10942115, -25888931, -14884697),\n            ),\n            array(\n                array(20513500, 5557931, -15604613, 7829531, 26413943, -2019404, -21378968, 7471781, 13913677, -5137875),\n                array(-25574376, 11967826, 29233242, 12948236, -6754465, 4713227, -8940970, 14059180, 12878652, 8511905),\n                array(-25656801, 3393631, -2955415, -7075526, -2250709, 9366908, -30223418, 6812974, 5568676, -3127656),\n            ),\n            array(\n                array(11630004, 12144454, 2116339, 13606037, 27378885, 15676917, -17408753, -13504373, -14395196, 8070818),\n                array(27117696, -10007378, -31282771, -5570088, 1127282, 12772488, -29845906, 10483306, -11552749, -1028714),\n                array(10637467, -5688064, 5674781, 1072708, -26343588, -6982302, -1683975, 9177853, -27493162, 15431203),\n            ),\n            array(\n                array(20525145, 10892566, -12742472, 12779443, -29493034, 16150075, -28240519, 14943142, -15056790, -7935931),\n                array(-30024462, 5626926, -551567, -9981087, 753598, 11981191, 25244767, -3239766, -3356550, 9594024),\n                array(-23752644, 2636870, -5163910, -10103818, 585134, 7877383, 11345683, -6492290, 13352335, -10977084),\n            ),\n            array(\n                array(-1931799, -5407458, 3304649, -12884869, 17015806, -4877091, -29783850, -7752482, -13215537, -319204),\n                array(20239939, 6607058, 6203985, 3483793, -18386976, -779229, -20723742, 15077870, -22750759, 14523817),\n                array(27406042, -6041657, 27423596, -4497394, 4996214, 10002360, -28842031, -4545494, -30172742, -4805667),\n            ),\n        ),\n        array(\n            array(\n                array(11374242, 12660715, 17861383, -12540833, 10935568, 1099227, -13886076, -9091740, -27727044, 11358504),\n                array(-12730809, 10311867, 1510375, 10778093, -2119455, -9145702, 32676003, 11149336, -26123651, 4985768),\n                array(-19096303, 341147, -6197485, -239033, 15756973, -8796662, -983043, 13794114, -19414307, -15621255),\n            ),\n            array(\n                array(6490081, 11940286, 25495923, -7726360, 8668373, -8751316, 3367603, 6970005, -1691065, -9004790),\n                array(1656497, 13457317, 15370807, 6364910, 13605745, 8362338, -19174622, -5475723, -16796596, -5031438),\n                array(-22273315, -13524424, -64685, -4334223, -18605636, -10921968, -20571065, -7007978, -99853, -10237333),\n            ),\n            array(\n                array(17747465, 10039260, 19368299, -4050591, -20630635, -16041286, 31992683, -15857976, -29260363, -5511971),\n                array(31932027, -4986141, -19612382, 16366580, 22023614, 88450, 11371999, -3744247, 4882242, -10626905),\n                array(29796507, 37186, 19818052, 10115756, -11829032, 3352736, 18551198, 3272828, -5190932, -4162409),\n            ),\n            array(\n                array(12501286, 4044383, -8612957, -13392385, -32430052, 5136599, -19230378, -3529697, 330070, -3659409),\n                array(6384877, 2899513, 17807477, 7663917, -2358888, 12363165, 25366522, -8573892, -271295, 12071499),\n                array(-8365515, -4042521, 25133448, -4517355, -6211027, 2265927, -32769618, 1936675, -5159697, 3829363),\n            ),\n            array(\n                array(28425966, -5835433, -577090, -4697198, -14217555, 6870930, 7921550, -6567787, 26333140, 14267664),\n                array(-11067219, 11871231, 27385719, -10559544, -4585914, -11189312, 10004786, -8709488, -21761224, 8930324),\n                array(-21197785, -16396035, 25654216, -1725397, 12282012, 11008919, 1541940, 4757911, -26491501, -16408940),\n            ),\n            array(\n                array(13537262, -7759490, -20604840, 10961927, -5922820, -13218065, -13156584, 6217254, -15943699, 13814990),\n                array(-17422573, 15157790, 18705543, 29619, 24409717, -260476, 27361681, 9257833, -1956526, -1776914),\n                array(-25045300, -10191966, 15366585, 15166509, -13105086, 8423556, -29171540, 12361135, -18685978, 4578290),\n            ),\n            array(\n                array(24579768, 3711570, 1342322, -11180126, -27005135, 14124956, -22544529, 14074919, 21964432, 8235257),\n                array(-6528613, -2411497, 9442966, -5925588, 12025640, -1487420, -2981514, -1669206, 13006806, 2355433),\n                array(-16304899, -13605259, -6632427, -5142349, 16974359, -10911083, 27202044, 1719366, 1141648, -12796236),\n            ),\n            array(\n                array(-12863944, -13219986, -8318266, -11018091, -6810145, -4843894, 13475066, -3133972, 32674895, 13715045),\n                array(11423335, -5468059, 32344216, 8962751, 24989809, 9241752, -13265253, 16086212, -28740881, -15642093),\n                array(-1409668, 12530728, -6368726, 10847387, 19531186, -14132160, -11709148, 7791794, -27245943, 4383347),\n            ),\n        ),\n        array(\n            array(\n                array(-28970898, 5271447, -1266009, -9736989, -12455236, 16732599, -4862407, -4906449, 27193557, 6245191),\n                array(-15193956, 5362278, -1783893, 2695834, 4960227, 12840725, 23061898, 3260492, 22510453, 8577507),\n                array(-12632451, 11257346, -32692994, 13548177, -721004, 10879011, 31168030, 13952092, -29571492, -3635906),\n            ),\n            array(\n                array(3877321, -9572739, 32416692, 5405324, -11004407, -13656635, 3759769, 11935320, 5611860, 8164018),\n                array(-16275802, 14667797, 15906460, 12155291, -22111149, -9039718, 32003002, -8832289, 5773085, -8422109),\n                array(-23788118, -8254300, 1950875, 8937633, 18686727, 16459170, -905725, 12376320, 31632953, 190926),\n            ),\n            array(\n                array(-24593607, -16138885, -8423991, 13378746, 14162407, 6901328, -8288749, 4508564, -25341555, -3627528),\n                array(8884438, -5884009, 6023974, 10104341, -6881569, -4941533, 18722941, -14786005, -1672488, 827625),\n                array(-32720583, -16289296, -32503547, 7101210, 13354605, 2659080, -1800575, -14108036, -24878478, 1541286),\n            ),\n            array(\n                array(2901347, -1117687, 3880376, -10059388, -17620940, -3612781, -21802117, -3567481, 20456845, -1885033),\n                array(27019610, 12299467, -13658288, -1603234, -12861660, -4861471, -19540150, -5016058, 29439641, 15138866),\n                array(21536104, -6626420, -32447818, -10690208, -22408077, 5175814, -5420040, -16361163, 7779328, 109896),\n            ),\n            array(\n                array(30279744, 14648750, -8044871, 6425558, 13639621, -743509, 28698390, 12180118, 23177719, -554075),\n                array(26572847, 3405927, -31701700, 12890905, -19265668, 5335866, -6493768, 2378492, 4439158, -13279347),\n                array(-22716706, 3489070, -9225266, -332753, 18875722, -1140095, 14819434, -12731527, -17717757, -5461437),\n            ),\n            array(\n                array(-5056483, 16566551, 15953661, 3767752, -10436499, 15627060, -820954, 2177225, 8550082, -15114165),\n                array(-18473302, 16596775, -381660, 15663611, 22860960, 15585581, -27844109, -3582739, -23260460, -8428588),\n                array(-32480551, 15707275, -8205912, -5652081, 29464558, 2713815, -22725137, 15860482, -21902570, 1494193),\n            ),\n            array(\n                array(-19562091, -14087393, -25583872, -9299552, 13127842, 759709, 21923482, 16529112, 8742704, 12967017),\n                array(-28464899, 1553205, 32536856, -10473729, -24691605, -406174, -8914625, -2933896, -29903758, 15553883),\n                array(21877909, 3230008, 9881174, 10539357, -4797115, 2841332, 11543572, 14513274, 19375923, -12647961),\n            ),\n            array(\n                array(8832269, -14495485, 13253511, 5137575, 5037871, 4078777, 24880818, -6222716, 2862653, 9455043),\n                array(29306751, 5123106, 20245049, -14149889, 9592566, 8447059, -2077124, -2990080, 15511449, 4789663),\n                array(-20679756, 7004547, 8824831, -9434977, -4045704, -3750736, -5754762, 108893, 23513200, 16652362),\n            ),\n        ),\n        array(\n            array(\n                array(-33256173, 4144782, -4476029, -6579123, 10770039, -7155542, -6650416, -12936300, -18319198, 10212860),\n                array(2756081, 8598110, 7383731, -6859892, 22312759, -1105012, 21179801, 2600940, -9988298, -12506466),\n                array(-24645692, 13317462, -30449259, -15653928, 21365574, -10869657, 11344424, 864440, -2499677, -16710063),\n            ),\n            array(\n                array(-26432803, 6148329, -17184412, -14474154, 18782929, -275997, -22561534, 211300, 2719757, 4940997),\n                array(-1323882, 3911313, -6948744, 14759765, -30027150, 7851207, 21690126, 8518463, 26699843, 5276295),\n                array(-13149873, -6429067, 9396249, 365013, 24703301, -10488939, 1321586, 149635, -15452774, 7159369),\n            ),\n            array(\n                array(9987780, -3404759, 17507962, 9505530, 9731535, -2165514, 22356009, 8312176, 22477218, -8403385),\n                array(18155857, -16504990, 19744716, 9006923, 15154154, -10538976, 24256460, -4864995, -22548173, 9334109),\n                array(2986088, -4911893, 10776628, -3473844, 10620590, -7083203, -21413845, 14253545, -22587149, 536906),\n            ),\n            array(\n                array(4377756, 8115836, 24567078, 15495314, 11625074, 13064599, 7390551, 10589625, 10838060, -15420424),\n                array(-19342404, 867880, 9277171, -3218459, -14431572, -1986443, 19295826, -15796950, 6378260, 699185),\n                array(7895026, 4057113, -7081772, -13077756, -17886831, -323126, -716039, 15693155, -5045064, -13373962),\n            ),\n            array(\n                array(-7737563, -5869402, -14566319, -7406919, 11385654, 13201616, 31730678, -10962840, -3918636, -9669325),\n                array(10188286, -15770834, -7336361, 13427543, 22223443, 14896287, 30743455, 7116568, -21786507, 5427593),\n                array(696102, 13206899, 27047647, -10632082, 15285305, -9853179, 10798490, -4578720, 19236243, 12477404),\n            ),\n            array(\n                array(-11229439, 11243796, -17054270, -8040865, -788228, -8167967, -3897669, 11180504, -23169516, 7733644),\n                array(17800790, -14036179, -27000429, -11766671, 23887827, 3149671, 23466177, -10538171, 10322027, 15313801),\n                array(26246234, 11968874, 32263343, -5468728, 6830755, -13323031, -15794704, -101982, -24449242, 10890804),\n            ),\n            array(\n                array(-31365647, 10271363, -12660625, -6267268, 16690207, -13062544, -14982212, 16484931, 25180797, -5334884),\n                array(-586574, 10376444, -32586414, -11286356, 19801893, 10997610, 2276632, 9482883, 316878, 13820577),\n                array(-9882808, -4510367, -2115506, 16457136, -11100081, 11674996, 30756178, -7515054, 30696930, -3712849),\n            ),\n            array(\n                array(32988917, -9603412, 12499366, 7910787, -10617257, -11931514, -7342816, -9985397, -32349517, 7392473),\n                array(-8855661, 15927861, 9866406, -3649411, -2396914, -16655781, -30409476, -9134995, 25112947, -2926644),\n                array(-2504044, -436966, 25621774, -5678772, 15085042, -5479877, -24884878, -13526194, 5537438, -13914319),\n            ),\n        ),\n        array(\n            array(\n                array(-11225584, 2320285, -9584280, 10149187, -33444663, 5808648, -14876251, -1729667, 31234590, 6090599),\n                array(-9633316, 116426, 26083934, 2897444, -6364437, -2688086, 609721, 15878753, -6970405, -9034768),\n                array(-27757857, 247744, -15194774, -9002551, 23288161, -10011936, -23869595, 6503646, 20650474, 1804084),\n            ),\n            array(\n                array(-27589786, 15456424, 8972517, 8469608, 15640622, 4439847, 3121995, -10329713, 27842616, -202328),\n                array(-15306973, 2839644, 22530074, 10026331, 4602058, 5048462, 28248656, 5031932, -11375082, 12714369),\n                array(20807691, -7270825, 29286141, 11421711, -27876523, -13868230, -21227475, 1035546, -19733229, 12796920),\n            ),\n            array(\n                array(12076899, -14301286, -8785001, -11848922, -25012791, 16400684, -17591495, -12899438, 3480665, -15182815),\n                array(-32361549, 5457597, 28548107, 7833186, 7303070, -11953545, -24363064, -15921875, -33374054, 2771025),\n                array(-21389266, 421932, 26597266, 6860826, 22486084, -6737172, -17137485, -4210226, -24552282, 15673397),\n            ),\n            array(\n                array(-20184622, 2338216, 19788685, -9620956, -4001265, -8740893, -20271184, 4733254, 3727144, -12934448),\n                array(6120119, 814863, -11794402, -622716, 6812205, -15747771, 2019594, 7975683, 31123697, -10958981),\n                array(30069250, -11435332, 30434654, 2958439, 18399564, -976289, 12296869, 9204260, -16432438, 9648165),\n            ),\n            array(\n                array(32705432, -1550977, 30705658, 7451065, -11805606, 9631813, 3305266, 5248604, -26008332, -11377501),\n                array(17219865, 2375039, -31570947, -5575615, -19459679, 9219903, 294711, 15298639, 2662509, -16297073),\n                array(-1172927, -7558695, -4366770, -4287744, -21346413, -8434326, 32087529, -1222777, 32247248, -14389861),\n            ),\n            array(\n                array(14312628, 1221556, 17395390, -8700143, -4945741, -8684635, -28197744, -9637817, -16027623, -13378845),\n                array(-1428825, -9678990, -9235681, 6549687, -7383069, -468664, 23046502, 9803137, 17597934, 2346211),\n                array(18510800, 15337574, 26171504, 981392, -22241552, 7827556, -23491134, -11323352, 3059833, -11782870),\n            ),\n            array(\n                array(10141598, 6082907, 17829293, -1947643, 9830092, 13613136, -25556636, -5544586, -33502212, 3592096),\n                array(33114168, -15889352, -26525686, -13343397, 33076705, 8716171, 1151462, 1521897, -982665, -6837803),\n                array(-32939165, -4255815, 23947181, -324178, -33072974, -12305637, -16637686, 3891704, 26353178, 693168),\n            ),\n            array(\n                array(30374239, 1595580, -16884039, 13186931, 4600344, 406904, 9585294, -400668, 31375464, 14369965),\n                array(-14370654, -7772529, 1510301, 6434173, -18784789, -6262728, 32732230, -13108839, 17901441, 16011505),\n                array(18171223, -11934626, -12500402, 15197122, -11038147, -15230035, -19172240, -16046376, 8764035, 12309598),\n            ),\n        ),\n        array(\n            array(\n                array(5975908, -5243188, -19459362, -9681747, -11541277, 14015782, -23665757, 1228319, 17544096, -10593782),\n                array(5811932, -1715293, 3442887, -2269310, -18367348, -8359541, -18044043, -15410127, -5565381, 12348900),\n                array(-31399660, 11407555, 25755363, 6891399, -3256938, 14872274, -24849353, 8141295, -10632534, -585479),\n            ),\n            array(\n                array(-12675304, 694026, -5076145, 13300344, 14015258, -14451394, -9698672, -11329050, 30944593, 1130208),\n                array(8247766, -6710942, -26562381, -7709309, -14401939, -14648910, 4652152, 2488540, 23550156, -271232),\n                array(17294316, -3788438, 7026748, 15626851, 22990044, 113481, 2267737, -5908146, -408818, -137719),\n            ),\n            array(\n                array(16091085, -16253926, 18599252, 7340678, 2137637, -1221657, -3364161, 14550936, 3260525, -7166271),\n                array(-4910104, -13332887, 18550887, 10864893, -16459325, -7291596, -23028869, -13204905, -12748722, 2701326),\n                array(-8574695, 16099415, 4629974, -16340524, -20786213, -6005432, -10018363, 9276971, 11329923, 1862132),\n            ),\n            array(\n                array(14763076, -15903608, -30918270, 3689867, 3511892, 10313526, -21951088, 12219231, -9037963, -940300),\n                array(8894987, -3446094, 6150753, 3013931, 301220, 15693451, -31981216, -2909717, -15438168, 11595570),\n                array(15214962, 3537601, -26238722, -14058872, 4418657, -15230761, 13947276, 10730794, -13489462, -4363670),\n            ),\n            array(\n                array(-2538306, 7682793, 32759013, 263109, -29984731, -7955452, -22332124, -10188635, 977108, 699994),\n                array(-12466472, 4195084, -9211532, 550904, -15565337, 12917920, 19118110, -439841, -30534533, -14337913),\n                array(31788461, -14507657, 4799989, 7372237, 8808585, -14747943, 9408237, -10051775, 12493932, -5409317),\n            ),\n            array(\n                array(-25680606, 5260744, -19235809, -6284470, -3695942, 16566087, 27218280, 2607121, 29375955, 6024730),\n                array(842132, -2794693, -4763381, -8722815, 26332018, -12405641, 11831880, 6985184, -9940361, 2854096),\n                array(-4847262, -7969331, 2516242, -5847713, 9695691, -7221186, 16512645, 960770, 12121869, 16648078),\n            ),\n            array(\n                array(-15218652, 14667096, -13336229, 2013717, 30598287, -464137, -31504922, -7882064, 20237806, 2838411),\n                array(-19288047, 4453152, 15298546, -16178388, 22115043, -15972604, 12544294, -13470457, 1068881, -12499905),\n                array(-9558883, -16518835, 33238498, 13506958, 30505848, -1114596, -8486907, -2630053, 12521378, 4845654),\n            ),\n            array(\n                array(-28198521, 10744108, -2958380, 10199664, 7759311, -13088600, 3409348, -873400, -6482306, -12885870),\n                array(-23561822, 6230156, -20382013, 10655314, -24040585, -11621172, 10477734, -1240216, -3113227, 13974498),\n                array(12966261, 15550616, -32038948, -1615346, 21025980, -629444, 5642325, 7188737, 18895762, 12629579),\n            ),\n        ),\n        array(\n            array(\n                array(14741879, -14946887, 22177208, -11721237, 1279741, 8058600, 11758140, 789443, 32195181, 3895677),\n                array(10758205, 15755439, -4509950, 9243698, -4879422, 6879879, -2204575, -3566119, -8982069, 4429647),\n                array(-2453894, 15725973, -20436342, -10410672, -5803908, -11040220, -7135870, -11642895, 18047436, -15281743),\n            ),\n            array(\n                array(-25173001, -11307165, 29759956, 11776784, -22262383, -15820455, 10993114, -12850837, -17620701, -9408468),\n                array(21987233, 700364, -24505048, 14972008, -7774265, -5718395, 32155026, 2581431, -29958985, 8773375),\n                array(-25568350, 454463, -13211935, 16126715, 25240068, 8594567, 20656846, 12017935, -7874389, -13920155),\n            ),\n            array(\n                array(6028182, 6263078, -31011806, -11301710, -818919, 2461772, -31841174, -5468042, -1721788, -2776725),\n                array(-12278994, 16624277, 987579, -5922598, 32908203, 1248608, 7719845, -4166698, 28408820, 6816612),\n                array(-10358094, -8237829, 19549651, -12169222, 22082623, 16147817, 20613181, 13982702, -10339570, 5067943),\n            ),\n            array(\n                array(-30505967, -3821767, 12074681, 13582412, -19877972, 2443951, -19719286, 12746132, 5331210, -10105944),\n                array(30528811, 3601899, -1957090, 4619785, -27361822, -15436388, 24180793, -12570394, 27679908, -1648928),\n                array(9402404, -13957065, 32834043, 10838634, -26580150, -13237195, 26653274, -8685565, 22611444, -12715406),\n            ),\n            array(\n                array(22190590, 1118029, 22736441, 15130463, -30460692, -5991321, 19189625, -4648942, 4854859, 6622139),\n                array(-8310738, -2953450, -8262579, -3388049, -10401731, -271929, 13424426, -3567227, 26404409, 13001963),\n                array(-31241838, -15415700, -2994250, 8939346, 11562230, -12840670, -26064365, -11621720, -15405155, 11020693),\n            ),\n            array(\n                array(1866042, -7949489, -7898649, -10301010, 12483315, 13477547, 3175636, -12424163, 28761762, 1406734),\n                array(-448555, -1777666, 13018551, 3194501, -9580420, -11161737, 24760585, -4347088, 25577411, -13378680),\n                array(-24290378, 4759345, -690653, -1852816, 2066747, 10693769, -29595790, 9884936, -9368926, 4745410),\n            ),\n            array(\n                array(-9141284, 6049714, -19531061, -4341411, -31260798, 9944276, -15462008, -11311852, 10931924, -11931931),\n                array(-16561513, 14112680, -8012645, 4817318, -8040464, -11414606, -22853429, 10856641, -20470770, 13434654),\n                array(22759489, -10073434, -16766264, -1871422, 13637442, -10168091, 1765144, -12654326, 28445307, -5364710),\n            ),\n            array(\n                array(29875063, 12493613, 2795536, -3786330, 1710620, 15181182, -10195717, -8788675, 9074234, 1167180),\n                array(-26205683, 11014233, -9842651, -2635485, -26908120, 7532294, -18716888, -9535498, 3843903, 9367684),\n                array(-10969595, -6403711, 9591134, 9582310, 11349256, 108879, 16235123, 8601684, -139197, 4242895),\n            ),\n        ),\n        array(\n            array(\n                array(22092954, -13191123, -2042793, -11968512, 32186753, -11517388, -6574341, 2470660, -27417366, 16625501),\n                array(-11057722, 3042016, 13770083, -9257922, 584236, -544855, -7770857, 2602725, -27351616, 14247413),\n                array(6314175, -10264892, -32772502, 15957557, -10157730, 168750, -8618807, 14290061, 27108877, -1180880),\n            ),\n            array(\n                array(-8586597, -7170966, 13241782, 10960156, -32991015, -13794596, 33547976, -11058889, -27148451, 981874),\n                array(22833440, 9293594, -32649448, -13618667, -9136966, 14756819, -22928859, -13970780, -10479804, -16197962),\n                array(-7768587, 3326786, -28111797, 10783824, 19178761, 14905060, 22680049, 13906969, -15933690, 3797899),\n            ),\n            array(\n                array(21721356, -4212746, -12206123, 9310182, -3882239, -13653110, 23740224, -2709232, 20491983, -8042152),\n                array(9209270, -15135055, -13256557, -6167798, -731016, 15289673, 25947805, 15286587, 30997318, -6703063),\n                array(7392032, 16618386, 23946583, -8039892, -13265164, -1533858, -14197445, -2321576, 17649998, -250080),\n            ),\n            array(\n                array(-9301088, -14193827, 30609526, -3049543, -25175069, -1283752, -15241566, -9525724, -2233253, 7662146),\n                array(-17558673, 1763594, -33114336, 15908610, -30040870, -12174295, 7335080, -8472199, -3174674, 3440183),\n                array(-19889700, -5977008, -24111293, -9688870, 10799743, -16571957, 40450, -4431835, 4862400, 1133),\n            ),\n            array(\n                array(-32856209, -7873957, -5422389, 14860950, -16319031, 7956142, 7258061, 311861, -30594991, -7379421),\n                array(-3773428, -1565936, 28985340, 7499440, 24445838, 9325937, 29727763, 16527196, 18278453, 15405622),\n                array(-4381906, 8508652, -19898366, -3674424, -5984453, 15149970, -13313598, 843523, -21875062, 13626197),\n            ),\n            array(\n                array(2281448, -13487055, -10915418, -2609910, 1879358, 16164207, -10783882, 3953792, 13340839, 15928663),\n                array(31727126, -7179855, -18437503, -8283652, 2875793, -16390330, -25269894, -7014826, -23452306, 5964753),\n                array(4100420, -5959452, -17179337, 6017714, -18705837, 12227141, -26684835, 11344144, 2538215, -7570755),\n            ),\n            array(\n                array(-9433605, 6123113, 11159803, -2156608, 30016280, 14966241, -20474983, 1485421, -629256, -15958862),\n                array(-26804558, 4260919, 11851389, 9658551, -32017107, 16367492, -20205425, -13191288, 11659922, -11115118),\n                array(26180396, 10015009, -30844224, -8581293, 5418197, 9480663, 2231568, -10170080, 33100372, -1306171),\n            ),\n            array(\n                array(15121113, -5201871, -10389905, 15427821, -27509937, -15992507, 21670947, 4486675, -5931810, -14466380),\n                array(16166486, -9483733, -11104130, 6023908, -31926798, -1364923, 2340060, -16254968, -10735770, -10039824),\n                array(28042865, -3557089, -12126526, 12259706, -3717498, -6945899, 6766453, -8689599, 18036436, 5803270),\n            ),\n        ),\n        array(\n            array(\n                array(-817581, 6763912, 11803561, 1585585, 10958447, -2671165, 23855391, 4598332, -6159431, -14117438),\n                array(-31031306, -14256194, 17332029, -2383520, 31312682, -5967183, 696309, 50292, -20095739, 11763584),\n                array(-594563, -2514283, -32234153, 12643980, 12650761, 14811489, 665117, -12613632, -19773211, -10713562),\n            ),\n            array(\n                array(30464590, -11262872, -4127476, -12734478, 19835327, -7105613, -24396175, 2075773, -17020157, 992471),\n                array(18357185, -6994433, 7766382, 16342475, -29324918, 411174, 14578841, 8080033, -11574335, -10601610),\n                array(19598397, 10334610, 12555054, 2555664, 18821899, -10339780, 21873263, 16014234, 26224780, 16452269),\n            ),\n            array(\n                array(-30223925, 5145196, 5944548, 16385966, 3976735, 2009897, -11377804, -7618186, -20533829, 3698650),\n                array(14187449, 3448569, -10636236, -10810935, -22663880, -3433596, 7268410, -10890444, 27394301, 12015369),\n                array(19695761, 16087646, 28032085, 12999827, 6817792, 11427614, 20244189, -1312777, -13259127, -3402461),\n            ),\n            array(\n                array(30860103, 12735208, -1888245, -4699734, -16974906, 2256940, -8166013, 12298312, -8550524, -10393462),\n                array(-5719826, -11245325, -1910649, 15569035, 26642876, -7587760, -5789354, -15118654, -4976164, 12651793),\n                array(-2848395, 9953421, 11531313, -5282879, 26895123, -12697089, -13118820, -16517902, 9768698, -2533218),\n            ),\n            array(\n                array(-24719459, 1894651, -287698, -4704085, 15348719, -8156530, 32767513, 12765450, 4940095, 10678226),\n                array(18860224, 15980149, -18987240, -1562570, -26233012, -11071856, -7843882, 13944024, -24372348, 16582019),\n                array(-15504260, 4970268, -29893044, 4175593, -20993212, -2199756, -11704054, 15444560, -11003761, 7989037),\n            ),\n            array(\n                array(31490452, 5568061, -2412803, 2182383, -32336847, 4531686, -32078269, 6200206, -19686113, -14800171),\n                array(-17308668, -15879940, -31522777, -2831, -32887382, 16375549, 8680158, -16371713, 28550068, -6857132),\n                array(-28126887, -5688091, 16837845, -1820458, -6850681, 12700016, -30039981, 4364038, 1155602, 5988841),\n            ),\n            array(\n                array(21890435, -13272907, -12624011, 12154349, -7831873, 15300496, 23148983, -4470481, 24618407, 8283181),\n                array(-33136107, -10512751, 9975416, 6841041, -31559793, 16356536, 3070187, -7025928, 1466169, 10740210),\n                array(-1509399, -15488185, -13503385, -10655916, 32799044, 909394, -13938903, -5779719, -32164649, -15327040),\n            ),\n            array(\n                array(3960823, -14267803, -28026090, -15918051, -19404858, 13146868, 15567327, 951507, -3260321, -573935),\n                array(24740841, 5052253, -30094131, 8961361, 25877428, 6165135, -24368180, 14397372, -7380369, -6144105),\n                array(-28888365, 3510803, -28103278, -1158478, -11238128, -10631454, -15441463, -14453128, -1625486, -6494814),\n            ),\n        ),\n        array(\n            array(\n                array(793299, -9230478, 8836302, -6235707, -27360908, -2369593, 33152843, -4885251, -9906200, -621852),\n                array(5666233, 525582, 20782575, -8038419, -24538499, 14657740, 16099374, 1468826, -6171428, -15186581),\n                array(-4859255, -3779343, -2917758, -6748019, 7778750, 11688288, -30404353, -9871238, -1558923, -9863646),\n            ),\n            array(\n                array(10896332, -7719704, 824275, 472601, -19460308, 3009587, 25248958, 14783338, -30581476, -15757844),\n                array(10566929, 12612572, -31944212, 11118703, -12633376, 12362879, 21752402, 8822496, 24003793, 14264025),\n                array(27713862, -7355973, -11008240, 9227530, 27050101, 2504721, 23886875, -13117525, 13958495, -5732453),\n            ),\n            array(\n                array(-23481610, 4867226, -27247128, 3900521, 29838369, -8212291, -31889399, -10041781, 7340521, -15410068),\n                array(4646514, -8011124, -22766023, -11532654, 23184553, 8566613, 31366726, -1381061, -15066784, -10375192),\n                array(-17270517, 12723032, -16993061, 14878794, 21619651, -6197576, 27584817, 3093888, -8843694, 3849921),\n            ),\n            array(\n                array(-9064912, 2103172, 25561640, -15125738, -5239824, 9582958, 32477045, -9017955, 5002294, -15550259),\n                array(-12057553, -11177906, 21115585, -13365155, 8808712, -12030708, 16489530, 13378448, -25845716, 12741426),\n                array(-5946367, 10645103, -30911586, 15390284, -3286982, -7118677, 24306472, 15852464, 28834118, -7646072),\n            ),\n            array(\n                array(-17335748, -9107057, -24531279, 9434953, -8472084, -583362, -13090771, 455841, 20461858, 5491305),\n                array(13669248, -16095482, -12481974, -10203039, -14569770, -11893198, -24995986, 11293807, -28588204, -9421832),\n                array(28497928, 6272777, -33022994, 14470570, 8906179, -1225630, 18504674, -14165166, 29867745, -8795943),\n            ),\n            array(\n                array(-16207023, 13517196, -27799630, -13697798, 24009064, -6373891, -6367600, -13175392, 22853429, -4012011),\n                array(24191378, 16712145, -13931797, 15217831, 14542237, 1646131, 18603514, -11037887, 12876623, -2112447),\n                array(17902668, 4518229, -411702, -2829247, 26878217, 5258055, -12860753, 608397, 16031844, 3723494),\n            ),\n            array(\n                array(-28632773, 12763728, -20446446, 7577504, 33001348, -13017745, 17558842, -7872890, 23896954, -4314245),\n                array(-20005381, -12011952, 31520464, 605201, 2543521, 5991821, -2945064, 7229064, -9919646, -8826859),\n                array(28816045, 298879, -28165016, -15920938, 19000928, -1665890, -12680833, -2949325, -18051778, -2082915),\n            ),\n            array(\n                array(16000882, -344896, 3493092, -11447198, -29504595, -13159789, 12577740, 16041268, -19715240, 7847707),\n                array(10151868, 10572098, 27312476, 7922682, 14825339, 4723128, -32855931, -6519018, -10020567, 3852848),\n                array(-11430470, 15697596, -21121557, -4420647, 5386314, 15063598, 16514493, -15932110, 29330899, -15076224),\n            ),\n        ),\n        array(\n            array(\n                array(-25499735, -4378794, -15222908, -6901211, 16615731, 2051784, 3303702, 15490, -27548796, 12314391),\n                array(15683520, -6003043, 18109120, -9980648, 15337968, -5997823, -16717435, 15921866, 16103996, -3731215),\n                array(-23169824, -10781249, 13588192, -1628807, -3798557, -1074929, -19273607, 5402699, -29815713, -9841101),\n            ),\n            array(\n                array(23190676, 2384583, -32714340, 3462154, -29903655, -1529132, -11266856, 8911517, -25205859, 2739713),\n                array(21374101, -3554250, -33524649, 9874411, 15377179, 11831242, -33529904, 6134907, 4931255, 11987849),\n                array(-7732, -2978858, -16223486, 7277597, 105524, -322051, -31480539, 13861388, -30076310, 10117930),\n            ),\n            array(\n                array(-29501170, -10744872, -26163768, 13051539, -25625564, 5089643, -6325503, 6704079, 12890019, 15728940),\n                array(-21972360, -11771379, -951059, -4418840, 14704840, 2695116, 903376, -10428139, 12885167, 8311031),\n                array(-17516482, 5352194, 10384213, -13811658, 7506451, 13453191, 26423267, 4384730, 1888765, -5435404),\n            ),\n            array(\n                array(-25817338, -3107312, -13494599, -3182506, 30896459, -13921729, -32251644, -12707869, -19464434, -3340243),\n                array(-23607977, -2665774, -526091, 4651136, 5765089, 4618330, 6092245, 14845197, 17151279, -9854116),\n                array(-24830458, -12733720, -15165978, 10367250, -29530908, -265356, 22825805, -7087279, -16866484, 16176525),\n            ),\n            array(\n                array(-23583256, 6564961, 20063689, 3798228, -4740178, 7359225, 2006182, -10363426, -28746253, -10197509),\n                array(-10626600, -4486402, -13320562, -5125317, 3432136, -6393229, 23632037, -1940610, 32808310, 1099883),\n                array(15030977, 5768825, -27451236, -2887299, -6427378, -15361371, -15277896, -6809350, 2051441, -15225865),\n            ),\n            array(\n                array(-3362323, -7239372, 7517890, 9824992, 23555850, 295369, 5148398, -14154188, -22686354, 16633660),\n                array(4577086, -16752288, 13249841, -15304328, 19958763, -14537274, 18559670, -10759549, 8402478, -9864273),\n                array(-28406330, -1051581, -26790155, -907698, -17212414, -11030789, 9453451, -14980072, 17983010, 9967138),\n            ),\n            array(\n                array(-25762494, 6524722, 26585488, 9969270, 24709298, 1220360, -1677990, 7806337, 17507396, 3651560),\n                array(-10420457, -4118111, 14584639, 15971087, -15768321, 8861010, 26556809, -5574557, -18553322, -11357135),\n                array(2839101, 14284142, 4029895, 3472686, 14402957, 12689363, -26642121, 8459447, -5605463, -7621941),\n            ),\n            array(\n                array(-4839289, -3535444, 9744961, 2871048, 25113978, 3187018, -25110813, -849066, 17258084, -7977739),\n                array(18164541, -10595176, -17154882, -1542417, 19237078, -9745295, 23357533, -15217008, 26908270, 12150756),\n                array(-30264870, -7647865, 5112249, -7036672, -1499807, -6974257, 43168, -5537701, -32302074, 16215819),\n            ),\n        ),\n        array(\n            array(\n                array(-6898905, 9824394, -12304779, -4401089, -31397141, -6276835, 32574489, 12532905, -7503072, -8675347),\n                array(-27343522, -16515468, -27151524, -10722951, 946346, 16291093, 254968, 7168080, 21676107, -1943028),\n                array(21260961, -8424752, -16831886, -11920822, -23677961, 3968121, -3651949, -6215466, -3556191, -7913075),\n            ),\n            array(\n                array(16544754, 13250366, -16804428, 15546242, -4583003, 12757258, -2462308, -8680336, -18907032, -9662799),\n                array(-2415239, -15577728, 18312303, 4964443, -15272530, -12653564, 26820651, 16690659, 25459437, -4564609),\n                array(-25144690, 11425020, 28423002, -11020557, -6144921, -15826224, 9142795, -2391602, -6432418, -1644817),\n            ),\n            array(\n                array(-23104652, 6253476, 16964147, -3768872, -25113972, -12296437, -27457225, -16344658, 6335692, 7249989),\n                array(-30333227, 13979675, 7503222, -12368314, -11956721, -4621693, -30272269, 2682242, 25993170, -12478523),\n                array(4364628, 5930691, 32304656, -10044554, -8054781, 15091131, 22857016, -10598955, 31820368, 15075278),\n            ),\n            array(\n                array(31879134, -8918693, 17258761, 90626, -8041836, -4917709, 24162788, -9650886, -17970238, 12833045),\n                array(19073683, 14851414, -24403169, -11860168, 7625278, 11091125, -19619190, 2074449, -9413939, 14905377),\n                array(24483667, -11935567, -2518866, -11547418, -1553130, 15355506, -25282080, 9253129, 27628530, -7555480),\n            ),\n            array(\n                array(17597607, 8340603, 19355617, 552187, 26198470, -3176583, 4593324, -9157582, -14110875, 15297016),\n                array(510886, 14337390, -31785257, 16638632, 6328095, 2713355, -20217417, -11864220, 8683221, 2921426),\n                array(18606791, 11874196, 27155355, -5281482, -24031742, 6265446, -25178240, -1278924, 4674690, 13890525),\n            ),\n            array(\n                array(13609624, 13069022, -27372361, -13055908, 24360586, 9592974, 14977157, 9835105, 4389687, 288396),\n                array(9922506, -519394, 13613107, 5883594, -18758345, -434263, -12304062, 8317628, 23388070, 16052080),\n                array(12720016, 11937594, -31970060, -5028689, 26900120, 8561328, -20155687, -11632979, -14754271, -10812892),\n            ),\n            array(\n                array(15961858, 14150409, 26716931, -665832, -22794328, 13603569, 11829573, 7467844, -28822128, 929275),\n                array(11038231, -11582396, -27310482, -7316562, -10498527, -16307831, -23479533, -9371869, -21393143, 2465074),\n                array(20017163, -4323226, 27915242, 1529148, 12396362, 15675764, 13817261, -9658066, 2463391, -4622140),\n            ),\n            array(\n                array(-16358878, -12663911, -12065183, 4996454, -1256422, 1073572, 9583558, 12851107, 4003896, 12673717),\n                array(-1731589, -15155870, -3262930, 16143082, 19294135, 13385325, 14741514, -9103726, 7903886, 2348101),\n                array(24536016, -16515207, 12715592, -3862155, 1511293, 10047386, -3842346, -7129159, -28377538, 10048127),\n            ),\n        ),\n        array(\n            array(\n                array(-12622226, -6204820, 30718825, 2591312, -10617028, 12192840, 18873298, -7297090, -32297756, 15221632),\n                array(-26478122, -11103864, 11546244, -1852483, 9180880, 7656409, -21343950, 2095755, 29769758, 6593415),\n                array(-31994208, -2907461, 4176912, 3264766, 12538965, -868111, 26312345, -6118678, 30958054, 8292160),\n            ),\n            array(\n                array(31429822, -13959116, 29173532, 15632448, 12174511, -2760094, 32808831, 3977186, 26143136, -3148876),\n                array(22648901, 1402143, -22799984, 13746059, 7936347, 365344, -8668633, -1674433, -3758243, -2304625),\n                array(-15491917, 8012313, -2514730, -12702462, -23965846, -10254029, -1612713, -1535569, -16664475, 8194478),\n            ),\n            array(\n                array(27338066, -7507420, -7414224, 10140405, -19026427, -6589889, 27277191, 8855376, 28572286, 3005164),\n                array(26287124, 4821776, 25476601, -4145903, -3764513, -15788984, -18008582, 1182479, -26094821, -13079595),\n                array(-7171154, 3178080, 23970071, 6201893, -17195577, -4489192, -21876275, -13982627, 32208683, -1198248),\n            ),\n            array(\n                array(-16657702, 2817643, -10286362, 14811298, 6024667, 13349505, -27315504, -10497842, -27672585, -11539858),\n                array(15941029, -9405932, -21367050, 8062055, 31876073, -238629, -15278393, -1444429, 15397331, -4130193),\n                array(8934485, -13485467, -23286397, -13423241, -32446090, 14047986, 31170398, -1441021, -27505566, 15087184),\n            ),\n            array(\n                array(-18357243, -2156491, 24524913, -16677868, 15520427, -6360776, -15502406, 11461896, 16788528, -5868942),\n                array(-1947386, 16013773, 21750665, 3714552, -17401782, -16055433, -3770287, -10323320, 31322514, -11615635),\n                array(21426655, -5650218, -13648287, -5347537, -28812189, -4920970, -18275391, -14621414, 13040862, -12112948),\n            ),\n            array(\n                array(11293895, 12478086, -27136401, 15083750, -29307421, 14748872, 14555558, -13417103, 1613711, 4896935),\n                array(-25894883, 15323294, -8489791, -8057900, 25967126, -13425460, 2825960, -4897045, -23971776, -11267415),\n                array(-15924766, -5229880, -17443532, 6410664, 3622847, 10243618, 20615400, 12405433, -23753030, -8436416),\n            ),\n            array(\n                array(-7091295, 12556208, -20191352, 9025187, -17072479, 4333801, 4378436, 2432030, 23097949, -566018),\n                array(4565804, -16025654, 20084412, -7842817, 1724999, 189254, 24767264, 10103221, -18512313, 2424778),\n                array(366633, -11976806, 8173090, -6890119, 30788634, 5745705, -7168678, 1344109, -3642553, 12412659),\n            ),\n            array(\n                array(-24001791, 7690286, 14929416, -168257, -32210835, -13412986, 24162697, -15326504, -3141501, 11179385),\n                array(18289522, -14724954, 8056945, 16430056, -21729724, 7842514, -6001441, -1486897, -18684645, -11443503),\n                array(476239, 6601091, -6152790, -9723375, 17503545, -4863900, 27672959, 13403813, 11052904, 5219329),\n            ),\n        ),\n        array(\n            array(\n                array(20678546, -8375738, -32671898, 8849123, -5009758, 14574752, 31186971, -3973730, 9014762, -8579056),\n                array(-13644050, -10350239, -15962508, 5075808, -1514661, -11534600, -33102500, 9160280, 8473550, -3256838),\n                array(24900749, 14435722, 17209120, -15292541, -22592275, 9878983, -7689309, -16335821, -24568481, 11788948),\n            ),\n            array(\n                array(-3118155, -11395194, -13802089, 14797441, 9652448, -6845904, -20037437, 10410733, -24568470, -1458691),\n                array(-15659161, 16736706, -22467150, 10215878, -9097177, 7563911, 11871841, -12505194, -18513325, 8464118),\n                array(-23400612, 8348507, -14585951, -861714, -3950205, -6373419, 14325289, 8628612, 33313881, -8370517),\n            ),\n            array(\n                array(-20186973, -4967935, 22367356, 5271547, -1097117, -4788838, -24805667, -10236854, -8940735, -5818269),\n                array(-6948785, -1795212, -32625683, -16021179, 32635414, -7374245, 15989197, -12838188, 28358192, -4253904),\n                array(-23561781, -2799059, -32351682, -1661963, -9147719, 10429267, -16637684, 4072016, -5351664, 5596589),\n            ),\n            array(\n                array(-28236598, -3390048, 12312896, 6213178, 3117142, 16078565, 29266239, 2557221, 1768301, 15373193),\n                array(-7243358, -3246960, -4593467, -7553353, -127927, -912245, -1090902, -4504991, -24660491, 3442910),\n                array(-30210571, 5124043, 14181784, 8197961, 18964734, -11939093, 22597931, 7176455, -18585478, 13365930),\n            ),\n            array(\n                array(-7877390, -1499958, 8324673, 4690079, 6261860, 890446, 24538107, -8570186, -9689599, -3031667),\n                array(25008904, -10771599, -4305031, -9638010, 16265036, 15721635, 683793, -11823784, 15723479, -15163481),\n                array(-9660625, 12374379, -27006999, -7026148, -7724114, -12314514, 11879682, 5400171, 519526, -1235876),\n            ),\n            array(\n                array(22258397, -16332233, -7869817, 14613016, -22520255, -2950923, -20353881, 7315967, 16648397, 7605640),\n                array(-8081308, -8464597, -8223311, 9719710, 19259459, -15348212, 23994942, -5281555, -9468848, 4763278),\n                array(-21699244, 9220969, -15730624, 1084137, -25476107, -2852390, 31088447, -7764523, -11356529, 728112),\n            ),\n            array(\n                array(26047220, -11751471, -6900323, -16521798, 24092068, 9158119, -4273545, -12555558, -29365436, -5498272),\n                array(17510331, -322857, 5854289, 8403524, 17133918, -3112612, -28111007, 12327945, 10750447, 10014012),\n                array(-10312768, 3936952, 9156313, -8897683, 16498692, -994647, -27481051, -666732, 3424691, 7540221),\n            ),\n            array(\n                array(30322361, -6964110, 11361005, -4143317, 7433304, 4989748, -7071422, -16317219, -9244265, 15258046),\n                array(13054562, -2779497, 19155474, 469045, -12482797, 4566042, 5631406, 2711395, 1062915, -5136345),\n                array(-19240248, -11254599, -29509029, -7499965, -5835763, 13005411, -6066489, 12194497, 32960380, 1459310),\n            ),\n        ),\n        array(\n            array(\n                array(19852034, 7027924, 23669353, 10020366, 8586503, -6657907, 394197, -6101885, 18638003, -11174937),\n                array(31395534, 15098109, 26581030, 8030562, -16527914, -5007134, 9012486, -7584354, -6643087, -5442636),\n                array(-9192165, -2347377, -1997099, 4529534, 25766844, 607986, -13222, 9677543, -32294889, -6456008),\n            ),\n            array(\n                array(-2444496, -149937, 29348902, 8186665, 1873760, 12489863, -30934579, -7839692, -7852844, -8138429),\n                array(-15236356, -15433509, 7766470, 746860, 26346930, -10221762, -27333451, 10754588, -9431476, 5203576),\n                array(31834314, 14135496, -770007, 5159118, 20917671, -16768096, -7467973, -7337524, 31809243, 7347066),\n            ),\n            array(\n                array(-9606723, -11874240, 20414459, 13033986, 13716524, -11691881, 19797970, -12211255, 15192876, -2087490),\n                array(-12663563, -2181719, 1168162, -3804809, 26747877, -14138091, 10609330, 12694420, 33473243, -13382104),\n                array(33184999, 11180355, 15832085, -11385430, -1633671, 225884, 15089336, -11023903, -6135662, 14480053),\n            ),\n            array(\n                array(31308717, -5619998, 31030840, -1897099, 15674547, -6582883, 5496208, 13685227, 27595050, 8737275),\n                array(-20318852, -15150239, 10933843, -16178022, 8335352, -7546022, -31008351, -12610604, 26498114, 66511),\n                array(22644454, -8761729, -16671776, 4884562, -3105614, -13559366, 30540766, -4286747, -13327787, -7515095),\n            ),\n            array(\n                array(-28017847, 9834845, 18617207, -2681312, -3401956, -13307506, 8205540, 13585437, -17127465, 15115439),\n                array(23711543, -672915, 31206561, -8362711, 6164647, -9709987, -33535882, -1426096, 8236921, 16492939),\n                array(-23910559, -13515526, -26299483, -4503841, 25005590, -7687270, 19574902, 10071562, 6708380, -6222424),\n            ),\n            array(\n                array(2101391, -4930054, 19702731, 2367575, -15427167, 1047675, 5301017, 9328700, 29955601, -11678310),\n                array(3096359, 9271816, -21620864, -15521844, -14847996, -7592937, -25892142, -12635595, -9917575, 6216608),\n                array(-32615849, 338663, -25195611, 2510422, -29213566, -13820213, 24822830, -6146567, -26767480, 7525079),\n            ),\n            array(\n                array(-23066649, -13985623, 16133487, -7896178, -3389565, 778788, -910336, -2782495, -19386633, 11994101),\n                array(21691500, -13624626, -641331, -14367021, 3285881, -3483596, -25064666, 9718258, -7477437, 13381418),\n                array(18445390, -4202236, 14979846, 11622458, -1727110, -3582980, 23111648, -6375247, 28535282, 15779576),\n            ),\n            array(\n                array(30098053, 3089662, -9234387, 16662135, -21306940, 11308411, -14068454, 12021730, 9955285, -16303356),\n                array(9734894, -14576830, -7473633, -9138735, 2060392, 11313496, -18426029, 9924399, 20194861, 13380996),\n                array(-26378102, -7965207, -22167821, 15789297, -18055342, -6168792, -1984914, 15707771, 26342023, 10146099),\n            ),\n        ),\n        array(\n            array(\n                array(-26016874, -219943, 21339191, -41388, 19745256, -2878700, -29637280, 2227040, 21612326, -545728),\n                array(-13077387, 1184228, 23562814, -5970442, -20351244, -6348714, 25764461, 12243797, -20856566, 11649658),\n                array(-10031494, 11262626, 27384172, 2271902, 26947504, -15997771, 39944, 6114064, 33514190, 2333242),\n            ),\n            array(\n                array(-21433588, -12421821, 8119782, 7219913, -21830522, -9016134, -6679750, -12670638, 24350578, -13450001),\n                array(-4116307, -11271533, -23886186, 4843615, -30088339, 690623, -31536088, -10406836, 8317860, 12352766),\n                array(18200138, -14475911, -33087759, -2696619, -23702521, -9102511, -23552096, -2287550, 20712163, 6719373),\n            ),\n            array(\n                array(26656208, 6075253, -7858556, 1886072, -28344043, 4262326, 11117530, -3763210, 26224235, -3297458),\n                array(-17168938, -14854097, -3395676, -16369877, -19954045, 14050420, 21728352, 9493610, 18620611, -16428628),\n                array(-13323321, 13325349, 11432106, 5964811, 18609221, 6062965, -5269471, -9725556, -30701573, -16479657),\n            ),\n            array(\n                array(-23860538, -11233159, 26961357, 1640861, -32413112, -16737940, 12248509, -5240639, 13735342, 1934062),\n                array(25089769, 6742589, 17081145, -13406266, 21909293, -16067981, -15136294, -3765346, -21277997, 5473616),\n                array(31883677, -7961101, 1083432, -11572403, 22828471, 13290673, -7125085, 12469656, 29111212, -5451014),\n            ),\n            array(\n                array(24244947, -15050407, -26262976, 2791540, -14997599, 16666678, 24367466, 6388839, -10295587, 452383),\n                array(-25640782, -3417841, 5217916, 16224624, 19987036, -4082269, -24236251, -5915248, 15766062, 8407814),\n                array(-20406999, 13990231, 15495425, 16395525, 5377168, 15166495, -8917023, -4388953, -8067909, 2276718),\n            ),\n            array(\n                array(30157918, 12924066, -17712050, 9245753, 19895028, 3368142, -23827587, 5096219, 22740376, -7303417),\n                array(2041139, -14256350, 7783687, 13876377, -25946985, -13352459, 24051124, 13742383, -15637599, 13295222),\n                array(33338237, -8505733, 12532113, 7977527, 9106186, -1715251, -17720195, -4612972, -4451357, -14669444),\n            ),\n            array(\n                array(-20045281, 5454097, -14346548, 6447146, 28862071, 1883651, -2469266, -4141880, 7770569, 9620597),\n                array(23208068, 7979712, 33071466, 8149229, 1758231, -10834995, 30945528, -1694323, -33502340, -14767970),\n                array(1439958, -16270480, -1079989, -793782, 4625402, 10647766, -5043801, 1220118, 30494170, -11440799),\n            ),\n            array(\n                array(-5037580, -13028295, -2970559, -3061767, 15640974, -6701666, -26739026, 926050, -1684339, -13333647),\n                array(13908495, -3549272, 30919928, -6273825, -21521863, 7989039, 9021034, 9078865, 3353509, 4033511),\n                array(-29663431, -15113610, 32259991, -344482, 24295849, -12912123, 23161163, 8839127, 27485041, 7356032),\n            ),\n        ),\n        array(\n            array(\n                array(9661027, 705443, 11980065, -5370154, -1628543, 14661173, -6346142, 2625015, 28431036, -16771834),\n                array(-23839233, -8311415, -25945511, 7480958, -17681669, -8354183, -22545972, 14150565, 15970762, 4099461),\n                array(29262576, 16756590, 26350592, -8793563, 8529671, -11208050, 13617293, -9937143, 11465739, 8317062),\n            ),\n            array(\n                array(-25493081, -6962928, 32500200, -9419051, -23038724, -2302222, 14898637, 3848455, 20969334, -5157516),\n                array(-20384450, -14347713, -18336405, 13884722, -33039454, 2842114, -21610826, -3649888, 11177095, 14989547),\n                array(-24496721, -11716016, 16959896, 2278463, 12066309, 10137771, 13515641, 2581286, -28487508, 9930240),\n            ),\n            array(\n                array(-17751622, -2097826, 16544300, -13009300, -15914807, -14949081, 18345767, -13403753, 16291481, -5314038),\n                array(-33229194, 2553288, 32678213, 9875984, 8534129, 6889387, -9676774, 6957617, 4368891, 9788741),\n                array(16660756, 7281060, -10830758, 12911820, 20108584, -8101676, -21722536, -8613148, 16250552, -11111103),\n            ),\n            array(\n                array(-19765507, 2390526, -16551031, 14161980, 1905286, 6414907, 4689584, 10604807, -30190403, 4782747),\n                array(-1354539, 14736941, -7367442, -13292886, 7710542, -14155590, -9981571, 4383045, 22546403, 437323),\n                array(31665577, -12180464, -16186830, 1491339, -18368625, 3294682, 27343084, 2786261, -30633590, -14097016),\n            ),\n            array(\n                array(-14467279, -683715, -33374107, 7448552, 19294360, 14334329, -19690631, 2355319, -19284671, -6114373),\n                array(15121312, -15796162, 6377020, -6031361, -10798111, -12957845, 18952177, 15496498, -29380133, 11754228),\n                array(-2637277, -13483075, 8488727, -14303896, 12728761, -1622493, 7141596, 11724556, 22761615, -10134141),\n            ),\n            array(\n                array(16918416, 11729663, -18083579, 3022987, -31015732, -13339659, -28741185, -12227393, 32851222, 11717399),\n                array(11166634, 7338049, -6722523, 4531520, -29468672, -7302055, 31474879, 3483633, -1193175, -4030831),\n                array(-185635, 9921305, 31456609, -13536438, -12013818, 13348923, 33142652, 6546660, -19985279, -3948376),\n            ),\n            array(\n                array(-32460596, 11266712, -11197107, -7899103, 31703694, 3855903, -8537131, -12833048, -30772034, -15486313),\n                array(-18006477, 12709068, 3991746, -6479188, -21491523, -10550425, -31135347, -16049879, 10928917, 3011958),\n                array(-6957757, -15594337, 31696059, 334240, 29576716, 14796075, -30831056, -12805180, 18008031, 10258577),\n            ),\n            array(\n                array(-22448644, 15655569, 7018479, -4410003, -30314266, -1201591, -1853465, 1367120, 25127874, 6671743),\n                array(29701166, -14373934, -10878120, 9279288, -17568, 13127210, 21382910, 11042292, 25838796, 4642684),\n                array(-20430234, 14955537, -24126347, 8124619, -5369288, -5990470, 30468147, -13900640, 18423289, 4177476),\n            ),\n        )\n    );\n\n    \/**\n     * See: libsodium's crypto_core\/curve25519\/ref10\/base2.h\n     *\n     * @var array<int, array<int, array<int, int>>> basically int[8][3]\n     *\/\n    protected static $base2 = array(\n        array(\n            array(25967493, -14356035, 29566456, 3660896, -12694345, 4014787, 27544626, -11754271, -6079156, 2047605),\n            array(-12545711, 934262, -2722910, 3049990, -727428, 9406986, 12720692, 5043384, 19500929, -15469378),\n            array(-8738181, 4489570, 9688441, -14785194, 10184609, -12363380, 29287919, 11864899, -24514362, -4438546),\n        ),\n        array(\n            array(15636291, -9688557, 24204773, -7912398, 616977, -16685262, 27787600, -14772189, 28944400, -1550024),\n            array(16568933, 4717097, -11556148, -1102322, 15682896, -11807043, 16354577, -11775962, 7689662, 11199574),\n            array(30464156, -5976125, -11779434, -15670865, 23220365, 15915852, 7512774, 10017326, -17749093, -9920357),\n        ),\n        array(\n            array(10861363, 11473154, 27284546, 1981175, -30064349, 12577861, 32867885, 14515107, -15438304, 10819380),\n            array(4708026, 6336745, 20377586, 9066809, -11272109, 6594696, -25653668, 12483688, -12668491, 5581306),\n            array(19563160, 16186464, -29386857, 4097519, 10237984, -4348115, 28542350, 13850243, -23678021, -15815942),\n        ),\n        array(\n            array(5153746, 9909285, 1723747, -2777874, 30523605, 5516873, 19480852, 5230134, -23952439, -15175766),\n            array(-30269007, -3463509, 7665486, 10083793, 28475525, 1649722, 20654025, 16520125, 30598449, 7715701),\n            array(28881845, 14381568, 9657904, 3680757, -20181635, 7843316, -31400660, 1370708, 29794553, -1409300),\n        ),\n        array(\n            array(-22518993, -6692182, 14201702, -8745502, -23510406, 8844726, 18474211, -1361450, -13062696, 13821877),\n            array(-6455177, -7839871, 3374702, -4740862, -27098617, -10571707, 31655028, -7212327, 18853322, -14220951),\n            array(4566830, -12963868, -28974889, -12240689, -7602672, -2830569, -8514358, -10431137, 2207753, -3209784),\n        ),\n        array(\n            array(-25154831, -4185821, 29681144, 7868801, -6854661, -9423865, -12437364, -663000, -31111463, -16132436),\n            array(25576264, -2703214, 7349804, -11814844, 16472782, 9300885, 3844789, 15725684, 171356, 6466918),\n            array(23103977, 13316479, 9739013, -16149481, 817875, -15038942, 8965339, -14088058, -30714912, 16193877),\n        ),\n        array(\n            array(-33521811, 3180713, -2394130, 14003687, -16903474, -16270840, 17238398, 4729455, -18074513, 9256800),\n            array(-25182317, -4174131, 32336398, 5036987, -21236817, 11360617, 22616405, 9761698, -19827198, 630305),\n            array(-13720693, 2639453, -24237460, -7406481, 9494427, -5774029, -6554551, -15960994, -2449256, -14291300),\n        ),\n        array(\n            array(-3151181, -5046075, 9282714, 6866145, -31907062, -863023, -18940575, 15033784, 25105118, -7894876),\n            array(-24326370, 15950226, -31801215, -14592823, -11662737, -5090925, 1573892, -2625887, 2198790, -15804619),\n            array(-3099351, 10324967, -2241613, 7453183, -5446979, -2735503, -13812022, -16236442, -32461234, -12290683),\n        )\n    );\n\n    \/**\n     * 37095705934669439343138083508754565189542113879843219016388785533085940283555\n     *\n     * @var array<int, int>\n     *\/\n    protected static $d = array(\n        -10913610,\n        13857413,\n        -15372611,\n        6949391,\n        114729,\n        -8787816,\n        -6275908,\n        -3247719,\n        -18696448,\n        -12055116\n    );\n\n    \/**\n     * 2 * d = 16295367250680780974490674513165176452449235426866156013048779062215315747161\n     *\n     * @var array<int, int>\n     *\/\n    protected static $d2 = array(\n        -21827239,\n        -5839606,\n        -30745221,\n        13898782,\n        229458,\n        15978800,\n        -12551817,\n        -6495438,\n        29715968,\n        9444199\n    );\n\n    \/**\n     * sqrt(-1)\n     *\n     * @var array<int, int>\n     *\/\n    protected static $sqrtm1 = array(\n        -32595792,\n        -7943725,\n        9377950,\n        3500415,\n        12389472,\n        -272473,\n        -25146209,\n        -2005654,\n        326686,\n        11406482\n    );\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519\/Ge\/Cached.php","ext":"php","size":1864,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519_Ge_Cached', false)) {\n    return;\n}\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519_Ge_Cached\n *\/\nclass ParagonIE_Sodium_Core32_Curve25519_Ge_Cached\n{\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $YplusX;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $YminusX;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $T2d;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Curve25519_Ge_Cached constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $YplusX\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $YminusX\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $Z\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $T2d\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $YplusX = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $YminusX = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $Z = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $T2d = null\n    ) {\n        if ($YplusX === null) {\n            $YplusX = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->YplusX = $YplusX;\n        if ($YminusX === null) {\n            $YminusX = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->YminusX = $YminusX;\n        if ($Z === null) {\n            $Z = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->Z = $Z;\n        if ($T2d === null) {\n            $T2d = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->T2d = $T2d;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519\/Ge\/Precomp.php","ext":"php","size":1592,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp\n *\/\nclass ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp\n{\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $yplusx;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $yminusx;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $xy2d;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Curve25519_Ge_Precomp constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $yplusx\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $yminusx\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe $xy2d\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $yplusx = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $yminusx = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $xy2d = null\n    ) {\n        if ($yplusx === null) {\n            $yplusx = ParagonIE_Sodium_Core32_Curve25519::fe_0();\n        }\n        $this->yplusx = $yplusx;\n        if ($yminusx === null) {\n            $yminusx = ParagonIE_Sodium_Core32_Curve25519::fe_0();\n        }\n        $this->yminusx = $yminusx;\n        if ($xy2d === null) {\n            $xy2d = ParagonIE_Sodium_Core32_Curve25519::fe_0();\n        }\n        $this->xy2d = $xy2d;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519\/Ge\/P3.php","ext":"php","size":1757,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519_Ge_P3', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519_Ge_P3\n *\/\nclass ParagonIE_Sodium_Core32_Curve25519_Ge_P3\n{\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $X;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $Y;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $T;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Curve25519_Ge_P3 constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $x\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $y\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $z\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $t\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $x = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $y = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $z = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $t = null\n    ) {\n        if ($x === null) {\n            $x = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->X = $x;\n        if ($y === null) {\n            $y = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->Y = $y;\n        if ($z === null) {\n            $z = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->Z = $z;\n        if ($t === null) {\n            $t = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->T = $t;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519\/Ge\/P1p1.php","ext":"php","size":1823,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1', false)) {\n    return;\n}\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n *\/\nclass ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1\n{\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $X;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $Y;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $T;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Curve25519_Ge_P1p1 constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $x\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $y\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $z\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $t\n     *\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $x = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $y = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $z = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $t = null\n    ) {\n        if ($x === null) {\n            $x = ParagonIE_Sodium_Core32_Curve25519::fe_0();\n        }\n        $this->X = $x;\n        if ($y === null) {\n            $y = ParagonIE_Sodium_Core32_Curve25519::fe_0();\n        }\n        $this->Y = $y;\n        if ($z === null) {\n            $z = ParagonIE_Sodium_Core32_Curve25519::fe_0();\n        }\n        $this->Z = $z;\n        if ($t === null) {\n            $t = ParagonIE_Sodium_Core32_Curve25519::fe_0();\n        }\n        $this->T = $t;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/Curve25519\/Ge\/P2.php","ext":"php","size":1436,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_Curve25519_Ge_P2', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_Curve25519_Ge_P2\n *\/\nclass ParagonIE_Sodium_Core32_Curve25519_Ge_P2\n{\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $X;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $Y;\n\n    \/**\n     * @var ParagonIE_Sodium_Core32_Curve25519_Fe\n     *\/\n    public $Z;\n\n    \/**\n     * ParagonIE_Sodium_Core32_Curve25519_Ge_P2 constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $x\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $y\n     * @param ParagonIE_Sodium_Core32_Curve25519_Fe|null $z\n     *\/\n    public function __construct(\n        ParagonIE_Sodium_Core32_Curve25519_Fe $x = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $y = null,\n        ParagonIE_Sodium_Core32_Curve25519_Fe $z = null\n    ) {\n        if ($x === null) {\n            $x = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->X = $x;\n        if ($y === null) {\n            $y = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->Y = $y;\n        if ($z === null) {\n            $z = new ParagonIE_Sodium_Core32_Curve25519_Fe();\n        }\n        $this->Z = $z;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/HSalsa20.php","ext":"php","size":7000,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core32_HSalsa20', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_HSalsa20\n *\/\nabstract class ParagonIE_Sodium_Core32_HSalsa20 extends ParagonIE_Sodium_Core32_Salsa20\n{\n    \/**\n     * Calculate an hsalsa20 hash of a single block\n     *\n     * HSalsa20 doesn't have a counter and will never be used for more than\n     * one block (used to derive a subkey for xsalsa20).\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $in\n     * @param string $k\n     * @param string|null $c\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function hsalsa20($in, $k, $c = null)\n    {\n        \/**\n         * @var ParagonIE_Sodium_Core32_Int32 $x0\n         * @var ParagonIE_Sodium_Core32_Int32 $x1\n         * @var ParagonIE_Sodium_Core32_Int32 $x2\n         * @var ParagonIE_Sodium_Core32_Int32 $x3\n         * @var ParagonIE_Sodium_Core32_Int32 $x4\n         * @var ParagonIE_Sodium_Core32_Int32 $x5\n         * @var ParagonIE_Sodium_Core32_Int32 $x6\n         * @var ParagonIE_Sodium_Core32_Int32 $x7\n         * @var ParagonIE_Sodium_Core32_Int32 $x8\n         * @var ParagonIE_Sodium_Core32_Int32 $x9\n         * @var ParagonIE_Sodium_Core32_Int32 $x10\n         * @var ParagonIE_Sodium_Core32_Int32 $x11\n         * @var ParagonIE_Sodium_Core32_Int32 $x12\n         * @var ParagonIE_Sodium_Core32_Int32 $x13\n         * @var ParagonIE_Sodium_Core32_Int32 $x14\n         * @var ParagonIE_Sodium_Core32_Int32 $x15\n         * @var ParagonIE_Sodium_Core32_Int32 $j0\n         * @var ParagonIE_Sodium_Core32_Int32 $j1\n         * @var ParagonIE_Sodium_Core32_Int32 $j2\n         * @var ParagonIE_Sodium_Core32_Int32 $j3\n         * @var ParagonIE_Sodium_Core32_Int32 $j4\n         * @var ParagonIE_Sodium_Core32_Int32 $j5\n         * @var ParagonIE_Sodium_Core32_Int32 $j6\n         * @var ParagonIE_Sodium_Core32_Int32 $j7\n         * @var ParagonIE_Sodium_Core32_Int32 $j8\n         * @var ParagonIE_Sodium_Core32_Int32 $j9\n         * @var ParagonIE_Sodium_Core32_Int32 $j10\n         * @var ParagonIE_Sodium_Core32_Int32 $j11\n         * @var ParagonIE_Sodium_Core32_Int32 $j12\n         * @var ParagonIE_Sodium_Core32_Int32 $j13\n         * @var ParagonIE_Sodium_Core32_Int32 $j14\n         * @var ParagonIE_Sodium_Core32_Int32 $j15\n         *\/\n        if (self::strlen($k) < 32) {\n            throw new RangeException('Key must be 32 bytes long');\n        }\n        if ($c === null) {\n            $x0  = new ParagonIE_Sodium_Core32_Int32(array(0x6170, 0x7865));\n            $x5  = new ParagonIE_Sodium_Core32_Int32(array(0x3320, 0x646e));\n            $x10 = new ParagonIE_Sodium_Core32_Int32(array(0x7962, 0x2d32));\n            $x15 = new ParagonIE_Sodium_Core32_Int32(array(0x6b20, 0x6574));\n        } else {\n            $x0  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 0, 4));\n            $x5  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 4, 4));\n            $x10 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 8, 4));\n            $x15 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($c, 12, 4));\n        }\n        $x1  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 0, 4));\n        $x2  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 4, 4));\n        $x3  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 8, 4));\n        $x4  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 12, 4));\n        $x6  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 0, 4));\n        $x7  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 4, 4));\n        $x8  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 8, 4));\n        $x9  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($in, 12, 4));\n        $x11 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 16, 4));\n        $x12 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 20, 4));\n        $x13 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 24, 4));\n        $x14 = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($k, 28, 4));\n\n        for ($i = self::ROUNDS; $i > 0; $i -= 2) {\n            $x4  = $x4->xorInt32($x0->addInt32($x12)->rotateLeft(7));\n            $x8  = $x8->xorInt32($x4->addInt32($x0)->rotateLeft(9));\n            $x12 = $x12->xorInt32($x8->addInt32($x4)->rotateLeft(13));\n            $x0  = $x0->xorInt32($x12->addInt32($x8)->rotateLeft(18));\n\n            $x9  = $x9->xorInt32($x5->addInt32($x1)->rotateLeft(7));\n            $x13 = $x13->xorInt32($x9->addInt32($x5)->rotateLeft(9));\n            $x1  = $x1->xorInt32($x13->addInt32($x9)->rotateLeft(13));\n            $x5  = $x5->xorInt32($x1->addInt32($x13)->rotateLeft(18));\n\n            $x14 = $x14->xorInt32($x10->addInt32($x6)->rotateLeft(7));\n            $x2  = $x2->xorInt32($x14->addInt32($x10)->rotateLeft(9));\n            $x6  = $x6->xorInt32($x2->addInt32($x14)->rotateLeft(13));\n            $x10 = $x10->xorInt32($x6->addInt32($x2)->rotateLeft(18));\n\n            $x3  = $x3->xorInt32($x15->addInt32($x11)->rotateLeft(7));\n            $x7  = $x7->xorInt32($x3->addInt32($x15)->rotateLeft(9));\n            $x11 = $x11->xorInt32($x7->addInt32($x3)->rotateLeft(13));\n            $x15 = $x15->xorInt32($x11->addInt32($x7)->rotateLeft(18));\n\n            $x1  = $x1->xorInt32($x0->addInt32($x3)->rotateLeft(7));\n            $x2  = $x2->xorInt32($x1->addInt32($x0)->rotateLeft(9));\n            $x3  = $x3->xorInt32($x2->addInt32($x1)->rotateLeft(13));\n            $x0  = $x0->xorInt32($x3->addInt32($x2)->rotateLeft(18));\n\n            $x6  = $x6->xorInt32($x5->addInt32($x4)->rotateLeft(7));\n            $x7  = $x7->xorInt32($x6->addInt32($x5)->rotateLeft(9));\n            $x4  = $x4->xorInt32($x7->addInt32($x6)->rotateLeft(13));\n            $x5  = $x5->xorInt32($x4->addInt32($x7)->rotateLeft(18));\n\n            $x11 = $x11->xorInt32($x10->addInt32($x9)->rotateLeft(7));\n            $x8  = $x8->xorInt32($x11->addInt32($x10)->rotateLeft(9));\n            $x9  = $x9->xorInt32($x8->addInt32($x11)->rotateLeft(13));\n            $x10 = $x10->xorInt32($x9->addInt32($x8)->rotateLeft(18));\n\n            $x12 = $x12->xorInt32($x15->addInt32($x14)->rotateLeft(7));\n            $x13 = $x13->xorInt32($x12->addInt32($x15)->rotateLeft(9));\n            $x14 = $x14->xorInt32($x13->addInt32($x12)->rotateLeft(13));\n            $x15 = $x15->xorInt32($x14->addInt32($x13)->rotateLeft(18));\n        }\n\n        return $x0->toReverseString() .\n            $x5->toReverseString() .\n            $x10->toReverseString() .\n            $x15->toReverseString() .\n            $x6->toReverseString() .\n            $x7->toReverseString() .\n            $x8->toReverseString() .\n            $x9->toReverseString();\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/ChaCha20\/IetfCtx.php","ext":"php","size":1562,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_ChaCha20_IetfCtx', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_ChaCha20_IetfCtx\n *\/\nclass ParagonIE_Sodium_Core32_ChaCha20_IetfCtx extends ParagonIE_Sodium_Core32_ChaCha20_Ctx\n{\n    \/**\n     * ParagonIE_Sodium_Core_ChaCha20_IetfCtx constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $key     ChaCha20 key.\n     * @param string $iv      Initialization Vector (a.k.a. nonce).\n     * @param string $counter The initial counter value.\n     *                        Defaults to 4 0x00 bytes.\n     * @throws InvalidArgumentException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function __construct($key = '', $iv = '', $counter = '')\n    {\n        if (self::strlen($iv) !== 12) {\n            throw new InvalidArgumentException('ChaCha20 expects a 96-bit nonce in IETF mode.');\n        }\n        parent::__construct($key, self::substr($iv, 0, 8), $counter);\n\n        if (!empty($counter)) {\n            $this->container[12] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($counter, 0, 4));\n        }\n        $this->container[13] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($iv, 0, 4));\n        $this->container[14] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($iv, 4, 4));\n        $this->container[15] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($iv, 8, 4));\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Core32\/ChaCha20\/Ctx.php","ext":"php","size":4963,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_Core_ChaCha20_Ctx', false)) {\n    return;\n}\n\n\/**\n * Class ParagonIE_Sodium_Core32_ChaCha20_Ctx\n *\/\nclass ParagonIE_Sodium_Core32_ChaCha20_Ctx extends ParagonIE_Sodium_Core32_Util implements ArrayAccess\n{\n    \/**\n     * @var SplFixedArray internally, <int, ParagonIE_Sodium_Core32_Int32>\n     *\/\n    protected $container;\n\n    \/**\n     * ParagonIE_Sodium_Core_ChaCha20_Ctx constructor.\n     *\n     * @internal You should not use this directly from another application\n     *\n     * @param string $key     ChaCha20 key.\n     * @param string $iv      Initialization Vector (a.k.a. nonce).\n     * @param string $counter The initial counter value.\n     *                        Defaults to 8 0x00 bytes.\n     * @throws InvalidArgumentException\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public function __construct($key = '', $iv = '', $counter = '')\n    {\n        if (self::strlen($key) !== 32) {\n            throw new InvalidArgumentException('ChaCha20 expects a 256-bit key.');\n        }\n        if (self::strlen($iv) !== 8) {\n            throw new InvalidArgumentException('ChaCha20 expects a 64-bit nonce.');\n        }\n        $this->container = new SplFixedArray(16);\n\n        \/* \"expand 32-byte k\" as per ChaCha20 spec *\/\n        $this->container[0]  = new ParagonIE_Sodium_Core32_Int32(array(0x6170, 0x7865));\n        $this->container[1]  = new ParagonIE_Sodium_Core32_Int32(array(0x3320, 0x646e));\n        $this->container[2]  = new ParagonIE_Sodium_Core32_Int32(array(0x7962, 0x2d32));\n        $this->container[3]  = new ParagonIE_Sodium_Core32_Int32(array(0x6b20, 0x6574));\n\n        $this->container[4]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 0, 4));\n        $this->container[5]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 4, 4));\n        $this->container[6]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 8, 4));\n        $this->container[7]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 12, 4));\n        $this->container[8]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 16, 4));\n        $this->container[9]  = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 20, 4));\n        $this->container[10] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 24, 4));\n        $this->container[11] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($key, 28, 4));\n\n        if (empty($counter)) {\n            $this->container[12] = new ParagonIE_Sodium_Core32_Int32();\n            $this->container[13] = new ParagonIE_Sodium_Core32_Int32();\n        } else {\n            $this->container[12] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($counter, 0, 4));\n            $this->container[13] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($counter, 4, 4));\n        }\n        $this->container[14] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($iv, 0, 4));\n        $this->container[15] = ParagonIE_Sodium_Core32_Int32::fromReverseString(self::substr($iv, 4, 4));\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @param int|ParagonIE_Sodium_Core32_Int32 $value\n     * @return void\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetSet($offset, $value)\n    {\n        if (!is_int($offset)) {\n            throw new InvalidArgumentException('Expected an integer');\n        }\n        if ($value instanceof ParagonIE_Sodium_Core32_Int32) {\n            \/*\n        } elseif (is_int($value)) {\n            $value = ParagonIE_Sodium_Core32_Int32::fromInt($value);\n            *\/\n        } else {\n            throw new InvalidArgumentException('Expected an integer');\n        }\n        $this->container[$offset] = $value;\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return bool\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetExists($offset)\n    {\n        return isset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return void\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetUnset($offset)\n    {\n        unset($this->container[$offset]);\n    }\n\n    \/**\n     * @internal You should not use this directly from another application\n     *\n     * @param int $offset\n     * @return mixed|null\n     * @psalm-suppress MixedArrayOffset\n     *\/\n    #[ReturnTypeWillChange]\n    public function offsetGet($offset)\n    {\n        return isset($this->container[$offset])\n            ? $this->container[$offset]\n            : null;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/Compat.php","ext":"php","size":150269,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\n\/**\n * Libsodium compatibility layer\n *\n * This is the only class you should be interfacing with, as a user of\n * sodium_compat.\n *\n * If the PHP extension for libsodium is installed, it will always use that\n * instead of our implementations. You get better performance and stronger\n * guarantees against side-channels that way.\n *\n * However, if your users don't have the PHP extension installed, we offer a\n * compatible interface here. It will give you the correct results as if the\n * PHP extension was installed. It won't be as fast, of course.\n *\n * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION *\n *                                                                               *\n *     Until audited, this is probably not safe to use! DANGER WILL ROBINSON     *\n *                                                                               *\n * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION * CAUTION *\n *\/\n\nif (class_exists('ParagonIE_Sodium_Compat', false)) {\n    return;\n}\n\nclass ParagonIE_Sodium_Compat\n{\n    \/**\n     * This parameter prevents the use of the PECL extension.\n     * It should only be used for unit testing.\n     *\n     * @var bool\n     *\/\n    public static $disableFallbackForUnitTests = false;\n\n    \/**\n     * Use fast multiplication rather than our constant-time multiplication\n     * implementation. Can be enabled at runtime. Only enable this if you\n     * are absolutely certain that there is no timing leak on your platform.\n     *\n     * @var bool\n     *\/\n    public static $fastMult = false;\n\n    const LIBRARY_MAJOR_VERSION = 9;\n    const LIBRARY_MINOR_VERSION = 1;\n    const LIBRARY_VERSION_MAJOR = 9;\n    const LIBRARY_VERSION_MINOR = 1;\n    const VERSION_STRING = 'polyfill-1.0.8';\n\n    \/\/ From libsodium\n    const BASE64_VARIANT_ORIGINAL = 1;\n    const BASE64_VARIANT_ORIGINAL_NO_PADDING = 3;\n    const BASE64_VARIANT_URLSAFE = 5;\n    const BASE64_VARIANT_URLSAFE_NO_PADDING = 7;\n    const CRYPTO_AEAD_AES256GCM_KEYBYTES = 32;\n    const CRYPTO_AEAD_AES256GCM_NSECBYTES = 0;\n    const CRYPTO_AEAD_AES256GCM_NPUBBYTES = 12;\n    const CRYPTO_AEAD_AES256GCM_ABYTES = 16;\n    const CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES = 32;\n    const CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES = 0;\n    const CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES = 8;\n    const CRYPTO_AEAD_CHACHA20POLY1305_ABYTES = 16;\n    const CRYPTO_AEAD_CHACHA20POLY1305_IETF_KEYBYTES = 32;\n    const CRYPTO_AEAD_CHACHA20POLY1305_IETF_NSECBYTES = 0;\n    const CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES = 12;\n    const CRYPTO_AEAD_CHACHA20POLY1305_IETF_ABYTES = 16;\n    const CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES = 32;\n    const CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NSECBYTES = 0;\n    const CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES = 24;\n    const CRYPTO_AEAD_XCHACHA20POLY1305_IETF_ABYTES = 16;\n    const CRYPTO_AUTH_BYTES = 32;\n    const CRYPTO_AUTH_KEYBYTES = 32;\n    const CRYPTO_BOX_SEALBYTES = 16;\n    const CRYPTO_BOX_SECRETKEYBYTES = 32;\n    const CRYPTO_BOX_PUBLICKEYBYTES = 32;\n    const CRYPTO_BOX_KEYPAIRBYTES = 64;\n    const CRYPTO_BOX_MACBYTES = 16;\n    const CRYPTO_BOX_NONCEBYTES = 24;\n    const CRYPTO_BOX_SEEDBYTES = 32;\n    const CRYPTO_CORE_RISTRETTO255_BYTES = 32;\n    const CRYPTO_CORE_RISTRETTO255_SCALARBYTES = 32;\n    const CRYPTO_CORE_RISTRETTO255_HASHBYTES = 64;\n    const CRYPTO_CORE_RISTRETTO255_NONREDUCEDSCALARBYTES = 64;\n    const CRYPTO_KDF_BYTES_MIN = 16;\n    const CRYPTO_KDF_BYTES_MAX = 64;\n    const CRYPTO_KDF_CONTEXTBYTES = 8;\n    const CRYPTO_KDF_KEYBYTES = 32;\n    const CRYPTO_KX_BYTES = 32;\n    const CRYPTO_KX_PRIMITIVE = 'x25519blake2b';\n    const CRYPTO_KX_SEEDBYTES = 32;\n    const CRYPTO_KX_KEYPAIRBYTES = 64;\n    const CRYPTO_KX_PUBLICKEYBYTES = 32;\n    const CRYPTO_KX_SECRETKEYBYTES = 32;\n    const CRYPTO_KX_SESSIONKEYBYTES = 32;\n    const CRYPTO_GENERICHASH_BYTES = 32;\n    const CRYPTO_GENERICHASH_BYTES_MIN = 16;\n    const CRYPTO_GENERICHASH_BYTES_MAX = 64;\n    const CRYPTO_GENERICHASH_KEYBYTES = 32;\n    const CRYPTO_GENERICHASH_KEYBYTES_MIN = 16;\n    const CRYPTO_GENERICHASH_KEYBYTES_MAX = 64;\n    const CRYPTO_PWHASH_SALTBYTES = 16;\n    const CRYPTO_PWHASH_STRPREFIX = '$argon2id$';\n    const CRYPTO_PWHASH_ALG_ARGON2I13 = 1;\n    const CRYPTO_PWHASH_ALG_ARGON2ID13 = 2;\n    const CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE = 33554432;\n    const CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE = 4;\n    const CRYPTO_PWHASH_MEMLIMIT_MODERATE = 134217728;\n    const CRYPTO_PWHASH_OPSLIMIT_MODERATE = 6;\n    const CRYPTO_PWHASH_MEMLIMIT_SENSITIVE = 536870912;\n    const CRYPTO_PWHASH_OPSLIMIT_SENSITIVE = 8;\n    const CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES = 32;\n    const CRYPTO_PWHASH_SCRYPTSALSA208SHA256_STRPREFIX = '$7$';\n    const CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_INTERACTIVE = 534288;\n    const CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_INTERACTIVE = 16777216;\n    const CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_SENSITIVE = 33554432;\n    const CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_SENSITIVE = 1073741824;\n    const CRYPTO_SCALARMULT_BYTES = 32;\n    const CRYPTO_SCALARMULT_SCALARBYTES = 32;\n    const CRYPTO_SCALARMULT_RISTRETTO255_BYTES = 32;\n    const CRYPTO_SCALARMULT_RISTRETTO255_SCALARBYTES = 32;\n    const CRYPTO_SHORTHASH_BYTES = 8;\n    const CRYPTO_SHORTHASH_KEYBYTES = 16;\n    const CRYPTO_SECRETBOX_KEYBYTES = 32;\n    const CRYPTO_SECRETBOX_MACBYTES = 16;\n    const CRYPTO_SECRETBOX_NONCEBYTES = 24;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_ABYTES = 17;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES = 24;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_KEYBYTES = 32;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PUSH = 0;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_PULL = 1;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_REKEY = 2;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_TAG_FINAL = 3;\n    const CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_MESSAGEBYTES_MAX = 0x3fffffff80;\n    const CRYPTO_SIGN_BYTES = 64;\n    const CRYPTO_SIGN_SEEDBYTES = 32;\n    const CRYPTO_SIGN_PUBLICKEYBYTES = 32;\n    const CRYPTO_SIGN_SECRETKEYBYTES = 64;\n    const CRYPTO_SIGN_KEYPAIRBYTES = 96;\n    const CRYPTO_STREAM_KEYBYTES = 32;\n    const CRYPTO_STREAM_NONCEBYTES = 24;\n    const CRYPTO_STREAM_XCHACHA20_KEYBYTES = 32;\n    const CRYPTO_STREAM_XCHACHA20_NONCEBYTES = 24;\n\n    \/**\n     * Add two numbers (little-endian unsigned), storing the value in the first\n     * parameter.\n     *\n     * This mutates $val.\n     *\n     * @param string $val\n     * @param string $addv\n     * @return void\n     * @throws SodiumException\n     *\/\n    public static function add(&$val, $addv)\n    {\n        $val_len = ParagonIE_Sodium_Core_Util::strlen($val);\n        $addv_len = ParagonIE_Sodium_Core_Util::strlen($addv);\n        if ($val_len !== $addv_len) {\n            throw new SodiumException('values must have the same length');\n        }\n        $A = ParagonIE_Sodium_Core_Util::stringToIntArray($val);\n        $B = ParagonIE_Sodium_Core_Util::stringToIntArray($addv);\n\n        $c = 0;\n        for ($i = 0; $i < $val_len; $i++) {\n            $c += ($A[$i] + $B[$i]);\n            $A[$i] = ($c & 0xff);\n            $c >>= 8;\n        }\n        $val = ParagonIE_Sodium_Core_Util::intArrayToString($A);\n    }\n\n    \/**\n     * @param string $encoded\n     * @param int $variant\n     * @param string $ignore\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function base642bin($encoded, $variant, $ignore = '')\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($encoded, 'string', 1);\n\n        \/** @var string $encoded *\/\n        $encoded = (string) $encoded;\n        if (ParagonIE_Sodium_Core_Util::strlen($encoded) === 0) {\n            return '';\n        }\n\n        \/\/ Just strip before decoding\n        if (!empty($ignore)) {\n            $encoded = str_replace($ignore, '', $encoded);\n        }\n\n        try {\n            switch ($variant) {\n                case self::BASE64_VARIANT_ORIGINAL:\n                    return ParagonIE_Sodium_Core_Base64_Original::decode($encoded, true);\n                case self::BASE64_VARIANT_ORIGINAL_NO_PADDING:\n                    return ParagonIE_Sodium_Core_Base64_Original::decode($encoded, false);\n                case self::BASE64_VARIANT_URLSAFE:\n                    return ParagonIE_Sodium_Core_Base64_UrlSafe::decode($encoded, true);\n                case self::BASE64_VARIANT_URLSAFE_NO_PADDING:\n                    return ParagonIE_Sodium_Core_Base64_UrlSafe::decode($encoded, false);\n                default:\n                    throw new SodiumException('invalid base64 variant identifier');\n            }\n        } catch (Exception $ex) {\n            if ($ex instanceof SodiumException) {\n                throw $ex;\n            }\n            throw new SodiumException('invalid base64 string');\n        }\n    }\n\n    \/**\n     * @param string $decoded\n     * @param int $variant\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function bin2base64($decoded, $variant)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($decoded, 'string', 1);\n        \/** @var string $decoded *\/\n        $decoded = (string) $decoded;\n        if (ParagonIE_Sodium_Core_Util::strlen($decoded) === 0) {\n            return '';\n        }\n\n        switch ($variant) {\n            case self::BASE64_VARIANT_ORIGINAL:\n                return ParagonIE_Sodium_Core_Base64_Original::encode($decoded);\n            case self::BASE64_VARIANT_ORIGINAL_NO_PADDING:\n                return ParagonIE_Sodium_Core_Base64_Original::encodeUnpadded($decoded);\n            case self::BASE64_VARIANT_URLSAFE:\n                return ParagonIE_Sodium_Core_Base64_UrlSafe::encode($decoded);\n            case self::BASE64_VARIANT_URLSAFE_NO_PADDING:\n                return ParagonIE_Sodium_Core_Base64_UrlSafe::encodeUnpadded($decoded);\n            default:\n                throw new SodiumException('invalid base64 variant identifier');\n        }\n    }\n\n    \/**\n     * Cache-timing-safe implementation of bin2hex().\n     *\n     * @param string $string A string (probably raw binary)\n     * @return string        A hexadecimal-encoded string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function bin2hex($string)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($string, 'string', 1);\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_bin2hex($string);\n        }\n        if (self::use_fallback('bin2hex')) {\n            return (string) call_user_func('\\\\Sodium\\\\bin2hex', $string);\n        }\n        return ParagonIE_Sodium_Core_Util::bin2hex($string);\n    }\n\n    \/**\n     * Compare two strings, in constant-time.\n     * Compared to memcmp(), compare() is more useful for sorting.\n     *\n     * @param string $left  The left operand; must be a string\n     * @param string $right The right operand; must be a string\n     * @return int          If < 0 if the left operand is less than the right\n     *                      If = 0 if both strings are equal\n     *                      If > 0 if the right operand is less than the left\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function compare($left, $right)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($left, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($right, 'string', 2);\n\n        if (self::useNewSodiumAPI()) {\n            return (int) sodium_compare($left, $right);\n        }\n        if (self::use_fallback('compare')) {\n            return (int) call_user_func('\\\\Sodium\\\\compare', $left, $right);\n        }\n        return ParagonIE_Sodium_Core_Util::compare($left, $right);\n    }\n\n    \/**\n     * Is AES-256-GCM even available to use?\n     *\n     * @return bool\n     * @psalm-suppress UndefinedFunction\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_aead_aes256gcm_is_available()\n    {\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_aead_aes256gcm_is_available();\n        }\n        if (self::use_fallback('crypto_aead_aes256gcm_is_available')) {\n            return call_user_func('\\\\Sodium\\\\crypto_aead_aes256gcm_is_available');\n        }\n        if (PHP_VERSION_ID < 70100) {\n            \/\/ OpenSSL doesn't support AEAD before 7.1.0\n            return false;\n        }\n        if (!is_callable('openssl_encrypt') || !is_callable('openssl_decrypt')) {\n            \/\/ OpenSSL isn't installed\n            return false;\n        }\n        return (bool) in_array('aes-256-gcm', openssl_get_cipher_methods());\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data: Decryption\n     *\n     * Algorithm:\n     *     AES-256-GCM\n     *\n     * This mode uses a 64-bit random nonce with a 64-bit counter.\n     * IETF mode uses a 96-bit random nonce with a 32-bit counter.\n     *\n     * @param string $ciphertext Encrypted message (with Poly1305 MAC appended)\n     * @param string $assocData  Authenticated Associated Data (unencrypted)\n     * @param string $nonce      Number to be used only Once; must be 8 bytes\n     * @param string $key        Encryption key\n     *\n     * @return string|bool       The original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_aead_aes256gcm_decrypt(\n        $ciphertext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        if (!self::crypto_aead_aes256gcm_is_available()) {\n            throw new SodiumException('AES-256-GCM is not available');\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_AES256GCM_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_AES256GCM_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_AES256GCM_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_AES256GCM_KEYBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($ciphertext) < self::CRYPTO_AEAD_AES256GCM_ABYTES) {\n            throw new SodiumException('Message must be at least CRYPTO_AEAD_AES256GCM_ABYTES long');\n        }\n        if (!is_callable('openssl_decrypt')) {\n            throw new SodiumException('The OpenSSL extension is not installed, or openssl_decrypt() is not available');\n        }\n\n        \/** @var string $ctext *\/\n        $ctext = ParagonIE_Sodium_Core_Util::substr($ciphertext, 0, -self::CRYPTO_AEAD_AES256GCM_ABYTES);\n        \/** @var string $authTag *\/\n        $authTag = ParagonIE_Sodium_Core_Util::substr($ciphertext, -self::CRYPTO_AEAD_AES256GCM_ABYTES, 16);\n        return openssl_decrypt(\n            $ctext,\n            'aes-256-gcm',\n            $key,\n            OPENSSL_RAW_DATA,\n            $nonce,\n            $authTag,\n            $assocData\n        );\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data: Encryption\n     *\n     * Algorithm:\n     *     AES-256-GCM\n     *\n     * @param string $plaintext Message to be encrypted\n     * @param string $assocData Authenticated Associated Data (unencrypted)\n     * @param string $nonce     Number to be used only Once; must be 8 bytes\n     * @param string $key       Encryption key\n     *\n     * @return string           Ciphertext with a 16-byte GCM message\n     *                          authentication code appended\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_aead_aes256gcm_encrypt(\n        $plaintext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        if (!self::crypto_aead_aes256gcm_is_available()) {\n            throw new SodiumException('AES-256-GCM is not available');\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_AES256GCM_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_AES256GCM_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_AES256GCM_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_AES256GCM_KEYBYTES long');\n        }\n\n        if (!is_callable('openssl_encrypt')) {\n            throw new SodiumException('The OpenSSL extension is not installed, or openssl_encrypt() is not available');\n        }\n\n        $authTag = '';\n        $ciphertext = openssl_encrypt(\n            $plaintext,\n            'aes-256-gcm',\n            $key,\n            OPENSSL_RAW_DATA,\n            $nonce,\n            $authTag,\n            $assocData\n        );\n        return $ciphertext . $authTag;\n    }\n\n    \/**\n     * Return a secure random key for use with the AES-256-GCM\n     * symmetric AEAD interface.\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_aead_aes256gcm_keygen()\n    {\n        return random_bytes(self::CRYPTO_AEAD_AES256GCM_KEYBYTES);\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data: Decryption\n     *\n     * Algorithm:\n     *     ChaCha20-Poly1305\n     *\n     * This mode uses a 64-bit random nonce with a 64-bit counter.\n     * IETF mode uses a 96-bit random nonce with a 32-bit counter.\n     *\n     * @param string $ciphertext Encrypted message (with Poly1305 MAC appended)\n     * @param string $assocData  Authenticated Associated Data (unencrypted)\n     * @param string $nonce      Number to be used only Once; must be 8 bytes\n     * @param string $key        Encryption key\n     *\n     * @return string            The original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_aead_chacha20poly1305_decrypt(\n        $ciphertext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($ciphertext) < self::CRYPTO_AEAD_CHACHA20POLY1305_ABYTES) {\n            throw new SodiumException('Message must be at least CRYPTO_AEAD_CHACHA20POLY1305_ABYTES long');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            \/**\n             * @psalm-suppress InvalidReturnStatement\n             * @psalm-suppress FalsableReturnStatement\n             *\/\n            return sodium_crypto_aead_chacha20poly1305_decrypt(\n                $ciphertext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (self::use_fallback('crypto_aead_chacha20poly1305_decrypt')) {\n            return call_user_func(\n                '\\\\Sodium\\\\crypto_aead_chacha20poly1305_decrypt',\n                $ciphertext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::aead_chacha20poly1305_decrypt(\n                $ciphertext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        return ParagonIE_Sodium_Crypto::aead_chacha20poly1305_decrypt(\n            $ciphertext,\n            $assocData,\n            $nonce,\n            $key\n        );\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data\n     *\n     * Algorithm:\n     *     ChaCha20-Poly1305\n     *\n     * This mode uses a 64-bit random nonce with a 64-bit counter.\n     * IETF mode uses a 96-bit random nonce with a 32-bit counter.\n     *\n     * @param string $plaintext Message to be encrypted\n     * @param string $assocData Authenticated Associated Data (unencrypted)\n     * @param string $nonce     Number to be used only Once; must be 8 bytes\n     * @param string $key       Encryption key\n     *\n     * @return string           Ciphertext with a 16-byte Poly1305 message\n     *                          authentication code appended\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_aead_chacha20poly1305_encrypt(\n        $plaintext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES long');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_aead_chacha20poly1305_encrypt(\n                $plaintext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (self::use_fallback('crypto_aead_chacha20poly1305_encrypt')) {\n            return (string) call_user_func(\n                '\\\\Sodium\\\\crypto_aead_chacha20poly1305_encrypt',\n                $plaintext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::aead_chacha20poly1305_encrypt(\n                $plaintext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        return ParagonIE_Sodium_Crypto::aead_chacha20poly1305_encrypt(\n            $plaintext,\n            $assocData,\n            $nonce,\n            $key\n        );\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data: Decryption\n     *\n     * Algorithm:\n     *     ChaCha20-Poly1305\n     *\n     * IETF mode uses a 96-bit random nonce with a 32-bit counter.\n     * Regular mode uses a 64-bit random nonce with a 64-bit counter.\n     *\n     * @param string $ciphertext Encrypted message (with Poly1305 MAC appended)\n     * @param string $assocData  Authenticated Associated Data (unencrypted)\n     * @param string $nonce      Number to be used only Once; must be 12 bytes\n     * @param string $key        Encryption key\n     *\n     * @return string            The original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_aead_chacha20poly1305_ietf_decrypt(\n        $ciphertext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($ciphertext) < self::CRYPTO_AEAD_CHACHA20POLY1305_ABYTES) {\n            throw new SodiumException('Message must be at least CRYPTO_AEAD_CHACHA20POLY1305_ABYTES long');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            \/**\n             * @psalm-suppress InvalidReturnStatement\n             * @psalm-suppress FalsableReturnStatement\n             *\/\n            return sodium_crypto_aead_chacha20poly1305_ietf_decrypt(\n                $ciphertext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (self::use_fallback('crypto_aead_chacha20poly1305_ietf_decrypt')) {\n            return call_user_func(\n                '\\\\Sodium\\\\crypto_aead_chacha20poly1305_ietf_decrypt',\n                $ciphertext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::aead_chacha20poly1305_ietf_decrypt(\n                $ciphertext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        return ParagonIE_Sodium_Crypto::aead_chacha20poly1305_ietf_decrypt(\n            $ciphertext,\n            $assocData,\n            $nonce,\n            $key\n        );\n    }\n\n    \/**\n     * Return a secure random key for use with the ChaCha20-Poly1305\n     * symmetric AEAD interface.\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_aead_chacha20poly1305_keygen()\n    {\n        return random_bytes(self::CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES);\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data\n     *\n     * Algorithm:\n     *     ChaCha20-Poly1305\n     *\n     * IETF mode uses a 96-bit random nonce with a 32-bit counter.\n     * Regular mode uses a 64-bit random nonce with a 64-bit counter.\n     *\n     * @param string $plaintext Message to be encrypted\n     * @param string $assocData Authenticated Associated Data (unencrypted)\n     * @param string $nonce Number to be used only Once; must be 8 bytes\n     * @param string $key Encryption key\n     *\n     * @return string           Ciphertext with a 16-byte Poly1305 message\n     *                          authentication code appended\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_aead_chacha20poly1305_ietf_encrypt(\n        $plaintext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = ''\n    ) {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        if (!is_null($assocData)) {\n            ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_CHACHA20POLY1305_IETF_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES long');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_aead_chacha20poly1305_ietf_encrypt(\n                $plaintext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (self::use_fallback('crypto_aead_chacha20poly1305_ietf_encrypt')) {\n            return (string) call_user_func(\n                '\\\\Sodium\\\\crypto_aead_chacha20poly1305_ietf_encrypt',\n                $plaintext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::aead_chacha20poly1305_ietf_encrypt(\n                $plaintext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        return ParagonIE_Sodium_Crypto::aead_chacha20poly1305_ietf_encrypt(\n            $plaintext,\n            $assocData,\n            $nonce,\n            $key\n        );\n    }\n\n    \/**\n     * Return a secure random key for use with the ChaCha20-Poly1305\n     * symmetric AEAD interface. (IETF version)\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_aead_chacha20poly1305_ietf_keygen()\n    {\n        return random_bytes(self::CRYPTO_AEAD_CHACHA20POLY1305_IETF_KEYBYTES);\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data: Decryption\n     *\n     * Algorithm:\n     *     XChaCha20-Poly1305\n     *\n     * This mode uses a 64-bit random nonce with a 64-bit counter.\n     * IETF mode uses a 96-bit random nonce with a 32-bit counter.\n     *\n     * @param string $ciphertext   Encrypted message (with Poly1305 MAC appended)\n     * @param string $assocData    Authenticated Associated Data (unencrypted)\n     * @param string $nonce        Number to be used only Once; must be 8 bytes\n     * @param string $key          Encryption key\n     * @param bool   $dontFallback Don't fallback to ext\/sodium\n     *\n     * @return string|bool         The original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_aead_xchacha20poly1305_ietf_decrypt(\n        $ciphertext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = '',\n        $dontFallback = false\n    ) {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        if (!is_null($assocData)) {\n            ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        } else {\n            $assocData = '';\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($ciphertext) < self::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_ABYTES) {\n            throw new SodiumException('Message must be at least CRYPTO_AEAD_XCHACHA20POLY1305_IETF_ABYTES long');\n        }\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            if (is_callable('sodium_crypto_aead_xchacha20poly1305_ietf_decrypt')) {\n                return sodium_crypto_aead_xchacha20poly1305_ietf_decrypt(\n                    $ciphertext,\n                    $assocData,\n                    $nonce,\n                    $key\n                );\n            }\n        }\n\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::aead_xchacha20poly1305_ietf_decrypt(\n                $ciphertext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        return ParagonIE_Sodium_Crypto::aead_xchacha20poly1305_ietf_decrypt(\n            $ciphertext,\n            $assocData,\n            $nonce,\n            $key\n        );\n    }\n\n    \/**\n     * Authenticated Encryption with Associated Data\n     *\n     * Algorithm:\n     *     XChaCha20-Poly1305\n     *\n     * This mode uses a 64-bit random nonce with a 64-bit counter.\n     * IETF mode uses a 96-bit random nonce with a 32-bit counter.\n     *\n     * @param string $plaintext    Message to be encrypted\n     * @param string $assocData    Authenticated Associated Data (unencrypted)\n     * @param string $nonce        Number to be used only Once; must be 8 bytes\n     * @param string $key          Encryption key\n     * @param bool   $dontFallback Don't fallback to ext\/sodium\n     *\n     * @return string           Ciphertext with a 16-byte Poly1305 message\n     *                          authentication code appended\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_aead_xchacha20poly1305_ietf_encrypt(\n        $plaintext = '',\n        $assocData = '',\n        $nonce = '',\n        $key = '',\n        $dontFallback = false\n    ) {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        if (!is_null($assocData)) {\n            ParagonIE_Sodium_Core_Util::declareScalarType($assocData, 'string', 2);\n        } else {\n            $assocData = '';\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_NPUBBYTES) {\n            throw new SodiumException('Nonce must be CRYPTO_AEAD_XCHACHA20POLY1305_NPUBBYTES long');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES) {\n            throw new SodiumException('Key must be CRYPTO_AEAD_XCHACHA20POLY1305_KEYBYTES long');\n        }\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            if (is_callable('sodium_crypto_aead_xchacha20poly1305_ietf_encrypt')) {\n                return sodium_crypto_aead_xchacha20poly1305_ietf_encrypt(\n                    $plaintext,\n                    $assocData,\n                    $nonce,\n                    $key\n                );\n            }\n        }\n\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::aead_xchacha20poly1305_ietf_encrypt(\n                $plaintext,\n                $assocData,\n                $nonce,\n                $key\n            );\n        }\n        return ParagonIE_Sodium_Crypto::aead_xchacha20poly1305_ietf_encrypt(\n            $plaintext,\n            $assocData,\n            $nonce,\n            $key\n        );\n    }\n\n    \/**\n     * Return a secure random key for use with the XChaCha20-Poly1305\n     * symmetric AEAD interface.\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_aead_xchacha20poly1305_ietf_keygen()\n    {\n        return random_bytes(self::CRYPTO_AEAD_XCHACHA20POLY1305_IETF_KEYBYTES);\n    }\n\n    \/**\n     * Authenticate a message. Uses symmetric-key cryptography.\n     *\n     * Algorithm:\n     *     HMAC-SHA512-256. Which is HMAC-SHA-512 truncated to 256 bits.\n     *     Not to be confused with HMAC-SHA-512\/256 which would use the\n     *     SHA-512\/256 hash function (uses different initial parameters\n     *     but still truncates to 256 bits to sidestep length-extension\n     *     attacks).\n     *\n     * @param string $message Message to be authenticated\n     * @param string $key Symmetric authentication key\n     * @return string         Message authentication code\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_auth($message, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AUTH_KEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_AUTH_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_auth($message, $key);\n        }\n        if (self::use_fallback('crypto_auth')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_auth', $message, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::auth($message, $key);\n        }\n        return ParagonIE_Sodium_Crypto::auth($message, $key);\n    }\n\n    \/**\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_auth_keygen()\n    {\n        return random_bytes(self::CRYPTO_AUTH_KEYBYTES);\n    }\n\n    \/**\n     * Verify the MAC of a message previously authenticated with crypto_auth.\n     *\n     * @param string $mac Message authentication code\n     * @param string $message Message whose authenticity you are attempting to\n     *                        verify (with a given MAC and key)\n     * @param string $key Symmetric authentication key\n     * @return bool           TRUE if authenticated, FALSE otherwise\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_auth_verify($mac, $message, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($mac, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($mac) !== self::CRYPTO_AUTH_BYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_AUTH_BYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_AUTH_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_AUTH_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (bool) sodium_crypto_auth_verify($mac, $message, $key);\n        }\n        if (self::use_fallback('crypto_auth_verify')) {\n            return (bool) call_user_func('\\\\Sodium\\\\crypto_auth_verify', $mac, $message, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::auth_verify($mac, $message, $key);\n        }\n        return ParagonIE_Sodium_Crypto::auth_verify($mac, $message, $key);\n    }\n\n    \/**\n     * Authenticated asymmetric-key encryption. Both the sender and recipient\n     * may decrypt messages.\n     *\n     * Algorithm: X25519-XSalsa20-Poly1305.\n     *     X25519: Elliptic-Curve Diffie Hellman over Curve25519.\n     *     XSalsa20: Extended-nonce variant of salsa20.\n     *     Poyl1305: Polynomial MAC for one-time message authentication.\n     *\n     * @param string $plaintext The message to be encrypted\n     * @param string $nonce A Number to only be used Once; must be 24 bytes\n     * @param string $keypair Your secret key and your recipient's public key\n     * @return string           Ciphertext with 16-byte Poly1305 MAC\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_box($plaintext, $nonce, $keypair)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_BOX_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_BOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_BOX_KEYPAIRBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box($plaintext, $nonce, $keypair);\n        }\n        if (self::use_fallback('crypto_box')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box', $plaintext, $nonce, $keypair);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box($plaintext, $nonce, $keypair);\n        }\n        return ParagonIE_Sodium_Crypto::box($plaintext, $nonce, $keypair);\n    }\n\n    \/**\n     * Anonymous public-key encryption. Only the recipient may decrypt messages.\n     *\n     * Algorithm: X25519-XSalsa20-Poly1305, as with crypto_box.\n     *     The sender's X25519 keypair is ephemeral.\n     *     Nonce is generated from the BLAKE2b hash of both public keys.\n     *\n     * This provides ciphertext integrity.\n     *\n     * @param string $plaintext Message to be sealed\n     * @param string $publicKey Your recipient's public key\n     * @return string           Sealed message that only your recipient can\n     *                          decrypt\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_box_seal($plaintext, $publicKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($publicKey, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($publicKey) !== self::CRYPTO_BOX_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_BOX_PUBLICKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box_seal($plaintext, $publicKey);\n        }\n        if (self::use_fallback('crypto_box_seal')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box_seal', $plaintext, $publicKey);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_seal($plaintext, $publicKey);\n        }\n        return ParagonIE_Sodium_Crypto::box_seal($plaintext, $publicKey);\n    }\n\n    \/**\n     * Opens a message encrypted with crypto_box_seal(). Requires\n     * the recipient's keypair (sk || pk) to decrypt successfully.\n     *\n     * This validates ciphertext integrity.\n     *\n     * @param string $ciphertext Sealed message to be opened\n     * @param string $keypair    Your crypto_box keypair\n     * @return string            The original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_box_seal_open($ciphertext, $keypair)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_BOX_KEYPAIRBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            \/**\n             * @psalm-suppress InvalidReturnStatement\n             * @psalm-suppress FalsableReturnStatement\n             *\/\n            return sodium_crypto_box_seal_open($ciphertext, $keypair);\n        }\n        if (self::use_fallback('crypto_box_seal_open')) {\n            return call_user_func('\\\\Sodium\\\\crypto_box_seal_open', $ciphertext, $keypair);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_seal_open($ciphertext, $keypair);\n        }\n        return ParagonIE_Sodium_Crypto::box_seal_open($ciphertext, $keypair);\n    }\n\n    \/**\n     * Generate a new random X25519 keypair.\n     *\n     * @return string A 64-byte string; the first 32 are your secret key, while\n     *                the last 32 are your public key. crypto_box_secretkey()\n     *                and crypto_box_publickey() exist to separate them so you\n     *                don't accidentally get them mixed up!\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_box_keypair()\n    {\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box_keypair();\n        }\n        if (self::use_fallback('crypto_box_keypair')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box_keypair');\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_keypair();\n        }\n        return ParagonIE_Sodium_Crypto::box_keypair();\n    }\n\n    \/**\n     * Combine two keys into a keypair for use in library methods that expect\n     * a keypair. This doesn't necessarily have to be the same person's keys.\n     *\n     * @param string $secretKey Secret key\n     * @param string $publicKey Public key\n     * @return string    Keypair\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_box_keypair_from_secretkey_and_publickey($secretKey, $publicKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($secretKey, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($publicKey, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($secretKey) !== self::CRYPTO_BOX_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_BOX_SECRETKEYBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($publicKey) !== self::CRYPTO_BOX_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_BOX_PUBLICKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box_keypair_from_secretkey_and_publickey($secretKey, $publicKey);\n        }\n        if (self::use_fallback('crypto_box_keypair_from_secretkey_and_publickey')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box_keypair_from_secretkey_and_publickey', $secretKey, $publicKey);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_keypair_from_secretkey_and_publickey($secretKey, $publicKey);\n        }\n        return ParagonIE_Sodium_Crypto::box_keypair_from_secretkey_and_publickey($secretKey, $publicKey);\n    }\n\n    \/**\n     * Decrypt a message previously encrypted with crypto_box().\n     *\n     * @param string $ciphertext Encrypted message\n     * @param string $nonce      Number to only be used Once; must be 24 bytes\n     * @param string $keypair    Your secret key and the sender's public key\n     * @return string            The original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_box_open($ciphertext, $nonce, $keypair)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($ciphertext) < self::CRYPTO_BOX_MACBYTES) {\n            throw new SodiumException('Argument 1 must be at least CRYPTO_BOX_MACBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_BOX_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_BOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_BOX_KEYPAIRBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            \/**\n             * @psalm-suppress InvalidReturnStatement\n             * @psalm-suppress FalsableReturnStatement\n             *\/\n            return sodium_crypto_box_open($ciphertext, $nonce, $keypair);\n        }\n        if (self::use_fallback('crypto_box_open')) {\n            return call_user_func('\\\\Sodium\\\\crypto_box_open', $ciphertext, $nonce, $keypair);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_open($ciphertext, $nonce, $keypair);\n        }\n        return ParagonIE_Sodium_Crypto::box_open($ciphertext, $nonce, $keypair);\n    }\n\n    \/**\n     * Extract the public key from a crypto_box keypair.\n     *\n     * @param string $keypair Keypair containing secret and public key\n     * @return string         Your crypto_box public key\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_box_publickey($keypair)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_BOX_KEYPAIRBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box_publickey($keypair);\n        }\n        if (self::use_fallback('crypto_box_publickey')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box_publickey', $keypair);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_publickey($keypair);\n        }\n        return ParagonIE_Sodium_Crypto::box_publickey($keypair);\n    }\n\n    \/**\n     * Calculate the X25519 public key from a given X25519 secret key.\n     *\n     * @param string $secretKey Any X25519 secret key\n     * @return string           The corresponding X25519 public key\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_box_publickey_from_secretkey($secretKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($secretKey, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($secretKey) !== self::CRYPTO_BOX_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_BOX_SECRETKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box_publickey_from_secretkey($secretKey);\n        }\n        if (self::use_fallback('crypto_box_publickey_from_secretkey')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box_publickey_from_secretkey', $secretKey);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_publickey_from_secretkey($secretKey);\n        }\n        return ParagonIE_Sodium_Crypto::box_publickey_from_secretkey($secretKey);\n    }\n\n    \/**\n     * Extract the secret key from a crypto_box keypair.\n     *\n     * @param string $keypair\n     * @return string         Your crypto_box secret key\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_box_secretkey($keypair)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_BOX_KEYPAIRBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box_secretkey($keypair);\n        }\n        if (self::use_fallback('crypto_box_secretkey')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box_secretkey', $keypair);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_secretkey($keypair);\n        }\n        return ParagonIE_Sodium_Crypto::box_secretkey($keypair);\n    }\n\n    \/**\n     * Generate an X25519 keypair from a seed.\n     *\n     * @param string $seed\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress UndefinedFunction\n     *\/\n    public static function crypto_box_seed_keypair($seed)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($seed, 'string', 1);\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_box_seed_keypair($seed);\n        }\n        if (self::use_fallback('crypto_box_seed_keypair')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_box_seed_keypair', $seed);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::box_seed_keypair($seed);\n        }\n        return ParagonIE_Sodium_Crypto::box_seed_keypair($seed);\n    }\n\n    \/**\n     * Calculates a BLAKE2b hash, with an optional key.\n     *\n     * @param string      $message The message to be hashed\n     * @param string|null $key     If specified, must be a string between 16\n     *                             and 64 bytes long\n     * @param int         $length  Output length in bytes; must be between 16\n     *                             and 64 (default = 32)\n     * @return string              Raw binary\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_generichash($message, $key = '', $length = self::CRYPTO_GENERICHASH_BYTES)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        if (is_null($key)) {\n            $key = '';\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($length, 'int', 3);\n\n        \/* Input validation: *\/\n        if (!empty($key)) {\n            if (ParagonIE_Sodium_Core_Util::strlen($key) < self::CRYPTO_GENERICHASH_KEYBYTES_MIN) {\n                throw new SodiumException('Unsupported key size. Must be at least CRYPTO_GENERICHASH_KEYBYTES_MIN bytes long.');\n            }\n            if (ParagonIE_Sodium_Core_Util::strlen($key) > self::CRYPTO_GENERICHASH_KEYBYTES_MAX) {\n                throw new SodiumException('Unsupported key size. Must be at most CRYPTO_GENERICHASH_KEYBYTES_MAX bytes long.');\n            }\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_generichash($message, $key, $length);\n        }\n        if (self::use_fallback('crypto_generichash')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_generichash', $message, $key, $length);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::generichash($message, $key, $length);\n        }\n        return ParagonIE_Sodium_Crypto::generichash($message, $key, $length);\n    }\n\n    \/**\n     * Get the final BLAKE2b hash output for a given context.\n     *\n     * @param string $ctx BLAKE2 hashing context. Generated by crypto_generichash_init().\n     * @param int $length Hash output size.\n     * @return string     Final BLAKE2b hash.\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress ReferenceConstraintViolation\n     * @psalm-suppress ConflictingReferenceConstraint\n     *\/\n    public static function crypto_generichash_final(&$ctx, $length = self::CRYPTO_GENERICHASH_BYTES)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ctx, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($length, 'int', 2);\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_generichash_final($ctx, $length);\n        }\n        if (self::use_fallback('crypto_generichash_final')) {\n            $func = '\\\\Sodium\\\\crypto_generichash_final';\n            return (string) $func($ctx, $length);\n        }\n        if ($length < 1) {\n            try {\n                self::memzero($ctx);\n            } catch (SodiumException $ex) {\n                unset($ctx);\n            }\n            return '';\n        }\n        if (PHP_INT_SIZE === 4) {\n            $result = ParagonIE_Sodium_Crypto32::generichash_final($ctx, $length);\n        } else {\n            $result = ParagonIE_Sodium_Crypto::generichash_final($ctx, $length);\n        }\n        try {\n            self::memzero($ctx);\n        } catch (SodiumException $ex) {\n            unset($ctx);\n        }\n        return $result;\n    }\n\n    \/**\n     * Initialize a BLAKE2b hashing context, for use in a streaming interface.\n     *\n     * @param string|null $key If specified must be a string between 16 and 64 bytes\n     * @param int $length      The size of the desired hash output\n     * @return string          A BLAKE2 hashing context, encoded as a string\n     *                         (To be 100% compatible with ext\/libsodium)\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_generichash_init($key = '', $length = self::CRYPTO_GENERICHASH_BYTES)\n    {\n        \/* Type checks: *\/\n        if (is_null($key)) {\n            $key = '';\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($length, 'int', 2);\n\n        \/* Input validation: *\/\n        if (!empty($key)) {\n            if (ParagonIE_Sodium_Core_Util::strlen($key) < self::CRYPTO_GENERICHASH_KEYBYTES_MIN) {\n                throw new SodiumException('Unsupported key size. Must be at least CRYPTO_GENERICHASH_KEYBYTES_MIN bytes long.');\n            }\n            if (ParagonIE_Sodium_Core_Util::strlen($key) > self::CRYPTO_GENERICHASH_KEYBYTES_MAX) {\n                throw new SodiumException('Unsupported key size. Must be at most CRYPTO_GENERICHASH_KEYBYTES_MAX bytes long.');\n            }\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_generichash_init($key, $length);\n        }\n        if (self::use_fallback('crypto_generichash_init')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_generichash_init', $key, $length);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::generichash_init($key, $length);\n        }\n        return ParagonIE_Sodium_Crypto::generichash_init($key, $length);\n    }\n\n    \/**\n     * Initialize a BLAKE2b hashing context, for use in a streaming interface.\n     *\n     * @param string|null $key If specified must be a string between 16 and 64 bytes\n     * @param int $length      The size of the desired hash output\n     * @param string $salt     Salt (up to 16 bytes)\n     * @param string $personal Personalization string (up to 16 bytes)\n     * @return string          A BLAKE2 hashing context, encoded as a string\n     *                         (To be 100% compatible with ext\/libsodium)\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_generichash_init_salt_personal(\n        $key = '',\n        $length = self::CRYPTO_GENERICHASH_BYTES,\n        $salt = '',\n        $personal = ''\n    ) {\n        \/* Type checks: *\/\n        if (is_null($key)) {\n            $key = '';\n        }\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($length, 'int', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($salt, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($personal, 'string', 4);\n        $salt = str_pad($salt, 16, \"\\0\", STR_PAD_RIGHT);\n        $personal = str_pad($personal, 16, \"\\0\", STR_PAD_RIGHT);\n\n        \/* Input validation: *\/\n        if (!empty($key)) {\n            \/*\n            if (ParagonIE_Sodium_Core_Util::strlen($key) < self::CRYPTO_GENERICHASH_KEYBYTES_MIN) {\n                throw new SodiumException('Unsupported key size. Must be at least CRYPTO_GENERICHASH_KEYBYTES_MIN bytes long.');\n            }\n            *\/\n            if (ParagonIE_Sodium_Core_Util::strlen($key) > self::CRYPTO_GENERICHASH_KEYBYTES_MAX) {\n                throw new SodiumException('Unsupported key size. Must be at most CRYPTO_GENERICHASH_KEYBYTES_MAX bytes long.');\n            }\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::generichash_init_salt_personal($key, $length, $salt, $personal);\n        }\n        return ParagonIE_Sodium_Crypto::generichash_init_salt_personal($key, $length, $salt, $personal);\n    }\n\n    \/**\n     * Update a BLAKE2b hashing context with additional data.\n     *\n     * @param string $ctx    BLAKE2 hashing context. Generated by crypto_generichash_init().\n     *                       $ctx is passed by reference and gets updated in-place.\n     * @param-out string $ctx\n     * @param string $message The message to append to the existing hash state.\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress ReferenceConstraintViolation\n     *\/\n    public static function crypto_generichash_update(&$ctx, $message)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ctx, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 2);\n\n        if (self::useNewSodiumAPI()) {\n            sodium_crypto_generichash_update($ctx, $message);\n            return;\n        }\n        if (self::use_fallback('crypto_generichash_update')) {\n            $func = '\\\\Sodium\\\\crypto_generichash_update';\n            $func($ctx, $message);\n            return;\n        }\n        if (PHP_INT_SIZE === 4) {\n            $ctx = ParagonIE_Sodium_Crypto32::generichash_update($ctx, $message);\n        } else {\n            $ctx = ParagonIE_Sodium_Crypto::generichash_update($ctx, $message);\n        }\n    }\n\n    \/**\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_generichash_keygen()\n    {\n        return random_bytes(self::CRYPTO_GENERICHASH_KEYBYTES);\n    }\n\n    \/**\n     * @param int $subkey_len\n     * @param int $subkey_id\n     * @param string $context\n     * @param string $key\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function crypto_kdf_derive_from_key(\n        $subkey_len,\n        $subkey_id,\n        $context,\n        $key\n    ) {\n        ParagonIE_Sodium_Core_Util::declareScalarType($subkey_len, 'int', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($subkey_id, 'int', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($context, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n        $subkey_id = (int) $subkey_id;\n        $subkey_len = (int) $subkey_len;\n        $context = (string) $context;\n        $key = (string) $key;\n\n        if ($subkey_len < self::CRYPTO_KDF_BYTES_MIN) {\n            throw new SodiumException('subkey cannot be smaller than SODIUM_CRYPTO_KDF_BYTES_MIN');\n        }\n        if ($subkey_len > self::CRYPTO_KDF_BYTES_MAX) {\n            throw new SodiumException('subkey cannot be larger than SODIUM_CRYPTO_KDF_BYTES_MAX');\n        }\n        if ($subkey_id < 0) {\n            throw new SodiumException('subkey_id cannot be negative');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($context) !== self::CRYPTO_KDF_CONTEXTBYTES) {\n            throw new SodiumException('context should be SODIUM_CRYPTO_KDF_CONTEXTBYTES bytes');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_KDF_KEYBYTES) {\n            throw new SodiumException('key should be SODIUM_CRYPTO_KDF_KEYBYTES bytes');\n        }\n\n        $salt = ParagonIE_Sodium_Core_Util::store64_le($subkey_id);\n        $state = self::crypto_generichash_init_salt_personal(\n            $key,\n            $subkey_len,\n            $salt,\n            $context\n        );\n        return self::crypto_generichash_final($state, $subkey_len);\n    }\n\n    \/**\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_kdf_keygen()\n    {\n        return random_bytes(self::CRYPTO_KDF_KEYBYTES);\n    }\n\n    \/**\n     * Perform a key exchange, between a designated client and a server.\n     *\n     * Typically, you would designate one machine to be the client and the\n     * other to be the server. The first two keys are what you'd expect for\n     * scalarmult() below, but the latter two public keys don't swap places.\n     *\n     * | ALICE                          | BOB                                 |\n     * | Client                         | Server                              |\n     * |--------------------------------|-------------------------------------|\n     * | shared = crypto_kx(            | shared = crypto_kx(                 |\n     * |     alice_sk,                  |     bob_sk,                         | <- contextual\n     * |     bob_pk,                    |     alice_pk,                       | <- contextual\n     * |     alice_pk,                  |     alice_pk,                       | <----- static\n     * |     bob_pk                     |     bob_pk                          | <----- static\n     * | )                              | )                                   |\n     *\n     * They are used along with the scalarmult product to generate a 256-bit\n     * BLAKE2b hash unique to the client and server keys.\n     *\n     * @param string $my_secret\n     * @param string $their_public\n     * @param string $client_public\n     * @param string $server_public\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_kx($my_secret, $their_public, $client_public, $server_public, $dontFallback = false)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($my_secret, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($their_public, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($client_public, 'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($server_public, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($my_secret) !== self::CRYPTO_BOX_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_BOX_SECRETKEYBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($their_public) !== self::CRYPTO_BOX_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_BOX_PUBLICKEYBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($client_public) !== self::CRYPTO_BOX_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_BOX_PUBLICKEYBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($server_public) !== self::CRYPTO_BOX_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 4 must be CRYPTO_BOX_PUBLICKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            if (is_callable('sodium_crypto_kx')) {\n                return (string) sodium_crypto_kx(\n                    $my_secret,\n                    $their_public,\n                    $client_public,\n                    $server_public\n                );\n            }\n        }\n        if (self::use_fallback('crypto_kx')) {\n            return (string) call_user_func(\n                '\\\\Sodium\\\\crypto_kx',\n                $my_secret,\n                $their_public,\n                $client_public,\n                $server_public\n            );\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::keyExchange(\n                $my_secret,\n                $their_public,\n                $client_public,\n                $server_public\n            );\n        }\n        return ParagonIE_Sodium_Crypto::keyExchange(\n            $my_secret,\n            $their_public,\n            $client_public,\n            $server_public\n        );\n    }\n\n    \/**\n     * @param string $seed\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function crypto_kx_seed_keypair($seed)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($seed, 'string', 1);\n\n        $seed = (string) $seed;\n\n        if (ParagonIE_Sodium_Core_Util::strlen($seed) !== self::CRYPTO_KX_SEEDBYTES) {\n            throw new SodiumException('seed must be SODIUM_CRYPTO_KX_SEEDBYTES bytes');\n        }\n\n        $sk = self::crypto_generichash($seed, '', self::CRYPTO_KX_SECRETKEYBYTES);\n        $pk = self::crypto_scalarmult_base($sk);\n        return $sk . $pk;\n    }\n\n    \/**\n     * @return string\n     * @throws Exception\n     *\/\n    public static function crypto_kx_keypair()\n    {\n        $sk = self::randombytes_buf(self::CRYPTO_KX_SECRETKEYBYTES);\n        $pk = self::crypto_scalarmult_base($sk);\n        return $sk . $pk;\n    }\n\n    \/**\n     * @param string $keypair\n     * @param string $serverPublicKey\n     * @return array{0: string, 1: string}\n     * @throws SodiumException\n     *\/\n    public static function crypto_kx_client_session_keys($keypair, $serverPublicKey)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($serverPublicKey, 'string', 2);\n\n        $keypair = (string) $keypair;\n        $serverPublicKey = (string) $serverPublicKey;\n\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_KX_KEYPAIRBYTES) {\n            throw new SodiumException('keypair should be SODIUM_CRYPTO_KX_KEYPAIRBYTES bytes');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($serverPublicKey) !== self::CRYPTO_KX_PUBLICKEYBYTES) {\n            throw new SodiumException('public keys must be SODIUM_CRYPTO_KX_PUBLICKEYBYTES bytes');\n        }\n\n        $sk = self::crypto_kx_secretkey($keypair);\n        $pk = self::crypto_kx_publickey($keypair);\n        $h = self::crypto_generichash_init(null, self::CRYPTO_KX_SESSIONKEYBYTES * 2);\n        self::crypto_generichash_update($h, self::crypto_scalarmult($sk, $serverPublicKey));\n        self::crypto_generichash_update($h, $pk);\n        self::crypto_generichash_update($h, $serverPublicKey);\n        $sessionKeys = self::crypto_generichash_final($h, self::CRYPTO_KX_SESSIONKEYBYTES * 2);\n        return array(\n            ParagonIE_Sodium_Core_Util::substr(\n                $sessionKeys,\n                0,\n                self::CRYPTO_KX_SESSIONKEYBYTES\n            ),\n            ParagonIE_Sodium_Core_Util::substr(\n                $sessionKeys,\n                self::CRYPTO_KX_SESSIONKEYBYTES,\n                self::CRYPTO_KX_SESSIONKEYBYTES\n            )\n        );\n    }\n\n    \/**\n     * @param string $keypair\n     * @param string $clientPublicKey\n     * @return array{0: string, 1: string}\n     * @throws SodiumException\n     *\/\n    public static function crypto_kx_server_session_keys($keypair, $clientPublicKey)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($clientPublicKey, 'string', 2);\n\n        $keypair = (string) $keypair;\n        $clientPublicKey = (string) $clientPublicKey;\n\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_KX_KEYPAIRBYTES) {\n            throw new SodiumException('keypair should be SODIUM_CRYPTO_KX_KEYPAIRBYTES bytes');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($clientPublicKey) !== self::CRYPTO_KX_PUBLICKEYBYTES) {\n            throw new SodiumException('public keys must be SODIUM_CRYPTO_KX_PUBLICKEYBYTES bytes');\n        }\n\n        $sk = self::crypto_kx_secretkey($keypair);\n        $pk = self::crypto_kx_publickey($keypair);\n        $h = self::crypto_generichash_init(null, self::CRYPTO_KX_SESSIONKEYBYTES * 2);\n        self::crypto_generichash_update($h, self::crypto_scalarmult($sk, $clientPublicKey));\n        self::crypto_generichash_update($h, $clientPublicKey);\n        self::crypto_generichash_update($h, $pk);\n        $sessionKeys = self::crypto_generichash_final($h, self::CRYPTO_KX_SESSIONKEYBYTES * 2);\n        return array(\n            ParagonIE_Sodium_Core_Util::substr(\n                $sessionKeys,\n                self::CRYPTO_KX_SESSIONKEYBYTES,\n                self::CRYPTO_KX_SESSIONKEYBYTES\n            ),\n            ParagonIE_Sodium_Core_Util::substr(\n                $sessionKeys,\n                0,\n                self::CRYPTO_KX_SESSIONKEYBYTES\n            )\n        );\n    }\n\n    \/**\n     * @param string $kp\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function crypto_kx_secretkey($kp)\n    {\n        return ParagonIE_Sodium_Core_Util::substr(\n            $kp,\n            0,\n            self::CRYPTO_KX_SECRETKEYBYTES\n        );\n    }\n\n    \/**\n     * @param string $kp\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function crypto_kx_publickey($kp)\n    {\n        return ParagonIE_Sodium_Core_Util::substr(\n            $kp,\n            self::CRYPTO_KX_SECRETKEYBYTES,\n            self::CRYPTO_KX_PUBLICKEYBYTES\n        );\n    }\n\n    \/**\n     * @param int $outlen\n     * @param string $passwd\n     * @param string $salt\n     * @param int $opslimit\n     * @param int $memlimit\n     * @param int|null $alg\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_pwhash($outlen, $passwd, $salt, $opslimit, $memlimit, $alg = null)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($outlen, 'int', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($passwd, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($salt,  'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($opslimit, 'int', 4);\n        ParagonIE_Sodium_Core_Util::declareScalarType($memlimit, 'int', 5);\n\n        if (self::useNewSodiumAPI()) {\n            if (!is_null($alg)) {\n                ParagonIE_Sodium_Core_Util::declareScalarType($alg, 'int', 6);\n                return sodium_crypto_pwhash($outlen, $passwd, $salt, $opslimit, $memlimit, $alg);\n            }\n            return sodium_crypto_pwhash($outlen, $passwd, $salt, $opslimit, $memlimit);\n        }\n        if (self::use_fallback('crypto_pwhash')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_pwhash', $outlen, $passwd, $salt, $opslimit, $memlimit);\n        }\n        \/\/ This is the best we can do.\n        throw new SodiumException(\n            'This is not implemented, as it is not possible to implement Argon2i with acceptable performance in pure-PHP'\n        );\n    }\n\n    \/**\n     * !Exclusive to sodium_compat!\n     *\n     * This returns TRUE if the native crypto_pwhash API is available by libsodium.\n     * This returns FALSE if only sodium_compat is available.\n     *\n     * @return bool\n     *\/\n    public static function crypto_pwhash_is_available()\n    {\n        if (self::useNewSodiumAPI()) {\n            return true;\n        }\n        if (self::use_fallback('crypto_pwhash')) {\n            return true;\n        }\n        return false;\n    }\n\n    \/**\n     * @param string $passwd\n     * @param int $opslimit\n     * @param int $memlimit\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_pwhash_str($passwd, $opslimit, $memlimit)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($passwd, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($opslimit, 'int', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($memlimit, 'int', 3);\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_pwhash_str($passwd, $opslimit, $memlimit);\n        }\n        if (self::use_fallback('crypto_pwhash_str')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_pwhash_str', $passwd, $opslimit, $memlimit);\n        }\n        \/\/ This is the best we can do.\n        throw new SodiumException(\n            'This is not implemented, as it is not possible to implement Argon2i with acceptable performance in pure-PHP'\n        );\n    }\n\n    \/**\n     * Do we need to rehash this password?\n     *\n     * @param string $hash\n     * @param int $opslimit\n     * @param int $memlimit\n     * @return bool\n     * @throws SodiumException\n     *\/\n    public static function crypto_pwhash_str_needs_rehash($hash, $opslimit, $memlimit)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($hash, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($opslimit, 'int', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($memlimit, 'int', 3);\n\n        \/\/ Just grab the first 4 pieces.\n        $pieces = explode('$', (string) $hash);\n        $prefix = implode('$', array_slice($pieces, 0, 4));\n\n        \/\/ Rebuild the expected header.\n        \/** @var int $ops *\/\n        $ops = (int) $opslimit;\n        \/** @var int $mem *\/\n        $mem = (int) $memlimit >> 10;\n        $encoded = self::CRYPTO_PWHASH_STRPREFIX . 'v=19$m=' . $mem . ',t=' . $ops . ',p=1';\n\n        \/\/ Do they match? If so, we don't need to rehash, so return false.\n        return !ParagonIE_Sodium_Core_Util::hashEquals($encoded, $prefix);\n    }\n\n    \/**\n     * @param string $passwd\n     * @param string $hash\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_pwhash_str_verify($passwd, $hash)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($passwd, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($hash, 'string', 2);\n\n        if (self::useNewSodiumAPI()) {\n            return (bool) sodium_crypto_pwhash_str_verify($passwd, $hash);\n        }\n        if (self::use_fallback('crypto_pwhash_str_verify')) {\n            return (bool) call_user_func('\\\\Sodium\\\\crypto_pwhash_str_verify', $passwd, $hash);\n        }\n        \/\/ This is the best we can do.\n        throw new SodiumException(\n            'This is not implemented, as it is not possible to implement Argon2i with acceptable performance in pure-PHP'\n        );\n    }\n\n    \/**\n     * @param int $outlen\n     * @param string $passwd\n     * @param string $salt\n     * @param int $opslimit\n     * @param int $memlimit\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function crypto_pwhash_scryptsalsa208sha256($outlen, $passwd, $salt, $opslimit, $memlimit)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($outlen, 'int', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($passwd, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($salt,  'string', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($opslimit, 'int', 4);\n        ParagonIE_Sodium_Core_Util::declareScalarType($memlimit, 'int', 5);\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_pwhash_scryptsalsa208sha256(\n                (int) $outlen,\n                (string) $passwd,\n                (string) $salt,\n                (int) $opslimit,\n                (int) $memlimit\n            );\n        }\n        if (self::use_fallback('crypto_pwhash_scryptsalsa208sha256')) {\n            return (string) call_user_func(\n                '\\\\Sodium\\\\crypto_pwhash_scryptsalsa208sha256',\n                (int) $outlen,\n                (string) $passwd,\n                (string) $salt,\n                (int) $opslimit,\n                (int) $memlimit\n            );\n        }\n        \/\/ This is the best we can do.\n        throw new SodiumException(\n            'This is not implemented, as it is not possible to implement Scrypt with acceptable performance in pure-PHP'\n        );\n    }\n\n    \/**\n     * !Exclusive to sodium_compat!\n     *\n     * This returns TRUE if the native crypto_pwhash API is available by libsodium.\n     * This returns FALSE if only sodium_compat is available.\n     *\n     * @return bool\n     *\/\n    public static function crypto_pwhash_scryptsalsa208sha256_is_available()\n    {\n        if (self::useNewSodiumAPI()) {\n            return true;\n        }\n        if (self::use_fallback('crypto_pwhash_scryptsalsa208sha256')) {\n            return true;\n        }\n        return false;\n    }\n\n    \/**\n     * @param string $passwd\n     * @param int $opslimit\n     * @param int $memlimit\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function crypto_pwhash_scryptsalsa208sha256_str($passwd, $opslimit, $memlimit)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($passwd, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($opslimit, 'int', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($memlimit, 'int', 3);\n\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_crypto_pwhash_scryptsalsa208sha256_str(\n                (string) $passwd,\n                (int) $opslimit,\n                (int) $memlimit\n            );\n        }\n        if (self::use_fallback('crypto_pwhash_scryptsalsa208sha256_str')) {\n            return (string) call_user_func(\n                '\\\\Sodium\\\\crypto_pwhash_scryptsalsa208sha256_str',\n                (string) $passwd,\n                (int) $opslimit,\n                (int) $memlimit\n            );\n        }\n        \/\/ This is the best we can do.\n        throw new SodiumException(\n            'This is not implemented, as it is not possible to implement Scrypt with acceptable performance in pure-PHP'\n        );\n    }\n\n    \/**\n     * @param string $passwd\n     * @param string $hash\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function crypto_pwhash_scryptsalsa208sha256_str_verify($passwd, $hash)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($passwd, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($hash, 'string', 2);\n\n        if (self::useNewSodiumAPI()) {\n            return (bool) sodium_crypto_pwhash_scryptsalsa208sha256_str_verify(\n                (string) $passwd,\n                (string) $hash\n            );\n        }\n        if (self::use_fallback('crypto_pwhash_scryptsalsa208sha256_str_verify')) {\n            return (bool) call_user_func(\n                '\\\\Sodium\\\\crypto_pwhash_scryptsalsa208sha256_str_verify',\n                (string) $passwd,\n                (string) $hash\n            );\n        }\n        \/\/ This is the best we can do.\n        throw new SodiumException(\n            'This is not implemented, as it is not possible to implement Scrypt with acceptable performance in pure-PHP'\n        );\n    }\n\n    \/**\n     * Calculate the shared secret between your secret key and your\n     * recipient's public key.\n     *\n     * Algorithm: X25519 (ECDH over Curve25519)\n     *\n     * @param string $secretKey\n     * @param string $publicKey\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_scalarmult($secretKey, $publicKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($secretKey, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($publicKey, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($secretKey) !== self::CRYPTO_BOX_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_BOX_SECRETKEYBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($publicKey) !== self::CRYPTO_BOX_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_BOX_PUBLICKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_scalarmult($secretKey, $publicKey);\n        }\n        if (self::use_fallback('crypto_scalarmult')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_scalarmult', $secretKey, $publicKey);\n        }\n\n        \/* Output validation: Forbid all-zero keys *\/\n        if (ParagonIE_Sodium_Core_Util::hashEquals($secretKey, str_repeat(\"\\0\", self::CRYPTO_BOX_SECRETKEYBYTES))) {\n            throw new SodiumException('Zero secret key is not allowed');\n        }\n        if (ParagonIE_Sodium_Core_Util::hashEquals($publicKey, str_repeat(\"\\0\", self::CRYPTO_BOX_PUBLICKEYBYTES))) {\n            throw new SodiumException('Zero public key is not allowed');\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::scalarmult($secretKey, $publicKey);\n        }\n        return ParagonIE_Sodium_Crypto::scalarmult($secretKey, $publicKey);\n    }\n\n    \/**\n     * Calculate an X25519 public key from an X25519 secret key.\n     *\n     * @param string $secretKey\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress TooFewArguments\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_scalarmult_base($secretKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($secretKey, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($secretKey) !== self::CRYPTO_BOX_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_BOX_SECRETKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_scalarmult_base($secretKey);\n        }\n        if (self::use_fallback('crypto_scalarmult_base')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_scalarmult_base', $secretKey);\n        }\n        if (ParagonIE_Sodium_Core_Util::hashEquals($secretKey, str_repeat(\"\\0\", self::CRYPTO_BOX_SECRETKEYBYTES))) {\n            throw new SodiumException('Zero secret key is not allowed');\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::scalarmult_base($secretKey);\n        }\n        return ParagonIE_Sodium_Crypto::scalarmult_base($secretKey);\n    }\n\n    \/**\n     * Authenticated symmetric-key encryption.\n     *\n     * Algorithm: XSalsa20-Poly1305\n     *\n     * @param string $plaintext The message you're encrypting\n     * @param string $nonce A Number to be used Once; must be 24 bytes\n     * @param string $key Symmetric encryption key\n     * @return string           Ciphertext with Poly1305 MAC\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_secretbox($plaintext, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_SECRETBOX_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_SECRETBOX_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SECRETBOX_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_secretbox($plaintext, $nonce, $key);\n        }\n        if (self::use_fallback('crypto_secretbox')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_secretbox', $plaintext, $nonce, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretbox($plaintext, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Crypto::secretbox($plaintext, $nonce, $key);\n    }\n\n    \/**\n     * Decrypts a message previously encrypted with crypto_secretbox().\n     *\n     * @param string $ciphertext Ciphertext with Poly1305 MAC\n     * @param string $nonce      A Number to be used Once; must be 24 bytes\n     * @param string $key        Symmetric encryption key\n     * @return string            Original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_secretbox_open($ciphertext, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_SECRETBOX_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_SECRETBOX_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SECRETBOX_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            \/**\n             * @psalm-suppress InvalidReturnStatement\n             * @psalm-suppress FalsableReturnStatement\n             *\/\n            return sodium_crypto_secretbox_open($ciphertext, $nonce, $key);\n        }\n        if (self::use_fallback('crypto_secretbox_open')) {\n            return call_user_func('\\\\Sodium\\\\crypto_secretbox_open', $ciphertext, $nonce, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretbox_open($ciphertext, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Crypto::secretbox_open($ciphertext, $nonce, $key);\n    }\n\n    \/**\n     * Return a secure random key for use with crypto_secretbox\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_secretbox_keygen()\n    {\n        return random_bytes(self::CRYPTO_SECRETBOX_KEYBYTES);\n    }\n\n    \/**\n     * Authenticated symmetric-key encryption.\n     *\n     * Algorithm: XChaCha20-Poly1305\n     *\n     * @param string $plaintext The message you're encrypting\n     * @param string $nonce     A Number to be used Once; must be 24 bytes\n     * @param string $key       Symmetric encryption key\n     * @return string           Ciphertext with Poly1305 MAC\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_secretbox_xchacha20poly1305($plaintext, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($plaintext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_SECRETBOX_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_SECRETBOX_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SECRETBOX_KEYBYTES long.');\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretbox_xchacha20poly1305($plaintext, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Crypto::secretbox_xchacha20poly1305($plaintext, $nonce, $key);\n    }\n    \/**\n     * Decrypts a message previously encrypted with crypto_secretbox_xchacha20poly1305().\n     *\n     * @param string $ciphertext Ciphertext with Poly1305 MAC\n     * @param string $nonce      A Number to be used Once; must be 24 bytes\n     * @param string $key        Symmetric encryption key\n     * @return string            Original plaintext message\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_secretbox_xchacha20poly1305_open($ciphertext, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($ciphertext, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_SECRETBOX_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_SECRETBOX_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SECRETBOX_KEYBYTES long.');\n        }\n\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretbox_xchacha20poly1305_open($ciphertext, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Crypto::secretbox_xchacha20poly1305_open($ciphertext, $nonce, $key);\n    }\n\n    \/**\n     * @param string $key\n     * @return array<int, string> Returns a state and a header.\n     * @throws Exception\n     * @throws SodiumException\n     *\/\n    public static function crypto_secretstream_xchacha20poly1305_init_push($key)\n    {\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretstream_xchacha20poly1305_init_push($key);\n        }\n        return ParagonIE_Sodium_Crypto::secretstream_xchacha20poly1305_init_push($key);\n    }\n\n    \/**\n     * @param string $header\n     * @param string $key\n     * @return string Returns a state.\n     * @throws Exception\n     *\/\n    public static function crypto_secretstream_xchacha20poly1305_init_pull($header, $key)\n    {\n        if (ParagonIE_Sodium_Core_Util::strlen($header) < self::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES) {\n            throw new SodiumException(\n                'header size should be SODIUM_CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_HEADERBYTES bytes'\n            );\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretstream_xchacha20poly1305_init_pull($key, $header);\n        }\n        return ParagonIE_Sodium_Crypto::secretstream_xchacha20poly1305_init_pull($key, $header);\n    }\n\n    \/**\n     * @param string $state\n     * @param string $msg\n     * @param string $aad\n     * @param int $tag\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function crypto_secretstream_xchacha20poly1305_push(&$state, $msg, $aad = '', $tag = 0)\n    {\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretstream_xchacha20poly1305_push(\n                $state,\n                $msg,\n                $aad,\n                $tag\n            );\n        }\n        return ParagonIE_Sodium_Crypto::secretstream_xchacha20poly1305_push(\n            $state,\n            $msg,\n            $aad,\n            $tag\n        );\n    }\n\n    \/**\n     * @param string $state\n     * @param string $msg\n     * @param string $aad\n     * @return bool|array{0: string, 1: int}\n     * @throws SodiumException\n     *\/\n    public static function crypto_secretstream_xchacha20poly1305_pull(&$state, $msg, $aad = '')\n    {\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::secretstream_xchacha20poly1305_pull(\n                $state,\n                $msg,\n                $aad\n            );\n        }\n        return ParagonIE_Sodium_Crypto::secretstream_xchacha20poly1305_pull(\n            $state,\n            $msg,\n            $aad\n        );\n    }\n\n    \/**\n     * @return string\n     * @throws Exception\n     *\/\n    public static function crypto_secretstream_xchacha20poly1305_keygen()\n    {\n        return random_bytes(self::CRYPTO_SECRETSTREAM_XCHACHA20POLY1305_KEYBYTES);\n    }\n\n    \/**\n     * @param string $state\n     * @return void\n     * @throws SodiumException\n     *\/\n    public static function crypto_secretstream_xchacha20poly1305_rekey(&$state)\n    {\n        if (PHP_INT_SIZE === 4) {\n            ParagonIE_Sodium_Crypto32::secretstream_xchacha20poly1305_rekey($state);\n        } else {\n            ParagonIE_Sodium_Crypto::secretstream_xchacha20poly1305_rekey($state);\n        }\n    }\n\n    \/**\n     * Calculates a SipHash-2-4 hash of a message for a given key.\n     *\n     * @param string $message Input message\n     * @param string $key SipHash-2-4 key\n     * @return string         Hash\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_shorthash($message, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_SHORTHASH_KEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SHORTHASH_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_shorthash($message, $key);\n        }\n        if (self::use_fallback('crypto_shorthash')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_shorthash', $message, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_SipHash::sipHash24($message, $key);\n        }\n        return ParagonIE_Sodium_Core_SipHash::sipHash24($message, $key);\n    }\n\n    \/**\n     * Return a secure random key for use with crypto_shorthash\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_shorthash_keygen()\n    {\n        return random_bytes(self::CRYPTO_SHORTHASH_KEYBYTES);\n    }\n\n    \/**\n     * Returns a signed message. You probably want crypto_sign_detached()\n     * instead, which only returns the signature.\n     *\n     * Algorithm: Ed25519 (EdDSA over Curve25519)\n     *\n     * @param string $message Message to be signed.\n     * @param string $secretKey Secret signing key.\n     * @return string           Signed message (signature is prefixed).\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_sign($message, $secretKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($secretKey, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($secretKey) !== self::CRYPTO_SIGN_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SIGN_SECRETKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign($message, $secretKey);\n        }\n        if (self::use_fallback('crypto_sign')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign', $message, $secretKey);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::sign($message, $secretKey);\n        }\n        return ParagonIE_Sodium_Crypto::sign($message, $secretKey);\n    }\n\n    \/**\n     * Validates a signed message then returns the message.\n     *\n     * @param string $signedMessage A signed message\n     * @param string $publicKey A public key\n     * @return string               The original message (if the signature is\n     *                              valid for this public key)\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress MixedReturnStatement\n     *\/\n    public static function crypto_sign_open($signedMessage, $publicKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($signedMessage, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($publicKey, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($signedMessage) < self::CRYPTO_SIGN_BYTES) {\n            throw new SodiumException('Argument 1 must be at least CRYPTO_SIGN_BYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($publicKey) !== self::CRYPTO_SIGN_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SIGN_PUBLICKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            \/**\n             * @psalm-suppress InvalidReturnStatement\n             * @psalm-suppress FalsableReturnStatement\n             *\/\n            return sodium_crypto_sign_open($signedMessage, $publicKey);\n        }\n        if (self::use_fallback('crypto_sign_open')) {\n            return call_user_func('\\\\Sodium\\\\crypto_sign_open', $signedMessage, $publicKey);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::sign_open($signedMessage, $publicKey);\n        }\n        return ParagonIE_Sodium_Crypto::sign_open($signedMessage, $publicKey);\n    }\n\n    \/**\n     * Generate a new random Ed25519 keypair.\n     *\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function crypto_sign_keypair()\n    {\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_keypair();\n        }\n        if (self::use_fallback('crypto_sign_keypair')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_keypair');\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_Ed25519::keypair();\n        }\n        return ParagonIE_Sodium_Core_Ed25519::keypair();\n    }\n\n    \/**\n     * @param string $sk\n     * @param string $pk\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function crypto_sign_keypair_from_secretkey_and_publickey($sk, $pk)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($sk, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($pk, 'string', 1);\n        $sk = (string) $sk;\n        $pk = (string) $pk;\n\n        if (ParagonIE_Sodium_Core_Util::strlen($sk) !== self::CRYPTO_SIGN_SECRETKEYBYTES) {\n            throw new SodiumException('secretkey should be SODIUM_CRYPTO_SIGN_SECRETKEYBYTES bytes');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($pk) !== self::CRYPTO_SIGN_PUBLICKEYBYTES) {\n            throw new SodiumException('publickey should be SODIUM_CRYPTO_SIGN_PUBLICKEYBYTES bytes');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_keypair_from_secretkey_and_publickey($sk, $pk);\n        }\n        return $sk . $pk;\n    }\n\n    \/**\n     * Generate an Ed25519 keypair from a seed.\n     *\n     * @param string $seed Input seed\n     * @return string      Keypair\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_seed_keypair($seed)\n    {\n        ParagonIE_Sodium_Core_Util::declareScalarType($seed, 'string', 1);\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_seed_keypair($seed);\n        }\n        if (self::use_fallback('crypto_sign_keypair')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_seed_keypair', $seed);\n        }\n        $publicKey = '';\n        $secretKey = '';\n        if (PHP_INT_SIZE === 4) {\n            ParagonIE_Sodium_Core32_Ed25519::seed_keypair($publicKey, $secretKey, $seed);\n        } else {\n            ParagonIE_Sodium_Core_Ed25519::seed_keypair($publicKey, $secretKey, $seed);\n        }\n        return $secretKey . $publicKey;\n    }\n\n    \/**\n     * Extract an Ed25519 public key from an Ed25519 keypair.\n     *\n     * @param string $keypair Keypair\n     * @return string         Public key\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_publickey($keypair)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_SIGN_KEYPAIRBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_SIGN_KEYPAIRBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_publickey($keypair);\n        }\n        if (self::use_fallback('crypto_sign_publickey')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_publickey', $keypair);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_Ed25519::publickey($keypair);\n        }\n        return ParagonIE_Sodium_Core_Ed25519::publickey($keypair);\n    }\n\n    \/**\n     * Calculate an Ed25519 public key from an Ed25519 secret key.\n     *\n     * @param string $secretKey Your Ed25519 secret key\n     * @return string           The corresponding Ed25519 public key\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_publickey_from_secretkey($secretKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($secretKey, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($secretKey) !== self::CRYPTO_SIGN_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_SIGN_SECRETKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_publickey_from_secretkey($secretKey);\n        }\n        if (self::use_fallback('crypto_sign_publickey_from_secretkey')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_publickey_from_secretkey', $secretKey);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_Ed25519::publickey_from_secretkey($secretKey);\n        }\n        return ParagonIE_Sodium_Core_Ed25519::publickey_from_secretkey($secretKey);\n    }\n\n    \/**\n     * Extract an Ed25519 secret key from an Ed25519 keypair.\n     *\n     * @param string $keypair Keypair\n     * @return string         Secret key\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_secretkey($keypair)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($keypair, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($keypair) !== self::CRYPTO_SIGN_KEYPAIRBYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_SIGN_KEYPAIRBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_secretkey($keypair);\n        }\n        if (self::use_fallback('crypto_sign_secretkey')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_secretkey', $keypair);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_Ed25519::secretkey($keypair);\n        }\n        return ParagonIE_Sodium_Core_Ed25519::secretkey($keypair);\n    }\n\n    \/**\n     * Calculate the Ed25519 signature of a message and return ONLY the signature.\n     *\n     * Algorithm: Ed25519 (EdDSA over Curve25519)\n     *\n     * @param string $message Message to be signed\n     * @param string $secretKey Secret signing key\n     * @return string           Digital signature\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_detached($message, $secretKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($secretKey, 'string', 2);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($secretKey) !== self::CRYPTO_SIGN_SECRETKEYBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SIGN_SECRETKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_detached($message, $secretKey);\n        }\n        if (self::use_fallback('crypto_sign_detached')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_detached', $message, $secretKey);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::sign_detached($message, $secretKey);\n        }\n        return ParagonIE_Sodium_Crypto::sign_detached($message, $secretKey);\n    }\n\n    \/**\n     * Verify the Ed25519 signature of a message.\n     *\n     * @param string $signature Digital sginature\n     * @param string $message Message to be verified\n     * @param string $publicKey Public key\n     * @return bool             TRUE if this signature is good for this public key;\n     *                          FALSE otherwise\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_verify_detached($signature, $message, $publicKey)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($signature, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($publicKey, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($signature) !== self::CRYPTO_SIGN_BYTES) {\n            throw new SodiumException('Argument 1 must be CRYPTO_SIGN_BYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($publicKey) !== self::CRYPTO_SIGN_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SIGN_PUBLICKEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_sign_verify_detached($signature, $message, $publicKey);\n        }\n        if (self::use_fallback('crypto_sign_verify_detached')) {\n            return (bool) call_user_func(\n                '\\\\Sodium\\\\crypto_sign_verify_detached',\n                $signature,\n                $message,\n                $publicKey\n            );\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Crypto32::sign_verify_detached($signature, $message, $publicKey);\n        }\n        return ParagonIE_Sodium_Crypto::sign_verify_detached($signature, $message, $publicKey);\n    }\n\n    \/**\n     * Convert an Ed25519 public key to a Curve25519 public key\n     *\n     * @param string $pk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_ed25519_pk_to_curve25519($pk)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($pk, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($pk) < self::CRYPTO_SIGN_PUBLICKEYBYTES) {\n            throw new SodiumException('Argument 1 must be at least CRYPTO_SIGN_PUBLICKEYBYTES long.');\n        }\n        if (self::useNewSodiumAPI()) {\n            if (is_callable('crypto_sign_ed25519_pk_to_curve25519')) {\n                return (string) sodium_crypto_sign_ed25519_pk_to_curve25519($pk);\n            }\n        }\n        if (self::use_fallback('crypto_sign_ed25519_pk_to_curve25519')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_ed25519_pk_to_curve25519', $pk);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_Ed25519::pk_to_curve25519($pk);\n        }\n        return ParagonIE_Sodium_Core_Ed25519::pk_to_curve25519($pk);\n    }\n\n    \/**\n     * Convert an Ed25519 secret key to a Curve25519 secret key\n     *\n     * @param string $sk\n     * @return string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_sign_ed25519_sk_to_curve25519($sk)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($sk, 'string', 1);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($sk) < self::CRYPTO_SIGN_SEEDBYTES) {\n            throw new SodiumException('Argument 1 must be at least CRYPTO_SIGN_SEEDBYTES long.');\n        }\n        if (self::useNewSodiumAPI()) {\n            if (is_callable('crypto_sign_ed25519_sk_to_curve25519')) {\n                return sodium_crypto_sign_ed25519_sk_to_curve25519($sk);\n            }\n        }\n        if (self::use_fallback('crypto_sign_ed25519_sk_to_curve25519')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_sign_ed25519_sk_to_curve25519', $sk);\n        }\n\n        $h = hash('sha512', ParagonIE_Sodium_Core_Util::substr($sk, 0, 32), true);\n        $h[0] = ParagonIE_Sodium_Core_Util::intToChr(\n            ParagonIE_Sodium_Core_Util::chrToInt($h[0]) & 248\n        );\n        $h[31] = ParagonIE_Sodium_Core_Util::intToChr(\n            (ParagonIE_Sodium_Core_Util::chrToInt($h[31]) & 127) | 64\n        );\n        return ParagonIE_Sodium_Core_Util::substr($h, 0, 32);\n    }\n\n    \/**\n     * Expand a key and nonce into a keystream of pseudorandom bytes.\n     *\n     * @param int $len Number of bytes desired\n     * @param string $nonce Number to be used Once; must be 24 bytes\n     * @param string $key XSalsa20 key\n     * @return string       Pseudorandom stream that can be XORed with messages\n     *                      to provide encryption (but not authentication; see\n     *                      Poly1305 or crypto_auth() for that, which is not\n     *                      optional for security)\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_stream($len, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($len, 'int', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_STREAM_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_STREAM_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_STREAM_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_stream($len, $nonce, $key);\n        }\n        if (self::use_fallback('crypto_stream')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_stream', $len, $nonce, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_XSalsa20::xsalsa20($len, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Core_XSalsa20::xsalsa20($len, $nonce, $key);\n    }\n\n    \/**\n     * DANGER! UNAUTHENTICATED ENCRYPTION!\n     *\n     * Unless you are following expert advice, do not use this feature.\n     *\n     * Algorithm: XSalsa20\n     *\n     * This DOES NOT provide ciphertext integrity.\n     *\n     * @param string $message Plaintext message\n     * @param string $nonce Number to be used Once; must be 24 bytes\n     * @param string $key Encryption key\n     * @return string         Encrypted text which is vulnerable to chosen-\n     *                        ciphertext attacks unless you implement some\n     *                        other mitigation to the ciphertext (i.e.\n     *                        Encrypt then MAC)\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_stream_xor($message, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_STREAM_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_STREAM_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SECRETBOX_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_crypto_stream_xor($message, $nonce, $key);\n        }\n        if (self::use_fallback('crypto_stream_xor')) {\n            return (string) call_user_func('\\\\Sodium\\\\crypto_stream_xor', $message, $nonce, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_XSalsa20::xsalsa20_xor($message, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Core_XSalsa20::xsalsa20_xor($message, $nonce, $key);\n    }\n\n    \/**\n     * Return a secure random key for use with crypto_stream\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_stream_keygen()\n    {\n        return random_bytes(self::CRYPTO_STREAM_KEYBYTES);\n    }\n\n\n    \/**\n     * Expand a key and nonce into a keystream of pseudorandom bytes.\n     *\n     * @param int $len Number of bytes desired\n     * @param string $nonce Number to be used Once; must be 24 bytes\n     * @param string $key XChaCha20 key\n     * @param bool $dontFallback\n     * @return string       Pseudorandom stream that can be XORed with messages\n     *                      to provide encryption (but not authentication; see\n     *                      Poly1305 or crypto_auth() for that, which is not\n     *                      optional for security)\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_stream_xchacha20($len, $nonce, $key, $dontFallback = false)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($len, 'int', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_STREAM_XCHACHA20_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_XCHACHA20_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_STREAM_XCHACHA20_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_STREAM_XCHACHA20_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_stream_xchacha20($len, $nonce, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_XChaCha20::stream($len, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Core_XChaCha20::stream($len, $nonce, $key);\n    }\n\n    \/**\n     * DANGER! UNAUTHENTICATED ENCRYPTION!\n     *\n     * Unless you are following expert advice, do not use this feature.\n     *\n     * Algorithm: XChaCha20\n     *\n     * This DOES NOT provide ciphertext integrity.\n     *\n     * @param string $message Plaintext message\n     * @param string $nonce Number to be used Once; must be 24 bytes\n     * @param string $key Encryption key\n     * @return string         Encrypted text which is vulnerable to chosen-\n     *                        ciphertext attacks unless you implement some\n     *                        other mitigation to the ciphertext (i.e.\n     *                        Encrypt then MAC)\n     * @param bool $dontFallback\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_stream_xchacha20_xor($message, $nonce, $key, $dontFallback = false)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 3);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_STREAM_XCHACHA20_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_XCHACHA20_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_STREAM_XCHACHA20_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SECRETBOX_XCHACHA20_KEYBYTES long.');\n        }\n\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_stream_xchacha20_xor($message, $nonce, $key);\n        }\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_XChaCha20::streamXorIc($message, $nonce, $key);\n        }\n        return ParagonIE_Sodium_Core_XChaCha20::streamXorIc($message, $nonce, $key);\n    }\n\n    \/**\n     * DANGER! UNAUTHENTICATED ENCRYPTION!\n     *\n     * Unless you are following expert advice, do not use this feature.\n     *\n     * Algorithm: XChaCha20\n     *\n     * This DOES NOT provide ciphertext integrity.\n     *\n     * @param string $message Plaintext message\n     * @param string $nonce Number to be used Once; must be 24 bytes\n     * @param int $counter\n     * @param string $key Encryption key\n     * @return string         Encrypted text which is vulnerable to chosen-\n     *                        ciphertext attacks unless you implement some\n     *                        other mitigation to the ciphertext (i.e.\n     *                        Encrypt then MAC)\n     * @param bool $dontFallback\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function crypto_stream_xchacha20_xor_ic($message, $nonce, $counter, $key, $dontFallback = false)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($message, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($nonce, 'string', 2);\n        ParagonIE_Sodium_Core_Util::declareScalarType($counter, 'int', 3);\n        ParagonIE_Sodium_Core_Util::declareScalarType($key, 'string', 4);\n\n        \/* Input validation: *\/\n        if (ParagonIE_Sodium_Core_Util::strlen($nonce) !== self::CRYPTO_STREAM_XCHACHA20_NONCEBYTES) {\n            throw new SodiumException('Argument 2 must be CRYPTO_SECRETBOX_XCHACHA20_NONCEBYTES long.');\n        }\n        if (ParagonIE_Sodium_Core_Util::strlen($key) !== self::CRYPTO_STREAM_XCHACHA20_KEYBYTES) {\n            throw new SodiumException('Argument 3 must be CRYPTO_SECRETBOX_XCHACHA20_KEYBYTES long.');\n        }\n\n        if (is_callable('sodium_crypto_stream_xchacha20_xor_ic') && !$dontFallback) {\n            return sodium_crypto_stream_xchacha20_xor_ic($message, $nonce, $counter, $key);\n        }\n\n        $ic = ParagonIE_Sodium_Core_Util::store64_le($counter);\n        if (PHP_INT_SIZE === 4) {\n            return ParagonIE_Sodium_Core32_XChaCha20::streamXorIc($message, $nonce, $key, $ic);\n        }\n        return ParagonIE_Sodium_Core_XChaCha20::streamXorIc($message, $nonce, $key, $ic);\n    }\n\n    \/**\n     * Return a secure random key for use with crypto_stream_xchacha20\n     *\n     * @return string\n     * @throws Exception\n     * @throws Error\n     *\/\n    public static function crypto_stream_xchacha20_keygen()\n    {\n        return random_bytes(self::CRYPTO_STREAM_XCHACHA20_KEYBYTES);\n    }\n\n    \/**\n     * Cache-timing-safe implementation of hex2bin().\n     *\n     * @param string $string Hexadecimal string\n     * @param string $ignore List of characters to ignore; useful for whitespace\n     * @return string        Raw binary string\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress TooFewArguments\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function hex2bin($string, $ignore = '')\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($string, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($ignore, 'string', 2);\n\n        if (self::useNewSodiumAPI()) {\n            if (is_callable('sodium_hex2bin')) {\n                return (string) sodium_hex2bin($string, $ignore);\n            }\n        }\n        if (self::use_fallback('hex2bin')) {\n            return (string) call_user_func('\\\\Sodium\\\\hex2bin', $string, $ignore);\n        }\n        return ParagonIE_Sodium_Core_Util::hex2bin($string, $ignore);\n    }\n\n    \/**\n     * Increase a string (little endian)\n     *\n     * @param string $var\n     *\n     * @return void\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function increment(&$var)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($var, 'string', 1);\n\n        if (self::useNewSodiumAPI()) {\n            sodium_increment($var);\n            return;\n        }\n        if (self::use_fallback('increment')) {\n            $func = '\\\\Sodium\\\\increment';\n            $func($var);\n            return;\n        }\n\n        $len = ParagonIE_Sodium_Core_Util::strlen($var);\n        $c = 1;\n        $copy = '';\n        for ($i = 0; $i < $len; ++$i) {\n            $c += ParagonIE_Sodium_Core_Util::chrToInt(\n                ParagonIE_Sodium_Core_Util::substr($var, $i, 1)\n            );\n            $copy .= ParagonIE_Sodium_Core_Util::intToChr($c);\n            $c >>= 8;\n        }\n        $var = $copy;\n    }\n\n    \/**\n     * @param string $str\n     * @return bool\n     *\n     * @throws SodiumException\n     *\/\n    public static function is_zero($str)\n    {\n        $d = 0;\n        for ($i = 0; $i < 32; ++$i) {\n            $d |= ParagonIE_Sodium_Core_Util::chrToInt($str[$i]);\n        }\n        return ((($d - 1) >> 31) & 1) === 1;\n    }\n\n    \/**\n     * The equivalent to the libsodium minor version we aim to be compatible\n     * with (sans pwhash and memzero).\n     *\n     * @return int\n     *\/\n    public static function library_version_major()\n    {\n        if (self::useNewSodiumAPI() && defined('SODIUM_LIBRARY_MAJOR_VERSION')) {\n            return SODIUM_LIBRARY_MAJOR_VERSION;\n        }\n        if (self::use_fallback('library_version_major')) {\n            \/** @psalm-suppress UndefinedFunction *\/\n            return (int) call_user_func('\\\\Sodium\\\\library_version_major');\n        }\n        return self::LIBRARY_VERSION_MAJOR;\n    }\n\n    \/**\n     * The equivalent to the libsodium minor version we aim to be compatible\n     * with (sans pwhash and memzero).\n     *\n     * @return int\n     *\/\n    public static function library_version_minor()\n    {\n        if (self::useNewSodiumAPI() && defined('SODIUM_LIBRARY_MINOR_VERSION')) {\n            return SODIUM_LIBRARY_MINOR_VERSION;\n        }\n        if (self::use_fallback('library_version_minor')) {\n            \/** @psalm-suppress UndefinedFunction *\/\n            return (int) call_user_func('\\\\Sodium\\\\library_version_minor');\n        }\n        return self::LIBRARY_VERSION_MINOR;\n    }\n\n    \/**\n     * Compare two strings.\n     *\n     * @param string $left\n     * @param string $right\n     * @return int\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress MixedArgument\n     *\/\n    public static function memcmp($left, $right)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($left, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($right, 'string', 2);\n\n        if (self::useNewSodiumAPI()) {\n            return sodium_memcmp($left, $right);\n        }\n        if (self::use_fallback('memcmp')) {\n            return (int) call_user_func('\\\\Sodium\\\\memcmp', $left, $right);\n        }\n        \/** @var string $left *\/\n        \/** @var string $right *\/\n        return ParagonIE_Sodium_Core_Util::memcmp($left, $right);\n    }\n\n    \/**\n     * It's actually not possible to zero memory buffers in PHP. You need the\n     * native library for that.\n     *\n     * @param string|null $var\n     * @param-out string|null $var\n     *\n     * @return void\n     * @throws SodiumException (Unless libsodium is installed)\n     * @throws TypeError\n     * @psalm-suppress TooFewArguments\n     *\/\n    public static function memzero(&$var)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($var, 'string', 1);\n\n        if (self::useNewSodiumAPI()) {\n            \/** @psalm-suppress MixedArgument *\/\n            sodium_memzero($var);\n            return;\n        }\n        if (self::use_fallback('memzero')) {\n            $func = '\\\\Sodium\\\\memzero';\n            $func($var);\n            if ($var === null) {\n                return;\n            }\n        }\n        \/\/ This is the best we can do.\n        throw new SodiumException(\n            'This is not implemented in sodium_compat, as it is not possible to securely wipe memory from PHP. ' .\n            'To fix this error, make sure libsodium is installed and the PHP extension is enabled.'\n        );\n    }\n\n    \/**\n     * @param string $unpadded\n     * @param int $blockSize\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function pad($unpadded, $blockSize, $dontFallback = false)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($unpadded, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($blockSize, 'int', 2);\n\n        $unpadded = (string) $unpadded;\n        $blockSize = (int) $blockSize;\n\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return (string) sodium_pad($unpadded, $blockSize);\n        }\n\n        if ($blockSize <= 0) {\n            throw new SodiumException(\n                'block size cannot be less than 1'\n            );\n        }\n        $unpadded_len = ParagonIE_Sodium_Core_Util::strlen($unpadded);\n        $xpadlen = ($blockSize - 1);\n        if (($blockSize & ($blockSize - 1)) === 0) {\n            $xpadlen -= $unpadded_len & ($blockSize - 1);\n        } else {\n            $xpadlen -= $unpadded_len % $blockSize;\n        }\n\n        $xpadded_len = $unpadded_len + $xpadlen;\n        $padded = str_repeat(\"\\0\", $xpadded_len - 1);\n        if ($unpadded_len > 0) {\n            $st = 1;\n            $i = 0;\n            $k = $unpadded_len;\n            for ($j = 0; $j <= $xpadded_len; ++$j) {\n                $i = (int) $i;\n                $k = (int) $k;\n                $st = (int) $st;\n                if ($j >= $unpadded_len) {\n                    $padded[$j] = \"\\0\";\n                } else {\n                    $padded[$j] = $unpadded[$j];\n                }\n                \/** @var int $k *\/\n                $k -= $st;\n                $st = (int) (~(\n                            (\n                                (\n                                    ($k >> 48)\n                                        |\n                                    ($k >> 32)\n                                        |\n                                    ($k >> 16)\n                                        |\n                                    $k\n                                ) - 1\n                            ) >> 16\n                        )\n                    ) & 1;\n                $i += $st;\n            }\n        }\n\n        $mask = 0;\n        $tail = $xpadded_len;\n        for ($i = 0; $i < $blockSize; ++$i) {\n            # barrier_mask = (unsigned char)\n            #     (((i ^ xpadlen) - 1U) >> ((sizeof(size_t) - 1U) * CHAR_BIT));\n            $barrier_mask = (($i ^ $xpadlen) -1) >> ((PHP_INT_SIZE << 3) - 1);\n            # tail[-i] = (tail[-i] & mask) | (0x80 & barrier_mask);\n            $padded[$tail - $i] = ParagonIE_Sodium_Core_Util::intToChr(\n                (ParagonIE_Sodium_Core_Util::chrToInt($padded[$tail - $i]) & $mask)\n                    |\n                (0x80 & $barrier_mask)\n            );\n            # mask |= barrier_mask;\n            $mask |= $barrier_mask;\n        }\n        return $padded;\n    }\n\n    \/**\n     * @param string $padded\n     * @param int $blockSize\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function unpad($padded, $blockSize, $dontFallback = false)\n    {\n        \/* Type checks: *\/\n        ParagonIE_Sodium_Core_Util::declareScalarType($padded, 'string', 1);\n        ParagonIE_Sodium_Core_Util::declareScalarType($blockSize, 'int', 2);\n\n        $padded = (string) $padded;\n        $blockSize = (int) $blockSize;\n\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return (string) sodium_unpad($padded, $blockSize);\n        }\n        if ($blockSize <= 0) {\n            throw new SodiumException('block size cannot be less than 1');\n        }\n        $padded_len = ParagonIE_Sodium_Core_Util::strlen($padded);\n        if ($padded_len < $blockSize) {\n            throw new SodiumException('invalid padding');\n        }\n\n        # tail = &padded[padded_len - 1U];\n        $tail = $padded_len - 1;\n\n        $acc = 0;\n        $valid = 0;\n        $pad_len = 0;\n\n        $found = 0;\n        for ($i = 0; $i < $blockSize; ++$i) {\n            # c = tail[-i];\n            $c = ParagonIE_Sodium_Core_Util::chrToInt($padded[$tail - $i]);\n\n            # is_barrier =\n            #     (( (acc - 1U) & (pad_len - 1U) & ((c ^ 0x80) - 1U) ) >> 8) & 1U;\n            $is_barrier = (\n                (\n                    ($acc - 1) & ($pad_len - 1) & (($c ^ 80) - 1)\n                ) >> 7\n            ) & 1;\n            $is_barrier &= ~$found;\n            $found |= $is_barrier;\n\n            # acc |= c;\n            $acc |= $c;\n\n            # pad_len |= i & (1U + ~is_barrier);\n            $pad_len |= $i & (1 + ~$is_barrier);\n\n            # valid |= (unsigned char) is_barrier;\n            $valid |= ($is_barrier & 0xff);\n        }\n        # unpadded_len = padded_len - 1U - pad_len;\n        $unpadded_len = $padded_len - 1 - $pad_len;\n        if ($valid !== 1) {\n            throw new SodiumException('invalid padding');\n        }\n        return ParagonIE_Sodium_Core_Util::substr($padded, 0, $unpadded_len);\n    }\n\n    \/**\n     * Will sodium_compat run fast on the current hardware and PHP configuration?\n     *\n     * @return bool\n     *\/\n    public static function polyfill_is_fast()\n    {\n        if (extension_loaded('sodium')) {\n            return true;\n        }\n        if (extension_loaded('libsodium')) {\n            return true;\n        }\n        return PHP_INT_SIZE === 8;\n    }\n\n    \/**\n     * Generate a string of bytes from the kernel's CSPRNG.\n     * Proudly uses \/dev\/urandom (if getrandom(2) is not available).\n     *\n     * @param int $numBytes\n     * @return string\n     * @throws Exception\n     * @throws TypeError\n     *\/\n    public static function randombytes_buf($numBytes)\n    {\n        \/* Type checks: *\/\n        if (!is_int($numBytes)) {\n            if (is_numeric($numBytes)) {\n                $numBytes = (int) $numBytes;\n            } else {\n                throw new TypeError(\n                    'Argument 1 must be an integer, ' . gettype($numBytes) . ' given.'\n                );\n            }\n        }\n        \/** @var positive-int $numBytes *\/\n        if (self::use_fallback('randombytes_buf')) {\n            return (string) call_user_func('\\\\Sodium\\\\randombytes_buf', $numBytes);\n        }\n        if ($numBytes < 0) {\n            throw new SodiumException(\"Number of bytes must be a positive integer\");\n        }\n        return random_bytes($numBytes);\n    }\n\n    \/**\n     * Generate an integer between 0 and $range (non-inclusive).\n     *\n     * @param int $range\n     * @return int\n     * @throws Exception\n     * @throws Error\n     * @throws TypeError\n     *\/\n    public static function randombytes_uniform($range)\n    {\n        \/* Type checks: *\/\n        if (!is_int($range)) {\n            if (is_numeric($range)) {\n                $range = (int) $range;\n            } else {\n                throw new TypeError(\n                    'Argument 1 must be an integer, ' . gettype($range) . ' given.'\n                );\n            }\n        }\n        if (self::use_fallback('randombytes_uniform')) {\n            return (int) call_user_func('\\\\Sodium\\\\randombytes_uniform', $range);\n        }\n        return random_int(0, $range - 1);\n    }\n\n    \/**\n     * Generate a random 16-bit integer.\n     *\n     * @return int\n     * @throws Exception\n     * @throws Error\n     * @throws TypeError\n     *\/\n    public static function randombytes_random16()\n    {\n        if (self::use_fallback('randombytes_random16')) {\n            return (int) call_user_func('\\\\Sodium\\\\randombytes_random16');\n        }\n        return random_int(0, 65535);\n    }\n\n    \/**\n     * @param string $p\n     * @param bool $dontFallback\n     * @return bool\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_is_valid_point($p, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_is_valid_point($p);\n        }\n        try {\n            $r = ParagonIE_Sodium_Core_Ristretto255::ristretto255_frombytes($p);\n            return $r['res'] === 0 &&\n                ParagonIE_Sodium_Core_Ristretto255::ristretto255_point_is_canonical($p) === 1;\n        } catch (SodiumException $ex) {\n            if ($ex->getMessage() === 'S is not canonical') {\n                return false;\n            }\n            throw $ex;\n        }\n    }\n\n    \/**\n     * @param string $p\n     * @param string $q\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_add($p, $q, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_add($p, $q);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_add($p, $q);\n    }\n\n    \/**\n     * @param string $p\n     * @param string $q\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_sub($p, $q, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_sub($p, $q);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_sub($p, $q);\n    }\n\n    \/**\n     * @param string $r\n     * @param bool $dontFallback\n     * @return string\n     *\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_from_hash($r, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_from_hash($r);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_from_hash($r);\n    }\n\n    \/**\n     * @param bool $dontFallback\n     * @return string\n     *\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_random($dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_random();\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_random();\n    }\n\n    \/**\n     * @param bool $dontFallback\n     * @return string\n     *\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_random($dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_random();\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_scalar_random();\n    }\n\n    \/**\n     * @param string $s\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_invert($s, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_invert($s);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_scalar_invert($s);\n    }\n    \/**\n     * @param string $s\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_negate($s, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_negate($s);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_scalar_negate($s);\n    }\n\n    \/**\n     * @param string $s\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_complement($s, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_complement($s);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_scalar_complement($s);\n    }\n\n    \/**\n     * @param string $x\n     * @param string $y\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_add($x, $y, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_add($x, $y);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_scalar_add($x, $y);\n    }\n\n    \/**\n     * @param string $x\n     * @param string $y\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_sub($x, $y, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_sub($x, $y);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_scalar_sub($x, $y);\n    }\n\n    \/**\n     * @param string $x\n     * @param string $y\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_mul($x, $y, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_mul($x, $y);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::ristretto255_scalar_mul($x, $y);\n    }\n\n    \/**\n     * @param string $n\n     * @param string $p\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function scalarmult_ristretto255($n, $p, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_scalarmult_ristretto255($n, $p);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::scalarmult_ristretto255($n, $p);\n    }\n\n    \/**\n     * @param string $n\n     * @param string $p\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function scalarmult_ristretto255_base($n, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_scalarmult_ristretto255_base($n);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::scalarmult_ristretto255_base($n);\n    }\n\n    \/**\n     * @param string $s\n     * @param bool $dontFallback\n     * @return string\n     * @throws SodiumException\n     *\/\n    public static function ristretto255_scalar_reduce($s, $dontFallback = false)\n    {\n        if (self::useNewSodiumAPI() && !$dontFallback) {\n            return sodium_crypto_core_ristretto255_scalar_reduce($s);\n        }\n        return ParagonIE_Sodium_Core_Ristretto255::sc_reduce($s);\n    }\n\n    \/**\n     * Runtime testing method for 32-bit platforms.\n     *\n     * Usage: If runtime_speed_test() returns FALSE, then our 32-bit\n     *        implementation is to slow to use safely without risking timeouts.\n     *        If this happens, install sodium from PECL to get acceptable\n     *        performance.\n     *\n     * @param int $iterations Number of multiplications to attempt\n     * @param int $maxTimeout Milliseconds\n     * @return bool           TRUE if we're fast enough, FALSE is not\n     * @throws SodiumException\n     *\/\n    public static function runtime_speed_test($iterations, $maxTimeout)\n    {\n        if (self::polyfill_is_fast()) {\n            return true;\n        }\n        \/** @var float $end *\/\n        $end = 0.0;\n        \/** @var float $start *\/\n        $start = microtime(true);\n        \/** @var ParagonIE_Sodium_Core32_Int64 $a *\/\n        $a = ParagonIE_Sodium_Core32_Int64::fromInt(random_int(3, 1 << 16));\n        for ($i = 0; $i < $iterations; ++$i) {\n            \/** @var ParagonIE_Sodium_Core32_Int64 $b *\/\n            $b = ParagonIE_Sodium_Core32_Int64::fromInt(random_int(3, 1 << 16));\n            $a->mulInt64($b);\n        }\n        \/** @var float $end *\/\n        $end = microtime(true);\n        \/** @var int $diff *\/\n        $diff = (int) ceil(($end - $start) * 1000);\n        return $diff < $maxTimeout;\n    }\n\n    \/**\n     * Add two numbers (little-endian unsigned), storing the value in the first\n     * parameter.\n     *\n     * This mutates $val.\n     *\n     * @param string $val\n     * @param string $addv\n     * @return void\n     * @throws SodiumException\n     *\/\n    public static function sub(&$val, $addv)\n    {\n        $val_len = ParagonIE_Sodium_Core_Util::strlen($val);\n        $addv_len = ParagonIE_Sodium_Core_Util::strlen($addv);\n        if ($val_len !== $addv_len) {\n            throw new SodiumException('values must have the same length');\n        }\n        $A = ParagonIE_Sodium_Core_Util::stringToIntArray($val);\n        $B = ParagonIE_Sodium_Core_Util::stringToIntArray($addv);\n\n        $c = 0;\n        for ($i = 0; $i < $val_len; $i++) {\n            $c = ($A[$i] - $B[$i] - $c);\n            $A[$i] = ($c & 0xff);\n            $c = ($c >> 8) & 1;\n        }\n        $val = ParagonIE_Sodium_Core_Util::intArrayToString($A);\n    }\n\n    \/**\n     * This emulates libsodium's version_string() function, except ours is\n     * prefixed with 'polyfill-'.\n     *\n     * @return string\n     * @psalm-suppress MixedInferredReturnType\n     * @psalm-suppress UndefinedFunction\n     *\/\n    public static function version_string()\n    {\n        if (self::useNewSodiumAPI()) {\n            return (string) sodium_version_string();\n        }\n        if (self::use_fallback('version_string')) {\n            return (string) call_user_func('\\\\Sodium\\\\version_string');\n        }\n        return (string) self::VERSION_STRING;\n    }\n\n    \/**\n     * Should we use the libsodium core function instead?\n     * This is always a good idea, if it's available. (Unless we're in the\n     * middle of running our unit test suite.)\n     *\n     * If ext\/libsodium is available, use it. Return TRUE.\n     * Otherwise, we have to use the code provided herein. Return FALSE.\n     *\n     * @param string $sodium_func_name\n     *\n     * @return bool\n     *\/\n    protected static function use_fallback($sodium_func_name = '')\n    {\n        static $res = null;\n        if ($res === null) {\n            $res = extension_loaded('libsodium') && PHP_VERSION_ID >= 50300;\n        }\n        if ($res === false) {\n            \/\/ No libsodium installed\n            return false;\n        }\n        if (self::$disableFallbackForUnitTests) {\n            \/\/ Don't fallback. Use the PHP implementation.\n            return false;\n        }\n        if (!empty($sodium_func_name)) {\n            return is_callable('\\\\Sodium\\\\' . $sodium_func_name);\n        }\n        return true;\n    }\n\n    \/**\n     * Libsodium as implemented in PHP 7.2\n     * and\/or ext\/sodium (via PECL)\n     *\n     * @ref https:\/\/wiki.php.net\/rfc\/libsodium\n     * @return bool\n     *\/\n    protected static function useNewSodiumAPI()\n    {\n        static $res = null;\n        if ($res === null) {\n            $res = PHP_VERSION_ID >= 70000 && extension_loaded('sodium');\n        }\n        if (self::$disableFallbackForUnitTests) {\n            \/\/ Don't fallback. Use the PHP implementation.\n            return false;\n        }\n        return (bool) $res;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/sodium_compat\/src\/File.php","ext":"php","size":53116,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (class_exists('ParagonIE_Sodium_File', false)) {\n    return;\n}\n\/**\n * Class ParagonIE_Sodium_File\n *\/\nclass ParagonIE_Sodium_File extends ParagonIE_Sodium_Core_Util\n{\n    \/* PHP's default buffer size is 8192 for fread()\/fwrite(). *\/\n    const BUFFER_SIZE = 8192;\n\n    \/**\n     * Box a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_box(), but produces\n     * the same result.\n     *\n     * @param string $inputFile  Absolute path to a file on the filesystem\n     * @param string $outputFile Absolute path to a file on the filesystem\n     * @param string $nonce      Number to be used only once\n     * @param string $keyPair    ECDH secret key and ECDH public key concatenated\n     *\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box($inputFile, $outputFile, $nonce, $keyPair)\n    {\n        \/* Type checks: *\/\n        if (!is_string($inputFile)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($inputFile) . ' given.');\n        }\n        if (!is_string($outputFile)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($outputFile) . ' given.');\n        }\n        if (!is_string($nonce)) {\n            throw new TypeError('Argument 3 must be a string, ' . gettype($nonce) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (!is_string($keyPair)) {\n            throw new TypeError('Argument 4 must be a string, ' . gettype($keyPair) . ' given.');\n        }\n        if (self::strlen($nonce) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_NONCEBYTES) {\n            throw new TypeError('Argument 3 must be CRYPTO_BOX_NONCEBYTES bytes');\n        }\n        if (self::strlen($keyPair) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new TypeError('Argument 4 must be CRYPTO_BOX_KEYPAIRBYTES bytes');\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($inputFile);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $ifp *\/\n        $ifp = fopen($inputFile, 'rb');\n        if (!is_resource($ifp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var resource $ofp *\/\n        $ofp = fopen($outputFile, 'wb');\n        if (!is_resource($ofp)) {\n            fclose($ifp);\n            throw new SodiumException('Could not open output file for writing');\n        }\n\n        $res = self::box_encrypt($ifp, $ofp, $size, $nonce, $keyPair);\n        fclose($ifp);\n        fclose($ofp);\n        return $res;\n    }\n\n    \/**\n     * Open a boxed file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_box_open(), but produces\n     * the same result.\n     *\n     * Warning: Does not protect against TOCTOU attacks. You should\n     * just load the file into memory and use crypto_box_open() if\n     * you are worried about those.\n     *\n     * @param string $inputFile\n     * @param string $outputFile\n     * @param string $nonce\n     * @param string $keypair\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_open($inputFile, $outputFile, $nonce, $keypair)\n    {\n        \/* Type checks: *\/\n        if (!is_string($inputFile)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($inputFile) . ' given.');\n        }\n        if (!is_string($outputFile)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($outputFile) . ' given.');\n        }\n        if (!is_string($nonce)) {\n            throw new TypeError('Argument 3 must be a string, ' . gettype($nonce) . ' given.');\n        }\n        if (!is_string($keypair)) {\n            throw new TypeError('Argument 4 must be a string, ' . gettype($keypair) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (self::strlen($nonce) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_NONCEBYTES) {\n            throw new TypeError('Argument 4 must be CRYPTO_BOX_NONCEBYTES bytes');\n        }\n        if (self::strlen($keypair) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new TypeError('Argument 4 must be CRYPTO_BOX_KEYPAIRBYTES bytes');\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($inputFile);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $ifp *\/\n        $ifp = fopen($inputFile, 'rb');\n        if (!is_resource($ifp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var resource $ofp *\/\n        $ofp = fopen($outputFile, 'wb');\n        if (!is_resource($ofp)) {\n            fclose($ifp);\n            throw new SodiumException('Could not open output file for writing');\n        }\n\n        $res = self::box_decrypt($ifp, $ofp, $size, $nonce, $keypair);\n        fclose($ifp);\n        fclose($ofp);\n        try {\n            ParagonIE_Sodium_Compat::memzero($nonce);\n            ParagonIE_Sodium_Compat::memzero($ephKeypair);\n        } catch (SodiumException $ex) {\n            if (isset($ephKeypair)) {\n                unset($ephKeypair);\n            }\n        }\n        return $res;\n    }\n\n    \/**\n     * Seal a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_box_seal(), but produces\n     * the same result.\n     *\n     * @param string $inputFile  Absolute path to a file on the filesystem\n     * @param string $outputFile Absolute path to a file on the filesystem\n     * @param string $publicKey  ECDH public key\n     *\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seal($inputFile, $outputFile, $publicKey)\n    {\n        \/* Type checks: *\/\n        if (!is_string($inputFile)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($inputFile) . ' given.');\n        }\n        if (!is_string($outputFile)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($outputFile) . ' given.');\n        }\n        if (!is_string($publicKey)) {\n            throw new TypeError('Argument 3 must be a string, ' . gettype($publicKey) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (self::strlen($publicKey) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_PUBLICKEYBYTES) {\n            throw new TypeError('Argument 3 must be CRYPTO_BOX_PUBLICKEYBYTES bytes');\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($inputFile);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $ifp *\/\n        $ifp = fopen($inputFile, 'rb');\n        if (!is_resource($ifp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var resource $ofp *\/\n        $ofp = fopen($outputFile, 'wb');\n        if (!is_resource($ofp)) {\n            fclose($ifp);\n            throw new SodiumException('Could not open output file for writing');\n        }\n\n        \/** @var string $ephKeypair *\/\n        $ephKeypair = ParagonIE_Sodium_Compat::crypto_box_keypair();\n\n        \/** @var string $msgKeypair *\/\n        $msgKeypair = ParagonIE_Sodium_Compat::crypto_box_keypair_from_secretkey_and_publickey(\n            ParagonIE_Sodium_Compat::crypto_box_secretkey($ephKeypair),\n            $publicKey\n        );\n\n        \/** @var string $ephemeralPK *\/\n        $ephemeralPK = ParagonIE_Sodium_Compat::crypto_box_publickey($ephKeypair);\n\n        \/** @var string $nonce *\/\n        $nonce = ParagonIE_Sodium_Compat::crypto_generichash(\n            $ephemeralPK . $publicKey,\n            '',\n            24\n        );\n\n        \/** @var int $firstWrite *\/\n        $firstWrite = fwrite(\n            $ofp,\n            $ephemeralPK,\n            ParagonIE_Sodium_Compat::CRYPTO_BOX_PUBLICKEYBYTES\n        );\n        if (!is_int($firstWrite)) {\n            fclose($ifp);\n            fclose($ofp);\n            ParagonIE_Sodium_Compat::memzero($ephKeypair);\n            throw new SodiumException('Could not write to output file');\n        }\n        if ($firstWrite !== ParagonIE_Sodium_Compat::CRYPTO_BOX_PUBLICKEYBYTES) {\n            ParagonIE_Sodium_Compat::memzero($ephKeypair);\n            fclose($ifp);\n            fclose($ofp);\n            throw new SodiumException('Error writing public key to output file');\n        }\n\n        $res = self::box_encrypt($ifp, $ofp, $size, $nonce, $msgKeypair);\n        fclose($ifp);\n        fclose($ofp);\n        try {\n            ParagonIE_Sodium_Compat::memzero($nonce);\n            ParagonIE_Sodium_Compat::memzero($ephKeypair);\n        } catch (SodiumException $ex) {\n            \/** @psalm-suppress PossiblyUndefinedVariable *\/\n            unset($ephKeypair);\n        }\n        return $res;\n    }\n\n    \/**\n     * Open a sealed file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_box_seal_open(), but produces\n     * the same result.\n     *\n     * Warning: Does not protect against TOCTOU attacks. You should\n     * just load the file into memory and use crypto_box_seal_open() if\n     * you are worried about those.\n     *\n     * @param string $inputFile\n     * @param string $outputFile\n     * @param string $ecdhKeypair\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function box_seal_open($inputFile, $outputFile, $ecdhKeypair)\n    {\n        \/* Type checks: *\/\n        if (!is_string($inputFile)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($inputFile) . ' given.');\n        }\n        if (!is_string($outputFile)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($outputFile) . ' given.');\n        }\n        if (!is_string($ecdhKeypair)) {\n            throw new TypeError('Argument 3 must be a string, ' . gettype($ecdhKeypair) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (self::strlen($ecdhKeypair) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_KEYPAIRBYTES) {\n            throw new TypeError('Argument 3 must be CRYPTO_BOX_KEYPAIRBYTES bytes');\n        }\n\n        $publicKey = ParagonIE_Sodium_Compat::crypto_box_publickey($ecdhKeypair);\n\n        \/** @var int $size *\/\n        $size = filesize($inputFile);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $ifp *\/\n        $ifp = fopen($inputFile, 'rb');\n        if (!is_resource($ifp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var resource $ofp *\/\n        $ofp = fopen($outputFile, 'wb');\n        if (!is_resource($ofp)) {\n            fclose($ifp);\n            throw new SodiumException('Could not open output file for writing');\n        }\n\n        $ephemeralPK = fread($ifp, ParagonIE_Sodium_Compat::CRYPTO_BOX_PUBLICKEYBYTES);\n        if (!is_string($ephemeralPK)) {\n            throw new SodiumException('Could not read input file');\n        }\n        if (self::strlen($ephemeralPK) !== ParagonIE_Sodium_Compat::CRYPTO_BOX_PUBLICKEYBYTES) {\n            fclose($ifp);\n            fclose($ofp);\n            throw new SodiumException('Could not read public key from sealed file');\n        }\n\n        $nonce = ParagonIE_Sodium_Compat::crypto_generichash(\n            $ephemeralPK . $publicKey,\n            '',\n            24\n        );\n        $msgKeypair = ParagonIE_Sodium_Compat::crypto_box_keypair_from_secretkey_and_publickey(\n            ParagonIE_Sodium_Compat::crypto_box_secretkey($ecdhKeypair),\n            $ephemeralPK\n        );\n\n        $res = self::box_decrypt($ifp, $ofp, $size, $nonce, $msgKeypair);\n        fclose($ifp);\n        fclose($ofp);\n        try {\n            ParagonIE_Sodium_Compat::memzero($nonce);\n            ParagonIE_Sodium_Compat::memzero($ephKeypair);\n        } catch (SodiumException $ex) {\n            if (isset($ephKeypair)) {\n                unset($ephKeypair);\n            }\n        }\n        return $res;\n    }\n\n    \/**\n     * Calculate the BLAKE2b hash of a file.\n     *\n     * @param string      $filePath     Absolute path to a file on the filesystem\n     * @param string|null $key          BLAKE2b key\n     * @param int         $outputLength Length of hash output\n     *\n     * @return string                   BLAKE2b hash\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress FailedTypeResolution\n     *\/\n    public static function generichash($filePath, $key = '', $outputLength = 32)\n    {\n        \/* Type checks: *\/\n        if (!is_string($filePath)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($filePath) . ' given.');\n        }\n        if (!is_string($key)) {\n            if (is_null($key)) {\n                $key = '';\n            } else {\n                throw new TypeError('Argument 2 must be a string, ' . gettype($key) . ' given.');\n            }\n        }\n        if (!is_int($outputLength)) {\n            if (!is_numeric($outputLength)) {\n                throw new TypeError('Argument 3 must be an integer, ' . gettype($outputLength) . ' given.');\n            }\n            $outputLength = (int) $outputLength;\n        }\n\n        \/* Input validation: *\/\n        if (!empty($key)) {\n            if (self::strlen($key) < ParagonIE_Sodium_Compat::CRYPTO_GENERICHASH_KEYBYTES_MIN) {\n                throw new TypeError('Argument 2 must be at least CRYPTO_GENERICHASH_KEYBYTES_MIN bytes');\n            }\n            if (self::strlen($key) > ParagonIE_Sodium_Compat::CRYPTO_GENERICHASH_KEYBYTES_MAX) {\n                throw new TypeError('Argument 2 must be at most CRYPTO_GENERICHASH_KEYBYTES_MAX bytes');\n            }\n        }\n        if ($outputLength < ParagonIE_Sodium_Compat::CRYPTO_GENERICHASH_BYTES_MIN) {\n            throw new SodiumException('Argument 3 must be at least CRYPTO_GENERICHASH_BYTES_MIN');\n        }\n        if ($outputLength > ParagonIE_Sodium_Compat::CRYPTO_GENERICHASH_BYTES_MAX) {\n            throw new SodiumException('Argument 3 must be at least CRYPTO_GENERICHASH_BYTES_MAX');\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($filePath);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $fp *\/\n        $fp = fopen($filePath, 'rb');\n        if (!is_resource($fp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n        $ctx = ParagonIE_Sodium_Compat::crypto_generichash_init($key, $outputLength);\n        while ($size > 0) {\n            $blockSize = $size > 64\n                ? 64\n                : $size;\n            $read = fread($fp, $blockSize);\n            if (!is_string($read)) {\n                throw new SodiumException('Could not read input file');\n            }\n            ParagonIE_Sodium_Compat::crypto_generichash_update($ctx, $read);\n            $size -= $blockSize;\n        }\n\n        fclose($fp);\n        return ParagonIE_Sodium_Compat::crypto_generichash_final($ctx, $outputLength);\n    }\n\n    \/**\n     * Encrypt a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_secretbox(), but produces\n     * the same result.\n     *\n     * @param string $inputFile  Absolute path to a file on the filesystem\n     * @param string $outputFile Absolute path to a file on the filesystem\n     * @param string $nonce      Number to be used only once\n     * @param string $key        Encryption key\n     *\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox($inputFile, $outputFile, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        if (!is_string($inputFile)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($inputFile) . ' given..');\n        }\n        if (!is_string($outputFile)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($outputFile) . ' given.');\n        }\n        if (!is_string($nonce)) {\n            throw new TypeError('Argument 3 must be a string, ' . gettype($nonce) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (self::strlen($nonce) !== ParagonIE_Sodium_Compat::CRYPTO_SECRETBOX_NONCEBYTES) {\n            throw new TypeError('Argument 3 must be CRYPTO_SECRETBOX_NONCEBYTES bytes');\n        }\n        if (!is_string($key)) {\n            throw new TypeError('Argument 4 must be a string, ' . gettype($key) . ' given.');\n        }\n        if (self::strlen($key) !== ParagonIE_Sodium_Compat::CRYPTO_SECRETBOX_KEYBYTES) {\n            throw new TypeError('Argument 4 must be CRYPTO_SECRETBOX_KEYBYTES bytes');\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($inputFile);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $ifp *\/\n        $ifp = fopen($inputFile, 'rb');\n        if (!is_resource($ifp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var resource $ofp *\/\n        $ofp = fopen($outputFile, 'wb');\n        if (!is_resource($ofp)) {\n            fclose($ifp);\n            throw new SodiumException('Could not open output file for writing');\n        }\n\n        $res = self::secretbox_encrypt($ifp, $ofp, $size, $nonce, $key);\n        fclose($ifp);\n        fclose($ofp);\n        return $res;\n    }\n    \/**\n     * Seal a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_secretbox_open(), but produces\n     * the same result.\n     *\n     * Warning: Does not protect against TOCTOU attacks. You should\n     * just load the file into memory and use crypto_secretbox_open() if\n     * you are worried about those.\n     *\n     * @param string $inputFile\n     * @param string $outputFile\n     * @param string $nonce\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function secretbox_open($inputFile, $outputFile, $nonce, $key)\n    {\n        \/* Type checks: *\/\n        if (!is_string($inputFile)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($inputFile) . ' given.');\n        }\n        if (!is_string($outputFile)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($outputFile) . ' given.');\n        }\n        if (!is_string($nonce)) {\n            throw new TypeError('Argument 3 must be a string, ' . gettype($nonce) . ' given.');\n        }\n        if (!is_string($key)) {\n            throw new TypeError('Argument 4 must be a string, ' . gettype($key) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (self::strlen($nonce) !== ParagonIE_Sodium_Compat::CRYPTO_SECRETBOX_NONCEBYTES) {\n            throw new TypeError('Argument 4 must be CRYPTO_SECRETBOX_NONCEBYTES bytes');\n        }\n        if (self::strlen($key) !== ParagonIE_Sodium_Compat::CRYPTO_SECRETBOX_KEYBYTES) {\n            throw new TypeError('Argument 4 must be CRYPTO_SECRETBOXBOX_KEYBYTES bytes');\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($inputFile);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $ifp *\/\n        $ifp = fopen($inputFile, 'rb');\n        if (!is_resource($ifp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var resource $ofp *\/\n        $ofp = fopen($outputFile, 'wb');\n        if (!is_resource($ofp)) {\n            fclose($ifp);\n            throw new SodiumException('Could not open output file for writing');\n        }\n\n        $res = self::secretbox_decrypt($ifp, $ofp, $size, $nonce, $key);\n        fclose($ifp);\n        fclose($ofp);\n        try {\n            ParagonIE_Sodium_Compat::memzero($key);\n        } catch (SodiumException $ex) {\n            \/** @psalm-suppress PossiblyUndefinedVariable *\/\n            unset($key);\n        }\n        return $res;\n    }\n\n    \/**\n     * Sign a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_sign_detached(), but produces\n     * the same result.\n     *\n     * @param string $filePath  Absolute path to a file on the filesystem\n     * @param string $secretKey Secret signing key\n     *\n     * @return string           Ed25519 signature\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    public static function sign($filePath, $secretKey)\n    {\n        \/* Type checks: *\/\n        if (!is_string($filePath)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($filePath) . ' given.');\n        }\n        if (!is_string($secretKey)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($secretKey) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (self::strlen($secretKey) !== ParagonIE_Sodium_Compat::CRYPTO_SIGN_SECRETKEYBYTES) {\n            throw new TypeError('Argument 2 must be CRYPTO_SIGN_SECRETKEYBYTES bytes');\n        }\n        if (PHP_INT_SIZE === 4) {\n            return self::sign_core32($filePath, $secretKey);\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($filePath);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $fp *\/\n        $fp = fopen($filePath, 'rb');\n        if (!is_resource($fp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var string $az *\/\n        $az = hash('sha512', self::substr($secretKey, 0, 32), true);\n\n        $az[0] = self::intToChr(self::chrToInt($az[0]) & 248);\n        $az[31] = self::intToChr((self::chrToInt($az[31]) & 63) | 64);\n\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($az, 32, 32));\n        \/** @var resource $hs *\/\n        $hs = self::updateHashWithFile($hs, $fp, $size);\n\n        \/** @var string $nonceHash *\/\n        $nonceHash = hash_final($hs, true);\n\n        \/** @var string $pk *\/\n        $pk = self::substr($secretKey, 32, 32);\n\n        \/** @var string $nonce *\/\n        $nonce = ParagonIE_Sodium_Core_Ed25519::sc_reduce($nonceHash) . self::substr($nonceHash, 32);\n\n        \/** @var string $sig *\/\n        $sig = ParagonIE_Sodium_Core_Ed25519::ge_p3_tobytes(\n            ParagonIE_Sodium_Core_Ed25519::ge_scalarmult_base($nonce)\n        );\n\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($sig, 0, 32));\n        self::hash_update($hs, self::substr($pk, 0, 32));\n        \/** @var resource $hs *\/\n        $hs = self::updateHashWithFile($hs, $fp, $size);\n\n        \/** @var string $hramHash *\/\n        $hramHash = hash_final($hs, true);\n\n        \/** @var string $hram *\/\n        $hram = ParagonIE_Sodium_Core_Ed25519::sc_reduce($hramHash);\n\n        \/** @var string $sigAfter *\/\n        $sigAfter = ParagonIE_Sodium_Core_Ed25519::sc_muladd($hram, $az, $nonce);\n\n        \/** @var string $sig *\/\n        $sig = self::substr($sig, 0, 32) . self::substr($sigAfter, 0, 32);\n\n        try {\n            ParagonIE_Sodium_Compat::memzero($az);\n        } catch (SodiumException $ex) {\n            $az = null;\n        }\n        fclose($fp);\n        return $sig;\n    }\n\n    \/**\n     * Verify a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_sign_verify_detached(), but\n     * produces the same result.\n     *\n     * @param string $sig       Ed25519 signature\n     * @param string $filePath  Absolute path to a file on the filesystem\n     * @param string $publicKey Signing public key\n     *\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     * @throws Exception\n     *\/\n    public static function verify($sig, $filePath, $publicKey)\n    {\n        \/* Type checks: *\/\n        if (!is_string($sig)) {\n            throw new TypeError('Argument 1 must be a string, ' . gettype($sig) . ' given.');\n        }\n        if (!is_string($filePath)) {\n            throw new TypeError('Argument 2 must be a string, ' . gettype($filePath) . ' given.');\n        }\n        if (!is_string($publicKey)) {\n            throw new TypeError('Argument 3 must be a string, ' . gettype($publicKey) . ' given.');\n        }\n\n        \/* Input validation: *\/\n        if (self::strlen($sig) !== ParagonIE_Sodium_Compat::CRYPTO_SIGN_BYTES) {\n            throw new TypeError('Argument 1 must be CRYPTO_SIGN_BYTES bytes');\n        }\n        if (self::strlen($publicKey) !== ParagonIE_Sodium_Compat::CRYPTO_SIGN_PUBLICKEYBYTES) {\n            throw new TypeError('Argument 3 must be CRYPTO_SIGN_PUBLICKEYBYTES bytes');\n        }\n        if (self::strlen($sig) < 64) {\n            throw new SodiumException('Signature is too short');\n        }\n\n        if (PHP_INT_SIZE === 4) {\n            return self::verify_core32($sig, $filePath, $publicKey);\n        }\n\n        \/* Security checks *\/\n        if (\n            (ParagonIE_Sodium_Core_Ed25519::chrToInt($sig[63]) & 240)\n                &&\n            ParagonIE_Sodium_Core_Ed25519::check_S_lt_L(self::substr($sig, 32, 32))\n        ) {\n            throw new SodiumException('S < L - Invalid signature');\n        }\n        if (ParagonIE_Sodium_Core_Ed25519::small_order($sig)) {\n            throw new SodiumException('Signature is on too small of an order');\n        }\n        if ((self::chrToInt($sig[63]) & 224) !== 0) {\n            throw new SodiumException('Invalid signature');\n        }\n        $d = 0;\n        for ($i = 0; $i < 32; ++$i) {\n            $d |= self::chrToInt($publicKey[$i]);\n        }\n        if ($d === 0) {\n            throw new SodiumException('All zero public key');\n        }\n\n        \/** @var int $size *\/\n        $size = filesize($filePath);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        \/** @var resource $fp *\/\n        $fp = fopen($filePath, 'rb');\n        if (!is_resource($fp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var bool The original value of ParagonIE_Sodium_Compat::$fastMult *\/\n        $orig = ParagonIE_Sodium_Compat::$fastMult;\n\n        \/\/ Set ParagonIE_Sodium_Compat::$fastMult to true to speed up verification.\n        ParagonIE_Sodium_Compat::$fastMult = true;\n\n        \/** @var ParagonIE_Sodium_Core_Curve25519_Ge_P3 $A *\/\n        $A = ParagonIE_Sodium_Core_Ed25519::ge_frombytes_negate_vartime($publicKey);\n\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($sig, 0, 32));\n        self::hash_update($hs, self::substr($publicKey, 0, 32));\n        \/** @var resource $hs *\/\n        $hs = self::updateHashWithFile($hs, $fp, $size);\n        \/** @var string $hDigest *\/\n        $hDigest = hash_final($hs, true);\n\n        \/** @var string $h *\/\n        $h = ParagonIE_Sodium_Core_Ed25519::sc_reduce($hDigest) . self::substr($hDigest, 32);\n\n        \/** @var ParagonIE_Sodium_Core_Curve25519_Ge_P2 $R *\/\n        $R = ParagonIE_Sodium_Core_Ed25519::ge_double_scalarmult_vartime(\n            $h,\n            $A,\n            self::substr($sig, 32)\n        );\n\n        \/** @var string $rcheck *\/\n        $rcheck = ParagonIE_Sodium_Core_Ed25519::ge_tobytes($R);\n\n        \/\/ Close the file handle\n        fclose($fp);\n\n        \/\/ Reset ParagonIE_Sodium_Compat::$fastMult to what it was before.\n        ParagonIE_Sodium_Compat::$fastMult = $orig;\n        return self::verify_32($rcheck, self::substr($sig, 0, 32));\n    }\n\n    \/**\n     * @param resource $ifp\n     * @param resource $ofp\n     * @param int      $mlen\n     * @param string   $nonce\n     * @param string   $boxKeypair\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function box_encrypt($ifp, $ofp, $mlen, $nonce, $boxKeypair)\n    {\n        if (PHP_INT_SIZE === 4) {\n            return self::secretbox_encrypt(\n                $ifp,\n                $ofp,\n                $mlen,\n                $nonce,\n                ParagonIE_Sodium_Crypto32::box_beforenm(\n                    ParagonIE_Sodium_Crypto32::box_secretkey($boxKeypair),\n                    ParagonIE_Sodium_Crypto32::box_publickey($boxKeypair)\n                )\n            );\n        }\n        return self::secretbox_encrypt(\n            $ifp,\n            $ofp,\n            $mlen,\n            $nonce,\n            ParagonIE_Sodium_Crypto::box_beforenm(\n                ParagonIE_Sodium_Crypto::box_secretkey($boxKeypair),\n                ParagonIE_Sodium_Crypto::box_publickey($boxKeypair)\n            )\n        );\n    }\n\n\n    \/**\n     * @param resource $ifp\n     * @param resource $ofp\n     * @param int      $mlen\n     * @param string   $nonce\n     * @param string   $boxKeypair\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function box_decrypt($ifp, $ofp, $mlen, $nonce, $boxKeypair)\n    {\n        if (PHP_INT_SIZE === 4) {\n            return self::secretbox_decrypt(\n                $ifp,\n                $ofp,\n                $mlen,\n                $nonce,\n                ParagonIE_Sodium_Crypto32::box_beforenm(\n                    ParagonIE_Sodium_Crypto32::box_secretkey($boxKeypair),\n                    ParagonIE_Sodium_Crypto32::box_publickey($boxKeypair)\n                )\n            );\n        }\n        return self::secretbox_decrypt(\n            $ifp,\n            $ofp,\n            $mlen,\n            $nonce,\n            ParagonIE_Sodium_Crypto::box_beforenm(\n                ParagonIE_Sodium_Crypto::box_secretkey($boxKeypair),\n                ParagonIE_Sodium_Crypto::box_publickey($boxKeypair)\n            )\n        );\n    }\n\n    \/**\n     * Encrypt a file\n     *\n     * @param resource $ifp\n     * @param resource $ofp\n     * @param int $mlen\n     * @param string $nonce\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function secretbox_encrypt($ifp, $ofp, $mlen, $nonce, $key)\n    {\n        if (PHP_INT_SIZE === 4) {\n            return self::secretbox_encrypt_core32($ifp, $ofp, $mlen, $nonce, $key);\n        }\n\n        $plaintext = fread($ifp, 32);\n        if (!is_string($plaintext)) {\n            throw new SodiumException('Could not read input file');\n        }\n        $first32 = self::ftell($ifp);\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $realNonce *\/\n        $realNonce = ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8);\n\n        \/** @var string $block0 *\/\n        $block0 = str_repeat(\"\\x00\", 32);\n\n        \/** @var int $mlen - Length of the plaintext message *\/\n        $mlen0 = $mlen;\n        if ($mlen0 > 64 - ParagonIE_Sodium_Crypto::secretbox_xsalsa20poly1305_ZEROBYTES) {\n            $mlen0 = 64 - ParagonIE_Sodium_Crypto::secretbox_xsalsa20poly1305_ZEROBYTES;\n        }\n        $block0 .= ParagonIE_Sodium_Core_Util::substr($plaintext, 0, $mlen0);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core_Salsa20::salsa20_xor(\n            $block0,\n            $realNonce,\n            $subkey\n        );\n\n        $state = new ParagonIE_Sodium_Core_Poly1305_State(\n            ParagonIE_Sodium_Core_Util::substr(\n                $block0,\n                0,\n                ParagonIE_Sodium_Crypto::onetimeauth_poly1305_KEYBYTES\n            )\n        );\n\n        \/\/ Pre-write 16 blank bytes for the Poly1305 tag\n        $start = self::ftell($ofp);\n        fwrite($ofp, str_repeat(\"\\x00\", 16));\n\n        \/** @var string $c *\/\n        $cBlock = ParagonIE_Sodium_Core_Util::substr(\n            $block0,\n            ParagonIE_Sodium_Crypto::secretbox_xsalsa20poly1305_ZEROBYTES\n        );\n        $state->update($cBlock);\n        fwrite($ofp, $cBlock);\n        $mlen -= 32;\n\n        \/** @var int $iter *\/\n        $iter = 1;\n\n        \/** @var int $incr *\/\n        $incr = self::BUFFER_SIZE >> 6;\n\n        \/*\n         * Set the cursor to the end of the first half-block. All future bytes will\n         * generated from salsa20_xor_ic, starting from 1 (second block).\n         *\/\n        fseek($ifp, $first32, SEEK_SET);\n\n        while ($mlen > 0) {\n            $blockSize = $mlen > self::BUFFER_SIZE\n                ? self::BUFFER_SIZE\n                : $mlen;\n            $plaintext = fread($ifp, $blockSize);\n            if (!is_string($plaintext)) {\n                throw new SodiumException('Could not read input file');\n            }\n            $cBlock = ParagonIE_Sodium_Core_Salsa20::salsa20_xor_ic(\n                $plaintext,\n                $realNonce,\n                $iter,\n                $subkey\n            );\n            fwrite($ofp, $cBlock, $blockSize);\n            $state->update($cBlock);\n\n            $mlen -= $blockSize;\n            $iter += $incr;\n        }\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n            ParagonIE_Sodium_Compat::memzero($subkey);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n            $subkey = null;\n        }\n        $end = self::ftell($ofp);\n\n        \/*\n         * Write the Poly1305 authentication tag that provides integrity\n         * over the ciphertext (encrypt-then-MAC)\n         *\/\n        fseek($ofp, $start, SEEK_SET);\n        fwrite($ofp, $state->finish(), ParagonIE_Sodium_Compat::CRYPTO_SECRETBOX_MACBYTES);\n        fseek($ofp, $end, SEEK_SET);\n        unset($state);\n\n        return true;\n    }\n\n    \/**\n     * Decrypt a file\n     *\n     * @param resource $ifp\n     * @param resource $ofp\n     * @param int $mlen\n     * @param string $nonce\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function secretbox_decrypt($ifp, $ofp, $mlen, $nonce, $key)\n    {\n        if (PHP_INT_SIZE === 4) {\n            return self::secretbox_decrypt_core32($ifp, $ofp, $mlen, $nonce, $key);\n        }\n        $tag = fread($ifp, 16);\n        if (!is_string($tag)) {\n            throw new SodiumException('Could not read input file');\n        }\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $realNonce *\/\n        $realNonce = ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core_Salsa20::salsa20(\n            64,\n            ParagonIE_Sodium_Core_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n\n        \/* Verify the Poly1305 MAC -before- attempting to decrypt! *\/\n        $state = new ParagonIE_Sodium_Core_Poly1305_State(self::substr($block0, 0, 32));\n        if (!self::onetimeauth_verify($state, $ifp, $tag, $mlen)) {\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/*\n         * Set the cursor to the end of the first half-block. All future bytes will\n         * generated from salsa20_xor_ic, starting from 1 (second block).\n         *\/\n        $first32 = fread($ifp, 32);\n        if (!is_string($first32)) {\n            throw new SodiumException('Could not read input file');\n        }\n        $first32len = self::strlen($first32);\n        fwrite(\n            $ofp,\n            self::xorStrings(\n                self::substr($block0, 32, $first32len),\n                self::substr($first32, 0, $first32len)\n            )\n        );\n        $mlen -= 32;\n\n        \/** @var int $iter *\/\n        $iter = 1;\n\n        \/** @var int $incr *\/\n        $incr = self::BUFFER_SIZE >> 6;\n\n        \/* Decrypts ciphertext, writes to output file. *\/\n        while ($mlen > 0) {\n            $blockSize = $mlen > self::BUFFER_SIZE\n                ? self::BUFFER_SIZE\n                : $mlen;\n            $ciphertext = fread($ifp, $blockSize);\n            if (!is_string($ciphertext)) {\n                throw new SodiumException('Could not read input file');\n            }\n            $pBlock = ParagonIE_Sodium_Core_Salsa20::salsa20_xor_ic(\n                $ciphertext,\n                $realNonce,\n                $iter,\n                $subkey\n            );\n            fwrite($ofp, $pBlock, $blockSize);\n            $mlen -= $blockSize;\n            $iter += $incr;\n        }\n        return true;\n    }\n\n    \/**\n     * @param ParagonIE_Sodium_Core_Poly1305_State $state\n     * @param resource $ifp\n     * @param string $tag\n     * @param int $mlen\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function onetimeauth_verify(\n        ParagonIE_Sodium_Core_Poly1305_State $state,\n        $ifp,\n        $tag = '',\n        $mlen = 0\n    ) {\n        \/** @var int $pos *\/\n        $pos = self::ftell($ifp);\n\n        \/** @var int $iter *\/\n        $iter = 1;\n\n        \/** @var int $incr *\/\n        $incr = self::BUFFER_SIZE >> 6;\n\n        while ($mlen > 0) {\n            $blockSize = $mlen > self::BUFFER_SIZE\n                ? self::BUFFER_SIZE\n                : $mlen;\n            $ciphertext = fread($ifp, $blockSize);\n            if (!is_string($ciphertext)) {\n                throw new SodiumException('Could not read input file');\n            }\n            $state->update($ciphertext);\n            $mlen -= $blockSize;\n            $iter += $incr;\n        }\n        $res = ParagonIE_Sodium_Core_Util::verify_16($tag, $state->finish());\n\n        fseek($ifp, $pos, SEEK_SET);\n        return $res;\n    }\n\n    \/**\n     * Update a hash context with the contents of a file, without\n     * loading the entire file into memory.\n     *\n     * @param resource|HashContext $hash\n     * @param resource $fp\n     * @param int $size\n     * @return resource|object Resource on PHP < 7.2, HashContext object on PHP >= 7.2\n     * @throws SodiumException\n     * @throws TypeError\n     * @psalm-suppress PossiblyInvalidArgument\n     *                 PHP 7.2 changes from a resource to an object,\n     *                 which causes Psalm to complain about an error.\n     * @psalm-suppress TypeCoercion\n     *                 Ditto.\n     *\/\n    public static function updateHashWithFile($hash, $fp, $size = 0)\n    {\n        \/* Type checks: *\/\n        if (PHP_VERSION_ID < 70200) {\n            if (!is_resource($hash)) {\n                throw new TypeError('Argument 1 must be a resource, ' . gettype($hash) . ' given.');\n            }\n        } else {\n            if (!is_object($hash)) {\n                throw new TypeError('Argument 1 must be an object (PHP 7.2+), ' . gettype($hash) . ' given.');\n            }\n        }\n\n        if (!is_resource($fp)) {\n            throw new TypeError('Argument 2 must be a resource, ' . gettype($fp) . ' given.');\n        }\n        if (!is_int($size)) {\n            throw new TypeError('Argument 3 must be an integer, ' . gettype($size) . ' given.');\n        }\n\n        \/** @var int $originalPosition *\/\n        $originalPosition = self::ftell($fp);\n\n        \/\/ Move file pointer to beginning of file\n        fseek($fp, 0, SEEK_SET);\n        for ($i = 0; $i < $size; $i += self::BUFFER_SIZE) {\n            \/** @var string|bool $message *\/\n            $message = fread(\n                $fp,\n                ($size - $i) > self::BUFFER_SIZE\n                    ? $size - $i\n                    : self::BUFFER_SIZE\n            );\n            if (!is_string($message)) {\n                throw new SodiumException('Unexpected error reading from file.');\n            }\n            \/** @var string $message *\/\n            \/** @psalm-suppress InvalidArgument *\/\n            self::hash_update($hash, $message);\n        }\n        \/\/ Reset file pointer's position\n        fseek($fp, $originalPosition, SEEK_SET);\n        return $hash;\n    }\n\n    \/**\n     * Sign a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_sign_detached(), but produces\n     * the same result. (32-bit)\n     *\n     * @param string $filePath  Absolute path to a file on the filesystem\n     * @param string $secretKey Secret signing key\n     *\n     * @return string           Ed25519 signature\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    private static function sign_core32($filePath, $secretKey)\n    {\n        $size = filesize($filePath);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n\n        $fp = fopen($filePath, 'rb');\n        if (!is_resource($fp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n\n        \/** @var string $az *\/\n        $az = hash('sha512', self::substr($secretKey, 0, 32), true);\n\n        $az[0] = self::intToChr(self::chrToInt($az[0]) & 248);\n        $az[31] = self::intToChr((self::chrToInt($az[31]) & 63) | 64);\n\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($az, 32, 32));\n        \/** @var resource $hs *\/\n        $hs = self::updateHashWithFile($hs, $fp, $size);\n\n        $nonceHash = hash_final($hs, true);\n        $pk = self::substr($secretKey, 32, 32);\n        $nonce = ParagonIE_Sodium_Core32_Ed25519::sc_reduce($nonceHash) . self::substr($nonceHash, 32);\n        $sig = ParagonIE_Sodium_Core32_Ed25519::ge_p3_tobytes(\n            ParagonIE_Sodium_Core32_Ed25519::ge_scalarmult_base($nonce)\n        );\n\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($sig, 0, 32));\n        self::hash_update($hs, self::substr($pk, 0, 32));\n        \/** @var resource $hs *\/\n        $hs = self::updateHashWithFile($hs, $fp, $size);\n\n        $hramHash = hash_final($hs, true);\n\n        $hram = ParagonIE_Sodium_Core32_Ed25519::sc_reduce($hramHash);\n\n        $sigAfter = ParagonIE_Sodium_Core32_Ed25519::sc_muladd($hram, $az, $nonce);\n\n        \/** @var string $sig *\/\n        $sig = self::substr($sig, 0, 32) . self::substr($sigAfter, 0, 32);\n\n        try {\n            ParagonIE_Sodium_Compat::memzero($az);\n        } catch (SodiumException $ex) {\n            $az = null;\n        }\n        fclose($fp);\n        return $sig;\n    }\n\n    \/**\n     *\n     * Verify a file (rather than a string). Uses less memory than\n     * ParagonIE_Sodium_Compat::crypto_sign_verify_detached(), but\n     * produces the same result. (32-bit)\n     *\n     * @param string $sig       Ed25519 signature\n     * @param string $filePath  Absolute path to a file on the filesystem\n     * @param string $publicKey Signing public key\n     *\n     * @return bool\n     * @throws SodiumException\n     * @throws Exception\n     *\/\n    public static function verify_core32($sig, $filePath, $publicKey)\n    {\n        \/* Security checks *\/\n        if (ParagonIE_Sodium_Core32_Ed25519::check_S_lt_L(self::substr($sig, 32, 32))) {\n            throw new SodiumException('S < L - Invalid signature');\n        }\n        if (ParagonIE_Sodium_Core32_Ed25519::small_order($sig)) {\n            throw new SodiumException('Signature is on too small of an order');\n        }\n\n        if ((self::chrToInt($sig[63]) & 224) !== 0) {\n            throw new SodiumException('Invalid signature');\n        }\n        $d = 0;\n        for ($i = 0; $i < 32; ++$i) {\n            $d |= self::chrToInt($publicKey[$i]);\n        }\n        if ($d === 0) {\n            throw new SodiumException('All zero public key');\n        }\n\n        \/** @var int|bool $size *\/\n        $size = filesize($filePath);\n        if (!is_int($size)) {\n            throw new SodiumException('Could not obtain the file size');\n        }\n        \/** @var int $size *\/\n\n        \/** @var resource|bool $fp *\/\n        $fp = fopen($filePath, 'rb');\n        if (!is_resource($fp)) {\n            throw new SodiumException('Could not open input file for reading');\n        }\n        \/** @var resource $fp *\/\n\n        \/** @var bool The original value of ParagonIE_Sodium_Compat::$fastMult *\/\n        $orig = ParagonIE_Sodium_Compat::$fastMult;\n\n        \/\/ Set ParagonIE_Sodium_Compat::$fastMult to true to speed up verification.\n        ParagonIE_Sodium_Compat::$fastMult = true;\n\n        \/** @var ParagonIE_Sodium_Core32_Curve25519_Ge_P3 $A *\/\n        $A = ParagonIE_Sodium_Core32_Ed25519::ge_frombytes_negate_vartime($publicKey);\n\n        $hs = hash_init('sha512');\n        self::hash_update($hs, self::substr($sig, 0, 32));\n        self::hash_update($hs, self::substr($publicKey, 0, 32));\n        \/** @var resource $hs *\/\n        $hs = self::updateHashWithFile($hs, $fp, $size);\n        \/** @var string $hDigest *\/\n        $hDigest = hash_final($hs, true);\n\n        \/** @var string $h *\/\n        $h = ParagonIE_Sodium_Core32_Ed25519::sc_reduce($hDigest) . self::substr($hDigest, 32);\n\n        \/** @var ParagonIE_Sodium_Core32_Curve25519_Ge_P2 $R *\/\n        $R = ParagonIE_Sodium_Core32_Ed25519::ge_double_scalarmult_vartime(\n            $h,\n            $A,\n            self::substr($sig, 32)\n        );\n\n        \/** @var string $rcheck *\/\n        $rcheck = ParagonIE_Sodium_Core32_Ed25519::ge_tobytes($R);\n\n        \/\/ Close the file handle\n        fclose($fp);\n\n        \/\/ Reset ParagonIE_Sodium_Compat::$fastMult to what it was before.\n        ParagonIE_Sodium_Compat::$fastMult = $orig;\n        return self::verify_32($rcheck, self::substr($sig, 0, 32));\n    }\n\n    \/**\n     * Encrypt a file (32-bit)\n     *\n     * @param resource $ifp\n     * @param resource $ofp\n     * @param int $mlen\n     * @param string $nonce\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function secretbox_encrypt_core32($ifp, $ofp, $mlen, $nonce, $key)\n    {\n        $plaintext = fread($ifp, 32);\n        if (!is_string($plaintext)) {\n            throw new SodiumException('Could not read input file');\n        }\n        $first32 = self::ftell($ifp);\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core32_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $realNonce *\/\n        $realNonce = ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8);\n\n        \/** @var string $block0 *\/\n        $block0 = str_repeat(\"\\x00\", 32);\n\n        \/** @var int $mlen - Length of the plaintext message *\/\n        $mlen0 = $mlen;\n        if ($mlen0 > 64 - ParagonIE_Sodium_Crypto::secretbox_xsalsa20poly1305_ZEROBYTES) {\n            $mlen0 = 64 - ParagonIE_Sodium_Crypto::secretbox_xsalsa20poly1305_ZEROBYTES;\n        }\n        $block0 .= ParagonIE_Sodium_Core32_Util::substr($plaintext, 0, $mlen0);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core32_Salsa20::salsa20_xor(\n            $block0,\n            $realNonce,\n            $subkey\n        );\n\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State(\n            ParagonIE_Sodium_Core32_Util::substr(\n                $block0,\n                0,\n                ParagonIE_Sodium_Crypto::onetimeauth_poly1305_KEYBYTES\n            )\n        );\n\n        \/\/ Pre-write 16 blank bytes for the Poly1305 tag\n        $start = self::ftell($ofp);\n        fwrite($ofp, str_repeat(\"\\x00\", 16));\n\n        \/** @var string $c *\/\n        $cBlock = ParagonIE_Sodium_Core32_Util::substr(\n            $block0,\n            ParagonIE_Sodium_Crypto::secretbox_xsalsa20poly1305_ZEROBYTES\n        );\n        $state->update($cBlock);\n        fwrite($ofp, $cBlock);\n        $mlen -= 32;\n\n        \/** @var int $iter *\/\n        $iter = 1;\n\n        \/** @var int $incr *\/\n        $incr = self::BUFFER_SIZE >> 6;\n\n        \/*\n         * Set the cursor to the end of the first half-block. All future bytes will\n         * generated from salsa20_xor_ic, starting from 1 (second block).\n         *\/\n        fseek($ifp, $first32, SEEK_SET);\n\n        while ($mlen > 0) {\n            $blockSize = $mlen > self::BUFFER_SIZE\n                ? self::BUFFER_SIZE\n                : $mlen;\n            $plaintext = fread($ifp, $blockSize);\n            if (!is_string($plaintext)) {\n                throw new SodiumException('Could not read input file');\n            }\n            $cBlock = ParagonIE_Sodium_Core32_Salsa20::salsa20_xor_ic(\n                $plaintext,\n                $realNonce,\n                $iter,\n                $subkey\n            );\n            fwrite($ofp, $cBlock, $blockSize);\n            $state->update($cBlock);\n\n            $mlen -= $blockSize;\n            $iter += $incr;\n        }\n        try {\n            ParagonIE_Sodium_Compat::memzero($block0);\n            ParagonIE_Sodium_Compat::memzero($subkey);\n        } catch (SodiumException $ex) {\n            $block0 = null;\n            $subkey = null;\n        }\n        $end = self::ftell($ofp);\n\n        \/*\n         * Write the Poly1305 authentication tag that provides integrity\n         * over the ciphertext (encrypt-then-MAC)\n         *\/\n        fseek($ofp, $start, SEEK_SET);\n        fwrite($ofp, $state->finish(), ParagonIE_Sodium_Compat::CRYPTO_SECRETBOX_MACBYTES);\n        fseek($ofp, $end, SEEK_SET);\n        unset($state);\n\n        return true;\n    }\n\n    \/**\n     * Decrypt a file (32-bit)\n     *\n     * @param resource $ifp\n     * @param resource $ofp\n     * @param int $mlen\n     * @param string $nonce\n     * @param string $key\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function secretbox_decrypt_core32($ifp, $ofp, $mlen, $nonce, $key)\n    {\n        $tag = fread($ifp, 16);\n        if (!is_string($tag)) {\n            throw new SodiumException('Could not read input file');\n        }\n\n        \/** @var string $subkey *\/\n        $subkey = ParagonIE_Sodium_Core32_HSalsa20::hsalsa20($nonce, $key);\n\n        \/** @var string $realNonce *\/\n        $realNonce = ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8);\n\n        \/** @var string $block0 *\/\n        $block0 = ParagonIE_Sodium_Core32_Salsa20::salsa20(\n            64,\n            ParagonIE_Sodium_Core32_Util::substr($nonce, 16, 8),\n            $subkey\n        );\n\n        \/* Verify the Poly1305 MAC -before- attempting to decrypt! *\/\n        $state = new ParagonIE_Sodium_Core32_Poly1305_State(self::substr($block0, 0, 32));\n        if (!self::onetimeauth_verify_core32($state, $ifp, $tag, $mlen)) {\n            throw new SodiumException('Invalid MAC');\n        }\n\n        \/*\n         * Set the cursor to the end of the first half-block. All future bytes will\n         * generated from salsa20_xor_ic, starting from 1 (second block).\n         *\/\n        $first32 = fread($ifp, 32);\n        if (!is_string($first32)) {\n            throw new SodiumException('Could not read input file');\n        }\n        $first32len = self::strlen($first32);\n        fwrite(\n            $ofp,\n            self::xorStrings(\n                self::substr($block0, 32, $first32len),\n                self::substr($first32, 0, $first32len)\n            )\n        );\n        $mlen -= 32;\n\n        \/** @var int $iter *\/\n        $iter = 1;\n\n        \/** @var int $incr *\/\n        $incr = self::BUFFER_SIZE >> 6;\n\n        \/* Decrypts ciphertext, writes to output file. *\/\n        while ($mlen > 0) {\n            $blockSize = $mlen > self::BUFFER_SIZE\n                ? self::BUFFER_SIZE\n                : $mlen;\n            $ciphertext = fread($ifp, $blockSize);\n            if (!is_string($ciphertext)) {\n                throw new SodiumException('Could not read input file');\n            }\n            $pBlock = ParagonIE_Sodium_Core32_Salsa20::salsa20_xor_ic(\n                $ciphertext,\n                $realNonce,\n                $iter,\n                $subkey\n            );\n            fwrite($ofp, $pBlock, $blockSize);\n            $mlen -= $blockSize;\n            $iter += $incr;\n        }\n        return true;\n    }\n\n    \/**\n     * One-time message authentication for 32-bit systems\n     *\n     * @param ParagonIE_Sodium_Core32_Poly1305_State $state\n     * @param resource $ifp\n     * @param string $tag\n     * @param int $mlen\n     * @return bool\n     * @throws SodiumException\n     * @throws TypeError\n     *\/\n    protected static function onetimeauth_verify_core32(\n        ParagonIE_Sodium_Core32_Poly1305_State $state,\n        $ifp,\n        $tag = '',\n        $mlen = 0\n    ) {\n        \/** @var int $pos *\/\n        $pos = self::ftell($ifp);\n\n        while ($mlen > 0) {\n            $blockSize = $mlen > self::BUFFER_SIZE\n                ? self::BUFFER_SIZE\n                : $mlen;\n            $ciphertext = fread($ifp, $blockSize);\n            if (!is_string($ciphertext)) {\n                throw new SodiumException('Could not read input file');\n            }\n            $state->update($ciphertext);\n            $mlen -= $blockSize;\n        }\n        $res = ParagonIE_Sodium_Core32_Util::verify_16($tag, $state->finish());\n\n        fseek($ifp, $pos, SEEK_SET);\n        return $res;\n    }\n\n    \/**\n     * @param resource $resource\n     * @return int\n     * @throws SodiumException\n     *\/\n    private static function ftell($resource)\n    {\n        $return = ftell($resource);\n        if (!is_int($return)) {\n            throw new SodiumException('ftell() returned false');\n        }\n        return (int) $return;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/cast_to_int.php","ext":"php","size":2778,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!is_callable('RandomCompat_intval')) {\n\n    \/**\n     * Cast to an integer if we can, safely.\n     *\n     * If you pass it a float in the range (~PHP_INT_MAX, PHP_INT_MAX)\n     * (non-inclusive), it will sanely cast it to an int. If you it's equal to\n     * ~PHP_INT_MAX or PHP_INT_MAX, we let it fail as not an integer. Floats \n     * lose precision, so the <= and => operators might accidentally let a float\n     * through.\n     *\n     * @param int|float $number    The number we want to convert to an int\n     * @param bool      $fail_open Set to true to not throw an exception\n     *\n     * @return float|int\n     * @psalm-suppress InvalidReturnType\n     *\n     * @throws TypeError\n     *\/\n    function RandomCompat_intval($number, $fail_open = false)\n    {\n        if (is_int($number) || is_float($number)) {\n            $number += 0;\n        } elseif (is_numeric($number)) {\n            \/** @psalm-suppress InvalidOperand *\/\n            $number += 0;\n        }\n        \/** @var int|float $number *\/\n\n        if (\n            is_float($number)\n                &&\n            $number > ~PHP_INT_MAX\n                &&\n            $number < PHP_INT_MAX\n        ) {\n            $number = (int) $number;\n        }\n\n        if (is_int($number)) {\n            return (int) $number;\n        } elseif (!$fail_open) {\n            throw new TypeError(\n                'Expected an integer.'\n            );\n        }\n        return $number;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/random_bytes_com_dotnet.php","ext":"php","size":3072,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!is_callable('random_bytes')) {\n    \/**\n     * Windows with PHP < 5.3.0 will not have the function\n     * openssl_random_pseudo_bytes() available, so let's use\n     * CAPICOM to work around this deficiency.\n     *\n     * @param int $bytes\n     *\n     * @throws Exception\n     *\n     * @return string\n     *\/\n    function random_bytes($bytes)\n    {\n        try {\n            \/** @var int $bytes *\/\n            $bytes = RandomCompat_intval($bytes);\n        } catch (TypeError $ex) {\n            throw new TypeError(\n                'random_bytes(): $bytes must be an integer'\n            );\n        }\n\n        if ($bytes < 1) {\n            throw new Error(\n                'Length must be greater than 0'\n            );\n        }\n\n        \/** @var string $buf *\/\n        $buf = '';\n        if (!class_exists('COM')) {\n            throw new Error(\n                'COM does not exist'\n            );\n        }\n        \/** @var COM $util *\/\n        $util = new COM('CAPICOM.Utilities.1');\n        $execCount = 0;\n\n        \/**\n         * Let's not let it loop forever. If we run N times and fail to\n         * get N bytes of random data, then CAPICOM has failed us.\n         *\/\n        do {\n            $buf .= base64_decode((string) $util->GetRandom($bytes, 0));\n            if (RandomCompat_strlen($buf) >= $bytes) {\n                \/**\n                 * Return our random entropy buffer here:\n                 *\/\n                return (string) RandomCompat_substr($buf, 0, $bytes);\n            }\n            ++$execCount;\n        } while ($execCount < $bytes);\n\n        \/**\n         * If we reach here, PHP has failed us.\n         *\/\n        throw new Exception(\n            'Could not gather sufficient random data'\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/random_int.php","ext":"php","size":6776,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\nif (!is_callable('random_int')) {\n    \/**\n     * Random_* Compatibility Library\n     * for using the new PHP 7 random_* API in PHP 5 projects\n     *\n     * The MIT License (MIT)\n     *\n     * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in\n     * all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE.\n     *\/\n\n    \/**\n     * Fetch a random integer between $min and $max inclusive\n     *\n     * @param int $min\n     * @param int $max\n     *\n     * @throws Exception\n     *\n     * @return int\n     *\/\n    function random_int($min, $max)\n    {\n        \/**\n         * Type and input logic checks\n         *\n         * If you pass it a float in the range (~PHP_INT_MAX, PHP_INT_MAX)\n         * (non-inclusive), it will sanely cast it to an int. If you it's equal to\n         * ~PHP_INT_MAX or PHP_INT_MAX, we let it fail as not an integer. Floats\n         * lose precision, so the <= and => operators might accidentally let a float\n         * through.\n         *\/\n\n        try {\n            \/** @var int $min *\/\n            $min = RandomCompat_intval($min);\n        } catch (TypeError $ex) {\n            throw new TypeError(\n                'random_int(): $min must be an integer'\n            );\n        }\n\n        try {\n            \/** @var int $max *\/\n            $max = RandomCompat_intval($max);\n        } catch (TypeError $ex) {\n            throw new TypeError(\n                'random_int(): $max must be an integer'\n            );\n        }\n\n        \/**\n         * Now that we've verified our weak typing system has given us an integer,\n         * let's validate the logic then we can move forward with generating random\n         * integers along a given range.\n         *\/\n        if ($min > $max) {\n            throw new Error(\n                'Minimum value must be less than or equal to the maximum value'\n            );\n        }\n\n        if ($max === $min) {\n            return (int) $min;\n        }\n\n        \/**\n         * Initialize variables to 0\n         *\n         * We want to store:\n         * $bytes => the number of random bytes we need\n         * $mask => an integer bitmask (for use with the &) operator\n         *          so we can minimize the number of discards\n         *\/\n        $attempts = $bits = $bytes = $mask = $valueShift = 0;\n        \/** @var int $attempts *\/\n        \/** @var int $bits *\/\n        \/** @var int $bytes *\/\n        \/** @var int $mask *\/\n        \/** @var int $valueShift *\/\n\n        \/**\n         * At this point, $range is a positive number greater than 0. It might\n         * overflow, however, if $max - $min > PHP_INT_MAX. PHP will cast it to\n         * a float and we will lose some precision.\n         *\n         * @var int|float $range\n         *\/\n        $range = $max - $min;\n\n        \/**\n         * Test for integer overflow:\n         *\/\n        if (!is_int($range)) {\n\n            \/**\n             * Still safely calculate wider ranges.\n             * Provided by @CodesInChaos, @oittaa\n             *\n             * @ref https:\/\/gist.github.com\/CodesInChaos\/03f9ea0b58e8b2b8d435\n             *\n             * We use ~0 as a mask in this case because it generates all 1s\n             *\n             * @ref https:\/\/eval.in\/400356 (32-bit)\n             * @ref http:\/\/3v4l.org\/XX9r5  (64-bit)\n             *\/\n            $bytes = PHP_INT_SIZE;\n            \/** @var int $mask *\/\n            $mask = ~0;\n\n        } else {\n\n            \/**\n             * $bits is effectively ceil(log($range, 2)) without dealing with\n             * type juggling\n             *\/\n            while ($range > 0) {\n                if ($bits % 8 === 0) {\n                    ++$bytes;\n                }\n                ++$bits;\n                $range >>= 1;\n                \/** @var int $mask *\/\n                $mask = $mask << 1 | 1;\n            }\n            $valueShift = $min;\n        }\n\n        \/** @var int $val *\/\n        $val = 0;\n        \/**\n         * Now that we have our parameters set up, let's begin generating\n         * random integers until one falls between $min and $max\n         *\/\n        \/** @psalm-suppress RedundantCondition *\/\n        do {\n            \/**\n             * The rejection probability is at most 0.5, so this corresponds\n             * to a failure probability of 2^-128 for a working RNG\n             *\/\n            if ($attempts > 128) {\n                throw new Exception(\n                    'random_int: RNG is broken - too many rejections'\n                );\n            }\n\n            \/**\n             * Let's grab the necessary number of random bytes\n             *\/\n            $randomByteString = random_bytes($bytes);\n\n            \/**\n             * Let's turn $randomByteString into an integer\n             *\n             * This uses bitwise operators (<< and |) to build an integer\n             * out of the values extracted from ord()\n             *\n             * Example: [9F] | [6D] | [32] | [0C] =>\n             *   159 + 27904 + 3276800 + 201326592 =>\n             *   204631455\n             *\/\n            $val &= 0;\n            for ($i = 0; $i < $bytes; ++$i) {\n                $val |= ord($randomByteString[$i]) << ($i * 8);\n            }\n            \/** @var int $val *\/\n\n            \/**\n             * Apply mask\n             *\/\n            $val &= $mask;\n            $val += $valueShift;\n\n            ++$attempts;\n            \/**\n             * If $val overflows to a floating point number,\n             * ... or is larger than $max,\n             * ... or smaller than $min,\n             * then try again.\n             *\/\n        } while (!is_int($val) || $val > $max || $val < $min);\n\n        return (int) $val;\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/random_bytes_dev_urandom.php","ext":"php","size":6513,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!defined('RANDOM_COMPAT_READ_BUFFER')) {\n    define('RANDOM_COMPAT_READ_BUFFER', 8);\n}\n\nif (!is_callable('random_bytes')) {\n    \/**\n     * Unless open_basedir is enabled, use \/dev\/urandom for\n     * random numbers in accordance with best practices\n     *\n     * Why we use \/dev\/urandom and not \/dev\/random\n     * @ref https:\/\/www.2uo.de\/myths-about-urandom\n     * @ref http:\/\/sockpuppet.org\/blog\/2014\/02\/25\/safely-generate-random-numbers\n     *\n     * @param int $bytes\n     *\n     * @throws Exception\n     *\n     * @return string\n     *\/\n    function random_bytes($bytes)\n    {\n        \/** @var resource $fp *\/\n        static $fp = null;\n\n        \/**\n         * This block should only be run once\n         *\/\n        if (empty($fp)) {\n            \/**\n             * We don't want to ever read C:\\dev\\random, only \/dev\/urandom on\n             * Unix-like operating systems. While we guard against this\n             * condition in random.php, it doesn't hurt to be defensive in depth\n             * here.\n             *\n             * To that end, we only try to open \/dev\/urandom if we're on a Unix-\n             * like operating system (which means the directory separator is set\n             * to \"\/\" not \"\\\".\n             *\/\n            if (DIRECTORY_SEPARATOR === '\/') {\n                if (!is_readable('\/dev\/urandom')) {\n                    throw new Exception(\n                        'Environment misconfiguration: ' .\n                        '\/dev\/urandom cannot be read.'\n                    );\n                }\n                \/**\n                 * We use \/dev\/urandom if it is a char device.\n                 * We never fall back to \/dev\/random\n                 *\/\n                \/** @var resource|bool $fp *\/\n                $fp = fopen('\/dev\/urandom', 'rb');\n                if (is_resource($fp)) {\n                    \/** @var array<string, int> $st *\/\n                    $st = fstat($fp);\n                    if (($st['mode'] & 0170000) !== 020000) {\n                        fclose($fp);\n                        $fp = false;\n                    }\n                }\n            }\n\n            if (is_resource($fp)) {\n                \/**\n                 * stream_set_read_buffer() does not exist in HHVM\n                 *\n                 * If we don't set the stream's read buffer to 0, PHP will\n                 * internally buffer 8192 bytes, which can waste entropy\n                 *\n                 * stream_set_read_buffer returns 0 on success\n                 *\/\n                if (is_callable('stream_set_read_buffer')) {\n                    stream_set_read_buffer($fp, RANDOM_COMPAT_READ_BUFFER);\n                }\n                if (is_callable('stream_set_chunk_size')) {\n                    stream_set_chunk_size($fp, RANDOM_COMPAT_READ_BUFFER);\n                }\n            }\n        }\n\n        try {\n            \/** @var int $bytes *\/\n            $bytes = RandomCompat_intval($bytes);\n        } catch (TypeError $ex) {\n            throw new TypeError(\n                'random_bytes(): $bytes must be an integer'\n            );\n        }\n\n        if ($bytes < 1) {\n            throw new Error(\n                'Length must be greater than 0'\n            );\n        }\n\n        \/**\n         * This if() block only runs if we managed to open a file handle\n         *\n         * It does not belong in an else {} block, because the above\n         * if (empty($fp)) line is logic that should only be run once per\n         * page load.\n         *\/\n        if (is_resource($fp)) {\n            \/**\n             * @var int\n             *\/\n            $remaining = $bytes;\n\n            \/**\n             * @var string|bool\n             *\/\n            $buf = '';\n\n            \/**\n             * We use fread() in a loop to protect against partial reads\n             *\/\n            do {\n                \/**\n                 * @var string|bool\n                 *\/\n                $read = fread($fp, $remaining);\n                if (!is_string($read)) {\n                    \/**\n                     * We cannot safely read from the file. Exit the\n                     * do-while loop and trigger the exception condition\n                     *\n                     * @var string|bool\n                     *\/\n                    $buf = false;\n                    break;\n                }\n                \/**\n                 * Decrease the number of bytes returned from remaining\n                 *\/\n                $remaining -= RandomCompat_strlen($read);\n                \/**\n                 * @var string $buf\n                 *\/\n                $buf .= $read;\n            } while ($remaining > 0);\n\n            \/**\n             * Is our result valid?\n             * @var string|bool $buf\n             *\/\n            if (is_string($buf)) {\n                if (RandomCompat_strlen($buf) === $bytes) {\n                    \/**\n                     * Return our random entropy buffer here:\n                     *\/\n                    return $buf;\n                }\n            }\n        }\n\n        \/**\n         * If we reach here, PHP has failed us.\n         *\/\n        throw new Exception(\n            'Error reading from source device'\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/random.php","ext":"php","size":8036,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * @version 2.0.17\n * @released 2018-07-04\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!defined('PHP_VERSION_ID')) {\n    \/\/ This constant was introduced in PHP 5.2.7\n    $RandomCompatversion = array_map('intval', explode('.', PHP_VERSION));\n    define(\n        'PHP_VERSION_ID',\n        $RandomCompatversion[0] * 10000\n        + $RandomCompatversion[1] * 100\n        + $RandomCompatversion[2]\n    );\n    $RandomCompatversion = null;\n}\n\n\/**\n * PHP 7.0.0 and newer have these functions natively.\n *\/\nif (PHP_VERSION_ID >= 70000) {\n    return;\n}\n\nif (!defined('RANDOM_COMPAT_READ_BUFFER')) {\n    define('RANDOM_COMPAT_READ_BUFFER', 8);\n}\n\n$RandomCompatDIR = dirname(__FILE__);\n\nrequire_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'byte_safe_strings.php';\nrequire_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'cast_to_int.php';\nrequire_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'error_polyfill.php';\n\nif (!is_callable('random_bytes')) {\n    \/**\n     * PHP 5.2.0 - 5.6.x way to implement random_bytes()\n     *\n     * We use conditional statements here to define the function in accordance\n     * to the operating environment. It's a micro-optimization.\n     *\n     * In order of preference:\n     *   1. Use libsodium if available.\n     *   2. fread() \/dev\/urandom if available (never on Windows)\n     *   3. mcrypt_create_iv($bytes, MCRYPT_DEV_URANDOM)\n     *   4. COM('CAPICOM.Utilities.1')->GetRandom()\n     *\n     * See RATIONALE.md for our reasoning behind this particular order\n     *\/\n    if (extension_loaded('libsodium')) {\n        \/\/ See random_bytes_libsodium.php\n        if (PHP_VERSION_ID >= 50300 && is_callable('\\\\Sodium\\\\randombytes_buf')) {\n            require_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'random_bytes_libsodium.php';\n        } elseif (method_exists('Sodium', 'randombytes_buf')) {\n            require_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'random_bytes_libsodium_legacy.php';\n        }\n    }\n\n    \/**\n     * Reading directly from \/dev\/urandom:\n     *\/\n    if (DIRECTORY_SEPARATOR === '\/') {\n        \/\/ DIRECTORY_SEPARATOR === '\/' on Unix-like OSes -- this is a fast\n        \/\/ way to exclude Windows.\n        $RandomCompatUrandom = true;\n        $RandomCompat_basedir = ini_get('open_basedir');\n\n        if (!empty($RandomCompat_basedir)) {\n            $RandomCompat_open_basedir = explode(\n                PATH_SEPARATOR,\n                strtolower($RandomCompat_basedir)\n            );\n            $RandomCompatUrandom = (array() !== array_intersect(\n                array('\/dev', '\/dev\/', '\/dev\/urandom'),\n                $RandomCompat_open_basedir\n            ));\n            $RandomCompat_open_basedir = null;\n        }\n\n        if (\n            !is_callable('random_bytes')\n            &&\n            $RandomCompatUrandom\n            &&\n            @is_readable('\/dev\/urandom')\n        ) {\n            \/\/ Error suppression on is_readable() in case of an open_basedir\n            \/\/ or safe_mode failure. All we care about is whether or not we\n            \/\/ can read it at this point. If the PHP environment is going to\n            \/\/ panic over trying to see if the file can be read in the first\n            \/\/ place, that is not helpful to us here.\n\n            \/\/ See random_bytes_dev_urandom.php\n            require_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'random_bytes_dev_urandom.php';\n        }\n        \/\/ Unset variables after use\n        $RandomCompat_basedir = null;\n    } else {\n        $RandomCompatUrandom = false;\n    }\n\n    \/**\n     * mcrypt_create_iv()\n     *\n     * We only want to use mcypt_create_iv() if:\n     *\n     * - random_bytes() hasn't already been defined\n     * - the mcrypt extensions is loaded\n     * - One of these two conditions is true:\n     *   - We're on Windows (DIRECTORY_SEPARATOR !== '\/')\n     *   - We're not on Windows and \/dev\/urandom is readabale\n     *     (i.e. we're not in a chroot jail)\n     * - Special case:\n     *   - If we're not on Windows, but the PHP version is between\n     *     5.6.10 and 5.6.12, we don't want to use mcrypt. It will\n     *     hang indefinitely. This is bad.\n     *   - If we're on Windows, we want to use PHP >= 5.3.7 or else\n     *     we get insufficient entropy errors.\n     *\/\n    if (\n        !is_callable('random_bytes')\n        &&\n        \/\/ Windows on PHP < 5.3.7 is broken, but non-Windows is not known to be.\n        (DIRECTORY_SEPARATOR === '\/' || PHP_VERSION_ID >= 50307)\n        &&\n        \/\/ Prevent this code from hanging indefinitely on non-Windows;\n        \/\/ see https:\/\/bugs.php.net\/bug.php?id=69833\n        (\n            DIRECTORY_SEPARATOR !== '\/' ||\n            (PHP_VERSION_ID <= 50609 || PHP_VERSION_ID >= 50613)\n        )\n        &&\n        extension_loaded('mcrypt')\n    ) {\n        \/\/ See random_bytes_mcrypt.php\n        require_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'random_bytes_mcrypt.php';\n    }\n    $RandomCompatUrandom = null;\n\n    \/**\n     * This is a Windows-specific fallback, for when the mcrypt extension\n     * isn't loaded.\n     *\/\n    if (\n        !is_callable('random_bytes')\n        &&\n        extension_loaded('com_dotnet')\n        &&\n        class_exists('COM')\n    ) {\n        $RandomCompat_disabled_classes = preg_split(\n            '#\\s*,\\s*#',\n            strtolower(ini_get('disable_classes'))\n        );\n\n        if (!in_array('com', $RandomCompat_disabled_classes)) {\n            try {\n                $RandomCompatCOMtest = new COM('CAPICOM.Utilities.1');\n                \/** @psalm-suppress TypeDoesNotContainType *\/\n                if (is_callable(array($RandomCompatCOMtest, 'GetRandom'))) {\n                    \/\/ See random_bytes_com_dotnet.php\n                    require_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'random_bytes_com_dotnet.php';\n                }\n            } catch (com_exception $e) {\n                \/\/ Don't try to use it.\n            }\n        }\n        $RandomCompat_disabled_classes = null;\n        $RandomCompatCOMtest = null;\n    }\n\n    \/**\n     * throw new Exception\n     *\/\n    if (!is_callable('random_bytes')) {\n        \/**\n         * We don't have any more options, so let's throw an exception right now\n         * and hope the developer won't let it fail silently.\n         *\n         * @param mixed $length\n         * @psalm-suppress InvalidReturnType\n         * @throws Exception\n         * @return string\n         *\/\n        function random_bytes($length)\n        {\n            unset($length); \/\/ Suppress \"variable not used\" warnings.\n            throw new Exception(\n                'There is no suitable CSPRNG installed on your system'\n            );\n            return '';\n        }\n    }\n}\n\nif (!is_callable('random_int')) {\n    require_once $RandomCompatDIR.DIRECTORY_SEPARATOR.'random_int.php';\n}\n\n$RandomCompatDIR = null;\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/random_bytes_libsodium.php","ext":"php","size":3004,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!is_callable('random_bytes')) {\n    \/**\n     * If the libsodium PHP extension is loaded, we'll use it above any other\n     * solution.\n     *\n     * libsodium-php project:\n     * @ref https:\/\/github.com\/jedisct1\/libsodium-php\n     *\n     * @param int $bytes\n     *\n     * @throws Exception\n     *\n     * @return string\n     *\/\n    function random_bytes($bytes)\n    {\n        try {\n            \/** @var int $bytes *\/\n            $bytes = RandomCompat_intval($bytes);\n        } catch (TypeError $ex) {\n            throw new TypeError(\n                'random_bytes(): $bytes must be an integer'\n            );\n        }\n\n        if ($bytes < 1) {\n            throw new Error(\n                'Length must be greater than 0'\n            );\n        }\n\n        \/**\n         * \\Sodium\\randombytes_buf() doesn't allow more than 2147483647 bytes to be\n         * generated in one invocation.\n         *\/\n        \/** @var string|bool $buf *\/\n        if ($bytes > 2147483647) {\n            $buf = '';\n            for ($i = 0; $i < $bytes; $i += 1073741824) {\n                $n = ($bytes - $i) > 1073741824\n                    ? 1073741824\n                    : $bytes - $i;\n                $buf .= \\Sodium\\randombytes_buf($n);\n            }\n        } else {\n            \/** @var string|bool $buf *\/\n            $buf = \\Sodium\\randombytes_buf($bytes);\n        }\n\n        if (is_string($buf)) {\n            if (RandomCompat_strlen($buf) === $bytes) {\n                return $buf;\n            }\n        }\n\n        \/**\n         * If we reach here, PHP has failed us.\n         *\/\n        throw new Exception(\n            'Could not gather sufficient random data'\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/error_polyfill.php","ext":"php","size":1721,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!class_exists('Error', false)) {\n    \/\/ We can't really avoid making this extend Exception in PHP 5.\n    class Error extends Exception\n    {\n\n    }\n}\n\nif (!class_exists('TypeError', false)) {\n    if (is_subclass_of('Error', 'Exception')) {\n        class TypeError extends Error\n        {\n\n        }\n    } else {\n        class TypeError extends Exception\n        {\n\n        }\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/random_bytes_libsodium_legacy.php","ext":"php","size":2983,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!is_callable('random_bytes')) {\n    \/**\n     * If the libsodium PHP extension is loaded, we'll use it above any other\n     * solution.\n     *\n     * libsodium-php project:\n     * @ref https:\/\/github.com\/jedisct1\/libsodium-php\n     *\n     * @param int $bytes\n     *\n     * @throws Exception\n     *\n     * @return string\n     *\/\n    function random_bytes($bytes)\n    {\n        try {\n            \/** @var int $bytes *\/\n            $bytes = RandomCompat_intval($bytes);\n        } catch (TypeError $ex) {\n            throw new TypeError(\n                'random_bytes(): $bytes must be an integer'\n            );\n        }\n\n        if ($bytes < 1) {\n            throw new Error(\n                'Length must be greater than 0'\n            );\n        }\n\n        \/**\n         * @var string\n         *\/\n        $buf = '';\n\n        \/**\n         * \\Sodium\\randombytes_buf() doesn't allow more than 2147483647 bytes to be\n         * generated in one invocation.\n         *\/\n        if ($bytes > 2147483647) {\n            for ($i = 0; $i < $bytes; $i += 1073741824) {\n                $n = ($bytes - $i) > 1073741824\n                    ? 1073741824\n                    : $bytes - $i;\n                $buf .= Sodium::randombytes_buf((int) $n);\n            }\n        } else {\n            $buf .= Sodium::randombytes_buf((int) $bytes);\n        }\n\n        if (is_string($buf)) {\n            if (RandomCompat_strlen($buf) === $bytes) {\n                return $buf;\n            }\n        }\n\n        \/**\n         * If we reach here, PHP has failed us.\n         *\/\n        throw new Exception(\n            'Could not gather sufficient random data'\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/byte_safe_strings.php","ext":"php","size":6373,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!is_callable('RandomCompat_strlen')) {\n    if (\n        defined('MB_OVERLOAD_STRING')\n            &&\n        ((int) ini_get('mbstring.func_overload')) & MB_OVERLOAD_STRING\n    ) {\n        \/**\n         * strlen() implementation that isn't brittle to mbstring.func_overload\n         *\n         * This version uses mb_strlen() in '8bit' mode to treat strings as raw\n         * binary rather than UTF-8, ISO-8859-1, etc\n         *\n         * @param string $binary_string\n         *\n         * @throws TypeError\n         *\n         * @return int\n         *\/\n        function RandomCompat_strlen($binary_string)\n        {\n            if (!is_string($binary_string)) {\n                throw new TypeError(\n                    'RandomCompat_strlen() expects a string'\n                );\n            }\n\n            return (int) mb_strlen($binary_string, '8bit');\n        }\n\n    } else {\n        \/**\n         * strlen() implementation that isn't brittle to mbstring.func_overload\n         *\n         * This version just used the default strlen()\n         *\n         * @param string $binary_string\n         *\n         * @throws TypeError\n         *\n         * @return int\n         *\/\n        function RandomCompat_strlen($binary_string)\n        {\n            if (!is_string($binary_string)) {\n                throw new TypeError(\n                    'RandomCompat_strlen() expects a string'\n                );\n            }\n            return (int) strlen($binary_string);\n        }\n    }\n}\n\nif (!is_callable('RandomCompat_substr')) {\n\n    if (\n        defined('MB_OVERLOAD_STRING')\n            &&\n        ((int) ini_get('mbstring.func_overload')) & MB_OVERLOAD_STRING\n    ) {\n        \/**\n         * substr() implementation that isn't brittle to mbstring.func_overload\n         *\n         * This version uses mb_substr() in '8bit' mode to treat strings as raw\n         * binary rather than UTF-8, ISO-8859-1, etc\n         *\n         * @param string $binary_string\n         * @param int $start\n         * @param int|null $length (optional)\n         *\n         * @throws TypeError\n         *\n         * @return string\n         *\/\n        function RandomCompat_substr($binary_string, $start, $length = null)\n        {\n            if (!is_string($binary_string)) {\n                throw new TypeError(\n                    'RandomCompat_substr(): First argument should be a string'\n                );\n            }\n\n            if (!is_int($start)) {\n                throw new TypeError(\n                    'RandomCompat_substr(): Second argument should be an integer'\n                );\n            }\n\n            if ($length === null) {\n                \/**\n                 * mb_substr($str, 0, NULL, '8bit') returns an empty string on\n                 * PHP 5.3, so we have to find the length ourselves.\n                 *\/\n                \/** @var int $length *\/\n                $length = RandomCompat_strlen($binary_string) - $start;\n            } elseif (!is_int($length)) {\n                throw new TypeError(\n                    'RandomCompat_substr(): Third argument should be an integer, or omitted'\n                );\n            }\n\n            \/\/ Consistency with PHP's behavior\n            if ($start === RandomCompat_strlen($binary_string) && $length === 0) {\n                return '';\n            }\n            if ($start > RandomCompat_strlen($binary_string)) {\n                return '';\n            }\n\n            return (string) mb_substr(\n                (string) $binary_string,\n                (int) $start,\n                (int) $length,\n                '8bit'\n            );\n        }\n\n    } else {\n\n        \/**\n         * substr() implementation that isn't brittle to mbstring.func_overload\n         *\n         * This version just uses the default substr()\n         *\n         * @param string $binary_string\n         * @param int $start\n         * @param int|null $length (optional)\n         *\n         * @throws TypeError\n         *\n         * @return string\n         *\/\n        function RandomCompat_substr($binary_string, $start, $length = null)\n        {\n            if (!is_string($binary_string)) {\n                throw new TypeError(\n                    'RandomCompat_substr(): First argument should be a string'\n                );\n            }\n\n            if (!is_int($start)) {\n                throw new TypeError(\n                    'RandomCompat_substr(): Second argument should be an integer'\n                );\n            }\n\n            if ($length !== null) {\n                if (!is_int($length)) {\n                    throw new TypeError(\n                        'RandomCompat_substr(): Third argument should be an integer, or omitted'\n                    );\n                }\n\n                return (string) substr(\n                    (string )$binary_string,\n                    (int) $start,\n                    (int) $length\n                );\n            }\n\n            return (string) substr(\n                (string) $binary_string,\n                (int) $start\n            );\n        }\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/crypto\/vendor\/paragonie\/random_compat\/lib\/random_bytes_mcrypt.php","ext":"php","size":2664,"mtime":1756374919,"type":"text","content":"<?php\n\/\/ phpcs:ignoreFile -- compatibility library for PHP 5-7.1\n\/**\n * Random_* Compatibility Library\n * for using the new PHP 7 random_* API in PHP 5 projects\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2015 - 2018 Paragon Initiative Enterprises\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and\/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\/\n\nif (!is_callable('random_bytes')) {\n    \/**\n     * Powered by ext\/mcrypt (and thankfully NOT libmcrypt)\n     *\n     * @ref https:\/\/bugs.php.net\/bug.php?id=55169\n     * @ref https:\/\/github.com\/php\/php-src\/blob\/c568ffe5171d942161fc8dda066bce844bdef676\/ext\/mcrypt\/mcrypt.c#L1321-L1386\n     *\n     * @param int $bytes\n     *\n     * @throws Exception\n     *\n     * @return string\n     *\/\n    function random_bytes($bytes)\n    {\n        try {\n            \/** @var int $bytes *\/\n            $bytes = RandomCompat_intval($bytes);\n        } catch (TypeError $ex) {\n            throw new TypeError(\n                'random_bytes(): $bytes must be an integer'\n            );\n        }\n\n        if ($bytes < 1) {\n            throw new Error(\n                'Length must be greater than 0'\n            );\n        }\n\n        \/** @var string|bool $buf *\/\n        $buf = @mcrypt_create_iv((int) $bytes, (int) MCRYPT_DEV_URANDOM);\n        if (\n            is_string($buf)\n                &&\n            RandomCompat_strlen($buf) === $bytes\n        ) {\n            \/**\n             * Return our random entropy buffer here:\n             *\/\n            return $buf;\n        }\n\n        \/**\n         * If we reach here, PHP has failed us.\n         *\/\n        throw new Exception(\n            'Could not gather sufficient random data'\n        );\n    }\n}\n"},{"base":"plugins","rel":"wordfence\/license.txt","ext":"txt","size":35149,"mtime":1757312769,"type":"text","content":"                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https:\/\/fsf.org\/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and\/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and\/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND\/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND\/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and\/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <https:\/\/www.gnu.org\/licenses\/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https:\/\/www.gnu.org\/licenses\/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https:\/\/www.gnu.org\/licenses\/why-not-lgpl.html>.\n"},{"base":"plugins","rel":"wordfence\/js\/admin.ajaxWatcher.1756145765.js","ext":"js","size":15569,"mtime":1757312769,"type":"text","content":"!function(t,e,i){function n(i,n,o){var r=e.createElement(i);return n&&(r.id=Z+n),o&&(r.style.cssText=o),t(r)}function o(){return i.innerHeight?i.innerHeight:t(i).height()}function r(e,i){i!==Object(i)&&(i={}),this.cache={},this.el=e,this.value=function(e){var n;return void 0===this.cache[e]&&(n=t(this.el).attr(\"data-wfbox-\"+e),void 0!==n?this.cache[e]=n:void 0!==i[e]?this.cache[e]=i[e]:void 0!==X[e]&&(this.cache[e]=X[e])),this.cache[e]},this.get=function(e){var i=this.value(e);return t.isFunction(i)?i.call(this.el,this):i}}function h(t){var e=W.length,i=(A+t)%e;return 0>i?e+i:i}function a(t,e){return Math.round((\/%\/.test(t)?(\"x\"===e?E.width():o())\/100:1)*parseInt(t,10))}function s(t,e){return t.get(\"photo\")||t.get(\"photoRegex\").test(e)}function l(t,e){return t.get(\"retinaUrl\")&&i.devicePixelRatio>1?e.replace(t.get(\"photoRegex\"),t.get(\"retinaSuffix\")):e}function d(t){\"contains\"in x[0]&&!x[0].contains(t.target)&&t.target!==v[0]&&(t.stopPropagation(),x.focus())}function c(t){c.str!==t&&(x.add(v).removeClass(c.str).addClass(t),c.str=t)}function g(e){A=0,e&&e!==!1&&\"nofollow\"!==e?(W=t(\".\"+tt).filter(function(){var i=t.data(this,Y),n=new r(this,i);return n.get(\"rel\")===e}),A=W.index(_.el),-1===A&&(W=W.add(_.el),A=W.length-1)):W=t(_.el)}function u(i){t(e).trigger(i),at.triggerHandler(i)}function f(i){var o;if(!G){if(o=t(i).data(Y),_=new r(i,o),g(_.get(\"rel\")),!U){U=$=!0,c(_.get(\"className\")),x.css({visibility:\"hidden\",display:\"block\",opacity:\"\"}),I=n(st,\"LoadedContent\",\"width:0; height:0; overflow:hidden; visibility:hidden\"),b.css({width:\"\",height:\"\"}).append(I),j=T.height()+k.height()+b.outerHeight(!0)-b.height(),D=C.width()+H.width()+b.outerWidth(!0)-b.width(),N=I.outerHeight(!0),z=I.outerWidth(!0);var h=a(_.get(\"initialWidth\"),\"x\"),s=a(_.get(\"initialHeight\"),\"y\"),l=_.get(\"maxWidth\"),f=_.get(\"maxHeight\");_.w=Math.max((l!==!1?Math.min(h,a(l,\"x\")):h)-z-D,0),_.h=Math.max((f!==!1?Math.min(s,a(f,\"y\")):s)-N-j,0),I.css({width:\"\",height:_.h}),J.position(),u(et),_.get(\"onOpen\"),O.add(F).hide(),x.focus(),_.get(\"trapFocus\")&&e.addEventListener&&(e.addEventListener(\"focus\",d,!0),at.one(rt,function(){e.removeEventListener(\"focus\",d,!0)})),_.get(\"returnFocus\")&&at.one(rt,function(){t(_.el).focus()})}var p=parseFloat(_.get(\"opacity\"));v.css({opacity:p===p?p:\"\",cursor:_.get(\"overlayClose\")?\"pointer\":\"\",visibility:\"visible\"}).show(),_.get(\"closeButton\")?P.html(_.get(\"close\")).appendTo(b):P.appendTo(\"<div\/>\"),w()}}function p(){x||(V=!1,E=t(i),x=n(st).attr({id:Y,\"class\":t.support.opacity===!1?Z+\"IE\":\"\",role:\"dialog\",tabindex:\"-1\"}).hide(),v=n(st,\"Overlay\").hide(),L=t([n(st,\"LoadingOverlay\")[0],n(st,\"LoadingGraphic\")[0]]),y=n(st,\"Wrapper\"),b=n(st,\"Content\").append(F=n(st,\"Title\"),R=n(st,\"Current\"),K=t('<button type=\"button\"\/>').attr({id:Z+\"Previous\"}),B=t('<button type=\"button\"\/>').attr({id:Z+\"Next\"}),S=t('<button type=\"button\"\/>').attr({id:Z+\"Slideshow\"}),L),P=t('<button type=\"button\"\/>').attr({id:Z+\"Close\"}),y.append(n(st).append(n(st,\"TopLeft\"),T=n(st,\"TopCenter\"),n(st,\"TopRight\")),n(st,!1,\"clear:left\").append(C=n(st,\"MiddleLeft\"),b,H=n(st,\"MiddleRight\")),n(st,!1,\"clear:left\").append(n(st,\"BottomLeft\"),k=n(st,\"BottomCenter\"),n(st,\"BottomRight\"))).find(\"div div\").css({\"float\":\"left\"}),M=n(st,!1,\"position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;\"),O=B.add(K).add(R).add(S)),e.body&&!x.parent().length&&t(e.body).append(v,x.append(y,M))}function m(){function i(t){t.which>1||t.shiftKey||t.altKey||t.metaKey||t.ctrlKey||(t.preventDefault(),f(this))}return x?(V||(V=!0,B.click(function(){J.next()}),K.click(function(){J.prev()}),P.click(function(){J.close()}),v.click(function(){_.get(\"overlayClose\")&&J.close()}),t(e).bind(\"keydown.\"+Z,function(t){var e=t.keyCode;U&&_.get(\"escKey\")&&27===e&&(t.preventDefault(),J.close()),U&&_.get(\"arrowKey\")&&W[1]&&!t.altKey&&(37===e?(t.preventDefault(),K.click()):39===e&&(t.preventDefault(),B.click()))}),t.isFunction(t.fn.on)?t(e).on(\"click.\"+Z,\".\"+tt,i):t(\".\"+tt).live(\"click.\"+Z,i)),!0):!1}function w(){var e,o,r,h=J.prep,d=++lt;if($=!0,q=!1,u(ht),u(it),_.get(\"onLoad\"),_.h=_.get(\"height\")?a(_.get(\"height\"),\"y\")-N-j:_.get(\"innerHeight\")&&a(_.get(\"innerHeight\"),\"y\"),_.w=_.get(\"width\")?a(_.get(\"width\"),\"x\")-z-D:_.get(\"innerWidth\")&&a(_.get(\"innerWidth\"),\"x\"),_.mw=_.w,_.mh=_.h,_.get(\"maxWidth\")&&(_.mw=a(_.get(\"maxWidth\"),\"x\")-z-D,_.mw=_.w&&_.w<_.mw?_.w:_.mw),_.get(\"maxHeight\")&&(_.mh=a(_.get(\"maxHeight\"),\"y\")-N-j,_.mh=_.h&&_.h<_.mh?_.h:_.mh),e=_.get(\"href\"),Q=setTimeout(function(){L.show()},100),_.get(\"inline\")){var c=t(e).eq(0);r=t(\"<div>\").hide().insertBefore(c),at.one(ht,function(){r.replaceWith(c)}),h(c)}else _.get(\"iframe\")?h(\" \"):_.get(\"html\")?h(_.get(\"html\")):s(_,e)?(e=l(_,e),q=_.get(\"createImg\"),t(q).addClass(Z+\"Photo\").bind(\"error.\"+Z,function(){h(n(st,\"Error\").html(_.get(\"imgError\")))}).one(\"load\",function(){d===lt&&setTimeout(function(){var e;_.get(\"retinaImage\")&&i.devicePixelRatio>1&&(q.height=q.height\/i.devicePixelRatio,q.width=q.width\/i.devicePixelRatio),_.get(\"scalePhotos\")&&(o=function(){q.height-=q.height*e,q.width-=q.width*e},_.mw&&q.width>_.mw&&(e=(q.width-_.mw)\/q.width,o()),_.mh&&q.height>_.mh&&(e=(q.height-_.mh)\/q.height,o())),_.h&&(q.style.marginTop=Math.max(_.mh-q.height,0)\/2+\"px\"),W[1]&&(_.get(\"loop\")||W[A+1])&&(q.style.cursor=\"pointer\",t(q).bind(\"click.\"+Z,function(){J.next()})),q.style.width=q.width+\"px\",q.style.height=q.height+\"px\",h(q)},1)}),q.src=e):e&&M.load(e,_.get(\"data\"),function(e,i){d===lt&&h(\"error\"===i?n(st,\"Error\").html(_.get(\"xhrError\")):t(this).contents())})}var v,x,y,b,T,C,H,k,W,E,I,M,L,F,R,S,B,K,P,O,_,j,D,N,z,A,q,U,$,G,Q,J,V,X={html:!1,photo:!1,iframe:!1,inline:!1,transition:\"elastic\",speed:300,fadeOut:300,width:!1,initialWidth:\"600\",innerWidth:!1,maxWidth:!1,height:!1,initialHeight:\"450\",innerHeight:!1,maxHeight:!1,scalePhotos:!0,scrolling:!0,opacity:.9,preloading:!0,className:!1,overlayClose:!0,escKey:!0,arrowKey:!0,top:!1,bottom:!1,left:!1,right:!1,fixed:!1,data:void 0,closeButton:!0,fastIframe:!0,open:!1,reposition:!0,loop:!0,slideshow:!1,slideshowAuto:!0,slideshowSpeed:2500,slideshowStart:\"start slideshow\",slideshowStop:\"stop slideshow\",photoRegex:\/\\.(gif|png|jp(e|g|eg)|bmp|ico|webp|jxr|svg)((#|\\?).*)?$\/i,retinaImage:!1,retinaUrl:!1,retinaSuffix:\"@2x.$1\",current:\"image {current} of {total}\",previous:\"previous\",next:\"next\",close:\"close\",xhrError:\"This content failed to load.\",imgError:\"This image failed to load.\",returnFocus:!0,trapFocus:!0,onOpen:!1,onLoad:!1,onComplete:!1,onCleanup:!1,onClosed:!1,rel:function(){return this.rel},href:function(){return t(this).attr(\"href\")},title:function(){return this.title},createImg:function(){var e=new Image,i=t(this).data(\"cbox-img-attrs\");return\"object\"==typeof i&&t.each(i,function(t,i){e[t]=i}),e},createIframe:function(){var i=e.createElement(\"iframe\"),n=t(this).data(\"cbox-iframe-attrs\");return\"object\"==typeof n&&t.each(n,function(t,e){i[t]=e}),\"frameBorder\"in i&&(i.frameBorder=0),\"allowTransparency\"in i&&(i.allowTransparency=\"true\"),i.name=(new Date).getTime(),i.allowFullscreen=!0,i}},Y=\"wordfenceBox\",Z=\"wfbox\",tt=Z+\"Element\",et=Z+\"_open\",it=Z+\"_load\",nt=Z+\"_complete\",ot=Z+\"_cleanup\",rt=Z+\"_closed\",ht=Z+\"_purge\",at=t(\"<a\/>\"),st=\"div\",lt=0,dt={},ct=function(){function t(){clearTimeout(h)}function e(){(_.get(\"loop\")||W[A+1])&&(t(),h=setTimeout(J.next,_.get(\"slideshowSpeed\")))}function i(){S.html(_.get(\"slideshowStop\")).unbind(s).one(s,n),at.bind(nt,e).bind(it,t),x.removeClass(a+\"off\").addClass(a+\"on\")}function n(){t(),at.unbind(nt,e).unbind(it,t),S.html(_.get(\"slideshowStart\")).unbind(s).one(s,function(){J.next(),i()}),x.removeClass(a+\"on\").addClass(a+\"off\")}function o(){r=!1,S.hide(),t(),at.unbind(nt,e).unbind(it,t),x.removeClass(a+\"off \"+a+\"on\")}var r,h,a=Z+\"Slideshow_\",s=\"click.\"+Z;return function(){r?_.get(\"slideshow\")||(at.unbind(ot,o),o()):_.get(\"slideshow\")&&W[1]&&(r=!0,at.one(ot,o),_.get(\"slideshowAuto\")?i():n(),S.show())}}();t[Y]||(t(p),J=t.fn[Y]=t[Y]=function(e,i){var n,o=this;return e=e||{},t.isFunction(o)&&(o=t(\"<a\/>\"),e.open=!0),o[0]?(p(),m()&&(i&&(e.onComplete=i),o.each(function(){var i=t.data(this,Y)||{};t.data(this,Y,t.extend(i,e))}).addClass(tt),n=new r(o[0],e),n.get(\"open\")&&f(o[0])),o):o},J.position=function(e,i){function n(){T[0].style.width=k[0].style.width=b[0].style.width=parseInt(x[0].style.width,10)-D+\"px\",b[0].style.height=C[0].style.height=H[0].style.height=parseInt(x[0].style.height,10)-j+\"px\"}var r,h,s,l=0,d=0,c=x.offset();if(E.unbind(\"resize.\"+Z),x.css({top:-9e4,left:-9e4}),h=E.scrollTop(),s=E.scrollLeft(),_.get(\"fixed\")?(c.top-=h,c.left-=s,x.css({position:\"fixed\"})):(l=h,d=s,x.css({position:\"absolute\"})),d+=_.get(\"right\")!==!1?Math.max(E.width()-_.w-z-D-a(_.get(\"right\"),\"x\"),0):_.get(\"left\")!==!1?a(_.get(\"left\"),\"x\"):Math.round(Math.max(E.width()-_.w-z-D,0)\/2),l+=_.get(\"bottom\")!==!1?Math.max(o()-_.h-N-j-a(_.get(\"bottom\"),\"y\"),0):_.get(\"top\")!==!1?a(_.get(\"top\"),\"y\"):Math.round(Math.max(o()-_.h-N-j,0)\/2),x.css({top:c.top,left:c.left,visibility:\"visible\"}),y[0].style.width=y[0].style.height=\"9999px\",r={width:_.w+z+D,height:_.h+N+j,top:l,left:d},e){var g=0;t.each(r,function(t){return r[t]!==dt[t]?void(g=e):void 0}),e=g}dt=r,e||x.css(r),x.dequeue().animate(r,{duration:e||0,complete:function(){n(),$=!1,y[0].style.width=_.w+z+D+\"px\",y[0].style.height=_.h+N+j+\"px\",_.get(\"reposition\")&&setTimeout(function(){E.bind(\"resize.\"+Z,J.position)},1),t.isFunction(i)&&i()},step:n})},J.resize=function(t){var e;U&&(t=t||{},t.width&&(_.w=a(t.width,\"x\")-z-D),t.innerWidth&&(_.w=a(t.innerWidth,\"x\")),I.css({width:_.w}),t.height&&(_.h=a(t.height,\"y\")-N-j),t.innerHeight&&(_.h=a(t.innerHeight,\"y\")),t.innerHeight||t.height||(e=I.scrollTop(),I.css({height:\"auto\"}),_.h=I.height()),I.css({height:_.h}),e&&I.scrollTop(e),J.position(\"none\"===_.get(\"transition\")?0:_.get(\"speed\")))},J.prep=function(i){function o(){return _.w=_.w||I.width(),_.w=_.mw&&_.mw<_.w?_.mw:_.w,_.w}function a(){return _.h=_.h||I.height(),_.h=_.mh&&_.mh<_.h?_.mh:_.h,_.h}if(U){var d,g=\"none\"===_.get(\"transition\")?0:_.get(\"speed\");I.remove(),I=n(st,\"LoadedContent\").append(i),I.hide().appendTo(M.show()).css({width:o(),overflow:_.get(\"scrolling\")?\"auto\":\"hidden\"}).css({height:a()}).prependTo(b),M.hide(),t(q).css({\"float\":\"none\"}),c(_.get(\"className\")),d=function(){function i(){t.support.opacity===!1&&x[0].style.removeAttribute(\"filter\")}var n,o,a=W.length;U&&(o=function(){clearTimeout(Q),L.hide(),u(nt),_.get(\"onComplete\")},F.html(_.get(\"title\")).show(),I.show(),a>1?(\"string\"==typeof _.get(\"current\")&&R.html(_.get(\"current\").replace(\"{current}\",A+1).replace(\"{total}\",a)).show(),B[_.get(\"loop\")||a-1>A?\"show\":\"hide\"]().html(_.get(\"next\")),K[_.get(\"loop\")||A?\"show\":\"hide\"]().html(_.get(\"previous\")),ct(),_.get(\"preloading\")&&t.each([h(-1),h(1)],function(){var i,n=W[this],o=new r(n,t.data(n,Y)),h=o.get(\"href\");h&&s(o,h)&&(h=l(o,h),i=e.createElement(\"img\"),i.src=h)})):O.hide(),_.get(\"iframe\")?(n=_.get(\"createIframe\"),_.get(\"scrolling\")||(n.scrolling=\"no\"),t(n).attr({src:_.get(\"href\"),\"class\":Z+\"Iframe\"}).one(\"load\",o).appendTo(I),at.one(ht,function(){n.src=\"\/\/about:blank\"}),_.get(\"fastIframe\")&&t(n).trigger(\"load\")):o(),\"fade\"===_.get(\"transition\")?x.fadeTo(g,1,i):i())},\"fade\"===_.get(\"transition\")?x.fadeTo(g,0,function(){J.position(0,d)}):J.position(g,d)}},J.next=function(){!$&&W[1]&&(_.get(\"loop\")||W[A+1])&&(A=h(1),f(W[A]))},J.prev=function(){!$&&W[1]&&(_.get(\"loop\")||A)&&(A=h(-1),f(W[A]))},J.close=function(){U&&!G&&(G=!0,U=!1,u(ot),_.get(\"onCleanup\"),E.unbind(\".\"+Z),v.fadeTo(_.get(\"fadeOut\")||0,0),x.stop().fadeTo(_.get(\"fadeOut\")||0,0,function(){x.hide(),v.hide(),u(ht),I.remove(),setTimeout(function(){G=!1,u(rt),_.get(\"onClosed\")},1)}))},J.remove=function(){x&&(x.stop(),t[Y].close(),x.stop(!1,!0).remove(),v.remove(),G=!1,x=null,t(\".\"+tt).removeData(Y).removeClass(tt),t(e).unbind(\"click.\"+Z).unbind(\"keydown.\"+Z))},J.element=function(){return t(_.el)},J.settings=X)}(jQuery,document,window);\n\n(function($, document, window) {\n\tvar __ = window.wfi18n.__;\n\tvar sprintf = window.wfi18n.sprintf;\n\n\tif (!window['wordfenceAJAXWatcher']) {\n\t\twindow['wordfenceAJAXWatcher'] = {\n\t\t\tblockWarningOpen: false,\n\t\t\t\n\t\t\tinit: function() {\n\t\t\t\t$(document).ajaxError(function (event, jqXHR, ajaxSettings, thrownError) {\n\t\t\t\t\tif (wordfenceAJAXWatcher.blockWarningOpen) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (jqXHR.responseJSON) {\n\t\t\t\t\t\t\/\/Do nothing\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t\/\/Match nonce in response to verify it's our error page, which will be in the form <!-- WFWAF NONCE: abcdef1234 -->\n\t\t\t\t\t\tvar nonceRegex = \/<!-- WFWAF NONCE: ([a-f0-9]+) -->\/;\n\t\t\t\t\t\tvar nonceMatches = nonceRegex.exec(jqXHR.responseText);\n\t\t\t\t\t\tif (nonceMatches && nonceMatches[1] == WFAJAXWatcherVars.nonce) {\n\t\t\t\t\t\t\tvar requestURL = ajaxSettings.url;\n\t\t\t\t\t\t\tif (requestURL.length > 63) {\n\t\t\t\t\t\t\t\trequestURL = requestURL.substring(0, 30) + '...' + requestURL.substring(requestURL.length - 30);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar requestURLEscaped = $('<div\/>').text(requestURL).html();\n\t\t\t\t\t\t\tvar responseDOM = $.parseHTML(jqXHR.responseText);\n\t\t\t\t\t\t\tvar formAction = $(responseDOM).filter('#whitelist-form').add($(responseDOM).find('#whitelist-form')).attr('action');\n\t\t\t\t\t\t\tvar inputs = $(responseDOM).filter('input[name]').add($(responseDOM).find('input[name]'));\n\t\t\t\t\t\t\tvar queryParams = {};\n\t\t\t\t\t\t\tfor (var i = 0; i < inputs.length; i++) {\n\t\t\t\t\t\t\t\tqueryParams[inputs[i].name] = inputs[i].value;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tif (!(typeof formAction === \"string\")) { \/\/Only progress if it's our plugin doing the blocking\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\twordfenceAJAXWatcher.blockWarningOpen = true;\n\t\t\t\t\t\t\t$.wordfenceBox({\n\t\t\t\t\t\t\t\tcloseButton: false,\n\t\t\t\t\t\t\t\twidth: '400px',\n\t\t\t\t\t\t\t\thtml: \"<h3>\" + __('Background Request Blocked') + \"<\/h3><p>\" + sprintf(__(\"Wordfence Firewall blocked a background request to WordPress for the URL %s. If this occurred as a result of an intentional action, you may consider allowlisting the request to allow it in the future.\"), \"<code>\" + requestURLEscaped + \"<\/code>\") + \"<\/p><p class=\\\"wf-right\\\"><a href=\\\"https:\/\/www.wordfence.com\/help\/?query=ajax-blocked\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" class=\\\"wfboxhelp\\\" title=\\\"\" + __(\"Help\") + \"\\\"><\/a><a href=\\\"#\\\" class=\\\"button\\\" id=\\\"background-block-whitelist\\\">\" + __(\"Add action to allowlist\") + \"<\/a> <a href=\\\"#\\\" class=\\\"button\\\" id=\\\"background-block-dismiss\\\">\" + __(\"Dismiss\") + \"<\/a><\/p>\",\n\t\t\t\t\t\t\t\tonComplete: function() {\n\t\t\t\t\t\t\t\t\t$('#background-block-dismiss').click(function(event) {\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t$.wordfenceBox.close();\n\t\t\t\t\t\t\t\t\t});\n\t\n\t\t\t\t\t\t\t\t\t$('#background-block-whitelist').click(function(event) {\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\t\t\t\t\t\t\tif (confirm(__('Are you sure you want to allowlist this action?'))) {\n\t\t\t\t\t\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\t\t\t\t\t\turl: formAction,\n\t\t\t\t\t\t\t\t\t\t\t\tdata: queryParams,\n\t\t\t\t\t\t\t\t\t\t\t\tglobal: false,\n\t\t\t\t\t\t\t\t\t\t\t\tsuccess: function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\talert(__('The request has been allowlisted. Please try it again.'));\n\t\t\t\t\t\t\t\t\t\t\t\t\t$.wordfenceBox.close();\n\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\terror: function() {\n\t\t\t\t\t\t\t\t\t\t\t\t\talert(__('An error occurred when adding the request to the allowlist.'));\n\t\t\t\t\t\t\t\t\t\t\t\t\t$.wordfenceBox.close();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tonClosed: function() {\n\t\t\t\t\t\t\t\t\twordfenceAJAXWatcher.blockWarningOpen = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\t$(function() {\n\t\twordfenceAJAXWatcher.init();\n\t\t$('#wfboxPrevious, #wfboxNext, #wfboxSlideshow').remove();\n\t});\n\n}(jQuery, document, window));\n"},{"base":"plugins","rel":"wordfence\/js\/admin.1756145765.js","ext":"js","size":147817,"mtime":1757312769,"type":"text","content":"(function($) {\n\tvar sprintf,\n\t\t__;\n\n\tif (!window['wordfenceAdmin']) { \/\/To compile for checking: java -jar \/usr\/local\/bin\/closure.jar --js=admin.js --js_output_file=test.js\n\t\twindow['wordfenceAdmin'] = {\n\t\t\tisSmallScreen: false,\n\t\t\tloading16: '<div class=\"wfLoading16\"><\/div>',\n\t\t\tloadingCount: 0,\n\t\t\tdbCheckTables: [],\n\t\t\tdbCheckCount_ok: 0,\n\t\t\tdbCheckCount_skipped: 0,\n\t\t\tdbCheckCount_errors: 0,\n\t\t\tissues: [],\n\t\t\tignoreData: false,\n\t\t\ticonErrorMsgs: [],\n\t\t\tscanIDLoaded: 0,\n\t\t\tcolorboxQueue: [],\n\t\t\tmode: '',\n\t\t\tvisibleIssuesPanel: 'new',\n\t\t\tpreFirstScanMsgsLoaded: false,\n\t\t\tnewestActivityTime: 0, \/\/must be 0 to force loading of all initially\n\t\t\telementGeneratorIter: 1,\n\t\t\treloadConfigPage: false,\n\t\t\tnonce: false,\n\t\t\tliveTrafficUpdatePending: false,\n\t\t\tactivityLogUpdatePending: false,\n\t\t\tlastALogCtime: 0,\n\t\t\tlastIssueUpdateTime: 0,\n\t\t\tactivityQueue: [],\n\t\t\ttotalActAdded: 0,\n\t\t\tmaxActivityLogItems: 1000,\n\t\t\tscanReqAnimation: false,\n\t\t\tdebugOn: false,\n\t\t\tblockedCountriesPending: [],\n\t\t\townCountry: \"\",\n\t\t\tschedStartHour: false,\n\t\t\tcurrentPointer: false,\n\t\t\tcountryMap: false,\n\t\t\tcountryCodesToSave: \"\",\n\t\t\tperformanceScale: 3,\n\t\t\tperformanceMinWidth: 20,\n\t\t\t_windowHasFocus: true,\n\t\t\tserverTimestampOffset: 0,\n\t\t\tserverMicrotime: 0,\n\t\t\twfLiveTraffic: null,\n\t\t\tloadingBlockedIPs: false,\n\t\t\tscanRunning: false,\n\t\t\tbasePageName: '',\n\t\t\tpendingChanges: {},\n\t\t\tscanStalled: false,\n\t\t\tsiteCleaningIssueTypes: ['file', 'checkGSB', 'checkSpamIP', 'commentBadURL', 'knownfile', 'optionBadURL', 'postBadTitle', 'postBadURL', 'spamvertizeCheck', 'suspiciousAdminUsers'],\n\n\t\t\t\/\/Screen sizes\n\t\t\tSCREEN_XS: 'xs',\n\t\t\tSCREEN_SM: 'sm',\n\t\t\tSCREEN_MD: 'md',\n\t\t\tSCREEN_LG: 'lg',\n\n\t\t\tinit: function() {\n\t\t\t\tthis.isSmallScreen = window.matchMedia(\"only screen and (max-width: 500px)\").matches;\n\t\t\t\t\n\t\t\t\tthis.nonce = WordfenceAdminVars.firstNonce;\n\t\t\t\tthis.debugOn = WordfenceAdminVars.debugOn == '1' ? true : false;\n\t\t\t\tthis.scanRunning = WordfenceAdminVars.scanRunning == '1' ? true : false;\n\t\t\t\tthis.basePageName = document.title;\n\t\t\t\tvar startTicker = false;\n\t\t\t\tvar self = this;\n\n\t\t\t\t$(window).on('blur', function() {\n\t\t\t\t\tself._windowHasFocus = false;\n\t\t\t\t}).on('focus', function() {\n\t\t\t\t\tself._windowHasFocus = true;\n\t\t\t\t}).focus();\n\n\t\t\t\t$('.do-show').click(function() {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\t$this.hide();\n\t\t\t\t\t$($this.data('selector')).show();\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t$('.downloadLogFile').each(function() {\n\t\t\t\t\t$(this).attr('href', WordfenceAdminVars.ajaxURL + '?action=wordfence_downloadLogFile&nonce=' + WFAD.nonce + '&logfile=' + encodeURIComponent($(this).data('logfile')));\n\t\t\t\t});\n\n\t\t\t\t$('#doSendEmail').click(function() {\n\t\t\t\t\tvar ticket = $('#_ticketnumber').val();\n\t\t\t\t\tif (ticket === null || typeof ticket === \"undefined\" || ticket.length == 0) {\n\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Error\"), __(\"Please include your support ticket number or forum username.\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tWFAD.ajax('wordfence_sendDiagnostic', {email: $('#_email').val(), ticket: ticket}, function(res) {\n\t\t\t\t\t\tif (res.result) {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Email Diagnostic Report\"), __(\"Diagnostic report has been sent successfully.\"));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Error\"), __(\"There was an error while sending the email.\"));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$('#exportDiagnostics').click(function() {\n\t\t\t\t\tself.showLoading();\n\n\t\t\t\t\tvar diagnosticsExportWindow = window.open(WordfenceAdminVars.ajaxURL + '?action=wordfence_exportDiagnostics&nonce=' + WFAD.nonce);\n\t\t\t\t\tdiagnosticsExportWindow.onbeforeunload = function() {\n\t\t\t\t\t\tself.removeLoading();\n\t\t\t\t\t};\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\t$('#sendByEmail').click(function() {\n\t\t\t\t\t$('#sendByEmailForm').removeClass('hidden');\n\t\t\t\t\t$(this).hide();\n\t\t\t\t});\n\n\t\t\t\t$('#expandAllDiagnostics').click(function() {\n\t\t\t\t\t$('#wf-diagnostics').find('.wf-block').each(function() {\n\t\t\t\t\t\tvar el = $(this);\n\t\t\t\t\t\tif (!el.hasClass('wf-active')) {\n\t\t\t\t\t\t\tel.find('.wf-block-header').trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t});\n\n\t\t\t\t$(window).bind(\"scroll\", function() {\n\t\t\t\t\t$(this).scrollTop() > 200 ? $(\".wf-scrollTop\").fadeIn() : $(\".wf-scrollTop\").fadeOut()\n\t\t\t\t});\n\t\t\t\t$(\".wf-scrollTop\").click(function(e) {\n\t\t\t\t\treturn e.stopPropagation(), $(\"body,html\").animate({\n\t\t\t\t\t\tscrollTop: 0\n\t\t\t\t\t}, 800), !1;\n\t\t\t\t});\n\n\t\t\t\tvar tabs = jQuery('.wf-page-tabs').find('.wf-tab a');\n\t\t\t\tif (tabs.length > 0) {\n\t\t\t\t\ttabs.click(function() {\n\t\t\t\t\t\tjQuery('.wf-page-tabs').find('.wf-tab').removeClass('wf-active').find('a').attr('aria-selected', 'false');\n\t\t\t\t\t\tjQuery('.wf-tab-content').removeClass('wf-active');\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar tab = jQuery(this).closest('.wf-tab');\n\t\t\t\t\t\ttab.addClass('wf-active');\n\t\t\t\t\t\ttab.find('a').attr('aria-selected', 'true');\n\t\t\t\t\t\tvar content = jQuery('#' + tab.data('target'));\n\t\t\t\t\t\tcontent.addClass('wf-active');\n\t\t\t\t\t\tdocument.title = tab.data('pageTitle') + \" \\u2039 \" + self.basePageName;\n\t\t\t\t\t\tself.sectionInit();\n\t\t\t\t\t\t$(window).trigger('wfTabChange', [tab.data('target')]);\n\t\t\t\t\t});\n\t\t\t\t\tif (window.location.hash) {\n\t\t\t\t\t\tvar hashes = WFAD.parseHashes();\n\t\t\t\t\t\tvar hash = hashes[hashes.length - 1];\n\t\t\t\t\t\tfor (var i = 0; i < tabs.length; i++) {\n\t\t\t\t\t\t\tif (hash == jQuery(tabs[i]).closest('.wf-tab').data('target')) {\n\t\t\t\t\t\t\t\tjQuery(tabs[i]).trigger('click');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tjQuery(tabs[0]).trigger('click');\n\t\t\t\t\t}\n\t\t\t\t\tjQuery(window).on('hashchange', function () {\n\t\t\t\t\t\tvar hashes = WFAD.parseHashes();\n\t\t\t\t\t\tvar hash = hashes[hashes.length - 1];\n\t\t\t\t\t\tfor (var i = 0; i < tabs.length; i++) {\n\t\t\t\t\t\t\tif (hash == jQuery(tabs[i]).closest('.wf-tab').data('target')) {\n\t\t\t\t\t\t\t\tjQuery(tabs[i]).trigger('click');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.sectionInit();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.mode) {\n\t\t\t\t\tjQuery(document).bind('cbox_closed', function() {\n\t\t\t\t\t\tself.colorboxIsOpen = false;\n\t\t\t\t\t\tself.colorboxServiceQueue();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif ($('.wf-options-controls-spacer').length) { \/\/The WP code doesn't move update nags and we need to\n\t\t\t\t\t$('.update-nag, #update-nag').insertAfter($('.wf-options-controls-spacer'));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$('.wf-block-header-action-disclosure').each(function() {\n\t\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\t$(this).closest('.wf-block-header').trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(this).closest('.wf-block-header').css('cursor', 'pointer');\n\t\t\t\t\t$(this).closest('.wf-block-header').on('click', function(e) {\n\t\t\t\t\t\t\/\/ Let links in the header work.\n\t\t\t\t\t\tif (e.target && e.target.nodeName === 'A' && e.target.href) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif ($(this).closest('.wf-block').hasClass('wf-disabled')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar isActive = $(this).closest('.wf-block').hasClass('wf-active');\n\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t\/\/$(this).closest('.wf-block').removeClass('wf-active');\n\t\t\t\t\t\t\t$(this).closest('.wf-block').find('.wf-block-content').slideUp({\n\t\t\t\t\t\t\t\talways: function() {\n\t\t\t\t\t\t\t\t\t$(this).closest('.wf-block').removeClass('wf-active');\n\t\t\t\t\t\t\t\t\t$(this).attr('aria-checked', 'false');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\/\/$(this).closest('.wf-block').addClass('wf-active');\n\t\t\t\t\t\t\t$(this).closest('.wf-block').find('.wf-block-content').slideDown({\n\t\t\t\t\t\t\t\talways: function() {\n\t\t\t\t\t\t\t\t\t$(this).closest('.wf-block').addClass('wf-active');\n\t\t\t\t\t\t\t\t\t$(this).attr('aria-checked', 'true');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tWFAD.ajax('wordfence_saveDisclosureState', {name: $(this).closest('.wf-block').data('persistenceKey'), state: !isActive}, function() {}, function() {}, true);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\t\/\/On\/Off Option\n\t\t\t\t$('.wf-option.wf-option-toggled .wf-option-checkbox').each(function() {\n\t\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar optionElement = $(this).closest('.wf-option');\n\t\t\t\t\t\tif (optionElement.hasClass('wf-option-premium') || optionElement.hasClass('wf-disabled')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\t\t\tvar value = false;\n\t\t\t\t\t\tvar isActive = $(this).hasClass('wf-checked');\n\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t$(this).removeClass('wf-checked').attr('aria-checked', 'false');\n\t\t\t\t\t\t\tvalue = optionElement.data('disabledValue');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t$(this).addClass('wf-checked').attr('aria-checked', 'true');\n\t\t\t\t\t\t\tvalue = optionElement.data('enabledValue');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(this).parent().find('.wf-option-title').on('click', function(e) {\n\t\t\t\t\t\tvar links = $(this).find('a');\n\t\t\t\t\t\tvar buffer = 10;\n\t\t\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\t\t\tvar r = l + $(links[i]).width();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\t\t\treturn; \n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(this).parent().find('.wf-option-checkbox').trigger('click');\n\t\t\t\t\t}).css('cursor', 'pointer');\n\t\t\t\t});\n\n\t\t\t\t\/\/On\/Off Boolean Switch Option\n\t\t\t\t$('.wf-option.wf-option-toggled-boolean-switch .wf-boolean-switch').each(function() {\n\t\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\n\t\t\t\t\t\t$(this).find('.wf-boolean-switch-handle').trigger('click');\n\t\t\t\t\t});\n\n\t\t\t\t\t$(this).find('.wf-boolean-switch-handle').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tvar optionElement = $(this).closest('.wf-option');\n\t\t\t\t\t\tif (optionElement.hasClass('wf-option-premium') || optionElement.hasClass('wf-disabled')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar switchElement = $(this).closest('.wf-boolean-switch');\n\t\t\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\t\t\tvar value = false;\n\t\t\t\t\t\tvar isActive = switchElement.hasClass('wf-active');\n\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\tswitchElement.removeClass('wf-active').attr('aria-checked', 'false');\n\t\t\t\t\t\t\tvalue = optionElement.data('disabledValue');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tswitchElement.addClass('wf-active').attr('aria-checked', 'true');\n\t\t\t\t\t\t\tvalue = optionElement.data('enabledValue');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t});\n\n\t\t\t\t\t$(this).parent().find('.wf-option-title').on('click', function(e) {\n\t\t\t\t\t\tvar links = $(this).find('a');\n\t\t\t\t\t\tvar buffer = 10;\n\t\t\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\t\t\tvar r = l + $(links[i]).width();\n\n\t\t\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(this).parent().find('.wf-boolean-switch-handle').trigger('click');\n\t\t\t\t\t}).css('cursor', 'pointer');\n\t\t\t\t});\n\n\t\t\t\t\/\/On\/Off Segmented Option\n\t\t\t\t$('.wf-option.wf-option-toggled-segmented [type=radio]').each(function() {\n\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\tvar optionElement = $(this).closest('.wf-option');\n\t\t\t\t\t\tif (optionElement.hasClass('wf-option-premium') || optionElement.hasClass('wf-disabled')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\t\t\tvar value = this.value;\n\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t\/\/On\/Off Multiple Option\n\t\t\t\t$('.wf-option.wf-option-toggled-multiple .wf-option-checkbox').each(function() {\n\t\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tvar optionElement = $(this).closest('.wf-option');\n\t\t\t\t\t\tif (optionElement.hasClass('wf-option-premium') || optionElement.hasClass('wf-disabled')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar checkboxElement = $(this).closest('ul');\n\t\t\t\t\t\tvar option = checkboxElement.data('option');\n\t\t\t\t\t\tvar value = false;\n\t\t\t\t\t\tvar isActive = $(this).hasClass('wf-checked');\n\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t$(this).removeClass('wf-checked').attr('aria-checked', 'false');\n\t\t\t\t\t\t\tvalue = checkboxElement.data('disabledValue');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t$(this).addClass('wf-checked').attr('aria-checked', 'true');\n\t\t\t\t\t\t\tvalue = checkboxElement.data('enabledValue');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar originalValue = checkboxElement.data('originalValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t\/\/On\/Off Option with menu and Option with menu\n\t\t\t\t$('.wf-option.wf-option-toggled-select .wf-option-checkbox').each(function() {\n\t\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tvar optionElement = $(this).closest('.wf-option');\n\t\t\t\t\t\tif (optionElement.hasClass('wf-option-premium') || optionElement.hasClass('wf-disabled')) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar selectElement = optionElement.find('.wf-option-select select');\n\t\t\t\t\t\tvar option = optionElement.data('toggleOption');\n\t\t\t\t\t\tvar value = false;\n\t\t\t\t\t\tvar isActive = $(this).hasClass('wf-checked');\n\t\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t\t$(this).removeClass('wf-checked').attr('aria-checked', 'false');\n\t\t\t\t\t\t\tselectElement.attr('disabled', true);\n\t\t\t\t\t\t\tvalue = optionElement.data('disabledToggleValue');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t$(this).addClass('wf-checked').attr('aria-checked', 'true');\n\t\t\t\t\t\t\tselectElement.attr('disabled', false);\n\t\t\t\t\t\t\tvalue = optionElement.data('enabledToggleValue');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (option === undefined) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalToggleValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(this).parent().find('.wf-option-title').on('click', function(e) {\n\t\t\t\t\t\tvar links = $(this).find('a');\n\t\t\t\t\t\tvar buffer = 10;\n\t\t\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\t\t\tvar r = l + $(links[i]).width();\n\n\t\t\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$(this).closest('.wf-option').find('.wf-option-checkbox').trigger('click');\n\t\t\t\t\t}).css('cursor', 'pointer');\n\t\t\t\t});\n\n\t\t\t\t$('.wf-option.wf-option-toggled-select > .wf-option-content > ul > li.wf-option-select select, .wf-option.wf-option-select > .wf-option-content > ul > li.wf-option-select select, .wf-option.wf-option-select > li.wf-option-select select').each(function() {\n\t\t\t\t\tif (!$.fn.wfselect2) { return; }\n\t\t\t\t\t\n\t\t\t\t\tvar width = WFAD.isSmallScreen ? '200px' : 'resolve';\n\t\t\t\t\tif ($(this).data('preferredWidth')) {\n\t\t\t\t\t\twidth = $(this).data('preferredWidth');\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$(this).wfselect2({\n\t\t\t\t\t\tminimumResultsForSearch: -1,\n\t\t\t\t\t\twidth: width\n\t\t\t\t\t}).on('change', function () {\n\t\t\t\t\t\tvar optionElement = $(this).closest('.wf-option');\n\t\t\t\t\t\tvar option = optionElement.data('selectOption');\n\t\t\t\t\t\tvar value = $(this).val();\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (option === undefined) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalSelectValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t});\n\t\t\t\t}).triggerHandler('change');\n\t\t\t\t\n\t\t\t\t\/\/Text field option\n\t\t\t\t$('.wf-option.wf-option-text > .wf-option-content > ul > li.wf-option-text input').on('change paste keyup', function() {\n\t\t\t\t\tvar e = this;\n\t\t\t\t\t\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tvar optionElement = $(e).closest('.wf-option');\n\t\t\t\t\t\tvar option = optionElement.data('textOption');\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (typeof option !== 'undefined') {\n\t\t\t\t\t\t\tvar value = $(e).val();\n\t\n\t\t\t\t\t\t\tvar originalValue = optionElement.data('originalTextValue');\n\t\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 4);\n\t\t\t\t});\n\n\t\t\t\t\/\/Text area option\n\t\t\t\t$('.wf-option.wf-option-textarea > .wf-option-content > ul > li.wf-option-textarea textarea').on('change paste keyup', function() {\n\t\t\t\t\tvar e = this;\n\t\t\t\t\t\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tvar optionElement = $(e).closest('.wf-option');\n\t\t\t\t\t\tvar option = optionElement.data('textOption');\n\t\t\t\t\t\tvar value = $(e).val();\n\t\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalTextValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t}, 4);\n\t\t\t\t});\n\n\t\t\t\t\/\/Value entry token option\n\t\t\t\tif ($.fn.wfselect2) {\n\t\t\t\t\t$('.wf-option.wf-option-token select').wfselect2({\n\t\t\t\t\t\ttags: true,\n\t\t\t\t\t\ttokenSeparators: [','],\n\t\t\t\t\t\twidth: 'element',\n\t\t\t\t\t\tminimumResultsForSearch: -1,\n\t\t\t\t\t\tselectOnClose: true,\n\t\t\t\t\t\tmatcher: function(params, data) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}).on('wfselect2:unselect', function(e){\n\t\t\t\t\t\tjQuery(e.params.data.element).remove();\n\t\t\t\t\t}).on('wfselect2:opening wfselect2:close', function(e){\n\t\t\t\t\t\t$('body').toggleClass('wf-select2-suppress-dropdown', e.type == 'wfselect2:opening');\n\t\t\t\t\t}).on('change', function () {\n\t\t\t\t\t\tvar optionElement = $(this).closest('.wf-option');\n\t\t\t\t\t\tvar option = optionElement.data('tokenOption');\n\t\t\t\t\t\tvar value = $(this).val();\n\t\t\t\t\t\tif (!(value instanceof Array)) {\n\t\t\t\t\t\t\tvalue = [];\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tvar selected = $(this).find('option:selected');\n\t\t\t\t\t\tvar tagsElement = optionElement.find('.wf-option-token-tags');\n\t\t\t\t\t\tvar list = $('<ul>');\n\t\t\t\t\t\tselected.each(function(index, option) {\n\t\t\t\t\t\t\toption = $(option);\n\t\t\t\t\t\t\tvar value = option.val();\n\t\t\t\t\t\t\tvar destroyButton = $('<a>').addClass('wf-destroy-tag-selected')\n\t\t\t\t\t\t\t\t.text('x')\n\t\t\t\t\t\t\t\t.off('click.wfselect2-copy')\n\t\t\t\t\t\t\t\t.on('click.wfselect2-copy', function(e) {\n\t\t\t\t\t\t\t\t\toption.prop('selected', false);\n\t\t\t\t\t\t\t\t\toption.parents('select').trigger('change');\n\t\t\t\t\t\t\t\t\toption.remove();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tvar li = $('<li>').addClass('wf-tag-selected')\n\t\t\t\t\t\t\t\t.text(value)\n\t\t\t\t\t\t\t\t.prepend(destroyButton);\n\t\t\t\t\t\t\tlist.append(li);\n\t\t\t\t\t\t});\n\t\t\t\t\t\ttagsElement.html('').append(list);\n\t\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalTokenValue');\n\t\t\t\t\t\tvar match = true;\n\t\t\t\t\t\tif (value.length != originalValue.length) {\n\t\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvalue = value.sort();\n\t\t\t\t\t\t\toriginalValue = originalValue.sort();\n\t\t\t\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\t\t\t\tif (value[i] !== originalValue[i]) {\n\t\t\t\t\t\t\t\t\tmatch = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t}).triggerHandler('change');\n\t\n\t\t\t\t\t$('.wf-option.wf-option-token select').each(function() { \n\t\t\t\t\t\t$(this).data('wfselect2').$container.addClass('wf-select2-placeholder-fix wf-select2-hide-tags');\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\/\/Switch Option\n\t\t\t\t$('.wf-option.wf-option-switch .wf-switch > li').each(function(index, element) {\n\t\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t$(element).on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tvar optionElement = $(this).closest('ul.wf-option-switch, div.wf-option-switch');\n\t\t\t\t\t\tvar optionName = optionElement.data('optionName');\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\t\tvar value = $(this).data('optionValue');\n\n\t\t\t\t\t\tvar control = $(this).closest('.wf-switch');\n\t\t\t\t\t\tcontrol.find('li').each(function() {\n\t\t\t\t\t\t\t$(this).toggleClass('wf-active', value == $(this).data('optionValue')).attr('aria-checked', value == $(this).data('optionValue') ? 'true' : 'false');\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFAD.pendingChanges[optionName];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.pendingChanges[optionName] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFAD.updatePendingChanges();\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\t$(document).focus();\n\n\t\t\t\t\/\/ (docs|support).wordfence.com GA links\n\t\t\t\t$(document).on('click', 'a', function() {\n\t\t\t\t\tif (this.href && this.href.indexOf('utm_source') > -1) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tvar utm = '';\n\t\t\t\t\tif ((this.host == 'www.wordfence.com' || this.host == 'wordfence.com') && \/^\\\/help(?:$|\\\/)\/.test(this.pathname)) {\n\t\t\t\t\t\tutm = 'utm_source=plugin&utm_medium=pluginUI&utm_campaign=docsIcon';\n\t\t\t\t\t}\n\t\t\t\t\tif (utm) {\n\t\t\t\t\t\tutm = (this.search ? '&' : '?') + utm;\n\t\t\t\t\t\tthis.href = this.protocol + '\/\/' + this.host + this.pathname + this.search + utm + this.hash;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.href == 'http:\/\/support.wordfence.com\/') {\n\t\t\t\t\t\tthis.href = 'https:\/\/support.wordfence.com\/support\/home?utm_source=plugin&utm_medium=pluginUI&utm_campaign=supportLink';\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tsectionInit: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.mode = false;\n\t\t\t\tif (jQuery('#wordfenceMode_dashboard:visible').length > 0) {\n\t\t\t\t\tthis.mode = 'dashboard';\n\t\t\t\t} else if (jQuery('#wordfenceMode_scan:visible').length > 0) {\n\t\t\t\t\tthis.mode = 'scan';\n\t\t\t\t} else if (jQuery('#wordfenceMode_waf:visible').length > 0) {\n\t\t\t\t\tthis.mode = 'waf';\n\t\t\t\t} else if (jQuery('#wordfenceMode_liveTraffic:visible').length > 0) {\n\t\t\t\t\tthis.mode = 'liveTraffic';\n\t\t\t\t\tthis.setupSwitches('wfLiveTrafficOnOff', 'liveTrafficEnabled', function() {\n\t\t\t\t\t});\n\t\t\t\t\tjQuery('#wfLiveTrafficOnOff').change(function() {\n\t\t\t\t\t\tself.updateSwitch('wfLiveTrafficOnOff', 'liveTrafficEnabled', function() {\n\t\t\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.updateLiveTraffic();\n\t\t\t\t\tif (this.liveInt > 0) {\n\t\t\t\t\t\tclearInterval(this.liveInt);\n\t\t\t\t\t\tthis.liveInt = 0;\n\t\t\t\t\t}\n\t\t\t\t\tthis.liveInt = setInterval(function() {\n\t\t\t\t\t\tself.updateLiveTraffic();\n\t\t\t\t\t}, WordfenceAdminVars.actUpdateInterval);\n\t\t\t\t} else if (jQuery('#wordfenceMode_twoFactor:visible').length > 0) {\n\t\t\t\t\tthis.mode = 'twoFactor';\n\t\t\t\t\tthis.loadTwoFactor();\n\t\t\t\t} else if (jQuery('#wordfenceMode_whois:visible').length > 0) {\n\t\t\t\t\tthis.mode = 'whois';\n\t\t\t\t\tthis.calcRangeTotal();\n\t\t\t\t} else if (jQuery('#wordfenceMode_scanScheduling:visible').length > 0) {\n\t\t\t\t\tthis.mode = 'scanScheduling';\n\t\t\t\t\tthis.sched_modeChange();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\/**\n\t\t\t * Returns whether or not the screen size is within the size given. This may be a numerical value\n\t\t\t * or one of the WFAD_SCREEN_ constants.\n\t\t\t *\n\t\t\t * @param size\n\t\t\t * @returns {boolean}\n\t\t\t *\/\n\t\t\tscreenSize: function(size) {\n\t\t\t\tswitch (size) {\n\t\t\t\t\tcase WFAD.SCREEN_XS:\n\t\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 767px)\").matches;\n\t\t\t\t\tcase WFAD.SCREEN_SM:\n\t\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 991px)\").matches;\n\t\t\t\t\tcase WFAD.SCREEN_MD:\n\t\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 1199px)\").matches;\n\t\t\t\t\tcase WFAD.SCREEN_LG:\n\t\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 32767px)\").matches;\n\t\t\t\t}\n\n\t\t\t\tvar parsed = parseInt(size);\n\t\t\t\tif (isNaN(parsed)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn window.matchMedia(\"only screen and (max-width: \" + parsed + \"px)\").matches;\n\t\t\t},\n\t\t\tsendTestEmail: function(email) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_sendTestEmail', {email: email}, function(res) {\n\t\t\t\t\tif (res.result) {\n\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), __(\"Test Email Sent\"), sprintf(__(\"Your test email was sent to the requested email address. The result we received from the WordPress wp_mail() function was: %s<br \/><br \/>A 'True' result means WordPress thinks the mail was sent without errors. A 'False' result means that WordPress encountered an error sending your mail. Note that it's possible to get a 'True' response with an error elsewhere in your mail system that may cause emails to not be delivered.\"), res.result));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tsendTestActivityReport: function(email) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax(\n\t\t\t\t\t'wordfence_email_summary_email_address_debug',\n\t\t\t\t\t{email: email},\n\t\t\t\t\tfunction(res) {\n\t\t\t\t\t\tif (res.result) {\n\t\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), (\"Test Activity Report\"), res.result);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\tupdateSwitch: function(elemID, configItem, cb) {\n\t\t\t\tvar setting = jQuery('#' + elemID).is(':checked');\n\t\t\t\tthis.updateConfig(configItem, jQuery('#' + elemID).is(':checked') ? 1 : 0, cb);\n\t\t\t},\n\t\t\tsetupSwitches: function(elemID, configItem, cb) {\n\t\t\t\tjQuery('.wfOnOffSwitch-checkbox').change(function() {\n\t\t\t\t\tjQuery.data(this, 'lastSwitchChange', (new Date()).getTime());\n\t\t\t\t});\n\t\t\t\tvar self = this;\n\t\t\t\tjQuery('div.wfOnOffSwitch').mouseup(function() {\n\t\t\t\t\tvar elem = jQuery(this);\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tvar checkedElem = elem.find('.wfOnOffSwitch-checkbox');\n\t\t\t\t\t\tif ((new Date()).getTime() - jQuery.data(checkedElem[0], 'lastSwitchChange') > 300) {\n\t\t\t\t\t\t\tcheckedElem.prop('checked', !checkedElem.is(':checked'));\n\t\t\t\t\t\t\tself.updateSwitch(elemID, configItem, cb);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 50);\n\t\t\t\t});\n\t\t\t},\n\t\t\tupdateConfig: function(key, val, cb) {\n\t\t\t\tthis.ajax('wordfence_updateConfig', {key: key, val: val}, function(ret) {\n\t\t\t\t\tif (cb) {\n\t\t\t\t\t\tcb(ret);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tupdateIPPreview: function(val, cb) {\n\t\t\t\tthis.ajax('wordfence_updateIPPreview', val, function(ret) {\n\t\t\t\t\tif (cb) {\n\t\t\t\t\t\tcb(ret);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\twordfenceSatisfactionChoice: function(choice) {\n\t\t\t\tif (choice == 'yes') {\n\t\t\t\t\t$('#wordfenceSatisfactionPrompt-yes').slideDown(400, function() {\n\t\t\t\t\t\t$('#wordfenceSatisfactionPrompt-initial .wf-btn').addClass('wf-disabled').css('opacity', 0.3);\n\t\t\t\t\t\t$('#wordfenceSatisfactionPrompt-initial .wf-btn:first-of-type').css('opacity', 0.8);\n\t\t\t\t\t});\n\t\t\t\t\tWFAD.ajax('wordfence_wordfenceSatisfactionChoice', {choice: choice});\n\t\t\t\t}\n\t\t\t\telse if (choice == 'no') {\n\t\t\t\t\t$('#wordfenceSatisfactionPrompt-no').slideDown(400, function() {\n\t\t\t\t\t\t$('#wordfenceSatisfactionPrompt-initial .wf-btn').addClass('wf-disabled').css('opacity', 0.3);\n\t\t\t\t\t\t$('#wordfenceSatisfactionPrompt-initial .wf-btn:last-of-type').css('opacity', 0.8);\n\t\t\t\t\t});\n\t\t\t\t\tWFAD.ajax('wordfence_wordfenceSatisfactionChoice', {choice: choice});\n\t\t\t\t}\n\t\t\t\telse if (choice == 'feedback') {\n\t\t\t\t\tWFAD.ajax('wordfence_wordfenceSatisfactionChoice', {\n\t\t\t\t\t\t\tchoice: choice,\n\t\t\t\t\t\t\tfeedback: $('#wordfenceSatisfactionPrompt-feedback').val(),\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction(res) { $('#wordfenceSatisfactionPrompt-no').fadeOut(); $('#wordfenceSatisfactionPrompt-complete').fadeIn(); },\n\t\t\t\t\t\tfunction() { $('#wordfenceSatisfactionPrompt-no').fadeOut(); $('#wordfenceSatisfactionPrompt-complete').fadeIn(); }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\telse if (choice == 'dismiss') {\n\t\t\t\t\t$('#wordfenceSatisfactionPrompt').fadeOut();\n\t\t\t\t\tWFAD.ajax('wordfence_wordfenceSatisfactionChoice', {choice: choice});\n\t\t\t\t}\n\t\t\t},\n\t\t\ttourFinish: function(page) {\n\t\t\t\tif (WFAD.currentPointer) {\n\t\t\t\t\tWFAD.currentPointer.pointer('destroy');\n\t\t\t\t\tWFAD.currentPointer = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$('#wf-onboarding-tour-overlay').fadeOut();\n\t\t\t\tWFAD.ajax('wordfence_tourClosed', {page: page}, function(res) {});\n\t\t\t},\n\t\t\ttour: function(contentID, elemID, edge, align, previousCallback, nextCallback) {\n\t\t\t\tif (WFAD.currentPointer) {\n\t\t\t\t\tWFAD.currentPointer.pointer('destroy');\n\t\t\t\t\tWFAD.currentPointer = false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar options = {\n\t\t\t\t\tpointerClass: 'wf-tour-pointer',\n\t\t\t\t\tbuttons: function(event, t) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t},\n\t\t\t\t\tclose: function() {\n\t\t\t\t\t},\n\t\t\t\t\tcontent: $('#' + contentID).tmpl().html(),\n\t\t\t\t\tpointerWidth: 700, \n\t\t\t\t\tposition: {\n\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\talign: align\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tvar element = $('#' + elemID);\n\t\t\t\t$('#wf-onboarding-tour-overlay').fadeIn();\n\t\t\t\tWFAD.currentPointer = element.pointer(options).pointer('open');\n\t\t\t\t\n\t\t\t\tif (previousCallback) {\n\t\t\t\t\t$('#wf-tour-previous a').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tpreviousCallback();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (nextCallback) {\n\t\t\t\t\t$('#wf-tour-continue a').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tnextCallback();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$('#wf-tour-close').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tWFAD.tourComplete();\n\t\t\t\t});\n\n\t\t\t\tvar wpPointer = $('.wf-tour-pointer');\n\t\t\t\tif (wpPointer.length > 0) {\n\t\t\t\t\t$('html, body').animate({\n\t\t\t\t\t\tscrollTop: wpPointer.offset().top - 100\n\t\t\t\t\t}, 1000);\n\t\t\t\t}\n\t\t\t},\n\t\t\tshowLoading: function() {\n\t\t\t\tthis.loadingCount++;\n\t\t\t\tif (this.loadingCount == 1) {\n\t\t\t\t\t$('<div id=\"wordfenceWorking\">' + __('Wordfence is working...') + '<\/div>').appendTo('body');\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveLoading: function() {\n\t\t\t\tthis.loadingCount--;\n\t\t\t\tif (this.loadingCount == 0) {\n\t\t\t\t\tjQuery('#wordfenceWorking').remove();\n\t\t\t\t}\n\t\t\t},\n\t\t\tswitch2FAToNew: function() {\n\t\t\t\t\n\t\t\t},\n\t\t\tswitch2FAToOld: function() {\n\t\t\t\twindow.location.reload(true);\n\t\t\t},\n\t\t\tstartActivityLogUpdates: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tsetInterval(function() {\n\t\t\t\t\tself.updateActivityLog();\n\t\t\t\t}, parseInt(WordfenceAdminVars.actUpdateInterval));\n\t\t\t},\n\t\t\tupdateActivityLog: function() {\n\t\t\t\tif (this.activityLogUpdatePending || (!this.windowHasFocus() && WordfenceAdminVars.allowsPausing == '1')) {\n\t\t\t\t\tif (!jQuery('body').hasClass('wordfenceLiveActivityPaused') && !this.activityLogUpdatePending) {\n\t\t\t\t\t\tjQuery('body').addClass('wordfenceLiveActivityPaused');\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (jQuery('body').hasClass('wordfenceLiveActivityPaused')) {\n\t\t\t\t\tjQuery('body').removeClass('wordfenceLiveActivityPaused');\n\t\t\t\t}\n\t\t\t\tWFAD.loadingIssues = true;\n\t\t\t\tthis.activityLogUpdatePending = true;\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_activityLogUpdate', {\n\t\t\t\t\tlastctime: this.lastALogCtime,\n\t\t\t\t\tlastissuetime: this.lastIssueUpdateTime,\n\t\t\t\t}, function(res) {\n\t\t\t\t\tself.doneUpdateActivityLog(res);\n\t\t\t\t}, function() {\n\t\t\t\t\tself.activityLogUpdatePending = false;\n\t\t\t\t}, true);\n\n\t\t\t},\n\t\t\tdoneUpdateActivityLog: function(res) {\n\t\t\t\tthis.actNextUpdateAt = (new Date()).getTime() + parseInt(WordfenceAdminVars.actUpdateInterval);\n\t\t\t\tif (res.ok) {\n\t\t\t\t\tif (res.items.length > 0) {\n\t\t\t\t\t\tthis.activityQueue.push.apply(this.activityQueue, res.items);\n\t\t\t\t\t\tthis.lastALogCtime = res.items[res.items.length - 1].ctime;\n\t\t\t\t\t\tthis.processActQueue(res.currentScanID);\n\t\t\t\t\t}\n\t\t\t\t\tif (res.signatureUpdateTime) {\n\t\t\t\t\t\tthis.updateSignaturesTimestamp(res.signatureUpdateTime);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar oldScanStalled = WFAD.scanStalled;\n\t\t\t\t\tWFAD.scanStalled = (res.scanStalled == '1' ? true : false);\n\t\t\t\t\tvar oldScanRunning = WFAD.scanRunning;\n\t\t\t\t\tWFAD.scanRunning = (res.scanRunning == '1' && !WFAD.scanStalled) ? true : false;\n\t\t\t\t\t\n\t\t\t\t\tif (res.scanFailedHTML && !WFAD.scanRunning) {\n\t\t\t\t\t\tjQuery('#wf-scan-failed').html(res.scanFailedHTML);\n\t\t\t\t\t\tjQuery('#wf-scan-failed').show();\n\t\t\t\t\t\t$(window).trigger('wfScanUpdateButtons');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tjQuery('#wf-scan-failed').hide();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (res.lastMessage) {\n\t\t\t\t\t\t$('#wf-scan-last-status').html(res.lastMessage);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (res.issues) {\n\t\t\t\t\t\tthis.lastIssueUpdateTime = res.issueUpdateTimestamp;\n\t\t\t\t\t\tthis.displayIssues(res);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (res.issueCounts) {\n\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tWFAD.loadingIssues = false;\n\n\t\t\t\t\tif (res.scanStats) {\n\t\t\t\t\t\tvar keys = Object.keys(res.scanStats);\n\t\t\t\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\t\t\t\t$('.' + keys[i]).text(res.scanStats[keys[i]]); \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (res.scanStages) {\n\t\t\t\t\t\tvar keys = Object.keys(res.scanStages);\n\t\t\t\t\t\tfor (var i = 0; i < keys.length; i++) { \n\t\t\t\t\t\t\tvar element = $('#wf-scan-' + keys[i]);\n\t\t\t\t\t\t\tif (element) {\n\t\t\t\t\t\t\t\tvar existingClasses = element.attr('class');\n\t\t\t\t\t\t\t\tif (existingClasses.match(\/ \/)) {\n\t\t\t\t\t\t\t\t\texistingClasses = existingClasses.split(' ');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\texistingClasses = [existingClasses];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar newClasses = res.scanStages[keys[i]];\n\t\t\t\t\t\t\t\tif (newClasses.match(\/ \/)) {\n\t\t\t\t\t\t\t\t\tnewClasses = newClasses.split(' ');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tnewClasses = [newClasses];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar mismatch = false;\n\t\t\t\t\t\t\t\tif (existingClasses.length != newClasses.length) {\n\t\t\t\t\t\t\t\t\tmismatch = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tvar intersection = existingClasses.filter(function(value) {\n\t\t\t\t\t\t\t\t\t\tfor (var n = 0; n < newClasses.length; n++) {\n\t\t\t\t\t\t\t\t\t\t\tif (newClasses[n] == value) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tmismatch = (intersection.length != newClasses.length);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (mismatch) {\n\t\t\t\t\t\t\t\t\telement.removeClass();\n\t\t\t\t\t\t\t\t\telement.addClass(newClasses.join(' '));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (oldScanRunning != WFAD.scanRunning) {\n\t\t\t\t\t\t\t\t\tif (WFAD.scanRunning) {\n\t\t\t\t\t\t\t\t\t\t$('#wf-scan-running-bar').show();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t$('#wf-scan-running-bar').hide();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t$(window).trigger('wfScanUpdateButtons');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (oldScanStalled != WFAD.scanStalled) {\n\t\t\t\t\t\t\t\t\t$(window).trigger('wfScanUpdateButtons');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.activityLogUpdatePending = false;\n\t\t\t},\n\n\t\t\tupdateSignaturesTimestamp: function(signatureUpdateTime) {\n\t\t\t\tvar date = new Date(signatureUpdateTime * 1000);\n\n\t\t\t\tvar dateString = date.toString();\n\t\t\t\tif (date.toLocaleString) {\n\t\t\t\t\tdateString = date.toLocaleString();\n\t\t\t\t}\n\n\t\t\t\tvar sigTimestampEl = $('#wf-scan-sigs-last-update');\n\t\t\t\tvar newText = sprintf(__('Last Updated: %s'), dateString);\n\t\t\t\tif (sigTimestampEl.text() !== newText) {\n\t\t\t\t\tsigTimestampEl.text(newText)\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\t'opacity': 0\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.animate({\n\t\t\t\t\t\t\t'opacity': 1\n\t\t\t\t\t\t}, 500);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tprocessActQueue: function(currentScanID) {\n\t\t\t\tif (this.activityQueue.length > 0) {\n\t\t\t\t\tthis.addActItem(this.activityQueue.shift());\n\t\t\t\t\tthis.totalActAdded++;\n\t\t\t\t\tif (this.totalActAdded > this.maxActivityLogItems) {\n\t\t\t\t\t\tjQuery('#wf-scan-activity-log > li:first').remove();\n\t\t\t\t\t\tthis.totalActAdded--;\n\t\t\t\t\t}\n\t\t\t\t\tvar timeTillNextUpdate = this.actNextUpdateAt - (new Date()).getTime();\n\t\t\t\t\tvar maxRate = 50 \/ 1000; \/\/Rate per millisecond\n\t\t\t\t\tvar bulkTotal = 0;\n\t\t\t\t\twhile (this.activityQueue.length > 0 && this.activityQueue.length \/ timeTillNextUpdate > maxRate) {\n\t\t\t\t\t\tvar item = this.activityQueue.shift();\n\t\t\t\t\t\tif (item) {\n\t\t\t\t\t\t\tbulkTotal++;\n\t\t\t\t\t\t\tthis.addActItem(item);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.totalActAdded += bulkTotal;\n\t\t\t\t\tif (this.totalActAdded > this.maxActivityLogItems) {\n\t\t\t\t\t\tjQuery('#wf-scan-activity-log > li:lt(' + bulkTotal + ')').remove();\n\t\t\t\t\t\tthis.totalActAdded -= bulkTotal;\n\t\t\t\t\t}\n\t\t\t\t\tvar minDelay = 100;\n\t\t\t\t\tvar delay = minDelay;\n\t\t\t\t\tif (timeTillNextUpdate < 1) {\n\t\t\t\t\t\tdelay = minDelay;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdelay = Math.round(timeTillNextUpdate \/ this.activityQueue.length);\n\t\t\t\t\t\tif (delay < minDelay) {\n\t\t\t\t\t\t\tdelay = minDelay;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tself.processActQueue();\n\t\t\t\t\t}, delay);\n\t\t\t\t}\n\t\t\t\tjQuery('#wf-scan-activity-log').scrollTop(jQuery('#wf-scan-activity-log').prop('scrollHeight'));\n\t\t\t},\n\t\t\tprocessActArray: function(arr) {\n\t\t\t\tfor (var i = 0; i < arr.length; i++) {\n\t\t\t\t\tthis.addActItem(arr[i]);\n\t\t\t\t}\n\t\t\t},\n\t\t\taddActItem: function(item) {\n\t\t\t\tif (!item) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!item.msg) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (item.msg.indexOf('SUM_') == 0) {\n\t\t\t\t\tthis.processSummaryLine(item);\n\t\t\t\t}\n\t\t\t\telse if (this.debugOn || item.level < 4) {\n\n\t\t\t\t\tvar html = '<li class=\"wfActivityLine';\n\t\t\t\t\tif (this.debugOn) {\n\t\t\t\t\t\thtml += ' wf' + item.type;\n\t\t\t\t\t}\n\t\t\t\t\thtml += '\">[' + item.date + ']&nbsp;' + item.msg + '<\/div>';\n\t\t\t\t\tjQuery('#wf-scan-activity-log').append(html);\n\t\t\t\t\tif (\/Scan complete\\.\/i.test(item.msg) || \/Scan interrupted\\.\/i.test(item.msg)) {\n\t\t\t\t\t\tthis.loadIssues();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tprocessSummaryLine: function(item) {\n\t\t\t\tvar msg, summaryUpdated;\n\t\t\t\tif (item.msg.indexOf('SUM_START:') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_START:', '');\n\t\t\t\t\tjQuery('#consoleSummary').append('<div class=\"wfSummaryLine\"><div class=\"wfSummaryDate\">[' + item.date + ']<\/div><div class=\"wfSummaryMsg\">' + msg + '<\/div><div class=\"wfSummaryResult\"><div class=\"wfSummaryLoading\"><\/div><\/div><div class=\"wfClear\"><\/div>');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_ENDBAD') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_ENDBAD:', '');\n\t\t\t\t\tjQuery('div.wfSummaryMsg:contains(\"' + msg + '\")').next().addClass('wfSummaryBad').html('Problems found.');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_ENDFAILED') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_ENDFAILED:', '');\n\t\t\t\t\tjQuery('div.wfSummaryMsg:contains(\"' + msg + '\")').next().addClass('wfSummaryBad').html('Failed.');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_ENDOK') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_ENDOK:', '');\n\t\t\t\t\tjQuery('div.wfSummaryMsg:contains(\"' + msg + '\")').next().addClass('wfSummaryOK').html('Secure.');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_ENDSUCCESS') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_ENDSUCCESS:', '');\n\t\t\t\t\tjQuery('div.wfSummaryMsg:contains(\"' + msg + '\")').next().addClass('wfSummaryOK').html('Success.');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_ENDERR') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_ENDERR:', '');\n\t\t\t\t\tjQuery('div.wfSummaryMsg:contains(\"' + msg + '\")').next().addClass('wfSummaryErr').html('An error occurred.');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_ENDSKIPPED') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_ENDSKIPPED:', '');\n\t\t\t\t\tjQuery('div.wfSummaryMsg:contains(\"' + msg + '\")').next().addClass('wfSummaryResult').html('Skipped.');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_ENDIGNORED') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_ENDIGNORED:', '');\n\t\t\t\t\tjQuery('div.wfSummaryMsg:contains(\"' + msg + '\")').next().addClass('wfSummaryIgnored').html('Ignored.');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_DISABLED:') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_DISABLED:', '');\n\t\t\t\t\tjQuery('#consoleSummary').append('<div class=\"wfSummaryLine\"><div class=\"wfSummaryDate\">[' + item.date + ']<\/div><div class=\"wfSummaryMsg\">' + msg + '<\/div><div class=\"wfSummaryResult\">' + __('Disabled') + '<\/div><div class=\"wfClear\"><\/div>');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_PAIDONLY:') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_PAIDONLY:', '');\n\t\t\t\t\tjQuery('#consoleSummary').append('<div class=\"wfSummaryLine\"><div class=\"wfSummaryDate\">[' + item.date + ']<\/div><div class=\"wfSummaryMsg\">' + msg + '<\/div><div class=\"wfSummaryResult\"><a href=\"https:\/\/www.wordfence.com\/wordfence-signup\/\" target=\"_blank\"  rel=\"noopener noreferrer\">' + __('Paid Members Only') + ' (' + __('opens in new tab') + ')<\/a><\/div><div class=\"wfClear\"><\/div>');\n\t\t\t\t\tsummaryUpdated = true;\n\t\t\t\t} else if (item.msg.indexOf('SUM_FINAL:') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_FINAL:', '');\n\t\t\t\t\tjQuery('#consoleSummary').append('<div class=\"wfSummaryLine\"><div class=\"wfSummaryDate\">[' + item.date + ']<\/div><div class=\"wfSummaryMsg wfSummaryFinal\">' + msg + '<\/div><div class=\"wfSummaryResult wfSummaryOK\">' + __('Scan Complete.') + '<\/div><div class=\"wfClear\"><\/div>');\n\t\t\t\t} else if (item.msg.indexOf('SUM_PREP:') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_PREP:', '');\n\t\t\t\t\tjQuery('#consoleSummary').empty().html('<div class=\"wfSummaryLine\"><div class=\"wfSummaryDate\">[' + item.date + ']<\/div><div class=\"wfSummaryMsg\">' + msg + '<\/div><div class=\"wfSummaryResult\" id=\"wfStartingScan\"><div class=\"wfSummaryLoading\"><\/div><\/div><div class=\"wfClear\"><\/div>');\n\t\t\t\t} else if (item.msg.indexOf('SUM_KILLED:') != -1) {\n\t\t\t\t\tmsg = item.msg.replace('SUM_KILLED:', '');\n\t\t\t\t\tjQuery('#consoleSummary').empty().html('<div class=\"wfSummaryLine\"><div class=\"wfSummaryDate\">[' + item.date + ']<\/div><div class=\"wfSummaryMsg\">' + msg + '<\/div><div class=\"wfSummaryResult wfSummaryOK\">' + __('Scan Complete.') + '<\/div><div class=\"wfClear\"><\/div>');\n\t\t\t\t}\n\t\t\t},\n\t\t\tprocessActQueueItem: function() {\n\t\t\t\tvar item = this.activityQueue.shift();\n\t\t\t\tif (item) {\n\t\t\t\t\tjQuery('#consoleActivity').append('<div class=\"wfActivityLine wf' + item.type + '\">[' + item.date + ']&nbsp;' + item.msg + '<\/div>');\n\t\t\t\t\tthis.totalActAdded++;\n\t\t\t\t\tif (this.totalActAdded > this.maxActivityLogItems) {\n\t\t\t\t\t\tjQuery('#consoleActivity div:first').remove();\n\t\t\t\t\t\tthis.totalActAdded--;\n\t\t\t\t\t}\n\t\t\t\t\tif (item.msg == 'Scan complete.') {\n\t\t\t\t\t\tthis.loadIssues();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tupdateLiveTraffic: function(forceUpdate) {\n\t\t\t\tif ((!forceUpdate) && (this.liveTrafficUpdatePending || (!this.windowHasFocus() && WordfenceAdminVars.allowsPausing == '1'))) {\n\t\t\t\t\tif (!jQuery('body').hasClass('wordfenceLiveActivityPaused') && !this.liveTrafficUpdatePending) {\n\t\t\t\t\t\tjQuery('body').addClass('wordfenceLiveActivityPaused');\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (jQuery('body').hasClass('wordfenceLiveActivityPaused')) {\n\t\t\t\t\tjQuery('body').removeClass('wordfenceLiveActivityPaused');\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (this.mode == 'liveTraffic') {\n\t\t\t\t\tthis.liveTrafficUpdatePending = true;\n\t\t\t\t\tvar self = this;\n\t\t\t\t\tvar otherParams = this.newestActivityTime;\n\t\t\t\t\tvar data = '';\n\t\t\t\t\t\n\t\t\t\t\tif (this.wfLiveTraffic) {\n\t\t\t\t\t\tdata += this.wfLiveTraffic.getCurrentQueryString({\n\t\t\t\t\t\t\tsince: this.newestActivityTime\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tdata += '&otherParams=' + encodeURIComponent(otherParams);\n\t\t\t\t\tthis.ajax('wordfence_ticker', data, function(res) {\n\t\t\t\t\t\tself.handleLiveTrafficReturn(res);\n\t\t\t\t\t}, function() {\n\t\t\t\t\t\tself.liveTrafficUpdatePending = false;\n\t\t\t\t\t}, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleLiveTrafficReturn: function(res) {\n\t\t\t\tthis.liveTrafficUpdatePending = false;\n\t\t\t\tthis.serverTimestampOffset = (new Date().getTime() \/ 1000) - res.serverTime;\n\t\t\t\tthis.serverMicrotime = res.serverMicrotime;\n\t\t\t\t\n\t\t\t\tvar newMsg = \"Idle\";\n\t\t\t\tvar oldMsg = jQuery('.wf-live-activity-message').text();\n\t\t\t\tif (res.msg) { newMsg = res.msg; }\n\t\t\t\tif (newMsg && newMsg != oldMsg) {\n\t\t\t\t\tjQuery('.wf-live-activity-message').hide().html(newMsg).fadeIn(200);\n\t\t\t\t}\n\n\t\t\t\tif (this.mode == 'liveTraffic') {\n\t\t\t\t\tif (res.events.length > 0) {\n\t\t\t\t\t\tthis.newestActivityTime = res.events[0]['ctime'];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (typeof WFAD.wfLiveTraffic !== undefined) {\n\t\t\t\t\t\tWFAD.wfLiveTraffic.prependListings(res.events, res);\n\t\t\t\t\t\tthis.reverseLookupIPs();\n\t\t\t\t\t\tthis.avatarLookup();\n\t\t\t\t\t\tthis.updateTimeAgo();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tavatarLookup: function() {\n\t\t\t\tvar ids = [];\n\t\t\t\t$('.wfAvatar').each(function(idx, elem) {\n\t\t\t\t\tvar userID = Number.parseInt($(elem).data('userid'));\n\t\t\t\t\tif (!Number.isNaN(userID) && !$(elem).data('wfAvatarDone')) {\n\t\t\t\t\t\t$(elem).data('wfAvatarDone', true);\n\t\t\t\t\t\tids.push(userID);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tif (ids.length < 1) { return; }\n\t\t\t\t\n\t\t\t\tvar uni = {};\n\t\t\t\tvar uniqueIDs = [];\n\t\t\t\tfor (var i = 0; i < ids.length; i++) {\n\t\t\t\t\tif (!uni[ids[i]]) {\n\t\t\t\t\t\tuni[ids[i]] = true;\n\t\t\t\t\t\tuniqueIDs.push(ids[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.ajax('wordfence_avatarLookup', {\n\t\t\t\t\t\tids: uniqueIDs.join(',')\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res) {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\t$('.wfAvatar').each(function(idx, elem) {\n\t\t\t\t\t\t\t\tvar userID = Number.parseInt($(elem).data('userid'));\n\t\t\t\t\t\t\t\tif (!Number.isNaN(userID)) {\n\t\t\t\t\t\t\t\t\tif (res.avatars[userID]) {\n\t\t\t\t\t\t\t\t\t\t$(elem).html(res.avatars[userID]);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, false, false);\n\t\t\t},\n\t\t\treverseLookupIPs: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tvar ips = [];\n\t\t\t\tjQuery('.wfReverseLookup').each(function(idx, elem) {\n\t\t\t\t\tvar txt = jQuery(elem).text().trim();\n\t\t\t\t\tif (\/^\\d+\\.\\d+\\.\\d+\\.\\d+$\/.test(txt) && (!jQuery(elem).data('wfReverseDone'))) {\n\t\t\t\t\t\tjQuery(elem).data('wfReverseDone', true);\n\t\t\t\t\t\tips.push(txt);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (ips.length < 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar uni = {};\n\t\t\t\tvar uniqueIPs = [];\n\t\t\t\tfor (var i = 0; i < ips.length; i++) {\n\t\t\t\t\tif (!uni[ips[i]]) {\n\t\t\t\t\t\tuni[ips[i]] = true;\n\t\t\t\t\t\tuniqueIPs.push(ips[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.ajax('wordfence_reverseLookup', {\n\t\t\t\t\t\tips: uniqueIPs.join(',')\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res) {\n\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\tjQuery('.wfReverseLookup').each(function(idx, elem) {\n\t\t\t\t\t\t\t\tvar el = jQuery(elem);\n\t\t\t\t\t\t\t\tvar txt = el.text().trim();\n\t\t\t\t\t\t\t\tfor (var ip in res.ips) {\n\t\t\t\t\t\t\t\t\tif (txt == ip) {\n\t\t\t\t\t\t\t\t\t\tif (res.ips[ip]) {\n\t\t\t\t\t\t\t\t\t\t\tvar hostnameTemplate = el.attr('data-reverse-lookup-template');\n\t\t\t\t\t\t\t\t\t\t\tif (hostnameTemplate) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery(elem).html(jQuery.tmpl($('#' + hostnameTemplate), {\n\t\t\t\t\t\t\t\t\t\t\t\t\tip: res.ips[ip]\n\t\t\t\t\t\t\t\t\t\t\t\t}));\n\t\t\t\t\t\t\t\t\t\t\t} else if (el.hasClass('wf-hostname-only')) {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery(elem).text(res.ips[ip]);\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\tjQuery(elem).html('<strong>Hostname:<\/strong>&nbsp;' + self.htmlEscape(res.ips[ip]));\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tjQuery(elem).html('');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}, false, false);\n\t\t\t},\n\t\t\tkillScan: function(callback) {\n\t\t\t\tthis.ajax('wordfence_killScan', {}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\ttypeof callback === 'function' && callback(true);\n\t\t\t\t\t\tWFAD.scanRunning = false;\n\t\t\t\t\t\tWFAD.scanFailed = false;\n\t\t\t\t\t\t$(window).trigger('wfScanUpdateButtons');\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttypeof callback === 'function' && callback(false);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tstartScan: function() {\n\t\t\t\tthis.ajax('wordfence_scan', {}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tWFAD.scanRunning = true;\n\t\t\t\t\t\t$('#wf-scan-results-new').empty();\n\t\t\t\t\t\t$('#wf-scan-bulk-buttons-delete, #wf-scan-bulk-buttons-repair').addClass('wf-disabled');\n\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\t$(window).trigger('wfScanUpdateButtons');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tloadIssues: function(callback, offset, limit) {\n\t\t\t\tif (this.mode != 'scan') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\toffset = offset || 0;\n\t\t\t\tlimit = limit || WordfenceAdminVars.scanIssuesPerPage;\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_loadIssues', {offset: offset, limit: limit}, function(res) {\n\t\t\t\t\tvar newCount = parseInt(res.issueCounts.new) || 0;\n\t\t\t\t\tvar ignoredCount = (parseInt(res.issueCounts.ignoreP) || 0) + (parseInt(res.issueCounts.ignoreC) || 0);\n\t\t\t\t\tjQuery('#wfNewIssuesTab .wfIssuesCount').text(' (' + newCount + ')');\n\t\t\t\t\tjQuery('#wfIgnoredIssuesTab .wfIssuesCount').text(' (' + ignoredCount + ')'); \n\t\t\t\t\tself.displayIssues(res, callback);\n\t\t\t\t});\n\t\t\t},\n\t\t\tloadMoreIssues: function(callback, offset, limit, ignoredOffset, ignoredLimit) {\n\t\t\t\toffset = offset || 0;\n\t\t\t\tlimit = limit || WordfenceAdminVars.scanIssuesPerPage;\n\t\t\t\tignoredOffset = ignoredOffset || 0;\n\t\t\t\tignoredLimit = ignoredLimit || WordfenceAdminVars.scanIssuesPerPage;\n\t\t\t\t\n\t\t\t\tif (offset >= WFAD.scanIssuesNewCount && ignoredOffset >= WFAD.scanIssuesIgnoredCount) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tWFAD.ajax('wordfence_loadIssues', {offset: offset, limit: limit, ignoredOffset: ignoredOffset, ignoredLimit: ignoredLimit}, function(res) {\n\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\tWFAD.appendIssues(res.issues, callback);\n\t\t\t\t});\n\t\t\t},\n\t\t\tsev2num: function(str) {\n\t\t\t\tif (\/wfProbSev1\/.test(str)) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else if (\/wfProbSev2\/.test(str)) {\n\t\t\t\t\treturn 2;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\tisIssueExpanded: function(issueID) {\n\t\t\t\tvar key = 'wf-scan-issue-expanded-' + issueID;\n\t\t\t\tif (window.localStorage) {\n\t\t\t\t\treturn !!parseInt(window.localStorage.getItem(key));\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\texpandIssue: function(issueID, makeVisible) {\n\t\t\t\tvar key = 'wf-scan-issue-expanded-' + issueID;\n\t\t\t\tif (window.localStorage) {\n\t\t\t\t\twindow.localStorage.setItem(key, makeVisible ? 1 : 0);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdisplayIssues: function(res, callback) {\n\t\t\t\tfor (var issueStatus in res.issues) {\n\t\t\t\t\tvar containerID = 'wf-scan-results-' + issueStatus;\n\t\t\t\t\tif ($('#' + containerID).length < 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (res.issues[issueStatus].length < 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t$('#' + containerID).empty();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tWFAD.appendIssues(res.issues, callback);\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tappendIssues: function(issues, callback) {\n\t\t\t\tfor (var issueStatus in issues) {\n\t\t\t\t\tvar containerID = 'wf-scan-results-' + issueStatus;\n\t\t\t\t\tif ($('#' + containerID).length < 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar container = $('#' + containerID);\n\t\t\t\t\tfor (var i = 0; i < issues[issueStatus].length; i++) {\n\t\t\t\t\t\tvar issueObject = issues[issueStatus][i];\n\t\t\t\t\t\tWFAD.appendIssue(issueObject, container);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tWFAD.sortIssues();\n\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t},\n\t\t\tappendIssue: function(issueObject, container) {\n\t\t\t\tvar issueType = issueObject.type;\n\t\t\t\tvar tmplName = 'issueTmpl_' + issueType;\n\t\t\t\tvar template = $('#' + tmplName);\n\t\t\t\tif (template.length) {\n\t\t\t\t\tvar issue = template.tmpl(issueObject);\n\t\t\t\t\tissue.data('sourceData', issueObject);\n\t\t\t\t\tissue.data('templateName', tmplName);\n\t\t\t\t\tif (this.isIssueExpanded(issueObject.id)) {\n\t\t\t\t\t\tissue.addClass('wf-active');\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/Hook up Details button\n\t\t\t\t\tissue.find('.wf-issue-control-show-details').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tvar isActive = $(this).closest('.wf-issue').hasClass('wf-active');\n\t\t\t\t\t\tvar issueID = $(this).closest('.wf-issue').data('issueId'); \n\t\t\t\t\t\tWFAD.expandIssue(issueID, !isActive);\n\t\t\t\t\t\t$(this).closest('.wf-issue').toggleClass('wf-active', !isActive);\n\t\t\t\t\t});\n\n\t\t\t\t\t\/\/Hook up Ignore button\n\t\t\t\t\tissue.find('.wf-issue-control-ignore').each(function() {\n\t\t\t\t\t\tvar issueID = $(this).closest('.wf-issue').data('issueId');\n\t\t\t\t\t\tvar menu = $(this).parent().find('.wf-issue-control-ignore-menu').menu().hide();\n\n\t\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tvar ignoreAction = $(this).data('ignoreAction');\n\t\t\t\t\t\t\tif (ignoreAction == 'choice') {\n\t\t\t\t\t\t\t\tmenu.show().position({\n\t\t\t\t\t\t\t\t\tmy: \"left top\",\n\t\t\t\t\t\t\t\t\tat: \"left bottom\",\n\t\t\t\t\t\t\t\t\tof: this\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t$(document).on('click', function() {\n\t\t\t\t\t\t\t\t\tmenu.hide();\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\t\tWFAD.updateIssueStatus(issueID, ignoreAction, function(res) {\n\t\t\t\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\t\t\t\tvar issueContainer = $(self).closest('.wf-scan-results-issues');\n\t\t\t\t\t\t\t\t\t\tvar issueElement = $(self).closest('.wf-issue');\n\t\t\t\t\t\t\t\t\t\tvar sourceData = issueElement.data('sourceData');\n\t\t\t\t\t\t\t\t\t\tsourceData['status'] = ignoreAction;\n\n\t\t\t\t\t\t\t\t\t\tvar targetContainerID = 'wf-scan-results-' + (issueContainer.attr('id') == 'wf-scan-results-new' ? 'ignored' : 'new');\n\t\t\t\t\t\t\t\t\t\tvar targetContainer = $('#' + targetContainerID);\n\t\t\t\t\t\t\t\t\t\tissueElement.remove();\n\t\t\t\t\t\t\t\t\t\tWFAD.appendIssue(sourceData, targetContainer);\n\t\t\t\t\t\t\t\t\t\tWFAD.sortIssues();\n\t\t\t\t\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\t\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\t\t\t\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tmenu.find('.wf-issue-control-ignore-menu-ignorec').on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tWFAD.updateIssueStatus(issueID, 'ignoreC', function(res) {\n\t\t\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\t\t\tvar issueContainer = $(self).closest('.wf-scan-results-issues');\n\t\t\t\t\t\t\t\t\tvar issueElement = $(self).closest('.wf-issue');\n\t\t\t\t\t\t\t\t\tvar sourceData = issueElement.data('sourceData');\n\t\t\t\t\t\t\t\t\tsourceData['status'] = 'ignoreC';\n\n\t\t\t\t\t\t\t\t\tvar targetContainerID = 'wf-scan-results-' + (issueContainer.attr('id') == 'wf-scan-results-new' ? 'ignored' : 'new');\n\t\t\t\t\t\t\t\t\tvar targetContainer = $('#' + targetContainerID);\n\t\t\t\t\t\t\t\t\tissueElement.remove();\n\t\t\t\t\t\t\t\t\tWFAD.appendIssue(sourceData, targetContainer);\n\t\t\t\t\t\t\t\t\tWFAD.sortIssues();\n\t\t\t\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\t\t\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tmenu.find('.wf-issue-control-ignore-menu-ignorep').on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tWFAD.updateIssueStatus(issueID, 'ignoreP', function(res) {\n\t\t\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\t\t\tvar issueContainer = $(self).closest('.wf-scan-results-issues');\n\t\t\t\t\t\t\t\t\tvar issueElement = $(self).closest('.wf-issue');\n\t\t\t\t\t\t\t\t\tvar sourceData = issueElement.data('sourceData');\n\t\t\t\t\t\t\t\t\tsourceData['status'] = 'ignoreP';\n\n\t\t\t\t\t\t\t\t\tvar targetContainerID = 'wf-scan-results-' + (issueContainer.attr('id') == 'wf-scan-results-new' ? 'ignored' : 'new');\n\t\t\t\t\t\t\t\t\tvar targetContainer = $('#' + targetContainerID);\n\t\t\t\t\t\t\t\t\tissueElement.remove();\n\t\t\t\t\t\t\t\t\tWFAD.appendIssue(sourceData, targetContainer);\n\t\t\t\t\t\t\t\t\tWFAD.sortIssues();\n\t\t\t\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\t\t\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\/\/Hook up Mark as Fixed button\n\t\t\t\t\tissue.find('.wf-issue-control-mark-fixed').each(function() {\n\t\t\t\t\t\tvar issueID = $(this).closest('.wf-issue').data('issueId');\n\n\t\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tWFAD.updateIssueStatus(issueID, 'delete', function(res) {\n\t\t\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\t\t\tvar issueElement = $(self).closest('.wf-issue');\n\t\t\t\t\t\t\t\t\tissueElement.remove();\n\t\t\t\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\t\t\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\/\/Hook up Delete File button\n\t\t\t\t\tissue.find('.wf-issue-control-delete-file').each(function() {\n\t\t\t\t\t\tvar issueID = $(this).closest('.wf-issue').data('issueId');\n\n\t\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tWFAD.deleteFile(issueID, false, function(res) {\n\t\t\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\t\t\tvar issueElement = $(self).closest('.wf-issue');\n\t\t\t\t\t\t\t\t\tissueElement.remove();\n\t\t\t\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\t\t\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\t\t\t\t\t\tWFAD.colorboxModal((WFAD.isSmallScreen ? '300px' : '400px'), __(\"Success deleting file\"), sprintf(__(\"The file %s was successfully deleted.\"), res.file));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (res.errorMsg) {\n\t\t\t\t\t\t\t\t\tWFAD.colorboxError(res.errorMsg, res.tokenInvalid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t\/\/Hook up Repair button\n\t\t\t\t\tissue.find('.wf-issue-control-repair').each(function() {\n\t\t\t\t\t\t\/\/ Show prompt to download repair file\n\n\t\t\t\t\t\tvar issueID = $(this).closest('.wf-issue').data('issueId');\n\n\t\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tWFAD.promptToRepairFile(issueID, issueObject.data);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t\/\/Hook up Hide File button\n\t\t\t\t\tissue.find('.wf-issue-control-hide-file').each(function() {\n\t\t\t\t\t\tvar issueID = $(this).closest('.wf-issue').data('issueId');\n\n\t\t\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tvar self = this;\n\t\t\t\t\t\t\tWFAD.hideFile(issueID, function(res) {\n\t\t\t\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\t\t\t\tvar issueElement = $(self).closest('.wf-issue');\n\t\t\t\t\t\t\t\t\tissueElement.remove();\n\t\t\t\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\t\t\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\t\t\t\t\t\tWFAD.colorboxModal((WFAD.isSmallScreen ? '300px' : '400px'), __(\"File hidden successfully\"), sprintf(__(\"The file %s was successfully hidden from public view.\"), res.file));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (res.errorMsg) {\n\t\t\t\t\t\t\t\t\tWFAD.colorboxError(res.errorMsg, res.tokenInvalid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t\/\/Hook up Tooltips\n\t\t\t\t\tissue.find('[data-tooltip]').each(function() {\n\t\t\t\t\t\t$(this).tooltip({\n\t\t\t\t\t\t\ttooltipClass: \"wf-tooltip\",\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\t\t\/\/Swap out if the row already exists\n\t\t\t\t\tvar existing = $('.wf-issue[data-issue-id=\"' + issueObject.id + '\"]');\n\t\t\t\t\tif (existing.length) {\n\t\t\t\t\t\texisting.replaceWith(issue);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcontainer.append(issue);\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/Make row tappable\n\t\t\t\t\tissue.find('.wf-issue-summary').on('mousedown', function(e) {\n\t\t\t\t\t\t$(this).data('clickTapX', e.pageX).data('clickTapY', e.pageY);\n\t\t\t\t\t}).on('click', function(e) {\n\t\t\t\t\t\tvar buffer = 10;\n\t\t\t\t\t\tvar clickTapX = $(this).data('clickTapX');\n\t\t\t\t\t\tvar clickTapY = $(this).data('clickTapY');\n\t\t\t\t\t\tif (clickTapX > e.pageX - buffer && clickTapX < e.pageX + buffer && clickTapY > e.pageY - buffer && clickTapY < e.pageY + buffer) {\n\t\t\t\t\t\t\tvar links = $(this).find('a');\n\t\t\t\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\t\t\t\tvar r = l + $(links[i]).width();\n\n\t\t\t\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$(this).closest('.wf-issue').find('li.wf-issue-controls .wf-issue-control-show-details').trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t}).css('cursor', 'pointer');\n\t\t\t\t}\n\t\t\t},\n\t\t\tsortIssues: function() {\n\t\t\t\tvar issueTypes = ['new', 'ignored'];\n\t\t\t\tfor (var i = 0; i < issueTypes.length; i++) {\n\t\t\t\t\tvar containerID = 'wf-scan-results-' + issueTypes[i];\n\t\t\t\t\tif ($('#' + containerID).length < 1) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar container = $('#' + containerID);\n\t\t\t\t\tvar issuesDOM = container.find('.wf-issue');\n\t\t\t\t\tissuesDOM.detach();\n\t\t\t\t\tissuesDOM.sort(function(a, b) {\n\t\t\t\t\t\tvar severityA = $(a).data('issueSeverity');\n\t\t\t\t\t\tvar severityB = $(b).data('issueSeverity');\n\t\t\t\t\t\tif (severityA > severityB) { return -1; }\n\t\t\t\t\t\telse if (severityA < severityB) { return 1; }\n\n\t\t\t\t\t\tvar typeA = $(a).data('issueType');\n\t\t\t\t\t\tvar typeB = $(b).data('issueType');\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar typeAIndex = WFAD.siteCleaningIssueTypes.indexOf(typeA);\n\t\t\t\t\t\tvar typeBIndex = WFAD.siteCleaningIssueTypes.indexOf(typeB);\n\t\t\t\t\t\tif (typeAIndex > -1 && typeBIndex > -1) {\n\t\t\t\t\t\t\tif (typeAIndex < typeBIndex) { return -1; }\n\t\t\t\t\t\t\telse if (typeAIndex > typeBIndex) { return 1; }\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeAIndex > -1) {\n\t\t\t\t\t\t\treturn -1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (typeBIndex > -1) {\n\t\t\t\t\t\t\treturn 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (typeA < typeB) { return -1; }\n\t\t\t\t\t\telse if (typeA > typeB) { return 1; }\n\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t});\n\t\t\t\t\tcontainer.append(issuesDOM);\n\t\t\t\t}\n\n\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\tWFAD.scanIssuesOffset = $('#wf-scan-results-new .wf-issue').length;\n\t\t\t\tWFAD.scanIssuesIgnoredOffset = $('#wf-scan-results-ignored .wf-issue').length;\n\t\t\t},\n\t\t\tupdateBulkButtons: function() {\n\t\t\t\tvar containerID = 'wf-scan-results-new';\n\t\t\t\tif ($('#' + containerID).length < 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar hasDeleteable = false;\n\t\t\t\tvar hasRepairable = false;\n\t\t\t\t\n\t\t\t\tvar container = $('#' + containerID);\n\t\t\t\tvar issuesDOM = container.find('.wf-issue');\n\t\t\t\tfor (var i = 0; i < issuesDOM.length; i++) {\n\t\t\t\t\tvar sourceData = $(issuesDOM[i]).data('sourceData');\n\t\t\t\t\tif (sourceData) {\n\t\t\t\t\t\tif (sourceData.data.canDelete) {\n\t\t\t\t\t\t\thasDeleteable = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (sourceData.data.canFix) {\n\t\t\t\t\t\t\thasRepairable = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hasDeleteable && hasRepairable) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t$('#wf-scan-bulk-buttons-delete').toggleClass('wf-disabled', !hasDeleteable);\n\t\t\t\t$('#wf-scan-bulk-buttons-repair').toggleClass('wf-disabled', !hasRepairable);\n\t\t\t},\n\t\t\tupdateIssueCounts: function(issueCounts) {\n\t\t\t\tvar newCount = (typeof issueCounts['new'] === 'undefined' ? 0 : parseInt(issueCounts['new']));\n\t\t\t\tvar ignoredCount = (typeof issueCounts['ignoreC'] === 'undefined' ? 0 : parseInt(issueCounts['ignoreC'])) + (typeof issueCounts['ignoreP'] === 'undefined' ? 0 : parseInt(issueCounts['ignoreP']));\n\t\t\t\tWFAD.scanIssuesNewCount = newCount;\n\t\t\t\tWFAD.scanIssuesIgnoredCount = ignoredCount;\n\t\t\t\tWFAD.scanIssuesTotalCount = newCount + ignoredCount;\n\t\t\t\t\n\t\t\t\t$('#wf-scan-tab-new a').html($('#wf-scan-tab-new').data('tabTitle') + ' (' + newCount + ')');\n\t\t\t\t$('#wf-scan-tab-ignored a').html($('#wf-scan-tab-ignored').data('tabTitle') + ' (' + ignoredCount + ')'); \n\n\t\t\t\tif (newCount == 0) {\n\t\t\t\t\tvar existing = $('.wf-issue[data-issue-id=\"no-issues-new\"]');\n\t\t\t\t\tif (existing.length == 0) {\n\t\t\t\t\t\tvar issue = $('#issueTmpl_noneFound').tmpl({shortMsg: __('No new issues have been found.'), id: 'no-issues-new'});\n\t\t\t\t\t\t$('#wf-scan-results-new').append(issue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$('.wf-issue[data-issue-id=\"no-issues-new\"]').remove();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (ignoredCount == 0) {\n\t\t\t\t\tvar existing = $('.wf-issue[data-issue-id=\"no-issues-ignored\"]');\n\t\t\t\t\tif (existing.length == 0) {\n\t\t\t\t\t\tvar issue = $('#issueTmpl_noneFound').tmpl({shortMsg: __('No issues have been ignored.'), id: 'no-issues-ignored'});\n\t\t\t\t\t\t$('#wf-scan-results-ignored').append(issue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$('.wf-issue[data-issue-id=\"no-issues-ignored\"]').remove();\n\t\t\t\t}\n\t\t\t},\n\t\t\trepositionSiteCleaningCallout: function() {\n\t\t\t\t$('.wf-issue-site-cleaning').remove();\n\t\t\t\t\n\t\t\t\tvar issueTypes = WFAD.siteCleaningIssueTypes;\n\t\t\t\tfor (var i = 0; i < issueTypes.length; i++) {\n\t\t\t\t\tif ($('#wf-scan-results-new .wf-issue-' + issueTypes[i]).length) {\n\t\t\t\t\t\tif (!!$('#wf-scan-results-new .wf-issue-' + issueTypes[i]).data('betaSignatures')) {\n\t\t\t\t\t\t\t$('#wf-scan-results-new .wf-issue').first().after($('#siteCleaningBetaSigsTmpl').tmpl());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (!!$('#wf-scan-results-new .wf-issue-' + issueTypes[i]).data('highSensitivity')) {\n\t\t\t\t\t\t\t$('#wf-scan-results-new .wf-issue').first().after($('#siteCleaningHighSenseTmpl').tmpl());\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t$('#wf-scan-results-new .wf-issue').first().after($('#siteCleaningTmpl').tmpl());\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tajax: function(action, data, cb, cbErr, noLoading) {\n\t\t\t\tif (typeof(data) == 'string') {\n\t\t\t\t\tif (data.length > 0) {\n\t\t\t\t\t\tdata += '&';\n\t\t\t\t\t}\n\t\t\t\t\tdata += 'action=' + action + '&nonce=' + this.nonce;\n\t\t\t\t} else if (typeof(data) == 'object' && data instanceof Array) {\n\t\t\t\t\t\/\/ jQuery serialized form data\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tname: 'action',\n\t\t\t\t\t\tvalue: action\n\t\t\t\t\t});\n\t\t\t\t\tdata.push({\n\t\t\t\t\t\tname: 'nonce',\n\t\t\t\t\t\tvalue: this.nonce\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof(data) == 'object') {\n\t\t\t\t\tdata['action'] = action;\n\t\t\t\t\tdata['nonce'] = this.nonce;\n\t\t\t\t}\n\t\t\t\tif (!cb) {\n\t\t\t\t\tcb = function() {\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (!cbErr) {\n\t\t\t\t\tcbErr = function() {\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tvar self = this;\n\t\t\t\tif (!noLoading) {\n\t\t\t\t\tthis.showLoading();\n\t\t\t\t}\n\t\t\t\tjQuery.ajax({\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: WordfenceAdminVars.ajaxURL,\n\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\tdata: data,\n\t\t\t\t\tsuccess: function(json) {\n\t\t\t\t\t\tif (!noLoading) {\n\t\t\t\t\t\t\tself.removeLoading();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (json && json.nonce) {\n\t\t\t\t\t\t\tself.nonce = json.nonce;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (json && json.errorMsg) {\n\t\t\t\t\t\t\tWFAD.colorboxError(json.errorMsg, json.tokenInvalid);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcb(json);\n\t\t\t\t\t},\n\t\t\t\t\terror: function() {\n\t\t\t\t\t\tif (!noLoading) {\n\t\t\t\t\t\t\tself.removeLoading();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcbErr();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tcolorbox: function(width, heading, body, settings) {\n\t\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\t\tsettings = {};\n\t\t\t\t}\n\t\t\t\tthis.colorboxQueue.push([width, \"<h3>\" + heading + \"<\/h3><p>\" + body + \"<\/p>\", settings]);\n\t\t\t\tthis.colorboxServiceQueue();\n\t\t\t},\n\t\t\tcolorboxModalHTML: function(width, heading, body, settings) {\n\t\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\t\tsettings = {};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar prompt = $.tmpl(WordfenceAdminVars.modalHTMLTemplate, {title: heading, message: body});\n\t\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\t\tvar callback = settings.onComplete;\n\t\t\t\tsettings.overlayClose = false;\n\t\t\t\tsettings.closeButton = false;\n\t\t\t\tsettings.className = 'wf-modal';\n\t\t\t\tsettings.onComplete = function() {\n\t\t\t\t\t$('#wf-generic-modal-close').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tWFAD.colorboxClose();\n\t\t\t\t\t});\n\n\t\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t\t};\n\t\t\t\tthis.colorboxHTML(width, promptHTML, settings)\n\t\t\t},\n\t\t\tcolorboxModal: function(width, heading, body, settings) {\n\t\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\t\tsettings = {};\n\t\t\t\t}\n\n\t\t\t\tvar prompt = $.tmpl(WordfenceAdminVars.modalTemplate, {title: heading, message: body});\n\t\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\t\tvar callback = settings.onComplete;\n\t\t\t\tsettings.overlayClose = false;\n\t\t\t\tsettings.closeButton = false;\n\t\t\t\tsettings.className = 'wf-modal';\n\t\t\t\tsettings.onComplete = function() {\n\t\t\t\t\t$('#wf-generic-modal-close').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tWFAD.colorboxClose();\n\t\t\t\t\t});\n\n\t\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t\t};\n\t\t\t\tthis.colorboxHTML(width, promptHTML, settings)\n\t\t\t},\n\t\t\tcolorboxError: function(errorMsg, isTokenError) {\n\t\t\t\tvar callback = false;\n\t\t\t\tif (isTokenError) {\n\t\t\t\t\tif (WFAD.tokenErrorShowing) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tcallback = function() {\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tWFAD.tokenErrorShowing = false;\n\t\t\t\t\t\t}, 30000);\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tWFAD.tokenErrorShowing = true;\n\t\t\t\t}\n\n\t\t\t\tvar prompt = $.tmpl(WordfenceAdminVars.tokenInvalidTemplate, {title: __('An error occurred'), message: errorMsg});\n\t\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\t\tvar settings = {};\n\t\t\t\tsettings.overlayClose = false;\n\t\t\t\tsettings.closeButton = false;\n\t\t\t\tsettings.className = 'wf-modal';\n\t\t\t\tsettings.onComplete = function() {\n\t\t\t\t\t$('#wf-token-invalid-modal-reload').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t\t});\n\n\t\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t\t};\n\t\t\t\tWFAD.colorboxHTML((WFAD.isSmallScreen ? '300px' : '400px'), promptHTML, settings);\n\t\t\t},\n\t\t\tcolorboxHTML: function(width, html, settings) {\n\t\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\t\tsettings = {};\n\t\t\t\t}\n\t\t\t\tthis.colorboxQueue.push([width, html, settings]);\n\t\t\t\tthis.colorboxServiceQueue();\n\t\t\t},\n\t\t\tcolorboxServiceQueue: function() {\n\t\t\t\tif (this.colorboxIsOpen) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.colorboxQueue.length < 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar elem = this.colorboxQueue.shift();\n\t\t\t\tthis.colorboxOpen(elem[0], elem[1], elem[2]);\n\t\t\t},\n\t\t\tcolorboxOpen: function(width, html, settings) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.colorboxIsOpen = true;\n\t\t\t\tvar onClosed = settings.onClosed || null;\n\t\t\t\tjQuery.extend(settings, {\n\t\t\t\t\twidth: width,\n\t\t\t\t\thtml: html,\n\t\t\t\t\tonClosed: function() {\n\t\t\t\t\t\tself.colorboxClose();\n\t\t\t\t\t\tif (onClosed)\n\t\t\t\t\t\t\tonClosed();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tjQuery.wfcolorbox(settings);\n\t\t\t},\n\t\t\tcolorboxClose: function() {\n\t\t\t\tthis.colorboxIsOpen = false;\n\t\t\t\tjQuery.wfcolorbox.close();\n\t\t\t},\n\t\t\tbulkOperationConfirmed: function(op) {\n\t\t\t\tWFAD.colorboxClose();\n\t\t\t\tthis.ajax('wordfence_bulkOperation', {\n\t\t\t\t\top: op\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tfor (var i = 0; i < res.idsRemoved.length; i++) {\n\t\t\t\t\t\t\t$('.wf-issue[data-issue-id=\"' + res.idsRemoved[i] + '\"]').remove();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tWFAD.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\tWFAD.repositionSiteCleaningCallout();\n\t\t\t\t\t\tWFAD.updateBulkButtons();\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\tWFAD.colorboxModalHTML((WFAD.isSmallScreen ? '300px' : '400px'), res.bulkHeading, res.bulkBody);\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tdeleteFile: function(issueID, force, callback) {\n\t\t\t\tthis.ajax('wordfence_deleteFile', {\n\t\t\t\t\tissueID: issueID,\n\t\t\t\t\tforceDelete: force\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.needsCredentials) {\n\t\t\t\t\t\tdocument.location.href = res.redirect;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttypeof callback === 'function' && callback(res);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tpromptToRepairFile: function(issueID, data) {\n\t\t\t\tif (window.localStorage) {\n\t\t\t\t\tvar sudoExpiration = window.localStorage.getItem('wf-repair-file-sudo');\n\t\t\t\t\tif (sudoExpiration && parseInt(sudoExpiration, 10) > new Date().getTime()) {\n\t\t\t\t\t\tthis.repairFile(issueID);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tWFAD.colorboxModalHTML((WFAD.isSmallScreen ? '300px' : '400px'), __(\"Download Backup File\"), __('Please make a backup of this file before proceeding. If you need to restore this backup file, you can copy it to the following path from your site\\'s root:') + '<p class=\"wf-padding-add-top-medium\"><code>' + data.file + '<\/code><\/p>'\n\t\t\t\t\t+ '<a href=\"' + WFAD.makeDownloadFileLink(data) + '\" onclick=\"jQuery(\\'#wfRepairFileNextBtn\\').prop(\\'disabled\\', false); return true;\">' + __('Click here to download a backup copy of this file now') + '<\/a><p class=\"wf-flex-horizontal\">' +\n\t\t\t\t\t'<input type=\"button\" class=\"wf-btn wf-btn-primary\" name=\"but1\" id=\"wfRepairFileNextBtn\" value=\"Repair File\" disabled=\"disabled\" onclick=\"WFAD.promptToRepairFileDone(' + parseInt(issueID, 10) + ', jQuery(\\'#forceRepairFileCheckbox\\').prop(\\'checked\\'));this.disabled=true;\" \/>' +\n\t\t\t\t\t'<label class=\"wf-padding-add-left\"><input type=\"checkbox\" id=\"forceRepairFileCheckbox\" onclick=\"jQuery(\\'#wfRepairFileNextBtn\\').prop(\\'disabled\\', !this.checked); return true;\"> ' + __('Don\\'t ask again') + '<\/label>' +\n\t\t\t\t\t'<\/p>' +\n\t\t\t\t\t'<div class=\"wordfenceHelpLink\"><a href=\"' + WordfenceAdminVars.supportURLs['scan-result-repair-modified-files'] + '\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfhelp\"><\/a><a href=\"' + WordfenceAdminVars.supportURLs['scan-result-repair-modified-files'] + '\" target=\"_blank\" rel=\"noopener noreferrer\">' + __('Learn more about repairing modified files.') + ' (' + __('opens in new tab') + ')<\/a><\/div>'\n\t\t\t\t);\n\t\t\t},\n\t\t\tpromptToRepairFileDone: function(issueID, dontPromptAgain) {\n\t\t\t\tif (dontPromptAgain) {\n\t\t\t\t\tif (window.localStorage) {\n\t\t\t\t\t\twindow.localStorage.setItem('wf-repair-file-sudo', (new Date().getTime() + 86400000));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.repairFile(issueID);\n\t\t\t},\n\t\t\trepairFile: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tself.colorboxClose();\n\t\t\t\tthis.restoreFile(issueID, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tvar issueElement = $('.wf-issue[data-issue-id=' + parseInt(issueID, 10) + ']');\n\t\t\t\t\t\tissueElement.remove();\n\t\t\t\t\t\tself.updateIssueCounts(res.issueCounts);\n\t\t\t\t\t\tself.repositionSiteCleaningCallout();\n\t\t\t\t\t\tself.updateBulkButtons();\n\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Success restoring file\"), sprintf(__(\"The file %s was successfully restored.\"), res.file));\n\t\t\t\t\t}\n\t\t\t\t\telse if (res.errorMsg) {\n\t\t\t\t\t\tself.colorboxError(res.errorMsg, res.tokenInvalid);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tdeleteDatabaseOption: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_deleteDatabaseOption', {\n\t\t\t\t\tissueID: issueID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tself.doneDeleteDatabaseOption(res);\n\t\t\t\t});\n\t\t\t},\n\t\t\tdoneDeleteDatabaseOption: function(res) {\n\t\t\t\tvar cb = false;\n\t\t\t\tvar self = this;\n\t\t\t\tif (res.ok) {\n\t\t\t\t\tthis.loadIssues(function() {\n\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Success removing option\"), sprintf(__(\"The option %s was successfully removed.\"), res.option_name));\n\t\t\t\t\t});\n\t\t\t\t} else if (res.cerrorMsg) {\n\t\t\t\t\tthis.loadIssues(function() {\n\t\t\t\t\t\tWFAD.colorboxError(res.cerrorMsg, res.tokenInvalid);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tuseRecommendedHowGetIPs: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_misconfiguredHowGetIPsChoice', {\n\t\t\t\t\tissueID: issueID,\n\t\t\t\t\tchoice: 'yes'\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tjQuery('#wordfenceMisconfiguredHowGetIPsNotice').fadeOut();\n\t\t\t\t\t\t\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Success updating option\"), __(\"The 'How does Wordfence get IPs' option was successfully updated to the recommended value.\"));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (res.cerrorMsg) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tWFAD.colorboxError(res.cerrorMsg, res.tokenInvalid);\n\t\t\t\t\t\t}); \n\t\t\t\t\t}\n\t\t\t\t});\t\n\t\t\t},\n\t\t\tfixFPD: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar title = __(\"Full Path Disclosure\");\n\t\t\t\tissueID = parseInt(issueID);\n\n\t\t\t\tthis.ajax('wordfence_checkHtaccess', {}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), title, __('We are about to change your <em>.htaccess<\/em> file. Please make a backup of this file before proceeding.')\n\t\t\t\t\t\t\t+ '<br\/>'\n\t\t\t\t\t\t\t+ '<a href=\"' + WordfenceAdminVars.ajaxURL + '?action=wordfence_downloadHtaccess&nonce=' + self.nonce + '\" onclick=\"jQuery(\\'#wfFPDNextBut\\').prop(\\'disabled\\', false); return true;\">' + __('Click here to download a backup copy of your .htaccess file now') + '<\/a><br \/><br \/><input type=\"button\" class=\"wf-btn wf-btn-default\" name=\"but1\" id=\"wfFPDNextBut\" value=\"Click to fix .htaccess\" disabled=\"disabled\" onclick=\"WFAD.fixFPD_WriteHtAccess(' + issueID + ');\" \/>');\n\t\t\t\t\t} else if (res.nginx) {\n\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), title, __('You are using an Nginx web server and using a FastCGI processor like PHP5-FPM. You will need to manually modify your php.ini to disable <em>display_error<\/em>'));\n\t\t\t\t\t} else if (res.err) {\n\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"We encountered a problem\"), sprintf(__(\"We can't modify your .htaccess file for you because: %s\"), res.err));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tfixFPD_WriteHtAccess: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tself.colorboxClose();\n\t\t\t\tthis.ajax('wordfence_fixFPD', {\n\t\t\t\t\tissueID: issueID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"File restored OK\"), __(\"The Full Path disclosure issue has been fixed\"));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tWFAD.colorboxError(res.cerrorMsg, res.tokenInvalid);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\thideFile: function(issueID, callback) {\n\t\t\t\tWFAD.ajax('wordfence_checkHtaccess', {}, function(checkRes) {\n\t\t\t\t\tif (checkRes.ok) {\n\t\t\t\t\t\tWFAD.colorboxModalHTML((WFAD.isSmallScreen ? '300px' : '400px'), __('.htaccess change'), __('We are about to change your <em>.htaccess<\/em> file. Please make a backup of this file before proceeding.')\n\t\t\t\t\t\t\t+ '<br\/>'\n\t\t\t\t\t\t\t+ '<a id=\"dlButton\" href=\"' + WordfenceAdminVars.ajaxURL + '?action=wordfence_downloadHtaccess&nonce=' + WFAD.nonce + '\">' + __('Click here to download a backup copy of your .htaccess file now') + '<\/a>'\n\t\t\t\t\t\t\t+ '<br \/><br \/><input type=\"button\" class=\"wf-btn wf-btn-default\" name=\"but1\" id=\"wfFPDNextBut\" value=\"' + __('Click to fix .htaccess') + '\" disabled=\"disabled\" \/>'\n\t\t\t\t\t\t);\n\t\t\t\t\t\t$('#dlButton').on('click', function(e) {\n\t\t\t\t\t\t\t$('#wfFPDNextBut').prop('disabled', false);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('#wfFPDNextBut').on('click', function(e) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t\tWFAD.ajax('wordfence_hideFileHtaccess', {\n\t\t\t\t\t\t\t\tissueID: issueID\n\t\t\t\t\t\t\t}, function(res) {\n\t\t\t\t\t\t\t\tWFAD.colorboxClose();\n\t\t\t\t\t\t\t\ttypeof callback === 'function' && callback(res);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse if (checkRes.nginx) {\n\t\t\t\t\t\tWFAD.colorboxModal((WFAD.isSmallScreen ? '300px' : '400px'), __('Unable to automatically hide file'), __('You are using an Nginx web server and using a FastCGI processor like PHP5-FPM. You will need to manually delete or hide those files.'));\n\t\t\t\t\t}\n\t\t\t\t\telse if (checkRes.err) {\n\t\t\t\t\t\tWFAD.colorboxModal((WFAD.isSmallScreen ? '300px' : '400px'), __(\"We encountered a problem\"), sprintf(__(\"We can't modify your .htaccess file for you because: %s\"), res.err));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\trestoreFile: function(issueID, callback) {\n\t\t\t\tthis.ajax('wordfence_restoreFile', {\n\t\t\t\t\tissueID: issueID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.needsCredentials) {\n\t\t\t\t\t\tdocument.location.href = res.redirect;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\ttypeof callback === 'function' && callback(res);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdisableDirectoryListing: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tvar title = \"Disable Directory Listing\";\n\t\t\t\tissueID = parseInt(issueID);\n\n\t\t\t\tthis.ajax('wordfence_checkHtaccess', {}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), title, __('We are about to change your <em>.htaccess<\/em> file. Please make a backup of this file before proceeding.')\n\t\t\t\t\t\t\t+ '<br\/>'\n\t\t\t\t\t\t\t+ '<a href=\"' + WordfenceAdminVars.ajaxURL + '?action=wordfence_downloadHtaccess&nonce=' + self.nonce + '\" onclick=\"jQuery(\\'#wf-htaccess-confirm\\').prop(\\'disabled\\', false); return true;\">' + __('Click here to download a backup copy of your .htaccess file now') + '<\/a>' +\n\t\t\t\t\t\t\t'<br \/><br \/>' +\n\t\t\t\t\t\t\t'<button class=\"wf-btn wf-btn-default\" type=\"button\" id=\"wf-htaccess-confirm\" disabled=\"disabled\" onclick=\"WFAD.confirmDisableDirectoryListing(' + issueID + ');\">' + __('Add code to .htaccess') + '<\/button>');\n\t\t\t\t\t} else if (res.nginx) {\n\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), __(\"You are using Nginx as your web server. You'll need to disable autoindexing in your nginx.conf. See the <a target='_blank'  rel='noopener noreferrer' href='https:\/\/nginx.org\/en\/docs\/http\/ngx_http_autoindex_module.html'>Nginx docs for more info<\/a> on how to do this.\"));\n\t\t\t\t\t} else if (res.err) {\n\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"We encountered a problem\"), sprintf(__(\"We can't modify your .htaccess file for you because: %s\"), res.err));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tconfirmDisableDirectoryListing: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.colorboxClose();\n\t\t\t\tthis.ajax('wordfence_disableDirectoryListing', {\n\t\t\t\t\tissueID: issueID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Directory Listing Disabled\"), __(\"Directory listing has been disabled on your server.\"));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\/\/self.loadIssues(function() {\n\t\t\t\t\t\t\/\/\tself.colorbox('400px', 'An error occurred', res.errorMsg);\n\t\t\t\t\t\t\/\/});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdeleteIssue: function(id) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_deleteIssue', {id: id}, function(res) {\n\t\t\t\t\tself.loadIssues();\n\t\t\t\t});\n\t\t\t},\n\t\t\tupdateIssueStatus: function(id, st, callback) {\n\t\t\t\tthis.ajax('wordfence_updateIssueStatus', {id: id, 'status': st}, function(res) {\n\t\t\t\t\ttypeof callback === 'function' && callback(res);\n\t\t\t\t});\n\t\t\t},\n\t\t\tes: function(val) {\n\t\t\t\tif (val) {\n\t\t\t\t\treturn val;\n\t\t\t\t} else {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t},\n\t\t\tnoQuotes: function(str) {\n\t\t\t\treturn str.replace(\/\"\/g, '&#34;').replace(\/\\'\/g, '&#145;');\n\t\t\t},\n\t\t\tcommify: function(num) {\n\t\t\t\treturn (\"\" + num).replace(\/(\\d)(?=(\\d\\d\\d)+(?!\\d))\/g, \"$1,\");\n\t\t\t},\n\t\t\tswitchToLiveTab: function(elem) {\n\t\t\t\tjQuery('.wfTab1').removeClass('selected');\n\t\t\t\tjQuery(elem).addClass('selected');\n\t\t\t\tjQuery('.wfDataPanel').hide();\n\t\t\t\tvar self = this;\n\t\t\t\tjQuery('#wfActivity').fadeIn(function() {\n\t\t\t\t\tself.completeLiveTabSwitch();\n\t\t\t\t});\n\t\t\t},\n\t\t\tcompleteLiveTabSwitch: function() {\n\t\t\t\tthis.ajax('wordfence_loadActivityLog', {}, function(res) {\n\t\t\t\t\tvar html = '<a href=\"#\" class=\"wfALogMailLink\" onclick=\"WFAD.emailActivityLog(); return false;\" role=\"button\"><\/a><a href=\"#\" class=\"wfALogReloadLink\" onclick=\"WFAD.reloadActivityData(); return false;\" role=\"button\"><\/a>';\n\t\t\t\t\tif (res.events && res.events.length > 0) {\n\t\t\t\t\t\tjQuery('#wfActivity').empty();\n\t\t\t\t\t\tfor (var i = 0; i < res.events.length; i++) {\n\t\t\t\t\t\t\tvar timeTaken = '0.0000';\n\t\t\t\t\t\t\tif (res.events[i + 1]) {\n\t\t\t\t\t\t\t\ttimeTaken = (res.events[i].ctime - res.events[i + 1].ctime).toFixed(4);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar red = \"\";\n\t\t\t\t\t\t\tif (res.events[i].type == 'error') {\n\t\t\t\t\t\t\t\tred = ' class=\"wfWarn\" ';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thtml += '<div ' + red + 'class=\"wfALogEntry\"><span ' + red + 'class=\"wfALogTime\">[' + res.events[i].type + '&nbsp;:&nbsp;' + timeTaken + '&nbsp;:&nbsp;' + res.events[i].timeAgo + ' ago]<\/span>&nbsp;' + res.events[i].msg + \"<\/div>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjQuery('#wfActivity').html(html);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjQuery('#wfActivity').html(\"<p>&nbsp;&nbsp;\" + __('No activity to report yet. Please complete your first scan.') + \"<\/p>\");\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\temailActivityLog: function() {\n\t\t\t\tthis.colorboxModalHTML((this.isSmallScreen ? '300px' : '400px'), __('Email Wordfence Activity Log'), __(\"Enter the email address you would like to send the Wordfence activity log to. Note that the activity log may contain thousands of lines of data. This log is usually only sent to a member of the Wordfence support team. It also contains your PHP configuration from the phpinfo() function for diagnostic data.\") + \"<br \/><br \/><input type='text' value='wftest@wordfence.com' size='20' id='wfALogRecip' \/><input class='wf-btn wf-btn-default' type='button' value='\" + __('Send') + \"' onclick=\\\"WFAD.completeEmailActivityLog();\\\" \/>\");\n\t\t\t},\n\t\t\tcompleteEmailActivityLog: function() {\n\t\t\t\tWFAD.colorboxClose();\n\t\t\t\tvar email = jQuery('#wfALogRecip').val();\n\t\t\t\tif (!\/^[^@]+@[^@]+$\/.test(email)) {\n\t\t\t\t\talert(__(\"Please enter a valid email address.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_sendActivityLog', {email: jQuery('#wfALogRecip').val()}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Activity Log Sent'), sprintf(__(\"Your Wordfence activity log was sent to %s\"), email));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\treloadActivityData: function() {\n\t\t\t\tjQuery('#wfActivity').html('<div class=\"wfLoadingWhite32\"><\/div>'); \/\/&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>&nbsp;<br \/>\n\t\t\t\tthis.completeLiveTabSwitch();\n\t\t\t},\n\t\t\tswitchToSummaryTab: function(elem) {\n\t\t\t\tjQuery('.wfTab1').removeClass('selected');\n\t\t\t\tjQuery(elem).addClass('selected');\n\t\t\t\tjQuery('.wfDataPanel').hide();\n\t\t\t\tjQuery('#wfSummaryTables').fadeIn();\n\t\t\t},\n\t\t\tswitchIssuesTab: function(elem, type) {\n\t\t\t\tjQuery('.wfTab2').removeClass('selected');\n\t\t\t\tjQuery('.wfIssuesContainer').hide();\n\t\t\t\tjQuery(elem).addClass('selected');\n\t\t\t\tthis.visibleIssuesPanel = type;\n\t\t\t\tjQuery('#wfIssues_' + type).fadeIn();\n\t\t\t},\n\t\t\tswitchTab: function(tabElement, tabClass, contentClass, selectedContentID, callback) {\n\t\t\t\tjQuery('.' + tabClass).removeClass('selected');\n\t\t\t\tjQuery(tabElement).addClass('selected');\n\t\t\t\tjQuery('.' + contentClass).hide().html('<div class=\"wfLoadingWhite32\"><\/div>');\n\t\t\t\tvar func = function() {\n\t\t\t\t};\n\t\t\t\tif (callback) {\n\t\t\t\t\tfunc = function() {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tjQuery('#' + selectedContentID).fadeIn(func);\n\t\t\t},\n\t\t\treloadLiveTraffic: function() {\n\t\t\t\tthis.newestActivityTime = 0;\n\t\t\t\tthis.updateLiveTraffic(true);\n\t\t\t},\n\t\t\tucfirst: function(str) {\n\t\t\t\tstr = \"\" + str;\n\t\t\t\treturn str.charAt(0).toUpperCase() + str.slice(1);\n\t\t\t},\n\t\t\tmakeIPTrafLink: function(IP) {\n\t\t\t\treturn WordfenceAdminVars.siteBaseURL + '?_wfsf=IPTraf&nonce=' + this.nonce + '&IP=' + encodeURIComponent(IP);\n\t\t\t},\n\t\t\tgetRealFileParameters: function(data) {\n\t\t\t\tif ('realFile' in data) {\n\t\t\t\t\treturn '&realFile=' + encodeURIComponent(this.es(data['realFile'])) + '&realFileToken=' + encodeURIComponent(this.es(data['realFileToken']));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\t\t\t},\n\t\t\tmakeDiffLink: function(dat) {\n\t\t\t\treturn WordfenceAdminVars.siteBaseURL + '?_wfsf=diff&nonce=' + this.nonce +\n\t\t\t\t\t'&file=' + encodeURIComponent(this.es(dat['file'])) +\n\t\t\t\t\tthis.getRealFileParameters(dat) +\n\t\t\t\t\t'&cType=' + encodeURIComponent(this.es(dat['cType'])) +\n\t\t\t\t\t'&cKey=' + encodeURIComponent(this.es(dat['cKey'])) +\n\t\t\t\t\t'&cName=' + encodeURIComponent(this.es(dat['cName'])) +\n\t\t\t\t\t'&cVersion=' + encodeURIComponent(this.es(dat['cVersion']));\n\t\t\t},\n\t\t\tmakeViewFileLink: function(data) {\n\t\t\t\treturn WordfenceAdminVars.siteBaseURL + '?_wfsf=view&nonce=' + this.nonce + '&file=' + encodeURIComponent(data.file) + this.getRealFileParameters(data);\n\t\t\t},\n\t\t\tmakeDownloadFileLink: function(data) {\n\t\t\t\treturn WordfenceAdminVars.siteBaseURL + '?_wfsf=download&nonce=' + this.nonce + '&file=' + encodeURIComponent(data.file) + this.getRealFileParameters(data);\n\t\t\t},\n\t\t\tmakeViewOptionLink: function(option, siteID) {\n\t\t\t\treturn WordfenceAdminVars.siteBaseURL + '?_wfsf=viewOption&nonce=' + this.nonce + '&option=' + encodeURIComponent(option) + '&site_id=' + encodeURIComponent(siteID);\n\t\t\t},\n\t\t\tparseHashes: function() {\n\t\t\t\tvar hashes = window.location.hash.replace('%23', '#');\n\t\t\t\tvar splitHashes = hashes.split('#');\n\t\t\t\tvar result = [];\n\t\t\t\tfor (var i = 0; i < splitHashes.length; i++) {\n\t\t\t\t\tif (splitHashes[i].length > 0) {\n\t\t\t\t\t\tresult.push(splitHashes[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\t\t\tmakeTimeAgo: function(t) {\n\t\t\t\tvar months = Math.floor(t \/ (86400 * 30));\n\t\t\t\tvar days = Math.floor(t \/ 86400);\n\t\t\t\tvar hours = Math.floor(t \/ 3600);\n\t\t\t\tvar minutes = Math.floor(t \/ 60);\n\t\t\t\tif (months > 0) {\n\t\t\t\t\tdays -= months * 30;\n\t\t\t\t\treturn this.pluralize(months, 'month', days, 'day');\n\t\t\t\t} else if (days > 0) {\n\t\t\t\t\thours -= days * 24;\n\t\t\t\t\treturn this.pluralize(days, 'day', hours, 'hour');\n\t\t\t\t} else if (hours > 0) {\n\t\t\t\t\tminutes -= hours * 60;\n\t\t\t\t\treturn this.pluralize(hours, 'hour', minutes, 'min');\n\t\t\t\t} else if (minutes > 0) {\n\t\t\t\t\t\/\/t -= minutes * 60;\n\t\t\t\t\treturn this.pluralize(minutes, 'minute');\n\t\t\t\t} else {\n\t\t\t\t\treturn Math.round(t) + \" seconds\";\n\t\t\t\t}\n\t\t\t},\n\t\t\tpluralize: function(m1, t1, m2, t2) {\n\t\t\t\tif (m1 != 1) {\n\t\t\t\t\tt1 = t1 + 's';\n\t\t\t\t}\n\t\t\t\tif (m2 != 1) {\n\t\t\t\t\tt2 = t2 + 's';\n\t\t\t\t}\n\t\t\t\tif (m1 && m2) {\n\t\t\t\t\treturn m1 + ' ' + t1 + ' ' + m2 + ' ' + t2;\n\t\t\t\t} else {\n\t\t\t\t\treturn m1 + ' ' + t1;\n\t\t\t\t}\n\t\t\t},\n\t\t\tisValidIP: function(ip) {\n\t\t\t\tif (!ip) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tip = ip.replace(\/ \/g, '');\n\t\t\t\tif (ip.match(\/^(?:\\d{1,3}(?:\\.|$)){4}\/)) { \/\/IPv4\n\t\t\t\t\tvar octets = ip.split('.');\n\t\t\t\t\tif (octets.length != 4) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tfor (var i = 0; i < octets.length; i++) {\n\t\t\t\t\t\tif (parseInt(octets[i]) > 255) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn !!this.inet_pton(ip);\n\t\t\t\t}\n\t\t\t\telse if (ip.match(\/^((?:[\\da-f]{1,4}(?::|)){0,8})(::)?((?:[\\da-f]{1,4}(?::|)){0,8})$\/i)) { \/\/IPv6\n\t\t\t\t\tif (ip == '::') {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar colonCount = ip.split(':').length - 1;\n\t\t\t\t\tvar doubleColonPos = ip.indexOf('::');\n\t\t\t\t\tif (doubleColonPos > -1) {\n\t\t\t\t\t\tvar expansionLength = ((doubleColonPos == 0 || doubleColonPos == ip.length - 2) ? 9 : 8) - colonCount;\n\t\t\t\t\t\tif (expansionLength == 0) { \/\/Double-colon in a full IPv6 address\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar expansion = '';\n\t\t\t\t\t\tfor (i = 0; i < expansionLength; i++) {\n\t\t\t\t\t\t\texpansion += ':0000';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tip = ip.replace('::', expansion + ':');\n\t\t\t\t\t\tip = ip.replace(\/(?:^\\:|\\:$)\/, '', ip);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar ipGroups = ip.split(':');\n\t\t\t\t\tvar ipBin = '';\n\t\t\t\t\tfor (i = 0; i < ipGroups.length; i++) {\n\t\t\t\t\t\tvar group = ipGroups[i];\n\t\t\t\t\t\tif (group.length > 4 || group.length == 0) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgroup = (\"0000\" + group).slice(-4);\n\t\t\t\t\t\tvar b1 = parseInt(group.slice(0, 2), 16);\n\t\t\t\t\t\tvar b2 = parseInt(group.slice(-2), 16);\n\t\t\t\t\t\tif (isNaN(b1) || isNaN(b2)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tipBin += String.fromCharCode(b1) + String.fromCharCode(b2);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ipBin.length == 16 ? true : false;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tparseIPRange: function(range) {\n\t\t\t\tif (!range) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\trange = range.replace(\/ \/g, '');\n\t\t\t\trange = range.replace(\/[\\u2013-\\u2015]\/g, '-'); \/\/Non-hyphen dashes to hyphen\n\t\t\t\tif (range && \/^[^\\-]+\\-[^\\-]+$\/.test(range)) {\n\t\t\t\t\tvar count = 1;\n\t\t\t\t\tvar countOverflow = false;\n\n\t\t\t\t\tvar ips = range.split('-');\n\t\t\t\t\tvar ip1 = this.inet_pton(ips[0]);\n\t\t\t\t\tvar ip2 = this.inet_pton(ips[1]);\n\n\t\t\t\t\tif (ip1 === false || !this.isValidIP(ips[0]) || ip2 === false || !this.isValidIP(ips[1])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\/\/Both to 16-byte binary strings\n\t\t\t\t\tvar binStart = (\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\" + ip1).slice(-16);\n\t\t\t\t\tvar binEnd = (\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\" + ip2).slice(-16);\n\n\t\t\t\t\tfor (var i = 0; i < binStart.length; i++) {\n\t\t\t\t\t\tvar n0 = binStart.charCodeAt(i);\n\t\t\t\t\t\tvar n1 = binEnd.charCodeAt(i);\n\n\t\t\t\t\t\tif (i < 11 && n1 - n0 > 0) { \/\/Based on Number.MAX_SAFE_INTEGER, which equals 2 ^ 53 - 1. Any of the first 9 bytes and part of the 10th that add to the range will put us over that\n\t\t\t\t\t\t\tcountOverflow = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (i < 11 && n1 - n0 < 0) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcount += (n1 - n0) << (8 * (15 - i));\n\t\t\t\t\t\tif (count < 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn {start: ip1, end: ip2, count: count, countOverflow: countOverflow};\n\t\t\t\t}\n\t\t\t\telse if (range && \/^[^\\\/]+\\\/\\d+$\/.test(range)) {\n\t\t\t\t\tvar count = 1;\n\t\t\t\t\tvar countOverflow = false;\n\n\t\t\t\t\tvar components = range.split('\/');\n\t\t\t\t\tvar ip = this.inet_pton(components[0]);\n\t\t\t\t\tvar bits = parseInt(components[1]);\n\t\t\t\t\t\n\t\t\t\t\tif (ip === false || !this.isValidIP(components[0])) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar binIP = (\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\" + ip).slice(-16);\n\t\t\t\t\tif (binIP.slice(12) === \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\") {\n\t\t\t\t\t\tif (bits < 1 || bits > 32) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (bits < 1 || bits > 128) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (bits >= 53) {\n\t\t\t\t\t\tcountOverflow = true;\n\t\t\t\t\t\tcount = Math.pow(2, 53) - 1; \/* Number.MAX_SAFE_INTEGER is unavailable in IE *\/\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tcount = Math.pow(2, bits);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {ip: ip, bits: bits, count: count, countOverflow: countOverflow};\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tcalcRangeTotal: function() {\n\t\t\t\tvar range = jQuery('#ipRange').val();\n\t\t\t\tif (!range) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\trange = range.replace(\/ \/g, '');\n\t\t\t\trange = range.replace(\/[\\u2013-\\u2015]\/g, '-'); \/\/Non-hyphen dashes to hyphen\n\t\t\t\tif (range && \/^[^\\-]+\\-[^\\-]+$\/.test(range)) {\n\t\t\t\t\tvar count = 1;\n\t\t\t\t\tvar countOverflow = false;\n\t\t\t\t\tvar badRange = false;\n\t\t\t\t\tvar badIP = false;\n\t\t\t\t\t\n\t\t\t\t\tvar ips = range.split('-');\n\t\t\t\t\tvar ip1 = this.inet_pton(ips[0]);\n\t\t\t\t\tvar ip2 = this.inet_pton(ips[1]);\n\t\t\t\t\t\n\t\t\t\t\tif (ip1 === false || ip2 === false) {\n\t\t\t\t\t\tbadIP = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t\/\/Both to 16-byte binary strings\n\t\t\t\t\t\tvar binStart = (\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\" + ip1).slice(-16);\n\t\t\t\t\t\tvar binEnd = (\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\" + ip2).slice(-16);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var i = 0; i < binStart.length; i++) {\n\t\t\t\t\t\t\tvar n0 = binStart.charCodeAt(i);\n\t\t\t\t\t\t\tvar n1 = binEnd.charCodeAt(i);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (i < 11 && n1 - n0 > 0) { \/\/Based on Number.MAX_SAFE_INTEGER, which equals 2 ^ 53 - 1. Any of the first 9 bytes and part of the 10th that add to the range will put us over that\n\t\t\t\t\t\t\t\tcountOverflow = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (i < 11 && n1 - n0 < 0) {\n\t\t\t\t\t\t\t\tbadRange = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcount += (n1 - n0) << (8 * (15 - i));\n\t\t\t\t\t\t\tif (count < 1) {\n\t\t\t\t\t\t\t\tbadRange = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (badIP) {\n\t\t\t\t\t\tjQuery('#wfShowRangeTotal').html(\"<span style=\\\"color: #F00;\\\">Invalid IP entered.<\/span>\"); \n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (badRange) {\n\t\t\t\t\t\tjQuery('#wfShowRangeTotal').html(\"<span style=\\\"color: #F00;\\\">Invalid. Starting IP is greater than ending IP.<\/span>\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if (countOverflow) {\n\t\t\t\t\t\tjQuery('#wfShowRangeTotal').html(\"<span style=\\\"color: #0A0;\\\">Valid: &gt;281474976710656 addresses in range.<\/span>\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tjQuery('#wfShowRangeTotal').html(\"<span style=\\\"color: #0A0;\\\">Valid: \" + count + \" addresses in range.<\/span>\"); \n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjQuery('#wfShowRangeTotal').empty();\n\t\t\t\t}\n\t\t\t},\n\t\t\tcompleteWhois: function(res, ret) {\n\t\t\t\tret = ret === undefined ? false : !!ret;\n\t\t\t\tvar self = this;\n\t\t\t\tvar rawhtml = \"\";\n\t\t\t\tvar ipRangeTmpl = jQuery(\"<div><div class='wf-flex-row'>\" +\n\t\t\t\t\t\"<a class=\\\"wf-btn wf-btn-default wf-flex-row-0\\\" href=\\\"${adminUrl}\\\">\" + __('Block This Network') + \"<\/a>\" +\n\t\t\t\t\t\"<span class='wf-flex-row-1 wf-padding-add-left'>{{html totalStr}}{{if totalStr.indexOf(ipRange) == -1}} (${ipRange}){{\/if}}\" +\n\t\t\t\t\t'{{if (totalIPs)}}<br>[' + __('${totalIPs} addresses in this network') + ']{{\/if}}' +\n\t\t\t\t\t\"<\/span><\/div><\/div>\");\n\t\t\t\tif (res.ok && res.result && res.result.rawdata && res.result.rawdata.length > 0) {\n\t\t\t\t\tfor (var i = 0; i < res.result.rawdata.length; i++) {\n\t\t\t\t\t\tres.result.rawdata[i] = jQuery('<div \/>').text(res.result.rawdata[i]).html();\n\t\t\t\t\t\tres.result.rawdata[i] = res.result.rawdata[i].replace(\/([a-zA-Z0-9\\-._+]+@[a-zA-Z0-9\\-._]+)\/, \"<a href=\\\"mailto:$1\\\">$1<\\\/a>\");\n\t\t\t\t\t\tres.result.rawdata[i] = res.result.rawdata[i].replace(\/(https?:\\\/\\\/[a-zA-Z0-9\\-._+\\\/?&=#%:@;]+)\/, \"<a target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\" href=\\\"$1\\\">$1<\\\/a>\");\n\n\t\t\t\t\t\tfunction wfm21(str, startStr, ipRange, offset, totalStr) {\n\t\t\t\t\t\t\tvar ips = ipRange.split(\/\\s*\\-\\s*\/);\n\t\t\t\t\t\t\tvar totalIPs = NaN;\n\t\t\t\t\t\t\tif (ips[0].indexOf(':') < 0) {\n\t\t\t\t\t\t\t\tvar ip1num = self.inet_aton(ips[0]);\n\t\t\t\t\t\t\t\tvar ip2num = self.inet_aton(ips[1]);\n\t\t\t\t\t\t\t\ttotalIPs = ip2num - ip1num + 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar adminUrl = \"admin.php?page=WordfenceWAF&wfBlockRange=\" + encodeURIComponent(ipRange) + \"#top#blocking\";\n\t\t\t\t\t\t\treturn jQuery(ipRangeTmpl).tmpl({\n\t\t\t\t\t\t\t\tadminUrl: adminUrl,\n\t\t\t\t\t\t\t\ttotalStr: totalStr,\n\t\t\t\t\t\t\t\tipRange: ipRange,\n\t\t\t\t\t\t\t\ttotalIPs: totalIPs\n\t\t\t\t\t\t\t}).wrapAll('<div>').parent().html();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfunction buildRangeLink2(str, startStr, octet1, octet2, octet3, octet4, cidrRange, offset, totalStr) {\n\n\t\t\t\t\t\t\toctet3 = octet3.length > 0 ? octet3 : '0';\n\t\t\t\t\t\t\toctet4 = octet4.length > 0 ? octet4 : '0';\n\n\t\t\t\t\t\t\tvar rangeStart = [octet1, octet2, octet3, octet4].join('.');\n\t\t\t\t\t\t\tvar rangeStartNum = self.inet_aton(rangeStart);\n\t\t\t\t\t\t\tcidrRange = parseInt(cidrRange, 10);\n\t\t\t\t\t\t\tif (!isNaN(rangeStartNum) && cidrRange > 0 && cidrRange < 32) {\n\t\t\t\t\t\t\t\tvar rangeEndNum = rangeStartNum;\n\t\t\t\t\t\t\t\tfor (var i = 32, j = 1; i >= cidrRange; i--, j *= 2) {\n\t\t\t\t\t\t\t\t\trangeEndNum |= j;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trangeEndNum = rangeEndNum >>> 0;\n\t\t\t\t\t\t\t\tvar ipRange = self.inet_ntoa(rangeStartNum) + ' - ' + self.inet_ntoa(rangeEndNum);\n\t\t\t\t\t\t\t\tvar totalIPs = rangeEndNum - rangeStartNum + 1;\n\t\t\t\t\t\t\t\tvar adminUrl = \"admin.php?page=WordfenceWAF&wfBlockRange=\" + encodeURIComponent(ipRange) + \"#top#blocking\";\n\t\t\t\t\t\t\t\treturn jQuery(ipRangeTmpl).tmpl({\n\t\t\t\t\t\t\t\t\tadminUrl: adminUrl,\n\t\t\t\t\t\t\t\t\ttotalStr: totalStr,\n\t\t\t\t\t\t\t\t\tipRange: ipRange,\n\t\t\t\t\t\t\t\t\ttotalIPs: totalIPs\n\t\t\t\t\t\t\t\t}).wrapAll('<div>').parent().html();\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn str;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rangeRegex = \/(.*?)(\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3} - \\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}|[a-f0-9:.]{3,} - [a-f0-9:.]{3,}).*$\/i;\n\t\t\t\t\t\tvar cidrRegex = \/(.*?)(\\d{1,3})\\.(\\d{1,3})\\.?(\\d{0,3})\\.?(\\d{0,3})\\\/(\\d{1,3}).*$\/i;\n\t\t\t\t\t\tif (rangeRegex.test(res.result.rawdata[i])) {\n\t\t\t\t\t\t\tres.result.rawdata[i] = res.result.rawdata[i].replace(rangeRegex, wfm21);\n\t\t\t\t\t\t\trawhtml += res.result.rawdata[i];\n\t\t\t\t\t\t} else if (cidrRegex.test(res.result.rawdata[i])) {\n\t\t\t\t\t\t\tres.result.rawdata[i] = res.result.rawdata[i].replace(cidrRegex, buildRangeLink2);\n\t\t\t\t\t\t\trawhtml += res.result.rawdata[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\trawhtml += res.result.rawdata[i] + \"<br \/>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\trawhtml = rawhtml.replace(\/<\\\/div><br \\\/>\/g, '<\/div>');\n\t\t\t\t} else {\n\t\t\t\t\tvar message = __('Sorry, but no data for that IP or domain was found.');\n\t\t\t\t\tvar content = jQuery('<span style=\"color: #F00;\">');\n\t\t\t\t\tcontent.text(message);\n\t\t\t\t\trawhtml = content.get(0).outerHTML;\n\t\t\t\t}\n\t\t\t\tif (ret) {\n\t\t\t\t\treturn rawhtml;\n\t\t\t\t}\n\t\t\t\tjQuery('#wfrawhtml').html(rawhtml);\n\t\t\t},\n\t\t\tblockIPUARange: function(ipRange, hostname, uaRange, referer, reason) {\n\t\t\t\tif (!\/\\w+\/.test(reason)) {\n\t\t\t\t\tthis.colorboxModal('300px', __(\"Please specify a reason\"), __(\"You forgot to include a reason you're blocking this IP range. We ask you to include this for your own record keeping.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tipRange = ipRange.replace(\/ \/g, '').toLowerCase();\n\t\t\t\tipRange = ipRange.replace(\/[\\u2013-\\u2015]\/g, '-'); \/\/Non-hyphen dashes to hyphen\n\t\t\t\tif (ipRange) {\n\t\t\t\t\tvar range = ipRange.split('-'),\n\t\t\t\t\t\tvalidRange;\n\t\t\t\t\tif (range.length !== 2) {\n\t\t\t\t\t\tvalidRange = false;\n\t\t\t\t\t} else if (range[0].match(':')) {\n\t\t\t\t\t\tvalidRange = this.inet_pton(range[0]) !== false && this.inet_pton(range[1]) !== false;\n\t\t\t\t\t} else if (range[0].match('.')) {\n\t\t\t\t\t\tvalidRange = this.inet_aton(range[0]) !== false && this.inet_aton(range[1]) !== false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!validRange) {\n\t\t\t\t\t\tthis.colorboxModal('300px', __('Specify a valid IP range'), __(\"Please specify a valid IP address range in the form of \\\"1.2.3.4 - 1.2.3.5\\\" without quotes. Make sure the dash between the IP addresses in a normal dash (a minus sign on your keyboard) and not another character that looks like a dash.\"));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (hostname && !\/^[a-z0-9\\.\\*\\-]+$\/i.test(hostname)) {\n\t\t\t\t\tthis.colorboxModalHTML('300px', __('Specify a valid hostname'), sprintf(__('%s is not valid hostname'), '<i>' + this.htmlEscape(hostname) + '<\/i>'));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!(\/\\w+\/.test(ipRange) || \/\\w+\/.test(uaRange) || \/\\w+\/.test(referer) || \/\\w+\/.test(hostname))) {\n\t\t\t\t\tthis.colorboxModal('300px', __('Specify an IP range, Hostname or Browser pattern'), __(\"Please specify either an IP address range, Hostname or a web browser pattern to match.\"));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_blockIPUARange', {\n\t\t\t\t\tipRange: ipRange,\n\t\t\t\t\thostname: hostname,\n\t\t\t\t\tuaRange: uaRange,\n\t\t\t\t\treferer: referer,\n\t\t\t\t\treason: reason\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.loadBlockRanges();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tblockIP: function(IP, reason, callback) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_blockIP', {\n\t\t\t\t\tIP: IP,\n\t\t\t\t\treason: reason\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.errorMsg) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.reloadLiveTraffic();\n\t\t\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tunlockOutIP: function(IP) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_unlockOutIP', {\n\t\t\t\t\tIP: IP\n\t\t\t\t}, function(res) {\n\t\t\t\t\tself.staticTabChanged();\n\t\t\t\t});\n\t\t\t},\n\t\t\tunblockIP: function(IP, callback) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_unblockIP', {\n\t\t\t\t\tIP: IP\n\t\t\t\t}, function(res) {\n\t\t\t\t\tself.reloadLiveTraffic();\n\t\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t\t});\n\t\t\t},\n\t\t\tunblockNetwork: function(id) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_unblockRange', {\n\t\t\t\t\tid: id\n\t\t\t\t}, function(res) {\n\t\t\t\t\tself.reloadLiveTraffic();\n\t\t\t\t});\n\t\t\t},\n\t\t\tunblockIPTwo: function(IP) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_unblockIP', {\n\t\t\t\t\tIP: IP\n\t\t\t\t}, function(res) {\n\t\t\t\t\tself.staticTabChanged();\n\t\t\t\t});\n\t\t\t},\n\t\t\tpermBlockIP: function(IP) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_permBlockIP', {\n\t\t\t\t\tIP: IP\n\t\t\t\t}, function(res) {\n\t\t\t\t\tself.staticTabChanged();\n\t\t\t\t});\n\t\t\t},\n\t\t\tmakeElemID: function() {\n\t\t\t\treturn 'wfElemGen' + this.elementGeneratorIter++;\n\t\t\t},\n\t\t\tpulse: function(sel) {\n\t\t\t\tjQuery(sel).fadeIn(function() {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tjQuery(sel).fadeOut();\n\t\t\t\t\t}, 2000);\n\t\t\t\t});\n\t\t\t},\n\t\t\ttwoFacStatus: function(msg) {\n\t\t\t\tthis.colorboxModal('300px', __('Two Factor Status'), msg);\n\t\t\t},\n\t\t\taddTwoFactor: function(username, phone, mode) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_addTwoFactor', {\n\t\t\t\t\tusername: username,\n\t\t\t\t\tphone: phone,\n\t\t\t\t\tmode: mode\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tif (mode == 'authenticator') {\n\t\t\t\t\t\t\tvar totpURL = \"otpauth:\/\/totp\/\" + encodeURI(res.homeurl) + encodeURI(\" (\" + res.username + \")\") + \"?\" + res.uriQueryString + \"&issuer=Wordfence\"; \t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar message = __('Scan the code below with your authenticator app to add this account. Some authenticator apps also allow you to type in the text version instead.') + \"<br><div id=\\\"wfTwoFactorQRCodeTable\\\"><\/div><br><strong>\" + __('Key:') + \"<\/strong> <input type=\\\"text\\\"\" + (self.isSmallScreen ? \"\" : \" size=\\\"45\\\"\") + \" value=\\\"\" + res.base32Secret + \"\\\" onclick=\\\"this.select();\\\" readonly>\";\n\t\t\t\t\t\t\tif (res.recoveryCodes.length > 0) {\n\t\t\t\t\t\t\t\tmessage = message + \"<br><br><strong>\" + __('Recovery Codes') + \"<\/strong><br><p>\" + sprintf(__(\"Use one of these %s codes to log in if you lose access to your authenticator device. Codes are 16 characters long, plus optional spaces. Each one may be used only once.\"), res.recoveryCodes.length) + \"<\/p><ul id=\\\"wfTwoFactorRecoveryCodes\\\">\";\n\n\t\t\t\t\t\t\t\tvar recoveryCodeFileContents = __('Cellphone Sign-In Recovery Codes') + \" - \" + res.homeurl + \" (\" + res.username + \")\\r\\n\";\n\t\t\t\t\t\t\t\trecoveryCodeFileContents = recoveryCodeFileContents + \"\\r\\n\" + __(\"Each line of 16 letters and numbers is a single recovery code, with optional spaces for readability. When typing your password, enter \\\"wf\\\" followed by the entire code like \\\"mypassword wf1234 5678 90AB CDEF\\\". If your site shows a separate prompt for entering a code after entering only your username and password, enter only the code like \\\"1234 5678 90AB CDEF\\\". Your recovery codes are:\") + \"\\r\\n\\r\\n\";\n\t\t\t\t\t\t\t\tvar splitter = \/.{4}\/g;\n\t\t\t\t\t\t\t\tfor (var i = 0; i < res.recoveryCodes.length; i++) { \n\t\t\t\t\t\t\t\t\tvar code = res.recoveryCodes[i];\n\t\t\t\t\t\t\t\t\tvar chunks = code.match(splitter);\n\t\t\t\t\t\t\t\t\tmessage = message + \"<li>\" + chunks[0] + \" \" + chunks[1] + \" \" + chunks[2] + \" \" + chunks[3] + \"<\/li>\";\n\t\t\t\t\t\t\t\t\trecoveryCodeFileContents = recoveryCodeFileContents + chunks[0] + \" \" + chunks[1] + \" \" + chunks[2] + \" \" + chunks[3] + \"\\r\\n\"; \n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tmessage = message + \"<\/ul>\";\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tmessage = message + \"<p class=\\\"wf-center\\\"><a href=\\\"#\\\" class=\\\"wf-btn wf-btn-default\\\" id=\\\"wfTwoFactorDownload\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\"><i class=\\\"dashicons dashicons-download\\\"><\/i> \" + __('Download') + \"<\/a><\/p>\";\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmessage = message + \"<p><em>\" + __(\"This will be shown only once. Keep these codes somewhere safe.\") + \"<\/em><\/p>\";\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '440px'), __(\"Authentication Code\"), message, {onComplete: function() {\n\t\t\t\t\t\t\t\tjQuery('#wfTwoFactorQRCodeTable').qrcode({text: totpURL, width: (self.isSmallScreen ? 175 : 256), height: (self.isSmallScreen ? 175 : 256)});\n\t\t\t\t\t\t\t\tjQuery('#wfTwoFactorDownload').on('click', function(e) {\n\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\tsaveAs(new Blob([recoveryCodeFileContents], {type: \"text\/plain;charset=\" + document.characterSet}), self.htmlEscape(res.homeurl) + \"_\" + self.htmlEscape(res.username) + \"_recoverycodes.txt\");\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tif (res.recoveryCodes.length > 0) {\n\t\t\t\t\t\t\t\tvar message = \"<p>\" + sprintf(__(\"Use one of these %s codes to log in if you are unable to access your phone. Codes are 16 characters long, plus optional spaces. Each one may be used only once.\"), res.recoveryCodes.length) + \"<\/p><ul id=\\\"wfTwoFactorRecoveryCodes\\\">\";\n\n\t\t\t\t\t\t\t\tvar recoveryCodeFileContents = __('Cellphone Sign-In Recovery Codes') + \" - \" + res.homeurl + \" (\" + res.username + \")\\r\\n\";\n\t\t\t\t\t\t\t\trecoveryCodeFileContents = recoveryCodeFileContents + \"\\r\\n\" + __(\"Each line of 16 letters and numbers is a single recovery code, with optional spaces for readability. When typing your password, enter \\\"wf\\\" followed by the entire code like \\\"mypassword wf1234 5678 90AB CDEF\\\". If your site shows a separate prompt for entering a code after entering only your username and password, enter only the code like \\\"1234 5678 90AB CDEF\\\". Your recovery codes are:\") + \"\\r\\n\\r\\n\";\n\t\t\t\t\t\t\t\tvar splitter = \/.{4}\/g;\n\t\t\t\t\t\t\t\tfor (var i = 0; i < res.recoveryCodes.length; i++) {\n\t\t\t\t\t\t\t\t\tvar code = res.recoveryCodes[i];\n\t\t\t\t\t\t\t\t\tvar chunks = code.match(splitter);\n\t\t\t\t\t\t\t\t\tmessage = message + \"<li>\" + chunks[0] + \" \" + chunks[1] + \" \" + chunks[2] + \" \" + chunks[3] + \"<\/li>\";\n\t\t\t\t\t\t\t\t\trecoveryCodeFileContents = recoveryCodeFileContents + chunks[0] + \" \" + chunks[1] + \" \" + chunks[2] + \" \" + chunks[3] + \"\\r\\n\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tmessage = message + \"<p class=\\\"wf-center\\\"><a href=\\\"#\\\" class=\\\"wf-btn wf-btn-default\\\" id=\\\"wfTwoFactorDownload\\\" target=\\\"_blank\\\" rel=\\\"noopener noreferrer\\\"><i class=\\\"dashicons dashicons-download\\\"><\/i> \" + __('Download') + \"<\/a><\/p>\";\n\n\t\t\t\t\t\t\t\tmessage = message + \"<\/ul><p><em>\" + __(\"This will be shown only once. Keep these codes somewhere safe.\") + \"<\/em><\/p>\";\n\n\t\t\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), __(\"Recovery Codes\"), message, {onComplete: function() {\n\t\t\t\t\t\t\t\t\tjQuery('#wfTwoFactorDownload').on('click', function(e) {\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\tsaveAs(new Blob([recoveryCodeFileContents], {type: \"text\/plain;charset=\" + document.characterSet}), self.htmlEscape(res.homeurl) + \"_\" + self.htmlEscape(res.username) + \"_recoverycodes.txt\");\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar updatedTwoFac = jQuery('#wfTwoFacUserTmpl').tmpl({users: [res]});\n\t\t\t\t\t\tjQuery('#twoFactorUser-none').remove();\n\t\t\t\t\t\tjQuery('#wfTwoFacUsers > table > tbody:last-child').append(updatedTwoFac.find('tbody > tr'));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\ttwoFacActivate: function(userID, code) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_twoFacActivate', {\n\t\t\t\t\tuserID: userID,\n\t\t\t\t\tcode: code\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tvar updatedTwoFac = jQuery('#wfTwoFacUserTmpl').tmpl({users: [res]});\n\t\t\t\t\t\tupdatedTwoFac.find('tbody > tr').each(function(index, element) {\n\t\t\t\t\t\t\tjQuery('#' + jQuery(element).attr('id')).replaceWith(element);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tself.twoFacStatus(__('Cellphone Sign-in activated for user.'));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tdelTwoFac: function(userID) {\n\t\t\t\tthis.ajax('wordfence_twoFacDel', {\n\t\t\t\t\tuserID: userID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tjQuery('#twoFactorUser-' + res.userID).fadeOut(function() {\n\t\t\t\t\t\t\tjQuery(this).remove();\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (jQuery('#wfTwoFacUsers > table > tbody:last-child').children().length == 0) {\n\t\t\t\t\t\t\t\tjQuery('#wfTwoFacUsers').html(jQuery('#wfTwoFacUserTmpl').tmpl({users: []}));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tloadTwoFactor: function() {\n\t\t\t\tthis.ajax('wordfence_loadTwoFactor', {}, function(res) {\n\t\t\t\t\tjQuery('#wfTwoFacUsers').html(jQuery('#wfTwoFacUserTmpl').tmpl(res));\n\t\t\t\t});\n\t\t\t},\n\t\t\tgetQueryParam: function(name) {\n\t\t\t\tname = name.replace(\/[\\[]\/, \"\\\\\\[\").replace(\/[\\]]\/, \"\\\\\\]\");\n\t\t\t\tvar regexS = \"[\\\\?&]\" + name + \"=([^&#]*)\";\n\t\t\t\tvar regex = new RegExp(regexS);\n\t\t\t\tvar results = regex.exec(window.location.search);\n\t\t\t\tif (results == null) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t} else {\n\t\t\t\t\treturn decodeURIComponent(results[1].replace(\/\\+\/g, \" \"));\n\t\t\t\t}\n\t\t\t},\n\t\t\tinet_aton: function(dot) {\n\t\t\t\tvar d = dot.split('.');\n\t\t\t\treturn ((((((+d[0]) * 256) + (+d[1])) * 256) + (+d[2])) * 256) + (+d[3]);\n\t\t\t},\n\t\t\tinet_ntoa: function(num) {\n\t\t\t\tvar d = num % 256;\n\t\t\t\tfor (var i = 3; i > 0; i--) {\n\t\t\t\t\tnum = Math.floor(num \/ 256);\n\t\t\t\t\td = num % 256 + '.' + d;\n\t\t\t\t}\n\t\t\t\treturn d;\n\t\t\t},\n\n\t\t\tinet_pton: function(a) {\n\t\t\t\t\/\/  discuss at: http:\/\/phpjs.org\/functions\/inet_pton\/\n\t\t\t\t\/\/ original by: Theriault\n\t\t\t\t\/\/   example 1: inet_pton('::');\n\t\t\t\t\/\/   returns 1: '\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0'\n\t\t\t\t\/\/   example 2: inet_pton('127.0.0.1');\n\t\t\t\t\/\/   returns 2: '\\x7F\\x00\\x00\\x01'\n\n\t\t\t\tvar r, m, x, i, j, f = String.fromCharCode;\n\t\t\t\tm = a.match(\/^(?:\\d{1,3}(?:\\.|$)){4}\/); \/\/ IPv4\n\t\t\t\tif (m) {\n\t\t\t\t\tm = m[0].split('.');\n\t\t\t\t\tm = f(m[0]) + f(m[1]) + f(m[2]) + f(m[3]);\n\t\t\t\t\t\/\/ Return if 4 bytes, otherwise false.\n\t\t\t\t\treturn m.length === 4 ? m : false;\n\t\t\t\t}\n\t\t\t\tr = \/^((?:[\\da-f]{1,4}(?::|)){0,8})(::)?((?:[\\da-f]{1,4}(?::|)){0,8})$\/i;\n\t\t\t\tm = a.match(r); \/\/ IPv6\n\t\t\t\tif (m) {\n\t\t\t\t\tif (a == '::') {\n\t\t\t\t\t\treturn \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";\n\t\t\t\t\t}\n\n\t\t\t\t\tvar colonCount = a.split(':').length - 1;\n\t\t\t\t\tvar doubleColonPos = a.indexOf('::');\n\t\t\t\t\tif (doubleColonPos > -1) {\n\t\t\t\t\t\tvar expansionLength = ((doubleColonPos == 0 || doubleColonPos == a.length - 2) ? 9 : 8) - colonCount;\n\t\t\t\t\t\tvar expansion = '';\n\t\t\t\t\t\tfor (i = 0; i < expansionLength; i++) {\n\t\t\t\t\t\t\texpansion += ':0000';\n\t\t\t\t\t\t}\n\t\t\t\t\t\ta = a.replace('::', expansion + ':');\n\t\t\t\t\t\ta = a.replace(\/(?:^\\:|\\:$)\/, '', a);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar ipGroups = a.split(':');\n\t\t\t\t\tvar ipBin = '';\n\t\t\t\t\tfor (i = 0; i < ipGroups.length; i++) {\n\t\t\t\t\t\tvar group = ipGroups[i];\n\t\t\t\t\t\tif (group.length > 4) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tgroup = (\"0000\" + group).slice(-4);\n\t\t\t\t\t\tvar b1 = parseInt(group.slice(0, 2), 16);\n\t\t\t\t\t\tvar b2 = parseInt(group.slice(-2), 16);\n\t\t\t\t\t\tif (isNaN(b1) || isNaN(b2)) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tipBin += f(b1) + f(b2);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn ipBin.length == 16 ? ipBin : false;\n\t\t\t\t}\n\t\t\t\treturn false; \/\/ Invalid IP.\n\t\t\t},\n\t\t\tinet_ntop: function(a) {\n\t\t\t\t\/\/  discuss at: http:\/\/phpjs.org\/functions\/inet_ntop\/\n\t\t\t\t\/\/ original by: Theriault\n\t\t\t\t\/\/   example 1: inet_ntop('\\x7F\\x00\\x00\\x01');\n\t\t\t\t\/\/   returns 1: '127.0.0.1'\n\t\t\t\t\/\/   example 2: inet_ntop('\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\1');\n\t\t\t\t\/\/   returns 2: '::1'\n\n\t\t\t\tvar i = 0,\n\t\t\t\t\tm = '',\n\t\t\t\t\tc = [];\n\t\t\t\ta += '';\n\t\t\t\tif (a.length === 4) { \/\/ IPv4\n\t\t\t\t\treturn [\n\t\t\t\t\t\ta.charCodeAt(0), a.charCodeAt(1), a.charCodeAt(2), a.charCodeAt(3)].join('.');\n\t\t\t\t} else if (a.length === 16) { \/\/ IPv6\n\t\t\t\t\tfor (i = 0; i < 16; i++) {\n\t\t\t\t\t\tc.push(((a.charCodeAt(i++) << 8) + a.charCodeAt(i))\n\t\t\t\t\t\t\t.toString(16));\n\t\t\t\t\t}\n\t\t\t\t\treturn c.join(':')\n\t\t\t\t\t\t.replace(\/((^|:)0(?=:|$))+:?\/g, function(t) {\n\t\t\t\t\t\t\tm = (t.length > m.length) ? t : m;\n\t\t\t\t\t\t\treturn t;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.replace(m || ' ', '::');\n\t\t\t\t} else { \/\/ Invalid length\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdeleteAdminUser: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_deleteAdminUser', {\n\t\t\t\t\tissueID: issueID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Successfully deleted admin\"), sprintf(__(\"The admin user %s was successfully deleted.\"), res.user_login));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (res.errorMsg) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tWFAD.colorboxError(res.errorMsg, res.tokenInvalid);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\trevokeAdminUser: function(issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_revokeAdminUser', {\n\t\t\t\t\tissueID: issueID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Successfully revoked admin\"), sprintf(__(\"All capabilties of admin user %s were successfully revoked.\"), res.user_login));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (res.errorMsg) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tWFAD.colorboxError(res.errorMsg, res.tokenInvalid);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tacknowledgeAdminUser: function (issueID) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_acknowledgeAdminUser', {\n\t\t\t\t\tissueID: issueID\n\t\t\t\t}, function(res) {\n\t\t\t\t\tif (res.ok) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __(\"Successfully acknowledged admin\"), sprintf(__(\"The admin user %s will no longer show up in future scans.\"), res.user_login));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (res.errorMsg) {\n\t\t\t\t\t\tself.loadIssues(function() {\n\t\t\t\t\t\t\tWFAD.colorboxError(res.errorMsg, res.tokenInvalid);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\twindowHasFocus: function() {\n\t\t\t\tif (typeof document.hasFocus === 'function') {\n\t\t\t\t\treturn document.hasFocus();\n\t\t\t\t}\n\t\t\t\t\/\/ Older versions of Opera\n\t\t\t\treturn this._windowHasFocus;\n\t\t\t},\n\n\t\t\thtmlEscape: function(html) {\n\t\t\t\treturn String(html)\n\t\t\t\t\t.replace(\/&\/g, '&amp;')\n\t\t\t\t\t.replace(\/\"\/g, '&quot;')\n\t\t\t\t\t.replace(\/'\/g, '&#39;')\n\t\t\t\t\t.replace(\/<\/g, '&lt;')\n\t\t\t\t\t.replace(\/>\/g, '&gt;');\n\t\t\t},\n\n\t\t\tpermanentlyBlockAllIPs: function(type) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_permanentlyBlockAllIPs', {\n\t\t\t\t\ttype: type\n\t\t\t\t}, function(res) {\n\t\t\t\t\t$('#wfTabs').find('.wfTab1').eq(0).trigger('click');\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tshowTimestamp: function(timestamp, serverTime, format) {\n\t\t\t\tserverTime = serverTime === undefined ? new Date().getTime() \/ 1000 : serverTime;\n\t\t\t\tformat = format === undefined ? '${dateTime} (${timeAgo} ago)' : format;\n\t\t\t\tvar date = new Date(timestamp * 1000);\n\n\t\t\t\treturn jQuery.tmpl(format, {\n\t\t\t\t\tdateTime: date.toLocaleDateString() + ' ' + date.toLocaleTimeString(),\n\t\t\t\t\ttimeAgo: this.makeTimeAgo(serverTime - timestamp)\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tupdateTimeAgo: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tjQuery('.wfTimeAgo-timestamp').each(function(idx, elem) {\n\t\t\t\t\tvar el = jQuery(elem);\n\t\t\t\t\tvar testEl = el;\n\t\t\t\t\tif (typeof jQuery === \"function\" && testEl instanceof jQuery) {\n\t\t\t\t\t\ttestEl = testEl[0];\n\t\t\t\t\t}\n\n\t\t\t\t\tvar rect = testEl.getBoundingClientRect();\n\t\t\t\t\tif (!(rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth))) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tvar timestamp = el.data('wfctime');\n\t\t\t\t\tif (!timestamp) {\n\t\t\t\t\t\ttimestamp = el.attr('data-timestamp');\n\t\t\t\t\t}\n\t\t\t\t\tvar serverTime = self.serverMicrotime;\n\t\t\t\t\tvar format = el.data('wfformat');\n\t\t\t\t\tif (!format) {\n\t\t\t\t\t\tformat = el.attr('data-format');\n\t\t\t\t\t}\n\t\t\t\t\tel.html(self.showTimestamp(timestamp, serverTime, format));\n\t\t\t\t});\n\t\t\t},\n\n\t\t\twafData: {\n\t\t\t\twhitelistedURLParams: []\n\t\t\t},\n\t\t\trestoreWAFData: {\n\t\t\t\twhitelistedURLParams: []\n\t\t\t},\n\t\t\t\n\t\t\twafWhitelistedBulkChangeEnabled: function(enabled) {\n\t\t\t\t$('.wf-whitelist-table-bulk-checkbox.wf-option-checkbox.wf-checked').each(function() {\n\t\t\t\t\t$(this).closest('tr').find('.wf-whitelist-item-enabled.wf-option-checkbox').each(function() {\n\t\t\t\t\t\tif (($(this).hasClass('wf-checked') && !enabled) || (!$(this).hasClass('wf-checked') && enabled)) {\n\t\t\t\t\t\t\tvar tr = $(this).closest('tr');\n\t\t\t\t\t\t\tif (tr.is(':visible')) {\n\t\t\t\t\t\t\t\tWFAD.wafWhitelistedChangeEnabled(tr.data('key'), enabled);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t},\n\t\t\t\n\t\t\twafWhitelistedChangeEnabled: function(key, enabled) {\n\t\t\t\t$('#waf-whitelisted-urls-wrapper .whitelist-table > tbody > tr[data-key=\"' + key + '\"]').each(function() {\n\t\t\t\t\tvar adding = !!$(this).data('adding');\n\t\t\t\t\tif (adding) {\n\t\t\t\t\t\tWFAD.pendingChanges['whitelistedURLParams']['add'][key]['data']['disabled'] = !enabled ? 1 : 0;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!(WFAD.pendingChanges['whitelistedURLParams'] instanceof Object)) {\n\t\t\t\t\t\t\tWFAD.pendingChanges['whitelistedURLParams'] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!(WFAD.pendingChanges['whitelistedURLParams']['enabled'] instanceof Object)) {\n\t\t\t\t\t\t\tWFAD.pendingChanges['whitelistedURLParams']['enabled'] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tWFAD.pendingChanges['whitelistedURLParams']['enabled'][key] = !!enabled ? 1 : 0;\n\t\t\t\t\t}\n\t\t\t\t\t$(this).find('.wf-whitelist-item-enabled.wf-option-checkbox').toggleClass('wf-checked', !!enabled);\n\t\t\t\t});\n\t\t\t},\n\n\t\t\twafWhitelistedBulkDelete: function() {\n\t\t\t\t$('.wf-whitelist-table-bulk-checkbox.wf-option-checkbox.wf-checked').each(function() {\n\t\t\t\t\t$(this).closest('tr').find('.wf-whitelist-item-enabled.wf-option-checkbox').each(function() {\n\t\t\t\t\t\tvar tr = $(this).closest('tr');\n\t\t\t\t\t\tif (tr.is(':visible')) {\n\t\t\t\t\t\t\tWFAD.wafWhitelistedDelete(tr.data('key'));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t},\n\n\t\t\twafWhitelistedDelete: function(key) {\n\t\t\t\t$('#waf-whitelisted-urls-wrapper .whitelist-table > tbody > tr[data-key=\"' + key + '\"]').each(function() {\n\t\t\t\t\tvar adding = !!$(this).data('adding');\n\t\t\t\t\tif (adding) {\n\t\t\t\t\t\tdelete WFAD.pendingChanges['whitelistedURLParams']['add'][key];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (!(WFAD.pendingChanges['whitelistedURLParams'] instanceof Object)) {\n\t\t\t\t\t\t\tWFAD.pendingChanges['whitelistedURLParams'] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!(WFAD.pendingChanges['whitelistedURLParams']['delete'] instanceof Object)) {\n\t\t\t\t\t\t\tWFAD.pendingChanges['whitelistedURLParams']['delete'] = {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tWFAD.pendingChanges['whitelistedURLParams']['delete'][key] = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < WFAD.wafData.whitelistedURLParams.length; i++) {\n\t\t\t\t\t\tvar testKey = WFAD.wafData.whitelistedURLParams[i].path + '|' + WFAD.wafData.whitelistedURLParams[i].paramKey;\n\t\t\t\t\t\tif (testKey == key) {\n\t\t\t\t\t\t\tWFAD.wafData.whitelistedURLParams.splice(i, 1);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\twafConfigPageRender: function() {\n\t\t\t\tWFAD.wafData.ruleCount = 0;\n\t\t\t\tif (WFAD.wafData.rules) {\n\t\t\t\t\tWFAD.wafData.ruleCount = Object.keys(WFAD.wafData.rules).length;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar whitelistedIPsEl = $('#waf-whitelisted-urls-tmpl').tmpl(WFAD.wafData);\n\t\t\t\t$('#waf-whitelisted-urls-wrapper').html(whitelistedIPsEl);\n\n\t\t\t\tvar rulesEl = $('#waf-rules-tmpl').tmpl(WFAD.wafData);\n\t\t\t\t$('#waf-rules-wrapper').html(rulesEl);\n\t\t\t\t\n\t\t\t\t$('#waf-show-all-rules-button').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\n\t\t\t\t\t$('#waf-rules-wrapper').addClass('wf-show-all');\n\t\t\t\t});\n\n\t\t\t\tif (WFAD.wafData['rulesLastUpdated']) {\n\t\t\t\t\tvar date = new Date(WFAD.wafData['rulesLastUpdated'] * 1000);\n\t\t\t\t\tWFAD.renderWAFRulesLastUpdated(date);\n\t\t\t\t}\n\t\t\t\t$(window).trigger('wordfenceWAFConfigPageRender');\n\t\t\t},\n\n\t\t\trenderWAFRulesLastUpdated: function(date) {\n\t\t\t\tvar dateString = date.toString();\n\t\t\t\tif (date.toLocaleString) {\n\t\t\t\t\tdateString = date.toLocaleString();\n\t\t\t\t}\n\t\t\t\t$('#waf-rules-last-updated').text(sprintf(__('Last Updated: %s'), dateString))\n\t\t\t\t\t.css({\n\t\t\t\t\t\t'opacity': 0\n\t\t\t\t\t})\n\t\t\t\t\t.animate({\n\t\t\t\t\t\t'opacity': 1\n\t\t\t\t\t}, 500);\n\t\t\t},\n\n\t\t\trenderWAFRulesNextUpdate: function(date) {\n\t\t\t\tvar dateString = date.toString();\n\t\t\t\tif (date.toLocaleString) {\n\t\t\t\t\tdateString = date.toLocaleString();\n\t\t\t\t}\n\t\t\t\t$('#waf-rules-next-update').text(sprintf(__('Next Update Check: %s'), dateString))\n\t\t\t\t\t.css({\n\t\t\t\t\t\t'opacity': 0\n\t\t\t\t\t})\n\t\t\t\t\t.animate({\n\t\t\t\t\t\t'opacity': 1\n\t\t\t\t\t}, 500);\n\t\t\t},\n\n\t\t\twafUpdateRules: function(onSuccess) {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_updateWAFRules', {}, function(res) {\n\t\t\t\t\tself.wafData = res;\n\t\t\t\t\tself.restoreWAFData.rules = res.rules;\n\t\t\t\t\tself.restoreWAFData.rulesLastUpdated = res.rulesLastUpdated;\n\t\t\t\t\tself.wafConfigPageRender();\n\t\t\t\t\tif (self.wafData['updated']) {\n\t\t\t\t\t\tif (!self.wafData['isPaid']) {\n\t\t\t\t\t\t\tself.colorboxModalHTML((self.isSmallScreen ? '300px' : '400px'), __('Rules Updated'), __('Your rules have been updated successfully. You are currently using the free version of Wordfence. Upgrade to Wordfence premium to have your rules updated automatically as new threats emerge. <a href=\"https:\/\/www.wordfence.com\/wafUpdateRules1\/wordfence-signup\/\">Click here to purchase a premium license<\/a>. <em>Note: Your rules will still update every 30 days as a free user.<\/em>'));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Rules Updated'), __('Your rules have been updated successfully.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (self.wafData['failure'] == 'ratelimit') {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Rule Update Failed'), __('No rules were updated. Your website has reached the maximum number of rule update requests. Please try again later.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (self.wafData['failure'] == 'unreachable') {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Rule Update Failed'), __('No rules were updated. Please verify your website can reach the Wordfence servers.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Rule Update Failed'), __('No rules were updated. Please verify you have permissions to write to the \/wp-content\/wflogs directory.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof onSuccess === 'function') {\n\t\t\t\t\t\treturn onSuccess.apply(this, arguments);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tdateFormat: function(date) {\n\t\t\t\tif (date instanceof Date) {\n\t\t\t\t\tif (date.toLocaleString) {\n\t\t\t\t\t\treturn date.toLocaleString();\n\t\t\t\t\t}\n\t\t\t\t\treturn date.toString();\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\n\t\t\tconfirmWAFConfigureAutoPrepend: function() {\n\t\t\t\tvar self = this;\n\t\t\t\tthis.ajax('wordfence_wafConfigureAutoPrepend', {}, function(res) {\n\t\t\t\t\tself.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('.htaccess Updated'), __(\"Your .htaccess has been updated successfully. Please verify your site is functioning normally.\"));\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tupdatePendingChanges: function() {\n\t\t\t\t$(window).off('beforeunload', WFAD._unsavedOptionsHandler);\n\t\t\t\tif (Object.keys(WFAD.pendingChanges).length) {\n\t\t\t\t\t$('#wf-cancel-changes').removeClass('wf-disabled');\n\t\t\t\t\t$('#wf-save-changes').removeClass('wf-disabled');\n\t\t\t\t\t$(window).on('beforeunload', WFAD._unsavedOptionsHandler);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$('#wf-cancel-changes').addClass('wf-disabled');\n\t\t\t\t\t$('#wf-save-changes').addClass('wf-disabled');\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t_unsavedOptionsHandler: function(e) {\n\t\t\t\tvar message = __(\"You have unsaved changes to your options. If you leave this page, those changes will be lost.\"); \/\/Only shows on older browsers, newer browsers don't allow message customization\n\t\t\t\te = e || window.event;\n\t\t\t\tif (e) {\n\t\t\t\t\te.returnValue = message; \/\/IE and Firefox\n\t\t\t\t}\n\t\t\t\treturn message; \/\/Others\n\t\t\t},\n\t\t\t\n\t\t\tsetOption: function(key, value, successCallback, failureCallback, failureAfterModal) {\n\t\t\t\tvar changes = {};\n\t\t\t\tchanges[key] = value;\n\t\t\t\tthis.ajax('wordfence_saveOptions', {changes: JSON.stringify(changes), page: WFAD.getParameterByName('page')}, function(res) {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\ttypeof successCallback == 'function' && successCallback(res);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tfailureAfterModal = typeof failureAfterModal !== 'undefined' && failureAfterModal;\n\t\t\t\t\t\tvar modalSettings = {};\n\t\t\t\t\t\tif (failureAfterModal)\n\t\t\t\t\t\t\tmodalSettings.onClosed = failureCallback;\n\t\t\t\t\t\tWFAD.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Error Saving Option'), res.error, modalSettings);\n\t\t\t\t\t\tif (!failureAfterModal)\n\t\t\t\t\t\t\ttypeof failureCallback == 'function' && failureCallback(res);\n\t\t\t\t\t} \n\t\t\t\t});\n\t\t\t},\n\n\t\t\tsaveOptions: function(successCallback, failureCallback) {\n\t\t\t\tif (!Object.keys(WFAD.pendingChanges).length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar self = this;\n\n\t\t\t\tthis.ajax('wordfence_saveOptions', {changes: JSON.stringify(WFAD.pendingChanges), page: WFAD.getParameterByName('page')}, function(res) {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\ttypeof successCallback == 'function' && successCallback(res); \n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFAD.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Error Saving Options'), res.error);\n\t\t\t\t\t\ttypeof failureCallback == 'function' && failureCallback\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t\n\t\t\tenableAllOptionsPage: function() {\n\t\t\t\tthis.ajax('wordfence_enableAllOptionsPage', {}, function(res) {\n\t\t\t\t\tif (res.redirect) {\n\t\t\t\t\t\twindow.location.href = res.redirect;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFAD.colorboxModal((self.isSmallScreen ? '300px' : '400px'), __('Error Enabling All Options Page'), res.error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tgetParameterByName: function(name, url) {\n\t\t\t\tif (!url) url = window.location.href;\n\t\t\t\tname = name.replace(\/[\\[\\]]\/g, \"\\\\$&\");\n\t\t\t\tvar regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t\t\t\t\tresults = regex.exec(url);\n\t\t\t\tif (!results) return null;\n\t\t\t\tif (!results[2]) return '';\n\t\t\t\treturn decodeURIComponent(results[2].replace(\/\\+\/g, \" \"));\n\t\t\t},\n\n\t\t\tbase64_decode: function(s) {\n\t\t\t\tvar e = {}, i, b = 0, c, x, l = 0, a, r = '', w = String.fromCharCode, L = s.length;\n\t\t\t\tvar A = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/\";\n\t\t\t\tfor (i = 0; i < 64; i++) {\n\t\t\t\t\te[A.charAt(i)] = i;\n\t\t\t\t}\n\t\t\t\tfor (x = 0; x < L; x++) {\n\t\t\t\t\tc = e[s.charAt(x)];\n\t\t\t\t\tb = (b << 6) + c;\n\t\t\t\t\tl += 6;\n\t\t\t\t\twhile (l >= 8) {\n\t\t\t\t\t\t((a = (b >>> (l -= 8)) & 0xff) || (x < (L - 2))) && (r += w(a));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t},\n\t\t\t\n\t\t\tbase64_encode: function (input) {\n\t\t\t\tvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/=\";\n\t\t\t\tvar output = \"\";\n\t\t\t\tvar chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n\t\t\t\tvar i = 0;\n\n\t\t\t\twhile (i < input.length) {\n\t\t\t\t\tchr1 = input.charCodeAt(i++);\n\t\t\t\t\tchr2 = input.charCodeAt(i++);\n\t\t\t\t\tchr3 = input.charCodeAt(i++);\n\n\t\t\t\t\tenc1 = chr1 >> 2;\n\t\t\t\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n\t\t\t\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n\t\t\t\t\tenc4 = chr3 & 63;\n\n\t\t\t\t\tif (isNaN(chr2)) {\n\t\t\t\t\t\tenc3 = enc4 = 64;\n\t\t\t\t\t}\n\t\t\t\t\telse if (isNaN(chr3)) {\n\t\t\t\t\t\tenc4 = 64;\n\t\t\t\t\t}\n\n\t\t\t\t\toutput = output + chars.charAt(enc1) + chars.charAt(enc2) + chars.charAt(enc3) + chars.charAt(enc4);\n\t\t\t\t}\n\n\t\t\t\treturn output;\n\t\t\t}\n\t\t};\n\n\t\twindow['WFAD'] = window['wordfenceAdmin'];\n\t\tsetInterval(function() {\n\t\t\tWFAD.updateTimeAgo();\n\t\t}, 1000);\n\t}\n\n\t__ = window.wfi18n.__;\n\tsprintf = window.wfi18n.sprintf;\n\n\tjQuery(function() {\n\t\twordfenceAdmin.init();\n\t\tjQuery(window).on('focus', function() {\n\t\t\tif (jQuery('body').hasClass('wordfenceLiveActivityPaused')) {\n\t\t\t\tjQuery('body').removeClass('wordfenceLiveActivityPaused');\n\t\t\t}\n\t\t});\n\t});\n\n\t$(function() {\n\t\t$('#wf-mobile-controls').on('click', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\t$.wfMobileMenu({\n\t\t\t\tmenuItems: [\n\t\t\t\t\t{title: __('Save Changes'), primary: true, disabled: $('#wf-save-changes').hasClass('wf-disabled'), action: function() { $('#wf-save-changes').trigger('click'); }},\n\t\t\t\t\t{title: __('Cancel Changes'), primary: false, disabled: $('#wf-cancel-changes').hasClass('wf-disabled'), action: function() { $('#wf-cancel-changes').trigger('click'); }},\n\t\t\t\t\t{title: __('Restore Defaults'), primary: false, disabled: $('#wf-restore-defaults').hasClass('wf-disabled'), action: function() { $('#wf-restore-defaults').trigger('click'); }}\n\t\t\t\t]\n\t\t\t});\n\t\t});\n\t\t\n\t\t$('#wf-restore-defaults').on('click', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tvar restoreDefaultsSection = $(this).data('restoreDefaultsSection');\n\t\t\tvar prompt = $('#wfTmpl_restoreDefaultsPrompt').tmpl();\n\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\tWFAD.colorboxHTML((WFAD.isSmallScreen ? '300px' : '400px'), promptHTML, {overlayClose: false, closeButton: false, className: 'wf-modal', onComplete: function() {\n\t\t\t\t$('#wf-restore-defaults-prompt-cancel').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tWFAD.colorboxClose();\n\t\t\t\t});\n\n\t\t\t\t$('#wf-restore-defaults-prompt-confirm').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tWFAD.ajax('wordfence_restoreDefaults', {section: restoreDefaultsSection}, function(res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFAD.colorboxClose();\n\t\t\t\t\t\t\tWFAD.colorboxModal((WFAD.isSmallScreen ? '300px' : '400px'), __('Error Restoring Defaults'), res.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}});\n\t\t});\n\t\t\n\t\t$('#wf-save-changes').on('click', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tWFAD.saveOptions(function(res) {\n\t\t\t\tWFAD.pendingChanges = {}; \n\t\t\t\tWFAD.updatePendingChanges();\n\n\t\t\t\tif (res.redirect) {\n\t\t\t\t\twindow.location.href = res.redirect;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t$('#wf-cancel-changes').on('click', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tWFAD.pendingChanges = {};\n\n\t\t\tWFAD.updatePendingChanges();\n\n\t\t\t\/\/On\/Off options\n\t\t\t$('.wf-option.wf-option-toggled').each(function() {\n\t\t\t\tvar enabledValue = $(this).data('enabledValue');\n\t\t\t\tvar disabledValue = $(this).data('disabledValue');\n\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\tif (enabledValue == originalValue) {\n\t\t\t\t\t$(this).find('.wf-option-checkbox').addClass('wf-checked').attr('aria-checked', 'true');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this).find('.wf-option-checkbox').removeClass('wf-checked').attr('aria-checked', 'false');\n\t\t\t\t}\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\t\t\t\n\t\t\t$('.wf-option-toggled-boolean-switch').each(function() {\n\t\t\t\tvar enabledValue = $(this).data('enabledValue');\n\t\t\t\tvar disabledValue = $(this).data('disabledValue');\n\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\tif (enabledValue == originalValue) {\n\t\t\t\t\t$(this).find('.wf-boolean-switch').addClass('wf-active').attr('aria-checked', 'true');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this).find('.wf-boolean-switch').removeClass('wf-active').attr('aria-checked', 'false');\n\t\t\t\t}\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t$('.wf-option.wf-option-toggled-segmented').each(function() {\n\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t$(this).find('[type=radio]').each(function() {\n\t\t\t\t\tif (this.value == originalValue) {\n\t\t\t\t\t\tthis.checked = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t\/\/On\/Off multiple options\n\t\t\t$('.wf-option.wf-option-toggled-multiple').each(function() {\n\t\t\t\t$(this).find('.wf-option-checkboxes > ul').each(function() {\n\t\t\t\t\tvar enabledValue = $(this).data('enabledValue');\n\t\t\t\t\tvar disabledValue = $(this).data('disabledValue');\n\t\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t\tif (enabledValue == originalValue) {\n\t\t\t\t\t\t$(this).find('.wf-option-checkbox').addClass('wf-checked').attr('aria-checked', 'true');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).find('.wf-option-checkbox').removeClass('wf-checked').attr('aria-checked', 'false');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t\/\/On\/Off options with menu\n\t\t\t$('.wf-option.wf-option-toggled-select').each(function() {\n\t\t\t\tvar selectElement = $(this).find('.wf-option-select select');\n\t\t\t\tvar enabledToggleValue = $(this).data('enabledToggleValue');\n\t\t\t\tvar disabledToggleValue = $(this).data('disabledToggleValue');\n\t\t\t\tvar originalToggleValue = $(this).data('originalToggleValue');\n\t\t\t\tif (enabledToggleValue == originalToggleValue) {\n\t\t\t\t\t$(this).find('.wf-option-checkbox').addClass('wf-checked').attr('aria-checked', 'true');\n\t\t\t\t\tselectElement.attr('disabled', false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this).find('.wf-option-checkbox').removeClass('wf-checked').attr('aria-checked', 'false');\n\t\t\t\t\tselectElement.attr('disabled', true);\n\t\t\t\t}\n\n\t\t\t\tvar originalSelectValue = $(this).data('originalSelectValue');\n\t\t\t\t$(this).find('.wf-option-select select').val(originalSelectValue).trigger('change');\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t\/\/Menu options\n\t\t\t$('.wf-option.wf-option-select').each(function() {\n\t\t\t\tvar originalSelectValue = $(this).data('originalSelectValue');\n\t\t\t\t$(this).find('.wf-option-select select').val(originalSelectValue).trigger('change');\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t\/\/Text options\n\t\t\t$('.wf-option.wf-option-text').each(function() {\n\t\t\t\tvar originalTextValue = $(this).data('originalTextValue');\n\t\t\t\tif (typeof originalTextValue !== 'undefined') {\n\t\t\t\t\t$(this).find('.wf-option-text input').val(originalTextValue);\n\t\t\t\t}\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t\/\/Text area options\n\t\t\t$('.wf-option.wf-option-textarea').each(function() {\n\t\t\t\tvar originalTextValue = $(this).data('originalTextValue');\n\t\t\t\t$(this).find('.wf-option-textarea textarea').val(originalTextValue);\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t\/\/Token options\n\t\t\t$('.wf-option.wf-option-token').each(function() {\n\t\t\t\tvar originalTokenValue = $(this).data('originalTokenValue');\n\t\t\t\t$(this).find('select').val(originalTokenValue).trigger('change');\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\t\t\t\n\t\t\t\/\/Switch options\n\t\t\t$('.wf-option.wf-option-switch').each(function() {\n\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t$(this).find('.wf-switch > li').each(function() {\n\t\t\t\t\t$(this).toggleClass('wf-active', originalValue == $(this).data('optionValue')).attr('aria-checked', originalValue == $(this).data('optionValue') ? 'true' : 'false');\n\t\t\t\t});\n\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t});\n\n\t\t\t\/\/Other options\n\t\t\t$(window).trigger('wfOptionsReset');\n\t\t});\n\n\t\tvar select2s = $('.wf-select2');\n\t\tif (select2s.length && $.fn.wfselect2) {\n\t\t\tselect2s.wfselect2({\n\t\t\t\tminimumResultsForSearch: 5\n\t\t\t});\n\t\t}\n\n\n\t\tif ($.fn.tooltip) {\n\t\t\t$('.wf-status-circular').each(function() {\n\t\t\t\tvar circle = $(this);\n\t\t\t\tvar tmplID = 'tooltip-' + this.id + '-tmpl';\n\t\t\t\tvar circleTmpl = $('#' + tmplID);\n\t\t\t\tif (circleTmpl.length) {\n\t\t\t\t\tcircle.tooltip({\n\t\t\t\t\t\ttooltipClass: \"wf-circle-tooltip\",\n\t\t\t\t\t\tposition: {\n\t\t\t\t\t\t\tmy: \"left-40 bottom\",\n\t\t\t\t\t\t\tat: \"center top\",\n\t\t\t\t\t\t\tusing: function(obj, info) {\n\t\t\t\t\t\t\t\tvar el = $(this);\n\t\t\t\t\t\t\t\tel.removeClass('wf-tooltip-vertical-top wf-tooltip-vertical-bottom ' +\n\t\t\t\t\t\t\t\t\t'wf-tooltip-horizontal-left wf-tooltip-horizontal-right')\n\t\t\t\t\t\t\t\t.addClass('wf-tooltip-vertical-' + info.vertical)\n\t\t\t\t\t\t\t\t.addClass('wf-tooltip-horizontal-' + info.horizontal);\n\n\t\t\t\t\t\t\t\t$(this).css({\n\t\t\t\t\t\t\t\t\tleft: obj.left + 'px',\n\t\t\t\t\t\t\t\t\ttop: obj.top + 'px'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\titems: this,\n\t\t\t\t\t\tclose: function (event, ui) {\n\t\t\t\t\t\t\tui.tooltip.hover(\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t$(this).stop(true).fadeTo(400, 1);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\t$(this).fadeOut(\"400\", function () {\n\t\t\t\t\t\t\t\t\t\t$(this).remove();\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcontent: function() {\n\t\t\t\t\t\t\tvar circleClone = $(this).clone();\n\t\t\t\t\t\t\tcircleClone.find('svg, .wf-status-circular-text').css('opacity', 1.0);\n\t\t\t\t\t\t\tvar circleHTML = $(circleClone).html();\n\t\t\t\t\t\t\treturn circleTmpl.tmpl({\n\t\t\t\t\t\t\t\tstatusCircle: circleHTML\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t\/\/ .tooltip('open');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n})(jQuery);\n\n\/\/wfCircularProgress\njQuery.fn.wfCircularProgress = function(options) {\n\tvar __ = window.wfi18n.__;\n\tvar sprintf = window.wfi18n.sprintf;\n\n\tjQuery(this).each(function() {\n\t\tvar creationOptions;\n\t\ttry {\n\t\t\tcreationOptions = JSON.parse(jQuery(this).data('wfCircularProgressOptions'));\n\t\t}\n\t\tcatch (e) { \/* Ignore *\/ }\n\t\tif (typeof creationOptions !== 'object') {\n\t\t\tcreationOptions = {};\n\t\t}\n\t\tvar opts = jQuery.extend({}, jQuery.fn.wfCircularProgress.defaults, creationOptions, options);\n\n\t\tvar center = Math.floor(opts.diameter \/ 2);\n\t\tvar insetRadius = center - opts.strokeWidth * 2;\n\n\t\tvar circumference = 2 * insetRadius * Math.PI;\n\t\tvar finalOffset = -(circumference * (1 - opts.endPercent));\n\t\tvar initialOffset = -(circumference);\n\n\t\tvar terminatorRadius = Math.floor(opts.strokeWidth * 1.5);\n\t\tvar terminatorDiameter = 2 * terminatorRadius;\n\t\tvar finalTerminatorX = center - insetRadius * Math.cos(Math.PI * 2 * (opts.endPercent - 0.25));\n\t\tvar finalTerminatorY = center + insetRadius * Math.sin(Math.PI * 2 * (opts.endPercent - 0.25));\n\t\tvar initialTerminatorX = center - insetRadius * Math.cos(Math.PI * 2 * (opts.startPercent - 0.25));\n\t\tvar initialTerminatorY = center + insetRadius * Math.sin(Math.PI * 2 * (opts.startPercent - 0.25));\n\n\t\tvar terminatorSVG = \"m 0,-\" + terminatorRadius + \" a \" + terminatorRadius + \",\" + terminatorRadius + \" 0 1 1 0,\" + terminatorDiameter + \" a \" + terminatorRadius + \",\" + terminatorRadius + \" 0 1 1 0,-\" + terminatorDiameter;\n\t\t\n\t\tjQuery(this).data('wfCircularProgressOptions', JSON.stringify(opts));\n\t\t\n\t\tjQuery(this).css('width', opts.diameter + 'px');\n\t\tjQuery(this).css('height', opts.diameter + 'px');\n\n\t\tvar svg = jQuery(this).find('svg');\n\t\tif (svg.length == 0) { svg = document.createElementNS(\"http:\/\/www.w3.org\/2000\/svg\", \"svg\"); jQuery(this).append(svg); }\n\t\tvar inactivePath = jQuery(this).find('.wf-status-circular-inactive-path');\n\t\tif (inactivePath.length == 0) { inactivePath = document.createElementNS(\"http:\/\/www.w3.org\/2000\/svg\", \"path\"); jQuery(inactivePath).addClass('wf-status-circular-inactive-path'); jQuery(svg).append(inactivePath); }\n\t\tvar activePath = jQuery(this).find('.wf-status-circular-active-path');\n\t\tif (activePath.length == 0) { activePath = document.createElementNS(\"http:\/\/www.w3.org\/2000\/svg\", \"path\"); jQuery(activePath).addClass('wf-status-circular-active-path'); jQuery(svg).append(activePath); }\n\t\tvar terminator = jQuery(this).find('.wf-status-circular-terminator');\n\t\tif (terminator.length == 0) { terminator = document.createElementNS(\"http:\/\/www.w3.org\/2000\/svg\", \"path\"); jQuery(terminator).addClass('wf-status-circular-terminator'); jQuery(svg).append(terminator); }\n\t\tvar text = jQuery(this).find('.wf-status-circular-text');\n\t\tif (text.length == 0) { text = jQuery('<div class=\"wf-status-circular-text\"><\/div>'); jQuery(this).append(text); }\n\t\tvar pendingOverlay = jQuery(this).find('.wf-status-overlay-text');\n\t\tif (pendingOverlay.length == 0) { pendingOverlay = jQuery('<div class=\"wf-status-overlay-text\"><\/div>'); jQuery(this).append(pendingOverlay); }\n\n\t\tjQuery(svg).attr('viewBox', '0 0 ' + opts.diameter + ' ' + opts.diameter);\n\t\tjQuery(svg).css('display', 'block');\n\t\tjQuery(svg).css('width', opts.diameter + 'px');\n\t\tjQuery(svg).css('height', opts.diameter + 'px');\n\t\tjQuery(inactivePath).attr('d', 'M ' + center + ',' + center + ' m 0,-' + insetRadius + ' a ' + insetRadius + ',' +insetRadius + ' 0 1 1 0,' + (2 * insetRadius) + ' a ' + insetRadius + ',' + insetRadius + ' 0 1 1 0,-' + (2 * insetRadius));\n\t\tjQuery(inactivePath).attr('stroke', opts.inactiveColor);\n\t\tjQuery(inactivePath).attr('stroke-width', opts.strokeWidth);\n\t\tjQuery(inactivePath).attr('fill-opacity', 0);\n\t\tjQuery(activePath).attr('d', 'M ' + center + ',' + center + ' m 0,-' + insetRadius + ' a ' + insetRadius + ',' + insetRadius + ' 0 1 1 0,' + (2 * insetRadius) + ' a ' + insetRadius + ',' + insetRadius + ' 0 1 1 0,-' + (2 * insetRadius));\n\t\tjQuery(activePath).attr('stroke', opts.color);\n\t\tjQuery(activePath).attr('stroke-width', opts.strokeWidth);\n\t\tjQuery(activePath).attr('stroke-dasharray', circumference + ',' + circumference);\n\t\tjQuery(activePath).attr('stroke-dashoffset', initialOffset);\n\t\tjQuery(activePath).attr('fill-opacity', 0);\n\t\tjQuery(terminator).attr('d', 'M ' + initialTerminatorX + ',' + initialTerminatorY + ' ' + terminatorSVG);\n\t\tjQuery(terminator).attr('stroke', opts.color);\n\t\tjQuery(terminator).attr('stroke-width', opts.strokeWidth);\n\t\tjQuery(terminator).attr('fill', '#ffffff');\n\t\tjQuery(pendingOverlay).html(opts.pendingMessage);\n\n\t\tjQuery(pendingOverlay).animate({\n\t\t\topacity: opts.pendingOverlay ? 1.0 : 0.0,\n\t\t}, {\n\t\t\tduration: 500,\n\t\t\tstep: function(value) {\n\t\t\t\tvar opacity = 1.0 - (value * 0.8);\n\t\t\t\tjQuery(svg).css('opacity', opacity);\n\t\t\t\tjQuery(text).css('opacity', opacity);\n\t\t\t},\n\t\t\tcomplete: function() {\n\t\t\t\tjQuery(svg).css('opacity', opts.pendingOverlay ? 0.2 : 1.0);\n\t\t\t\tjQuery(text).css('opacity', opts.pendingOverlay ? 0.2 : 1.0);\n\t\t\t}\n\t\t});\n\t\t\n\t\tjQuery(activePath).animate({\n\t\t\t\"stroke-dashoffset\": finalOffset + 'px'\n\t\t}, {\n\t\t\tduration: 500,\n\t\t\tstep: function(value) {\n\t\t\t\tvar percentage = 1 + value \/ circumference;\n\t\t\t\tvar x = center - insetRadius * Math.cos(Math.PI * 2 * (percentage - 0.25));\n\t\t\t\tvar y = center + insetRadius * Math.sin(Math.PI * 2 * (percentage - 0.25));\n\t\t\t\tjQuery(terminator).attr('d', 'M ' + x + ',' + y + ' ' + terminatorSVG);\n\t\t\t\ttext.html(Math.round(percentage * 100) + '%');\n\t\t\t},\n\t\t\tcomplete: function() {\n\t\t\t\ttext.html(Math.round(opts.endPercent * 100) + '%');\n\t\t\t}\n\t\t});\n\t});\n};\n\n(function() {\n\tvar __ = window.wfi18n.__;\n\tvar sprintf = window.wfi18n.sprintf;\n\n\tjQuery.fn.wfCircularProgress.defaults = {\n\t\tstartPercent: 0,\n\t\tendPercent: 1,\n\t\tcolor: '#16bc9b',\n\t\tinactiveColor: '#ececec',\n\t\tstrokeWidth: 3,\n\t\tdiameter: 100,\n\t\tpendingOverlay: false,\n\t\tpendingMessage: __('Note: Status will update when changes are saved'),\n\t};\n})();\n\n\/\/wfDrawer\n(function ($, document, window) {\n\tvar __ = window.wfi18n.__;\n\tvar sprintf = window.wfi18n.sprintf;\n\n\tvar defaults = {\n\t\twidth: '600px',\n\t\tclickOverlayDismiss: false,\n\t\tcontent: false,\n\t\tonComplete: false,\n\t};\n\t\n\tvar publicMethod = $.fn['wfDrawer'] = $['wfDrawer'] = function (options) {\n\t\tvar opts = $.extend({}, defaults, options);\n\n\t\tvar overlay = $('<div class=\"wf-drawer-overlay\"><\/div>').css('opacity', 0);\n\t\tif (opts.clickOverlayDismiss) {\n\t\t\toverlay.on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\t$.wfDrawer.close();\n\t\t\t});\n\t\t}\n\t\t$('body').append(overlay);\n\n\t\tvar drawer = $('<div class=\"wf-drawer\"><\/div>').css('width', opts.width).css('right', '-' + opts.width);\n\t\tif (opts.content) {\n\t\t\tdrawer.append(opts.content);\n\t\t}\n\t\t$('body').append(drawer);\n\n\t\toverlay.animate({\n\t\t\t\"opacity\": 1\n\t\t});\n\t\tdrawer.animate({\n\t\t\t\t\"right\": '0px'\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomplete: function() {\n\t\t\t\t\ttypeof opts.onComplete === 'function' && opts.onComplete();\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tpublicMethod.close = function() {\n\t\tvar overlay = $('.wf-drawer-overlay');\n\t\toverlay.animate({\n\t\t\t\t\"opacity\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomplete: function() {\n\t\t\t\t\toverlay.remove();\n\t\t\t\t}\n\t\t\t});\n\t\t\n\t\tvar drawer = $('.wf-drawer');\n\t\tdrawer.animate({\n\t\t\t\t\"right\": '-' + drawer.css('width')\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomplete: function() {\n\t\t\t\t\tdrawer.remove();\n\t\t\t\t}\n\t\t\t});\n\t};\n}(jQuery, document, window));\n\n\/\/wfMobileMenu\n(function ($, document, window) {\n\tvar __ = window.wfi18n.__;\n\tvar sprintf = window.wfi18n.sprintf;\n\n\tvar defaults = {\n\t\twidth: '280px',\n\t\tclickOverlayDismiss: true,\n\t\tmenuItems: [],\n\t\tonDismiss: false,\n\t};\n\n\tvar publicMethod = $.fn['wfMobileMenu'] = $['wfMobileMenu'] = function (options) {\n\t\tvar opts = $.extend({}, defaults, options);\n\n\t\tvar overlay = $('<div class=\"wf-mobile-menu-overlay\"><\/div>').css('opacity', 0);\n\t\tif (opts.clickOverlayDismiss) {\n\t\t\toverlay.on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\ttypeof opts.onDismiss === 'function' && opts.onDismiss(false);\n\t\t\t\t$.wfMobileMenu.close();\n\t\t\t});\n\t\t}\n\t\t$('body').append(overlay);\n\n\t\tvar menu = $('<div class=\"wf-mobile-menu\"><ul class=\"wf-mobile-menu-items\"><\/ul><\/div>').css('width', opts.width).css('bottom', '-9999px');\n\t\tvar itemsWrapper = menu.find('.wf-mobile-menu-items');\n\t\tfor (var i = 0; i < opts.menuItems.length; i++) {\n\t\t\tvar button = $('<li><a href=\"#\" class=\"wf-btn wf-btn-callout-subtle\" role=\"button\"><\/a><\/li>');\n\t\t\tbutton.find('a').text(opts.menuItems[i].title).css('width', opts.width).on('click', null, {action: opts.menuItems[i].action}, function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\t\n\t\t\t\ttypeof opts.onDismiss === 'function' && opts.onDismiss(true);\n\t\t\t\t$.wfMobileMenu.close();\n\t\t\t\te.data.action();\n\t\t\t});\n\t\t\t\n\t\t\tif (opts.menuItems[i].primary) {\n\t\t\t\tbutton.find('a').addClass('wf-btn-primary');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbutton.find('a').addClass('wf-btn-default');\n\t\t\t}\n\t\t\t\n\t\t\tif (opts.menuItems[i].disabled) {\n\t\t\t\tbutton.find('a').addClass('wf-disabled');\n\t\t\t}\n\t\t\t\n\t\t\titemsWrapper.append(button);\n\t\t}\n\n\t\tvar button = $('<li class=\"wf-padding-add-top-small\"><a href=\"#\" class=\"wf-btn wf-btn-callout-subtle wf-btn-default\" role=\"button\">' + __('Close') + '<\/a><\/li>');\n\t\tbutton.find('a').css('width', opts.width).on('click', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\ttypeof opts.onDismiss === 'function' && opts.onDismiss(false);\n\t\t\t$.wfMobileMenu.close();\n\t\t});\n\t\titemsWrapper.append(button);\n\t\t\n\t\t$('body').append(menu);\n\t\tmenu.css('bottom', '-' + menu.height() + 'px');\n\n\t\toverlay.animate({\n\t\t\t\"opacity\": 1\n\t\t});\n\t\tmenu.animate({\n\t\t\t\tbottom: '0px'\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomplete: function() {\n\t\t\t\t\ttypeof opts.onComplete === 'function' && opts.onComplete();\n\t\t\t\t}\n\t\t\t});\n\t};\n\n\tpublicMethod.close = function() {\n\t\tvar overlay = $('.wf-mobile-menu-overlay');\n\t\toverlay.animate({\n\t\t\t\t\"opacity\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomplete: function() {\n\t\t\t\t\toverlay.remove();\n\t\t\t\t}\n\t\t\t});\n\n\t\tvar menu = $('.wf-mobile-menu');\n\t\tmenu.animate({\n\t\t\tbottom: '-' + menu.height() + 'px'\n\t\t\t},\n\t\t\t{\n\t\t\t\tcomplete: function() {\n\t\t\t\t\tmenu.remove();\n\t\t\t\t}\n\t\t\t});\n\t};\n}(jQuery, document, window));\n\n\/*! @source https:\/\/github.com\/eligrey\/FileSaver.js\/blob\/master\/dist\/FileSaver.min.js *\/\n\n(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&\/^\\s*(?:text\\\/\\S*|application\\\/xml|\\S*\\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8\/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=\/Macintosh\/.test(navigator.userAgent)&&\/AppleWebKit\/.test(navigator.userAgent)&&!\/Safari\/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application\/octet-stream\"===b.type,i=\/constructor\/i.test(f.HTMLElement)||f.safari,j=\/CriOS\\\/[\\d]+\/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(\/^data:[^;]*;\/,\"data:attachment\/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n"},{"base":"plugins","rel":"wordfence\/js\/jquery.tmpl.min.1756145765.js","ext":"js","size":6115,"mtime":1757312769,"type":"text","content":"\/*\n * jQuery Templates Plugin 1.0.0pre\n * http:\/\/github.com\/jquery\/jquery-tmpl\n * Requires jQuery 1.4.2\n *\n * Copyright Software Freedom Conservancy, Inc.\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http:\/\/jquery.org\/license\n *\/\n(function(a){var r=a.fn.domManip,d=\"_tmplitem\",q=\/^[^<]*(<[\\w\\W]+>)[^>]*$|\\{\\{\\! \/,b={},f={},e,p={key:0,data:{}},i=0,c=0,l=[];function g(g,d,h,e){var c={data:e||(e===0||e===false)?e:d?d.data:{},_wrap:d?d._wrap:null,tmpl:null,parent:d||null,nodes:[],calls:u,nest:w,wrap:x,html:v,update:t};g&&a.extend(c,g,{nodes:[],parent:d});if(h){c.tmpl=h;c._ctnt=c._ctnt||c.tmpl(a,c);c.key=++i;(l.length?f:b)[i]=c}return c}a.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(f,d){a.fn[f]=function(n){var g=[],i=a(n),k,h,m,l,j=this.length===1&&this[0].parentNode;e=b||{};if(j&&j.nodeType===11&&j.childNodes.length===1&&i.length===1){i[d](this[0]);g=this}else{for(h=0,m=i.length;h<m;h++){c=h;k=(h>0?this.clone(true):this).get();a(i[h])[d](k);g=g.concat(k)}c=0;g=this.pushStack(g,f,i.selector)}l=e;e=null;a.tmpl.complete(l);return g}});a.fn.extend({tmpl:function(d,c,b){return a.tmpl(this[0],d,c,b)},tmplItem:function(){return a.tmplItem(this[0])},template:function(b){return a.template(b,this[0])},domManip:function(d,m,k){if(d[0]&&a.isArray(d[0])){var g=a.makeArray(arguments),h=d[0],j=h.length,i=0,f;while(i<j&&!(f=a.data(h[i++],\"tmplItem\")));if(f&&c)g[2]=function(b){a.tmpl.afterManip(this,b,k)};r.apply(this,g)}else r.apply(this,arguments);c=0;!e&&a.tmpl.complete(b);return this}});a.extend({tmpl:function(d,h,e,c){var i,k=!c;if(k){c=p;d=a.template[d]||a.template(null,d);f={}}else if(!d){d=c.tmpl;b[c.key]=c;c.nodes=[];c.wrapped&&n(c,c.wrapped);return a(j(c,null,c.tmpl(a,c)))}if(!d)return[];if(typeof h===\"function\")h=h.call(c||{});e&&e.wrapped&&n(e,e.wrapped);i=a.isArray(h)?a.map(h,function(a){return a?g(e,c,d,a):null}):[g(e,c,d,h)];return k?a(j(c,null,i)):i},tmplItem:function(b){var c;if(b instanceof a)b=b[0];while(b&&b.nodeType===1&&!(c=a.data(b,\"tmplItem\"))&&(b=b.parentNode));return c||p},template:function(c,b){if(b){if(typeof b===\"string\")b=o(b);else if(b instanceof a)b=b[0]||{};if(b.nodeType)b=a.data(b,\"tmpl\")||a.data(b,\"tmpl\",o(b.innerHTML));return typeof c===\"string\"?(a.template[c]=b):b}return c?typeof c!==\"string\"?a.template(null,c):a.template[c]||a.template(null,q.test(c)?c:a(c)):null},encode:function(a){return(\"\"+a).split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split('\"').join(\"&#34;\").split(\"'\").join(\"&#39;\")}});a.extend(a.tmpl,{tag:{tmpl:{_default:{$2:\"null\"},open:\"if($notnull_1){__=__.concat($item.nest($1,$2));}\"},wrap:{_default:{$2:\"null\"},open:\"$item.calls(__,$1,$2);__=[];\",close:\"call=$item.calls();__=call._.concat($item.wrap(call,__));\"},each:{_default:{$2:\"$index, $value\"},open:\"if($notnull_1){$.each($1a,function($2){with(this){\",close:\"}});}\"},\"if\":{open:\"if(($notnull_1) && $1a){\",close:\"}\"},\"else\":{_default:{$1:\"true\"},open:\"}else if(($notnull_1) && $1a){\"},html:{open:\"if($notnull_1){__.push($1a);}\"},\"=\":{_default:{$1:\"$data\"},open:\"if($notnull_1){__.push($.encode($1a));}\"},\"!\":{open:\"\"}},complete:function(){b={}},afterManip:function(f,b,d){var e=b.nodeType===11?a.makeArray(b.childNodes):b.nodeType===1?[b]:[];d.call(f,b);m(e);c++}});function j(e,g,f){var b,c=f?a.map(f,function(a){return typeof a===\"string\"?e.key?a.replace(\/(<\\w+)(?=[\\s>])(?![^>]*_tmplitem)([^>]*)\/g,\"$1 \"+d+'=\"'+e.key+'\" $2'):a:j(a,e,a._ctnt)}):e;if(g)return c;c=c.join(\"\");c.replace(\/^\\s*([^<\\s][^<]*)?(<[\\w\\W]+>)([^>]*[^>\\s])?\\s*$\/,function(f,c,e,d){b=a(e).get();m(b);if(c)b=k(c).concat(b);if(d)b=b.concat(k(d))});return b?b:k(c)}function k(c){var b=document.createElement(\"div\");b.innerHTML=c;return a.makeArray(b.childNodes)}function o(b){return new Function(\"jQuery\",\"$item\",\"var $=jQuery,call,__=[],$data=$item.data;with($data){__.push('\"+a.trim(b).replace(\/([\\\\'])\/g,\"\\\\$1\").replace(\/[\\r\\t\\n]\/g,\" \").replace(\/\\$\\{([^\\}]*)\\}\/g,\"{{= $1}}\").replace(\/\\{\\{(\\\/?)(\\w+|.)(?:\\(((?:[^\\}]|\\}(?!\\}))*?)?\\))?(?:\\s+(.*?)?)?(\\(((?:[^\\}]|\\}(?!\\}))*?)\\))?\\s*\\}\\}\/g,function(m,l,k,g,b,c,d){var j=a.tmpl.tag[k],i,e,f;if(!j)throw\"Unknown template tag: \"+k;i=j._default||[];if(c&&!\/\\w$\/.test(b)){b+=c;c=\"\"}if(b){b=h(b);d=d?\",\"+h(d)+\")\":c?\")\":\"\";e=c?b.indexOf(\".\")>-1?b+h(c):\"(\"+b+\").call($item\"+d:b;f=c?e:\"(typeof(\"+b+\")==='function'?(\"+b+\").call($item):(\"+b+\"))\"}else f=e=i.$1||\"null\";g=h(g);return\"');\"+j[l?\"close\":\"open\"].split(\"$notnull_1\").join(b?\"typeof(\"+b+\")!=='undefined' && (\"+b+\")!=null\":\"true\").split(\"$1a\").join(f).split(\"$1\").join(e).split(\"$2\").join(g||i.$2||\"\")+\"__.push('\"})+\"');}return __;\")}function n(c,b){c._wrap=j(c,true,a.isArray(b)?b:[q.test(b)?b:a(b).html()]).join(\"\")}function h(a){return a?a.replace(\/\\\\'\/g,\"'\").replace(\/\\\\\\\\\/g,\"\\\\\"):null}function s(b){var a=document.createElement(\"div\");a.appendChild(b.cloneNode(true));return a.innerHTML}function m(o){var n=\"_\"+c,k,j,l={},e,p,h;for(e=0,p=o.length;e<p;e++){if((k=o[e]).nodeType!==1)continue;j=k.getElementsByTagName(\"*\");for(h=j.length-1;h>=0;h--)m(j[h]);m(k)}function m(j){var p,h=j,k,e,m;if(m=j.getAttribute(d)){while(h.parentNode&&(h=h.parentNode).nodeType===1&&!(p=h.getAttribute(d)));if(p!==m){h=h.parentNode?h.nodeType===11?0:h.getAttribute(d)||0:0;if(!(e=b[m])){e=f[m];e=g(e,b[h]||f[h]);e.key=++i;b[i]=e}c&&o(m)}j.removeAttribute(d)}else if(c&&(e=a.data(j,\"tmplItem\"))){o(e.key);b[e.key]=e;h=a.data(j.parentNode,\"tmplItem\");h=h?h.key:0}if(e){k=e;while(k&&k.key!=h){k.nodes.push(j);k=k.parent}delete e._ctnt;delete e._wrap;a.data(j,\"tmplItem\",e)}function o(a){a=a+n;e=l[a]=l[a]||g(e,b[e.parent.key+n]||e.parent)}}}function u(a,d,c,b){if(!a)return l.pop();l.push({_:a,tmpl:d,item:this,data:c,options:b})}function w(d,c,b){return a.tmpl(a.template(d),c,b,this)}function x(b,d){var c=b.options||{};c.wrapped=d;return a.tmpl(a.template(b.tmpl),b.data,c,b.item)}function v(d,c){var b=this._wrap;return a.map(a(a.isArray(b)?b.join(\"\"):b).filter(d||\"*\"),function(a){return c?a.innerText||a.textContent:a.outerHTML||s(a)})}function t(){var b=this.nodes;a.tmpl(null,null,null,this).insertBefore(b[0]);a(b).remove()}})(jQuery);"},{"base":"plugins","rel":"wordfence\/js\/wfselect2.min.1756145765.js","ext":"js","size":79628,"mtime":1757312769,"type":"text","content":"\/*! Select2 4.0.13 | https:\/\/github.com\/select2\/select2\/blob\/master\/LICENSE.md *\/\n!function(n){\"function\"==typeof define&&define.amd?define([\"jquery\"],n):\"object\"==typeof module&&module.exports?module.exports=function(e,t){return void 0===t&&(t=\"undefined\"!=typeof window?require(\"jquery\"):require(\"jquery\")(e)),n(t),t}:n(jQuery)}(function(d){var e=function(){if(d&&d.fn&&d.fn.wfselect2&&d.fn.wfselect2.amd)var e=d.fn.wfselect2.amd;var t,n,i,h,o,s,f,g,m,v,y,_,r,a,w,l;function b(e,t){return r.call(e,t)}function c(e,t){var n,i,r,o,s,a,l,c,u,d,p,h=t&&t.split(\"\/\"),f=y.map,g=f&&f[\"*\"]||{};if(e){for(s=(e=e.split(\"\/\")).length-1,y.nodeIdCompat&&w.test(e[s])&&(e[s]=e[s].replace(w,\"\")),\".\"===e[0].charAt(0)&&h&&(e=h.slice(0,h.length-1).concat(e)),u=0;u<e.length;u++)if(\".\"===(p=e[u]))e.splice(u,1),u-=1;else if(\"..\"===p){if(0===u||1===u&&\"..\"===e[2]||\"..\"===e[u-1])continue;0<u&&(e.splice(u-1,2),u-=2)}e=e.join(\"\/\")}if((h||g)&&f){for(u=(n=e.split(\"\/\")).length;0<u;u-=1){if(i=n.slice(0,u).join(\"\/\"),h)for(d=h.length;0<d;d-=1)if(r=(r=f[h.slice(0,d).join(\"\/\")])&&r[i]){o=r,a=u;break}if(o)break;!l&&g&&g[i]&&(l=g[i],c=u)}!o&&l&&(o=l,a=c),o&&(n.splice(0,a,o),e=n.join(\"\/\"))}return e}function A(t,n){return function(){var e=a.call(arguments,0);return\"string\"!=typeof e[0]&&1===e.length&&e.push(null),s.apply(h,e.concat([t,n]))}}function x(t){return function(e){m[t]=e}}function D(e){if(b(v,e)){var t=v[e];delete v[e],_[e]=!0,o.apply(h,t)}if(!b(m,e)&&!b(_,e))throw new Error(\"No \"+e);return m[e]}function u(e){var t,n=e?e.indexOf(\"!\"):-1;return-1<n&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function S(e){return e?u(e):[]}return e&&e.requirejs||(e?n=e:e={},m={},v={},y={},_={},r=Object.prototype.hasOwnProperty,a=[].slice,w=\/\\.js$\/,f=function(e,t){var n,i=u(e),r=i[0],o=t[1];return e=i[1],r&&(n=D(r=c(r,o))),r?e=n&&n.normalize?n.normalize(e,function(t){return function(e){return c(e,t)}}(o)):c(e,o):(r=(i=u(e=c(e,o)))[0],e=i[1],r&&(n=D(r))),{f:r?r+\"!\"+e:e,n:e,pr:r,p:n}},g={require:function(e){return A(e)},exports:function(e){var t=m[e];return void 0!==t?t:m[e]={}},module:function(e){return{id:e,uri:\"\",exports:m[e],config:function(e){return function(){return y&&y.config&&y.config[e]||{}}}(e)}}},o=function(e,t,n,i){var r,o,s,a,l,c,u,d=[],p=typeof n;if(c=S(i=i||e),\"undefined\"==p||\"function\"==p){for(t=!t.length&&n.length?[\"require\",\"exports\",\"module\"]:t,l=0;l<t.length;l+=1)if(\"require\"===(o=(a=f(t[l],c)).f))d[l]=g.require(e);else if(\"exports\"===o)d[l]=g.exports(e),u=!0;else if(\"module\"===o)r=d[l]=g.module(e);else if(b(m,o)||b(v,o)||b(_,o))d[l]=D(o);else{if(!a.p)throw new Error(e+\" missing \"+o);a.p.load(a.n,A(i,!0),x(o),{}),d[l]=m[o]}s=n?n.apply(m[e],d):void 0,e&&(r&&r.exports!==h&&r.exports!==m[e]?m[e]=r.exports:s===h&&u||(m[e]=s))}else e&&(m[e]=n)},t=n=s=function(e,t,n,i,r){if(\"string\"==typeof e)return g[e]?g[e](t):D(f(e,S(t)).f);if(!e.splice){if((y=e).deps&&s(y.deps,y.callback),!t)return;t.splice?(e=t,t=n,n=null):e=h}return t=t||function(){},\"function\"==typeof n&&(n=i,i=r),i?o(h,e,t,n):setTimeout(function(){o(h,e,t,n)},4),s},s.config=function(e){return s(e)},t._defined=m,(i=function(e,t,n){if(\"string\"!=typeof e)throw new Error(\"See almond README: incorrect module build, no module name\");t.splice||(n=t,t=[]),b(m,e)||b(v,e)||(v[e]=[e,t,n])}).amd={jQuery:!0},e.requirejs=t,e.require=n,e.define=i),e.define(\"almond\",function(){}),e.define(\"jquery\",[],function(){var e=d||$;return null==e&&console&&console.error&&console.error(\"WFSelect2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before WFSelect2 on your web page.\"),e}),e.define(\"wfselect2\/utils\",[\"jquery\"],function(o){var r={};function u(e){var t=e.prototype,n=[];for(var i in t){\"function\"==typeof t[i]&&\"constructor\"!==i&&n.push(i)}return n}r.Extend=function(e,t){var n={}.hasOwnProperty;function i(){this.constructor=e}for(var r in t)n.call(t,r)&&(e[r]=t[r]);return i.prototype=t.prototype,e.prototype=new i,e.__super__=t.prototype,e},r.Decorate=function(i,r){var e=u(r),t=u(i);function o(){var e=Array.prototype.unshift,t=r.prototype.constructor.length,n=i.prototype.constructor;0<t&&(e.call(arguments,i.prototype.constructor),n=r.prototype.constructor),n.apply(this,arguments)}r.displayName=i.displayName,o.prototype=new function(){this.constructor=o};for(var n=0;n<t.length;n++){var s=t[n];o.prototype[s]=i.prototype[s]}function a(e){var t=function(){};e in o.prototype&&(t=o.prototype[e]);var n=r.prototype[e];return function(){return Array.prototype.unshift.call(arguments,t),n.apply(this,arguments)}}for(var l=0;l<e.length;l++){var c=e[l];o.prototype[c]=a(c)}return o};function e(){this.listeners={}}e.prototype.on=function(e,t){this.listeners=this.listeners||{},e in this.listeners?this.listeners[e].push(t):this.listeners[e]=[t]},e.prototype.trigger=function(e){var t=Array.prototype.slice,n=t.call(arguments,1);this.listeners=this.listeners||{},null==n&&(n=[]),0===n.length&&n.push({}),(n[0]._type=e)in this.listeners&&this.invoke(this.listeners[e],t.call(arguments,1)),\"*\"in this.listeners&&this.invoke(this.listeners[\"*\"],arguments)},e.prototype.invoke=function(e,t){for(var n=0,i=e.length;n<i;n++)e[n].apply(this,t)},r.Observable=e,r.generateChars=function(e){for(var t=\"\",n=0;n<e;n++){t+=Math.floor(36*Math.random()).toString(36)}return t},r.bind=function(e,t){return function(){e.apply(t,arguments)}},r._convertData=function(e){for(var t in e){var n=t.split(\"-\"),i=e;if(1!==n.length){for(var r=0;r<n.length;r++){var o=n[r];(o=o.substring(0,1).toLowerCase()+o.substring(1))in i||(i[o]={}),r==n.length-1&&(i[o]=e[t]),i=i[o]}delete e[t]}}return e},r.hasScroll=function(e,t){var n=o(t),i=t.style.overflowX,r=t.style.overflowY;return(i!==r||\"hidden\"!==r&&\"visible\"!==r)&&(\"scroll\"===i||\"scroll\"===r||(n.innerHeight()<t.scrollHeight||n.innerWidth()<t.scrollWidth))},r.escapeMarkup=function(e){var t={\"\\\\\":\"&#92;\",\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\",\"\/\":\"&#47;\"};return\"string\"!=typeof e?e:String(e).replace(\/[&<>\"'\\\/\\\\]\/g,function(e){return t[e]})},r.appendMany=function(e,t){if(\"1.7\"===o.fn.jquery.substr(0,3)){var n=o();o.map(t,function(e){n=n.add(e)}),t=n}e.append(t)},r.__cache={};var n=0;return r.GetUniqueElementId=function(e){var t=e.getAttribute(\"data-wfselect2-id\");return null==t&&(e.id?(t=e.id,e.setAttribute(\"data-wfselect2-id\",t)):(e.setAttribute(\"data-wfselect2-id\",++n),t=n.toString())),t},r.StoreData=function(e,t,n){var i=r.GetUniqueElementId(e);r.__cache[i]||(r.__cache[i]={}),r.__cache[i][t]=n},r.GetData=function(e,t){var n=r.GetUniqueElementId(e);return t?r.__cache[n]&&null!=r.__cache[n][t]?r.__cache[n][t]:o(e).data(t):r.__cache[n]},r.RemoveData=function(e){var t=r.GetUniqueElementId(e);null!=r.__cache[t]&&delete r.__cache[t],e.removeAttribute(\"data-wfselect2-id\")},r}),e.define(\"wfselect2\/results\",[\"jquery\",\".\/utils\"],function(h,f){function i(e,t,n){this.$element=e,this.data=n,this.options=t,i.__super__.constructor.call(this)}return f.Extend(i,f.Observable),i.prototype.render=function(){var e=h('<ul class=\"wfselect2-results__options\" role=\"listbox\"><\/ul>');return this.options.get(\"multiple\")&&e.attr(\"aria-multiselectable\",\"true\"),this.$results=e},i.prototype.clear=function(){this.$results.empty()},i.prototype.displayMessage=function(e){var t=this.options.get(\"escapeMarkup\");this.clear(),this.hideLoading();var n=h('<li role=\"alert\" aria-live=\"assertive\" class=\"wfselect2-results__option\"><\/li>'),i=this.options.get(\"translations\").get(e.message);n.append(t(i(e.args))),n[0].className+=\" wfselect2-results__message\",this.$results.append(n)},i.prototype.hideMessages=function(){this.$results.find(\".wfselect2-results__message\").remove()},i.prototype.append=function(e){this.hideLoading();var t=[];if(null!=e.results&&0!==e.results.length){e.results=this.sort(e.results);for(var n=0;n<e.results.length;n++){var i=e.results[n],r=this.option(i);t.push(r)}this.$results.append(t)}else 0===this.$results.children().length&&this.trigger(\"results:message\",{message:\"noResults\"})},i.prototype.position=function(e,t){t.find(\".wfselect2-results\").append(e)},i.prototype.sort=function(e){return this.options.get(\"sorter\")(e)},i.prototype.highlightFirstItem=function(){var e=this.$results.find(\".wfselect2-results__option[aria-selected]\"),t=e.filter(\"[aria-selected=true]\");0<t.length?t.first().trigger(\"mouseenter\"):e.first().trigger(\"mouseenter\"),this.ensureHighlightVisible()},i.prototype.setClasses=function(){var t=this;this.data.current(function(e){var i=h.map(e,function(e){return e.id.toString()});t.$results.find(\".wfselect2-results__option[aria-selected]\").each(function(){var e=h(this),t=f.GetData(this,\"data\"),n=\"\"+t.id;null!=t.element&&t.element.selected||null==t.element&&-1<h.inArray(n,i)?e.attr(\"aria-selected\",\"true\"):e.attr(\"aria-selected\",\"false\")})})},i.prototype.showLoading=function(e){this.hideLoading();var t={disabled:!0,loading:!0,text:this.options.get(\"translations\").get(\"searching\")(e)},n=this.option(t);n.className+=\" loading-results\",this.$results.prepend(n)},i.prototype.hideLoading=function(){this.$results.find(\".loading-results\").remove()},i.prototype.option=function(e){var t=document.createElement(\"li\");t.className=\"wfselect2-results__option\";var n={role:\"option\",\"aria-selected\":\"false\"},i=window.Element.prototype.matches||window.Element.prototype.msMatchesSelector||window.Element.prototype.webkitMatchesSelector;for(var r in(null!=e.element&&i.call(e.element,\":disabled\")||null==e.element&&e.disabled)&&(delete n[\"aria-selected\"],n[\"aria-disabled\"]=\"true\"),null==e.id&&delete n[\"aria-selected\"],null!=e._resultId&&(t.id=e._resultId),e.title&&(t.title=e.title),e.children&&(n.role=\"group\",n[\"aria-label\"]=e.text,delete n[\"aria-selected\"]),n){var o=n[r];t.setAttribute(r,o)}if(e.children){var s=h(t),a=document.createElement(\"strong\");a.className=\"wfselect2-results__group\";h(a);this.template(e,a);for(var l=[],c=0;c<e.children.length;c++){var u=e.children[c],d=this.option(u);l.push(d)}var p=h(\"<ul><\/ul>\",{class:\"wfselect2-results__options wfselect2-results__options--nested\"});p.append(l),s.append(a),s.append(p)}else this.template(e,t);return f.StoreData(t,\"data\",e),t},i.prototype.bind=function(t,e){var l=this,n=t.id+\"-results\";this.$results.attr(\"id\",n),t.on(\"results:all\",function(e){l.clear(),l.append(e.data),t.isOpen()&&(l.setClasses(),l.highlightFirstItem())}),t.on(\"results:append\",function(e){l.append(e.data),t.isOpen()&&l.setClasses()}),t.on(\"query\",function(e){l.hideMessages(),l.showLoading(e)}),t.on(\"select\",function(){t.isOpen()&&(l.setClasses(),l.options.get(\"scrollAfterSelect\")&&l.highlightFirstItem())}),t.on(\"unselect\",function(){t.isOpen()&&(l.setClasses(),l.options.get(\"scrollAfterSelect\")&&l.highlightFirstItem())}),t.on(\"open\",function(){l.$results.attr(\"aria-expanded\",\"true\"),l.$results.attr(\"aria-hidden\",\"false\"),l.setClasses(),l.ensureHighlightVisible()}),t.on(\"close\",function(){l.$results.attr(\"aria-expanded\",\"false\"),l.$results.attr(\"aria-hidden\",\"true\"),l.$results.removeAttr(\"aria-activedescendant\")}),t.on(\"results:toggle\",function(){var e=l.getHighlightedResults();0!==e.length&&e.trigger(\"mouseup\")}),t.on(\"results:select\",function(){var e=l.getHighlightedResults();if(0!==e.length){var t=f.GetData(e[0],\"data\");\"true\"==e.attr(\"aria-selected\")?l.trigger(\"close\",{}):l.trigger(\"select\",{data:t})}}),t.on(\"results:previous\",function(){var e=l.getHighlightedResults(),t=l.$results.find(\"[aria-selected]\"),n=t.index(e);if(!(n<=0)){var i=n-1;0===e.length&&(i=0);var r=t.eq(i);r.trigger(\"mouseenter\");var o=l.$results.offset().top,s=r.offset().top,a=l.$results.scrollTop()+(s-o);0===i?l.$results.scrollTop(0):s-o<0&&l.$results.scrollTop(a)}}),t.on(\"results:next\",function(){var e=l.getHighlightedResults(),t=l.$results.find(\"[aria-selected]\"),n=t.index(e)+1;if(!(n>=t.length)){var i=t.eq(n);i.trigger(\"mouseenter\");var r=l.$results.offset().top+l.$results.outerHeight(!1),o=i.offset().top+i.outerHeight(!1),s=l.$results.scrollTop()+o-r;0===n?l.$results.scrollTop(0):r<o&&l.$results.scrollTop(s)}}),t.on(\"results:focus\",function(e){e.element.addClass(\"wfselect2-results__option--highlighted\")}),t.on(\"results:message\",function(e){l.displayMessage(e)}),h.fn.mousewheel&&this.$results.on(\"mousewheel\",function(e){var t=l.$results.scrollTop(),n=l.$results.get(0).scrollHeight-t+e.deltaY,i=0<e.deltaY&&t-e.deltaY<=0,r=e.deltaY<0&&n<=l.$results.height();i?(l.$results.scrollTop(0),e.preventDefault(),e.stopPropagation()):r&&(l.$results.scrollTop(l.$results.get(0).scrollHeight-l.$results.height()),e.preventDefault(),e.stopPropagation())}),this.$results.on(\"mouseup\",\".wfselect2-results__option[aria-selected]\",function(e){var t=h(this),n=f.GetData(this,\"data\");\"true\"!==t.attr(\"aria-selected\")?l.trigger(\"select\",{originalEvent:e,data:n}):l.options.get(\"multiple\")?l.trigger(\"unselect\",{originalEvent:e,data:n}):l.trigger(\"close\",{})}),this.$results.on(\"mouseenter\",\".wfselect2-results__option[aria-selected]\",function(e){var t=f.GetData(this,\"data\");l.getHighlightedResults().removeClass(\"wfselect2-results__option--highlighted\"),l.trigger(\"results:focus\",{data:t,element:h(this)})})},i.prototype.getHighlightedResults=function(){return this.$results.find(\".wfselect2-results__option--highlighted\")},i.prototype.destroy=function(){this.$results.remove()},i.prototype.ensureHighlightVisible=function(){var e=this.getHighlightedResults();if(0!==e.length){var t=this.$results.find(\"[aria-selected]\").index(e),n=this.$results.offset().top,i=e.offset().top,r=this.$results.scrollTop()+(i-n),o=i-n;r-=2*e.outerHeight(!1),t<=2?this.$results.scrollTop(0):(o>this.$results.outerHeight()||o<0)&&this.$results.scrollTop(r)}},i.prototype.template=function(e,t){var n=this.options.get(\"templateResult\"),i=this.options.get(\"escapeMarkup\"),r=n(e,t);null==r?t.style.display=\"none\":\"string\"==typeof r?t.innerHTML=i(r):h(t).append(r)},i}),e.define(\"wfselect2\/keys\",[],function(){return{BACKSPACE:8,TAB:9,ENTER:13,SHIFT:16,CTRL:17,ALT:18,ESC:27,SPACE:32,PAGE_UP:33,PAGE_DOWN:34,END:35,HOME:36,LEFT:37,UP:38,RIGHT:39,DOWN:40,DELETE:46}}),e.define(\"wfselect2\/selection\/base\",[\"jquery\",\"..\/utils\",\"..\/keys\"],function(n,i,r){function o(e,t){this.$element=e,this.options=t,o.__super__.constructor.call(this)}return i.Extend(o,i.Observable),o.prototype.render=function(){var e=n('<span class=\"wfselect2-selection\" role=\"combobox\"  aria-haspopup=\"true\" aria-expanded=\"false\"><\/span>');return this._tabindex=0,null!=i.GetData(this.$element[0],\"old-tabindex\")?this._tabindex=i.GetData(this.$element[0],\"old-tabindex\"):null!=this.$element.attr(\"tabindex\")&&(this._tabindex=this.$element.attr(\"tabindex\")),e.attr(\"title\",this.$element.attr(\"title\")),e.attr(\"tabindex\",this._tabindex),e.attr(\"aria-disabled\",\"false\"),this.$selection=e},o.prototype.bind=function(e,t){var n=this,i=e.id+\"-results\";this.container=e,this.$selection.on(\"focus\",function(e){n.trigger(\"focus\",e)}),this.$selection.on(\"blur\",function(e){n._handleBlur(e)}),this.$selection.on(\"keydown\",function(e){n.trigger(\"keypress\",e),e.which===r.SPACE&&e.preventDefault()}),e.on(\"results:focus\",function(e){n.$selection.attr(\"aria-activedescendant\",e.data._resultId)}),e.on(\"selection:update\",function(e){n.update(e.data)}),e.on(\"open\",function(){n.$selection.attr(\"aria-expanded\",\"true\"),n.$selection.attr(\"aria-owns\",i),n._attachCloseHandler(e)}),e.on(\"close\",function(){n.$selection.attr(\"aria-expanded\",\"false\"),n.$selection.removeAttr(\"aria-activedescendant\"),n.$selection.removeAttr(\"aria-owns\"),n.$selection.trigger(\"focus\"),n._detachCloseHandler(e)}),e.on(\"enable\",function(){n.$selection.attr(\"tabindex\",n._tabindex),n.$selection.attr(\"aria-disabled\",\"false\")}),e.on(\"disable\",function(){n.$selection.attr(\"tabindex\",\"-1\"),n.$selection.attr(\"aria-disabled\",\"true\")})},o.prototype._handleBlur=function(e){var t=this;window.setTimeout(function(){document.activeElement==t.$selection[0]||n.contains(t.$selection[0],document.activeElement)||t.trigger(\"blur\",e)},1)},o.prototype._attachCloseHandler=function(e){n(document.body).on(\"mousedown.wfselect2.\"+e.id,function(e){var t=n(e.target).closest(\".wfselect2\");n(\".wfselect2.wfselect2-container--open\").each(function(){this!=t[0]&&i.GetData(this,\"element\").wfselect2(\"close\")})})},o.prototype._detachCloseHandler=function(e){n(document.body).off(\"mousedown.wfselect2.\"+e.id)},o.prototype.position=function(e,t){t.find(\".selection\").append(e)},o.prototype.destroy=function(){this._detachCloseHandler(this.container)},o.prototype.update=function(e){throw new Error(\"The `update` method must be defined in child classes.\")},o.prototype.isEnabled=function(){return!this.isDisabled()},o.prototype.isDisabled=function(){return this.options.get(\"disabled\")},o}),e.define(\"wfselect2\/selection\/single\",[\"jquery\",\".\/base\",\"..\/utils\",\"..\/keys\"],function(e,t,n,i){function r(){r.__super__.constructor.apply(this,arguments)}return n.Extend(r,t),r.prototype.render=function(){var e=r.__super__.render.call(this);return e.addClass(\"wfselect2-selection--single\"),e.html('<span class=\"wfselect2-selection__rendered\"><\/span><span class=\"wfselect2-selection__arrow\" role=\"presentation\"><b role=\"presentation\"><\/b><\/span>'),e},r.prototype.bind=function(t,e){var n=this;r.__super__.bind.apply(this,arguments);var i=t.id+\"-container\";this.$selection.find(\".wfselect2-selection__rendered\").attr(\"id\",i).attr(\"role\",\"textbox\").attr(\"aria-readonly\",\"true\"),this.$selection.attr(\"aria-labelledby\",i),this.$selection.on(\"mousedown\",function(e){1===e.which&&n.trigger(\"toggle\",{originalEvent:e})}),this.$selection.on(\"focus\",function(e){}),this.$selection.on(\"blur\",function(e){}),t.on(\"focus\",function(e){t.isOpen()||n.$selection.trigger(\"focus\")})},r.prototype.clear=function(){var e=this.$selection.find(\".wfselect2-selection__rendered\");e.empty(),e.removeAttr(\"title\")},r.prototype.display=function(e,t){var n=this.options.get(\"templateSelection\");return this.options.get(\"escapeMarkup\")(n(e,t))},r.prototype.selectionContainer=function(){return e(\"<span><\/span>\")},r.prototype.update=function(e){if(0!==e.length){var t=e[0],n=this.$selection.find(\".wfselect2-selection__rendered\"),i=this.display(t,n);n.empty().append(i);var r=t.title||t.text;r?n.attr(\"title\",r):n.removeAttr(\"title\")}else this.clear()},r}),e.define(\"wfselect2\/selection\/multiple\",[\"jquery\",\".\/base\",\"..\/utils\"],function(r,e,l){function n(e,t){n.__super__.constructor.apply(this,arguments)}return l.Extend(n,e),n.prototype.render=function(){var e=n.__super__.render.call(this);return e.addClass(\"wfselect2-selection--multiple\"),e.html('<ul class=\"wfselect2-selection__rendered\"><\/ul>'),e},n.prototype.bind=function(e,t){var i=this;n.__super__.bind.apply(this,arguments),this.$selection.on(\"click\",function(e){i.trigger(\"toggle\",{originalEvent:e})}),this.$selection.on(\"click\",\".wfselect2-selection__choice__remove\",function(e){if(!i.isDisabled()){var t=r(this).parent(),n=l.GetData(t[0],\"data\");i.trigger(\"unselect\",{originalEvent:e,data:n})}})},n.prototype.clear=function(){var e=this.$selection.find(\".wfselect2-selection__rendered\");e.empty(),e.removeAttr(\"title\")},n.prototype.display=function(e,t){var n=this.options.get(\"templateSelection\");return this.options.get(\"escapeMarkup\")(n(e,t))},n.prototype.selectionContainer=function(){return r('<li class=\"wfselect2-selection__choice\"><span class=\"wfselect2-selection__choice__remove\" role=\"presentation\">&times;<\/span><\/li>')},n.prototype.update=function(e){if(this.clear(),0!==e.length){for(var t=[],n=0;n<e.length;n++){var i=e[n],r=this.selectionContainer(),o=this.display(i,r);r.append(o);var s=i.title||i.text;s&&r.attr(\"title\",s),l.StoreData(r[0],\"data\",i),t.push(r)}var a=this.$selection.find(\".wfselect2-selection__rendered\");l.appendMany(a,t)}},n}),e.define(\"wfselect2\/selection\/placeholder\",[\"..\/utils\"],function(e){function t(e,t,n){this.placeholder=this.normalizePlaceholder(n.get(\"placeholder\")),e.call(this,t,n)}return t.prototype.normalizePlaceholder=function(e,t){return\"string\"==typeof t&&(t={id:\"\",text:t}),t},t.prototype.createPlaceholder=function(e,t){var n=this.selectionContainer();return n.html(this.display(t)),n.addClass(\"wfselect2-selection__placeholder\").removeClass(\"wfselect2-selection__choice\"),n},t.prototype.update=function(e,t){var n=1==t.length&&t[0].id!=this.placeholder.id;if(1<t.length||n)return e.call(this,t);this.clear();var i=this.createPlaceholder(this.placeholder);this.$selection.find(\".wfselect2-selection__rendered\").append(i)},t}),e.define(\"wfselect2\/selection\/allowClear\",[\"jquery\",\"..\/keys\",\"..\/utils\"],function(r,i,a){function e(){}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),null==this.placeholder&&this.options.get(\"debug\")&&window.console&&console.error&&console.error(\"WFSelect2: The `allowClear` option should be used in combination with the `placeholder` option.\"),this.$selection.on(\"mousedown\",\".wfselect2-selection__clear\",function(e){i._handleClear(e)}),t.on(\"keypress\",function(e){i._handleKeyboardClear(e,t)})},e.prototype._handleClear=function(e,t){if(!this.isDisabled()){var n=this.$selection.find(\".wfselect2-selection__clear\");if(0!==n.length){t.stopPropagation();var i=a.GetData(n[0],\"data\"),r=this.$element.val();this.$element.val(this.placeholder.id);var o={data:i};if(this.trigger(\"clear\",o),o.prevented)this.$element.val(r);else{for(var s=0;s<i.length;s++)if(o={data:i[s]},this.trigger(\"unselect\",o),o.prevented)return void this.$element.val(r);this.$element.trigger(\"input\").trigger(\"change\"),this.trigger(\"toggle\",{})}}}},e.prototype._handleKeyboardClear=function(e,t,n){n.isOpen()||t.which!=i.DELETE&&t.which!=i.BACKSPACE||this._handleClear(t)},e.prototype.update=function(e,t){if(e.call(this,t),!(0<this.$selection.find(\".wfselect2-selection__placeholder\").length||0===t.length)){var n=this.options.get(\"translations\").get(\"removeAllItems\"),i=r('<span class=\"wfselect2-selection__clear\" title=\"'+n()+'\">&times;<\/span>');a.StoreData(i[0],\"data\",t),this.$selection.find(\".wfselect2-selection__rendered\").prepend(i)}},e}),e.define(\"wfselect2\/selection\/search\",[\"jquery\",\"..\/utils\",\"..\/keys\"],function(i,a,l){function e(e,t,n){e.call(this,t,n)}return e.prototype.render=function(e){var t=i('<li class=\"wfselect2-search wfselect2-search--inline\"><input class=\"wfselect2-search__field\" type=\"search\" tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"none\" spellcheck=\"false\" role=\"searchbox\" aria-autocomplete=\"list\" \/><\/li>');this.$searchContainer=t,this.$search=t.find(\"input\");var n=e.call(this);return this._transferTabIndex(),n},e.prototype.bind=function(e,t,n){var i=this,r=t.id+\"-results\";e.call(this,t,n),t.on(\"open\",function(){i.$search.attr(\"aria-controls\",r),i.$search.trigger(\"focus\")}),t.on(\"close\",function(){i.$search.val(\"\"),i.$search.removeAttr(\"aria-controls\"),i.$search.removeAttr(\"aria-activedescendant\"),i.$search.trigger(\"focus\")}),t.on(\"enable\",function(){i.$search.prop(\"disabled\",!1),i._transferTabIndex()}),t.on(\"disable\",function(){i.$search.prop(\"disabled\",!0)}),t.on(\"focus\",function(e){i.$search.trigger(\"focus\")}),t.on(\"results:focus\",function(e){e.data._resultId?i.$search.attr(\"aria-activedescendant\",e.data._resultId):i.$search.removeAttr(\"aria-activedescendant\")}),this.$selection.on(\"focusin\",\".wfselect2-search--inline\",function(e){i.trigger(\"focus\",e)}),this.$selection.on(\"focusout\",\".wfselect2-search--inline\",function(e){i._handleBlur(e)}),this.$selection.on(\"keydown\",\".wfselect2-search--inline\",function(e){if(e.stopPropagation(),i.trigger(\"keypress\",e),i._keyUpPrevented=e.isDefaultPrevented(),e.which===l.BACKSPACE&&\"\"===i.$search.val()){var t=i.$searchContainer.prev(\".wfselect2-selection__choice\");if(0<t.length){var n=a.GetData(t[0],\"data\");i.searchRemoveChoice(n),e.preventDefault()}}}),this.$selection.on(\"click\",\".wfselect2-search--inline\",function(e){i.$search.val()&&e.stopPropagation()});var o=document.documentMode,s=o&&o<=11;this.$selection.on(\"input.searchcheck\",\".wfselect2-search--inline\",function(e){s?i.$selection.off(\"input.search input.searchcheck\"):i.$selection.off(\"keyup.search\")}),this.$selection.on(\"keyup.search input.search\",\".wfselect2-search--inline\",function(e){if(s&&\"input\"===e.type)i.$selection.off(\"input.search input.searchcheck\");else{var t=e.which;t!=l.SHIFT&&t!=l.CTRL&&t!=l.ALT&&t!=l.TAB&&i.handleSearch(e)}})},e.prototype._transferTabIndex=function(e){this.$search.attr(\"tabindex\",this.$selection.attr(\"tabindex\")),this.$selection.attr(\"tabindex\",\"-1\")},e.prototype.createPlaceholder=function(e,t){this.$search.attr(\"placeholder\",t.text)},e.prototype.update=function(e,t){var n=this.$search[0]==document.activeElement;this.$search.attr(\"placeholder\",\"\"),e.call(this,t),this.$selection.find(\".wfselect2-selection__rendered\").append(this.$searchContainer),this.resizeSearch(),n&&this.$search.trigger(\"focus\")},e.prototype.handleSearch=function(){if(this.resizeSearch(),!this._keyUpPrevented){var e=this.$search.val();this.trigger(\"query\",{term:e})}this._keyUpPrevented=!1},e.prototype.searchRemoveChoice=function(e,t){this.trigger(\"unselect\",{data:t}),this.$search.val(t.text),this.handleSearch()},e.prototype.resizeSearch=function(){this.$search.css(\"width\",\"25px\");var e=\"\";\"\"!==this.$search.attr(\"placeholder\")?e=this.$selection.find(\".wfselect2-selection__rendered\").width():e=.75*(this.$search.val().length+1)+\"em\";this.$search.css(\"width\",e)},e}),e.define(\"wfselect2\/selection\/eventRelay\",[\"jquery\"],function(s){function e(){}return e.prototype.bind=function(e,t,n){var i=this,r=[\"open\",\"opening\",\"close\",\"closing\",\"select\",\"selecting\",\"unselect\",\"unselecting\",\"clear\",\"clearing\"],o=[\"opening\",\"closing\",\"selecting\",\"unselecting\",\"clearing\"];e.call(this,t,n),t.on(\"*\",function(e,t){if(-1!==s.inArray(e,r)){t=t||{};var n=s.Event(\"wfselect2:\"+e,{params:t});i.$element.trigger(n),-1!==s.inArray(e,o)&&(t.prevented=n.isDefaultPrevented())}})},e}),e.define(\"wfselect2\/translation\",[\"jquery\",\"require\"],function(t,n){function i(e){this.dict=e||{}}return i.prototype.all=function(){return this.dict},i.prototype.get=function(e){return this.dict[e]},i.prototype.extend=function(e){this.dict=t.extend({},e.all(),this.dict)},i._cache={},i.loadPath=function(e){if(!(e in i._cache)){var t=n(e);i._cache[e]=t}return new i(i._cache[e])},i}),e.define(\"wfselect2\/diacritics\",[],function(){return{\"\u24b6\":\"A\",\"\uff21\":\"A\",\"\u00c0\":\"A\",\"\u00c1\":\"A\",\"\u00c2\":\"A\",\"\u1ea6\":\"A\",\"\u1ea4\":\"A\",\"\u1eaa\":\"A\",\"\u1ea8\":\"A\",\"\u00c3\":\"A\",\"\u0100\":\"A\",\"\u0102\":\"A\",\"\u1eb0\":\"A\",\"\u1eae\":\"A\",\"\u1eb4\":\"A\",\"\u1eb2\":\"A\",\"\u0226\":\"A\",\"\u01e0\":\"A\",\"\u00c4\":\"A\",\"\u01de\":\"A\",\"\u1ea2\":\"A\",\"\u00c5\":\"A\",\"\u01fa\":\"A\",\"\u01cd\":\"A\",\"\u0200\":\"A\",\"\u0202\":\"A\",\"\u1ea0\":\"A\",\"\u1eac\":\"A\",\"\u1eb6\":\"A\",\"\u1e00\":\"A\",\"\u0104\":\"A\",\"\u023a\":\"A\",\"\u2c6f\":\"A\",\"\ua732\":\"AA\",\"\u00c6\":\"AE\",\"\u01fc\":\"AE\",\"\u01e2\":\"AE\",\"\ua734\":\"AO\",\"\ua736\":\"AU\",\"\ua738\":\"AV\",\"\ua73a\":\"AV\",\"\ua73c\":\"AY\",\"\u24b7\":\"B\",\"\uff22\":\"B\",\"\u1e02\":\"B\",\"\u1e04\":\"B\",\"\u1e06\":\"B\",\"\u0243\":\"B\",\"\u0182\":\"B\",\"\u0181\":\"B\",\"\u24b8\":\"C\",\"\uff23\":\"C\",\"\u0106\":\"C\",\"\u0108\":\"C\",\"\u010a\":\"C\",\"\u010c\":\"C\",\"\u00c7\":\"C\",\"\u1e08\":\"C\",\"\u0187\":\"C\",\"\u023b\":\"C\",\"\ua73e\":\"C\",\"\u24b9\":\"D\",\"\uff24\":\"D\",\"\u1e0a\":\"D\",\"\u010e\":\"D\",\"\u1e0c\":\"D\",\"\u1e10\":\"D\",\"\u1e12\":\"D\",\"\u1e0e\":\"D\",\"\u0110\":\"D\",\"\u018b\":\"D\",\"\u018a\":\"D\",\"\u0189\":\"D\",\"\ua779\":\"D\",\"\u01f1\":\"DZ\",\"\u01c4\":\"DZ\",\"\u01f2\":\"Dz\",\"\u01c5\":\"Dz\",\"\u24ba\":\"E\",\"\uff25\":\"E\",\"\u00c8\":\"E\",\"\u00c9\":\"E\",\"\u00ca\":\"E\",\"\u1ec0\":\"E\",\"\u1ebe\":\"E\",\"\u1ec4\":\"E\",\"\u1ec2\":\"E\",\"\u1ebc\":\"E\",\"\u0112\":\"E\",\"\u1e14\":\"E\",\"\u1e16\":\"E\",\"\u0114\":\"E\",\"\u0116\":\"E\",\"\u00cb\":\"E\",\"\u1eba\":\"E\",\"\u011a\":\"E\",\"\u0204\":\"E\",\"\u0206\":\"E\",\"\u1eb8\":\"E\",\"\u1ec6\":\"E\",\"\u0228\":\"E\",\"\u1e1c\":\"E\",\"\u0118\":\"E\",\"\u1e18\":\"E\",\"\u1e1a\":\"E\",\"\u0190\":\"E\",\"\u018e\":\"E\",\"\u24bb\":\"F\",\"\uff26\":\"F\",\"\u1e1e\":\"F\",\"\u0191\":\"F\",\"\ua77b\":\"F\",\"\u24bc\":\"G\",\"\uff27\":\"G\",\"\u01f4\":\"G\",\"\u011c\":\"G\",\"\u1e20\":\"G\",\"\u011e\":\"G\",\"\u0120\":\"G\",\"\u01e6\":\"G\",\"\u0122\":\"G\",\"\u01e4\":\"G\",\"\u0193\":\"G\",\"\ua7a0\":\"G\",\"\ua77d\":\"G\",\"\ua77e\":\"G\",\"\u24bd\":\"H\",\"\uff28\":\"H\",\"\u0124\":\"H\",\"\u1e22\":\"H\",\"\u1e26\":\"H\",\"\u021e\":\"H\",\"\u1e24\":\"H\",\"\u1e28\":\"H\",\"\u1e2a\":\"H\",\"\u0126\":\"H\",\"\u2c67\":\"H\",\"\u2c75\":\"H\",\"\ua78d\":\"H\",\"\u24be\":\"I\",\"\uff29\":\"I\",\"\u00cc\":\"I\",\"\u00cd\":\"I\",\"\u00ce\":\"I\",\"\u0128\":\"I\",\"\u012a\":\"I\",\"\u012c\":\"I\",\"\u0130\":\"I\",\"\u00cf\":\"I\",\"\u1e2e\":\"I\",\"\u1ec8\":\"I\",\"\u01cf\":\"I\",\"\u0208\":\"I\",\"\u020a\":\"I\",\"\u1eca\":\"I\",\"\u012e\":\"I\",\"\u1e2c\":\"I\",\"\u0197\":\"I\",\"\u24bf\":\"J\",\"\uff2a\":\"J\",\"\u0134\":\"J\",\"\u0248\":\"J\",\"\u24c0\":\"K\",\"\uff2b\":\"K\",\"\u1e30\":\"K\",\"\u01e8\":\"K\",\"\u1e32\":\"K\",\"\u0136\":\"K\",\"\u1e34\":\"K\",\"\u0198\":\"K\",\"\u2c69\":\"K\",\"\ua740\":\"K\",\"\ua742\":\"K\",\"\ua744\":\"K\",\"\ua7a2\":\"K\",\"\u24c1\":\"L\",\"\uff2c\":\"L\",\"\u013f\":\"L\",\"\u0139\":\"L\",\"\u013d\":\"L\",\"\u1e36\":\"L\",\"\u1e38\":\"L\",\"\u013b\":\"L\",\"\u1e3c\":\"L\",\"\u1e3a\":\"L\",\"\u0141\":\"L\",\"\u023d\":\"L\",\"\u2c62\":\"L\",\"\u2c60\":\"L\",\"\ua748\":\"L\",\"\ua746\":\"L\",\"\ua780\":\"L\",\"\u01c7\":\"LJ\",\"\u01c8\":\"Lj\",\"\u24c2\":\"M\",\"\uff2d\":\"M\",\"\u1e3e\":\"M\",\"\u1e40\":\"M\",\"\u1e42\":\"M\",\"\u2c6e\":\"M\",\"\u019c\":\"M\",\"\u24c3\":\"N\",\"\uff2e\":\"N\",\"\u01f8\":\"N\",\"\u0143\":\"N\",\"\u00d1\":\"N\",\"\u1e44\":\"N\",\"\u0147\":\"N\",\"\u1e46\":\"N\",\"\u0145\":\"N\",\"\u1e4a\":\"N\",\"\u1e48\":\"N\",\"\u0220\":\"N\",\"\u019d\":\"N\",\"\ua790\":\"N\",\"\ua7a4\":\"N\",\"\u01ca\":\"NJ\",\"\u01cb\":\"Nj\",\"\u24c4\":\"O\",\"\uff2f\":\"O\",\"\u00d2\":\"O\",\"\u00d3\":\"O\",\"\u00d4\":\"O\",\"\u1ed2\":\"O\",\"\u1ed0\":\"O\",\"\u1ed6\":\"O\",\"\u1ed4\":\"O\",\"\u00d5\":\"O\",\"\u1e4c\":\"O\",\"\u022c\":\"O\",\"\u1e4e\":\"O\",\"\u014c\":\"O\",\"\u1e50\":\"O\",\"\u1e52\":\"O\",\"\u014e\":\"O\",\"\u022e\":\"O\",\"\u0230\":\"O\",\"\u00d6\":\"O\",\"\u022a\":\"O\",\"\u1ece\":\"O\",\"\u0150\":\"O\",\"\u01d1\":\"O\",\"\u020c\":\"O\",\"\u020e\":\"O\",\"\u01a0\":\"O\",\"\u1edc\":\"O\",\"\u1eda\":\"O\",\"\u1ee0\":\"O\",\"\u1ede\":\"O\",\"\u1ee2\":\"O\",\"\u1ecc\":\"O\",\"\u1ed8\":\"O\",\"\u01ea\":\"O\",\"\u01ec\":\"O\",\"\u00d8\":\"O\",\"\u01fe\":\"O\",\"\u0186\":\"O\",\"\u019f\":\"O\",\"\ua74a\":\"O\",\"\ua74c\":\"O\",\"\u0152\":\"OE\",\"\u01a2\":\"OI\",\"\ua74e\":\"OO\",\"\u0222\":\"OU\",\"\u24c5\":\"P\",\"\uff30\":\"P\",\"\u1e54\":\"P\",\"\u1e56\":\"P\",\"\u01a4\":\"P\",\"\u2c63\":\"P\",\"\ua750\":\"P\",\"\ua752\":\"P\",\"\ua754\":\"P\",\"\u24c6\":\"Q\",\"\uff31\":\"Q\",\"\ua756\":\"Q\",\"\ua758\":\"Q\",\"\u024a\":\"Q\",\"\u24c7\":\"R\",\"\uff32\":\"R\",\"\u0154\":\"R\",\"\u1e58\":\"R\",\"\u0158\":\"R\",\"\u0210\":\"R\",\"\u0212\":\"R\",\"\u1e5a\":\"R\",\"\u1e5c\":\"R\",\"\u0156\":\"R\",\"\u1e5e\":\"R\",\"\u024c\":\"R\",\"\u2c64\":\"R\",\"\ua75a\":\"R\",\"\ua7a6\":\"R\",\"\ua782\":\"R\",\"\u24c8\":\"S\",\"\uff33\":\"S\",\"\u1e9e\":\"S\",\"\u015a\":\"S\",\"\u1e64\":\"S\",\"\u015c\":\"S\",\"\u1e60\":\"S\",\"\u0160\":\"S\",\"\u1e66\":\"S\",\"\u1e62\":\"S\",\"\u1e68\":\"S\",\"\u0218\":\"S\",\"\u015e\":\"S\",\"\u2c7e\":\"S\",\"\ua7a8\":\"S\",\"\ua784\":\"S\",\"\u24c9\":\"T\",\"\uff34\":\"T\",\"\u1e6a\":\"T\",\"\u0164\":\"T\",\"\u1e6c\":\"T\",\"\u021a\":\"T\",\"\u0162\":\"T\",\"\u1e70\":\"T\",\"\u1e6e\":\"T\",\"\u0166\":\"T\",\"\u01ac\":\"T\",\"\u01ae\":\"T\",\"\u023e\":\"T\",\"\ua786\":\"T\",\"\ua728\":\"TZ\",\"\u24ca\":\"U\",\"\uff35\":\"U\",\"\u00d9\":\"U\",\"\u00da\":\"U\",\"\u00db\":\"U\",\"\u0168\":\"U\",\"\u1e78\":\"U\",\"\u016a\":\"U\",\"\u1e7a\":\"U\",\"\u016c\":\"U\",\"\u00dc\":\"U\",\"\u01db\":\"U\",\"\u01d7\":\"U\",\"\u01d5\":\"U\",\"\u01d9\":\"U\",\"\u1ee6\":\"U\",\"\u016e\":\"U\",\"\u0170\":\"U\",\"\u01d3\":\"U\",\"\u0214\":\"U\",\"\u0216\":\"U\",\"\u01af\":\"U\",\"\u1eea\":\"U\",\"\u1ee8\":\"U\",\"\u1eee\":\"U\",\"\u1eec\":\"U\",\"\u1ef0\":\"U\",\"\u1ee4\":\"U\",\"\u1e72\":\"U\",\"\u0172\":\"U\",\"\u1e76\":\"U\",\"\u1e74\":\"U\",\"\u0244\":\"U\",\"\u24cb\":\"V\",\"\uff36\":\"V\",\"\u1e7c\":\"V\",\"\u1e7e\":\"V\",\"\u01b2\":\"V\",\"\ua75e\":\"V\",\"\u0245\":\"V\",\"\ua760\":\"VY\",\"\u24cc\":\"W\",\"\uff37\":\"W\",\"\u1e80\":\"W\",\"\u1e82\":\"W\",\"\u0174\":\"W\",\"\u1e86\":\"W\",\"\u1e84\":\"W\",\"\u1e88\":\"W\",\"\u2c72\":\"W\",\"\u24cd\":\"X\",\"\uff38\":\"X\",\"\u1e8a\":\"X\",\"\u1e8c\":\"X\",\"\u24ce\":\"Y\",\"\uff39\":\"Y\",\"\u1ef2\":\"Y\",\"\u00dd\":\"Y\",\"\u0176\":\"Y\",\"\u1ef8\":\"Y\",\"\u0232\":\"Y\",\"\u1e8e\":\"Y\",\"\u0178\":\"Y\",\"\u1ef6\":\"Y\",\"\u1ef4\":\"Y\",\"\u01b3\":\"Y\",\"\u024e\":\"Y\",\"\u1efe\":\"Y\",\"\u24cf\":\"Z\",\"\uff3a\":\"Z\",\"\u0179\":\"Z\",\"\u1e90\":\"Z\",\"\u017b\":\"Z\",\"\u017d\":\"Z\",\"\u1e92\":\"Z\",\"\u1e94\":\"Z\",\"\u01b5\":\"Z\",\"\u0224\":\"Z\",\"\u2c7f\":\"Z\",\"\u2c6b\":\"Z\",\"\ua762\":\"Z\",\"\u24d0\":\"a\",\"\uff41\":\"a\",\"\u1e9a\":\"a\",\"\u00e0\":\"a\",\"\u00e1\":\"a\",\"\u00e2\":\"a\",\"\u1ea7\":\"a\",\"\u1ea5\":\"a\",\"\u1eab\":\"a\",\"\u1ea9\":\"a\",\"\u00e3\":\"a\",\"\u0101\":\"a\",\"\u0103\":\"a\",\"\u1eb1\":\"a\",\"\u1eaf\":\"a\",\"\u1eb5\":\"a\",\"\u1eb3\":\"a\",\"\u0227\":\"a\",\"\u01e1\":\"a\",\"\u00e4\":\"a\",\"\u01df\":\"a\",\"\u1ea3\":\"a\",\"\u00e5\":\"a\",\"\u01fb\":\"a\",\"\u01ce\":\"a\",\"\u0201\":\"a\",\"\u0203\":\"a\",\"\u1ea1\":\"a\",\"\u1ead\":\"a\",\"\u1eb7\":\"a\",\"\u1e01\":\"a\",\"\u0105\":\"a\",\"\u2c65\":\"a\",\"\u0250\":\"a\",\"\ua733\":\"aa\",\"\u00e6\":\"ae\",\"\u01fd\":\"ae\",\"\u01e3\":\"ae\",\"\ua735\":\"ao\",\"\ua737\":\"au\",\"\ua739\":\"av\",\"\ua73b\":\"av\",\"\ua73d\":\"ay\",\"\u24d1\":\"b\",\"\uff42\":\"b\",\"\u1e03\":\"b\",\"\u1e05\":\"b\",\"\u1e07\":\"b\",\"\u0180\":\"b\",\"\u0183\":\"b\",\"\u0253\":\"b\",\"\u24d2\":\"c\",\"\uff43\":\"c\",\"\u0107\":\"c\",\"\u0109\":\"c\",\"\u010b\":\"c\",\"\u010d\":\"c\",\"\u00e7\":\"c\",\"\u1e09\":\"c\",\"\u0188\":\"c\",\"\u023c\":\"c\",\"\ua73f\":\"c\",\"\u2184\":\"c\",\"\u24d3\":\"d\",\"\uff44\":\"d\",\"\u1e0b\":\"d\",\"\u010f\":\"d\",\"\u1e0d\":\"d\",\"\u1e11\":\"d\",\"\u1e13\":\"d\",\"\u1e0f\":\"d\",\"\u0111\":\"d\",\"\u018c\":\"d\",\"\u0256\":\"d\",\"\u0257\":\"d\",\"\ua77a\":\"d\",\"\u01f3\":\"dz\",\"\u01c6\":\"dz\",\"\u24d4\":\"e\",\"\uff45\":\"e\",\"\u00e8\":\"e\",\"\u00e9\":\"e\",\"\u00ea\":\"e\",\"\u1ec1\":\"e\",\"\u1ebf\":\"e\",\"\u1ec5\":\"e\",\"\u1ec3\":\"e\",\"\u1ebd\":\"e\",\"\u0113\":\"e\",\"\u1e15\":\"e\",\"\u1e17\":\"e\",\"\u0115\":\"e\",\"\u0117\":\"e\",\"\u00eb\":\"e\",\"\u1ebb\":\"e\",\"\u011b\":\"e\",\"\u0205\":\"e\",\"\u0207\":\"e\",\"\u1eb9\":\"e\",\"\u1ec7\":\"e\",\"\u0229\":\"e\",\"\u1e1d\":\"e\",\"\u0119\":\"e\",\"\u1e19\":\"e\",\"\u1e1b\":\"e\",\"\u0247\":\"e\",\"\u025b\":\"e\",\"\u01dd\":\"e\",\"\u24d5\":\"f\",\"\uff46\":\"f\",\"\u1e1f\":\"f\",\"\u0192\":\"f\",\"\ua77c\":\"f\",\"\u24d6\":\"g\",\"\uff47\":\"g\",\"\u01f5\":\"g\",\"\u011d\":\"g\",\"\u1e21\":\"g\",\"\u011f\":\"g\",\"\u0121\":\"g\",\"\u01e7\":\"g\",\"\u0123\":\"g\",\"\u01e5\":\"g\",\"\u0260\":\"g\",\"\ua7a1\":\"g\",\"\u1d79\":\"g\",\"\ua77f\":\"g\",\"\u24d7\":\"h\",\"\uff48\":\"h\",\"\u0125\":\"h\",\"\u1e23\":\"h\",\"\u1e27\":\"h\",\"\u021f\":\"h\",\"\u1e25\":\"h\",\"\u1e29\":\"h\",\"\u1e2b\":\"h\",\"\u1e96\":\"h\",\"\u0127\":\"h\",\"\u2c68\":\"h\",\"\u2c76\":\"h\",\"\u0265\":\"h\",\"\u0195\":\"hv\",\"\u24d8\":\"i\",\"\uff49\":\"i\",\"\u00ec\":\"i\",\"\u00ed\":\"i\",\"\u00ee\":\"i\",\"\u0129\":\"i\",\"\u012b\":\"i\",\"\u012d\":\"i\",\"\u00ef\":\"i\",\"\u1e2f\":\"i\",\"\u1ec9\":\"i\",\"\u01d0\":\"i\",\"\u0209\":\"i\",\"\u020b\":\"i\",\"\u1ecb\":\"i\",\"\u012f\":\"i\",\"\u1e2d\":\"i\",\"\u0268\":\"i\",\"\u0131\":\"i\",\"\u24d9\":\"j\",\"\uff4a\":\"j\",\"\u0135\":\"j\",\"\u01f0\":\"j\",\"\u0249\":\"j\",\"\u24da\":\"k\",\"\uff4b\":\"k\",\"\u1e31\":\"k\",\"\u01e9\":\"k\",\"\u1e33\":\"k\",\"\u0137\":\"k\",\"\u1e35\":\"k\",\"\u0199\":\"k\",\"\u2c6a\":\"k\",\"\ua741\":\"k\",\"\ua743\":\"k\",\"\ua745\":\"k\",\"\ua7a3\":\"k\",\"\u24db\":\"l\",\"\uff4c\":\"l\",\"\u0140\":\"l\",\"\u013a\":\"l\",\"\u013e\":\"l\",\"\u1e37\":\"l\",\"\u1e39\":\"l\",\"\u013c\":\"l\",\"\u1e3d\":\"l\",\"\u1e3b\":\"l\",\"\u017f\":\"l\",\"\u0142\":\"l\",\"\u019a\":\"l\",\"\u026b\":\"l\",\"\u2c61\":\"l\",\"\ua749\":\"l\",\"\ua781\":\"l\",\"\ua747\":\"l\",\"\u01c9\":\"lj\",\"\u24dc\":\"m\",\"\uff4d\":\"m\",\"\u1e3f\":\"m\",\"\u1e41\":\"m\",\"\u1e43\":\"m\",\"\u0271\":\"m\",\"\u026f\":\"m\",\"\u24dd\":\"n\",\"\uff4e\":\"n\",\"\u01f9\":\"n\",\"\u0144\":\"n\",\"\u00f1\":\"n\",\"\u1e45\":\"n\",\"\u0148\":\"n\",\"\u1e47\":\"n\",\"\u0146\":\"n\",\"\u1e4b\":\"n\",\"\u1e49\":\"n\",\"\u019e\":\"n\",\"\u0272\":\"n\",\"\u0149\":\"n\",\"\ua791\":\"n\",\"\ua7a5\":\"n\",\"\u01cc\":\"nj\",\"\u24de\":\"o\",\"\uff4f\":\"o\",\"\u00f2\":\"o\",\"\u00f3\":\"o\",\"\u00f4\":\"o\",\"\u1ed3\":\"o\",\"\u1ed1\":\"o\",\"\u1ed7\":\"o\",\"\u1ed5\":\"o\",\"\u00f5\":\"o\",\"\u1e4d\":\"o\",\"\u022d\":\"o\",\"\u1e4f\":\"o\",\"\u014d\":\"o\",\"\u1e51\":\"o\",\"\u1e53\":\"o\",\"\u014f\":\"o\",\"\u022f\":\"o\",\"\u0231\":\"o\",\"\u00f6\":\"o\",\"\u022b\":\"o\",\"\u1ecf\":\"o\",\"\u0151\":\"o\",\"\u01d2\":\"o\",\"\u020d\":\"o\",\"\u020f\":\"o\",\"\u01a1\":\"o\",\"\u1edd\":\"o\",\"\u1edb\":\"o\",\"\u1ee1\":\"o\",\"\u1edf\":\"o\",\"\u1ee3\":\"o\",\"\u1ecd\":\"o\",\"\u1ed9\":\"o\",\"\u01eb\":\"o\",\"\u01ed\":\"o\",\"\u00f8\":\"o\",\"\u01ff\":\"o\",\"\u0254\":\"o\",\"\ua74b\":\"o\",\"\ua74d\":\"o\",\"\u0275\":\"o\",\"\u0153\":\"oe\",\"\u01a3\":\"oi\",\"\u0223\":\"ou\",\"\ua74f\":\"oo\",\"\u24df\":\"p\",\"\uff50\":\"p\",\"\u1e55\":\"p\",\"\u1e57\":\"p\",\"\u01a5\":\"p\",\"\u1d7d\":\"p\",\"\ua751\":\"p\",\"\ua753\":\"p\",\"\ua755\":\"p\",\"\u24e0\":\"q\",\"\uff51\":\"q\",\"\u024b\":\"q\",\"\ua757\":\"q\",\"\ua759\":\"q\",\"\u24e1\":\"r\",\"\uff52\":\"r\",\"\u0155\":\"r\",\"\u1e59\":\"r\",\"\u0159\":\"r\",\"\u0211\":\"r\",\"\u0213\":\"r\",\"\u1e5b\":\"r\",\"\u1e5d\":\"r\",\"\u0157\":\"r\",\"\u1e5f\":\"r\",\"\u024d\":\"r\",\"\u027d\":\"r\",\"\ua75b\":\"r\",\"\ua7a7\":\"r\",\"\ua783\":\"r\",\"\u24e2\":\"s\",\"\uff53\":\"s\",\"\u00df\":\"s\",\"\u015b\":\"s\",\"\u1e65\":\"s\",\"\u015d\":\"s\",\"\u1e61\":\"s\",\"\u0161\":\"s\",\"\u1e67\":\"s\",\"\u1e63\":\"s\",\"\u1e69\":\"s\",\"\u0219\":\"s\",\"\u015f\":\"s\",\"\u023f\":\"s\",\"\ua7a9\":\"s\",\"\ua785\":\"s\",\"\u1e9b\":\"s\",\"\u24e3\":\"t\",\"\uff54\":\"t\",\"\u1e6b\":\"t\",\"\u1e97\":\"t\",\"\u0165\":\"t\",\"\u1e6d\":\"t\",\"\u021b\":\"t\",\"\u0163\":\"t\",\"\u1e71\":\"t\",\"\u1e6f\":\"t\",\"\u0167\":\"t\",\"\u01ad\":\"t\",\"\u0288\":\"t\",\"\u2c66\":\"t\",\"\ua787\":\"t\",\"\ua729\":\"tz\",\"\u24e4\":\"u\",\"\uff55\":\"u\",\"\u00f9\":\"u\",\"\u00fa\":\"u\",\"\u00fb\":\"u\",\"\u0169\":\"u\",\"\u1e79\":\"u\",\"\u016b\":\"u\",\"\u1e7b\":\"u\",\"\u016d\":\"u\",\"\u00fc\":\"u\",\"\u01dc\":\"u\",\"\u01d8\":\"u\",\"\u01d6\":\"u\",\"\u01da\":\"u\",\"\u1ee7\":\"u\",\"\u016f\":\"u\",\"\u0171\":\"u\",\"\u01d4\":\"u\",\"\u0215\":\"u\",\"\u0217\":\"u\",\"\u01b0\":\"u\",\"\u1eeb\":\"u\",\"\u1ee9\":\"u\",\"\u1eef\":\"u\",\"\u1eed\":\"u\",\"\u1ef1\":\"u\",\"\u1ee5\":\"u\",\"\u1e73\":\"u\",\"\u0173\":\"u\",\"\u1e77\":\"u\",\"\u1e75\":\"u\",\"\u0289\":\"u\",\"\u24e5\":\"v\",\"\uff56\":\"v\",\"\u1e7d\":\"v\",\"\u1e7f\":\"v\",\"\u028b\":\"v\",\"\ua75f\":\"v\",\"\u028c\":\"v\",\"\ua761\":\"vy\",\"\u24e6\":\"w\",\"\uff57\":\"w\",\"\u1e81\":\"w\",\"\u1e83\":\"w\",\"\u0175\":\"w\",\"\u1e87\":\"w\",\"\u1e85\":\"w\",\"\u1e98\":\"w\",\"\u1e89\":\"w\",\"\u2c73\":\"w\",\"\u24e7\":\"x\",\"\uff58\":\"x\",\"\u1e8b\":\"x\",\"\u1e8d\":\"x\",\"\u24e8\":\"y\",\"\uff59\":\"y\",\"\u1ef3\":\"y\",\"\u00fd\":\"y\",\"\u0177\":\"y\",\"\u1ef9\":\"y\",\"\u0233\":\"y\",\"\u1e8f\":\"y\",\"\u00ff\":\"y\",\"\u1ef7\":\"y\",\"\u1e99\":\"y\",\"\u1ef5\":\"y\",\"\u01b4\":\"y\",\"\u024f\":\"y\",\"\u1eff\":\"y\",\"\u24e9\":\"z\",\"\uff5a\":\"z\",\"\u017a\":\"z\",\"\u1e91\":\"z\",\"\u017c\":\"z\",\"\u017e\":\"z\",\"\u1e93\":\"z\",\"\u1e95\":\"z\",\"\u01b6\":\"z\",\"\u0225\":\"z\",\"\u0240\":\"z\",\"\u2c6c\":\"z\",\"\ua763\":\"z\",\"\u0386\":\"\u0391\",\"\u0388\":\"\u0395\",\"\u0389\":\"\u0397\",\"\u038a\":\"\u0399\",\"\u03aa\":\"\u0399\",\"\u038c\":\"\u039f\",\"\u038e\":\"\u03a5\",\"\u03ab\":\"\u03a5\",\"\u038f\":\"\u03a9\",\"\u03ac\":\"\u03b1\",\"\u03ad\":\"\u03b5\",\"\u03ae\":\"\u03b7\",\"\u03af\":\"\u03b9\",\"\u03ca\":\"\u03b9\",\"\u0390\":\"\u03b9\",\"\u03cc\":\"\u03bf\",\"\u03cd\":\"\u03c5\",\"\u03cb\":\"\u03c5\",\"\u03b0\":\"\u03c5\",\"\u03ce\":\"\u03c9\",\"\u03c2\":\"\u03c3\",\"\u2019\":\"'\"}}),e.define(\"wfselect2\/data\/base\",[\"..\/utils\"],function(i){function n(e,t){n.__super__.constructor.call(this)}return i.Extend(n,i.Observable),n.prototype.current=function(e){throw new Error(\"The `current` method must be defined in child classes.\")},n.prototype.query=function(e,t){throw new Error(\"The `query` method must be defined in child classes.\")},n.prototype.bind=function(e,t){},n.prototype.destroy=function(){},n.prototype.generateResultId=function(e,t){var n=e.id+\"-result-\";return n+=i.generateChars(4),null!=t.id?n+=\"-\"+t.id.toString():n+=\"-\"+i.generateChars(4),n},n}),e.define(\"wfselect2\/data\/select\",[\".\/base\",\"..\/utils\",\"jquery\"],function(e,a,l){function n(e,t){this.$element=e,this.options=t,n.__super__.constructor.call(this)}return a.Extend(n,e),n.prototype.current=function(e){var n=[],i=this;this.$element.find(\":selected\").each(function(){var e=l(this),t=i.item(e);n.push(t)}),e(n)},n.prototype.select=function(r){var o=this;if(r.selected=!0,l(r.element).is(\"option\"))return r.element.selected=!0,void this.$element.trigger(\"input\").trigger(\"change\");if(this.$element.prop(\"multiple\"))this.current(function(e){var t=[];(r=[r]).push.apply(r,e);for(var n=0;n<r.length;n++){var i=r[n].id;-1===l.inArray(i,t)&&t.push(i)}o.$element.val(t),o.$element.trigger(\"input\").trigger(\"change\")});else{var e=r.id;this.$element.val(e),this.$element.trigger(\"input\").trigger(\"change\")}},n.prototype.unselect=function(r){var o=this;if(this.$element.prop(\"multiple\")){if(r.selected=!1,l(r.element).is(\"option\"))return r.element.selected=!1,void this.$element.trigger(\"input\").trigger(\"change\");this.current(function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n].id;i!==r.id&&-1===l.inArray(i,t)&&t.push(i)}o.$element.val(t),o.$element.trigger(\"input\").trigger(\"change\")})}},n.prototype.bind=function(e,t){var n=this;(this.container=e).on(\"select\",function(e){n.select(e.data)}),e.on(\"unselect\",function(e){n.unselect(e.data)})},n.prototype.destroy=function(){this.$element.find(\"*\").each(function(){a.RemoveData(this)})},n.prototype.query=function(i,e){var r=[],o=this;this.$element.children().each(function(){var e=l(this);if(e.is(\"option\")||e.is(\"optgroup\")){var t=o.item(e),n=o.matches(i,t);null!==n&&r.push(n)}}),e({results:r})},n.prototype.addOptions=function(e){a.appendMany(this.$element,e)},n.prototype.option=function(e){var t;e.children?(t=document.createElement(\"optgroup\")).label=e.text:void 0!==(t=document.createElement(\"option\")).textContent?t.textContent=e.text:t.innerText=e.text,void 0!==e.id&&(t.value=e.id),e.disabled&&(t.disabled=!0),e.selected&&(t.selected=!0),e.title&&(t.title=e.title);var n=l(t),i=this._normalizeItem(e);return i.element=t,a.StoreData(t,\"data\",i),n},n.prototype.item=function(e){var t={};if(null!=(t=a.GetData(e[0],\"data\")))return t;if(e.is(\"option\"))t={id:e.val(),text:e.text(),disabled:e.prop(\"disabled\"),selected:e.prop(\"selected\"),title:e.prop(\"title\")};else if(e.is(\"optgroup\")){t={text:e.prop(\"label\"),children:[],title:e.prop(\"title\")};for(var n=e.children(\"option\"),i=[],r=0;r<n.length;r++){var o=l(n[r]),s=this.item(o);i.push(s)}t.children=i}return(t=this._normalizeItem(t)).element=e[0],a.StoreData(e[0],\"data\",t),t},n.prototype._normalizeItem=function(e){e!==Object(e)&&(e={id:e,text:e});return null!=(e=l.extend({},{text:\"\"},e)).id&&(e.id=e.id.toString()),null!=e.text&&(e.text=e.text.toString()),null==e._resultId&&e.id&&null!=this.container&&(e._resultId=this.generateResultId(this.container,e)),l.extend({},{selected:!1,disabled:!1},e)},n.prototype.matches=function(e,t){return this.options.get(\"matcher\")(e,t)},n}),e.define(\"wfselect2\/data\/array\",[\".\/select\",\"..\/utils\",\"jquery\"],function(e,f,g){function i(e,t){this._dataToConvert=t.get(\"data\")||[],i.__super__.constructor.call(this,e,t)}return f.Extend(i,e),i.prototype.bind=function(e,t){i.__super__.bind.call(this,e,t),this.addOptions(this.convertToOptions(this._dataToConvert))},i.prototype.select=function(n){var e=this.$element.find(\"option\").filter(function(e,t){return t.value==n.id.toString()});0===e.length&&(e=this.option(n),this.addOptions(e)),i.__super__.select.call(this,n)},i.prototype.convertToOptions=function(e){var t=this,n=this.$element.find(\"option\"),i=n.map(function(){return t.item(g(this)).id}).get(),r=[];function o(e){return function(){return g(this).val()==e.id}}for(var s=0;s<e.length;s++){var a=this._normalizeItem(e[s]);if(0<=g.inArray(a.id,i)){var l=n.filter(o(a)),c=this.item(l),u=g.extend(!0,{},a,c),d=this.option(u);l.replaceWith(d)}else{var p=this.option(a);if(a.children){var h=this.convertToOptions(a.children);f.appendMany(p,h)}r.push(p)}}return r},i}),e.define(\"wfselect2\/data\/ajax\",[\".\/array\",\"..\/utils\",\"jquery\"],function(e,t,o){function n(e,t){this.ajaxOptions=this._applyDefaults(t.get(\"ajax\")),null!=this.ajaxOptions.processResults&&(this.processResults=this.ajaxOptions.processResults),n.__super__.constructor.call(this,e,t)}return t.Extend(n,e),n.prototype._applyDefaults=function(e){var t={data:function(e){return o.extend({},e,{q:e.term})},transport:function(e,t,n){var i=o.ajax(e);return i.then(t),i.fail(n),i}};return o.extend({},t,e,!0)},n.prototype.processResults=function(e){return e},n.prototype.query=function(n,i){var r=this;null!=this._request&&(o.isFunction(this._request.abort)&&this._request.abort(),this._request=null);var t=o.extend({type:\"GET\"},this.ajaxOptions);function e(){var e=t.transport(t,function(e){var t=r.processResults(e,n);r.options.get(\"debug\")&&window.console&&console.error&&(t&&t.results&&o.isArray(t.results)||console.error(\"WFSelect2: The AJAX results did not return an array in the `results` key of the response.\")),i(t)},function(){\"status\"in e&&(0===e.status||\"0\"===e.status)||r.trigger(\"results:message\",{message:\"errorLoading\"})});r._request=e}\"function\"==typeof t.url&&(t.url=t.url.call(this.$element,n)),\"function\"==typeof t.data&&(t.data=t.data.call(this.$element,n)),this.ajaxOptions.delay&&null!=n.term?(this._queryTimeout&&window.clearTimeout(this._queryTimeout),this._queryTimeout=window.setTimeout(e,this.ajaxOptions.delay)):e()},n}),e.define(\"wfselect2\/data\/tags\",[\"jquery\"],function(u){function e(e,t,n){var i=n.get(\"tags\"),r=n.get(\"createTag\");void 0!==r&&(this.createTag=r);var o=n.get(\"insertTag\");if(void 0!==o&&(this.insertTag=o),e.call(this,t,n),u.isArray(i))for(var s=0;s<i.length;s++){var a=i[s],l=this._normalizeItem(a),c=this.option(l);this.$element.append(c)}}return e.prototype.query=function(e,c,u){var d=this;this._removeOldTags(),null!=c.term&&null==c.page?e.call(this,c,function e(t,n){for(var i=t.results,r=0;r<i.length;r++){var o=i[r],s=null!=o.children&&!e({results:o.children},!0);if((o.text||\"\").toUpperCase()===(c.term||\"\").toUpperCase()||s)return!n&&(t.data=i,void u(t))}if(n)return!0;var a=d.createTag(c);if(null!=a){var l=d.option(a);l.attr(\"data-wfselect2-tag\",!0),d.addOptions([l]),d.insertTag(i,a)}t.results=i,u(t)}):e.call(this,c,u)},e.prototype.createTag=function(e,t){var n=u.trim(t.term);return\"\"===n?null:{id:n,text:n}},e.prototype.insertTag=function(e,t,n){t.unshift(n)},e.prototype._removeOldTags=function(e){this.$element.find(\"option[data-wfselect2-tag]\").each(function(){this.selected||u(this).remove()})},e}),e.define(\"wfselect2\/data\/tokenizer\",[\"jquery\"],function(d){function e(e,t,n){var i=n.get(\"tokenizer\");void 0!==i&&(this.tokenizer=i),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){e.call(this,t,n),this.$search=t.dropdown.$search||t.selection.$search||n.find(\".wfselect2-search__field\")},e.prototype.query=function(e,t,n){var i=this;t.term=t.term||\"\";var r=this.tokenizer(t,this.options,function(e){var t=i._normalizeItem(e);if(!i.$element.find(\"option\").filter(function(){return d(this).val()===t.id}).length){var n=i.option(t);n.attr(\"data-wfselect2-tag\",!0),i._removeOldTags(),i.addOptions([n])}!function(e){i.trigger(\"select\",{data:e})}(t)});r.term!==t.term&&(this.$search.length&&(this.$search.val(r.term),this.$search.trigger(\"focus\")),t.term=r.term),e.call(this,t,n)},e.prototype.tokenizer=function(e,t,n,i){for(var r=n.get(\"tokenSeparators\")||[],o=t.term,s=0,a=this.createTag||function(e){return{id:e.term,text:e.term}};s<o.length;){var l=o[s];if(-1!==d.inArray(l,r)){var c=o.substr(0,s),u=a(d.extend({},t,{term:c}));null!=u?(i(u),o=o.substr(s+1)||\"\",s=0):s++}else s++}return{term:o}},e}),e.define(\"wfselect2\/data\/minimumInputLength\",[],function(){function e(e,t,n){this.minimumInputLength=n.get(\"minimumInputLength\"),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.term=t.term||\"\",t.term.length<this.minimumInputLength?this.trigger(\"results:message\",{message:\"inputTooShort\",args:{minimum:this.minimumInputLength,input:t.term,params:t}}):e.call(this,t,n)},e}),e.define(\"wfselect2\/data\/maximumInputLength\",[],function(){function e(e,t,n){this.maximumInputLength=n.get(\"maximumInputLength\"),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.term=t.term||\"\",0<this.maximumInputLength&&t.term.length>this.maximumInputLength?this.trigger(\"results:message\",{message:\"inputTooLong\",args:{maximum:this.maximumInputLength,input:t.term,params:t}}):e.call(this,t,n)},e}),e.define(\"wfselect2\/data\/maximumSelectionLength\",[],function(){function e(e,t,n){this.maximumSelectionLength=n.get(\"maximumSelectionLength\"),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on(\"select\",function(){i._checkIfMaximumSelected()})},e.prototype.query=function(e,t,n){var i=this;this._checkIfMaximumSelected(function(){e.call(i,t,n)})},e.prototype._checkIfMaximumSelected=function(e,n){var i=this;this.current(function(e){var t=null!=e?e.length:0;0<i.maximumSelectionLength&&t>=i.maximumSelectionLength?i.trigger(\"results:message\",{message:\"maximumSelected\",args:{maximum:i.maximumSelectionLength}}):n&&n()})},e}),e.define(\"wfselect2\/dropdown\",[\"jquery\",\".\/utils\"],function(t,e){function n(e,t){this.$element=e,this.options=t,n.__super__.constructor.call(this)}return e.Extend(n,e.Observable),n.prototype.render=function(){var e=t('<span class=\"wfselect2-dropdown\"><span class=\"wfselect2-results\"><\/span><\/span>');return e.attr(\"dir\",this.options.get(\"dir\")),this.$dropdown=e},n.prototype.bind=function(){},n.prototype.position=function(e,t){},n.prototype.destroy=function(){this.$dropdown.remove()},n}),e.define(\"wfselect2\/dropdown\/search\",[\"jquery\",\"..\/utils\"],function(o,e){function t(){}return t.prototype.render=function(e){var t=e.call(this),n=o('<span class=\"wfselect2-search wfselect2-search--dropdown\"><input class=\"wfselect2-search__field\" type=\"search\" tabindex=\"-1\" autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"none\" spellcheck=\"false\" role=\"searchbox\" aria-autocomplete=\"list\" \/><\/span>');return this.$searchContainer=n,this.$search=n.find(\"input\"),t.prepend(n),t},t.prototype.bind=function(e,t,n){var i=this,r=t.id+\"-results\";e.call(this,t,n),this.$search.on(\"keydown\",function(e){i.trigger(\"keypress\",e),i._keyUpPrevented=e.isDefaultPrevented()}),this.$search.on(\"input\",function(e){o(this).off(\"keyup\")}),this.$search.on(\"keyup input\",function(e){i.handleSearch(e)}),t.on(\"open\",function(){i.$search.attr(\"tabindex\",0),i.$search.attr(\"aria-controls\",r),i.$search.trigger(\"focus\"),window.setTimeout(function(){i.$search.trigger(\"focus\")},0)}),t.on(\"close\",function(){i.$search.attr(\"tabindex\",-1),i.$search.removeAttr(\"aria-controls\"),i.$search.removeAttr(\"aria-activedescendant\"),i.$search.val(\"\"),i.$search.trigger(\"blur\")}),t.on(\"focus\",function(){t.isOpen()||i.$search.trigger(\"focus\")}),t.on(\"results:all\",function(e){null!=e.query.term&&\"\"!==e.query.term||(i.showSearch(e)?i.$searchContainer.removeClass(\"wfselect2-search--hide\"):i.$searchContainer.addClass(\"wfselect2-search--hide\"))}),t.on(\"results:focus\",function(e){e.data._resultId?i.$search.attr(\"aria-activedescendant\",e.data._resultId):i.$search.removeAttr(\"aria-activedescendant\")})},t.prototype.handleSearch=function(e){if(!this._keyUpPrevented){var t=this.$search.val();this.trigger(\"query\",{term:t})}this._keyUpPrevented=!1},t.prototype.showSearch=function(e,t){return!0},t}),e.define(\"wfselect2\/dropdown\/hidePlaceholder\",[],function(){function e(e,t,n,i){this.placeholder=this.normalizePlaceholder(n.get(\"placeholder\")),e.call(this,t,n,i)}return e.prototype.append=function(e,t){t.results=this.removePlaceholder(t.results),e.call(this,t)},e.prototype.normalizePlaceholder=function(e,t){return\"string\"==typeof t&&(t={id:\"\",text:t}),t},e.prototype.removePlaceholder=function(e,t){for(var n=t.slice(0),i=t.length-1;0<=i;i--){var r=t[i];this.placeholder.id===r.id&&n.splice(i,1)}return n},e}),e.define(\"wfselect2\/dropdown\/infiniteScroll\",[\"jquery\"],function(n){function e(e,t,n,i){this.lastParams={},e.call(this,t,n,i),this.$loadingMore=this.createLoadingMore(),this.loading=!1}return e.prototype.append=function(e,t){this.$loadingMore.remove(),this.loading=!1,e.call(this,t),this.showLoadingMore(t)&&(this.$results.append(this.$loadingMore),this.loadMoreIfNeeded())},e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on(\"query\",function(e){i.lastParams=e,i.loading=!0}),t.on(\"query:append\",function(e){i.lastParams=e,i.loading=!0}),this.$results.on(\"scroll\",this.loadMoreIfNeeded.bind(this))},e.prototype.loadMoreIfNeeded=function(){var e=n.contains(document.documentElement,this.$loadingMore[0]);if(!this.loading&&e){var t=this.$results.offset().top+this.$results.outerHeight(!1);this.$loadingMore.offset().top+this.$loadingMore.outerHeight(!1)<=t+50&&this.loadMore()}},e.prototype.loadMore=function(){this.loading=!0;var e=n.extend({},{page:1},this.lastParams);e.page++,this.trigger(\"query:append\",e)},e.prototype.showLoadingMore=function(e,t){return t.pagination&&t.pagination.more},e.prototype.createLoadingMore=function(){var e=n('<li class=\"wfselect2-results__option wfselect2-results__option--load-more\"role=\"option\" aria-disabled=\"true\"><\/li>'),t=this.options.get(\"translations\").get(\"loadingMore\");return e.html(t(this.lastParams)),e},e}),e.define(\"wfselect2\/dropdown\/attachBody\",[\"jquery\",\"..\/utils\"],function(f,a){function e(e,t,n){this.$dropdownParent=f(n.get(\"dropdownParent\")||document.body),e.call(this,t,n)}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on(\"open\",function(){i._showDropdown(),i._attachPositioningHandler(t),i._bindContainerResultHandlers(t)}),t.on(\"close\",function(){i._hideDropdown(),i._detachPositioningHandler(t)}),this.$dropdownContainer.on(\"mousedown\",function(e){e.stopPropagation()})},e.prototype.destroy=function(e){e.call(this),this.$dropdownContainer.remove()},e.prototype.position=function(e,t,n){t.attr(\"class\",n.attr(\"class\")),t.removeClass(\"wfselect2\"),t.addClass(\"wfselect2-container--open\"),t.css({position:\"absolute\",top:-999999}),this.$container=n},e.prototype.render=function(e){var t=f(\"<span><\/span>\"),n=e.call(this);return t.append(n),this.$dropdownContainer=t},e.prototype._hideDropdown=function(e){this.$dropdownContainer.detach()},e.prototype._bindContainerResultHandlers=function(e,t){if(!this._containerResultsHandlersBound){var n=this;t.on(\"results:all\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"results:append\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"results:message\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"select\",function(){n._positionDropdown(),n._resizeDropdown()}),t.on(\"unselect\",function(){n._positionDropdown(),n._resizeDropdown()}),this._containerResultsHandlersBound=!0}},e.prototype._attachPositioningHandler=function(e,t){var n=this,i=\"scroll.wfselect2.\"+t.id,r=\"resize.wfselect2.\"+t.id,o=\"orientationchange.wfselect2.\"+t.id,s=this.$container.parents().filter(a.hasScroll);s.each(function(){a.StoreData(this,\"wfselect2-scroll-position\",{x:f(this).scrollLeft(),y:f(this).scrollTop()})}),s.on(i,function(e){var t=a.GetData(this,\"wfselect2-scroll-position\");f(this).scrollTop(t.y)}),f(window).on(i+\" \"+r+\" \"+o,function(e){n._positionDropdown(),n._resizeDropdown()})},e.prototype._detachPositioningHandler=function(e,t){var n=\"scroll.wfselect2.\"+t.id,i=\"resize.wfselect2.\"+t.id,r=\"orientationchange.wfselect2.\"+t.id;this.$container.parents().filter(a.hasScroll).off(n),f(window).off(n+\" \"+i+\" \"+r)},e.prototype._positionDropdown=function(){var e=f(window),t=this.$dropdown.hasClass(\"wfselect2-dropdown--above\"),n=this.$dropdown.hasClass(\"wfselect2-dropdown--below\"),i=null,r=this.$container.offset();r.bottom=r.top+this.$container.outerHeight(!1);var o={height:this.$container.outerHeight(!1)};o.top=r.top,o.bottom=r.top+o.height;var s=this.$dropdown.outerHeight(!1),a=e.scrollTop(),l=e.scrollTop()+e.height(),c=a<r.top-s,u=l>r.bottom+s,d={left:r.left,top:o.bottom},p=this.$dropdownParent;\"static\"===p.css(\"position\")&&(p=p.offsetParent());var h={top:0,left:0};(f.contains(document.body,p[0])||p[0].isConnected)&&(h=p.offset()),d.top-=h.top,d.left-=h.left,t||n||(i=\"below\"),u||!c||t?!c&&u&&t&&(i=\"below\"):i=\"above\",(\"above\"==i||t&&\"below\"!==i)&&(d.top=o.top-h.top-s),null!=i&&(this.$dropdown.removeClass(\"wfselect2-dropdown--below wfselect2-dropdown--above\").addClass(\"wfselect2-dropdown--\"+i),this.$container.removeClass(\"wfselect2-container--below wfselect2-container--above\").addClass(\"wfselect2-container--\"+i)),this.$dropdownContainer.css(d)},e.prototype._resizeDropdown=function(){var e={width:this.$container.outerWidth(!1)+\"px\"};this.options.get(\"dropdownAutoWidth\")&&(e.minWidth=e.width,e.position=\"relative\",e.width=\"auto\"),this.$dropdown.css(e)},e.prototype._showDropdown=function(e){this.$dropdownContainer.appendTo(this.$dropdownParent),this._positionDropdown(),this._resizeDropdown()},e}),e.define(\"wfselect2\/dropdown\/minimumResultsForSearch\",[],function(){function e(e,t,n,i){this.minimumResultsForSearch=n.get(\"minimumResultsForSearch\"),this.minimumResultsForSearch<0&&(this.minimumResultsForSearch=1\/0),e.call(this,t,n,i)}return e.prototype.showSearch=function(e,t){return!(function e(t){for(var n=0,i=0;i<t.length;i++){var r=t[i];r.children?n+=e(r.children):n++}return n}(t.data.results)<this.minimumResultsForSearch)&&e.call(this,t)},e}),e.define(\"wfselect2\/dropdown\/selectOnClose\",[\"..\/utils\"],function(o){function e(){}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on(\"close\",function(e){i._handleSelectOnClose(e)})},e.prototype._handleSelectOnClose=function(e,t){if(t&&null!=t.originalWFSelect2Event){var n=t.originalWFSelect2Event;if(\"select\"===n._type||\"unselect\"===n._type)return}var i=this.getHighlightedResults();if(!(i.length<1)){var r=o.GetData(i[0],\"data\");null!=r.element&&r.element.selected||null==r.element&&r.selected||this.trigger(\"select\",{data:r})}},e}),e.define(\"wfselect2\/dropdown\/closeOnSelect\",[],function(){function e(){}return e.prototype.bind=function(e,t,n){var i=this;e.call(this,t,n),t.on(\"select\",function(e){i._selectTriggered(e)}),t.on(\"unselect\",function(e){i._selectTriggered(e)})},e.prototype._selectTriggered=function(e,t){var n=t.originalEvent;n&&(n.ctrlKey||n.metaKey)||this.trigger(\"close\",{originalEvent:n,originalWFSelect2Event:t})},e}),e.define(\"wfselect2\/i18n\/en\",[],function(){return{errorLoading:function(){return\"The results could not be loaded.\"},inputTooLong:function(e){var t=e.input.length-e.maximum,n=\"Please delete \"+t+\" character\";return 1!=t&&(n+=\"s\"),n},inputTooShort:function(e){return\"Please enter \"+(e.minimum-e.input.length)+\" or more characters\"},loadingMore:function(){return\"Loading more results\u2026\"},maximumSelected:function(e){var t=\"You can only select \"+e.maximum+\" item\";return 1!=e.maximum&&(t+=\"s\"),t},noResults:function(){return\"No results found\"},searching:function(){return\"Searching\u2026\"},removeAllItems:function(){return\"Remove all items\"}}}),e.define(\"wfselect2\/defaults\",[\"jquery\",\"require\",\".\/results\",\".\/selection\/single\",\".\/selection\/multiple\",\".\/selection\/placeholder\",\".\/selection\/allowClear\",\".\/selection\/search\",\".\/selection\/eventRelay\",\".\/utils\",\".\/translation\",\".\/diacritics\",\".\/data\/select\",\".\/data\/array\",\".\/data\/ajax\",\".\/data\/tags\",\".\/data\/tokenizer\",\".\/data\/minimumInputLength\",\".\/data\/maximumInputLength\",\".\/data\/maximumSelectionLength\",\".\/dropdown\",\".\/dropdown\/search\",\".\/dropdown\/hidePlaceholder\",\".\/dropdown\/infiniteScroll\",\".\/dropdown\/attachBody\",\".\/dropdown\/minimumResultsForSearch\",\".\/dropdown\/selectOnClose\",\".\/dropdown\/closeOnSelect\",\".\/i18n\/en\"],function(c,u,d,p,h,f,g,m,v,y,s,t,_,w,$,b,A,x,D,S,C,E,O,T,q,j,L,I,e){function n(){this.reset()}return n.prototype.apply=function(e){if(null==(e=c.extend(!0,{},this.defaults,e)).dataAdapter){if(null!=e.ajax?e.dataAdapter=$:null!=e.data?e.dataAdapter=w:e.dataAdapter=_,0<e.minimumInputLength&&(e.dataAdapter=y.Decorate(e.dataAdapter,x)),0<e.maximumInputLength&&(e.dataAdapter=y.Decorate(e.dataAdapter,D)),0<e.maximumSelectionLength&&(e.dataAdapter=y.Decorate(e.dataAdapter,S)),e.tags&&(e.dataAdapter=y.Decorate(e.dataAdapter,b)),null==e.tokenSeparators&&null==e.tokenizer||(e.dataAdapter=y.Decorate(e.dataAdapter,A)),null!=e.query){var t=u(e.amdBase+\"compat\/query\");e.dataAdapter=y.Decorate(e.dataAdapter,t)}if(null!=e.initSelection){var n=u(e.amdBase+\"compat\/initSelection\");e.dataAdapter=y.Decorate(e.dataAdapter,n)}}if(null==e.resultsAdapter&&(e.resultsAdapter=d,null!=e.ajax&&(e.resultsAdapter=y.Decorate(e.resultsAdapter,T)),null!=e.placeholder&&(e.resultsAdapter=y.Decorate(e.resultsAdapter,O)),e.selectOnClose&&(e.resultsAdapter=y.Decorate(e.resultsAdapter,L))),null==e.dropdownAdapter){if(e.multiple)e.dropdownAdapter=C;else{var i=y.Decorate(C,E);e.dropdownAdapter=i}if(0!==e.minimumResultsForSearch&&(e.dropdownAdapter=y.Decorate(e.dropdownAdapter,j)),e.closeOnSelect&&(e.dropdownAdapter=y.Decorate(e.dropdownAdapter,I)),null!=e.dropdownCssClass||null!=e.dropdownCss||null!=e.adaptDropdownCssClass){var r=u(e.amdBase+\"compat\/dropdownCss\");e.dropdownAdapter=y.Decorate(e.dropdownAdapter,r)}e.dropdownAdapter=y.Decorate(e.dropdownAdapter,q)}if(null==e.selectionAdapter){if(e.multiple?e.selectionAdapter=h:e.selectionAdapter=p,null!=e.placeholder&&(e.selectionAdapter=y.Decorate(e.selectionAdapter,f)),e.allowClear&&(e.selectionAdapter=y.Decorate(e.selectionAdapter,g)),e.multiple&&(e.selectionAdapter=y.Decorate(e.selectionAdapter,m)),null!=e.containerCssClass||null!=e.containerCss||null!=e.adaptContainerCssClass){var o=u(e.amdBase+\"compat\/containerCss\");e.selectionAdapter=y.Decorate(e.selectionAdapter,o)}e.selectionAdapter=y.Decorate(e.selectionAdapter,v)}e.language=this._resolveLanguage(e.language),e.language.push(\"en\");for(var s=[],a=0;a<e.language.length;a++){var l=e.language[a];-1===s.indexOf(l)&&s.push(l)}return e.language=s,e.translations=this._processTranslations(e.language,e.debug),e},n.prototype.reset=function(){function a(e){return e.replace(\/[^\\u0000-\\u007E]\/g,function(e){return t[e]||e})}this.defaults={amdBase:\".\/\",amdLanguageBase:\".\/i18n\/\",closeOnSelect:!0,debug:!1,dropdownAutoWidth:!1,escapeMarkup:y.escapeMarkup,language:{},matcher:function e(t,n){if(\"\"===c.trim(t.term))return n;if(n.children&&0<n.children.length){for(var i=c.extend(!0,{},n),r=n.children.length-1;0<=r;r--)null==e(t,n.children[r])&&i.children.splice(r,1);return 0<i.children.length?i:e(t,i)}var o=a(n.text).toUpperCase(),s=a(t.term).toUpperCase();return-1<o.indexOf(s)?n:null},minimumInputLength:0,maximumInputLength:0,maximumSelectionLength:0,minimumResultsForSearch:0,selectOnClose:!1,scrollAfterSelect:!1,sorter:function(e){return e},templateResult:function(e){return e.text},templateSelection:function(e){return e.text},theme:\"default\",width:\"resolve\"}},n.prototype.applyFromElement=function(e,t){var n=e.language,i=this.defaults.language,r=t.prop(\"lang\"),o=t.closest(\"[lang]\").prop(\"lang\"),s=Array.prototype.concat.call(this._resolveLanguage(r),this._resolveLanguage(n),this._resolveLanguage(i),this._resolveLanguage(o));return e.language=s,e},n.prototype._resolveLanguage=function(e){if(!e)return[];if(c.isEmptyObject(e))return[];if(c.isPlainObject(e))return[e];var t;t=c.isArray(e)?e:[e];for(var n=[],i=0;i<t.length;i++)if(n.push(t[i]),\"string\"==typeof t[i]&&0<t[i].indexOf(\"-\")){var r=t[i].split(\"-\")[0];n.push(r)}return n},n.prototype._processTranslations=function(e,t){for(var n=new s,i=0;i<e.length;i++){var r=new s,o=e[i];if(\"string\"==typeof o)try{r=s.loadPath(o)}catch(e){try{o=this.defaults.amdLanguageBase+o,r=s.loadPath(o)}catch(e){t&&window.console&&console.warn&&console.warn('WFSelect2: The language file for \"'+o+'\" could not be automatically loaded. A fallback will be used instead.')}}else r=c.isPlainObject(o)?new s(o):o;n.extend(r)}return n},n.prototype.set=function(e,t){var n={};n[c.camelCase(e)]=t;var i=y._convertData(n);c.extend(!0,this.defaults,i)},new n}),e.define(\"wfselect2\/options\",[\"require\",\"jquery\",\".\/defaults\",\".\/utils\"],function(i,d,r,p){function e(e,t){if(this.options=e,null!=t&&this.fromElement(t),null!=t&&(this.options=r.applyFromElement(this.options,t)),this.options=r.apply(this.options),t&&t.is(\"input\")){var n=i(this.get(\"amdBase\")+\"compat\/inputData\");this.options.dataAdapter=p.Decorate(this.options.dataAdapter,n)}}return e.prototype.fromElement=function(e){var t=[\"wfselect2\"];null==this.options.multiple&&(this.options.multiple=e.prop(\"multiple\")),null==this.options.disabled&&(this.options.disabled=e.prop(\"disabled\")),null==this.options.dir&&(e.prop(\"dir\")?this.options.dir=e.prop(\"dir\"):e.closest(\"[dir]\").prop(\"dir\")?this.options.dir=e.closest(\"[dir]\").prop(\"dir\"):this.options.dir=\"ltr\"),e.prop(\"disabled\",this.options.disabled),e.prop(\"multiple\",this.options.multiple),p.GetData(e[0],\"wfselect2Tags\")&&(this.options.debug&&window.console&&console.warn&&console.warn('WFSelect2: The `data-wfselect2-tags` attribute has been changed to use the `data-data` and `data-tags=\"true\"` attributes and will be removed in future versions of WFSelect2.'),p.StoreData(e[0],\"data\",p.GetData(e[0],\"wfselect2Tags\")),p.StoreData(e[0],\"tags\",!0)),p.GetData(e[0],\"ajaxUrl\")&&(this.options.debug&&window.console&&console.warn&&console.warn(\"WFSelect2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of WFSelect2.\"),e.attr(\"ajax--url\",p.GetData(e[0],\"ajaxUrl\")),p.StoreData(e[0],\"ajax-Url\",p.GetData(e[0],\"ajaxUrl\")));var n={};function i(e,t){return t.toUpperCase()}for(var r=0;r<e[0].attributes.length;r++){var o=e[0].attributes[r].name,s=\"data-\";if(o.substr(0,s.length)==s){var a=o.substring(s.length),l=p.GetData(e[0],a);n[a.replace(\/-([a-z])\/g,i)]=l}}d.fn.jquery&&\"1.\"==d.fn.jquery.substr(0,2)&&e[0].dataset&&(n=d.extend(!0,{},e[0].dataset,n));var c=d.extend(!0,{},p.GetData(e[0]),n);for(var u in c=p._convertData(c))-1<d.inArray(u,t)||(d.isPlainObject(this.options[u])?d.extend(this.options[u],c[u]):this.options[u]=c[u]);return this},e.prototype.get=function(e){return this.options[e]},e.prototype.set=function(e,t){this.options[e]=t},e}),e.define(\"wfselect2\/core\",[\"jquery\",\".\/options\",\".\/utils\",\".\/keys\"],function(o,c,u,i){var d=function(e,t){null!=u.GetData(e[0],\"wfselect2\")&&u.GetData(e[0],\"wfselect2\").destroy(),this.$element=e,this.id=this._generateId(e),t=t||{},this.options=new c(t,e),d.__super__.constructor.call(this);var n=e.attr(\"tabindex\")||0;u.StoreData(e[0],\"old-tabindex\",n),e.attr(\"tabindex\",\"-1\");var i=this.options.get(\"dataAdapter\");this.dataAdapter=new i(e,this.options);var r=this.render();this._placeContainer(r);var o=this.options.get(\"selectionAdapter\");this.selection=new o(e,this.options),this.$selection=this.selection.render(),this.selection.position(this.$selection,r);var s=this.options.get(\"dropdownAdapter\");this.dropdown=new s(e,this.options),this.$dropdown=this.dropdown.render(),this.dropdown.position(this.$dropdown,r);var a=this.options.get(\"resultsAdapter\");this.results=new a(e,this.options,this.dataAdapter),this.$results=this.results.render(),this.results.position(this.$results,this.$dropdown);var l=this;this._bindAdapters(),this._registerDomEvents(),this._registerDataEvents(),this._registerSelectionEvents(),this._registerDropdownEvents(),this._registerResultsEvents(),this._registerEvents(),this.dataAdapter.current(function(e){l.trigger(\"selection:update\",{data:e})}),e.addClass(\"wfselect2-hidden-accessible\"),e.attr(\"aria-hidden\",\"true\"),this._syncAttributes(),u.StoreData(e[0],\"wfselect2\",this),e.data(\"wfselect2\",this)};return u.Extend(d,u.Observable),d.prototype._generateId=function(e){return\"wfselect2-\"+(null!=e.attr(\"id\")?e.attr(\"id\"):null!=e.attr(\"name\")?e.attr(\"name\")+\"-\"+u.generateChars(2):u.generateChars(4)).replace(\/(:|\\.|\\[|\\]|,)\/g,\"\")},d.prototype._placeContainer=function(e){e.insertAfter(this.$element);var t=this._resolveWidth(this.$element,this.options.get(\"width\"));null!=t&&e.css(\"width\",t)},d.prototype._resolveWidth=function(e,t){var n=\/^width:(([-+]?([0-9]*\\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))\/i;if(\"resolve\"==t){var i=this._resolveWidth(e,\"style\");return null!=i?i:this._resolveWidth(e,\"element\")}if(\"element\"==t){var r=e.outerWidth(!1);return r<=0?\"auto\":r+\"px\"}if(\"style\"!=t)return\"computedstyle\"!=t?t:window.getComputedStyle(e[0]).width;var o=e.attr(\"style\");if(\"string\"!=typeof o)return null;for(var s=o.split(\";\"),a=0,l=s.length;a<l;a+=1){var c=s[a].replace(\/\\s\/g,\"\").match(n);if(null!==c&&1<=c.length)return c[1]}return null},d.prototype._bindAdapters=function(){this.dataAdapter.bind(this,this.$container),this.selection.bind(this,this.$container),this.dropdown.bind(this,this.$container),this.results.bind(this,this.$container)},d.prototype._registerDomEvents=function(){var t=this;this.$element.on(\"change.wfselect2\",function(){t.dataAdapter.current(function(e){t.trigger(\"selection:update\",{data:e})})}),this.$element.on(\"focus.wfselect2\",function(e){t.trigger(\"focus\",e)}),this._syncA=u.bind(this._syncAttributes,this),this._syncS=u.bind(this._syncSubtree,this),this.$element[0].attachEvent&&this.$element[0].attachEvent(\"onpropertychange\",this._syncA);var e=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;null!=e?(this._observer=new e(function(e){t._syncA(),t._syncS(null,e)}),this._observer.observe(this.$element[0],{attributes:!0,childList:!0,subtree:!1})):this.$element[0].addEventListener&&(this.$element[0].addEventListener(\"DOMAttrModified\",t._syncA,!1),this.$element[0].addEventListener(\"DOMNodeInserted\",t._syncS,!1),this.$element[0].addEventListener(\"DOMNodeRemoved\",t._syncS,!1))},d.prototype._registerDataEvents=function(){var n=this;this.dataAdapter.on(\"*\",function(e,t){n.trigger(e,t)})},d.prototype._registerSelectionEvents=function(){var n=this,i=[\"toggle\",\"focus\"];this.selection.on(\"toggle\",function(){n.toggleDropdown()}),this.selection.on(\"focus\",function(e){n.focus(e)}),this.selection.on(\"*\",function(e,t){-1===o.inArray(e,i)&&n.trigger(e,t)})},d.prototype._registerDropdownEvents=function(){var n=this;this.dropdown.on(\"*\",function(e,t){n.trigger(e,t)})},d.prototype._registerResultsEvents=function(){var n=this;this.results.on(\"*\",function(e,t){n.trigger(e,t)})},d.prototype._registerEvents=function(){var n=this;this.on(\"open\",function(){n.$container.addClass(\"wfselect2-container--open\")}),this.on(\"close\",function(){n.$container.removeClass(\"wfselect2-container--open\")}),this.on(\"enable\",function(){n.$container.removeClass(\"wfselect2-container--disabled\")}),this.on(\"disable\",function(){n.$container.addClass(\"wfselect2-container--disabled\")}),this.on(\"blur\",function(){n.$container.removeClass(\"wfselect2-container--focus\")}),this.on(\"query\",function(t){n.isOpen()||n.trigger(\"open\",{}),this.dataAdapter.query(t,function(e){n.trigger(\"results:all\",{data:e,query:t})})}),this.on(\"query:append\",function(t){this.dataAdapter.query(t,function(e){n.trigger(\"results:append\",{data:e,query:t})})}),this.on(\"keypress\",function(e){var t=e.which;n.isOpen()?t===i.ESC||t===i.TAB||t===i.UP&&e.altKey?(n.close(e),e.preventDefault()):t===i.ENTER?(n.trigger(\"results:select\",{}),e.preventDefault()):t===i.SPACE&&e.ctrlKey?(n.trigger(\"results:toggle\",{}),e.preventDefault()):t===i.UP?(n.trigger(\"results:previous\",{}),e.preventDefault()):t===i.DOWN&&(n.trigger(\"results:next\",{}),e.preventDefault()):(t===i.ENTER||t===i.SPACE||t===i.DOWN&&e.altKey)&&(n.open(),e.preventDefault())})},d.prototype._syncAttributes=function(){this.options.set(\"disabled\",this.$element.prop(\"disabled\")),this.isDisabled()?(this.isOpen()&&this.close(),this.trigger(\"disable\",{})):this.trigger(\"enable\",{})},d.prototype._isChangeMutation=function(e,t){var n=!1,i=this;if(!e||!e.target||\"OPTION\"===e.target.nodeName||\"OPTGROUP\"===e.target.nodeName){if(t)if(t.addedNodes&&0<t.addedNodes.length)for(var r=0;r<t.addedNodes.length;r++){t.addedNodes[r].selected&&(n=!0)}else t.removedNodes&&0<t.removedNodes.length?n=!0:o.isArray(t)&&o.each(t,function(e,t){if(i._isChangeMutation(e,t))return!(n=!0)});else n=!0;return n}},d.prototype._syncSubtree=function(e,t){var n=this._isChangeMutation(e,t),i=this;n&&this.dataAdapter.current(function(e){i.trigger(\"selection:update\",{data:e})})},d.prototype.trigger=function(e,t){var n=d.__super__.trigger,i={open:\"opening\",close:\"closing\",select:\"selecting\",unselect:\"unselecting\",clear:\"clearing\"};if(void 0===t&&(t={}),e in i){var r=i[e],o={prevented:!1,name:e,args:t};if(n.call(this,r,o),o.prevented)return void(t.prevented=!0)}n.call(this,e,t)},d.prototype.toggleDropdown=function(){this.isDisabled()||(this.isOpen()?this.close():this.open())},d.prototype.open=function(){this.isOpen()||this.isDisabled()||this.trigger(\"query\",{})},d.prototype.close=function(e){this.isOpen()&&this.trigger(\"close\",{originalEvent:e})},d.prototype.isEnabled=function(){return!this.isDisabled()},d.prototype.isDisabled=function(){return this.options.get(\"disabled\")},d.prototype.isOpen=function(){return this.$container.hasClass(\"wfselect2-container--open\")},d.prototype.hasFocus=function(){return this.$container.hasClass(\"wfselect2-container--focus\")},d.prototype.focus=function(e){this.hasFocus()||(this.$container.addClass(\"wfselect2-container--focus\"),this.trigger(\"focus\",{}))},d.prototype.enable=function(e){this.options.get(\"debug\")&&window.console&&console.warn&&console.warn('WFSelect2: The `wfselect2(\"enable\")` method has been deprecated and will be removed in later WFSelect2 versions. Use $element.prop(\"disabled\") instead.'),null!=e&&0!==e.length||(e=[!0]);var t=!e[0];this.$element.prop(\"disabled\",t)},d.prototype.data=function(){this.options.get(\"debug\")&&0<arguments.length&&window.console&&console.warn&&console.warn('WFSelect2: Data can no longer be set using `wfselect2(\"data\")`. You should consider setting the value instead using `$element.val()`.');var t=[];return this.dataAdapter.current(function(e){t=e}),t},d.prototype.val=function(e){if(this.options.get(\"debug\")&&window.console&&console.warn&&console.warn('WFSelect2: The `wfselect2(\"val\")` method has been deprecated and will be removed in later WFSelect2 versions. Use $element.val() instead.'),null==e||0===e.length)return this.$element.val();var t=e[0];o.isArray(t)&&(t=o.map(t,function(e){return e.toString()})),this.$element.val(t).trigger(\"input\").trigger(\"change\")},d.prototype.destroy=function(){this.$container.remove(),this.$element[0].detachEvent&&this.$element[0].detachEvent(\"onpropertychange\",this._syncA),null!=this._observer?(this._observer.disconnect(),this._observer=null):this.$element[0].removeEventListener&&(this.$element[0].removeEventListener(\"DOMAttrModified\",this._syncA,!1),this.$element[0].removeEventListener(\"DOMNodeInserted\",this._syncS,!1),this.$element[0].removeEventListener(\"DOMNodeRemoved\",this._syncS,!1)),this._syncA=null,this._syncS=null,this.$element.off(\".wfselect2\"),this.$element.attr(\"tabindex\",u.GetData(this.$element[0],\"old-tabindex\")),this.$element.removeClass(\"wfselect2-hidden-accessible\"),this.$element.attr(\"aria-hidden\",\"false\"),u.RemoveData(this.$element[0]),this.$element.removeData(\"wfselect2\"),this.dataAdapter.destroy(),this.selection.destroy(),this.dropdown.destroy(),this.results.destroy(),this.dataAdapter=null,this.selection=null,this.dropdown=null,this.results=null},d.prototype.render=function(){var e=o('<span class=\"wfselect2 wfselect2-container\"><span class=\"selection\"><\/span><span class=\"dropdown-wrapper\" aria-hidden=\"true\"><\/span><\/span>');return e.attr(\"dir\",this.options.get(\"dir\")),this.$container=e,this.$container.addClass(\"wfselect2-container--\"+this.options.get(\"theme\")),u.StoreData(e[0],\"element\",this.$element),e},d}),e.define(\"wfselect2\/compat\/utils\",[\"jquery\"],function(s){return{syncCssClasses:function(e,t,n){var i,r,o=[];(i=s.trim(e.attr(\"class\")))&&s((i=\"\"+i).split(\/\\s+\/)).each(function(){0===this.indexOf(\"wfselect2-\")&&o.push(this)}),(i=s.trim(t.attr(\"class\")))&&s((i=\"\"+i).split(\/\\s+\/)).each(function(){0!==this.indexOf(\"wfselect2-\")&&null!=(r=n(this))&&o.push(r)}),e.attr(\"class\",o.join(\" \"))}}}),e.define(\"wfselect2\/compat\/containerCss\",[\"jquery\",\".\/utils\"],function(s,a){function l(e){return null}function e(){}return e.prototype.render=function(e){var t=e.call(this),n=this.options.get(\"containerCssClass\")||\"\";s.isFunction(n)&&(n=n(this.$element));var i=this.options.get(\"adaptContainerCssClass\");if(i=i||l,-1!==n.indexOf(\":all:\")){n=n.replace(\":all:\",\"\");var r=i;i=function(e){var t=r(e);return null!=t?t+\" \"+e:e}}var o=this.options.get(\"containerCss\")||{};return s.isFunction(o)&&(o=o(this.$element)),a.syncCssClasses(t,this.$element,i),t.css(o),t.addClass(n),t},e}),e.define(\"wfselect2\/compat\/dropdownCss\",[\"jquery\",\".\/utils\"],function(s,a){function l(e){return null}function e(){}return e.prototype.render=function(e){var t=e.call(this),n=this.options.get(\"dropdownCssClass\")||\"\";s.isFunction(n)&&(n=n(this.$element));var i=this.options.get(\"adaptDropdownCssClass\");if(i=i||l,-1!==n.indexOf(\":all:\")){n=n.replace(\":all:\",\"\");var r=i;i=function(e){var t=r(e);return null!=t?t+\" \"+e:e}}var o=this.options.get(\"dropdownCss\")||{};return s.isFunction(o)&&(o=o(this.$element)),a.syncCssClasses(t,this.$element,i),t.css(o),t.addClass(n),t},e}),e.define(\"wfselect2\/compat\/initSelection\",[\"jquery\"],function(i){function e(e,t,n){n.get(\"debug\")&&window.console&&console.warn&&console.warn(\"WFSelect2: The `initSelection` option has been deprecated in favor of a custom data adapter that overrides the `current` method. This method is now called multiple times instead of a single time when the instance is initialized. Support will be removed for the `initSelection` option in future versions of WFSelect2\"),this.initSelection=n.get(\"initSelection\"),this._isInitialized=!1,e.call(this,t,n)}return e.prototype.current=function(e,t){var n=this;this._isInitialized?e.call(this,t):this.initSelection.call(null,this.$element,function(e){n._isInitialized=!0,i.isArray(e)||(e=[e]),t(e)})},e}),e.define(\"wfselect2\/compat\/inputData\",[\"jquery\",\"..\/utils\"],function(s,i){function e(e,t,n){this._currentData=[],this._valueSeparator=n.get(\"valueSeparator\")||\",\",\"hidden\"===t.prop(\"type\")&&n.get(\"debug\")&&console&&console.warn&&console.warn(\"WFSelect2: Using a hidden input with WFSelect2 is no longer supported and may stop working in the future. It is recommended to use a `<select>` element instead.\"),e.call(this,t,n)}return e.prototype.current=function(e,t){function i(e,t){var n=[];return e.selected||-1!==s.inArray(e.id,t)?(e.selected=!0,n.push(e)):e.selected=!1,e.children&&n.push.apply(n,i(e.children,t)),n}for(var n=[],r=0;r<this._currentData.length;r++){var o=this._currentData[r];n.push.apply(n,i(o,this.$element.val().split(this._valueSeparator)))}t(n)},e.prototype.select=function(e,t){if(this.options.get(\"multiple\")){var n=this.$element.val();n+=this._valueSeparator+t.id,this.$element.val(n),this.$element.trigger(\"input\").trigger(\"change\")}else this.current(function(e){s.map(e,function(e){e.selected=!1})}),this.$element.val(t.id),this.$element.trigger(\"input\").trigger(\"change\")},e.prototype.unselect=function(e,r){var o=this;r.selected=!1,this.current(function(e){for(var t=[],n=0;n<e.length;n++){var i=e[n];r.id!=i.id&&t.push(i.id)}o.$element.val(t.join(o._valueSeparator)),o.$element.trigger(\"input\").trigger(\"change\")})},e.prototype.query=function(e,t,n){for(var i=[],r=0;r<this._currentData.length;r++){var o=this._currentData[r],s=this.matches(t,o);null!==s&&i.push(s)}n({results:i})},e.prototype.addOptions=function(e,t){var n=s.map(t,function(e){return i.GetData(e[0],\"data\")});this._currentData.push.apply(this._currentData,n)},e}),e.define(\"wfselect2\/compat\/matcher\",[\"jquery\"],function(s){return function(o){return function(e,t){var n=s.extend(!0,{},t);if(null==e.term||\"\"===s.trim(e.term))return n;if(t.children){for(var i=t.children.length-1;0<=i;i--){var r=t.children[i];o(e.term,r.text,r)||n.children.splice(i,1)}if(0<n.children.length)return n}return o(e.term,t.text,t)?n:null}}}),e.define(\"wfselect2\/compat\/query\",[],function(){function e(e,t,n){n.get(\"debug\")&&window.console&&console.warn&&console.warn(\"WFSelect2: The `query` option has been deprecated in favor of a custom data adapter that overrides the `query` method. Support will be removed for the `query` option in future versions of WFSelect2.\"),e.call(this,t,n)}return e.prototype.query=function(e,t,n){t.callback=n,this.options.get(\"query\").call(null,t)},e}),e.define(\"wfselect2\/dropdown\/attachContainer\",[],function(){function e(e,t,n){e.call(this,t,n)}return e.prototype.position=function(e,t,n){n.find(\".dropdown-wrapper\").append(t),t.addClass(\"wfselect2-dropdown--below\"),n.addClass(\"wfselect2-container--below\")},e}),e.define(\"wfselect2\/dropdown\/stopPropagation\",[],function(){function e(){}return e.prototype.bind=function(e,t,n){e.call(this,t,n);this.$dropdown.on([\"blur\",\"change\",\"click\",\"dblclick\",\"focus\",\"focusin\",\"focusout\",\"input\",\"keydown\",\"keyup\",\"keypress\",\"mousedown\",\"mouseenter\",\"mouseleave\",\"mousemove\",\"mouseover\",\"mouseup\",\"search\",\"touchend\",\"touchstart\"].join(\" \"),function(e){e.stopPropagation()})},e}),e.define(\"wfselect2\/selection\/stopPropagation\",[],function(){function e(){}return e.prototype.bind=function(e,t,n){e.call(this,t,n);this.$selection.on([\"blur\",\"change\",\"click\",\"dblclick\",\"focus\",\"focusin\",\"focusout\",\"input\",\"keydown\",\"keyup\",\"keypress\",\"mousedown\",\"mouseenter\",\"mouseleave\",\"mousemove\",\"mouseover\",\"mouseup\",\"search\",\"touchend\",\"touchstart\"].join(\" \"),function(e){e.stopPropagation()})},e}),l=function(p){var h,f,e=[\"wheel\",\"mousewheel\",\"DOMMouseScroll\",\"MozMousePixelScroll\"],t=\"onwheel\"in document||9<=document.documentMode?[\"wheel\"]:[\"mousewheel\",\"DomMouseScroll\",\"MozMousePixelScroll\"],g=Array.prototype.slice;if(p.event.fixHooks)for(var n=e.length;n;)p.event.fixHooks[e[--n]]=p.event.mouseHooks;var m=p.event.special.mousewheel={version:\"3.1.12\",setup:function(){if(this.addEventListener)for(var e=t.length;e;)this.addEventListener(t[--e],i,!1);else this.onmousewheel=i;p.data(this,\"mousewheel-line-height\",m.getLineHeight(this)),p.data(this,\"mousewheel-page-height\",m.getPageHeight(this))},teardown:function(){if(this.removeEventListener)for(var e=t.length;e;)this.removeEventListener(t[--e],i,!1);else this.onmousewheel=null;p.removeData(this,\"mousewheel-line-height\"),p.removeData(this,\"mousewheel-page-height\")},getLineHeight:function(e){var t=p(e),n=t[\"offsetParent\"in p.fn?\"offsetParent\":\"parent\"]();return n.length||(n=p(\"body\")),parseInt(n.css(\"fontSize\"),10)||parseInt(t.css(\"fontSize\"),10)||16},getPageHeight:function(e){return p(e).height()},settings:{adjustOldDeltas:!0,normalizeOffset:!0}};function i(e){var t,n=e||window.event,i=g.call(arguments,1),r=0,o=0,s=0,a=0,l=0;if((e=p.event.fix(n)).type=\"mousewheel\",\"detail\"in n&&(s=-1*n.detail),\"wheelDelta\"in n&&(s=n.wheelDelta),\"wheelDeltaY\"in n&&(s=n.wheelDeltaY),\"wheelDeltaX\"in n&&(o=-1*n.wheelDeltaX),\"axis\"in n&&n.axis===n.HORIZONTAL_AXIS&&(o=-1*s,s=0),r=0===s?o:s,\"deltaY\"in n&&(r=s=-1*n.deltaY),\"deltaX\"in n&&(o=n.deltaX,0===s&&(r=-1*o)),0!==s||0!==o){if(1===n.deltaMode){var c=p.data(this,\"mousewheel-line-height\");r*=c,s*=c,o*=c}else if(2===n.deltaMode){var u=p.data(this,\"mousewheel-page-height\");r*=u,s*=u,o*=u}if(t=Math.max(Math.abs(s),Math.abs(o)),(!f||t<f)&&y(n,f=t)&&(f\/=40),y(n,t)&&(r\/=40,o\/=40,s\/=40),r=Math[1<=r?\"floor\":\"ceil\"](r\/f),o=Math[1<=o?\"floor\":\"ceil\"](o\/f),s=Math[1<=s?\"floor\":\"ceil\"](s\/f),m.settings.normalizeOffset&&this.getBoundingClientRect){var d=this.getBoundingClientRect();a=e.clientX-d.left,l=e.clientY-d.top}return e.deltaX=o,e.deltaY=s,e.deltaFactor=f,e.offsetX=a,e.offsetY=l,e.deltaMode=0,i.unshift(e,r,o,s),h&&clearTimeout(h),h=setTimeout(v,200),(p.event.dispatch||p.event.handle).apply(this,i)}}function v(){f=null}function y(e,t){return m.settings.adjustOldDeltas&&\"mousewheel\"===e.type&&t%120==0}p.fn.extend({mousewheel:function(e){return e?this.bind(\"mousewheel\",e):this.trigger(\"mousewheel\")},unmousewheel:function(e){return this.unbind(\"mousewheel\",e)}})},\"function\"==typeof e.define&&e.define.amd?e.define(\"jquery-mousewheel\",[\"jquery\"],l):\"object\"==typeof exports?module.exports=l:l(d),e.define(\"jquery.wfselect2\",[\"jquery\",\"jquery-mousewheel\",\".\/wfselect2\/core\",\".\/wfselect2\/defaults\",\".\/wfselect2\/utils\"],function(r,e,o,t,s){if(null==r.fn.wfselect2){var a=[\"open\",\"close\",\"destroy\"];r.fn.wfselect2=function(t){if(\"object\"==typeof(t=t||{}))return this.each(function(){var e=r.extend(!0,{},t);new o(r(this),e)}),this;if(\"string\"!=typeof t)throw new Error(\"Invalid arguments for WFSelect2: \"+t);var n,i=Array.prototype.slice.call(arguments,1);return this.each(function(){var e=s.GetData(this,\"wfselect2\");null==e&&window.console&&console.error&&console.error(\"The wfselect2('\"+t+\"') method was called on an element that is not using WFSelect2.\"),n=e[t].apply(e,i)}),-1<r.inArray(t,a)?this:n}}return null==r.fn.wfselect2.defaults&&(r.fn.wfselect2.defaults=t),o}),{define:e.define,require:e.require}}(),t=e.require(\"jquery.wfselect2\");return d.fn.wfselect2.amd=e,t});"},{"base":"plugins","rel":"wordfence\/js\/admin.liveTraffic.1756145765.js","ext":"js","size":29285,"mtime":1757312769,"type":"text","content":"(function($) {\n\tvar __ = window.wfi18n.__;\n\tvar sprintf = window.wfi18n.sprintf;\n\n\tvar LISTING_LIMIT = 50;\n\n\tLiveTrafficViewModel = function(listings, filters) {\n\t\tvar self = this;\n\t\tvar listingIDTable = {};\n\t\tself.listings = ko.observableArray(listings);\n\t\tself.listings.subscribe(function(items) {\n\t\t\tlistingIDTable = {};\n\t\t\tfor (var i = 0; i < items.length; i++) {\n\t\t\t\tlistingIDTable[items[i].id()] = 1;\n\t\t\t}\n\t\t\t\/\/console.log(items);\n\t\t});\n\t\tself.hasListing = function(id) {\n\t\t\treturn id in listingIDTable;\n\t\t};\n\t\tself.filters = ko.observableArray(filters);\n\n\t\tvar urlGroupBy = new GroupByModel('url', __('URL'));\n\t\tvar groupBys = [\n\t\t\tnew GroupByModel('type', __('Type')),\n\t\t\tnew GroupByModel('user_login', __('Username')),\n\t\t\tnew GroupByModel('statusCode', __('HTTP Response Code')),\n\t\t\tnew GroupByModel('action', __('Firewall Response'), 'enum', ['ok', 'throttled', 'lockedOut', 'blocked', 'blocked:waf']),\n\t\t\tnew GroupByModel('ip', __('IP')),\n\t\t\turlGroupBy\n\t\t];\n\n\t\tself.presetFiltersOptions = ko.observableArray([\n\t\t\tnew PresetFilterModel(__('All Hits'), \"all\", []),\n\t\t\tnew PresetFilterModel(__('Humans'), \"humans\", [new ListingsFilterModel(self, 'type', 'human')]),\n\t\t\tnew PresetFilterModel(__('Registered Users'), \"users\", [new ListingsFilterModel(self, 'userID', '0', '!=')]),\n\t\t\tnew PresetFilterModel(__('Crawlers'), \"crawlers\", [new ListingsFilterModel(self, 'type', 'bot')]),\n\t\t\tnew PresetFilterModel(__('Google Crawlers'), \"google\", [new ListingsFilterModel(self, 'isGoogle', '1')]),\n\t\t\tnew PresetFilterModel(__('Pages Not Found'), \"404s\", [new ListingsFilterModel(self, 'statusCode', '404')]),\n\t\t\tnew PresetFilterModel(__('Logins and Logouts'), \"logins\", [\n\t\t\t\tnew ListingsFilterModel(self, 'action', 'login', 'contains'),\n\t\t\t\tnew ListingsFilterModel(self, 'action', 'logout', 'contains')\n\t\t\t]),\n\t\t\t\/\/new PresetFilterModel('Top Consumers', \"top_consumers\", [new ListingsFilterModel(self, 'statusCode', '200')], urlGroupBy),\n\t\t\t\/\/new PresetFilterModel('Top 404s', \"top_404s\", [new ListingsFilterModel(self, 'statusCode', '404')], urlGroupBy),\n\t\t\tnew PresetFilterModel(__('Locked Out'), \"lockedOut\", [new ListingsFilterModel(self, 'action', 'lockedOut')]),\n\t\t\tnew PresetFilterModel(__('Blocked'), \"blocked\", [new ListingsFilterModel(self, 'action', 'blocked', 'contains')]),\n\t\t\tnew PresetFilterModel(__('Blocked By Firewall'), \"blocked:waf\", [new ListingsFilterModel(self, 'action', 'blocked:waf')])\n\t\t]);\n\n\t\tself.showAdvancedFilters = ko.observable(false);\n\t\tself.showAdvancedFilters.subscribe(function(val) {\n\t\t\tif (val && self.filters().length == 0) {\n\t\t\t\tself.addFilter();\n\t\t\t}\n\t\t});\n\n\t\tself.presetFiltersOptionsText = function(item) {\n\t\t\treturn item.text();\n\t\t};\n\n\t\tself.selectedPresetFilter = ko.observable();\n\t\tself.selectedPresetFilter.subscribe(function(item) {\n\t\t\tvar clonedFilters = ko.toJS(item.filters());\n\t\t\tvar newFilters = [];\n\t\t\tfor (var i = 0; i < clonedFilters.length; i++) {\n\t\t\t\tnewFilters.push(new ListingsFilterModel(self, clonedFilters[i].param, clonedFilters[i].value, clonedFilters[i].operator));\n\t\t\t}\n\t\t\tself.filters(newFilters);\n\t\t\tself.groupBy(item.groupBy());\n\t\t});\n\n\t\tself.filters.subscribe(function() {\n\t\t\tself.checkQueryAndReloadListings();\n\t\t});\n\n\t\tself.addFilter = function() {\n\t\t\tself.filters.push(new ListingsFilterModel(self));\n\t\t};\n\n\t\tself.removeFilter = function(item) {\n\t\t\tself.filters.remove(item);\n\t\t};\n\n\t\tvar currentFilterQuery = '';\n\t\tvar getURLEncodedFilters = function() {\n\t\t\tvar dataString = '';\n\t\t\tko.utils.arrayForEach(self.filters(), function(filter) {\n\t\t\t\tif (filter.getValue() !== false) {\n\t\t\t\t\tdataString += filter.urlEncoded() + '&';\n\t\t\t\t}\n\t\t\t});\n\t\t\tvar groupBy = self.groupBy();\n\t\t\tif (groupBy) {\n\t\t\t\tdataString += 'groupby=' + encodeURIComponent(groupBy.param()) + '&';\n\t\t\t}\n\t\t\tvar startDate = self.startDate();\n\t\t\tif (startDate) {\n\t\t\t\tdataString += 'startDate=' + encodeURIComponent(startDate) + '&';\n\t\t\t}\n\t\t\tvar endDate = self.endDate();\n\t\t\tif (endDate) {\n\t\t\t\tdataString += 'endDate=' + encodeURIComponent(endDate) + '&';\n\t\t\t}\n\t\t\tif (dataString.length > 1) {\n\t\t\t\treturn dataString.substring(0, dataString.length - 1);\n\t\t\t}\n\t\t\treturn '';\n\t\t};\n\n\t\tself.filterGroupByOptions = ko.observableArray(groupBys);\n\n\t\tself.filterGroupByOptionsText = function(item) {\n\t\t\treturn item.text() || item.param();\n\t\t};\n\n\t\tself.groupBy = ko.observable();\n\t\tself.groupBy.subscribe(function() {\n\t\t\tself.checkQueryAndReloadListings();\n\t\t});\n\n\t\tself.startDate = ko.observable();\n\t\tself.startDate.subscribe(function() {\n\t\t\t\/\/ console.log('start date change ' + self.startDate());\n\t\t\tself.checkQueryAndReloadListings();\n\t\t});\n\n\t\tself.endDate = ko.observable();\n\t\tself.endDate.subscribe(function() {\n\t\t\t\/\/ console.log('end date change ' + self.endDate());\n\t\t\tself.checkQueryAndReloadListings();\n\t\t});\n\n\t\t\/**\n\t\t * Pulls down fresh traffic data and resets the list.\n\t\t *\n\t\t * @param options\n\t\t *\/\n\t\tself.checkQueryAndReloadListings = function(options) {\n\t\t\tif (currentFilterQuery !== getURLEncodedFilters()) {\n\t\t\t\tself.reloadListings(options);\n\t\t\t}\n\t\t};\n\t\tself.reloadListings = function(options) {\n\t\t\tpullDownListings(options, function(listings) {\n\t\t\t\tvar groupByKO = self.groupBy();\n\t\t\t\tvar groupBy = '';\n\t\t\t\tif (groupByKO) {\n\t\t\t\t\tgroupBy = groupByKO.param();\n\t\t\t\t\tWFAD.mode = 'liveTraffic_paused';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tWFAD.mode = 'liveTraffic';\n\t\t\t\t}\n\n\t\t\t\tvar newListings = [];\n\t\t\t\tfor (var i = 0; i < listings.length; i++) {\n\t\t\t\t\tnewListings.push(new ListingModel(listings[i], groupBy));\n\t\t\t\t}\n\t\t\t\tself.listings(newListings);\n\t\t\t})\n\t\t};\n\n\t\t\/**\n\t\t * Used in the infinite scroll\n\t\t *\/\n\t\tself.loadNextListings = function(callback) {\n\t\t\tvar lastTimestamp = self.filters[0];\n\t\t\tpullDownListings({\n\t\t\t\tsince: lastTimestamp,\n\t\t\t\tlimit: LISTING_LIMIT,\n\t\t\t\toffset: self.listings().length\n\t\t\t}, function() {\n\t\t\t\tself.appendListings.apply(this, arguments);\n\t\t\t\ttypeof callback === 'function' && callback.apply(this, arguments);\n\t\t\t});\n\t\t};\n\n\t\tself.getCurrentQueryString = function(options) {\n\t\t\tvar queryOptions = {\n\t\t\t\tsince: null,\n\t\t\t\tlimit: LISTING_LIMIT,\n\t\t\t\toffset: 0\n\t\t\t};\n\t\t\tfor (var prop in queryOptions) {\n\t\t\t\tif (queryOptions.hasOwnProperty(prop) && options && prop in options) {\n\t\t\t\t\tqueryOptions[prop] = options[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentFilterQuery = getURLEncodedFilters();\n\t\t\tvar data = currentFilterQuery;\n\t\t\tfor (prop in queryOptions) {\n\t\t\t\tif (queryOptions.hasOwnProperty(prop)) {\n\t\t\t\t\tvar val = queryOptions[prop];\n\t\t\t\t\tif (val === null || val === undefined) {\n\t\t\t\t\t\tval = '';\n\t\t\t\t\t}\n\t\t\t\t\tdata += '&' + encodeURIComponent(prop) + '=' + encodeURIComponent(val);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn data;\n\t\t};\n\n\t\tvar pullDownListings = function(options, callback) {\n\t\t\tvar data = self.getCurrentQueryString(options);\n\n\t\t\tWFAD.ajax('wordfence_loadLiveTraffic', data, function(response) {\n\t\t\t\tif (!response || !response.success) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcallback && callback(response.data, response);\n\t\t\t\tself.sql(response.sql);\n\t\t\t});\n\t\t};\n\n\t\tself.prependListings = function(listings, response) {\n\t\t\tfor (var i = listings.length - 1; i >= 0; i--) {\n\t\t\t\t\/\/ Prevent duplicates\n\t\t\t\tif (self.hasListing(listings[i].id)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar listing = new ListingModel(listings[i]);\n\t\t\t\tlisting.highlighted(true);\n\t\t\t\tself.listings.unshift(listing);\n\t\t\t}\n\n\t\t\t\/\/self.listings.sort(function(a, b) {\n\t\t\t\/\/\tif (a.ctime() < b.ctime()) {\n\t\t\t\/\/\t\treturn 1;\n\t\t\t\/\/\t} else if (a.ctime() > b.ctime()) {\n\t\t\t\/\/\t\treturn -1;\n\t\t\t\/\/\t}\n\t\t\t\/\/\treturn 0;\n\t\t\t\/\/});\n\t\t};\n\n\t\tself.appendListings = function(listings, response) {\n\t\t\tvar highlight = 3;\n\t\t\tfor (var i = 0; i < listings.length; i++) {\n\t\t\t\t\/\/ Prevent duplicates\n\t\t\t\tif (self.hasListing(listings[i].id)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tvar listing = new ListingModel(listings[i]);\n\t\t\t\tlisting.highlighted(highlight-- > 0);\n\t\t\t\tself.listings.push(listing);\n\t\t\t}\n\n\t\t\t\/\/self.listings.sort(function(a, b) {\n\t\t\t\/\/\tif (a.ctime() < b.ctime()) {\n\t\t\t\/\/\t\treturn 1;\n\t\t\t\/\/\t} else if (a.ctime() > b.ctime()) {\n\t\t\t\/\/\t\treturn -1;\n\t\t\t\/\/\t}\n\t\t\t\/\/\treturn 0;\n\t\t\t\/\/});\n\t\t};\n\n\t\tself.whitelistWAFParamKey = function(path, paramKey, failedRules) {\n\t\t\tWFAD.ajax('wordfence_whitelistWAFParamKey', {\n\t\t\t\tpath: path,\n\t\t\t\tparamKey: paramKey,\n\t\t\t\tfailedRules: failedRules\n\t\t\t}, function(response) {\n\n\t\t\t});\n\t\t};\n\n\t\tself.trimIP = function(ip) {\n\t\t\tif (ip && ip.length > 16) {\n\t\t\t\treturn ip.substring(0, 16) + \"\\u2026\";\n\t\t\t}\n\t\t\treturn ip;\n\t\t};\n\n\t\t$(window).on('wf-live-traffic-ip-blocked', function(e, ip) {\n\t\t\tko.utils.arrayForEach(self.listings(), function(listing) {\n\t\t\t\tif (listing.IP() === ip) {\n\t\t\t\t\tlisting.blocked(true);\n\t\t\t\t}\n\t\t\t});\n\t\t}).on('wf-live-traffic-ip-unblocked', function(e, ip) {\n\t\t\tko.utils.arrayForEach(self.listings(), function(listing) {\n\t\t\t\tif (listing.IP() === ip) {\n\t\t\t\t\tlisting.blocked(false);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\t\/\/ For debuggering-a-ding\n\t\tself.sql = ko.observable('');\n\t};\n\n\tLiveTrafficViewModel.truncateText = function(text, maxLength) {\n\t\tmaxLength = maxLength || 100;\n\t\tif (text && text.length > maxLength) {\n\t\t\treturn text.substring(0, Math.round(maxLength)) + \"\\u2026\";\n\t\t\t\/\/ return text.substring(0, Math.round(maxLength \/ 2)) + \" ... \" + text.substring(text.length - Math.round(maxLength \/ 2));\n\t\t}\n\t\treturn text;\n\t};\n\n\tvar ListingModel = function(data, groupBy) {\n\t\tvar self = this;\n\n\t\tself.id = ko.observable(0);\n\t\tself.ctime = ko.observable(0);\n\t\tself.IP = ko.observable('');\n\t\tself.jsRun = ko.observable(0);\n\t\tself.statusCode = ko.observable(200);\n\t\tself.isGoogle = ko.observable(0);\n\t\tself.userID = ko.observable(0);\n\t\tself.URL = ko.observable('');\n\t\tself.referer = ko.observable('');\n\t\tself.UA = ko.observable('');\n\t\tself.loc = ko.observable();\n\t\tself.type = ko.observable('');\n\t\tself.blocked = ko.observable(false);\n\t\tself.rangeBlocked = ko.observable(false);\n\t\tself.ipRangeID = ko.observable(-1);\n\t\tself.extReferer = ko.observable();\n\t\tself.browser = ko.observable();\n\t\tself.user = ko.observable();\n\t\tself.hitCount = ko.observable();\n\t\tself.username = ko.observable('');\n\n\t\t\/\/ New fields\/columns\n\t\tself.action = ko.observable('');\n\t\tself.actionDescription = ko.observable(false);\n\t\tself.actionData = ko.observable();\n\n\t\tself.highlighted = ko.observable(false);\n\t\tself.showDetails = ko.observable(false);\n\t\tself.toggleDetails = function() {\n\t\t\tself.showDetails(!self.showDetails());\n\t\t};\n\t\t\/\/self.highlighted.subscribe(function(val) {\n\t\t\/\/\tif (val) {\n\t\t\/\/\t\t_classes += ' highlighted';\n\t\t\/\/\t\tself.cssClasses(_classes);\n\t\t\/\/\t} else {\n\t\t\/\/\t\t_classes.replace(\/  highlighted(\\s*|$)\/, ' ');\n\t\t\/\/\t\tself.cssClasses(_classes);\n\t\t\/\/\t}\n\t\t\/\/});\n\n\t\tfor (var prop in data) {\n\t\t\tif (data.hasOwnProperty(prop)) {\n\t\t\t\tif (prop === 'blocked' || prop === 'rangeBlocked') {\n\t\t\t\t\tdata[prop] = !!data[prop];\n\t\t\t\t}\n\t\t\t\tself[prop] !== undefined && self[prop](data[prop]);\n\t\t\t}\n\t\t}\n\n\t\tif (data['lastHit'] !== undefined) {\n\t\t\tself['ctime'](data['lastHit']);\n\t\t}\n\n\t\tself.timestamp = ko.pureComputed(function() {\n\t\t\tvar date = new Date(self.ctime() * 1000);\n\t\t\treturn date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n\t\t}, self);\n\n\t\t\/\/ Use the same format as these update.\n\t\tself.timeAgo = ko.pureComputed(function() {\n\t\t\tvar serverTime = WFAD.serverMicrotime;\n\t\t\treturn $(WFAD.showTimestamp(this.ctime(), serverTime)).text();\n\t\t}, self);\n\n\t\tself.displayURL = ko.pureComputed(function() {\n\t\t\treturn LiveTrafficViewModel.truncateText(self.URL(), 105);\n\t\t});\n\n\t\tself.displayURLShort = ko.pureComputed(function() {\n\t\t\tvar a = document.createElement('a');\n\t\t\tif (!self.URL()) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\ta.href = self.URL();\n\t\t\tif (a.host !== location.host) {\n\t\t\t\treturn LiveTrafficViewModel.truncateText(self.URL(), 30);\n\t\t\t}\n\t\t\tvar url = a.pathname + (typeof a.search === 'string' ? a.search : '');\n\t\t\treturn LiveTrafficViewModel.truncateText(url, 30);\n\t\t});\n\n\t\tself.firewallAction = ko.pureComputed(function() {\n\t\t\t\/\/Grouped by firewall action listing\n\t\t\tif (groupBy == 'action') {\n\t\t\t\tswitch (self.action()) {\n\t\t\t\t\tcase 'lockedOut':\n\t\t\t\t\t\treturn __('Locked out from logging in');\n\t\t\t\t\tcase 'blocked:waf-always':\n\t\t\t\t\t\treturn __('Blocked by the Wordfence Application Firewall and plugin settings');\n\t\t\t\t\tcase 'blocked:wordfence':\n\t\t\t\t\t\treturn __('Blocked by Wordfence plugin settings');\n\t\t\t\t\tcase 'blocked:wfsnrepeat':\n\t\t\t\t\tcase 'blocked:wfsn':\n\t\t\t\t\t\treturn __('Blocked by the Wordfence Security Network');\n\t\t\t\t\tcase 'blocked:waf':\n\t\t\t\t\t\treturn __('Blocked by the Wordfence Web Application Firewall');\n\t\t\t\t\tcase 'cbl:redirect':\n\t\t\t\t\t\treturn __('Redirected by Country Blocking bypass URL');\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn __('Blocked by Wordfence');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\/\/Standard listing\n\t\t\tvar desc = '';\n\t\t\tswitch (self.action()) {\n\t\t\t\tcase 'lockedOut':\n\t\t\t\t\treturn __('locked out from logging in');\n\n\t\t\t\tcase 'blocked:waf-always':\n\t\t\t\tcase 'blocked:wordfence':\n\t\t\t\tcase 'blocked:wfsnrepeat':\n\t\t\t\t\tdesc = self.actionDescription();\n\t\t\t\t\tif (desc && desc.toLowerCase().indexOf('block') === 0) {\n\t\t\t\t\t\treturn 'b' + desc.substring(1);\n\t\t\t\t\t}\n\t\t\t\t\treturn sprintf(__('blocked for %s'), desc);\n\n\t\t\t\tcase 'blocked:wfsn':\n\t\t\t\t\treturn __('blocked by the Wordfence Security Network');\n\n\t\t\t\tcase 'blocked:waf':\n\t\t\t\t\tvar data = self.actionData();\n\t\t\t\t\tif (typeof data === 'object') {\n\t\t\t\t\t\tvar paramKey = data.paramKey ? WFAD.base64_decode(data.paramKey) : null;\n\t\t\t\t\t\tvar paramValue = data.paramKey ? WFAD.base64_decode(data.paramValue) : null;\n\t\t\t\t\t\t\/\/ var category = data.category;\n\n\t\t\t\t\t\tvar matches = paramKey !== null && paramKey.match(\/([a-z0-9_]+\\.[a-z0-9_]+)(?:\\[(.+?)\\](.*))?\/i);\n\t\t\t\t\t\tdesc = self.actionDescription();\n\t\t\t\t\t\tif (matches) {\n\t\t\t\t\t\t\tswitch (matches[1]) {\n\t\t\t\t\t\t\t\tcase 'request.queryString':\n\t\t\t\t\t\t\t\t\tdesc = sprintf(__('%s in query string: %s'), self.actionDescription(), matches[2] + '=' + LiveTrafficViewModel.truncateText(encodeURIComponent(paramValue)));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'request.body':\n\t\t\t\t\t\t\t\t\tdesc = sprintf(__('%s in POST body: %s'), self.actionDescription(), matches[2] + '=' + LiveTrafficViewModel.truncateText(encodeURIComponent(paramValue)));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'request.cookie':\n\t\t\t\t\t\t\t\t\tdesc = sprintf(__('%s in cookie: %s'), self.actionDescription(), matches[2] + '=' + LiveTrafficViewModel.truncateText(encodeURIComponent(paramValue)));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'request.fileNames':\n\t\t\t\t\t\t\t\t\tdesc = sprintf(__('%s in file: %s'), self.actionDescription(), matches[2] + '=' + LiveTrafficViewModel.truncateText(encodeURIComponent(paramValue)));\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (desc) {\n\t\t\t\t\t\t\treturn sprintf(__('blocked by firewall for %s'), desc);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (data.failedRules == 'blocked') {\n\t\t\t\t\t\t\treturn __('blocked by real-time IP blocklist');\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn __('blocked by firewall');\n\t\t\t\t\t}\n\t\t\t\t\treturn sprintf(__('blocked by firewall for %s'), self.actionDescription());\n\t\t\t\tcase 'cbl:redirect':\n\t\t\t\t\tdesc = self.actionDescription();\n\t\t\t\t\treturn desc;\n\t\t\t}\n\t\t\treturn desc;\n\t\t});\n\n\t\tself.cssClasses = ko.pureComputed(function() {\n\t\t\tvar classes = 'wf-live-traffic-hit-type';\n\t\t\tif (self.statusCode() == 403 || self.statusCode() == 503) {\n\t\t\t\tclasses += ' wfActionBlocked';\n\t\t\t}\n\t\t\tif (self.statusCode() == 404) {\n\t\t\t\tclasses += ' wf404';\n\t\t\t}\n\t\t\tif (self.jsRun() == 1) {\n\t\t\t\tclasses += ' wfHuman';\n\t\t\t}\n\t\t\tif (self.actionData() && self.actionData().learningMode) {\n\t\t\t\tclasses += ' wfWAFLearningMode';\n\t\t\t}\n\t\t\tif (self.action() == 'loginFailValidUsername' || self.action() == 'loginFailInvalidUsername') {\n\t\t\t\tclasses += ' wfFailedLogin';\n\t\t\t}\n\t\t\t\/\/ if (self.highlighted()) {\n\t\t\t\/\/ \tclasses += ' highlighted';\n\t\t\t\/\/ }\n\t\t\treturn classes;\n\t\t});\n\n\t\tself.typeIconClass = ko.pureComputed(function() {\n\t\t\tvar classes = 'wf-live-traffic-type-icon';\n\t\t\tif (self.statusCode() == 403 || self.statusCode() == 503) {\n\t\t\t\tclasses += ' wf-icon-blocked wf-ion-android-cancel';\n\t\t\t} else if (self.statusCode() == 404 || self.action() == 'loginFailValidUsername' || self.action() == 'loginFailInvalidUsername') {\n\t\t\t\tclasses += ' wf-icon-warning wf-ion-alert-circled';\n\t\t\t} else if (self.jsRun() == 1) {\n\t\t\t\tclasses += ' wf-icon-human wf-ion-ios-person';\n\t\t\t} else {\n\t\t\t\t\/\/ classes += ' wf-ion-soup-can';\n\t\t\t\tclasses += ' wf-ion-bug';\n\t\t\t}\n\t\t\treturn classes;\n\t\t});\n\n\t\tself.typeText = ko.pureComputed(function() {\n\t\t\tvar type = '';\n\t\t\tif (self.action() == 'loginFailValidUsername' || self.action() == 'loginFailInvalidUsername') {\n\t\t\t\ttype = __('Failed Login');\n\t\t\t} else if (self.statusCode() == 403 || self.statusCode() == 503) {\n\t\t\t\ttype = __('Blocked');\n\t\t\t} else if (self.statusCode() == 404) {\n\t\t\t\ttype = __('404 Not Found');\n\t\t\t} else if (self.statusCode() == 302) {\n\t\t\t\ttype = __('Redirected');\n\t\t\t} else if (self.jsRun() == 1) {\n\t\t\t\ttype = __('Human');\n\t\t\t} else {\n\t\t\t\ttype = __('Bot');\n\t\t\t}\n\t\t\treturn sprintf(__('Type: %s'), type);\n\t\t});\n\n\t\tfunction slideInDrawer() {\n\t\t\toverlayWrapper.fadeIn(400);\n\t\t\toverlay.css({\n\t\t\t\tright: '-800px'\n\t\t\t})\n\t\t\t.stop()\n\t\t\t.animate({\n\t\t\t\tright: 0\n\t\t\t}, 500);\n\t\t}\n\n\t\tself.showWhoisOverlay = function() {\n\t\t\tslideInDrawer();\n\t\t\toverlayHeader.html($('#wfActEvent_' + self.id()).html());\n\t\t\toverlayBody.html('').css('opacity', 0);\n\n\t\t\tWFAD.ajax('wordfence_whois', {\n\t\t\t\tval: self.IP()\n\t\t\t}, function(result) {\n\t\t\t\tvar whoisHTML = WFAD.completeWhois(result, true);\n\t\t\t\toverlayBody.stop()\n\t\t\t\t.animate({\n\t\t\t\t\topacity: 1\n\t\t\t\t}, 200)\n\t\t\t\t.html('<h4 style=\\'margin-top:0;\\'>' + __('WHOIS LOOKUP') + '<\/h4>' + whoisHTML);\n\t\t\t\t$(window).trigger('wf-live-traffic-overlay-bind', self);\n\t\t\t});\n\t\t};\n\n\t\tself.showRecentTraffic = function() {\n\t\t\tslideInDrawer();\n\t\t\toverlayHeader.html($('#wfActEvent_' + self.id()).html());\n\t\t\toverlayBody.html('').css('opacity', 0);\n\n\t\t\tWFAD.ajax('wordfence_recentTraffic', {\n\t\t\t\tip: self.IP()\n\t\t\t}, function(result) {\n\t\t\t\toverlayBody.stop()\n\t\t\t\t.animate({\n\t\t\t\t\topacity: 1\n\t\t\t\t}, 200)\n\t\t\t\t.html('<h3 style=\\'margin-top:0;\\'>' + __('Recent Activity') + '<\/h3>' + result.result);\n\t\t\t\t$(window).trigger('wf-live-traffic-overlay-bind', self);\n\t\t\t\tWFAD.avatarLookup();\n\t\t\t});\n\t\t};\n\n\t\t\/*\n\t\t\tBlocking functions\n\t\t*\/\n\t\tself.unblockIP = function() {\n\t\t\tWFAD.unblockIP(self.IP(), function() {\n\t\t\t\t$(window).trigger('wf-live-traffic-ip-unblocked', self.IP());\n\t\t\t});\n\t\t};\n\t\tself.unblockNetwork = function() {\n\t\t\tWFAD.unblockNetwork(self.ipRangeID());\n\t\t};\n\t\tself.blockIP = function() {\n\t\t\tWFAD.blockIP(self.IP(), __('Manual block by administrator'), function() {\n\t\t\t\t$(window).trigger('wf-live-traffic-ip-blocked', self.IP());\n\t\t\t});\n\t\t};\n\t};\n\n\tvar ListingsFilterModel = function(viewModel, param, value, operator) {\n\t\tvar self = this;\n\t\tself.viewModel = viewModel;\n\t\tself.param = ko.observable('');\n\t\tself.value = ko.observable('');\n\t\tself.operator = ko.observable('');\n\n\t\tself.param(param);\n\t\tself.value(value);\n\t\tself.operator(operator || '=');\n\n\t\tvar filterChanged = function() {\n\t\t\tself.viewModel && self.viewModel.checkQueryAndReloadListings && self.viewModel.checkQueryAndReloadListings();\n\t\t};\n\t\tself.param.subscribe(filterChanged);\n\t\tself.operator.subscribe(filterChanged);\n\t\tself.value.subscribe(function(value) {\n\t\t\tif (value instanceof FilterParamEnumOptionModel && value.operator()) {\n\t\t\t\tself.selectedFilterOperatorOptionValue(value.operator());\n\t\t\t}\n\t\t\tfilterChanged();\n\t\t});\n\n\t\tvar equalsOperator = new FilterOperatorModel('=');\n\t\tvar notEqualsOperator = new FilterOperatorModel('!=', '\\u2260');\n\t\tvar containsOperator = new FilterOperatorModel('contains');\n\t\tvar matchOperator = new FilterOperatorModel('match');\n\t\tself.filterOperatorOptions = ko.observableArray([\n\t\t\tequalsOperator,\n\t\t\tnotEqualsOperator,\n\t\t\tcontainsOperator,\n\t\t\tmatchOperator\n\t\t]);\n\n\t\tself.filterParamOptions = ko.observableArray([\n\t\t\tnew FilterParamModel('type', __('Type'), 'enum', [\n\t\t\t\tnew FilterParamEnumOptionModel('human', __('Human')),\n\t\t\t\tnew FilterParamEnumOptionModel('bot', __('Bot'))\n\t\t\t]),\n\t\t\tnew FilterParamModel('user_login', __('Username')),\n\t\t\tnew FilterParamModel('userID', __('User ID')),\n\t\t\tnew FilterParamModel('isGoogle', __('Google Bot'), 'bool'),\n\t\t\tnew FilterParamModel('ip', __('IP')),\n\t\t\tnew FilterParamModel('ua', __('User Agent')),\n\t\t\tnew FilterParamModel('referer', __('Referer')),\n\t\t\tnew FilterParamModel('url', __('URL')),\n\t\t\tnew FilterParamModel('statusCode', __('HTTP Response Code')),\n\t\t\tnew FilterParamModel('action', __('Firewall Response'), 'enum', [\n\t\t\t\tnew FilterParamEnumOptionModel('', __('OK')),\n\t\t\t\tnew FilterParamEnumOptionModel('throttled', __('Throttled')),\n\t\t\t\tnew FilterParamEnumOptionModel('lockedOut', __('Locked Out')),\n\t\t\t\tnew FilterParamEnumOptionModel('blocked', __('Blocked'), containsOperator),\n\t\t\t\tnew FilterParamEnumOptionModel('blocked:waf', __('Blocked WAF'))\n\t\t\t]),\n\t\t\tnew FilterParamModel('action', __('Logins'), 'enum', [\n\t\t\t\tnew FilterParamEnumOptionModel('loginOK', __('Logged In')),\n\t\t\t\tnew FilterParamEnumOptionModel('loginFail', __('Failed Login')),\n\t\t\t\tnew FilterParamEnumOptionModel('loginFailInvalidUsername', __('Failed Login: Invalid Username')),\n\t\t\t\tnew FilterParamEnumOptionModel('loginFailValidUsername', __('Failed Login: Valid Username'))\n\t\t\t]),\n\t\t\tnew FilterParamModel('action', __('Security Event'))\n\t\t]);\n\n\t\tself.filterParamOptionsText = function(item) {\n\t\t\treturn item.text() || item.param();\n\t\t};\n\n\t\tself.selectedFilterParamOptionValue = ko.observable();\n\t\tself.selectedFilterParamOptionValue.subscribe(function(item) {\n\t\t\tself.param(item && item.param ? item.param() : '');\n\t\t});\n\n\t\tko.utils.arrayForEach(self.filterParamOptions(), function(item) {\n\t\t\tif (self.param() == item.param()) {\n\t\t\t\tswitch (item.type()) {\n\t\t\t\t\tcase 'enum':\n\t\t\t\t\t\t\/\/ console.log(self.param(), item.param(), self.value(), values);\n\t\t\t\t\t\tswitch (self.operator()) {\n\t\t\t\t\t\t\tcase '=':\n\t\t\t\t\t\t\t\tko.utils.arrayForEach(item.values(), function(enumOption) {\n\t\t\t\t\t\t\t\t\tif (enumOption.value() == self.value()) {\n\t\t\t\t\t\t\t\t\t\tself.selectedFilterParamOptionValue(item);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tself.selectedFilterParamOptionValue(item);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tself.filterOperatorOptionsText = function(item) {\n\t\t\treturn item.text() || item.operator();\n\t\t};\n\n\t\tself.selectedFilterOperatorOptionValue = ko.observable();\n\t\tself.selectedFilterOperatorOptionValue.subscribe(function(item) {\n\t\t\tself.operator(item.operator());\n\t\t});\n\n\t\tko.utils.arrayForEach(self.filterOperatorOptions(), function(item) {\n\t\t\tif (self.operator() == item.operator()) {\n\t\t\t\tself.selectedFilterOperatorOptionValue(item);\n\t\t\t}\n\t\t});\n\n\t\tself.getValue = function() {\n\t\t\tvar value = self.value() instanceof FilterParamEnumOptionModel ? self.value().value() : self.value();\n\t\t\treturn (typeof value === 'string' || typeof value === 'number') ? value : false;\n\t\t};\n\t\tself.urlEncoded = function() {\n\t\t\tvar value = self.getValue();\n\t\t\treturn 'param[]=' + encodeURIComponent(self.param()) + '&value[]=' + encodeURIComponent(value) +\n\t\t\t\t'&operator[]=' + encodeURIComponent(self.operator());\n\t\t};\n\t};\n\n\tvar PresetFilterModel = function(text, value, filters, groupBy) {\n\t\tthis.text = ko.observable('');\n\t\tthis.value = ko.observable('');\n\t\tthis.filters = ko.observableArray(filters);\n\t\tthis.groupBy = ko.observable(groupBy);\n\n\t\tthis.text(text);\n\t\tthis.value(value);\n\t};\n\n\tvar FilterParamModel = function(param, text, type, values) {\n\t\tthis.text = ko.observable('');\n\t\tthis.param = ko.observable('');\n\t\tthis.type = ko.observable('');\n\t\tthis.values = ko.observableArray(values);\n\n\t\tthis.text(text);\n\t\tthis.param(param);\n\t\tthis.type(type || 'text');\n\n\t\tthis.optionsText = function(item) {\n\t\t\tif (item instanceof FilterParamEnumOptionModel) {\n\t\t\t\treturn item.label() || item.value();\n\t\t\t}\n\t\t\treturn item;\n\t\t}\n\t};\n\n\tvar FilterParamEnumOptionModel = function(value, label, operator) {\n\t\tthis.value = ko.observable('');\n\t\tthis.label = ko.observable('');\n\t\tthis.operator = ko.observable('');\n\n\t\tthis.value = ko.observable(value);\n\t\tthis.label = ko.observable(label);\n\t\tthis.operator = ko.observable(operator);\n\n\t\tthis.toString = function() {\n\t\t\treturn this.value();\n\t\t}\n\t};\n\n\tvar FilterOperatorModel = function(operator, text) {\n\t\tthis.text = ko.observable('');\n\t\tthis.operator = ko.observable('');\n\n\t\tthis.text(text);\n\t\tthis.operator(operator);\n\t};\n\n\tvar GroupByModel = function(param, text) {\n\t\tthis.text = ko.observable('');\n\t\tthis.param = ko.observable('');\n\n\t\tthis.text(text);\n\t\tthis.param(param);\n\t};\n\n\tko.bindingHandlers.datetimepicker = {\n\t\tinit: function(element, valueAccessor, allBindingsAccessor) {\n\t\t\t\/\/initialize datepicker with some optional options\n\t\t\tvar options = allBindingsAccessor().datepickerOptions || {},\n\t\t\t\t$el = $(element);\n\n\t\t\t$el.datetimepicker(options);\n\n\t\t\t\/\/handle the field changing by registering datepicker's changeDate event\n\t\t\tko.utils.registerEventHandler(element, \"changeDate\", function() {\n\t\t\t\tvar observable = valueAccessor();\n\t\t\t\tobservable($el.datetimepicker(\"getDate\"));\n\t\t\t});\n\n\t\t\t\/\/handle disposal (if KO removes by the template binding)\n\t\t\tko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n\t\t\t\t$el.datetimepicker(\"destroy\");\n\t\t\t});\n\n\t\t},\n\t\tupdate: function(element, valueAccessor) {\n\t\t\tvar value = ko.utils.unwrapObservable(valueAccessor()),\n\t\t\t\t$el = $(element);\n\n\t\t\t\/\/handle date data coming via json from Microsoft\n\t\t\tif (String(value).indexOf('\/Date(') == 0) {\n\t\t\t\tvalue = new Date(parseInt(value.replace(\/\\\/Date\\((.*?)\\)\\\/\/gi, \"$1\")));\n\t\t\t}\n\n\t\t\tvar current = $el.datetimepicker(\"getDate\");\n\n\t\t\tif (value - current !== 0) {\n\t\t\t\t$el.datetimepicker(\"setDate\", value);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar overlayWrapper = null,\n\t\toverlay = null,\n\t\toverlayCloseButton = null,\n\t\toverlayHeader = null,\n\t\toverlayBody = null;\n\t$(function() {\n\n\t\tvar liveTrafficWrapper = $('#wf-live-traffic');\n\t\t$('#wf-lt-preset-filters').wfselect2({\n\t\t\ttemplateSelection: function(value) {\n\t\t\t\treturn $('<span><em>' + __('Filter Traffic') + '<\/em>: ' + value.text + '<\/span>');\n\t\t\t}\n\t\t});\n\n\t\toverlayWrapper = $('#wf-live-traffic-util-overlay-wrapper').on('click', function(evt) {\n\t\t\tif (evt.target === this) {\n\t\t\t\toverlayCloseButton.trigger('click');\n\t\t\t}\n\t\t});\n\t\toverlay = overlayWrapper.find('.wf-live-traffic-util-overlay');\n\t\toverlayCloseButton = overlayWrapper.find('.wf-live-traffic-util-overlay-close').on('click', function() {\n\t\t\toverlayWrapper.fadeOut(250);\n\t\t\toverlay\n\t\t\t.stop()\n\t\t\t.animate({\n\t\t\t\tright: '-800px'\n\t\t\t}, 250);\n\t\t\toverlayHeader.html('');\n\t\t\toverlayBody.html('').css('opacity', 0);\n\t\t\t$(window).trigger('wf-live-traffic-overlay-unbind');\n\t\t});\n\t\toverlayHeader = overlayWrapper.find('.wf-live-traffic-util-overlay-header');\n\t\toverlayBody = overlayWrapper.find('.wf-live-traffic-util-overlay-body');\n\t\t$([overlayHeader, overlayBody]).on('click', function() {\n\t\t\treturn false;\n\t\t});\n\n\t\t\/\/ liveTrafficWrapper.find('#wf-lt-advanced-filters select').wfselect2({\n\t\t\/\/\n\t\t\/\/ });\n\n\t\tWFAD.wfLiveTraffic = new LiveTrafficViewModel();\n\t\tko.applyBindings(WFAD.wfLiveTraffic, liveTrafficWrapper.get(0));\n\t\tliveTrafficWrapper.find('form').submit();\n\t\tWFAD.mode = 'liveTraffic';\n\n\t\tvar legendWrapper = $('#wf-live-traffic-legend-wrapper');\n\t\tvar placeholder = $('#wf-live-traffic-legend-placeholder');\n\t\tvar legend = $('#wf-live-traffic-legend');\n\t\tvar adminBar = $('#wpadminbar');\n\t\tvar liveTrafficListings = $('#wf-lt-listings');\n\t\tvar groupedListings = $('div#wf-live-traffic-group-by'); \n\n\t\tvar hasScrolled = false;\n\t\tvar loadingListings = false;\n\t\t$(window).on('scroll', function() {\n\t\t\tvar win = $(this);\n\t\t\tvar needsSticky = (WFAD.isSmallScreen ? (legendWrapper.offset().top < win.scrollTop() + 10) : (legendWrapper.offset().top < win.scrollTop() + adminBar.outerHeight() + 10));\n\t\t\tif (needsSticky) {\n\t\t\t\tvar legendWidth = legend.width();\n\t\t\t\tvar legendHeight = legend.height();\n\n\t\t\t\tlegend.addClass('sticky');\n\t\t\t\tlegend.css('width', legendWidth);\n\t\t\t\tlegend.css('height', legendHeight);\n\t\t\t\tplaceholder.addClass('sticky');\n\t\t\t\tplaceholder.css('width', legendWidth);\n\t\t\t\tplaceholder.css('height', legendHeight);\n\t\t\t} else {\n\t\t\t\tlegend.removeClass('sticky');\n\t\t\t\tlegend.css('width', 'auto');\n\t\t\t\tlegend.css('height', 'auto');\n\t\t\t\tplaceholder.removeClass('sticky');\n\t\t\t}\n\n\t\t\tvar firstLTRow = liveTrafficListings.children().filter(':visible').first();\n\t\t\tif ((firstLTRow.length > 0 && firstLTRow.offset().top + firstLTRow.height() < win.scrollTop() + adminBar.outerHeight() + 20) ||\n\t\t\t\t(groupedListings.filter(':visible').length > 0)) {\n\t\t\t\tif (WFAD.mode != 'liveTraffic_paused') {\n\t\t\t\t\tWFAD.mode = 'liveTraffic_paused';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (WFAD.mode != 'liveTraffic') {\n\t\t\t\t\tWFAD.mode = 'liveTraffic';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t\/\/ console.log(win.scrollTop() + window.innerHeight, liveTrafficWrapper.outerHeight() + liveTrafficWrapper.offset().top);\n\t\t\tvar currentScrollBottom = win.scrollTop() + window.innerHeight;\n\t\t\tvar scrollThreshold = liveTrafficWrapper.outerHeight() + liveTrafficWrapper.offset().top;\n\t\t\tif (hasScrolled && !loadingListings && currentScrollBottom >= scrollThreshold) {\n\t\t\t\t\/\/ console.log('infinite scroll');\n\n\t\t\t\tloadingListings = true;\n\t\t\t\thasScrolled = false;\n\t\t\t\tWFAD.wfLiveTraffic.loadNextListings(function() {\n\t\t\t\t\tloadingListings = false;\n\t\t\t\t\tWFAD.reverseLookupIPs();\n\t\t\t\t\tWFAD.avatarLookup();\n\t\t\t\t});\n\t\t\t} else if (currentScrollBottom < scrollThreshold) {\n\t\t\t\thasScrolled = true;\n\t\t\t\t\/\/ console.log('no infinite scroll');\n\t\t\t}\n\t\t})\n\t\t.on('wf-live-traffic-overlay-bind', function(e, item) {\n\t\t\tko.applyBindings(item, overlayHeader.get(0));\n\t\t})\n\t\t.on('wf-live-traffic-overlay-unbind', function(e, item) {\n\t\t\tko.cleanNode(overlayHeader.get(0));\n\t\t});\n\n\t\t$([liveTrafficWrapper.find('.wf-filtered-traffic'), overlayWrapper]).tooltip({\n\t\t\ttooltipClass: \"wf-tooltip\",\n\t\t\ttrack: true\n\t\t});\n\t});\n})\n(jQuery);\n"},{"base":"plugins","rel":"wordfence\/js\/wfdashboard.1756145765.js","ext":"js","size":365,"mtime":1757312769,"type":"text","content":"if (!window['WFDash']) {\n\twindow['WFDash'] = {\n\t\tupdateNotificationCount: function(count) {\n\t\t\t(function($) {\n\t\t\t\t$('.wf-notification-count-value').html(count);\n\t\t\t\tif (count == 0) {\n\t\t\t\t\t$('.wf-notification-count-container').addClass('wf-hidden');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$('.wf-notification-count-container').removeClass('wf-hidden');\n\t\t\t\t}\n\t\t\t})(jQuery);\n\t\t}\n\t}\n}\n"},{"base":"plugins","rel":"wordfence\/js\/wfglobal.1756145765.js","ext":"js","size":32374,"mtime":1757312769,"type":"text","content":"(function($) {\n\tvar __, sprintf;\n\n\tif (!window['wordfenceExt']) {\n\t\twindow['wordfenceExt'] = {\n\t\t\tnonce: false,\n\t\t\tloadingCount: 0,\n\t\t\tisSmallScreen: false,\n\t\t\tinit: function(){\n\t\t\t\tthis.nonce = WordfenceAdminVars.firstNonce;\n\t\t\t\tthis.isSmallScreen = window.matchMedia(\"only screen and (max-width: 500px)\").matches;\n\t\t\t},\n\t\t\tshowLoading: function(){\n\t\t\t\tthis.loadingCount++;\n\t\t\t\tif (this.loadingCount == 1) {\n\t\t\t\t\tjQuery('<div id=\"wordfenceWorking\">' + __('Wordfence is working...') + '<\/div>').appendTo('body');\n\t\t\t\t}\n\t\t\t},\n\t\t\tremoveLoading: function(){\n\t\t\t\tthis.loadingCount--;\n\t\t\t\tif(this.loadingCount == 0){\n\t\t\t\t\tjQuery('#wordfenceWorking').remove();\n\t\t\t\t}\n\t\t\t},\n\t\t\tautoUpdateChoice: function(choice){\n\t\t\t\tthis.ajax('wordfence_autoUpdateChoice', {\n\t\t\t\t\t\tchoice: choice\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res){ jQuery('#wordfenceAutoUpdateChoice').fadeOut(); },\n\t\t\t\t\tfunction(){ jQuery('#wordfenceAutoUpdateChoice').fadeOut(); }\n\t\t\t\t);\n\t\t\t},\n\t\t\tmisconfiguredHowGetIPsChoice : function(choice) {\n\t\t\t\tthis.ajax('wordfence_misconfiguredHowGetIPsChoice', {\n\t\t\t\t\t\tchoice: choice\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res){ jQuery('#wordfenceMisconfiguredHowGetIPsNotice').fadeOut(); },\n\t\t\t\t\tfunction(){ jQuery('#wordfenceMisconfiguredHowGetIPsNotice').fadeOut(); }\n\t\t\t\t);\n\t\t\t},\n\t\t\tcentralUrlMismatchChoice : function(choice) {\n\t\t\t\tvar payload = {};\n\t\t\t\tswitch (choice) {\n\t\t\t\t\tcase 'local':\n\t\t\t\t\t\tpayload['local'] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'global':\n\t\t\t\t\t\tpayload['force'] = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'dismiss':\n\t\t\t\t\t\tpayload['dismiss'] = true;\n\t\t\t\t}\n\t\t\t\tthis.ajax('wordfence_wfcentral_disconnect', payload,\n\t\t\t\t\tfunction(res) { jQuery('#wordfenceMismatchedCentralUrlNotice').fadeOut(); },\n\t\t\t\t\tfunction() { jQuery('#wordfenceMismatchedCentralUrlNotice').fadeOut(); }\n\t\t\t\t);\n\t\t\t},\n\t\t\tswitchLiveTrafficSecurityOnlyChoice: function(choice) {\n\t\t\t\tthis.ajax('wordfence_switchLiveTrafficSecurityOnlyChoice', {\n\t\t\t\t\t\tchoice: choice\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res){ jQuery('#switchLiveTrafficSecurityOnlyChoice').fadeOut(); },\n\t\t\t\t\tfunction(){ jQuery('#switchLiveTrafficSecurityOnlyChoice').fadeOut(); }\n\t\t\t\t);\n\t\t\t},\n\t\t\tdismissAdminNotice: function(nid) {\n\t\t\t\tthis.ajax('wordfence_dismissAdminNotice', {\n\t\t\t\t\t\tid: nid\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res){ jQuery('.wf-admin-notice[data-notice-id=\"' + nid + '\"]').fadeOut(); },\n\t\t\t\t\tfunction(){ jQuery('.wf-admin-notice[data-notice-id=\"' + nid + '\"]').fadeOut(); }\n\t\t\t\t);\n\t\t\t},\n\t\t\thideNoticeForUser: function(id) {\n\t\t\t\tthis.ajax('wordfence_hideNoticeForUser',\n\t\t\t\t\t{\n\t\t\t\t\t\tid: id\n\t\t\t\t\t},\n\t\t\t\t\tfunction(res) {\n\t\t\t\t\t\t$(\"#\" + id).fadeOut();\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t},\n\t\t\tsetOption: function(key, value, successCallback, errorCallback) {\n\t\t\t\tvar changes = {};\n\t\t\t\tchanges[key] = value;\n\t\t\t\tif (typeof errorCallback !== 'function')\n\t\t\t\t\terrorCallback = function() {};\n\t\t\t\tthis.ajax('wordfence_saveOptions', {changes: JSON.stringify(changes)}, function(res) {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\ttypeof successCallback == 'function' && successCallback(res);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\terrorCallback(res);\n\t\t\t\t\t}\n\t\t\t\t}, errorCallback);\n\t\t\t},\n\t\t\tajax: function(action, data, cb, cbErr, noLoading){\n\t\t\t\tif(typeof(data) == 'string'){\n\t\t\t\t\tif(data.length > 0){\n\t\t\t\t\t\tdata += '&';\n\t\t\t\t\t}\n\t\t\t\t\tdata += 'action=' + action + '&nonce=' + this.nonce;\n\t\t\t\t} else if(typeof(data) == 'object'){\n\t\t\t\t\tdata['action'] = action;\n\t\t\t\t\tdata['nonce'] = this.nonce;\n\t\t\t\t}\n\t\t\t\tif(! cbErr){\n\t\t\t\t\tcbErr = function(){};\n\t\t\t\t}\n\t\t\t\tvar self = this;\n\t\t\t\tif(! noLoading){\n\t\t\t\t\tthis.showLoading();\n\t\t\t\t}\n\t\t\t\tjQuery.ajax({\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\turl: WordfenceAdminVars.ajaxURL,\n\t\t\t\t\tdataType: \"json\",\n\t\t\t\t\tdata: data,\n\t\t\t\t\tsuccess: function(json){\n\t\t\t\t\t\tif(! noLoading){\n\t\t\t\t\t\t\tself.removeLoading();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(json && json.nonce){\n\t\t\t\t\t\t\tself.nonce = json.nonce;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcb(json);\n\t\t\t\t\t},\n\t\t\t\t\terror: function(response){\n\t\t\t\t\t\tif(! noLoading){\n\t\t\t\t\t\t\tself.removeLoading();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcbErr(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\thashSHA256: function(s) {\n\t\t\t\treturn sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(s))\n\t\t\t},\n\t\t\tisEmailBlacklisted: function(email) {\n\t\t\t\tvar hash = this.hashSHA256(email);\n\t\t\t\tfor (var i = 0; i < WordfenceAdminVars.alertEmailBlacklist.length; i++) {\n\t\t\t\t\tif (hash === WordfenceAdminVars.alertEmailBlacklist[i]) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tparseEmails: function(raw) {\n\t\t\t\tvar emails = [];\n\t\t\t\tif (typeof raw !== 'string') {\n\t\t\t\t\treturn emails;\n\t\t\t\t}\n\n\t\t\t\tvar rawEmails = raw.replace(\/\\s\/g, '').split(',');\n\t\t\t\tfor (var i = 0; i < rawEmails.length; i++) {\n\t\t\t\t\tvar e = rawEmails[i].toLowerCase();\n\t\t\t\t\t\/\/From https:\/\/html.spec.whatwg.org\/multipage\/forms.html#valid-e-mail-address\n\t\t\t\t\tif (\/^[a-zA-Z0-9.!#$%&'*+\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\/.test(rawEmails[i]) && !this.isEmailBlacklisted(e)) {\n\t\t\t\t\t\temails.push(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn emails;\n\t\t\t},\n\t\t\tonboardingProcessEmails: function(emails, subscribe, touppAgreed, callback) {\n\t\t\t\tvar subscribe = !!subscribe;\n\t\t\t\tvar pendingCount = 1 + (touppAgreed ? 1 : 0) + (subscribe ? 1 : 0);\n\t\t\t\tvar failed = false;\n\t\t\t\tvar called = false;\n\t\t\t\tfunction complete(response) {\n\t\t\t\t\tif (called)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tif (--pendingCount === 0 || failed) {\n\t\t\t\t\t\tcalled = true;\n\t\t\t\t\t\tvar error = null;\n\t\t\t\t\t\tif (response && typeof response.error == 'string')\n\t\t\t\t\t\t\terror = response.error;\n\t\t\t\t\t\tcallback(!failed, error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfunction onError() {\n\t\t\t\t\tfailed = true;\n\t\t\t\t\tcomplete();\n\t\t\t\t}\n\t\t\t\twordfenceExt.setOption('alertEmails', emails.join(', '), complete, onError);\n\t\t\t\t\n\t\t\t\tif (touppAgreed) {\n\t\t\t\t\tthis.ajax('wordfence_recordTOUPP', {}, complete, onError);\n\t\t\t\t}\n\n\t\t\t\tif (subscribe) {\n\t\t\t\t\tthis.ajax('wordfence_mailingSignup', {emails: JSON.stringify(emails)}, complete, onError);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonboardingInstallLicense: function(license, successCallback, errorCallback) {\n\t\t\t\tvar self = this;\n\t\t\t\tfunction performRequest(statusChange, onSuccess, onError) {\n\t\t\t\t\tself.ajax(\n\t\t\t\t\t\t'wordfence_installLicense',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlicense: license,\n\t\t\t\t\t\t\tstatus_change: statusChange\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSuccess,\n\t\t\t\t\t\tonError\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tperformRequest(\n\t\t\t\t\tfalse,\n\t\t\t\t\tfunction (res) {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\tperformRequest(\n\t\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\ttypeof successCallback == 'function' && successCallback(res);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tfunction () {\n\t\t\t\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\ttypeof errorCallback == 'function' && errorCallback((typeof res.error === 'string') ? res.error : null);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\terrorCallback();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t}\n\n\t__ = window.wfi18n.__;\n\tsprintf = window.wfi18n.sprintf;\n\n\t$(function() {\n\t\twordfenceExt.init();\n\t});\n})(jQuery);\n\n\/\/Stanford Javascript Crypto Library: https:\/\/bitwiseshiftleft.github.io\/sjcl\/\n\"use strict\";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(f){this.toString=function(){return\"CORRUPT: \"+this.message};this.message=f},invalid:function(f){this.toString=function(){return\"INVALID: \"+this.message};this.message=f},bug:function(f){this.toString=function(){return\"BUG: \"+this.message};this.message=f},notReady:function(f){this.toString=function(){return\"NOT READY: \"+this.message};this.message=f}}};\n(function(f){f.cipher.aes=function(a){this.s[0][0][0]||this.T();var b,c,d,e,g=this.s[0][4],h=this.s[1];b=a.length;var k=1;if(4!==b&&6!==b&&8!==b)throw new f.exception.invalid(\"invalid aes key size\");this.b=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=g[c>>>24]<<24^g[c>>16&255]<<16^g[c>>8&255]<<8^g[c&255],0===a%b&&(c=c<<8^c>>>24^k<<24,k=k<<1^283*(k>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:h[0][g[c>>>24]]^h[1][g[c>>16&255]]^h[2][g[c>>8&\n255]]^h[3][g[c&255]]};f.cipher.aes.prototype={encrypt:function(a){return this.$(a,0)},decrypt:function(a){return this.$(a,1)},s:[[[],[],[],[],[]],[[],[],[],[],[]]],T:function(){var a=this.s[0],b=this.s[1],c=a[4],d=b[4],e,f,h,k=[],l=[],m,n,p,q;for(e=0;0x100>e;e++)l[(k[e]=e<<1^283*(e>>7))^e]=e;for(f=h=0;!c[f];f^=m||1,h=l[h]||1)for(p=h^h<<1^h<<2^h<<3^h<<4,p=p>>8^p&255^99,c[f]=p,d[p]=f,n=k[e=k[m=k[f]]],q=0x1010101*n^0x10001*e^0x101*m^0x1010100*f,n=0x101*k[p]^0x1010100*p,e=0;4>e;e++)a[e][f]=n=n<<24^n>>>8,b[e][p]=\n\t\tq=q<<24^q>>>8;for(e=0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)},$:function(a,b){if(4!==a.length)throw new f.exception.invalid(\"invalid aes block size\");var c=this.b[b],d=a[0]^c[0],e=a[b?3:1]^c[1],g=a[2]^c[2],h=a[b?1:3]^c[3],k,l,m,n=c.length\/4-2,p,q=4,t=[0,0,0,0];k=this.s[b];var r=k[0],u=k[1],v=k[2],w=k[3],x=k[4];for(p=0;p<n;p++)k=r[d>>>24]^u[e>>16&255]^v[g>>8&255]^w[h&255]^c[q],l=r[e>>>24]^u[g>>16&255]^v[h>>8&255]^w[d&255]^c[q+1],m=r[g>>>24]^u[h>>16&255]^v[d>>8&255]^w[e&255]^c[q+2],h=r[h>>>24]^\n\t\tu[d>>16&255]^v[e>>8&255]^w[g&255]^c[q+3],q+=4,d=k,e=l,g=m;for(p=0;4>p;p++)t[b?3&-p:p]=x[d>>>24]<<24^x[e>>16&255]<<16^x[g>>8&255]<<8^x[h&255]^c[q++],k=d,d=e,e=g,g=h,h=k;return t}};f.bitArray={bitSlice:function(a,b,c){a=f.bitArray.ga(a.slice(b\/32),32-(b&31)).slice(1);return void 0===c?a:f.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b\/32|0]<<32-d^a[b\/32+1|0]>>>d:a[b\/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);\n\t\tvar c=a[a.length-1],d=f.bitArray.getPartial(c);return 32===d?a.concat(b):f.bitArray.ga(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===b?0:32*(b-1)+f.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b\/32));var c=a.length;b=b&31;0<c&&b&&(a[c-1]=f.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a\/0x10000000000)||\n\t\t32},equal:function(a,b){if(f.bitArray.bitLength(a)!==f.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===c},ga:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=f.bitArray.getPartial(e);d.push(f.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},i:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]},byteswapM:function(a){var b,\n\t\tc;for(b=0;b<a.length;++b)c=a[b],a[b]=c>>>24|c>>>8&0xff00|(c&0xff00)<<8|c<<24;return a}};f.codec.utf8String={fromBits:function(a){var b=\"\",c=f.bitArray.bitLength(a),d,e;for(d=0;d<c\/8;d++)0===(d&3)&&(e=a[d\/4]),b+=String.fromCharCode(e>>>8>>>8>>>8),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(f.bitArray.partial(8*(c&3),d));return b}};f.codec.hex={fromBits:function(a){var b=\n\t\t\"\",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,f.bitArray.bitLength(a)\/4)},toBits:function(a){var b,c=[],d;a=a.replace(\/\\s|0x\/g,\"\");d=a.length;a=a+\"00000000\";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return f.bitArray.clamp(c,4*d)}};f.codec.base32={D:\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",da:\"0123456789ABCDEFGHIJKLMNOPQRSTUV\",BITS:32,BASE:5,REMAINING:27,fromBits:function(a,b,c){var d=f.codec.base32.BASE,e=f.codec.base32.REMAINING,g=\n\t\t\"\",h=0,k=f.codec.base32.D,l=0,m=f.bitArray.bitLength(a);c&&(k=f.codec.base32.da);for(c=0;g.length*d<m;)g+=k.charAt((l^a[c]>>>h)>>>e),h<d?(l=a[c]<<d-h,h+=e,c++):(l<<=d,h-=d);for(;g.length&7&&!b;)g+=\"=\";return g},toBits:function(a,b){a=a.replace(\/\\s|=\/g,\"\").toUpperCase();var c=f.codec.base32.BITS,d=f.codec.base32.BASE,e=f.codec.base32.REMAINING,g=[],h,k=0,l=f.codec.base32.D,m=0,n,p=\"base32\";b&&(l=f.codec.base32.da,p=\"base32hex\");for(h=0;h<a.length;h++){n=l.indexOf(a.charAt(h));if(0>n){if(!b)try{return f.codec.base32hex.toBits(a)}catch(q){}throw new f.exception.invalid(\"this isn't \"+\n\t\tp+\"!\");}k>e?(k-=e,g.push(m^n>>>k),m=n<<c-k):(k+=d,m^=n<<c-k)}k&56&&g.push(f.bitArray.partial(k&56,m,1));return g}};f.codec.base32hex={fromBits:function(a,b){return f.codec.base32.fromBits(a,b,1)},toBits:function(a){return f.codec.base32.toBits(a,1)}};f.codec.base64={D:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+\/\",fromBits:function(a,b,c){var d=\"\",e=0,g=f.codec.base64.D,h=0,k=f.bitArray.bitLength(a);c&&(g=g.substr(0,62)+\"-_\");for(c=0;6*d.length<k;)d+=g.charAt((h^a[c]>>>e)>>>26),\n\t\t6>e?(h=a[c]<<6-e,e+=26,c++):(h<<=6,e-=6);for(;d.length&3&&!b;)d+=\"=\";return d},toBits:function(a,b){a=a.replace(\/\\s|=\/g,\"\");var c=[],d,e=0,g=f.codec.base64.D,h=0,k;b&&(g=g.substr(0,62)+\"-_\");for(d=0;d<a.length;d++){k=g.indexOf(a.charAt(d));if(0>k)throw new f.exception.invalid(\"this isn't base64!\");26<e?(e-=26,c.push(h^k>>>e),h=k<<32-e):(e+=6,h^=k<<32-e)}e&56&&c.push(f.bitArray.partial(e&56,h,1));return c}};f.codec.base64url={fromBits:function(a){return f.codec.base64.fromBits(a,1,1)},toBits:function(a){return f.codec.base64.toBits(a,\n\t\t1)}};f.hash.sha256=function(a){this.b[0]||this.T();a?(this.H=a.H.slice(0),this.C=a.C.slice(0),this.l=a.l):this.reset()};f.hash.sha256.hash=function(a){return(new f.hash.sha256).update(a).finalize()};f.hash.sha256.prototype={blockSize:512,reset:function(){this.H=this.ea.slice(0);this.C=[];this.l=0;return this},update:function(a){\"string\"===typeof a&&(a=f.codec.utf8String.toBits(a));var b,c=this.C=f.bitArray.concat(this.C,a);b=this.l;a=this.l=b+f.bitArray.bitLength(a);if(0x1fffffffffffff<a)throw new f.exception.invalid(\"Cannot hash more than 2^53 - 1 bits\");\n\t\tif(\"undefined\"!==typeof Uint32Array){var d=new Uint32Array(c),e=0;for(b=512+b-(512+b&0x1ff);b<=a;b+=512)this.M(d.subarray(16*e,16*(e+1))),e+=1;c.splice(0,16*e)}else for(b=512+b-(512+b&0x1ff);b<=a;b+=512)this.M(c.splice(0,16));return this},finalize:function(){var a,b=this.C,c=this.H,b=f.bitArray.concat(b,[f.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.l\/0x100000000));for(b.push(this.l|0);b.length;)this.M(b.splice(0,16));this.reset();return c},ea:[],b:[],T:function(){function a(a){return 0x100000000*\n\t\t(a-Math.floor(a))|0}for(var b=0,c=2,d,e;64>b;c++){e=!0;for(d=2;d*d<=c;d++)if(0===c%d){e=!1;break}e&&(8>b&&(this.ea[b]=a(Math.pow(c,.5))),this.b[b]=a(Math.pow(c,1\/3)),b++)}},M:function(a){var b,c,d,e=this.H,f=this.b,h=e[0],k=e[1],l=e[2],m=e[3],n=e[4],p=e[5],q=e[6],t=e[7];for(b=0;64>b;b++)16>b?c=a[b]:(c=a[b+1&15],d=a[b+14&15],c=a[b&15]=(c>>>7^c>>>18^c>>>3^c<<25^c<<14)+(d>>>17^d>>>19^d>>>10^d<<15^d<<13)+a[b&15]+a[b+9&15]|0),c=c+t+(n>>>6^n>>>11^n>>>25^n<<26^n<<21^n<<7)+(q^n&(p^q))+f[b],t=q,q=p,p=n,n=\n\t\tm+c|0,m=l,l=k,k=h,h=c+(k&l^m&(k^l))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;e[0]=e[0]+h|0;e[1]=e[1]+k|0;e[2]=e[2]+l|0;e[3]=e[3]+m|0;e[4]=e[4]+n|0;e[5]=e[5]+p|0;e[6]=e[6]+q|0;e[7]=e[7]+t|0}};f.mode.ccm={name:\"ccm\",I:[],listenProgress:function(a){f.mode.ccm.I.push(a)},unListenProgress:function(a){a=f.mode.ccm.I.indexOf(a);-1<a&&f.mode.ccm.I.splice(a,1)},ma:function(a){var b=f.mode.ccm.I.slice(),c;for(c=0;c<b.length;c+=1)b[c](a)},encrypt:function(a,b,c,d,e){var g,h=b.slice(0),k=f.bitArray,l=k.bitLength(c)\/\n\t\t8,m=k.bitLength(h)\/8;e=e||64;d=d||[];if(7>l)throw new f.exception.invalid(\"ccm: iv must be at least 7 bytes\");for(g=2;4>g&&m>>>8*g;g++);g<15-l&&(g=15-l);c=k.clamp(c,8*(15-g));b=f.mode.ccm.Z(a,b,c,d,e,g);h=f.mode.ccm.F(a,h,c,b,e,g);return k.concat(h.data,h.tag)},decrypt:function(a,b,c,d,e){e=e||64;d=d||[];var g=f.bitArray,h=g.bitLength(c)\/8,k=g.bitLength(b),l=g.clamp(b,k-e),m=g.bitSlice(b,k-e),k=(k-e)\/8;if(7>h)throw new f.exception.invalid(\"ccm: iv must be at least 7 bytes\");for(b=2;4>b&&k>>>8*b;b++);\n\t\tb<15-h&&(b=15-h);c=g.clamp(c,8*(15-b));l=f.mode.ccm.F(a,l,c,m,e,b);a=f.mode.ccm.Z(a,l.data,c,d,e,b);if(!g.equal(l.tag,a))throw new f.exception.corrupt(\"ccm: tag doesn't match\");return l.data},ua:function(a,b,c,d,e,g){var h=[],k=f.bitArray,l=k.i;d=[k.partial(8,(b.length?64:0)|d-2<<2|g-1)];d=k.concat(d,c);d[3]|=e;d=a.encrypt(d);if(b.length)for(c=k.bitLength(b)\/8,65279>=c?h=[k.partial(16,c)]:0xffffffff>=c&&(h=k.concat([k.partial(16,65534)],[c])),h=k.concat(h,b),b=0;b<h.length;b+=4)d=a.encrypt(l(d,h.slice(b,\n\t\tb+4).concat([0,0,0])));return d},Z:function(a,b,c,d,e,g){var h=f.bitArray,k=h.i;e\/=8;if(e%2||4>e||16<e)throw new f.exception.invalid(\"ccm: invalid tag length\");if(0xffffffff<d.length||0xffffffff<b.length)throw new f.exception.bug(\"ccm: can't deal with 4GiB or more data\");c=f.mode.ccm.ua(a,d,c,e,h.bitLength(b)\/8,g);for(d=0;d<b.length;d+=4)c=a.encrypt(k(c,b.slice(d,d+4).concat([0,0,0])));return h.clamp(c,8*e)},F:function(a,b,c,d,e,g){var h,k=f.bitArray;h=k.i;var l=b.length,m=k.bitLength(b),n=l\/50,p=\n\t\tn;c=k.concat([k.partial(8,g-1)],c).concat([0,0,0]).slice(0,4);d=k.bitSlice(h(d,a.encrypt(c)),0,e);if(!l)return{tag:d,data:[]};for(h=0;h<l;h+=4)h>n&&(f.mode.ccm.ma(h\/l),n+=p),c[3]++,e=a.encrypt(c),b[h]^=e[0],b[h+1]^=e[1],b[h+2]^=e[2],b[h+3]^=e[3];return{tag:d,data:k.clamp(b,m)}}};f.mode.ocb2={name:\"ocb2\",encrypt:function(a,b,c,d,e,g){if(128!==f.bitArray.bitLength(c))throw new f.exception.invalid(\"ocb iv must be 128 bits\");var h,k=f.mode.ocb2.W,l=f.bitArray,m=l.i,n=[0,0,0,0];c=k(a.encrypt(c));var p,\n\t\tq=[];d=d||[];e=e||64;for(h=0;h+4<b.length;h+=4)p=b.slice(h,h+4),n=m(n,p),q=q.concat(m(c,a.encrypt(m(c,p)))),c=k(c);p=b.slice(h);b=l.bitLength(p);h=a.encrypt(m(c,[0,0,0,b]));p=l.clamp(m(p.concat([0,0,0]),h),b);n=m(n,m(p.concat([0,0,0]),h));n=a.encrypt(m(n,m(c,k(c))));d.length&&(n=m(n,g?d:f.mode.ocb2.pmac(a,d)));return q.concat(l.concat(p,l.clamp(n,e)))},decrypt:function(a,b,c,d,e,g){if(128!==f.bitArray.bitLength(c))throw new f.exception.invalid(\"ocb iv must be 128 bits\");e=e||64;var h=f.mode.ocb2.W,\n\t\tk=f.bitArray,l=k.i,m=[0,0,0,0],n=h(a.encrypt(c)),p,q,t=f.bitArray.bitLength(b)-e,r=[];d=d||[];for(c=0;c+4<t\/32;c+=4)p=l(n,a.decrypt(l(n,b.slice(c,c+4)))),m=l(m,p),r=r.concat(p),n=h(n);q=t-32*c;p=a.encrypt(l(n,[0,0,0,q]));p=l(p,k.clamp(b.slice(c),q).concat([0,0,0]));m=l(m,p);m=a.encrypt(l(m,l(n,h(n))));d.length&&(m=l(m,g?d:f.mode.ocb2.pmac(a,d)));if(!k.equal(k.clamp(m,e),k.bitSlice(b,t)))throw new f.exception.corrupt(\"ocb: tag doesn't match\");return r.concat(k.clamp(p,q))},pmac:function(a,b){var c,\n\t\td=f.mode.ocb2.W,e=f.bitArray,g=e.i,h=[0,0,0,0],k=a.encrypt([0,0,0,0]),k=g(k,d(d(k)));for(c=0;c+4<b.length;c+=4)k=d(k),h=g(h,a.encrypt(g(k,b.slice(c,c+4))));c=b.slice(c);128>e.bitLength(c)&&(k=g(k,d(k)),c=e.concat(c,[-2147483648,0,0,0]));h=g(h,c);return a.encrypt(g(d(g(k,d(k))),h))},W:function(a){return[a[0]<<1^a[1]>>>31,a[1]<<1^a[2]>>>31,a[2]<<1^a[3]>>>31,a[3]<<1^135*(a[0]>>>31)]}};f.mode.gcm={name:\"gcm\",encrypt:function(a,b,c,d,e){var g=b.slice(0);b=f.bitArray;d=d||[];a=f.mode.gcm.F(!0,a,g,d,c,e||\n\t\t128);return b.concat(a.data,a.tag)},decrypt:function(a,b,c,d,e){var g=b.slice(0),h=f.bitArray,k=h.bitLength(g);e=e||128;d=d||[];e<=k?(b=h.bitSlice(g,k-e),g=h.bitSlice(g,0,k-e)):(b=g,g=[]);a=f.mode.gcm.F(!1,a,g,d,c,e);if(!h.equal(a.tag,b))throw new f.exception.corrupt(\"gcm: tag doesn't match\");return a.data},ra:function(a,b){var c,d,e,g,h,k=f.bitArray.i;e=[0,0,0,0];g=b.slice(0);for(c=0;128>c;c++){(d=0!==(a[Math.floor(c\/32)]&1<<31-c%32))&&(e=k(e,g));h=0!==(g[3]&1);for(d=3;0<d;d--)g[d]=g[d]>>>1|(g[d-\n\t1]&1)<<31;g[0]>>>=1;h&&(g[0]^=-0x1f000000)}return e},j:function(a,b,c){var d,e=c.length;b=b.slice(0);for(d=0;d<e;d+=4)b[0]^=0xffffffff&c[d],b[1]^=0xffffffff&c[d+1],b[2]^=0xffffffff&c[d+2],b[3]^=0xffffffff&c[d+3],b=f.mode.gcm.ra(b,a);return b},F:function(a,b,c,d,e,g){var h,k,l,m,n,p,q,t,r=f.bitArray;p=c.length;q=r.bitLength(c);t=r.bitLength(d);k=r.bitLength(e);h=b.encrypt([0,0,0,0]);96===k?(e=e.slice(0),e=r.concat(e,[1])):(e=f.mode.gcm.j(h,[0,0,0,0],e),e=f.mode.gcm.j(h,e,[0,0,Math.floor(k\/0x100000000),\n\t\tk&0xffffffff]));k=f.mode.gcm.j(h,[0,0,0,0],d);n=e.slice(0);d=k.slice(0);a||(d=f.mode.gcm.j(h,k,c));for(m=0;m<p;m+=4)n[3]++,l=b.encrypt(n),c[m]^=l[0],c[m+1]^=l[1],c[m+2]^=l[2],c[m+3]^=l[3];c=r.clamp(c,q);a&&(d=f.mode.gcm.j(h,k,c));a=[Math.floor(t\/0x100000000),t&0xffffffff,Math.floor(q\/0x100000000),q&0xffffffff];d=f.mode.gcm.j(h,d,a);l=b.encrypt(e);d[0]^=l[0];d[1]^=l[1];d[2]^=l[2];d[3]^=l[3];return{tag:r.bitSlice(d,0,g),data:c}}};f.misc.hmac=function(a,b){this.ca=b=b||f.hash.sha256;var c=[[],[]],d,e=\n\tb.prototype.blockSize\/32;this.A=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.A[0].update(c[0]);this.A[1].update(c[1]);this.V=new b(this.A[0])};f.misc.hmac.prototype.encrypt=f.misc.hmac.prototype.mac=function(a){if(this.ha)throw new f.exception.invalid(\"encrypt on already updated hmac called!\");this.update(a);return this.digest(a)};f.misc.hmac.prototype.reset=function(){this.V=new this.ca(this.A[0]);this.ha=!1};f.misc.hmac.prototype.update=\n\tfunction(a){this.ha=!0;this.V.update(a)};f.misc.hmac.prototype.digest=function(){var a=this.V.finalize(),a=(new this.ca(this.A[1])).update(a).finalize();this.reset();return a};f.misc.pbkdf2=function(a,b,c,d,e){c=c||1E4;if(0>d||0>c)throw new f.exception.invalid(\"invalid params to pbkdf2\");\"string\"===typeof a&&(a=f.codec.utf8String.toBits(a));\"string\"===typeof b&&(b=f.codec.utf8String.toBits(b));e=e||f.misc.hmac;a=new e(a);var g,h,k,l,m=[],n=f.bitArray;for(l=1;32*m.length<(d||1);l++){e=g=a.encrypt(n.concat(b,\n\t[l]));for(h=1;h<c;h++)for(g=a.encrypt(g),k=0;k<g.length;k++)e[k]^=g[k];m=m.concat(e)}d&&(m=n.clamp(m,d));return m};f.prng=function(a){this.c=[new f.hash.sha256];this.m=[0];this.U=0;this.J={};this.R=0;this.Y={};this.fa=this.f=this.o=this.oa=0;this.b=[0,0,0,0,0,0,0,0];this.h=[0,0,0,0];this.O=void 0;this.P=a;this.G=!1;this.N={progress:{},seeded:{}};this.u=this.na=0;this.K=1;this.L=2;this.ja=0x10000;this.X=[0,48,64,96,128,192,0x100,384,512,768,1024];this.ka=3E4;this.ia=80};f.prng.prototype={randomWords:function(a,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t b){var c=[],d;d=this.isReady(b);var e;if(d===this.u)throw new f.exception.notReady(\"generator isn't seeded\");d&this.L&&this.ya(!(d&this.K));for(d=0;d<a;d+=4)0===(d+1)%this.ja&&this.ba(),e=this.S(),c.push(e[0],e[1],e[2],e[3]);this.ba();return c.slice(0,a)},setDefaultParanoia:function(a,b){if(0===a&&\"Setting paranoia=0 will ruin your security; use it only for testing\"!==b)throw new f.exception.invalid(\"Setting paranoia=0 will ruin your security; use it only for testing\");this.P=a},addEntropy:function(a,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t b,c){c=c||\"user\";var d,e,g=(new Date).valueOf(),h=this.J[c],k=this.isReady(),l=0;d=this.Y[c];void 0===d&&(d=this.Y[c]=this.oa++);void 0===h&&(h=this.J[c]=0);this.J[c]=(this.J[c]+1)%this.c.length;switch(typeof a){case \"number\":void 0===b&&(b=1);this.c[h].update([d,this.R++,1,b,g,1,a|0]);break;case \"object\":c=Object.prototype.toString.call(a);if(\"[object Uint32Array]\"===c){e=[];for(c=0;c<a.length;c++)e.push(a[c]);a=e}else for(\"[object Array]\"!==c&&(l=1),c=0;c<a.length&&!l;c++)\"number\"!==typeof a[c]&&\n\t(l=1);if(!l){if(void 0===b)for(c=b=0;c<a.length;c++)for(e=a[c];0<e;)b++,e=e>>>1;this.c[h].update([d,this.R++,2,b,g,a.length].concat(a))}break;case \"string\":void 0===b&&(b=a.length);this.c[h].update([d,this.R++,3,b,g,a.length]);this.c[h].update(a);break;default:l=1}if(l)throw new f.exception.bug(\"random: addEntropy only supports number, array of numbers or string\");this.m[h]+=b;this.f+=b;k===this.u&&(this.isReady()!==this.u&&this.aa(\"seeded\",Math.max(this.o,this.f)),this.aa(\"progress\",this.getProgress()))},\n\tisReady:function(a){a=this.X[void 0!==a?a:this.P];return this.o&&this.o>=a?this.m[0]>this.ia&&(new Date).valueOf()>this.fa?this.L|this.K:this.K:this.f>=a?this.L|this.u:this.u},getProgress:function(a){a=this.X[a?a:this.P];return this.o>=a?1:this.f>a?1:this.f\/a},startCollectors:function(){if(!this.G){this.a={loadTimeCollector:this.B(this.ta),mouseCollector:this.B(this.va),keyboardCollector:this.B(this.sa),accelerometerCollector:this.B(this.la),touchCollector:this.B(this.za)};if(window.addEventListener)window.addEventListener(\"load\",\n\t\tthis.a.loadTimeCollector,!1),window.addEventListener(\"mousemove\",this.a.mouseCollector,!1),window.addEventListener(\"keypress\",this.a.keyboardCollector,!1),window.addEventListener(\"devicemotion\",this.a.accelerometerCollector,!1),window.addEventListener(\"touchmove\",this.a.touchCollector,!1);else if(document.attachEvent)document.attachEvent(\"onload\",this.a.loadTimeCollector),document.attachEvent(\"onmousemove\",this.a.mouseCollector),document.attachEvent(\"keypress\",this.a.keyboardCollector);else throw new f.exception.bug(\"can't attach event\");\n\t\tthis.G=!0}},stopCollectors:function(){this.G&&(window.removeEventListener?(window.removeEventListener(\"load\",this.a.loadTimeCollector,!1),window.removeEventListener(\"mousemove\",this.a.mouseCollector,!1),window.removeEventListener(\"keypress\",this.a.keyboardCollector,!1),window.removeEventListener(\"devicemotion\",this.a.accelerometerCollector,!1),window.removeEventListener(\"touchmove\",this.a.touchCollector,!1)):document.detachEvent&&(document.detachEvent(\"onload\",this.a.loadTimeCollector),document.detachEvent(\"onmousemove\",\n\t\tthis.a.mouseCollector),document.detachEvent(\"keypress\",this.a.keyboardCollector)),this.G=!1)},addEventListener:function(a,b){this.N[a][this.na++]=b},removeEventListener:function(a,b){var c,d,e=this.N[a],f=[];for(d in e)e.hasOwnProperty(d)&&e[d]===b&&f.push(d);for(c=0;c<f.length;c++)d=f[c],delete e[d]},B:function(a){var b=this;return function(){a.apply(b,arguments)}},S:function(){for(var a=0;4>a&&(this.h[a]=this.h[a]+1|0,!this.h[a]);a++);return this.O.encrypt(this.h)},ba:function(){this.b=this.S().concat(this.S());\n\t\tthis.O=new f.cipher.aes(this.b)},xa:function(a){this.b=f.hash.sha256.hash(this.b.concat(a));this.O=new f.cipher.aes(this.b);for(a=0;4>a&&(this.h[a]=this.h[a]+1|0,!this.h[a]);a++);},ya:function(a){var b=[],c=0,d;this.fa=b[0]=(new Date).valueOf()+this.ka;for(d=0;16>d;d++)b.push(0x100000000*Math.random()|0);for(d=0;d<this.c.length&&(b=b.concat(this.c[d].finalize()),c+=this.m[d],this.m[d]=0,a||!(this.U&1<<d));d++);this.U>=1<<this.c.length&&(this.c.push(new f.hash.sha256),this.m.push(0));this.f-=c;c>this.o&&\n\t(this.o=c);this.U++;this.xa(b)},sa:function(){this.w(1)},va:function(a){var b,c;try{b=a.x||a.clientX||a.offsetX||0,c=a.y||a.clientY||a.offsetY||0}catch(d){c=b=0}0!=b&&0!=c&&this.addEntropy([b,c],2,\"mouse\");this.w(0)},za:function(a){a=a.touches[0]||a.changedTouches[0];this.addEntropy([a.pageX||a.clientX,a.pageY||a.clientY],1,\"touch\");this.w(0)},ta:function(){this.w(2)},w:function(a){\"undefined\"!==typeof window&&window.performance&&\"function\"===typeof window.performance.now?this.addEntropy(window.performance.now(),\n\t\ta,\"loadtime\"):this.addEntropy((new Date).valueOf(),a,\"loadtime\")},la:function(a){a=a.accelerationIncludingGravity.x||a.accelerationIncludingGravity.y||a.accelerationIncludingGravity.z;if(window.orientation){var b=window.orientation;\"number\"===typeof b&&this.addEntropy(b,1,\"accelerometer\")}a&&this.addEntropy(a,2,\"accelerometer\");this.w(0)},aa:function(a,b){var c,d=f.random.N[a],e=[];for(c in d)d.hasOwnProperty(c)&&e.push(d[c]);for(c=0;c<e.length;c++)e[c](b)}};f.random=new f.prng(6);(function(){try{var a,\n\tb,c,d;if(d=\"undefined\"!==typeof module&&module.exports){var e;try{e=require(\"crypto\")}catch(g){e=null}d=b=e}if(d&&b.randomBytes)a=b.randomBytes(128),a=new Uint32Array((new Uint8Array(a)).buffer),f.random.addEntropy(a,1024,\"crypto['randomBytes']\");else if(\"undefined\"!==typeof window&&\"undefined\"!==typeof Uint32Array){c=new Uint32Array(32);if(window.crypto&&window.crypto.getRandomValues)window.crypto.getRandomValues(c);else if(window.msCrypto&&window.msCrypto.getRandomValues)window.msCrypto.getRandomValues(c);\nelse return;f.random.addEntropy(c,1024,\"crypto['getRandomValues']\")}}catch(g){\"undefined\"!==typeof window&&window.console&&(console.log(\"There was an error collecting entropy from the browser:\"),console.log(g))}})();f.json={defaults:{v:1,iter:1E4,ks:128,ts:64,mode:\"ccm\",adata:\"\",cipher:\"aes\"},qa:function(a,b,c,d){c=c||{};d=d||{};var e=f.json,g=e.g({iv:f.random.randomWords(4,0)},e.defaults),h;e.g(g,c);c=g.adata;\"string\"===typeof g.salt&&(g.salt=f.codec.base64.toBits(g.salt));\"string\"===typeof g.iv&&\n\t(g.iv=f.codec.base64.toBits(g.iv));if(!f.mode[g.mode]||!f.cipher[g.cipher]||\"string\"===typeof a&&100>=g.iter||64!==g.ts&&96!==g.ts&&128!==g.ts||128!==g.ks&&192!==g.ks&&0x100!==g.ks||2>g.iv.length||4<g.iv.length)throw new f.exception.invalid(\"json encrypt: invalid parameters\");\"string\"===typeof a?(h=f.misc.cachedPbkdf2(a,g),a=h.key.slice(0,g.ks\/32),g.salt=h.salt):f.ecc&&a instanceof f.ecc.elGamal.publicKey&&(h=a.kem(),g.kemtag=h.tag,a=h.key.slice(0,g.ks\/32));\"string\"===typeof b&&(b=f.codec.utf8String.toBits(b));\n\t\t\"string\"===typeof c&&(g.adata=c=f.codec.utf8String.toBits(c));h=new f.cipher[g.cipher](a);e.g(d,g);d.key=a;g.ct=\"ccm\"===g.mode&&f.arrayBuffer&&f.arrayBuffer.ccm&&b instanceof ArrayBuffer?f.arrayBuffer.ccm.encrypt(h,b,g.iv,c,g.ts):f.mode[g.mode].encrypt(h,b,g.iv,c,g.ts);return g},encrypt:function(a,b,c,d){var e=f.json,g=e.qa.apply(e,arguments);return e.encode(g)},pa:function(a,b,c,d){c=c||{};d=d||{};var e=f.json;b=e.g(e.g(e.g({},e.defaults),b),c,!0);var g,h;g=b.adata;\"string\"===typeof b.salt&&(b.salt=\n\t\tf.codec.base64.toBits(b.salt));\"string\"===typeof b.iv&&(b.iv=f.codec.base64.toBits(b.iv));if(!f.mode[b.mode]||!f.cipher[b.cipher]||\"string\"===typeof a&&100>=b.iter||64!==b.ts&&96!==b.ts&&128!==b.ts||128!==b.ks&&192!==b.ks&&0x100!==b.ks||!b.iv||2>b.iv.length||4<b.iv.length)throw new f.exception.invalid(\"json decrypt: invalid parameters\");\"string\"===typeof a?(h=f.misc.cachedPbkdf2(a,b),a=h.key.slice(0,b.ks\/32),b.salt=h.salt):f.ecc&&a instanceof f.ecc.elGamal.secretKey&&(a=a.unkem(f.codec.base64.toBits(b.kemtag)).slice(0,\n\t\tb.ks\/32));\"string\"===typeof g&&(g=f.codec.utf8String.toBits(g));h=new f.cipher[b.cipher](a);g=\"ccm\"===b.mode&&f.arrayBuffer&&f.arrayBuffer.ccm&&b.ct instanceof ArrayBuffer?f.arrayBuffer.ccm.decrypt(h,b.ct,b.iv,b.tag,g,b.ts):f.mode[b.mode].decrypt(h,b.ct,b.iv,g,b.ts);e.g(d,b);d.key=a;return 1===c.raw?g:f.codec.utf8String.fromBits(g)},decrypt:function(a,b,c,d){var e=f.json;return e.pa(a,e.decode(b),c,d)},encode:function(a){var b,c=\"{\",d=\"\";for(b in a)if(a.hasOwnProperty(b)){if(!b.match(\/^[a-z0-9]+$\/i))throw new f.exception.invalid(\"json encode: invalid property name\");\n\t\tc+=d+'\"'+b+'\":';d=\",\";switch(typeof a[b]){case \"number\":case \"boolean\":c+=a[b];break;case \"string\":c+='\"'+escape(a[b])+'\"';break;case \"object\":c+='\"'+f.codec.base64.fromBits(a[b],0)+'\"';break;default:throw new f.exception.bug(\"json encode: unsupported type\");}}return c+\"}\"},decode:function(a){a=a.replace(\/\\s\/g,\"\");if(!a.match(\/^\\{.*\\}$\/))throw new f.exception.invalid(\"json decode: this isn't json!\");a=a.replace(\/^\\{|\\}$\/g,\"\").split(\/,\/);var b={},c,d;for(c=0;c<a.length;c++){if(!(d=a[c].match(\/^\\s*(?:([\"']?)([a-z][a-z0-9]*)\\1)\\s*:\\s*(?:(-?\\d+)|\"([a-z0-9+\\\/%*_.@=\\-]*)\"|(true|false))$\/i)))throw new f.exception.invalid(\"json decode: this isn't json!\");\n\t\tnull!=d[3]?b[d[2]]=parseInt(d[3],10):null!=d[4]?b[d[2]]=d[2].match(\/^(ct|adata|salt|iv)$\/)?f.codec.base64.toBits(d[4]):unescape(d[4]):null!=d[5]&&(b[d[2]]=\"true\"===d[5])}return b},g:function(a,b,c){void 0===a&&(a={});if(void 0===b)return a;for(var d in b)if(b.hasOwnProperty(d)){if(c&&void 0!==a[d]&&a[d]!==b[d])throw new f.exception.invalid(\"required parameter overridden\");a[d]=b[d]}return a},Ba:function(a,b){var c={},d;for(d in a)a.hasOwnProperty(d)&&a[d]!==b[d]&&(c[d]=a[d]);return c},Aa:function(a,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  b){var c={},d;for(d=0;d<b.length;d++)void 0!==a[b[d]]&&(c[b[d]]=a[b[d]]);return c}};f.encrypt=f.json.encrypt;f.decrypt=f.json.decrypt;f.misc.wa={};f.misc.cachedPbkdf2=function(a,b){var c=f.misc.wa,d;b=b||{};d=b.iter||1E3;c=c[a]=c[a]||{};d=c[d]=c[d]||{firstSalt:b.salt&&b.salt.length?b.salt.slice(0):f.random.randomWords(2,0)};c=void 0===b.salt?d.firstSalt:b.salt;d[c]=d[c]||f.misc.pbkdf2(a,c,b.iter);return{key:d[c].slice(0),salt:c.slice(0)}};\"undefined\"!==typeof module&&module.exports&&(module.exports=\n\tf);\"function\"===typeof define&&define([],function(){return f})})(sjcl);\n"},{"base":"plugins","rel":"wordfence\/js\/jquery.qrcode.min.1756145765.js","ext":"js","size":13995,"mtime":1757312769,"type":"text","content":"(function(r){r.fn.qrcode=function(h){var s;function u(a){this.mode=s;this.data=a}function o(a,c){this.typeNumber=a;this.errorCorrectLevel=c;this.modules=null;this.moduleCount=0;this.dataCache=null;this.dataList=[]}function q(a,c){if(void 0==a.length)throw Error(a.length+\"\/\"+c);for(var d=0;d<a.length&&0==a[d];)d++;this.num=Array(a.length-d+c);for(var b=0;b<a.length-d;b++)this.num[b]=a[b+d]}function p(a,c){this.totalCount=a;this.dataCount=c}function t(){this.buffer=[];this.length=0}u.prototype={getLength:function(){return this.data.length},\nwrite:function(a){for(var c=0;c<this.data.length;c++)a.put(this.data.charCodeAt(c),8)}};o.prototype={addData:function(a){this.dataList.push(new u(a));this.dataCache=null},isDark:function(a,c){if(0>a||this.moduleCount<=a||0>c||this.moduleCount<=c)throw Error(a+\",\"+c);return this.modules[a][c]},getModuleCount:function(){return this.moduleCount},make:function(){if(1>this.typeNumber){for(var a=1,a=1;40>a;a++){for(var c=p.getRSBlocks(a,this.errorCorrectLevel),d=new t,b=0,e=0;e<c.length;e++)b+=c[e].dataCount;\nfor(e=0;e<this.dataList.length;e++)c=this.dataList[e],d.put(c.mode,4),d.put(c.getLength(),j.getLengthInBits(c.mode,a)),c.write(d);if(d.getLengthInBits()<=8*b)break}this.typeNumber=a}this.makeImpl(!1,this.getBestMaskPattern())},makeImpl:function(a,c){this.moduleCount=4*this.typeNumber+17;this.modules=Array(this.moduleCount);for(var d=0;d<this.moduleCount;d++){this.modules[d]=Array(this.moduleCount);for(var b=0;b<this.moduleCount;b++)this.modules[d][b]=null}this.setupPositionProbePattern(0,0);this.setupPositionProbePattern(this.moduleCount-\n7,0);this.setupPositionProbePattern(0,this.moduleCount-7);this.setupPositionAdjustPattern();this.setupTimingPattern();this.setupTypeInfo(a,c);7<=this.typeNumber&&this.setupTypeNumber(a);null==this.dataCache&&(this.dataCache=o.createData(this.typeNumber,this.errorCorrectLevel,this.dataList));this.mapData(this.dataCache,c)},setupPositionProbePattern:function(a,c){for(var d=-1;7>=d;d++)if(!(-1>=a+d||this.moduleCount<=a+d))for(var b=-1;7>=b;b++)-1>=c+b||this.moduleCount<=c+b||(this.modules[a+d][c+b]=\n0<=d&&6>=d&&(0==b||6==b)||0<=b&&6>=b&&(0==d||6==d)||2<=d&&4>=d&&2<=b&&4>=b?!0:!1)},getBestMaskPattern:function(){for(var a=0,c=0,d=0;8>d;d++){this.makeImpl(!0,d);var b=j.getLostPoint(this);if(0==d||a>b)a=b,c=d}return c},createMovieClip:function(a,c,d){a=a.createEmptyMovieClip(c,d);this.make();for(c=0;c<this.modules.length;c++)for(var d=1*c,b=0;b<this.modules[c].length;b++){var e=1*b;this.modules[c][b]&&(a.beginFill(0,100),a.moveTo(e,d),a.lineTo(e+1,d),a.lineTo(e+1,d+1),a.lineTo(e,d+1),a.endFill())}return a},\nsetupTimingPattern:function(){for(var a=8;a<this.moduleCount-8;a++)null==this.modules[a][6]&&(this.modules[a][6]=0==a%2);for(a=8;a<this.moduleCount-8;a++)null==this.modules[6][a]&&(this.modules[6][a]=0==a%2)},setupPositionAdjustPattern:function(){for(var a=j.getPatternPosition(this.typeNumber),c=0;c<a.length;c++)for(var d=0;d<a.length;d++){var b=a[c],e=a[d];if(null==this.modules[b][e])for(var f=-2;2>=f;f++)for(var i=-2;2>=i;i++)this.modules[b+f][e+i]=-2==f||2==f||-2==i||2==i||0==f&&0==i?!0:!1}},setupTypeNumber:function(a){for(var c=\nj.getBCHTypeNumber(this.typeNumber),d=0;18>d;d++){var b=!a&&1==(c>>d&1);this.modules[Math.floor(d\/3)][d%3+this.moduleCount-8-3]=b}for(d=0;18>d;d++)b=!a&&1==(c>>d&1),this.modules[d%3+this.moduleCount-8-3][Math.floor(d\/3)]=b},setupTypeInfo:function(a,c){for(var d=j.getBCHTypeInfo(this.errorCorrectLevel<<3|c),b=0;15>b;b++){var e=!a&&1==(d>>b&1);6>b?this.modules[b][8]=e:8>b?this.modules[b+1][8]=e:this.modules[this.moduleCount-15+b][8]=e}for(b=0;15>b;b++)e=!a&&1==(d>>b&1),8>b?this.modules[8][this.moduleCount-\nb-1]=e:9>b?this.modules[8][15-b-1+1]=e:this.modules[8][15-b-1]=e;this.modules[this.moduleCount-8][8]=!a},mapData:function(a,c){for(var d=-1,b=this.moduleCount-1,e=7,f=0,i=this.moduleCount-1;0<i;i-=2)for(6==i&&i--;;){for(var g=0;2>g;g++)if(null==this.modules[b][i-g]){var n=!1;f<a.length&&(n=1==(a[f]>>>e&1));j.getMask(c,b,i-g)&&(n=!n);this.modules[b][i-g]=n;e--; -1==e&&(f++,e=7)}b+=d;if(0>b||this.moduleCount<=b){b-=d;d=-d;break}}}};o.PAD0=236;o.PAD1=17;o.createData=function(a,c,d){for(var c=p.getRSBlocks(a,\nc),b=new t,e=0;e<d.length;e++){var f=d[e];b.put(f.mode,4);b.put(f.getLength(),j.getLengthInBits(f.mode,a));f.write(b)}for(e=a=0;e<c.length;e++)a+=c[e].dataCount;if(b.getLengthInBits()>8*a)throw Error(\"code length overflow. (\"+b.getLengthInBits()+\">\"+8*a+\")\");for(b.getLengthInBits()+4<=8*a&&b.put(0,4);0!=b.getLengthInBits()%8;)b.putBit(!1);for(;!(b.getLengthInBits()>=8*a);){b.put(o.PAD0,8);if(b.getLengthInBits()>=8*a)break;b.put(o.PAD1,8)}return o.createBytes(b,c)};o.createBytes=function(a,c){for(var d=\n0,b=0,e=0,f=Array(c.length),i=Array(c.length),g=0;g<c.length;g++){var n=c[g].dataCount,h=c[g].totalCount-n,b=Math.max(b,n),e=Math.max(e,h);f[g]=Array(n);for(var k=0;k<f[g].length;k++)f[g][k]=255&a.buffer[k+d];d+=n;k=j.getErrorCorrectPolynomial(h);n=(new q(f[g],k.getLength()-1)).mod(k);i[g]=Array(k.getLength()-1);for(k=0;k<i[g].length;k++)h=k+n.getLength()-i[g].length,i[g][k]=0<=h?n.get(h):0}for(k=g=0;k<c.length;k++)g+=c[k].totalCount;d=Array(g);for(k=n=0;k<b;k++)for(g=0;g<c.length;g++)k<f[g].length&&\n(d[n++]=f[g][k]);for(k=0;k<e;k++)for(g=0;g<c.length;g++)k<i[g].length&&(d[n++]=i[g][k]);return d};s=4;for(var j={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,\n78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:1335,G18:7973,G15_MASK:21522,getBCHTypeInfo:function(a){for(var c=a<<10;0<=j.getBCHDigit(c)-j.getBCHDigit(j.G15);)c^=j.G15<<j.getBCHDigit(c)-j.getBCHDigit(j.G15);return(a<<10|c)^j.G15_MASK},getBCHTypeNumber:function(a){for(var c=a<<12;0<=j.getBCHDigit(c)-\nj.getBCHDigit(j.G18);)c^=j.G18<<j.getBCHDigit(c)-j.getBCHDigit(j.G18);return a<<12|c},getBCHDigit:function(a){for(var c=0;0!=a;)c++,a>>>=1;return c},getPatternPosition:function(a){return j.PATTERN_POSITION_TABLE[a-1]},getMask:function(a,c,d){switch(a){case 0:return 0==(c+d)%2;case 1:return 0==c%2;case 2:return 0==d%3;case 3:return 0==(c+d)%3;case 4:return 0==(Math.floor(c\/2)+Math.floor(d\/3))%2;case 5:return 0==c*d%2+c*d%3;case 6:return 0==(c*d%2+c*d%3)%2;case 7:return 0==(c*d%3+(c+d)%2)%2;default:throw Error(\"bad maskPattern:\"+\na);}},getErrorCorrectPolynomial:function(a){for(var c=new q([1],0),d=0;d<a;d++)c=c.multiply(new q([1,l.gexp(d)],0));return c},getLengthInBits:function(a,c){if(1<=c&&10>c)switch(a){case 1:return 10;case 2:return 9;case s:return 8;case 8:return 8;default:throw Error(\"mode:\"+a);}else if(27>c)switch(a){case 1:return 12;case 2:return 11;case s:return 16;case 8:return 10;default:throw Error(\"mode:\"+a);}else if(41>c)switch(a){case 1:return 14;case 2:return 13;case s:return 16;case 8:return 12;default:throw Error(\"mode:\"+\na);}else throw Error(\"type:\"+c);},getLostPoint:function(a){for(var c=a.getModuleCount(),d=0,b=0;b<c;b++)for(var e=0;e<c;e++){for(var f=0,i=a.isDark(b,e),g=-1;1>=g;g++)if(!(0>b+g||c<=b+g))for(var h=-1;1>=h;h++)0>e+h||c<=e+h||0==g&&0==h||i==a.isDark(b+g,e+h)&&f++;5<f&&(d+=3+f-5)}for(b=0;b<c-1;b++)for(e=0;e<c-1;e++)if(f=0,a.isDark(b,e)&&f++,a.isDark(b+1,e)&&f++,a.isDark(b,e+1)&&f++,a.isDark(b+1,e+1)&&f++,0==f||4==f)d+=3;for(b=0;b<c;b++)for(e=0;e<c-6;e++)a.isDark(b,e)&&!a.isDark(b,e+1)&&a.isDark(b,e+\n2)&&a.isDark(b,e+3)&&a.isDark(b,e+4)&&!a.isDark(b,e+5)&&a.isDark(b,e+6)&&(d+=40);for(e=0;e<c;e++)for(b=0;b<c-6;b++)a.isDark(b,e)&&!a.isDark(b+1,e)&&a.isDark(b+2,e)&&a.isDark(b+3,e)&&a.isDark(b+4,e)&&!a.isDark(b+5,e)&&a.isDark(b+6,e)&&(d+=40);for(e=f=0;e<c;e++)for(b=0;b<c;b++)a.isDark(b,e)&&f++;a=Math.abs(100*f\/c\/c-50)\/5;return d+10*a}},l={glog:function(a){if(1>a)throw Error(\"glog(\"+a+\")\");return l.LOG_TABLE[a]},gexp:function(a){for(;0>a;)a+=255;for(;256<=a;)a-=255;return l.EXP_TABLE[a]},EXP_TABLE:Array(256),\nLOG_TABLE:Array(256)},m=0;8>m;m++)l.EXP_TABLE[m]=1<<m;for(m=8;256>m;m++)l.EXP_TABLE[m]=l.EXP_TABLE[m-4]^l.EXP_TABLE[m-5]^l.EXP_TABLE[m-6]^l.EXP_TABLE[m-8];for(m=0;255>m;m++)l.LOG_TABLE[l.EXP_TABLE[m]]=m;q.prototype={get:function(a){return this.num[a]},getLength:function(){return this.num.length},multiply:function(a){for(var c=Array(this.getLength()+a.getLength()-1),d=0;d<this.getLength();d++)for(var b=0;b<a.getLength();b++)c[d+b]^=l.gexp(l.glog(this.get(d))+l.glog(a.get(b)));return new q(c,0)},mod:function(a){if(0>\nthis.getLength()-a.getLength())return this;for(var c=l.glog(this.get(0))-l.glog(a.get(0)),d=Array(this.getLength()),b=0;b<this.getLength();b++)d[b]=this.get(b);for(b=0;b<a.getLength();b++)d[b]^=l.gexp(l.glog(a.get(b))+c);return(new q(d,0)).mod(a)}};p.RS_BLOCK_TABLE=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],\n[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,\n116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,\n43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,\n3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,\n55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,\n45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];p.getRSBlocks=function(a,c){var d=p.getRsBlockTable(a,c);if(void 0==d)throw Error(\"bad rs block @ typeNumber:\"+a+\"\/errorCorrectLevel:\"+c);for(var b=d.length\/3,e=[],f=0;f<b;f++)for(var h=d[3*f+0],g=d[3*f+1],j=d[3*f+2],l=0;l<h;l++)e.push(new p(g,j));return e};p.getRsBlockTable=function(a,c){switch(c){case 1:return p.RS_BLOCK_TABLE[4*(a-1)+0];case 0:return p.RS_BLOCK_TABLE[4*(a-1)+1];case 3:return p.RS_BLOCK_TABLE[4*\n(a-1)+2];case 2:return p.RS_BLOCK_TABLE[4*(a-1)+3]}};t.prototype={get:function(a){return 1==(this.buffer[Math.floor(a\/8)]>>>7-a%8&1)},put:function(a,c){for(var d=0;d<c;d++)this.putBit(1==(a>>>c-d-1&1))},getLengthInBits:function(){return this.length},putBit:function(a){var c=Math.floor(this.length\/8);this.buffer.length<=c&&this.buffer.push(0);a&&(this.buffer[c]|=128>>>this.length%8);this.length++}};\"string\"===typeof h&&(h={text:h});h=r.extend({},{render:\"canvas\",width:256,height:256,typeNumber:-1,\ncorrectLevel:2,background:\"#ffffff\",foreground:\"#000000\"},h);return this.each(function(){var a;if(\"canvas\"==h.render){a=new o(h.typeNumber,h.correctLevel);a.addData(h.text);a.make();var c=document.createElement(\"canvas\");c.width=h.width;c.height=h.height;for(var d=c.getContext(\"2d\"),b=h.width\/a.getModuleCount(),e=h.height\/a.getModuleCount(),f=0;f<a.getModuleCount();f++)for(var i=0;i<a.getModuleCount();i++){d.fillStyle=a.isDark(f,i)?h.foreground:h.background;var g=Math.ceil((i+1)*b)-Math.floor(i*b),\nj=Math.ceil((f+1)*b)-Math.floor(f*b);d.fillRect(Math.round(i*b),Math.round(f*e),g,j)}}else{a=new o(h.typeNumber,h.correctLevel);a.addData(h.text);a.make();c=r(\"<table><\/table>\").css(\"width\",h.width+\"px\").css(\"height\",h.height+\"px\").css(\"border\",\"0px\").css(\"border-collapse\",\"collapse\").css(\"background-color\",h.background);d=h.width\/a.getModuleCount();b=h.height\/a.getModuleCount();for(e=0;e<a.getModuleCount();e++){f=r(\"<tr><\/tr>\").css(\"height\",b+\"px\").appendTo(c);for(i=0;i<a.getModuleCount();i++)r(\"<td><\/td>\").css(\"width\",\nd+\"px\").css(\"background-color\",a.isDark(e,i)?h.foreground:h.background).appendTo(f)}}a=c;jQuery(a).appendTo(this)})}})(jQuery);\n"},{"base":"plugins","rel":"wordfence\/js\/jquery.colorbox-min.1756145765.js","ext":"js","size":11898,"mtime":1757312769,"type":"text","content":"\/*!\r\n Colorbox 1.6.4 (prefixed wf)\r\n license: MIT\r\n http:\/\/www.jacklmoore.com\/colorbox\r\n *\/\r\n!function(t,e,i){function n(i,n,o){var h=e.createElement(i);return n&&(h.id=Z+n),o&&(h.style.cssText=o),t(h)}function o(){return i.innerHeight?i.innerHeight:t(i).height()}function h(e,i){i!==Object(i)&&(i={}),this.cache={},this.el=e,this.value=function(e){var n;return void 0===this.cache[e]&&(void 0!==(n=t(this.el).attr(\"data-cbox-\"+e))?this.cache[e]=n:void 0!==i[e]?this.cache[e]=i[e]:void 0!==X[e]&&(this.cache[e]=X[e])),this.cache[e]},this.get=function(e){var i=this.value(e);return t.isFunction(i)?i.call(this.el,this):i}}function r(t){var e=W.length,i=(A+t)%e;return i<0?e+i:i}function a(t,e){return Math.round((\/%\/.test(t)?(\"x\"===e?E.width():o())\/100:1)*parseInt(t,10))}function s(t,e){return t.get(\"photo\")||t.get(\"photoRegex\").test(e)}function l(t,e){return t.get(\"retinaUrl\")&&i.devicePixelRatio>1?e.replace(t.get(\"photoRegex\"),t.get(\"retinaSuffix\")):e}function d(t){\"contains\"in x[0]&&!x[0].contains(t.target)&&t.target!==v[0]&&(t.stopPropagation(),x.focus())}function c(t){c.str!==t&&(x.add(v).removeClass(c.str).addClass(t),c.str=t)}function g(e){A=0,e&&!1!==e&&\"nofollow\"!==e?(W=t(\".\"+tt).filter(function(){return new h(this,t.data(this,Y)).get(\"rel\")===e}),-1===(A=W.index(_.el))&&(W=W.add(_.el),A=W.length-1)):W=t(_.el)}function u(i){t(e).trigger(i),at.triggerHandler(i)}function f(i){var o;if(!G){if(o=t(i).data(Y),_=new h(i,o),g(_.get(\"rel\")),!U){U=$=!0,c(_.get(\"className\")),x.css({visibility:\"hidden\",display:\"block\",opacity:\"\"}),I=n(st,\"LoadedContent\",\"width:0; height:0; overflow:hidden; visibility:hidden\"),b.css({width:\"\",height:\"\"}).append(I),j=T.height()+k.height()+b.outerHeight(!0)-b.height(),D=C.width()+H.width()+b.outerWidth(!0)-b.width(),N=I.outerHeight(!0),z=I.outerWidth(!0);var r=a(_.get(\"initialWidth\"),\"x\"),s=a(_.get(\"initialHeight\"),\"y\"),l=_.get(\"maxWidth\"),f=_.get(\"maxHeight\");_.w=Math.max((!1!==l?Math.min(r,a(l,\"x\")):r)-z-D,0),_.h=Math.max((!1!==f?Math.min(s,a(f,\"y\")):s)-N-j,0),I.css({width:\"\",height:_.h}),J.position(),u(et),_.get(\"onOpen\"),O.add(F).hide(),x.focus(),_.get(\"trapFocus\")&&e.addEventListener&&(e.addEventListener(\"focus\",d,!0),at.one(ht,function(){e.removeEventListener(\"focus\",d,!0)})),_.get(\"returnFocus\")&&at.one(ht,function(){t(_.el).focus()})}var p=parseFloat(_.get(\"opacity\"));v.css({opacity:p===p?p:\"\",cursor:_.get(\"overlayClose\")?\"pointer\":\"\",visibility:\"visible\"}).show(),_.get(\"closeButton\")?B.html(_.get(\"close\")).appendTo(b):B.appendTo(\"<div\/>\"),w()}}function p(){x||(V=!1,E=t(i),x=n(st).attr({id:Y,class:!1===t.support.opacity?Z+\"IE\":\"\",role:\"dialog\",tabindex:\"-1\"}).hide(),v=n(st,\"Overlay\").hide(),L=t([n(st,\"LoadingOverlay\")[0],n(st,\"LoadingGraphic\")[0]]),y=n(st,\"Wrapper\"),b=n(st,\"Content\").append(F=n(st,\"Title\"),R=n(st,\"Current\"),P=t('<button type=\"button\"\/>').attr({id:Z+\"Previous\"}),K=t('<button type=\"button\"\/>').attr({id:Z+\"Next\"}),S=t('<button type=\"button\"\/>').attr({id:Z+\"Slideshow\"}),L),B=t('<button type=\"button\"\/>').attr({id:Z+\"Close\"}),y.append(n(st).append(n(st,\"TopLeft\"),T=n(st,\"TopCenter\"),n(st,\"TopRight\")),n(st,!1,\"clear:left\").append(C=n(st,\"MiddleLeft\"),b,H=n(st,\"MiddleRight\")),n(st,!1,\"clear:left\").append(n(st,\"BottomLeft\"),k=n(st,\"BottomCenter\"),n(st,\"BottomRight\"))).find(\"div div\").css({float:\"left\"}),M=n(st,!1,\"position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;\"),O=K.add(P).add(R).add(S)),e.body&&!x.parent().length&&t(e.body).append(v,x.append(y,M))}function m(){function i(t){t.which>1||t.shiftKey||t.altKey||t.metaKey||t.ctrlKey||(t.preventDefault(),f(this))}return!!x&&(V||(V=!0,K.click(function(){J.next()}),P.click(function(){J.prev()}),B.click(function(){J.close()}),v.click(function(){_.get(\"overlayClose\")&&J.close()}),t(e).bind(\"keydown.\"+Z,function(t){var e=t.keyCode;U&&_.get(\"escKey\")&&27===e&&(t.preventDefault(),J.close()),U&&_.get(\"arrowKey\")&&W[1]&&!t.altKey&&(37===e?(t.preventDefault(),P.click()):39===e&&(t.preventDefault(),K.click()))}),t.isFunction(t.fn.on)?t(e).on(\"click.\"+Z,\".\"+tt,i):t(\".\"+tt).live(\"click.\"+Z,i)),!0)}function w(){var e,o,h,r=J.prep,d=++lt;if($=!0,q=!1,u(rt),u(it),_.get(\"onLoad\"),_.h=_.get(\"height\")?a(_.get(\"height\"),\"y\")-N-j:_.get(\"innerHeight\")&&a(_.get(\"innerHeight\"),\"y\"),_.w=_.get(\"width\")?a(_.get(\"width\"),\"x\")-z-D:_.get(\"innerWidth\")&&a(_.get(\"innerWidth\"),\"x\"),_.mw=_.w,_.mh=_.h,_.get(\"maxWidth\")&&(_.mw=a(_.get(\"maxWidth\"),\"x\")-z-D,_.mw=_.w&&_.w<_.mw?_.w:_.mw),_.get(\"maxHeight\")&&(_.mh=a(_.get(\"maxHeight\"),\"y\")-N-j,_.mh=_.h&&_.h<_.mh?_.h:_.mh),e=_.get(\"href\"),Q=setTimeout(function(){L.show()},100),_.get(\"inline\")){var c=t(e).eq(0);h=t(\"<div>\").hide().insertBefore(c),at.one(rt,function(){h.replaceWith(c)}),r(c)}else _.get(\"iframe\")?r(\" \"):_.get(\"html\")?r(_.get(\"html\")):s(_,e)?(e=l(_,e),q=_.get(\"createImg\"),t(q).addClass(Z+\"Photo\").bind(\"error.\"+Z,function(){r(n(st,\"Error\").html(_.get(\"imgError\")))}).one(\"load\",function(){d===lt&&setTimeout(function(){var e;_.get(\"retinaImage\")&&i.devicePixelRatio>1&&(q.height=q.height\/i.devicePixelRatio,q.width=q.width\/i.devicePixelRatio),_.get(\"scalePhotos\")&&(o=function(){q.height-=q.height*e,q.width-=q.width*e},_.mw&&q.width>_.mw&&(e=(q.width-_.mw)\/q.width,o()),_.mh&&q.height>_.mh&&(e=(q.height-_.mh)\/q.height,o())),_.h&&(q.style.marginTop=Math.max(_.mh-q.height,0)\/2+\"px\"),W[1]&&(_.get(\"loop\")||W[A+1])&&(q.style.cursor=\"pointer\",t(q).bind(\"click.\"+Z,function(){J.next()})),q.style.width=q.width+\"px\",q.style.height=q.height+\"px\",r(q)},1)}),q.src=e):e&&M.load(e,_.get(\"data\"),function(e,i){d===lt&&r(\"error\"===i?n(st,\"Error\").html(_.get(\"xhrError\")):t(this).contents())})}var v,x,y,b,T,C,H,k,W,E,I,M,L,F,R,S,K,P,B,O,_,j,D,N,z,A,q,U,$,G,Q,J,V,X={html:!1,photo:!1,iframe:!1,inline:!1,transition:\"elastic\",speed:300,fadeOut:300,width:!1,initialWidth:\"600\",innerWidth:!1,maxWidth:!1,height:!1,initialHeight:\"450\",innerHeight:!1,maxHeight:!1,scalePhotos:!0,scrolling:!0,opacity:.9,preloading:!0,className:!1,overlayClose:!0,escKey:!0,arrowKey:!0,top:!1,bottom:!1,left:!1,right:!1,fixed:!1,data:void 0,closeButton:!0,fastIframe:!0,open:!1,reposition:!0,loop:!0,slideshow:!1,slideshowAuto:!0,slideshowSpeed:2500,slideshowStart:\"start slideshow\",slideshowStop:\"stop slideshow\",photoRegex:\/\\.(gif|png|jp(e|g|eg)|bmp|ico|webp|jxr|svg)((#|\\?).*)?$\/i,retinaImage:!1,retinaUrl:!1,retinaSuffix:\"@2x.$1\",current:\"image {current} of {total}\",previous:\"previous\",next:\"next\",close:\"close\",xhrError:\"This content failed to load.\",imgError:\"This image failed to load.\",returnFocus:!0,trapFocus:!0,onOpen:!1,onLoad:!1,onComplete:!1,onCleanup:!1,onClosed:!1,rel:function(){return this.rel},href:function(){return t(this).attr(\"href\")},title:function(){return this.title},createImg:function(){var e=new Image,i=t(this).data(\"cbox-img-attrs\");return\"object\"==typeof i&&t.each(i,function(t,i){e[t]=i}),e},createIframe:function(){var i=e.createElement(\"iframe\"),n=t(this).data(\"cbox-iframe-attrs\");return\"object\"==typeof n&&t.each(n,function(t,e){i[t]=e}),\"frameBorder\"in i&&(i.frameBorder=0),\"allowTransparency\"in i&&(i.allowTransparency=\"true\"),i.name=(new Date).getTime(),i.allowFullscreen=!0,i}},Y=\"wfcolorbox\",Z=\"wfcbox\",tt=Z+\"Element\",et=Z+\"_open\",it=Z+\"_load\",nt=Z+\"_complete\",ot=Z+\"_cleanup\",ht=Z+\"_closed\",rt=Z+\"_purge\",at=t(\"<a\/>\"),st=\"div\",lt=0,dt={},ct=function(){function t(){clearTimeout(r)}function e(){(_.get(\"loop\")||W[A+1])&&(t(),r=setTimeout(J.next,_.get(\"slideshowSpeed\")))}function i(){S.html(_.get(\"slideshowStop\")).unbind(s).one(s,n),at.bind(nt,e).bind(it,t),x.removeClass(a+\"off\").addClass(a+\"on\")}function n(){t(),at.unbind(nt,e).unbind(it,t),S.html(_.get(\"slideshowStart\")).unbind(s).one(s,function(){J.next(),i()}),x.removeClass(a+\"on\").addClass(a+\"off\")}function o(){h=!1,S.hide(),t(),at.unbind(nt,e).unbind(it,t),x.removeClass(a+\"off \"+a+\"on\")}var h,r,a=Z+\"Slideshow_\",s=\"click.\"+Z;return function(){h?_.get(\"slideshow\")||(at.unbind(ot,o),o()):_.get(\"slideshow\")&&W[1]&&(h=!0,at.one(ot,o),_.get(\"slideshowAuto\")?i():n(),S.show())}}();t[Y]||(t(p),(J=t.fn[Y]=t[Y]=function(e,i){var n=this;return e=e||{},t.isFunction(n)&&(n=t(\"<a\/>\"),e.open=!0),n[0]?(p(),m()&&(i&&(e.onComplete=i),n.each(function(){var i=t.data(this,Y)||{};t.data(this,Y,t.extend(i,e))}).addClass(tt),new h(n[0],e).get(\"open\")&&f(n[0])),n):n}).position=function(e,i){function n(){T[0].style.width=k[0].style.width=b[0].style.width=parseInt(x[0].style.width,10)-D+\"px\",b[0].style.height=C[0].style.height=H[0].style.height=parseInt(x[0].style.height,10)-j+\"px\"}var h,r,s,l=0,d=0,c=x.offset();if(E.unbind(\"resize.\"+Z),x.css({top:-9e4,left:-9e4}),r=E.scrollTop(),s=E.scrollLeft(),_.get(\"fixed\")?(c.top-=r,c.left-=s,x.css({position:\"fixed\"})):(l=r,d=s,x.css({position:\"absolute\"})),!1!==_.get(\"right\")?d+=Math.max(E.width()-_.w-z-D-a(_.get(\"right\"),\"x\"),0):!1!==_.get(\"left\")?d+=a(_.get(\"left\"),\"x\"):d+=Math.round(Math.max(E.width()-_.w-z-D,0)\/2),!1!==_.get(\"bottom\")?l+=Math.max(o()-_.h-N-j-a(_.get(\"bottom\"),\"y\"),0):!1!==_.get(\"top\")?l+=a(_.get(\"top\"),\"y\"):l+=Math.round(Math.max(o()-_.h-N-j,0)\/2),x.css({top:c.top,left:c.left,visibility:\"visible\"}),y[0].style.width=y[0].style.height=\"9999px\",h={width:_.w+z+D,height:_.h+N+j,top:l,left:d},e){var g=0;t.each(h,function(t){h[t]===dt[t]||(g=e)}),e=g}dt=h,e||x.css(h),x.dequeue().animate(h,{duration:e||0,complete:function(){n(),$=!1,y[0].style.width=_.w+z+D+\"px\",y[0].style.height=_.h+N+j+\"px\",_.get(\"reposition\")&&setTimeout(function(){E.bind(\"resize.\"+Z,J.position)},1),t.isFunction(i)&&i()},step:n})},J.resize=function(t){var e;U&&((t=t||{}).width&&(_.w=a(t.width,\"x\")-z-D),t.innerWidth&&(_.w=a(t.innerWidth,\"x\")),I.css({width:_.w}),t.height&&(_.h=a(t.height,\"y\")-N-j),t.innerHeight&&(_.h=a(t.innerHeight,\"y\")),t.innerHeight||t.height||(e=I.scrollTop(),I.css({height:\"auto\"}),_.h=I.height()),I.css({height:_.h}),e&&I.scrollTop(e),J.position(\"none\"===_.get(\"transition\")?0:_.get(\"speed\")))},J.prep=function(i){if(U){var o,a=\"none\"===_.get(\"transition\")?0:_.get(\"speed\");I.remove(),(I=n(st,\"LoadedContent\").append(i)).hide().appendTo(M.show()).css({width:(_.w=_.w||I.width(),_.w=_.mw&&_.mw<_.w?_.mw:_.w,_.w),overflow:_.get(\"scrolling\")?\"auto\":\"hidden\"}).css({height:(_.h=_.h||I.height(),_.h=_.mh&&_.mh<_.h?_.mh:_.h,_.h)}).prependTo(b),M.hide(),t(q).css({float:\"none\"}),c(_.get(\"className\")),o=function(){function i(){!1===t.support.opacity&&x[0].style.removeAttribute(\"filter\")}var n,o,d=W.length;U&&(o=function(){clearTimeout(Q),L.hide(),u(nt),_.get(\"onComplete\")},F.html(_.get(\"title\")).show(),I.show(),d>1?(\"string\"==typeof _.get(\"current\")&&R.html(_.get(\"current\").replace(\"{current}\",A+1).replace(\"{total}\",d)).show(),K[_.get(\"loop\")||A<d-1?\"show\":\"hide\"]().html(_.get(\"next\")),P[_.get(\"loop\")||A?\"show\":\"hide\"]().html(_.get(\"previous\")),ct(),_.get(\"preloading\")&&t.each([r(-1),r(1)],function(){var i=W[this],n=new h(i,t.data(i,Y)),o=n.get(\"href\");o&&s(n,o)&&(o=l(n,o),e.createElement(\"img\").src=o)})):O.hide(),_.get(\"iframe\")?(n=_.get(\"createIframe\"),_.get(\"scrolling\")||(n.scrolling=\"no\"),t(n).attr({src:_.get(\"href\"),class:Z+\"Iframe\"}).one(\"load\",o).appendTo(I),at.one(rt,function(){n.src=\"\/\/about:blank\"}),_.get(\"fastIframe\")&&t(n).trigger(\"load\")):o(),\"fade\"===_.get(\"transition\")?x.fadeTo(a,1,i):i())},\"fade\"===_.get(\"transition\")?x.fadeTo(a,0,function(){J.position(0,o)}):J.position(a,o)}},J.next=function(){!$&&W[1]&&(_.get(\"loop\")||W[A+1])&&(A=r(1),f(W[A]))},J.prev=function(){!$&&W[1]&&(_.get(\"loop\")||A)&&(A=r(-1),f(W[A]))},J.close=function(){U&&!G&&(G=!0,U=!1,u(ot),_.get(\"onCleanup\"),E.unbind(\".\"+Z),v.fadeTo(_.get(\"fadeOut\")||0,0),x.stop().fadeTo(_.get(\"fadeOut\")||0,0,function(){x.hide(),v.hide(),u(rt),I.remove(),setTimeout(function(){G=!1,u(ht),_.get(\"onClosed\")},1)}))},J.remove=function(){x&&(x.stop(),t[Y].close(),x.stop(!1,!0).remove(),v.remove(),G=!1,x=null,t(\".\"+tt).removeData(Y).removeClass(tt),t(e).unbind(\"click.\"+Z).unbind(\"keydown.\"+Z))},J.element=function(){return t(_.el)},J.settings=X)}(jQuery,document,window);"},{"base":"plugins","rel":"wordfence\/js\/chart.umd.1756145765.js","ext":"js","size":203190,"mtime":1757312769},{"base":"plugins","rel":"wordfence\/js\/wfonboarding.1756145765.js","ext":"js","size":4824,"mtime":1757312769,"type":"text","content":"(function($) {\n\t$(function() {\n\n\t\tfunction showRegistrationModal(id, message) {\n\t\t\tconsole.log(\"Registration error message: \", message);\n\t\t\tvar content = $(\"#wf-onboarding-registration-\" + id + \"-template\").clone().attr('id', null);\n\t\t\tif (message)\n\t\t\t\tcontent.find('.message').empty().text(message);\n\t\t\t$.wfcolorbox({\n\t\t\t\twidth: (wordfenceExt.isSmallScreen ? '300px' : '500px'),\n\t\t\t\thtml: content[0].outerHTML,\n\t\t\t\toverlayClose: false,\n\t\t\t\tcloseButton: false,\n\t\t\t\tclassName: 'wf-modal'\n\t\t\t});\n\t\t}\n\n\t\tfunction toggleInstallType(event) {\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\t$(event.target).parents('.wf-onboarding-registration-prompt').find('.wf-onboarding-install-type').toggle();\n\t\t\t$.wfcolorbox.resize();\n\t\t}\n\n\t\t$(document).on('click', '.wf-onboarding-install-type-toggle', toggleInstallType);\n\t\t$('.wf-onboarding-install-type-toggle').on('click', toggleInstallType);\n\n\t\t$(document).on('input', '#wf-onboarding-email-input,#wf-onboarding-license-input', function(event) {\n\t\t\tvar context = $(event.target).parents('.wf-onboarding-registration-prompt');\n\t\t\tcontext.find('.wf-onboarding-consent-group').show();\n\t\t\tcontext.find('#wf-onboarding-consent-input').prop('checked', false);\n\t\t});\n\n\t\tvar subscriptionOptionSelector = '.wf-onboarding-subscription-options li';\n\t\tfunction handleSubscriptionOptionClick(event) {\n\t\t\tvar target = $(event.target);\n\t\t\ttarget.parent().find('li').removeClass('wf-active').attr('aria-checked', 'false');\n\t\t\ttarget.addClass('wf-active').attr('aria-checked', 'true');\n\t\t\tevent.stopPropagation();\n\t\t};\n\t\t$(subscriptionOptionSelector).on('click', handleSubscriptionOptionClick);\n\t\t$(document).on('click', subscriptionOptionSelector, handleSubscriptionOptionClick);\n\n\t\t$(document).on('keyup keydown', subscriptionOptionSelector, function (event) {\n\t\t\tif (event.which == 32) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tif (event.type == 'keyup')\n\t\t\t\t\t$(event.target).trigger('click');\n\t\t\t}\n\t\t});\n\n\t\t$(document).on('submit', '.wf-onboarding-form', function(event) {\n\t\t\tevent.preventDefault();\n\t\t\tvar context = $(this);\n\t\t\tif (context.data('submitting'))\n\t\t\t\treturn;\n\t\t\tcontext.data('submitting', true);\n\t\t\tvar button = context.find('button');\n\t\t\tbutton.prop('disabled', true);\n\t\t\tvar enable = function (result) {\n\t\t\t\tcontext.data('submitting', false);\n\t\t\t\tbutton.prop('disabled', false);\n\t\t\t\tif (typeof result !== 'undefined')\n\t\t\t\t\treturn result;\n\t\t\t};\n\t\t\tvar email = context.find('#wf-onboarding-email-input').val();\n\t\t\tvar licenseKey = context.find('#wf-onboarding-license-input').val();\n\t\t\tvar subscriptionWarning = context.find('.wf-onboarding-subscription-option-required').hide();\n\t\t\tvar subscribe = false;\n\t\t\tif (context.find('.wf-onboarding-subscription-options:visible').length) {\n\t\t\t\tvar subscriptionOption = context.find(subscriptionOptionSelector).filter('.wf-active');\n\t\t\t\tif (!subscriptionOption.length) {\n\t\t\t\t\tsubscriptionWarning.show();\n\t\t\t\t\treturn enable(false);\n\t\t\t\t}\n\t\t\t\tsubscribe = !!parseInt(subscriptionOption.data('value'));\n\t\t\t}\n\t\t\tvar attempt = context.data('attempt');\n\t\t\tvar optionKey = 'onboardingAttempt' + attempt;\n\t\t\tvar optionValueEmail = context.data('option-value-email');\n\t\t\tvar optionValueLicense = context.data('option-value-license');\n\t\t\twordfenceExt.onboardingInstallLicense(\n\t\t\t\tlicenseKey,\n\t\t\t\tfunction(licenseResponse) {\n\t\t\t\t\twordfenceExt.setOption(\n\t\t\t\t\t\toptionKey,\n\t\t\t\t\t\toptionValueLicense,\n\t\t\t\t\t\tfunction(optionResponse) {\n\t\t\t\t\t\t\twordfenceExt.onboardingProcessEmails(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\temail\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\tsubscribe,\n\t\t\t\t\t\t\t\tnull,\n\t\t\t\t\t\t\t\tfunction(success, error) {\n\t\t\t\t\t\t\t\t\tif (!success) {\n\t\t\t\t\t\t\t\t\t\tshowRegistrationModal('error', error);\n\t\t\t\t\t\t\t\t\t\tenable();\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tvar modalType = 'free';\n\t\t\t\t\t\t\t\t\tif (licenseResponse.isPaid) {\n\t\t\t\t\t\t\t\t\t\tmodalType = 'premium';\n\t\t\t\t\t\t\t\t\t\tif (licenseResponse.type === 'care' || licenseResponse.type === 'response') {\n\t\t\t\t\t\t\t\t\t\t\tmodalType = licenseResponse.type;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (licenseResponse.inUse) {\n\t\t\t\t\t\t\t\t\t\tshowRegistrationModal('inuse-' + modalType);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\tshowRegistrationModal('success-' + modalType);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tenable();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\tshowRegistrationModal('error');\n\t\t\t\t\t\t\tenable();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tfunction(error) {\n\t\t\t\t\tshowRegistrationModal('error', (typeof error === 'string') ? error : null);\n\t\t\t\t\tenable();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\t$(document).on('click', '#wf-onboarding-delay', function() {\n\t\t\twordfenceExt.setOption(\n\t\t\t\t'onboardingDelayedAt',\n\t\t\t\t$('#wf-onboarding-delay').data('timestamp'),\n\t\t\t\tfunction() {\n\t\t\t\t\t$('#wf-onboarding-banner').hide();\n\t\t\t\t\tshowRegistrationModal('delayed');\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\tshowRegistrationModal('delayed-error');\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t});\n})(jQuery);\n"},{"base":"plugins","rel":"wordfence\/js\/knockout-3.5.1.1756145765.js","ext":"js","size":68249,"mtime":1757312769,"type":"text","content":"\/*!\n * Knockout JavaScript library v3.5.1\n * (c) The Knockout.js team - http:\/\/knockoutjs.com\/\n * License: MIT (http:\/\/www.opensource.org\/licenses\/mit-license.php)\n *\/\n\n(function() {(function(n){var A=this||(0,eval)(\"this\"),w=A.document,R=A.navigator,v=A.jQuery,H=A.JSON;v||\"undefined\"===typeof jQuery||(v=jQuery);(function(n){\"function\"===typeof define&&define.amd?define([\"exports\",\"require\"],n):\"object\"===typeof exports&&\"object\"===typeof module?n(module.exports||exports):n(A.ko={})})(function(S,T){function K(a,c){return null===a||typeof a in W?a===c:!1}function X(b,c){var d;return function(){d||(d=a.a.setTimeout(function(){d=n;b()},c))}}function Y(b,c){var d;return function(){clearTimeout(d);\nd=a.a.setTimeout(b,c)}}function Z(a,c){c&&\"change\"!==c?\"beforeChange\"===c?this.pc(a):this.gb(a,c):this.qc(a)}function aa(a,c){null!==c&&c.s&&c.s()}function ba(a,c){var d=this.qd,e=d[r];e.ra||(this.Qb&&this.mb[c]?(d.uc(c,a,this.mb[c]),this.mb[c]=null,--this.Qb):e.I[c]||d.uc(c,a,e.J?{da:a}:d.$c(a)),a.Ja&&a.gd())}var a=\"undefined\"!==typeof S?S:{};a.b=function(b,c){for(var d=b.split(\".\"),e=a,f=0;f<d.length-1;f++)e=e[d[f]];e[d[d.length-1]]=c};a.L=function(a,c,d){a[c]=d};a.version=\"3.5.1\";a.b(\"version\",\na.version);a.options={deferUpdates:!1,useOnlyNativeEvents:!1,foreachHidesDestroyed:!1};a.a=function(){function b(a,b){for(var c in a)f.call(a,c)&&b(c,a[c])}function c(a,b){if(b)for(var c in b)f.call(b,c)&&(a[c]=b[c]);return a}function d(a,b){a.__proto__=b;return a}function e(b,c,d,e){var l=b[c].match(q)||[];a.a.D(d.match(q),function(b){a.a.Na(l,b,e)});b[c]=l.join(\" \")}var f=Object.prototype.hasOwnProperty,g={__proto__:[]}instanceof Array,h=\"function\"===typeof Symbol,m={},k={};m[R&&\/Firefox\\\/2\/i.test(R.userAgent)?\n\"KeyboardEvent\":\"UIEvents\"]=[\"keyup\",\"keydown\",\"keypress\"];m.MouseEvents=\"click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave\".split(\" \");b(m,function(a,b){if(b.length)for(var c=0,d=b.length;c<d;c++)k[b[c]]=a});var l={propertychange:!0},p=w&&function(){for(var a=3,b=w.createElement(\"div\"),c=b.getElementsByTagName(\"i\");b.innerHTML=\"\\x3c!--[if gt IE \"+ ++a+\"]><i><\/i><![endif]--\\x3e\",c[0];);return 4<a?a:n}(),q=\/\\S+\/g,t;return{Jc:[\"authenticity_token\",\/^__RequestVerificationToken(_.*)?$\/],\nD:function(a,b,c){for(var d=0,e=a.length;d<e;d++)b.call(c,a[d],d,a)},A:\"function\"==typeof Array.prototype.indexOf?function(a,b){return Array.prototype.indexOf.call(a,b)}:function(a,b){for(var c=0,d=a.length;c<d;c++)if(a[c]===b)return c;return-1},Lb:function(a,b,c){for(var d=0,e=a.length;d<e;d++)if(b.call(c,a[d],d,a))return a[d];return n},Pa:function(b,c){var d=a.a.A(b,c);0<d?b.splice(d,1):0===d&&b.shift()},wc:function(b){var c=[];b&&a.a.D(b,function(b){0>a.a.A(c,b)&&c.push(b)});return c},Mb:function(a,\nb,c){var d=[];if(a)for(var e=0,l=a.length;e<l;e++)d.push(b.call(c,a[e],e));return d},jb:function(a,b,c){var d=[];if(a)for(var e=0,l=a.length;e<l;e++)b.call(c,a[e],e)&&d.push(a[e]);return d},Nb:function(a,b){if(b instanceof Array)a.push.apply(a,b);else for(var c=0,d=b.length;c<d;c++)a.push(b[c]);return a},Na:function(b,c,d){var e=a.a.A(a.a.bc(b),c);0>e?d&&b.push(c):d||b.splice(e,1)},Ba:g,extend:c,setPrototypeOf:d,Ab:g?d:c,P:b,Ga:function(a,b,c){if(!a)return a;var d={},e;for(e in a)f.call(a,e)&&(d[e]=\nb.call(c,a[e],e,a));return d},Tb:function(b){for(;b.firstChild;)a.removeNode(b.firstChild)},Yb:function(b){b=a.a.la(b);for(var c=(b[0]&&b[0].ownerDocument||w).createElement(\"div\"),d=0,e=b.length;d<e;d++)c.appendChild(a.oa(b[d]));return c},Ca:function(b,c){for(var d=0,e=b.length,l=[];d<e;d++){var k=b[d].cloneNode(!0);l.push(c?a.oa(k):k)}return l},va:function(b,c){a.a.Tb(b);if(c)for(var d=0,e=c.length;d<e;d++)b.appendChild(c[d])},Xc:function(b,c){var d=b.nodeType?[b]:b;if(0<d.length){for(var e=d[0],\nl=e.parentNode,k=0,f=c.length;k<f;k++)l.insertBefore(c[k],e);k=0;for(f=d.length;k<f;k++)a.removeNode(d[k])}},Ua:function(a,b){if(a.length){for(b=8===b.nodeType&&b.parentNode||b;a.length&&a[0].parentNode!==b;)a.splice(0,1);for(;1<a.length&&a[a.length-1].parentNode!==b;)a.length--;if(1<a.length){var c=a[0],d=a[a.length-1];for(a.length=0;c!==d;)a.push(c),c=c.nextSibling;a.push(d)}}return a},Zc:function(a,b){7>p?a.setAttribute(\"selected\",b):a.selected=b},Db:function(a){return null===a||a===n?\"\":a.trim?\na.trim():a.toString().replace(\/^[\\s\\xa0]+|[\\s\\xa0]+$\/g,\"\")},Ud:function(a,b){a=a||\"\";return b.length>a.length?!1:a.substring(0,b.length)===b},vd:function(a,b){if(a===b)return!0;if(11===a.nodeType)return!1;if(b.contains)return b.contains(1!==a.nodeType?a.parentNode:a);if(b.compareDocumentPosition)return 16==(b.compareDocumentPosition(a)&16);for(;a&&a!=b;)a=a.parentNode;return!!a},Sb:function(b){return a.a.vd(b,b.ownerDocument.documentElement)},kd:function(b){return!!a.a.Lb(b,a.a.Sb)},R:function(a){return a&&\na.tagName&&a.tagName.toLowerCase()},Ac:function(b){return a.onError?function(){try{return b.apply(this,arguments)}catch(c){throw a.onError&&a.onError(c),c;}}:b},setTimeout:function(b,c){return setTimeout(a.a.Ac(b),c)},Gc:function(b){setTimeout(function(){a.onError&&a.onError(b);throw b;},0)},B:function(b,c,d){var e=a.a.Ac(d);d=l[c];if(a.options.useOnlyNativeEvents||d||!v)if(d||\"function\"!=typeof b.addEventListener)if(\"undefined\"!=typeof b.attachEvent){var k=function(a){e.call(b,a)},f=\"on\"+c;b.attachEvent(f,\nk);a.a.K.za(b,function(){b.detachEvent(f,k)})}else throw Error(\"Browser doesn't support addEventListener or attachEvent\");else b.addEventListener(c,e,!1);else t||(t=\"function\"==typeof v(b).on?\"on\":\"bind\"),v(b)[t](c,e)},Fb:function(b,c){if(!b||!b.nodeType)throw Error(\"element must be a DOM node when calling triggerEvent\");var d;\"input\"===a.a.R(b)&&b.type&&\"click\"==c.toLowerCase()?(d=b.type,d=\"checkbox\"==d||\"radio\"==d):d=!1;if(a.options.useOnlyNativeEvents||!v||d)if(\"function\"==typeof w.createEvent)if(\"function\"==\ntypeof b.dispatchEvent)d=w.createEvent(k[c]||\"HTMLEvents\"),d.initEvent(c,!0,!0,A,0,0,0,0,0,!1,!1,!1,!1,0,b),b.dispatchEvent(d);else throw Error(\"The supplied element doesn't support dispatchEvent\");else if(d&&b.click)b.click();else if(\"undefined\"!=typeof b.fireEvent)b.fireEvent(\"on\"+c);else throw Error(\"Browser doesn't support triggering events\");else v(b).trigger(c)},f:function(b){return a.O(b)?b():b},bc:function(b){return a.O(b)?b.v():b},Eb:function(b,c,d){var l;c&&(\"object\"===typeof b.classList?\n(l=b.classList[d?\"add\":\"remove\"],a.a.D(c.match(q),function(a){l.call(b.classList,a)})):\"string\"===typeof b.className.baseVal?e(b.className,\"baseVal\",c,d):e(b,\"className\",c,d))},Bb:function(b,c){var d=a.a.f(c);if(null===d||d===n)d=\"\";var e=a.h.firstChild(b);!e||3!=e.nodeType||a.h.nextSibling(e)?a.h.va(b,[b.ownerDocument.createTextNode(d)]):e.data=d;a.a.Ad(b)},Yc:function(a,b){a.name=b;if(7>=p)try{var c=a.name.replace(\/[&<>'\"]\/g,function(a){return\"&#\"+a.charCodeAt(0)+\";\"});a.mergeAttributes(w.createElement(\"<input name='\"+\nc+\"'\/>\"),!1)}catch(d){}},Ad:function(a){9<=p&&(a=1==a.nodeType?a:a.parentNode,a.style&&(a.style.zoom=a.style.zoom))},wd:function(a){if(p){var b=a.style.width;a.style.width=0;a.style.width=b}},Pd:function(b,c){b=a.a.f(b);c=a.a.f(c);for(var d=[],e=b;e<=c;e++)d.push(e);return d},la:function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b},Da:function(a){return h?Symbol(a):a},Zd:6===p,$d:7===p,W:p,Lc:function(b,c){for(var d=a.a.la(b.getElementsByTagName(\"input\")).concat(a.a.la(b.getElementsByTagName(\"textarea\"))),\ne=\"string\"==typeof c?function(a){return a.name===c}:function(a){return c.test(a.name)},l=[],k=d.length-1;0<=k;k--)e(d[k])&&l.push(d[k]);return l},Nd:function(b){return\"string\"==typeof b&&(b=a.a.Db(b))?H&&H.parse?H.parse(b):(new Function(\"return \"+b))():null},hc:function(b,c,d){if(!H||!H.stringify)throw Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http:\/\/www.json.org\/json2.js\");\nreturn H.stringify(a.a.f(b),c,d)},Od:function(c,d,e){e=e||{};var l=e.params||{},k=e.includeFields||this.Jc,f=c;if(\"object\"==typeof c&&\"form\"===a.a.R(c))for(var f=c.action,h=k.length-1;0<=h;h--)for(var g=a.a.Lc(c,k[h]),m=g.length-1;0<=m;m--)l[g[m].name]=g[m].value;d=a.a.f(d);var p=w.createElement(\"form\");p.style.display=\"none\";p.action=f;p.method=\"post\";for(var q in d)c=w.createElement(\"input\"),c.type=\"hidden\",c.name=q,c.value=a.a.hc(a.a.f(d[q])),p.appendChild(c);b(l,function(a,b){var c=w.createElement(\"input\");\nc.type=\"hidden\";c.name=a;c.value=b;p.appendChild(c)});w.body.appendChild(p);e.submitter?e.submitter(p):p.submit();setTimeout(function(){p.parentNode.removeChild(p)},0)}}}();a.b(\"utils\",a.a);a.b(\"utils.arrayForEach\",a.a.D);a.b(\"utils.arrayFirst\",a.a.Lb);a.b(\"utils.arrayFilter\",a.a.jb);a.b(\"utils.arrayGetDistinctValues\",a.a.wc);a.b(\"utils.arrayIndexOf\",a.a.A);a.b(\"utils.arrayMap\",a.a.Mb);a.b(\"utils.arrayPushAll\",a.a.Nb);a.b(\"utils.arrayRemoveItem\",a.a.Pa);a.b(\"utils.cloneNodes\",a.a.Ca);a.b(\"utils.createSymbolOrString\",\na.a.Da);a.b(\"utils.extend\",a.a.extend);a.b(\"utils.fieldsIncludedWithJsonPost\",a.a.Jc);a.b(\"utils.getFormFields\",a.a.Lc);a.b(\"utils.objectMap\",a.a.Ga);a.b(\"utils.peekObservable\",a.a.bc);a.b(\"utils.postJson\",a.a.Od);a.b(\"utils.parseJson\",a.a.Nd);a.b(\"utils.registerEventHandler\",a.a.B);a.b(\"utils.stringifyJson\",a.a.hc);a.b(\"utils.range\",a.a.Pd);a.b(\"utils.toggleDomNodeCssClass\",a.a.Eb);a.b(\"utils.triggerEvent\",a.a.Fb);a.b(\"utils.unwrapObservable\",a.a.f);a.b(\"utils.objectForEach\",a.a.P);a.b(\"utils.addOrRemoveItem\",\na.a.Na);a.b(\"utils.setTextContent\",a.a.Bb);a.b(\"unwrap\",a.a.f);Function.prototype.bind||(Function.prototype.bind=function(a){var c=this;if(1===arguments.length)return function(){return c.apply(a,arguments)};var d=Array.prototype.slice.call(arguments,1);return function(){var e=d.slice(0);e.push.apply(e,arguments);return c.apply(a,e)}});a.a.g=new function(){var b=0,c=\"__ko__\"+(new Date).getTime(),d={},e,f;a.a.W?(e=function(a,e){var f=a[c];if(!f||\"null\"===f||!d[f]){if(!e)return n;f=a[c]=\"ko\"+b++;d[f]=\n{}}return d[f]},f=function(a){var b=a[c];return b?(delete d[b],a[c]=null,!0):!1}):(e=function(a,b){var d=a[c];!d&&b&&(d=a[c]={});return d},f=function(a){return a[c]?(delete a[c],!0):!1});return{get:function(a,b){var c=e(a,!1);return c&&c[b]},set:function(a,b,c){(a=e(a,c!==n))&&(a[b]=c)},Ub:function(a,b,c){a=e(a,!0);return a[b]||(a[b]=c)},clear:f,Z:function(){return b++ +c}}};a.b(\"utils.domData\",a.a.g);a.b(\"utils.domData.clear\",a.a.g.clear);a.a.K=new function(){function b(b,c){var d=a.a.g.get(b,e);\nd===n&&c&&(d=[],a.a.g.set(b,e,d));return d}function c(c){var e=b(c,!1);if(e)for(var e=e.slice(0),k=0;k<e.length;k++)e[k](c);a.a.g.clear(c);a.a.K.cleanExternalData(c);g[c.nodeType]&&d(c.childNodes,!0)}function d(b,d){for(var e=[],l,f=0;f<b.length;f++)if(!d||8===b[f].nodeType)if(c(e[e.length]=l=b[f]),b[f]!==l)for(;f--&&-1==a.a.A(e,b[f]););}var e=a.a.g.Z(),f={1:!0,8:!0,9:!0},g={1:!0,9:!0};return{za:function(a,c){if(\"function\"!=typeof c)throw Error(\"Callback must be a function\");b(a,!0).push(c)},yb:function(c,\nd){var f=b(c,!1);f&&(a.a.Pa(f,d),0==f.length&&a.a.g.set(c,e,n))},oa:function(b){a.u.G(function(){f[b.nodeType]&&(c(b),g[b.nodeType]&&d(b.getElementsByTagName(\"*\")))});return b},removeNode:function(b){a.oa(b);b.parentNode&&b.parentNode.removeChild(b)},cleanExternalData:function(a){v&&\"function\"==typeof v.cleanData&&v.cleanData([a])}}};a.oa=a.a.K.oa;a.removeNode=a.a.K.removeNode;a.b(\"cleanNode\",a.oa);a.b(\"removeNode\",a.removeNode);a.b(\"utils.domNodeDisposal\",a.a.K);a.b(\"utils.domNodeDisposal.addDisposeCallback\",\na.a.K.za);a.b(\"utils.domNodeDisposal.removeDisposeCallback\",a.a.K.yb);(function(){var b=[0,\"\",\"\"],c=[1,\"<table>\",\"<\/table>\"],d=[3,\"<table><tbody><tr>\",\"<\/tr><\/tbody><\/table>\"],e=[1,\"<select multiple='multiple'>\",\"<\/select>\"],f={thead:c,tbody:c,tfoot:c,tr:[2,\"<table><tbody>\",\"<\/tbody><\/table>\"],td:d,th:d,option:e,optgroup:e},g=8>=a.a.W;a.a.ua=function(c,d){var e;if(v)if(v.parseHTML)e=v.parseHTML(c,d)||[];else{if((e=v.clean([c],d))&&e[0]){for(var l=e[0];l.parentNode&&11!==l.parentNode.nodeType;)l=l.parentNode;\nl.parentNode&&l.parentNode.removeChild(l)}}else{(e=d)||(e=w);var l=e.parentWindow||e.defaultView||A,p=a.a.Db(c).toLowerCase(),q=e.createElement(\"div\"),t;t=(p=p.match(\/^(?:\\x3c!--.*?--\\x3e\\s*?)*?<([a-z]+)[\\s>]\/))&&f[p[1]]||b;p=t[0];t=\"ignored<div>\"+t[1]+c+t[2]+\"<\/div>\";\"function\"==typeof l.innerShiv?q.appendChild(l.innerShiv(t)):(g&&e.body.appendChild(q),q.innerHTML=t,g&&q.parentNode.removeChild(q));for(;p--;)q=q.lastChild;e=a.a.la(q.lastChild.childNodes)}return e};a.a.Md=function(b,c){var d=a.a.ua(b,\nc);return d.length&&d[0].parentElement||a.a.Yb(d)};a.a.fc=function(b,c){a.a.Tb(b);c=a.a.f(c);if(null!==c&&c!==n)if(\"string\"!=typeof c&&(c=c.toString()),v)v(b).html(c);else for(var d=a.a.ua(c,b.ownerDocument),e=0;e<d.length;e++)b.appendChild(d[e])}})();a.b(\"utils.parseHtmlFragment\",a.a.ua);a.b(\"utils.setHtml\",a.a.fc);a.aa=function(){function b(c,e){if(c)if(8==c.nodeType){var f=a.aa.Uc(c.nodeValue);null!=f&&e.push({ud:c,Kd:f})}else if(1==c.nodeType)for(var f=0,g=c.childNodes,h=g.length;f<h;f++)b(g[f],\ne)}var c={};return{Xb:function(a){if(\"function\"!=typeof a)throw Error(\"You can only pass a function to ko.memoization.memoize()\");var b=(4294967296*(1+Math.random())|0).toString(16).substring(1)+(4294967296*(1+Math.random())|0).toString(16).substring(1);c[b]=a;return\"\\x3c!--[ko_memo:\"+b+\"]--\\x3e\"},bd:function(a,b){var f=c[a];if(f===n)throw Error(\"Couldn't find any memo with ID \"+a+\". Perhaps it's already been unmemoized.\");try{return f.apply(null,b||[]),!0}finally{delete c[a]}},cd:function(c,e){var f=\n[];b(c,f);for(var g=0,h=f.length;g<h;g++){var m=f[g].ud,k=[m];e&&a.a.Nb(k,e);a.aa.bd(f[g].Kd,k);m.nodeValue=\"\";m.parentNode&&m.parentNode.removeChild(m)}},Uc:function(a){return(a=a.match(\/^\\[ko_memo\\:(.*?)\\]$\/))?a[1]:null}}}();a.b(\"memoization\",a.aa);a.b(\"memoization.memoize\",a.aa.Xb);a.b(\"memoization.unmemoize\",a.aa.bd);a.b(\"memoization.parseMemoText\",a.aa.Uc);a.b(\"memoization.unmemoizeDomNodeAndDescendants\",a.aa.cd);a.na=function(){function b(){if(f)for(var b=f,c=0,d;h<f;)if(d=e[h++]){if(h>b){if(5E3<=\n++c){h=f;a.a.Gc(Error(\"'Too much recursion' after processing \"+c+\" task groups.\"));break}b=f}try{d()}catch(p){a.a.Gc(p)}}}function c(){b();h=f=e.length=0}var d,e=[],f=0,g=1,h=0;A.MutationObserver?d=function(a){var b=w.createElement(\"div\");(new MutationObserver(a)).observe(b,{attributes:!0});return function(){b.classList.toggle(\"foo\")}}(c):d=w&&\"onreadystatechange\"in w.createElement(\"script\")?function(a){var b=w.createElement(\"script\");b.onreadystatechange=function(){b.onreadystatechange=null;w.documentElement.removeChild(b);\nb=null;a()};w.documentElement.appendChild(b)}:function(a){setTimeout(a,0)};return{scheduler:d,zb:function(b){f||a.na.scheduler(c);e[f++]=b;return g++},cancel:function(a){a=a-(g-f);a>=h&&a<f&&(e[a]=null)},resetForTesting:function(){var a=f-h;h=f=e.length=0;return a},Sd:b}}();a.b(\"tasks\",a.na);a.b(\"tasks.schedule\",a.na.zb);a.b(\"tasks.runEarly\",a.na.Sd);a.Ta={throttle:function(b,c){b.throttleEvaluation=c;var d=null;return a.$({read:b,write:function(e){clearTimeout(d);d=a.a.setTimeout(function(){b(e)},\nc)}})},rateLimit:function(a,c){var d,e,f;\"number\"==typeof c?d=c:(d=c.timeout,e=c.method);a.Hb=!1;f=\"function\"==typeof e?e:\"notifyWhenChangesStop\"==e?Y:X;a.ub(function(a){return f(a,d,c)})},deferred:function(b,c){if(!0!==c)throw Error(\"The 'deferred' extender only accepts the value 'true', because it is not supported to turn deferral off once enabled.\");b.Hb||(b.Hb=!0,b.ub(function(c){var e,f=!1;return function(){if(!f){a.na.cancel(e);e=a.na.zb(c);try{f=!0,b.notifySubscribers(n,\"dirty\")}finally{f=\n!1}}}}))},notify:function(a,c){a.equalityComparer=\"always\"==c?null:K}};var W={undefined:1,\"boolean\":1,number:1,string:1};a.b(\"extenders\",a.Ta);a.ic=function(b,c,d){this.da=b;this.lc=c;this.mc=d;this.Ib=!1;this.fb=this.Jb=null;a.L(this,\"dispose\",this.s);a.L(this,\"disposeWhenNodeIsRemoved\",this.l)};a.ic.prototype.s=function(){this.Ib||(this.fb&&a.a.K.yb(this.Jb,this.fb),this.Ib=!0,this.mc(),this.da=this.lc=this.mc=this.Jb=this.fb=null)};a.ic.prototype.l=function(b){this.Jb=b;a.a.K.za(b,this.fb=this.s.bind(this))};\na.T=function(){a.a.Ab(this,D);D.qb(this)};var D={qb:function(a){a.U={change:[]};a.sc=1},subscribe:function(b,c,d){var e=this;d=d||\"change\";var f=new a.ic(e,c?b.bind(c):b,function(){a.a.Pa(e.U[d],f);e.hb&&e.hb(d)});e.Qa&&e.Qa(d);e.U[d]||(e.U[d]=[]);e.U[d].push(f);return f},notifySubscribers:function(b,c){c=c||\"change\";\"change\"===c&&this.Gb();if(this.Wa(c)){var d=\"change\"===c&&this.ed||this.U[c].slice(0);try{a.u.xc();for(var e=0,f;f=d[e];++e)f.Ib||f.lc(b)}finally{a.u.end()}}},ob:function(){return this.sc},\nDd:function(a){return this.ob()!==a},Gb:function(){++this.sc},ub:function(b){var c=this,d=a.O(c),e,f,g,h,m;c.gb||(c.gb=c.notifySubscribers,c.notifySubscribers=Z);var k=b(function(){c.Ja=!1;d&&h===c&&(h=c.nc?c.nc():c());var a=f||m&&c.sb(g,h);m=f=e=!1;a&&c.gb(g=h)});c.qc=function(a,b){b&&c.Ja||(m=!b);c.ed=c.U.change.slice(0);c.Ja=e=!0;h=a;k()};c.pc=function(a){e||(g=a,c.gb(a,\"beforeChange\"))};c.rc=function(){m=!0};c.gd=function(){c.sb(g,c.v(!0))&&(f=!0)}},Wa:function(a){return this.U[a]&&this.U[a].length},\nBd:function(b){if(b)return this.U[b]&&this.U[b].length||0;var c=0;a.a.P(this.U,function(a,b){\"dirty\"!==a&&(c+=b.length)});return c},sb:function(a,c){return!this.equalityComparer||!this.equalityComparer(a,c)},toString:function(){return\"[object Object]\"},extend:function(b){var c=this;b&&a.a.P(b,function(b,e){var f=a.Ta[b];\"function\"==typeof f&&(c=f(c,e)||c)});return c}};a.L(D,\"init\",D.qb);a.L(D,\"subscribe\",D.subscribe);a.L(D,\"extend\",D.extend);a.L(D,\"getSubscriptionsCount\",D.Bd);a.a.Ba&&a.a.setPrototypeOf(D,\nFunction.prototype);a.T.fn=D;a.Qc=function(a){return null!=a&&\"function\"==typeof a.subscribe&&\"function\"==typeof a.notifySubscribers};a.b(\"subscribable\",a.T);a.b(\"isSubscribable\",a.Qc);a.S=a.u=function(){function b(a){d.push(e);e=a}function c(){e=d.pop()}var d=[],e,f=0;return{xc:b,end:c,cc:function(b){if(e){if(!a.Qc(b))throw Error(\"Only subscribable things can act as dependencies\");e.od.call(e.pd,b,b.fd||(b.fd=++f))}},G:function(a,d,e){try{return b(),a.apply(d,e||[])}finally{c()}},qa:function(){if(e)return e.o.qa()},\nVa:function(){if(e)return e.o.Va()},Ya:function(){if(e)return e.Ya},o:function(){if(e)return e.o}}}();a.b(\"computedContext\",a.S);a.b(\"computedContext.getDependenciesCount\",a.S.qa);a.b(\"computedContext.getDependencies\",a.S.Va);a.b(\"computedContext.isInitial\",a.S.Ya);a.b(\"computedContext.registerDependency\",a.S.cc);a.b(\"ignoreDependencies\",a.Yd=a.u.G);var I=a.a.Da(\"_latestValue\");a.ta=function(b){function c(){if(0<arguments.length)return c.sb(c[I],arguments[0])&&(c.ya(),c[I]=arguments[0],c.xa()),this;\na.u.cc(c);return c[I]}c[I]=b;a.a.Ba||a.a.extend(c,a.T.fn);a.T.fn.qb(c);a.a.Ab(c,F);a.options.deferUpdates&&a.Ta.deferred(c,!0);return c};var F={equalityComparer:K,v:function(){return this[I]},xa:function(){this.notifySubscribers(this[I],\"spectate\");this.notifySubscribers(this[I])},ya:function(){this.notifySubscribers(this[I],\"beforeChange\")}};a.a.Ba&&a.a.setPrototypeOf(F,a.T.fn);var G=a.ta.Ma=\"__ko_proto__\";F[G]=a.ta;a.O=function(b){if((b=\"function\"==typeof b&&b[G])&&b!==F[G]&&b!==a.o.fn[G])throw Error(\"Invalid object that looks like an observable; possibly from another Knockout instance\");\nreturn!!b};a.Za=function(b){return\"function\"==typeof b&&(b[G]===F[G]||b[G]===a.o.fn[G]&&b.Nc)};a.b(\"observable\",a.ta);a.b(\"isObservable\",a.O);a.b(\"isWriteableObservable\",a.Za);a.b(\"isWritableObservable\",a.Za);a.b(\"observable.fn\",F);a.L(F,\"peek\",F.v);a.L(F,\"valueHasMutated\",F.xa);a.L(F,\"valueWillMutate\",F.ya);a.Ha=function(b){b=b||[];if(\"object\"!=typeof b||!(\"length\"in b))throw Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");b=a.ta(b);a.a.Ab(b,\na.Ha.fn);return b.extend({trackArrayChanges:!0})};a.Ha.fn={remove:function(b){for(var c=this.v(),d=[],e=\"function\"!=typeof b||a.O(b)?function(a){return a===b}:b,f=0;f<c.length;f++){var g=c[f];if(e(g)){0===d.length&&this.ya();if(c[f]!==g)throw Error(\"Array modified during remove; cannot remove item\");d.push(g);c.splice(f,1);f--}}d.length&&this.xa();return d},removeAll:function(b){if(b===n){var c=this.v(),d=c.slice(0);this.ya();c.splice(0,c.length);this.xa();return d}return b?this.remove(function(c){return 0<=\na.a.A(b,c)}):[]},destroy:function(b){var c=this.v(),d=\"function\"!=typeof b||a.O(b)?function(a){return a===b}:b;this.ya();for(var e=c.length-1;0<=e;e--){var f=c[e];d(f)&&(f._destroy=!0)}this.xa()},destroyAll:function(b){return b===n?this.destroy(function(){return!0}):b?this.destroy(function(c){return 0<=a.a.A(b,c)}):[]},indexOf:function(b){var c=this();return a.a.A(c,b)},replace:function(a,c){var d=this.indexOf(a);0<=d&&(this.ya(),this.v()[d]=c,this.xa())},sorted:function(a){var c=this().slice(0);\nreturn a?c.sort(a):c.sort()},reversed:function(){return this().slice(0).reverse()}};a.a.Ba&&a.a.setPrototypeOf(a.Ha.fn,a.ta.fn);a.a.D(\"pop push reverse shift sort splice unshift\".split(\" \"),function(b){a.Ha.fn[b]=function(){var a=this.v();this.ya();this.zc(a,b,arguments);var d=a[b].apply(a,arguments);this.xa();return d===a?this:d}});a.a.D([\"slice\"],function(b){a.Ha.fn[b]=function(){var a=this();return a[b].apply(a,arguments)}});a.Pc=function(b){return a.O(b)&&\"function\"==typeof b.remove&&\"function\"==\ntypeof b.push};a.b(\"observableArray\",a.Ha);a.b(\"isObservableArray\",a.Pc);a.Ta.trackArrayChanges=function(b,c){function d(){function c(){if(m){var d=[].concat(b.v()||[]),e;if(b.Wa(\"arrayChange\")){if(!f||1<m)f=a.a.Pb(k,d,b.Ob);e=f}k=d;f=null;m=0;e&&e.length&&b.notifySubscribers(e,\"arrayChange\")}}e?c():(e=!0,h=b.subscribe(function(){++m},null,\"spectate\"),k=[].concat(b.v()||[]),f=null,g=b.subscribe(c))}b.Ob={};c&&\"object\"==typeof c&&a.a.extend(b.Ob,c);b.Ob.sparse=!0;if(!b.zc){var e=!1,f=null,g,h,m=0,\nk,l=b.Qa,p=b.hb;b.Qa=function(a){l&&l.call(b,a);\"arrayChange\"===a&&d()};b.hb=function(a){p&&p.call(b,a);\"arrayChange\"!==a||b.Wa(\"arrayChange\")||(g&&g.s(),h&&h.s(),h=g=null,e=!1,k=n)};b.zc=function(b,c,d){function l(a,b,c){return k[k.length]={status:a,value:b,index:c}}if(e&&!m){var k=[],p=b.length,g=d.length,h=0;switch(c){case \"push\":h=p;case \"unshift\":for(c=0;c<g;c++)l(\"added\",d[c],h+c);break;case \"pop\":h=p-1;case \"shift\":p&&l(\"deleted\",b[h],h);break;case \"splice\":c=Math.min(Math.max(0,0>d[0]?p+d[0]:\nd[0]),p);for(var p=1===g?p:Math.min(c+(d[1]||0),p),g=c+g-2,h=Math.max(p,g),U=[],L=[],n=2;c<h;++c,++n)c<p&&L.push(l(\"deleted\",b[c],c)),c<g&&U.push(l(\"added\",d[n],c));a.a.Kc(L,U);break;default:return}f=k}}}};var r=a.a.Da(\"_state\");a.o=a.$=function(b,c,d){function e(){if(0<arguments.length){if(\"function\"===typeof f)f.apply(g.nb,arguments);else throw Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");return this}g.ra||\na.u.cc(e);(g.ka||g.J&&e.Xa())&&e.ha();return g.X}\"object\"===typeof b?d=b:(d=d||{},b&&(d.read=b));if(\"function\"!=typeof d.read)throw Error(\"Pass a function that returns the value of the ko.computed\");var f=d.write,g={X:n,sa:!0,ka:!0,rb:!1,jc:!1,ra:!1,wb:!1,J:!1,Wc:d.read,nb:c||d.owner,l:d.disposeWhenNodeIsRemoved||d.l||null,Sa:d.disposeWhen||d.Sa,Rb:null,I:{},V:0,Ic:null};e[r]=g;e.Nc=\"function\"===typeof f;a.a.Ba||a.a.extend(e,a.T.fn);a.T.fn.qb(e);a.a.Ab(e,C);d.pure?(g.wb=!0,g.J=!0,a.a.extend(e,da)):\nd.deferEvaluation&&a.a.extend(e,ea);a.options.deferUpdates&&a.Ta.deferred(e,!0);g.l&&(g.jc=!0,g.l.nodeType||(g.l=null));g.J||d.deferEvaluation||e.ha();g.l&&e.ja()&&a.a.K.za(g.l,g.Rb=function(){e.s()});return e};var C={equalityComparer:K,qa:function(){return this[r].V},Va:function(){var b=[];a.a.P(this[r].I,function(a,d){b[d.Ka]=d.da});return b},Vb:function(b){if(!this[r].V)return!1;var c=this.Va();return-1!==a.a.A(c,b)?!0:!!a.a.Lb(c,function(a){return a.Vb&&a.Vb(b)})},uc:function(a,c,d){if(this[r].wb&&\nc===this)throw Error(\"A 'pure' computed must not be called recursively\");this[r].I[a]=d;d.Ka=this[r].V++;d.La=c.ob()},Xa:function(){var a,c,d=this[r].I;for(a in d)if(Object.prototype.hasOwnProperty.call(d,a)&&(c=d[a],this.Ia&&c.da.Ja||c.da.Dd(c.La)))return!0},Jd:function(){this.Ia&&!this[r].rb&&this.Ia(!1)},ja:function(){var a=this[r];return a.ka||0<a.V},Rd:function(){this.Ja?this[r].ka&&(this[r].sa=!0):this.Hc()},$c:function(a){if(a.Hb){var c=a.subscribe(this.Jd,this,\"dirty\"),d=a.subscribe(this.Rd,\nthis);return{da:a,s:function(){c.s();d.s()}}}return a.subscribe(this.Hc,this)},Hc:function(){var b=this,c=b.throttleEvaluation;c&&0<=c?(clearTimeout(this[r].Ic),this[r].Ic=a.a.setTimeout(function(){b.ha(!0)},c)):b.Ia?b.Ia(!0):b.ha(!0)},ha:function(b){var c=this[r],d=c.Sa,e=!1;if(!c.rb&&!c.ra){if(c.l&&!a.a.Sb(c.l)||d&&d()){if(!c.jc){this.s();return}}else c.jc=!1;c.rb=!0;try{e=this.zd(b)}finally{c.rb=!1}return e}},zd:function(b){var c=this[r],d=!1,e=c.wb?n:!c.V,d={qd:this,mb:c.I,Qb:c.V};a.u.xc({pd:d,\nod:ba,o:this,Ya:e});c.I={};c.V=0;var f=this.yd(c,d);c.V?d=this.sb(c.X,f):(this.s(),d=!0);d&&(c.J?this.Gb():this.notifySubscribers(c.X,\"beforeChange\"),c.X=f,this.notifySubscribers(c.X,\"spectate\"),!c.J&&b&&this.notifySubscribers(c.X),this.rc&&this.rc());e&&this.notifySubscribers(c.X,\"awake\");return d},yd:function(b,c){try{var d=b.Wc;return b.nb?d.call(b.nb):d()}finally{a.u.end(),c.Qb&&!b.J&&a.a.P(c.mb,aa),b.sa=b.ka=!1}},v:function(a){var c=this[r];(c.ka&&(a||!c.V)||c.J&&this.Xa())&&this.ha();return c.X},\nub:function(b){a.T.fn.ub.call(this,b);this.nc=function(){this[r].J||(this[r].sa?this.ha():this[r].ka=!1);return this[r].X};this.Ia=function(a){this.pc(this[r].X);this[r].ka=!0;a&&(this[r].sa=!0);this.qc(this,!a)}},s:function(){var b=this[r];!b.J&&b.I&&a.a.P(b.I,function(a,b){b.s&&b.s()});b.l&&b.Rb&&a.a.K.yb(b.l,b.Rb);b.I=n;b.V=0;b.ra=!0;b.sa=!1;b.ka=!1;b.J=!1;b.l=n;b.Sa=n;b.Wc=n;this.Nc||(b.nb=n)}},da={Qa:function(b){var c=this,d=c[r];if(!d.ra&&d.J&&\"change\"==b){d.J=!1;if(d.sa||c.Xa())d.I=null,d.V=\n0,c.ha()&&c.Gb();else{var e=[];a.a.P(d.I,function(a,b){e[b.Ka]=a});a.a.D(e,function(a,b){var e=d.I[a],m=c.$c(e.da);m.Ka=b;m.La=e.La;d.I[a]=m});c.Xa()&&c.ha()&&c.Gb()}d.ra||c.notifySubscribers(d.X,\"awake\")}},hb:function(b){var c=this[r];c.ra||\"change\"!=b||this.Wa(\"change\")||(a.a.P(c.I,function(a,b){b.s&&(c.I[a]={da:b.da,Ka:b.Ka,La:b.La},b.s())}),c.J=!0,this.notifySubscribers(n,\"asleep\"))},ob:function(){var b=this[r];b.J&&(b.sa||this.Xa())&&this.ha();return a.T.fn.ob.call(this)}},ea={Qa:function(a){\"change\"!=\na&&\"beforeChange\"!=a||this.v()}};a.a.Ba&&a.a.setPrototypeOf(C,a.T.fn);var N=a.ta.Ma;C[N]=a.o;a.Oc=function(a){return\"function\"==typeof a&&a[N]===C[N]};a.Fd=function(b){return a.Oc(b)&&b[r]&&b[r].wb};a.b(\"computed\",a.o);a.b(\"dependentObservable\",a.o);a.b(\"isComputed\",a.Oc);a.b(\"isPureComputed\",a.Fd);a.b(\"computed.fn\",C);a.L(C,\"peek\",C.v);a.L(C,\"dispose\",C.s);a.L(C,\"isActive\",C.ja);a.L(C,\"getDependenciesCount\",C.qa);a.L(C,\"getDependencies\",C.Va);a.xb=function(b,c){if(\"function\"===typeof b)return a.o(b,\nc,{pure:!0});b=a.a.extend({},b);b.pure=!0;return a.o(b,c)};a.b(\"pureComputed\",a.xb);(function(){function b(a,f,g){g=g||new d;a=f(a);if(\"object\"!=typeof a||null===a||a===n||a instanceof RegExp||a instanceof Date||a instanceof String||a instanceof Number||a instanceof Boolean)return a;var h=a instanceof Array?[]:{};g.save(a,h);c(a,function(c){var d=f(a[c]);switch(typeof d){case \"boolean\":case \"number\":case \"string\":case \"function\":h[c]=d;break;case \"object\":case \"undefined\":var l=g.get(d);h[c]=l!==\nn?l:b(d,f,g)}});return h}function c(a,b){if(a instanceof Array){for(var c=0;c<a.length;c++)b(c);\"function\"==typeof a.toJSON&&b(\"toJSON\")}else for(c in a)b(c)}function d(){this.keys=[];this.values=[]}a.ad=function(c){if(0==arguments.length)throw Error(\"When calling ko.toJS, pass the object you want to convert.\");return b(c,function(b){for(var c=0;a.O(b)&&10>c;c++)b=b();return b})};a.toJSON=function(b,c,d){b=a.ad(b);return a.a.hc(b,c,d)};d.prototype={constructor:d,save:function(b,c){var d=a.a.A(this.keys,\nb);0<=d?this.values[d]=c:(this.keys.push(b),this.values.push(c))},get:function(b){b=a.a.A(this.keys,b);return 0<=b?this.values[b]:n}}})();a.b(\"toJS\",a.ad);a.b(\"toJSON\",a.toJSON);a.Wd=function(b,c,d){function e(c){var e=a.xb(b,d).extend({ma:\"always\"}),h=e.subscribe(function(a){a&&(h.s(),c(a))});e.notifySubscribers(e.v());return h}return\"function\"!==typeof Promise||c?e(c.bind(d)):new Promise(e)};a.b(\"when\",a.Wd);(function(){a.w={M:function(b){switch(a.a.R(b)){case \"option\":return!0===b.__ko__hasDomDataOptionValue__?\na.a.g.get(b,a.c.options.$b):7>=a.a.W?b.getAttributeNode(\"value\")&&b.getAttributeNode(\"value\").specified?b.value:b.text:b.value;case \"select\":return 0<=b.selectedIndex?a.w.M(b.options[b.selectedIndex]):n;default:return b.value}},cb:function(b,c,d){switch(a.a.R(b)){case \"option\":\"string\"===typeof c?(a.a.g.set(b,a.c.options.$b,n),\"__ko__hasDomDataOptionValue__\"in b&&delete b.__ko__hasDomDataOptionValue__,b.value=c):(a.a.g.set(b,a.c.options.$b,c),b.__ko__hasDomDataOptionValue__=!0,b.value=\"number\"===\ntypeof c?c:\"\");break;case \"select\":if(\"\"===c||null===c)c=n;for(var e=-1,f=0,g=b.options.length,h;f<g;++f)if(h=a.w.M(b.options[f]),h==c||\"\"===h&&c===n){e=f;break}if(d||0<=e||c===n&&1<b.size)b.selectedIndex=e,6===a.a.W&&a.a.setTimeout(function(){b.selectedIndex=e},0);break;default:if(null===c||c===n)c=\"\";b.value=c}}}})();a.b(\"selectExtensions\",a.w);a.b(\"selectExtensions.readValue\",a.w.M);a.b(\"selectExtensions.writeValue\",a.w.cb);a.m=function(){function b(b){b=a.a.Db(b);123===b.charCodeAt(0)&&(b=b.slice(1,\n-1));b+=\"\\n,\";var c=[],d=b.match(e),p,q=[],h=0;if(1<d.length){for(var x=0,B;B=d[x];++x){var u=B.charCodeAt(0);if(44===u){if(0>=h){c.push(p&&q.length?{key:p,value:q.join(\"\")}:{unknown:p||q.join(\"\")});p=h=0;q=[];continue}}else if(58===u){if(!h&&!p&&1===q.length){p=q.pop();continue}}else if(47===u&&1<B.length&&(47===B.charCodeAt(1)||42===B.charCodeAt(1)))continue;else 47===u&&x&&1<B.length?(u=d[x-1].match(f))&&!g[u[0]]&&(b=b.substr(b.indexOf(B)+1),d=b.match(e),x=-1,B=\"\/\"):40===u||123===u||91===u?++h:\n41===u||125===u||93===u?--h:p||q.length||34!==u&&39!==u||(B=B.slice(1,-1));q.push(B)}if(0<h)throw Error(\"Unbalanced parentheses, braces, or brackets\");}return c}var c=[\"true\",\"false\",\"null\",\"undefined\"],d=\/^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$\/i,e=RegExp(\"\\\"(?:\\\\\\\\.|[^\\\"])*\\\"|'(?:\\\\\\\\.|[^'])*'|`(?:\\\\\\\\.|[^`])*`|\/\\\\*(?:[^*]|\\\\*+[^*\/])*\\\\*+\/|\/\/.*\\n|\/(?:\\\\\\\\.|[^\/])+\/w*|[^\\\\s:,\/][^,\\\"'`{}()\/:[\\\\]]*[^\\\\s,\\\"'`{}()\/:[\\\\]]|[^\\\\s]\",\"g\"),f=\/[\\])\"'A-Za-z0-9_$]+$\/,g={\"in\":1,\"return\":1,\"typeof\":1},\nh={};return{Ra:[],wa:h,ac:b,vb:function(e,f){function l(b,e){var f;if(!x){var k=a.getBindingHandler(b);if(k&&k.preprocess&&!(e=k.preprocess(e,b,l)))return;if(k=h[b])f=e,0<=a.a.A(c,f)?f=!1:(k=f.match(d),f=null===k?!1:k[1]?\"Object(\"+k[1]+\")\"+k[2]:f),k=f;k&&q.push(\"'\"+(\"string\"==typeof h[b]?h[b]:b)+\"':function(_z){\"+f+\"=_z}\")}g&&(e=\"function(){return \"+e+\" }\");p.push(\"'\"+b+\"':\"+e)}f=f||{};var p=[],q=[],g=f.valueAccessors,x=f.bindingParams,B=\"string\"===typeof e?b(e):e;a.a.D(B,function(a){l(a.key||a.unknown,\na.value)});q.length&&l(\"_ko_property_writers\",\"{\"+q.join(\",\")+\" }\");return p.join(\",\")},Id:function(a,b){for(var c=0;c<a.length;c++)if(a[c].key==b)return!0;return!1},eb:function(b,c,d,e,f){if(b&&a.O(b))!a.Za(b)||f&&b.v()===e||b(e);else if((b=c.get(\"_ko_property_writers\"))&&b[d])b[d](e)}}}();a.b(\"expressionRewriting\",a.m);a.b(\"expressionRewriting.bindingRewriteValidators\",a.m.Ra);a.b(\"expressionRewriting.parseObjectLiteral\",a.m.ac);a.b(\"expressionRewriting.preProcessBindings\",a.m.vb);a.b(\"expressionRewriting._twoWayBindings\",\na.m.wa);a.b(\"jsonExpressionRewriting\",a.m);a.b(\"jsonExpressionRewriting.insertPropertyAccessorsIntoJson\",a.m.vb);(function(){function b(a){return 8==a.nodeType&&g.test(f?a.text:a.nodeValue)}function c(a){return 8==a.nodeType&&h.test(f?a.text:a.nodeValue)}function d(d,e){for(var f=d,h=1,g=[];f=f.nextSibling;){if(c(f)&&(a.a.g.set(f,k,!0),h--,0===h))return g;g.push(f);b(f)&&h++}if(!e)throw Error(\"Cannot find closing comment tag to match: \"+d.nodeValue);return null}function e(a,b){var c=d(a,b);return c?\n0<c.length?c[c.length-1].nextSibling:a.nextSibling:null}var f=w&&\"\\x3c!--test--\\x3e\"===w.createComment(\"test\").text,g=f?\/^\\x3c!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*--\\x3e$\/:\/^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$\/,h=f?\/^\\x3c!--\\s*\\\/ko\\s*--\\x3e$\/:\/^\\s*\\\/ko\\s*$\/,m={ul:!0,ol:!0},k=\"__ko_matchedEndComment__\";a.h={ea:{},childNodes:function(a){return b(a)?d(a):a.childNodes},Ea:function(c){if(b(c)){c=a.h.childNodes(c);for(var d=0,e=c.length;d<e;d++)a.removeNode(c[d])}else a.a.Tb(c)},va:function(c,d){if(b(c)){a.h.Ea(c);for(var e=\nc.nextSibling,f=0,k=d.length;f<k;f++)e.parentNode.insertBefore(d[f],e)}else a.a.va(c,d)},Vc:function(a,c){var d;b(a)?(d=a.nextSibling,a=a.parentNode):d=a.firstChild;d?c!==d&&a.insertBefore(c,d):a.appendChild(c)},Wb:function(c,d,e){e?(e=e.nextSibling,b(c)&&(c=c.parentNode),e?d!==e&&c.insertBefore(d,e):c.appendChild(d)):a.h.Vc(c,d)},firstChild:function(a){if(b(a))return!a.nextSibling||c(a.nextSibling)?null:a.nextSibling;if(a.firstChild&&c(a.firstChild))throw Error(\"Found invalid end comment, as the first child of \"+\na);return a.firstChild},nextSibling:function(d){b(d)&&(d=e(d));if(d.nextSibling&&c(d.nextSibling)){var f=d.nextSibling;if(c(f)&&!a.a.g.get(f,k))throw Error(\"Found end comment without a matching opening comment, as child of \"+d);return null}return d.nextSibling},Cd:b,Vd:function(a){return(a=(f?a.text:a.nodeValue).match(g))?a[1]:null},Sc:function(d){if(m[a.a.R(d)]){var f=d.firstChild;if(f){do if(1===f.nodeType){var k;k=f.firstChild;var h=null;if(k){do if(h)h.push(k);else if(b(k)){var g=e(k,!0);g?k=\ng:h=[k]}else c(k)&&(h=[k]);while(k=k.nextSibling)}if(k=h)for(h=f.nextSibling,g=0;g<k.length;g++)h?d.insertBefore(k[g],h):d.appendChild(k[g])}while(f=f.nextSibling)}}}}})();a.b(\"virtualElements\",a.h);a.b(\"virtualElements.allowedBindings\",a.h.ea);a.b(\"virtualElements.emptyNode\",a.h.Ea);a.b(\"virtualElements.insertAfter\",a.h.Wb);a.b(\"virtualElements.prepend\",a.h.Vc);a.b(\"virtualElements.setDomNodeChildren\",a.h.va);(function(){a.ga=function(){this.nd={}};a.a.extend(a.ga.prototype,{nodeHasBindings:function(b){switch(b.nodeType){case 1:return null!=\nb.getAttribute(\"data-bind\")||a.j.getComponentNameForNode(b);case 8:return a.h.Cd(b);default:return!1}},getBindings:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b):null;return a.j.tc(d,b,c,!1)},getBindingAccessors:function(b,c){var d=this.getBindingsString(b,c),d=d?this.parseBindingsString(d,c,b,{valueAccessors:!0}):null;return a.j.tc(d,b,c,!0)},getBindingsString:function(b){switch(b.nodeType){case 1:return b.getAttribute(\"data-bind\");case 8:return a.h.Vd(b);default:return null}},\nparseBindingsString:function(b,c,d,e){try{var f=this.nd,g=b+(e&&e.valueAccessors||\"\"),h;if(!(h=f[g])){var m,k=\"with($context){with($data||{}){return{\"+a.m.vb(b,e)+\"}}}\";m=new Function(\"$context\",\"$element\",k);h=f[g]=m}return h(c,d)}catch(l){throw l.message=\"Unable to parse bindings.\\nBindings value: \"+b+\"\\nMessage: \"+l.message,l;}}});a.ga.instance=new a.ga})();a.b(\"bindingProvider\",a.ga);(function(){function b(b){var c=(b=a.a.g.get(b,z))&&b.N;c&&(b.N=null,c.Tc())}function c(c,d,e){this.node=c;this.yc=\nd;this.kb=[];this.H=!1;d.N||a.a.K.za(c,b);e&&e.N&&(e.N.kb.push(c),this.Kb=e)}function d(a){return function(){return a}}function e(a){return a()}function f(b){return a.a.Ga(a.u.G(b),function(a,c){return function(){return b()[c]}})}function g(b,c,e){return\"function\"===typeof b?f(b.bind(null,c,e)):a.a.Ga(b,d)}function h(a,b){return f(this.getBindings.bind(this,a,b))}function m(b,c){var d=a.h.firstChild(c);if(d){var e,f=a.ga.instance,l=f.preprocessNode;if(l){for(;e=d;)d=a.h.nextSibling(e),l.call(f,e);\nd=a.h.firstChild(c)}for(;e=d;)d=a.h.nextSibling(e),k(b,e)}a.i.ma(c,a.i.H)}function k(b,c){var d=b,e=1===c.nodeType;e&&a.h.Sc(c);if(e||a.ga.instance.nodeHasBindings(c))d=p(c,null,b).bindingContextForDescendants;d&&!u[a.a.R(c)]&&m(d,c)}function l(b){var c=[],d={},e=[];a.a.P(b,function ca(f){if(!d[f]){var k=a.getBindingHandler(f);k&&(k.after&&(e.push(f),a.a.D(k.after,function(c){if(b[c]){if(-1!==a.a.A(e,c))throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \"+e.join(\", \"));\nca(c)}}),e.length--),c.push({key:f,Mc:k}));d[f]=!0}});return c}function p(b,c,d){var f=a.a.g.Ub(b,z,{}),k=f.hd;if(!c){if(k)throw Error(\"You cannot apply bindings multiple times to the same element.\");f.hd=!0}k||(f.context=d);f.Zb||(f.Zb={});var g;if(c&&\"function\"!==typeof c)g=c;else{var p=a.ga.instance,q=p.getBindingAccessors||h,m=a.$(function(){if(g=c?c(d,b):q.call(p,b,d)){if(d[t])d[t]();if(d[B])d[B]()}return g},null,{l:b});g&&m.ja()||(m=null)}var x=d,u;if(g){var J=function(){return a.a.Ga(m?m():\ng,e)},r=m?function(a){return function(){return e(m()[a])}}:function(a){return g[a]};J.get=function(a){return g[a]&&e(r(a))};J.has=function(a){return a in g};a.i.H in g&&a.i.subscribe(b,a.i.H,function(){var c=(0,g[a.i.H])();if(c){var d=a.h.childNodes(b);d.length&&c(d,a.Ec(d[0]))}});a.i.pa in g&&(x=a.i.Cb(b,d),a.i.subscribe(b,a.i.pa,function(){var c=(0,g[a.i.pa])();c&&a.h.firstChild(b)&&c(b)}));f=l(g);a.a.D(f,function(c){var d=c.Mc.init,e=c.Mc.update,f=c.key;if(8===b.nodeType&&!a.h.ea[f])throw Error(\"The binding '\"+\nf+\"' cannot be used with virtual elements\");try{\"function\"==typeof d&&a.u.G(function(){var a=d(b,r(f),J,x.$data,x);if(a&&a.controlsDescendantBindings){if(u!==n)throw Error(\"Multiple bindings (\"+u+\" and \"+f+\") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");u=f}}),\"function\"==typeof e&&a.$(function(){e(b,r(f),J,x.$data,x)},null,{l:b})}catch(k){throw k.message='Unable to process binding \"'+f+\": \"+g[f]+'\"\\nMessage: '+k.message,\nk;}})}f=u===n;return{shouldBindDescendants:f,bindingContextForDescendants:f&&x}}function q(b,c){return b&&b instanceof a.fa?b:new a.fa(b,n,n,c)}var t=a.a.Da(\"_subscribable\"),x=a.a.Da(\"_ancestorBindingInfo\"),B=a.a.Da(\"_dataDependency\");a.c={};var u={script:!0,textarea:!0,template:!0};a.getBindingHandler=function(b){return a.c[b]};var J={};a.fa=function(b,c,d,e,f){function k(){var b=p?h():h,f=a.a.f(b);c?(a.a.extend(l,c),x in c&&(l[x]=c[x])):(l.$parents=[],l.$root=f,l.ko=a);l[t]=q;g?f=l.$data:(l.$rawData=\nb,l.$data=f);d&&(l[d]=f);e&&e(l,c,f);if(c&&c[t]&&!a.S.o().Vb(c[t]))c[t]();m&&(l[B]=m);return l.$data}var l=this,g=b===J,h=g?n:b,p=\"function\"==typeof h&&!a.O(h),q,m=f&&f.dataDependency;f&&f.exportDependencies?k():(q=a.xb(k),q.v(),q.ja()?q.equalityComparer=null:l[t]=n)};a.fa.prototype.createChildContext=function(b,c,d,e){!e&&c&&\"object\"==typeof c&&(e=c,c=e.as,d=e.extend);if(c&&e&&e.noChildContext){var f=\"function\"==typeof b&&!a.O(b);return new a.fa(J,this,null,function(a){d&&d(a);a[c]=f?b():b},e)}return new a.fa(b,\nthis,c,function(a,b){a.$parentContext=b;a.$parent=b.$data;a.$parents=(b.$parents||[]).slice(0);a.$parents.unshift(a.$parent);d&&d(a)},e)};a.fa.prototype.extend=function(b,c){return new a.fa(J,this,null,function(c){a.a.extend(c,\"function\"==typeof b?b(c):b)},c)};var z=a.a.g.Z();c.prototype.Tc=function(){this.Kb&&this.Kb.N&&this.Kb.N.sd(this.node)};c.prototype.sd=function(b){a.a.Pa(this.kb,b);!this.kb.length&&this.H&&this.Cc()};c.prototype.Cc=function(){this.H=!0;this.yc.N&&!this.kb.length&&(this.yc.N=\nnull,a.a.K.yb(this.node,b),a.i.ma(this.node,a.i.pa),this.Tc())};a.i={H:\"childrenComplete\",pa:\"descendantsComplete\",subscribe:function(b,c,d,e,f){var k=a.a.g.Ub(b,z,{});k.Fa||(k.Fa=new a.T);f&&f.notifyImmediately&&k.Zb[c]&&a.u.G(d,e,[b]);return k.Fa.subscribe(d,e,c)},ma:function(b,c){var d=a.a.g.get(b,z);if(d&&(d.Zb[c]=!0,d.Fa&&d.Fa.notifySubscribers(b,c),c==a.i.H))if(d.N)d.N.Cc();else if(d.N===n&&d.Fa&&d.Fa.Wa(a.i.pa))throw Error(\"descendantsComplete event not supported for bindings on this node\");\n},Cb:function(b,d){var e=a.a.g.Ub(b,z,{});e.N||(e.N=new c(b,e,d[x]));return d[x]==e?d:d.extend(function(a){a[x]=e})}};a.Td=function(b){return(b=a.a.g.get(b,z))&&b.context};a.ib=function(b,c,d){1===b.nodeType&&a.h.Sc(b);return p(b,c,q(d))};a.ld=function(b,c,d){d=q(d);return a.ib(b,g(c,d,b),d)};a.Oa=function(a,b){1!==b.nodeType&&8!==b.nodeType||m(q(a),b)};a.vc=function(a,b,c){!v&&A.jQuery&&(v=A.jQuery);if(2>arguments.length){if(b=w.body,!b)throw Error(\"ko.applyBindings: could not find document.body; has the document been loaded?\");\n}else if(!b||1!==b.nodeType&&8!==b.nodeType)throw Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");k(q(a,c),b)};a.Dc=function(b){return!b||1!==b.nodeType&&8!==b.nodeType?n:a.Td(b)};a.Ec=function(b){return(b=a.Dc(b))?b.$data:n};a.b(\"bindingHandlers\",a.c);a.b(\"bindingEvent\",a.i);a.b(\"bindingEvent.subscribe\",a.i.subscribe);a.b(\"bindingEvent.startPossiblyAsyncContentBinding\",a.i.Cb);a.b(\"applyBindings\",a.vc);a.b(\"applyBindingsToDescendants\",a.Oa);\na.b(\"applyBindingAccessorsToNode\",a.ib);a.b(\"applyBindingsToNode\",a.ld);a.b(\"contextFor\",a.Dc);a.b(\"dataFor\",a.Ec)})();(function(b){function c(c,e){var k=Object.prototype.hasOwnProperty.call(f,c)?f[c]:b,l;k?k.subscribe(e):(k=f[c]=new a.T,k.subscribe(e),d(c,function(b,d){var e=!(!d||!d.synchronous);g[c]={definition:b,Gd:e};delete f[c];l||e?k.notifySubscribers(b):a.na.zb(function(){k.notifySubscribers(b)})}),l=!0)}function d(a,b){e(\"getConfig\",[a],function(c){c?e(\"loadComponent\",[a,c],function(a){b(a,\nc)}):b(null,null)})}function e(c,d,f,l){l||(l=a.j.loaders.slice(0));var g=l.shift();if(g){var q=g[c];if(q){var t=!1;if(q.apply(g,d.concat(function(a){t?f(null):null!==a?f(a):e(c,d,f,l)}))!==b&&(t=!0,!g.suppressLoaderExceptions))throw Error(\"Component loaders must supply values by invoking the callback, not by returning values synchronously.\");}else e(c,d,f,l)}else f(null)}var f={},g={};a.j={get:function(d,e){var f=Object.prototype.hasOwnProperty.call(g,d)?g[d]:b;f?f.Gd?a.u.G(function(){e(f.definition)}):\na.na.zb(function(){e(f.definition)}):c(d,e)},Bc:function(a){delete g[a]},oc:e};a.j.loaders=[];a.b(\"components\",a.j);a.b(\"components.get\",a.j.get);a.b(\"components.clearCachedDefinition\",a.j.Bc)})();(function(){function b(b,c,d,e){function g(){0===--B&&e(h)}var h={},B=2,u=d.template;d=d.viewModel;u?f(c,u,function(c){a.j.oc(\"loadTemplate\",[b,c],function(a){h.template=a;g()})}):g();d?f(c,d,function(c){a.j.oc(\"loadViewModel\",[b,c],function(a){h[m]=a;g()})}):g()}function c(a,b,d){if(\"function\"===typeof b)d(function(a){return new b(a)});\nelse if(\"function\"===typeof b[m])d(b[m]);else if(\"instance\"in b){var e=b.instance;d(function(){return e})}else\"viewModel\"in b?c(a,b.viewModel,d):a(\"Unknown viewModel value: \"+b)}function d(b){switch(a.a.R(b)){case \"script\":return a.a.ua(b.text);case \"textarea\":return a.a.ua(b.value);case \"template\":if(e(b.content))return a.a.Ca(b.content.childNodes)}return a.a.Ca(b.childNodes)}function e(a){return A.DocumentFragment?a instanceof DocumentFragment:a&&11===a.nodeType}function f(a,b,c){\"string\"===typeof b.require?\nT||A.require?(T||A.require)([b.require],function(a){a&&\"object\"===typeof a&&a.Xd&&a[\"default\"]&&(a=a[\"default\"]);c(a)}):a(\"Uses require, but no AMD loader is present\"):c(b)}function g(a){return function(b){throw Error(\"Component '\"+a+\"': \"+b);}}var h={};a.j.register=function(b,c){if(!c)throw Error(\"Invalid configuration for \"+b);if(a.j.tb(b))throw Error(\"Component \"+b+\" is already registered\");h[b]=c};a.j.tb=function(a){return Object.prototype.hasOwnProperty.call(h,a)};a.j.unregister=function(b){delete h[b];\na.j.Bc(b)};a.j.Fc={getConfig:function(b,c){c(a.j.tb(b)?h[b]:null)},loadComponent:function(a,c,d){var e=g(a);f(e,c,function(c){b(a,e,c,d)})},loadTemplate:function(b,c,f){b=g(b);if(\"string\"===typeof c)f(a.a.ua(c));else if(c instanceof Array)f(c);else if(e(c))f(a.a.la(c.childNodes));else if(c.element)if(c=c.element,A.HTMLElement?c instanceof HTMLElement:c&&c.tagName&&1===c.nodeType)f(d(c));else if(\"string\"===typeof c){var h=w.getElementById(c);h?f(d(h)):b(\"Cannot find element with ID \"+c)}else b(\"Unknown element type: \"+\nc);else b(\"Unknown template value: \"+c)},loadViewModel:function(a,b,d){c(g(a),b,d)}};var m=\"createViewModel\";a.b(\"components.register\",a.j.register);a.b(\"components.isRegistered\",a.j.tb);a.b(\"components.unregister\",a.j.unregister);a.b(\"components.defaultLoader\",a.j.Fc);a.j.loaders.push(a.j.Fc);a.j.dd=h})();(function(){function b(b,e){var f=b.getAttribute(\"params\");if(f){var f=c.parseBindingsString(f,e,b,{valueAccessors:!0,bindingParams:!0}),f=a.a.Ga(f,function(c){return a.o(c,null,{l:b})}),g=a.a.Ga(f,\nfunction(c){var e=c.v();return c.ja()?a.o({read:function(){return a.a.f(c())},write:a.Za(e)&&function(a){c()(a)},l:b}):e});Object.prototype.hasOwnProperty.call(g,\"$raw\")||(g.$raw=f);return g}return{$raw:{}}}a.j.getComponentNameForNode=function(b){var c=a.a.R(b);if(a.j.tb(c)&&(-1!=c.indexOf(\"-\")||\"[object HTMLUnknownElement]\"==\"\"+b||8>=a.a.W&&b.tagName===c))return c};a.j.tc=function(c,e,f,g){if(1===e.nodeType){var h=a.j.getComponentNameForNode(e);if(h){c=c||{};if(c.component)throw Error('Cannot use the \"component\" binding on a custom element matching a component');\nvar m={name:h,params:b(e,f)};c.component=g?function(){return m}:m}}return c};var c=new a.ga;9>a.a.W&&(a.j.register=function(a){return function(b){return a.apply(this,arguments)}}(a.j.register),w.createDocumentFragment=function(b){return function(){var c=b(),f=a.j.dd,g;for(g in f);return c}}(w.createDocumentFragment))})();(function(){function b(b,c,d){c=c.template;if(!c)throw Error(\"Component '\"+b+\"' has no template\");b=a.a.Ca(c);a.h.va(d,b)}function c(a,b,c){var d=a.createViewModel;return d?d.call(a,\nb,c):b}var d=0;a.c.component={init:function(e,f,g,h,m){function k(){var a=l&&l.dispose;\"function\"===typeof a&&a.call(l);q&&q.s();p=l=q=null}var l,p,q,t=a.a.la(a.h.childNodes(e));a.h.Ea(e);a.a.K.za(e,k);a.o(function(){var g=a.a.f(f()),h,u;\"string\"===typeof g?h=g:(h=a.a.f(g.name),u=a.a.f(g.params));if(!h)throw Error(\"No component name specified\");var n=a.i.Cb(e,m),z=p=++d;a.j.get(h,function(d){if(p===z){k();if(!d)throw Error(\"Unknown component '\"+h+\"'\");b(h,d,e);var f=c(d,u,{element:e,templateNodes:t});\nd=n.createChildContext(f,{extend:function(a){a.$component=f;a.$componentTemplateNodes=t}});f&&f.koDescendantsComplete&&(q=a.i.subscribe(e,a.i.pa,f.koDescendantsComplete,f));l=f;a.Oa(d,e)}})},null,{l:e});return{controlsDescendantBindings:!0}}};a.h.ea.component=!0})();var V={\"class\":\"className\",\"for\":\"htmlFor\"};a.c.attr={update:function(b,c){var d=a.a.f(c())||{};a.a.P(d,function(c,d){d=a.a.f(d);var g=c.indexOf(\":\"),g=\"lookupNamespaceURI\"in b&&0<g&&b.lookupNamespaceURI(c.substr(0,g)),h=!1===d||null===\nd||d===n;h?g?b.removeAttributeNS(g,c):b.removeAttribute(c):d=d.toString();8>=a.a.W&&c in V?(c=V[c],h?b.removeAttribute(c):b[c]=d):h||(g?b.setAttributeNS(g,c,d):b.setAttribute(c,d));\"name\"===c&&a.a.Yc(b,h?\"\":d)})}};(function(){a.c.checked={after:[\"value\",\"attr\"],init:function(b,c,d){function e(){var e=b.checked,f=g();if(!a.S.Ya()&&(e||!m&&!a.S.qa())){var k=a.u.G(c);if(l){var q=p?k.v():k,z=t;t=f;z!==f?e&&(a.a.Na(q,f,!0),a.a.Na(q,z,!1)):a.a.Na(q,f,e);p&&a.Za(k)&&k(q)}else h&&(f===n?f=e:e||(f=n)),a.m.eb(k,\nd,\"checked\",f,!0)}}function f(){var d=a.a.f(c()),e=g();l?(b.checked=0<=a.a.A(d,e),t=e):b.checked=h&&e===n?!!d:g()===d}var g=a.xb(function(){if(d.has(\"checkedValue\"))return a.a.f(d.get(\"checkedValue\"));if(q)return d.has(\"value\")?a.a.f(d.get(\"value\")):b.value}),h=\"checkbox\"==b.type,m=\"radio\"==b.type;if(h||m){var k=c(),l=h&&a.a.f(k)instanceof Array,p=!(l&&k.push&&k.splice),q=m||l,t=l?g():n;m&&!b.name&&a.c.uniqueName.init(b,function(){return!0});a.o(e,null,{l:b});a.a.B(b,\"click\",e);a.o(f,null,{l:b});\nk=n}}};a.m.wa.checked=!0;a.c.checkedValue={update:function(b,c){b.value=a.a.f(c())}}})();a.c[\"class\"]={update:function(b,c){var d=a.a.Db(a.a.f(c()));a.a.Eb(b,b.__ko__cssValue,!1);b.__ko__cssValue=d;a.a.Eb(b,d,!0)}};a.c.css={update:function(b,c){var d=a.a.f(c());null!==d&&\"object\"==typeof d?a.a.P(d,function(c,d){d=a.a.f(d);a.a.Eb(b,c,d)}):a.c[\"class\"].update(b,c)}};a.c.enable={update:function(b,c){var d=a.a.f(c());d&&b.disabled?b.removeAttribute(\"disabled\"):d||b.disabled||(b.disabled=!0)}};a.c.disable=\n{update:function(b,c){a.c.enable.update(b,function(){return!a.a.f(c())})}};a.c.event={init:function(b,c,d,e,f){var g=c()||{};a.a.P(g,function(g){\"string\"==typeof g&&a.a.B(b,g,function(b){var k,l=c()[g];if(l){try{var p=a.a.la(arguments);e=f.$data;p.unshift(e);k=l.apply(e,p)}finally{!0!==k&&(b.preventDefault?b.preventDefault():b.returnValue=!1)}!1===d.get(g+\"Bubble\")&&(b.cancelBubble=!0,b.stopPropagation&&b.stopPropagation())}})})}};a.c.foreach={Rc:function(b){return function(){var c=b(),d=a.a.bc(c);\nif(!d||\"number\"==typeof d.length)return{foreach:c,templateEngine:a.ba.Ma};a.a.f(c);return{foreach:d.data,as:d.as,noChildContext:d.noChildContext,includeDestroyed:d.includeDestroyed,afterAdd:d.afterAdd,beforeRemove:d.beforeRemove,afterRender:d.afterRender,beforeMove:d.beforeMove,afterMove:d.afterMove,templateEngine:a.ba.Ma}}},init:function(b,c){return a.c.template.init(b,a.c.foreach.Rc(c))},update:function(b,c,d,e,f){return a.c.template.update(b,a.c.foreach.Rc(c),d,e,f)}};a.m.Ra.foreach=!1;a.h.ea.foreach=\n!0;a.c.hasfocus={init:function(b,c,d){function e(e){b.__ko_hasfocusUpdating=!0;var f=b.ownerDocument;if(\"activeElement\"in f){var g;try{g=f.activeElement}catch(l){g=f.body}e=g===b}f=c();a.m.eb(f,d,\"hasfocus\",e,!0);b.__ko_hasfocusLastValue=e;b.__ko_hasfocusUpdating=!1}var f=e.bind(null,!0),g=e.bind(null,!1);a.a.B(b,\"focus\",f);a.a.B(b,\"focusin\",f);a.a.B(b,\"blur\",g);a.a.B(b,\"focusout\",g);b.__ko_hasfocusLastValue=!1},update:function(b,c){var d=!!a.a.f(c());b.__ko_hasfocusUpdating||b.__ko_hasfocusLastValue===\nd||(d?b.focus():b.blur(),!d&&b.__ko_hasfocusLastValue&&b.ownerDocument.body.focus(),a.u.G(a.a.Fb,null,[b,d?\"focusin\":\"focusout\"]))}};a.m.wa.hasfocus=!0;a.c.hasFocus=a.c.hasfocus;a.m.wa.hasFocus=\"hasfocus\";a.c.html={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.fc(b,c())}};(function(){function b(b,d,e){a.c[b]={init:function(b,c,h,m,k){var l,p,q={},t,x,n;if(d){m=h.get(\"as\");var u=h.get(\"noChildContext\");n=!(m&&u);q={as:m,noChildContext:u,exportDependencies:n}}x=(t=\n\"render\"==h.get(\"completeOn\"))||h.has(a.i.pa);a.o(function(){var h=a.a.f(c()),m=!e!==!h,u=!p,r;if(n||m!==l){x&&(k=a.i.Cb(b,k));if(m){if(!d||n)q.dataDependency=a.S.o();r=d?k.createChildContext(\"function\"==typeof h?h:c,q):a.S.qa()?k.extend(null,q):k}u&&a.S.qa()&&(p=a.a.Ca(a.h.childNodes(b),!0));m?(u||a.h.va(b,a.a.Ca(p)),a.Oa(r,b)):(a.h.Ea(b),t||a.i.ma(b,a.i.H));l=m}},null,{l:b});return{controlsDescendantBindings:!0}}};a.m.Ra[b]=!1;a.h.ea[b]=!0}b(\"if\");b(\"ifnot\",!1,!0);b(\"with\",!0)})();a.c.let={init:function(b,\nc,d,e,f){c=f.extend(c);a.Oa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.let=!0;var Q={};a.c.options={init:function(b){if(\"select\"!==a.a.R(b))throw Error(\"options binding applies only to SELECT elements\");for(;0<b.length;)b.remove(0);return{controlsDescendantBindings:!0}},update:function(b,c,d){function e(){return a.a.jb(b.options,function(a){return a.selected})}function f(a,b,c){var d=typeof b;return\"function\"==d?b(a):\"string\"==d?a[b]:c}function g(c,d){if(x&&l)a.i.ma(b,a.i.H);else if(t.length){var e=\n0<=a.a.A(t,a.w.M(d[0]));a.a.Zc(d[0],e);x&&!e&&a.u.G(a.a.Fb,null,[b,\"change\"])}}var h=b.multiple,m=0!=b.length&&h?b.scrollTop:null,k=a.a.f(c()),l=d.get(\"valueAllowUnset\")&&d.has(\"value\"),p=d.get(\"optionsIncludeDestroyed\");c={};var q,t=[];l||(h?t=a.a.Mb(e(),a.w.M):0<=b.selectedIndex&&t.push(a.w.M(b.options[b.selectedIndex])));k&&(\"undefined\"==typeof k.length&&(k=[k]),q=a.a.jb(k,function(b){return p||b===n||null===b||!a.a.f(b._destroy)}),d.has(\"optionsCaption\")&&(k=a.a.f(d.get(\"optionsCaption\")),null!==\nk&&k!==n&&q.unshift(Q)));var x=!1;c.beforeRemove=function(a){b.removeChild(a)};k=g;d.has(\"optionsAfterRender\")&&\"function\"==typeof d.get(\"optionsAfterRender\")&&(k=function(b,c){g(0,c);a.u.G(d.get(\"optionsAfterRender\"),null,[c[0],b!==Q?b:n])});a.a.ec(b,q,function(c,e,g){g.length&&(t=!l&&g[0].selected?[a.w.M(g[0])]:[],x=!0);e=b.ownerDocument.createElement(\"option\");c===Q?(a.a.Bb(e,d.get(\"optionsCaption\")),a.w.cb(e,n)):(g=f(c,d.get(\"optionsValue\"),c),a.w.cb(e,a.a.f(g)),c=f(c,d.get(\"optionsText\"),g),\na.a.Bb(e,c));return[e]},c,k);if(!l){var B;h?B=t.length&&e().length<t.length:B=t.length&&0<=b.selectedIndex?a.w.M(b.options[b.selectedIndex])!==t[0]:t.length||0<=b.selectedIndex;B&&a.u.G(a.a.Fb,null,[b,\"change\"])}(l||a.S.Ya())&&a.i.ma(b,a.i.H);a.a.wd(b);m&&20<Math.abs(m-b.scrollTop)&&(b.scrollTop=m)}};a.c.options.$b=a.a.g.Z();a.c.selectedOptions={init:function(b,c,d){function e(){var e=c(),f=[];a.a.D(b.getElementsByTagName(\"option\"),function(b){b.selected&&f.push(a.w.M(b))});a.m.eb(e,d,\"selectedOptions\",\nf)}function f(){var d=a.a.f(c()),e=b.scrollTop;d&&\"number\"==typeof d.length&&a.a.D(b.getElementsByTagName(\"option\"),function(b){var c=0<=a.a.A(d,a.w.M(b));b.selected!=c&&a.a.Zc(b,c)});b.scrollTop=e}if(\"select\"!=a.a.R(b))throw Error(\"selectedOptions binding applies only to SELECT elements\");var g;a.i.subscribe(b,a.i.H,function(){g?e():(a.a.B(b,\"change\",e),g=a.o(f,null,{l:b}))},null,{notifyImmediately:!0})},update:function(){}};a.m.wa.selectedOptions=!0;a.c.style={update:function(b,c){var d=a.a.f(c()||\n{});a.a.P(d,function(c,d){d=a.a.f(d);if(null===d||d===n||!1===d)d=\"\";if(v)v(b).css(c,d);else if(\/^--\/.test(c))b.style.setProperty(c,d);else{c=c.replace(\/-(\\w)\/g,function(a,b){return b.toUpperCase()});var g=b.style[c];b.style[c]=d;d===g||b.style[c]!=g||isNaN(d)||(b.style[c]=d+\"px\")}})}};a.c.submit={init:function(b,c,d,e,f){if(\"function\"!=typeof c())throw Error(\"The value for a submit binding must be a function\");a.a.B(b,\"submit\",function(a){var d,e=c();try{d=e.call(f.$data,b)}finally{!0!==d&&(a.preventDefault?\na.preventDefault():a.returnValue=!1)}})}};a.c.text={init:function(){return{controlsDescendantBindings:!0}},update:function(b,c){a.a.Bb(b,c())}};a.h.ea.text=!0;(function(){if(A&&A.navigator){var b=function(a){if(a)return parseFloat(a[1])},c=A.navigator.userAgent,d,e,f,g,h;(d=A.opera&&A.opera.version&&parseInt(A.opera.version()))||(h=b(c.match(\/Edge\\\/([^ ]+)$\/)))||b(c.match(\/Chrome\\\/([^ ]+)\/))||(e=b(c.match(\/Version\\\/([^ ]+) Safari\/)))||(f=b(c.match(\/Firefox\\\/([^ ]+)\/)))||(g=a.a.W||b(c.match(\/MSIE ([^ ]+)\/)))||\n(g=b(c.match(\/rv:([^ )]+)\/)))}if(8<=g&&10>g)var m=a.a.g.Z(),k=a.a.g.Z(),l=function(b){var c=this.activeElement;(c=c&&a.a.g.get(c,k))&&c(b)},p=function(b,c){var d=b.ownerDocument;a.a.g.get(d,m)||(a.a.g.set(d,m,!0),a.a.B(d,\"selectionchange\",l));a.a.g.set(b,k,c)};a.c.textInput={init:function(b,c,k){function l(c,d){a.a.B(b,c,d)}function m(){var d=a.a.f(c());if(null===d||d===n)d=\"\";L!==n&&d===L?a.a.setTimeout(m,4):b.value!==d&&(y=!0,b.value=d,y=!1,v=b.value)}function r(){w||(L=b.value,w=a.a.setTimeout(z,\n4))}function z(){clearTimeout(w);L=w=n;var d=b.value;v!==d&&(v=d,a.m.eb(c(),k,\"textInput\",d))}var v=b.value,w,L,A=9==a.a.W?r:z,y=!1;g&&l(\"keypress\",z);11>g&&l(\"propertychange\",function(a){y||\"value\"!==a.propertyName||A(a)});8==g&&(l(\"keyup\",z),l(\"keydown\",z));p&&(p(b,A),l(\"dragend\",r));(!g||9<=g)&&l(\"input\",A);5>e&&\"textarea\"===a.a.R(b)?(l(\"keydown\",r),l(\"paste\",r),l(\"cut\",r)):11>d?l(\"keydown\",r):4>f?(l(\"DOMAutoComplete\",z),l(\"dragdrop\",z),l(\"drop\",z)):h&&\"number\"===b.type&&l(\"keydown\",r);l(\"change\",\nz);l(\"blur\",z);a.o(m,null,{l:b})}};a.m.wa.textInput=!0;a.c.textinput={preprocess:function(a,b,c){c(\"textInput\",a)}}})();a.c.uniqueName={init:function(b,c){if(c()){var d=\"ko_unique_\"+ ++a.c.uniqueName.rd;a.a.Yc(b,d)}}};a.c.uniqueName.rd=0;a.c.using={init:function(b,c,d,e,f){var g;d.has(\"as\")&&(g={as:d.get(\"as\"),noChildContext:d.get(\"noChildContext\")});c=f.createChildContext(c,g);a.Oa(c,b);return{controlsDescendantBindings:!0}}};a.h.ea.using=!0;a.c.value={init:function(b,c,d){var e=a.a.R(b),f=\"input\"==\ne;if(!f||\"checkbox\"!=b.type&&\"radio\"!=b.type){var g=[],h=d.get(\"valueUpdate\"),m=!1,k=null;h&&(\"string\"==typeof h?g=[h]:g=a.a.wc(h),a.a.Pa(g,\"change\"));var l=function(){k=null;m=!1;var e=c(),f=a.w.M(b);a.m.eb(e,d,\"value\",f)};!a.a.W||!f||\"text\"!=b.type||\"off\"==b.autocomplete||b.form&&\"off\"==b.form.autocomplete||-1!=a.a.A(g,\"propertychange\")||(a.a.B(b,\"propertychange\",function(){m=!0}),a.a.B(b,\"focus\",function(){m=!1}),a.a.B(b,\"blur\",function(){m&&l()}));a.a.D(g,function(c){var d=l;a.a.Ud(c,\"after\")&&\n(d=function(){k=a.w.M(b);a.a.setTimeout(l,0)},c=c.substring(5));a.a.B(b,c,d)});var p;p=f&&\"file\"==b.type?function(){var d=a.a.f(c());null===d||d===n||\"\"===d?b.value=\"\":a.u.G(l)}:function(){var f=a.a.f(c()),g=a.w.M(b);if(null!==k&&f===k)a.a.setTimeout(p,0);else if(f!==g||g===n)\"select\"===e?(g=d.get(\"valueAllowUnset\"),a.w.cb(b,f,g),g||f===a.w.M(b)||a.u.G(l)):a.w.cb(b,f)};if(\"select\"===e){var q;a.i.subscribe(b,a.i.H,function(){q?d.get(\"valueAllowUnset\")?p():l():(a.a.B(b,\"change\",l),q=a.o(p,null,{l:b}))},\nnull,{notifyImmediately:!0})}else a.a.B(b,\"change\",l),a.o(p,null,{l:b})}else a.ib(b,{checkedValue:c})},update:function(){}};a.m.wa.value=!0;a.c.visible={update:function(b,c){var d=a.a.f(c()),e=\"none\"!=b.style.display;d&&!e?b.style.display=\"\":!d&&e&&(b.style.display=\"none\")}};a.c.hidden={update:function(b,c){a.c.visible.update(b,function(){return!a.a.f(c())})}};(function(b){a.c[b]={init:function(c,d,e,f,g){return a.c.event.init.call(this,c,function(){var a={};a[b]=d();return a},e,f,g)}}})(\"click\");\na.ca=function(){};a.ca.prototype.renderTemplateSource=function(){throw Error(\"Override renderTemplateSource\");};a.ca.prototype.createJavaScriptEvaluatorBlock=function(){throw Error(\"Override createJavaScriptEvaluatorBlock\");};a.ca.prototype.makeTemplateSource=function(b,c){if(\"string\"==typeof b){c=c||w;var d=c.getElementById(b);if(!d)throw Error(\"Cannot find template with ID \"+b);return new a.C.F(d)}if(1==b.nodeType||8==b.nodeType)return new a.C.ia(b);throw Error(\"Unknown template type: \"+b);};a.ca.prototype.renderTemplate=\nfunction(a,c,d,e){a=this.makeTemplateSource(a,e);return this.renderTemplateSource(a,c,d,e)};a.ca.prototype.isTemplateRewritten=function(a,c){return!1===this.allowTemplateRewriting?!0:this.makeTemplateSource(a,c).data(\"isRewritten\")};a.ca.prototype.rewriteTemplate=function(a,c,d){a=this.makeTemplateSource(a,d);c=c(a.text());a.text(c);a.data(\"isRewritten\",!0)};a.b(\"templateEngine\",a.ca);a.kc=function(){function b(b,c,d,h){b=a.m.ac(b);for(var m=a.m.Ra,k=0;k<b.length;k++){var l=b[k].key;if(Object.prototype.hasOwnProperty.call(m,\nl)){var p=m[l];if(\"function\"===typeof p){if(l=p(b[k].value))throw Error(l);}else if(!p)throw Error(\"This template engine does not support the '\"+l+\"' binding within its templates\");}}d=\"ko.__tr_ambtns(function($context,$element){return(function(){return{ \"+a.m.vb(b,{valueAccessors:!0})+\" } })()},'\"+d.toLowerCase()+\"')\";return h.createJavaScriptEvaluatorBlock(d)+c}var c=\/(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3\/gi,\nd=\/\\x3c!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*--\\x3e\/g;return{xd:function(b,c,d){c.isTemplateRewritten(b,d)||c.rewriteTemplate(b,function(b){return a.kc.Ld(b,c)},d)},Ld:function(a,f){return a.replace(c,function(a,c,d,e,l){return b(l,c,d,f)}).replace(d,function(a,c){return b(c,\"\\x3c!-- ko --\\x3e\",\"#comment\",f)})},md:function(b,c){return a.aa.Xb(function(d,h){var m=d.nextSibling;m&&m.nodeName.toLowerCase()===c&&a.ib(m,b,h)})}}}();a.b(\"__tr_ambtns\",a.kc.md);(function(){a.C={};a.C.F=function(b){if(this.F=b){var c=\na.a.R(b);this.ab=\"script\"===c?1:\"textarea\"===c?2:\"template\"==c&&b.content&&11===b.content.nodeType?3:4}};a.C.F.prototype.text=function(){var b=1===this.ab?\"text\":2===this.ab?\"value\":\"innerHTML\";if(0==arguments.length)return this.F[b];var c=arguments[0];\"innerHTML\"===b?a.a.fc(this.F,c):this.F[b]=c};var b=a.a.g.Z()+\"_\";a.C.F.prototype.data=function(c){if(1===arguments.length)return a.a.g.get(this.F,b+c);a.a.g.set(this.F,b+c,arguments[1])};var c=a.a.g.Z();a.C.F.prototype.nodes=function(){var b=this.F;\nif(0==arguments.length){var e=a.a.g.get(b,c)||{},f=e.lb||(3===this.ab?b.content:4===this.ab?b:n);if(!f||e.jd){var g=this.text();g&&g!==e.bb&&(f=a.a.Md(g,b.ownerDocument),a.a.g.set(b,c,{lb:f,bb:g,jd:!0}))}return f}e=arguments[0];this.ab!==n&&this.text(\"\");a.a.g.set(b,c,{lb:e})};a.C.ia=function(a){this.F=a};a.C.ia.prototype=new a.C.F;a.C.ia.prototype.constructor=a.C.ia;a.C.ia.prototype.text=function(){if(0==arguments.length){var b=a.a.g.get(this.F,c)||{};b.bb===n&&b.lb&&(b.bb=b.lb.innerHTML);return b.bb}a.a.g.set(this.F,\nc,{bb:arguments[0]})};a.b(\"templateSources\",a.C);a.b(\"templateSources.domElement\",a.C.F);a.b(\"templateSources.anonymousTemplate\",a.C.ia)})();(function(){function b(b,c,d){var e;for(c=a.h.nextSibling(c);b&&(e=b)!==c;)b=a.h.nextSibling(e),d(e,b)}function c(c,d){if(c.length){var e=c[0],f=c[c.length-1],g=e.parentNode,h=a.ga.instance,m=h.preprocessNode;if(m){b(e,f,function(a,b){var c=a.previousSibling,d=m.call(h,a);d&&(a===e&&(e=d[0]||b),a===f&&(f=d[d.length-1]||c))});c.length=0;if(!e)return;e===f?c.push(e):\n(c.push(e,f),a.a.Ua(c,g))}b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.vc(d,b)});b(e,f,function(b){1!==b.nodeType&&8!==b.nodeType||a.aa.cd(b,[d])});a.a.Ua(c,g)}}function d(a){return a.nodeType?a:0<a.length?a[0]:null}function e(b,e,f,h,m){m=m||{};var n=(b&&d(b)||f||{}).ownerDocument,B=m.templateEngine||g;a.kc.xd(f,B,n);f=B.renderTemplate(f,h,m,n);if(\"number\"!=typeof f.length||0<f.length&&\"number\"!=typeof f[0].nodeType)throw Error(\"Template engine must return an array of DOM nodes\");n=!1;switch(e){case \"replaceChildren\":a.h.va(b,\nf);n=!0;break;case \"replaceNode\":a.a.Xc(b,f);n=!0;break;case \"ignoreTargetNode\":break;default:throw Error(\"Unknown renderMode: \"+e);}n&&(c(f,h),m.afterRender&&a.u.G(m.afterRender,null,[f,h[m.as||\"$data\"]]),\"replaceChildren\"==e&&a.i.ma(b,a.i.H));return f}function f(b,c,d){return a.O(b)?b():\"function\"===typeof b?b(c,d):b}var g;a.gc=function(b){if(b!=n&&!(b instanceof a.ca))throw Error(\"templateEngine must inherit from ko.templateEngine\");g=b};a.dc=function(b,c,h,m,t){h=h||{};if((h.templateEngine||g)==\nn)throw Error(\"Set a template engine before calling renderTemplate\");t=t||\"replaceChildren\";if(m){var x=d(m);return a.$(function(){var g=c&&c instanceof a.fa?c:new a.fa(c,null,null,null,{exportDependencies:!0}),n=f(b,g.$data,g),g=e(m,t,n,g,h);\"replaceNode\"==t&&(m=g,x=d(m))},null,{Sa:function(){return!x||!a.a.Sb(x)},l:x&&\"replaceNode\"==t?x.parentNode:x})}return a.aa.Xb(function(d){a.dc(b,c,h,d,\"replaceNode\")})};a.Qd=function(b,d,g,h,m){function x(b,c){a.u.G(a.a.ec,null,[h,b,u,g,r,c]);a.i.ma(h,a.i.H)}\nfunction r(a,b){c(b,v);g.afterRender&&g.afterRender(b,a);v=null}function u(a,c){v=m.createChildContext(a,{as:z,noChildContext:g.noChildContext,extend:function(a){a.$index=c;z&&(a[z+\"Index\"]=c)}});var d=f(b,a,v);return e(h,\"ignoreTargetNode\",d,v,g)}var v,z=g.as,w=!1===g.includeDestroyed||a.options.foreachHidesDestroyed&&!g.includeDestroyed;if(w||g.beforeRemove||!a.Pc(d))return a.$(function(){var b=a.a.f(d)||[];\"undefined\"==typeof b.length&&(b=[b]);w&&(b=a.a.jb(b,function(b){return b===n||null===b||\n!a.a.f(b._destroy)}));x(b)},null,{l:h});x(d.v());var A=d.subscribe(function(a){x(d(),a)},null,\"arrayChange\");A.l(h);return A};var h=a.a.g.Z(),m=a.a.g.Z();a.c.template={init:function(b,c){var d=a.a.f(c());if(\"string\"==typeof d||\"name\"in d)a.h.Ea(b);else if(\"nodes\"in d){d=d.nodes||[];if(a.O(d))throw Error('The \"nodes\" option must be a plain, non-observable array.');var e=d[0]&&d[0].parentNode;e&&a.a.g.get(e,m)||(e=a.a.Yb(d),a.a.g.set(e,m,!0));(new a.C.ia(b)).nodes(e)}else if(d=a.h.childNodes(b),0<d.length)e=\na.a.Yb(d),(new a.C.ia(b)).nodes(e);else throw Error(\"Anonymous template defined, but no template content was provided\");return{controlsDescendantBindings:!0}},update:function(b,c,d,e,f){var g=c();c=a.a.f(g);d=!0;e=null;\"string\"==typeof c?c={}:(g=\"name\"in c?c.name:b,\"if\"in c&&(d=a.a.f(c[\"if\"])),d&&\"ifnot\"in c&&(d=!a.a.f(c.ifnot)),d&&!g&&(d=!1));\"foreach\"in c?e=a.Qd(g,d&&c.foreach||[],c,b,f):d?(d=f,\"data\"in c&&(d=f.createChildContext(c.data,{as:c.as,noChildContext:c.noChildContext,exportDependencies:!0})),\ne=a.dc(g,d,c,b)):a.h.Ea(b);f=e;(c=a.a.g.get(b,h))&&\"function\"==typeof c.s&&c.s();a.a.g.set(b,h,!f||f.ja&&!f.ja()?n:f)}};a.m.Ra.template=function(b){b=a.m.ac(b);return 1==b.length&&b[0].unknown||a.m.Id(b,\"name\")?null:\"This template engine does not support anonymous templates nested within its templates\"};a.h.ea.template=!0})();a.b(\"setTemplateEngine\",a.gc);a.b(\"renderTemplate\",a.dc);a.a.Kc=function(a,c,d){if(a.length&&c.length){var e,f,g,h,m;for(e=f=0;(!d||e<d)&&(h=a[f]);++f){for(g=0;m=c[g];++g)if(h.value===\nm.value){h.moved=m.index;m.moved=h.index;c.splice(g,1);e=g=0;break}e+=g}}};a.a.Pb=function(){function b(b,d,e,f,g){var h=Math.min,m=Math.max,k=[],l,p=b.length,q,n=d.length,r=n-p||1,v=p+n+1,u,w,z;for(l=0;l<=p;l++)for(w=u,k.push(u=[]),z=h(n,l+r),q=m(0,l-1);q<=z;q++)u[q]=q?l?b[l-1]===d[q-1]?w[q-1]:h(w[q]||v,u[q-1]||v)+1:q+1:l+1;h=[];m=[];r=[];l=p;for(q=n;l||q;)n=k[l][q]-1,q&&n===k[l][q-1]?m.push(h[h.length]={status:e,value:d[--q],index:q}):l&&n===k[l-1][q]?r.push(h[h.length]={status:f,value:b[--l],index:l}):\n(--q,--l,g.sparse||h.push({status:\"retained\",value:d[q]}));a.a.Kc(r,m,!g.dontLimitMoves&&10*p);return h.reverse()}return function(a,d,e){e=\"boolean\"===typeof e?{dontLimitMoves:e}:e||{};a=a||[];d=d||[];return a.length<d.length?b(a,d,\"added\",\"deleted\",e):b(d,a,\"deleted\",\"added\",e)}}();a.b(\"utils.compareArrays\",a.a.Pb);(function(){function b(b,c,d,h,m){var k=[],l=a.$(function(){var l=c(d,m,a.a.Ua(k,b))||[];0<k.length&&(a.a.Xc(k,l),h&&a.u.G(h,null,[d,l,m]));k.length=0;a.a.Nb(k,l)},null,{l:b,Sa:function(){return!a.a.kd(k)}});\nreturn{Y:k,$:l.ja()?l:n}}var c=a.a.g.Z(),d=a.a.g.Z();a.a.ec=function(e,f,g,h,m,k){function l(b){y={Aa:b,pb:a.ta(w++)};v.push(y);r||F.push(y)}function p(b){y=t[b];w!==y.pb.v()&&D.push(y);y.pb(w++);a.a.Ua(y.Y,e);v.push(y)}function q(b,c){if(b)for(var d=0,e=c.length;d<e;d++)a.a.D(c[d].Y,function(a){b(a,d,c[d].Aa)})}f=f||[];\"undefined\"==typeof f.length&&(f=[f]);h=h||{};var t=a.a.g.get(e,c),r=!t,v=[],u=0,w=0,z=[],A=[],C=[],D=[],F=[],y,I=0;if(r)a.a.D(f,l);else{if(!k||t&&t._countWaitingForRemove){var E=\na.a.Mb(t,function(a){return a.Aa});k=a.a.Pb(E,f,{dontLimitMoves:h.dontLimitMoves,sparse:!0})}for(var E=0,G,H,K;G=k[E];E++)switch(H=G.moved,K=G.index,G.status){case \"deleted\":for(;u<K;)p(u++);H===n&&(y=t[u],y.$&&(y.$.s(),y.$=n),a.a.Ua(y.Y,e).length&&(h.beforeRemove&&(v.push(y),I++,y.Aa===d?y=null:C.push(y)),y&&z.push.apply(z,y.Y)));u++;break;case \"added\":for(;w<K;)p(u++);H!==n?(A.push(v.length),p(H)):l(G.value)}for(;w<f.length;)p(u++);v._countWaitingForRemove=I}a.a.g.set(e,c,v);q(h.beforeMove,D);a.a.D(z,\nh.beforeRemove?a.oa:a.removeNode);var M,O,P;try{P=e.ownerDocument.activeElement}catch(N){}if(A.length)for(;(E=A.shift())!=n;){y=v[E];for(M=n;E;)if((O=v[--E].Y)&&O.length){M=O[O.length-1];break}for(f=0;u=y.Y[f];M=u,f++)a.h.Wb(e,u,M)}for(E=0;y=v[E];E++){y.Y||a.a.extend(y,b(e,g,y.Aa,m,y.pb));for(f=0;u=y.Y[f];M=u,f++)a.h.Wb(e,u,M);!y.Ed&&m&&(m(y.Aa,y.Y,y.pb),y.Ed=!0,M=y.Y[y.Y.length-1])}P&&e.ownerDocument.activeElement!=P&&P.focus();q(h.beforeRemove,C);for(E=0;E<C.length;++E)C[E].Aa=d;q(h.afterMove,D);\nq(h.afterAdd,F)}})();a.b(\"utils.setDomNodeChildrenFromArrayMapping\",a.a.ec);a.ba=function(){this.allowTemplateRewriting=!1};a.ba.prototype=new a.ca;a.ba.prototype.constructor=a.ba;a.ba.prototype.renderTemplateSource=function(b,c,d,e){if(c=(9>a.a.W?0:b.nodes)?b.nodes():null)return a.a.la(c.cloneNode(!0).childNodes);b=b.text();return a.a.ua(b,e)};a.ba.Ma=new a.ba;a.gc(a.ba.Ma);a.b(\"nativeTemplateEngine\",a.ba);(function(){a.$a=function(){var a=this.Hd=function(){if(!v||!v.tmpl)return 0;try{if(0<=v.tmpl.tag.tmpl.open.toString().indexOf(\"__\"))return 2}catch(a){}return 1}();\nthis.renderTemplateSource=function(b,e,f,g){g=g||w;f=f||{};if(2>a)throw Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");var h=b.data(\"precompiled\");h||(h=b.text()||\"\",h=v.template(null,\"{{ko_with $item.koBindingContext}}\"+h+\"{{\/ko_with}}\"),b.data(\"precompiled\",h));b=[e.$data];e=v.extend({koBindingContext:e},f.templateOptions);e=v.tmpl(h,b,e);e.appendTo(g.createElement(\"div\"));v.fragments={};return e};this.createJavaScriptEvaluatorBlock=function(a){return\"{{ko_code ((function() { return \"+\na+\" })()) }}\"};this.addTemplate=function(a,b){w.write(\"<script type='text\/html' id='\"+a+\"'>\"+b+\"\\x3c\/script>\")};0<a&&(v.tmpl.tag.ko_code={open:\"__.push($1 || '');\"},v.tmpl.tag.ko_with={open:\"with($1) {\",close:\"} \"})};a.$a.prototype=new a.ca;a.$a.prototype.constructor=a.$a;var b=new a.$a;0<b.Hd&&a.gc(b);a.b(\"jqueryTmplTemplateEngine\",a.$a)})()})})();})();\n"},{"base":"plugins","rel":"wordfence\/js\/jquery-ui-timepicker-addon.1756145765.js","ext":"js","size":80707,"mtime":1757312769,"type":"text","content":"\/*! jQuery Timepicker Addon - v1.6.3 - 2016-04-20\r\n * http:\/\/trentrichardson.com\/examples\/timepicker\r\n * Copyright (c) 2016 Trent Richardson; Licensed MIT *\/\r\n(function (factory) {\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(['jquery', 'jquery-ui'], factory);\r\n\t} else {\r\n\t\tfactory(jQuery);\r\n\t}\r\n}(function ($) {\r\n\r\n\t\/*\r\n\t * Lets not redefine timepicker, Prevent \"Uncaught RangeError: Maximum call stack size exceeded\"\r\n\t *\/\r\n\t$.ui.timepicker = $.ui.timepicker || {};\r\n\tif ($.ui.timepicker.version) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t\/*\r\n\t * Extend jQueryUI, get it started with our version number\r\n\t *\/\r\n\t$.extend($.ui, {\r\n\t\ttimepicker: {\r\n\t\t\tversion: \"1.6.3\"\r\n\t\t}\r\n\t});\r\n\r\n\t\/*\r\n\t * Timepicker manager.\r\n\t * Use the singleton instance of this class, $.timepicker, to interact with the time picker.\r\n\t * Settings for (groups of) time pickers are maintained in an instance object,\r\n\t * allowing multiple different settings on the same page.\r\n\t *\/\r\n\tvar Timepicker = function () {\r\n\t\tthis.regional = []; \/\/ Available regional settings, indexed by language code\r\n\t\tthis.regional[''] = { \/\/ Default regional settings\r\n\t\t\tcurrentText: 'Now',\r\n\t\t\tcloseText: 'Done',\r\n\t\t\tamNames: ['AM', 'A'],\r\n\t\t\tpmNames: ['PM', 'P'],\r\n\t\t\ttimeFormat: 'HH:mm',\r\n\t\t\ttimeSuffix: '',\r\n\t\t\ttimeOnlyTitle: 'Choose Time',\r\n\t\t\ttimeText: 'Time',\r\n\t\t\thourText: 'Hour',\r\n\t\t\tminuteText: 'Minute',\r\n\t\t\tsecondText: 'Second',\r\n\t\t\tmillisecText: 'Millisecond',\r\n\t\t\tmicrosecText: 'Microsecond',\r\n\t\t\ttimezoneText: 'Time Zone',\r\n\t\t\tisRTL: false\r\n\t\t};\r\n\t\tthis._defaults = { \/\/ Global defaults for all the datetime picker instances\r\n\t\t\tshowButtonPanel: true,\r\n\t\t\ttimeOnly: false,\r\n\t\t\ttimeOnlyShowDate: false,\r\n\t\t\tshowHour: null,\r\n\t\t\tshowMinute: null,\r\n\t\t\tshowSecond: null,\r\n\t\t\tshowMillisec: null,\r\n\t\t\tshowMicrosec: null,\r\n\t\t\tshowTimezone: null,\r\n\t\t\tshowTime: true,\r\n\t\t\tstepHour: 1,\r\n\t\t\tstepMinute: 1,\r\n\t\t\tstepSecond: 1,\r\n\t\t\tstepMillisec: 1,\r\n\t\t\tstepMicrosec: 1,\r\n\t\t\thour: 0,\r\n\t\t\tminute: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tmillisec: 0,\r\n\t\t\tmicrosec: 0,\r\n\t\t\ttimezone: null,\r\n\t\t\thourMin: 0,\r\n\t\t\tminuteMin: 0,\r\n\t\t\tsecondMin: 0,\r\n\t\t\tmillisecMin: 0,\r\n\t\t\tmicrosecMin: 0,\r\n\t\t\thourMax: 23,\r\n\t\t\tminuteMax: 59,\r\n\t\t\tsecondMax: 59,\r\n\t\t\tmillisecMax: 999,\r\n\t\t\tmicrosecMax: 999,\r\n\t\t\tminDateTime: null,\r\n\t\t\tmaxDateTime: null,\r\n\t\t\tmaxTime: null,\r\n\t\t\tminTime: null,\r\n\t\t\tonSelect: null,\r\n\t\t\thourGrid: 0,\r\n\t\t\tminuteGrid: 0,\r\n\t\t\tsecondGrid: 0,\r\n\t\t\tmillisecGrid: 0,\r\n\t\t\tmicrosecGrid: 0,\r\n\t\t\talwaysSetTime: true,\r\n\t\t\tseparator: ' ',\r\n\t\t\taltFieldTimeOnly: true,\r\n\t\t\taltTimeFormat: null,\r\n\t\t\taltSeparator: null,\r\n\t\t\taltTimeSuffix: null,\r\n\t\t\taltRedirectFocus: true,\r\n\t\t\tpickerTimeFormat: null,\r\n\t\t\tpickerTimeSuffix: null,\r\n\t\t\tshowTimepicker: true,\r\n\t\t\ttimezoneList: null,\r\n\t\t\taddSliderAccess: false,\r\n\t\t\tsliderAccessArgs: null,\r\n\t\t\tcontrolType: 'slider',\r\n\t\t\toneLine: false,\r\n\t\t\tdefaultValue: null,\r\n\t\t\tparse: 'strict',\r\n\t\t\tafterInject: null\r\n\t\t};\r\n\t\t$.extend(this._defaults, this.regional['']);\r\n\t};\r\n\r\n\t$.extend(Timepicker.prototype, {\r\n\t\t$input: null,\r\n\t\t$altInput: null,\r\n\t\t$timeObj: null,\r\n\t\tinst: null,\r\n\t\thour_slider: null,\r\n\t\tminute_slider: null,\r\n\t\tsecond_slider: null,\r\n\t\tmillisec_slider: null,\r\n\t\tmicrosec_slider: null,\r\n\t\ttimezone_select: null,\r\n\t\tmaxTime: null,\r\n\t\tminTime: null,\r\n\t\thour: 0,\r\n\t\tminute: 0,\r\n\t\tsecond: 0,\r\n\t\tmillisec: 0,\r\n\t\tmicrosec: 0,\r\n\t\ttimezone: null,\r\n\t\thourMinOriginal: null,\r\n\t\tminuteMinOriginal: null,\r\n\t\tsecondMinOriginal: null,\r\n\t\tmillisecMinOriginal: null,\r\n\t\tmicrosecMinOriginal: null,\r\n\t\thourMaxOriginal: null,\r\n\t\tminuteMaxOriginal: null,\r\n\t\tsecondMaxOriginal: null,\r\n\t\tmillisecMaxOriginal: null,\r\n\t\tmicrosecMaxOriginal: null,\r\n\t\tampm: '',\r\n\t\tformattedDate: '',\r\n\t\tformattedTime: '',\r\n\t\tformattedDateTime: '',\r\n\t\ttimezoneList: null,\r\n\t\tunits: ['hour', 'minute', 'second', 'millisec', 'microsec'],\r\n\t\tsupport: {},\r\n\t\tcontrol: null,\r\n\r\n\t\t\/*\r\n\t\t * Override the default settings for all instances of the time picker.\r\n\t\t * @param  {Object} settings  object - the new settings to use as defaults (anonymous object)\r\n\t\t * @return {Object} the manager object\r\n\t\t *\/\r\n\t\tsetDefaults: function (settings) {\r\n\t\t\textendRemove(this._defaults, settings || {});\r\n\t\t\treturn this;\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * Create a new Timepicker instance\r\n\t\t *\/\r\n\t\t_newInst: function ($input, opts) {\r\n\t\t\tvar tp_inst = new Timepicker(),\r\n\t\t\t\tinlineSettings = {},\r\n\t\t\t\tfns = {},\r\n\t\t\t\toverrides, i;\r\n\r\n\t\t\tfor (var attrName in this._defaults) {\r\n\t\t\t\tif (this._defaults.hasOwnProperty(attrName)) {\r\n\t\t\t\t\tvar attrValue = $input.attr('time:' + attrName);\r\n\t\t\t\t\tif (attrValue) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tinlineSettings[attrName] = eval(attrValue);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tinlineSettings[attrName] = attrValue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toverrides = {\r\n\t\t\t\tbeforeShow: function (input, dp_inst) {\r\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.beforeShow)) {\r\n\t\t\t\t\t\treturn tp_inst._defaults.evnts.beforeShow.call($input[0], input, dp_inst, tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonChangeMonthYear: function (year, month, dp_inst) {\r\n\t\t\t\t\t\/\/ Update the time as well : this prevents the time from disappearing from the $input field.\r\n\t\t\t\t\t\/\/ tp_inst._updateDateTime(dp_inst);\r\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.onChangeMonthYear)) {\r\n\t\t\t\t\t\ttp_inst._defaults.evnts.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonClose: function (dateText, dp_inst) {\r\n\t\t\t\t\tif (tp_inst.timeDefined === true && $input.val() !== '') {\r\n\t\t\t\t\t\ttp_inst._updateDateTime(dp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ($.isFunction(tp_inst._defaults.evnts.onClose)) {\r\n\t\t\t\t\t\ttp_inst._defaults.evnts.onClose.call($input[0], dateText, dp_inst, tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfor (i in overrides) {\r\n\t\t\t\tif (overrides.hasOwnProperty(i)) {\r\n\t\t\t\t\tfns[i] = opts[i] || this._defaults[i] || null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\ttp_inst._defaults = $.extend({}, this._defaults, inlineSettings, opts, overrides, {\r\n\t\t\t\tevnts: fns,\r\n\t\t\t\ttimepicker: tp_inst \/\/ add timepicker as a property of datepicker: $.datepicker._get(dp_inst, 'timepicker');\r\n\t\t\t});\r\n\t\t\ttp_inst.amNames = $.map(tp_inst._defaults.amNames, function (val) {\r\n\t\t\t\treturn val.toUpperCase();\r\n\t\t\t});\r\n\t\t\ttp_inst.pmNames = $.map(tp_inst._defaults.pmNames, function (val) {\r\n\t\t\t\treturn val.toUpperCase();\r\n\t\t\t});\r\n\r\n\t\t\t\/\/ detect which units are supported\r\n\t\t\ttp_inst.support = detectSupport(\r\n\t\t\t\ttp_inst._defaults.timeFormat +\r\n\t\t\t\t(tp_inst._defaults.pickerTimeFormat ? tp_inst._defaults.pickerTimeFormat : '') +\r\n\t\t\t\t(tp_inst._defaults.altTimeFormat ? tp_inst._defaults.altTimeFormat : ''));\r\n\r\n\t\t\t\/\/ controlType is string - key to our this._controls\r\n\t\t\tif (typeof(tp_inst._defaults.controlType) === 'string') {\r\n\t\t\t\tif (tp_inst._defaults.controlType === 'slider' && typeof($.ui.slider) === 'undefined') {\r\n\t\t\t\t\ttp_inst._defaults.controlType = 'select';\r\n\t\t\t\t}\r\n\t\t\t\ttp_inst.control = tp_inst._controls[tp_inst._defaults.controlType];\r\n\t\t\t}\r\n\t\t\t\/\/ controlType is an object and must implement create, options, value methods\r\n\t\t\telse {\r\n\t\t\t\ttp_inst.control = tp_inst._defaults.controlType;\r\n\t\t\t}\r\n\r\n\t\t\t\/\/ prep the timezone options\r\n\t\t\tvar timezoneList = [-720, -660, -600, -570, -540, -480, -420, -360, -300, -270, -240, -210, -180, -120, -60,\r\n\t\t\t\t0, 60, 120, 180, 210, 240, 270, 300, 330, 345, 360, 390, 420, 480, 525, 540, 570, 600, 630, 660, 690, 720, 765, 780, 840];\r\n\t\t\tif (tp_inst._defaults.timezoneList !== null) {\r\n\t\t\t\ttimezoneList = tp_inst._defaults.timezoneList;\r\n\t\t\t}\r\n\t\t\tvar tzl = timezoneList.length, tzi = 0, tzv = null;\r\n\t\t\tif (tzl > 0 && typeof timezoneList[0] !== 'object') {\r\n\t\t\t\tfor (; tzi < tzl; tzi++) {\r\n\t\t\t\t\ttzv = timezoneList[tzi];\r\n\t\t\t\t\ttimezoneList[tzi] = { value: tzv, label: $.timepicker.timezoneOffsetString(tzv, tp_inst.support.iso8601) };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttp_inst._defaults.timezoneList = timezoneList;\r\n\r\n\t\t\t\/\/ set the default units\r\n\t\t\ttp_inst.timezone = tp_inst._defaults.timezone !== null ? $.timepicker.timezoneOffsetNumber(tp_inst._defaults.timezone) :\r\n\t\t\t\t((new Date()).getTimezoneOffset() * -1);\r\n\t\t\ttp_inst.hour = tp_inst._defaults.hour < tp_inst._defaults.hourMin ? tp_inst._defaults.hourMin :\r\n\t\t\t\ttp_inst._defaults.hour > tp_inst._defaults.hourMax ? tp_inst._defaults.hourMax : tp_inst._defaults.hour;\r\n\t\t\ttp_inst.minute = tp_inst._defaults.minute < tp_inst._defaults.minuteMin ? tp_inst._defaults.minuteMin :\r\n\t\t\t\ttp_inst._defaults.minute > tp_inst._defaults.minuteMax ? tp_inst._defaults.minuteMax : tp_inst._defaults.minute;\r\n\t\t\ttp_inst.second = tp_inst._defaults.second < tp_inst._defaults.secondMin ? tp_inst._defaults.secondMin :\r\n\t\t\t\ttp_inst._defaults.second > tp_inst._defaults.secondMax ? tp_inst._defaults.secondMax : tp_inst._defaults.second;\r\n\t\t\ttp_inst.millisec = tp_inst._defaults.millisec < tp_inst._defaults.millisecMin ? tp_inst._defaults.millisecMin :\r\n\t\t\t\ttp_inst._defaults.millisec > tp_inst._defaults.millisecMax ? tp_inst._defaults.millisecMax : tp_inst._defaults.millisec;\r\n\t\t\ttp_inst.microsec = tp_inst._defaults.microsec < tp_inst._defaults.microsecMin ? tp_inst._defaults.microsecMin :\r\n\t\t\t\ttp_inst._defaults.microsec > tp_inst._defaults.microsecMax ? tp_inst._defaults.microsecMax : tp_inst._defaults.microsec;\r\n\t\t\ttp_inst.ampm = '';\r\n\t\t\ttp_inst.$input = $input;\r\n\r\n\t\t\tif (tp_inst._defaults.altField) {\r\n\t\t\t\ttp_inst.$altInput = $(tp_inst._defaults.altField);\r\n\t\t\t\tif (tp_inst._defaults.altRedirectFocus === true) {\r\n\t\t\t\t\ttp_inst.$altInput.css({\r\n\t\t\t\t\t\tcursor: 'pointer'\r\n\t\t\t\t\t}).focus(function () {\r\n\t\t\t\t\t\t$input.trigger(\"focus\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tp_inst._defaults.minDate === 0 || tp_inst._defaults.minDateTime === 0) {\r\n\t\t\t\ttp_inst._defaults.minDate = new Date();\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.maxDate === 0 || tp_inst._defaults.maxDateTime === 0) {\r\n\t\t\t\ttp_inst._defaults.maxDate = new Date();\r\n\t\t\t}\r\n\r\n\t\t\t\/\/ datepicker needs minDate\/maxDate, timepicker needs minDateTime\/maxDateTime..\r\n\t\t\tif (tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime());\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime());\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime());\r\n\t\t\t}\r\n\t\t\tif (tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date) {\r\n\t\t\t\ttp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime());\r\n\t\t\t}\r\n\t\t\ttp_inst.$input.bind('focus', function () {\r\n\t\t\t\ttp_inst._onFocus();\r\n\t\t\t});\r\n\r\n\t\t\treturn tp_inst;\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * add our sliders to the calendar\r\n\t\t *\/\r\n\t\t_addTimePicker: function (dp_inst) {\r\n\t\t\tvar currDT = $.trim((this.$altInput && this._defaults.altFieldTimeOnly) ? this.$input.val() + ' ' + this.$altInput.val() : this.$input.val());\r\n\r\n\t\t\tthis.timeDefined = this._parseTime(currDT);\r\n\t\t\tthis._limitMinMaxDateTime(dp_inst, false);\r\n\t\t\tthis._injectTimePicker();\r\n\t\t\tthis._afterInject();\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * parse the time string from input value or _setTime\r\n\t\t *\/\r\n\t\t_parseTime: function (timeString, withDate) {\r\n\t\t\tif (!this.inst) {\r\n\t\t\t\tthis.inst = $.datepicker._getInst(this.$input[0]);\r\n\t\t\t}\r\n\r\n\t\t\tif (withDate || !this._defaults.timeOnly) {\r\n\t\t\t\tvar dp_dateFormat = $.datepicker._get(this.inst, 'dateFormat');\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar parseRes = parseDateTimeInternal(dp_dateFormat, this._defaults.timeFormat, timeString, $.datepicker._getFormatConfig(this.inst), this._defaults);\r\n\t\t\t\t\tif (!parseRes.timeObj) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.extend(this, parseRes.timeObj);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t$.timepicker.log(\"Error parsing the date\/time string: \" + err +\r\n\t\t\t\t\t\t\"\\ndate\/time string = \" + timeString +\r\n\t\t\t\t\t\t\"\\ntimeFormat = \" + this._defaults.timeFormat +\r\n\t\t\t\t\t\t\"\\ndateFormat = \" + dp_dateFormat);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\tvar timeObj = $.datepicker.parseTime(this._defaults.timeFormat, timeString, this._defaults);\r\n\t\t\t\tif (!timeObj) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t$.extend(this, timeObj);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * Handle callback option after injecting timepicker\r\n\t\t *\/\r\n\t\t_afterInject: function() {\r\n\t\t\tvar o = this.inst.settings;\r\n\t\t\tif ($.isFunction(o.afterInject)) {\r\n\t\t\t\to.afterInject.call(this);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * generate and inject html for timepicker into ui datepicker\r\n\t\t *\/\r\n\t\t_injectTimePicker: function () {\r\n\t\t\tvar $dp = this.inst.dpDiv,\r\n\t\t\t\to = this.inst.settings,\r\n\t\t\t\ttp_inst = this,\r\n\t\t\t\tlitem = '',\r\n\t\t\t\tuitem = '',\r\n\t\t\t\tshow = null,\r\n\t\t\t\tmax = {},\r\n\t\t\t\tgridSize = {},\r\n\t\t\t\tsize = null,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tl = 0;\r\n\r\n\t\t\t\/\/ Prevent displaying twice\r\n\t\t\tif ($dp.find(\"div.ui-timepicker-div\").length === 0 && o.showTimepicker) {\r\n\t\t\t\tvar noDisplay = ' ui_tpicker_unit_hide',\r\n\t\t\t\t\thtml = '<div class=\"ui-timepicker-div' + (o.isRTL ? ' ui-timepicker-rtl' : '') + (o.oneLine && o.controlType === 'select' ? ' ui-timepicker-oneLine' : '') + '\"><dl>' + '<dt class=\"ui_tpicker_time_label' + ((o.showTime) ? '' : noDisplay) + '\">' + o.timeText + '<\/dt>' +\r\n\t\t\t\t\t\t'<dd class=\"ui_tpicker_time '+ ((o.showTime) ? '' : noDisplay) + '\"><input class=\"ui_tpicker_time_input\" ' + (o.timeInput ? '' : 'disabled') + '\/><\/dd>';\r\n\r\n\t\t\t\t\/\/ Create the markup\r\n\t\t\t\tfor (i = 0, l = this.units.length; i < l; i++) {\r\n\t\t\t\t\tlitem = this.units[i];\r\n\t\t\t\t\tuitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\r\n\t\t\t\t\tshow = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\r\n\r\n\t\t\t\t\t\/\/ Added by Peter Medeiros:\r\n\t\t\t\t\t\/\/ - Figure out what the hour\/minute\/second max should be based on the step values.\r\n\t\t\t\t\t\/\/ - Example: if stepMinute is 15, then minMax is 45.\r\n\t\t\t\t\tmax[litem] = parseInt((o[litem + 'Max'] - ((o[litem + 'Max'] - o[litem + 'Min']) % o['step' + uitem])), 10);\r\n\t\t\t\t\tgridSize[litem] = 0;\r\n\r\n\t\t\t\t\thtml += '<dt class=\"ui_tpicker_' + litem + '_label' + (show ? '' : noDisplay) + '\">' + o[litem + 'Text'] + '<\/dt>' +\r\n\t\t\t\t\t\t'<dd class=\"ui_tpicker_' + litem + (show ? '' : noDisplay) + '\"><div class=\"ui_tpicker_' + litem + '_slider' + (show ? '' : noDisplay) + '\"><\/div>';\r\n\r\n\t\t\t\t\tif (show && o[litem + 'Grid'] > 0) {\r\n\t\t\t\t\t\thtml += '<div style=\"padding-left: 1px\"><table class=\"ui-tpicker-grid-label\"><tr>';\r\n\r\n\t\t\t\t\t\tif (litem === 'hour') {\r\n\t\t\t\t\t\t\tfor (var h = o[litem + 'Min']; h <= max[litem]; h += parseInt(o[litem + 'Grid'], 10)) {\r\n\t\t\t\t\t\t\t\tgridSize[litem]++;\r\n\t\t\t\t\t\t\t\tvar tmph = $.datepicker.formatTime(this.support.ampm ? 'hht' : 'HH', {hour: h}, o);\r\n\t\t\t\t\t\t\t\thtml += '<td data-for=\"' + litem + '\">' + tmph + '<\/td>';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tfor (var m = o[litem + 'Min']; m <= max[litem]; m += parseInt(o[litem + 'Grid'], 10)) {\r\n\t\t\t\t\t\t\t\tgridSize[litem]++;\r\n\t\t\t\t\t\t\t\thtml += '<td data-for=\"' + litem + '\">' + ((m < 10) ? '0' : '') + m + '<\/td>';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\thtml += '<\/tr><\/table><\/div>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\thtml += '<\/dd>';\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\/\/ Timezone\r\n\t\t\t\tvar showTz = o.showTimezone !== null ? o.showTimezone : this.support.timezone;\r\n\t\t\t\thtml += '<dt class=\"ui_tpicker_timezone_label' + (showTz ? '' : noDisplay) + '\">' + o.timezoneText + '<\/dt>';\r\n\t\t\t\thtml += '<dd class=\"ui_tpicker_timezone' + (showTz ? '' : noDisplay) + '\"><\/dd>';\r\n\r\n\t\t\t\t\/\/ Create the elements from string\r\n\t\t\t\thtml += '<\/dl><\/div>';\r\n\t\t\t\tvar $tp = $(html);\r\n\r\n\t\t\t\t\/\/ if we only want time picker...\r\n\t\t\t\tif (o.timeOnly === true) {\r\n\t\t\t\t\t$tp.prepend('<div class=\"ui-widget-header ui-helper-clearfix ui-corner-all\">' + '<div class=\"ui-datepicker-title\">' + o.timeOnlyTitle + '<\/div>' + '<\/div>');\r\n\t\t\t\t\t$dp.find('.ui-datepicker-header, .ui-datepicker-calendar').hide();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\/\/ add sliders, adjust grids, add events\r\n\t\t\t\tfor (i = 0, l = tp_inst.units.length; i < l; i++) {\r\n\t\t\t\t\tlitem = tp_inst.units[i];\r\n\t\t\t\t\tuitem = litem.substr(0, 1).toUpperCase() + litem.substr(1);\r\n\t\t\t\t\tshow = o['show' + uitem] !== null ? o['show' + uitem] : this.support[litem];\r\n\r\n\t\t\t\t\t\/\/ add the slider\r\n\t\t\t\t\ttp_inst[litem + '_slider'] = tp_inst.control.create(tp_inst, $tp.find('.ui_tpicker_' + litem + '_slider'), litem, tp_inst[litem], o[litem + 'Min'], max[litem], o['step' + uitem]);\r\n\r\n\t\t\t\t\t\/\/ adjust the grid and add click event\r\n\t\t\t\t\tif (show && o[litem + 'Grid'] > 0) {\r\n\t\t\t\t\t\tsize = 100 * gridSize[litem] * o[litem + 'Grid'] \/ (max[litem] - o[litem + 'Min']);\r\n\t\t\t\t\t\t$tp.find('.ui_tpicker_' + litem + ' table').css({\r\n\t\t\t\t\t\t\twidth: size + \"%\",\r\n\t\t\t\t\t\t\tmarginLeft: o.isRTL ? '0' : ((size \/ (-2 * gridSize[litem])) + \"%\"),\r\n\t\t\t\t\t\t\tmarginRight: o.isRTL ? ((size \/ (-2 * gridSize[litem])) + \"%\") : '0',\r\n\t\t\t\t\t\t\tborderCollapse: 'collapse'\r\n\t\t\t\t\t\t}).find(\"td\").click(function (e) {\r\n\t\t\t\t\t\t\tvar $t = $(this),\r\n\t\t\t\t\t\t\t\th = $t.html(),\r\n\t\t\t\t\t\t\t\tn = parseInt(h.replace(\/[^0-9]\/g), 10),\r\n\t\t\t\t\t\t\t\tap = h.replace(\/[^apm]\/ig),\r\n\t\t\t\t\t\t\t\tf = $t.data('for'); \/\/ loses scope, so we use data-for\r\n\r\n\t\t\t\t\t\t\tif (f === 'hour') {\r\n\t\t\t\t\t\t\t\tif (ap.indexOf('p') !== -1 && n < 12) {\r\n\t\t\t\t\t\t\t\t\tn += 12;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif (ap.indexOf('a') !== -1 && n === 12) {\r\n\t\t\t\t\t\t\t\t\t\tn = 0;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttp_inst.control.value(tp_inst, tp_inst[f + '_slider'], litem, n);\r\n\r\n\t\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t\t}).css({\r\n\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\twidth: (100 \/ gridSize[litem]) + '%',\r\n\t\t\t\t\t\t\ttextAlign: 'center',\r\n\t\t\t\t\t\t\toverflow: 'hidden'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} \/\/ end if grid > 0\r\n\t\t\t\t} \/\/ end for loop\r\n\r\n\t\t\t\t\/\/ Add timezone options\r\n\t\t\t\tthis.timezone_select = $tp.find('.ui_tpicker_timezone').append('<select><\/select>').find(\"select\");\r\n\t\t\t\t$.fn.append.apply(this.timezone_select,\r\n\t\t\t\t\t$.map(o.timezoneList, function (val, idx) {\r\n\t\t\t\t\t\treturn $(\"<option \/>\").val(typeof val === \"object\" ? val.value : val).text(typeof val === \"object\" ? val.label : val);\r\n\t\t\t\t\t}));\r\n\t\t\t\tif (typeof(this.timezone) !== \"undefined\" && this.timezone !== null && this.timezone !== \"\") {\r\n\t\t\t\t\tvar local_timezone = (new Date(this.inst.selectedYear, this.inst.selectedMonth, this.inst.selectedDay, 12)).getTimezoneOffset() * -1;\r\n\t\t\t\t\tif (local_timezone === this.timezone) {\r\n\t\t\t\t\t\tselectLocalTimezone(tp_inst);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.timezone_select.val(this.timezone);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (typeof(this.hour) !== \"undefined\" && this.hour !== null && this.hour !== \"\") {\r\n\t\t\t\t\t\tthis.timezone_select.val(o.timezone);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tselectLocalTimezone(tp_inst);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.timezone_select.change(function () {\r\n\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\ttp_inst._afterInject();\r\n\t\t\t\t});\r\n\t\t\t\t\/\/ End timezone options\r\n\r\n\t\t\t\t\/\/ inject timepicker into datepicker\r\n\t\t\t\tvar $buttonPanel = $dp.find('.ui-datepicker-buttonpane');\r\n\t\t\t\tif ($buttonPanel.length) {\r\n\t\t\t\t\t$buttonPanel.before($tp);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t$dp.append($tp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.$timeObj = $tp.find('.ui_tpicker_time_input');\r\n\t\t\t\tthis.$timeObj.change(function () {\r\n\t\t\t\t\tvar timeFormat = tp_inst.inst.settings.timeFormat;\r\n\t\t\t\t\tvar parsedTime = $.datepicker.parseTime(timeFormat, this.value);\r\n\t\t\t\t\tvar update = new Date();\r\n\t\t\t\t\tif (parsedTime) {\r\n\t\t\t\t\t\tupdate.setHours(parsedTime.hour);\r\n\t\t\t\t\t\tupdate.setMinutes(parsedTime.minute);\r\n\t\t\t\t\t\tupdate.setSeconds(parsedTime.second);\r\n\t\t\t\t\t\t$.datepicker._setTime(tp_inst.inst, update);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.value = tp_inst.formattedTime;\r\n\t\t\t\t\t\tthis.blur();\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (this.inst !== null) {\r\n\t\t\t\t\tvar timeDefined = this.timeDefined;\r\n\t\t\t\t\tthis._onTimeChange();\r\n\t\t\t\t\tthis.timeDefined = timeDefined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\/\/ slideAccess integration: http:\/\/trentrichardson.com\/2011\/11\/11\/jquery-ui-sliders-and-touch-accessibility\/\r\n\t\t\t\tif (this._defaults.addSliderAccess) {\r\n\t\t\t\t\tvar sliderAccessArgs = this._defaults.sliderAccessArgs,\r\n\t\t\t\t\t\trtl = this._defaults.isRTL;\r\n\t\t\t\t\tsliderAccessArgs.isRTL = rtl;\r\n\r\n\t\t\t\t\tsetTimeout(function () { \/\/ fix for inline mode\r\n\t\t\t\t\t\tif ($tp.find('.ui-slider-access').length === 0) {\r\n\t\t\t\t\t\t\t$tp.find('.ui-slider:visible').sliderAccess(sliderAccessArgs);\r\n\r\n\t\t\t\t\t\t\t\/\/ fix any grids since sliders are shorter\r\n\t\t\t\t\t\t\tvar sliderAccessWidth = $tp.find('.ui-slider-access:eq(0)').outerWidth(true);\r\n\t\t\t\t\t\t\tif (sliderAccessWidth) {\r\n\t\t\t\t\t\t\t\t$tp.find('table:visible').each(function () {\r\n\t\t\t\t\t\t\t\t\tvar $g = $(this),\r\n\t\t\t\t\t\t\t\t\t\toldWidth = $g.outerWidth(),\r\n\t\t\t\t\t\t\t\t\t\toldMarginLeft = $g.css(rtl ? 'marginRight' : 'marginLeft').toString().replace('%', ''),\r\n\t\t\t\t\t\t\t\t\t\tnewWidth = oldWidth - sliderAccessWidth,\r\n\t\t\t\t\t\t\t\t\t\tnewMarginLeft = ((oldMarginLeft * newWidth) \/ oldWidth) + '%',\r\n\t\t\t\t\t\t\t\t\t\tcss = { width: newWidth, marginRight: 0, marginLeft: 0 };\r\n\t\t\t\t\t\t\t\t\tcss[rtl ? 'marginRight' : 'marginLeft'] = newMarginLeft;\r\n\t\t\t\t\t\t\t\t\t$g.css(css);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 10);\r\n\t\t\t\t}\r\n\t\t\t\t\/\/ end slideAccess integration\r\n\r\n\t\t\t\ttp_inst._limitMinMaxDateTime(this.inst, true);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * This function tries to limit the ability to go outside the\r\n\t\t * min\/max date range\r\n\t\t *\/\r\n\t\t_limitMinMaxDateTime: function (dp_inst, adjustSliders) {\r\n\t\t\tvar o = this._defaults,\r\n\t\t\t\tdp_date = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay);\r\n\r\n\t\t\tif (!this._defaults.showTimepicker) {\r\n\t\t\t\treturn;\r\n\t\t\t} \/\/ No time so nothing to check here\r\n\r\n\t\t\tif ($.datepicker._get(dp_inst, 'minDateTime') !== null && $.datepicker._get(dp_inst, 'minDateTime') !== undefined && dp_date) {\r\n\t\t\t\tvar minDateTime = $.datepicker._get(dp_inst, 'minDateTime'),\r\n\t\t\t\t\tminDateTimeDate = new Date(minDateTime.getFullYear(), minDateTime.getMonth(), minDateTime.getDate(), 0, 0, 0, 0);\r\n\r\n\t\t\t\tif (this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null || this.millisecMinOriginal === null || this.microsecMinOriginal === null) {\r\n\t\t\t\t\tthis.hourMinOriginal = o.hourMin;\r\n\t\t\t\t\tthis.minuteMinOriginal = o.minuteMin;\r\n\t\t\t\t\tthis.secondMinOriginal = o.secondMin;\r\n\t\t\t\t\tthis.millisecMinOriginal = o.millisecMin;\r\n\t\t\t\t\tthis.microsecMinOriginal = o.microsecMin;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dp_inst.settings.timeOnly || minDateTimeDate.getTime() === dp_date.getTime()) {\r\n\t\t\t\t\tthis._defaults.hourMin = minDateTime.getHours();\r\n\t\t\t\t\tif (this.hour <= this._defaults.hourMin) {\r\n\t\t\t\t\t\tthis.hour = this._defaults.hourMin;\r\n\t\t\t\t\t\tthis._defaults.minuteMin = minDateTime.getMinutes();\r\n\t\t\t\t\t\tif (this.minute <= this._defaults.minuteMin) {\r\n\t\t\t\t\t\t\tthis.minute = this._defaults.minuteMin;\r\n\t\t\t\t\t\t\tthis._defaults.secondMin = minDateTime.getSeconds();\r\n\t\t\t\t\t\t\tif (this.second <= this._defaults.secondMin) {\r\n\t\t\t\t\t\t\t\tthis.second = this._defaults.secondMin;\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMin = minDateTime.getMilliseconds();\r\n\t\t\t\t\t\t\t\tif (this.millisec <= this._defaults.millisecMin) {\r\n\t\t\t\t\t\t\t\t\tthis.millisec = this._defaults.millisecMin;\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMin = minDateTime.getMicroseconds();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (this.microsec < this._defaults.microsecMin) {\r\n\t\t\t\t\t\t\t\t\t\tthis.microsec = this._defaults.microsecMin;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\r\n\t\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._defaults.hourMin = this.hourMinOriginal;\r\n\t\t\t\t\tthis._defaults.minuteMin = this.minuteMinOriginal;\r\n\t\t\t\t\tthis._defaults.secondMin = this.secondMinOriginal;\r\n\t\t\t\t\tthis._defaults.millisecMin = this.millisecMinOriginal;\r\n\t\t\t\t\tthis._defaults.microsecMin = this.microsecMinOriginal;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ($.datepicker._get(dp_inst, 'maxDateTime') !== null && $.datepicker._get(dp_inst, 'maxDateTime') !== undefined && dp_date) {\r\n\t\t\t\tvar maxDateTime = $.datepicker._get(dp_inst, 'maxDateTime'),\r\n\t\t\t\t\tmaxDateTimeDate = new Date(maxDateTime.getFullYear(), maxDateTime.getMonth(), maxDateTime.getDate(), 0, 0, 0, 0);\r\n\r\n\t\t\t\tif (this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null || this.millisecMaxOriginal === null) {\r\n\t\t\t\t\tthis.hourMaxOriginal = o.hourMax;\r\n\t\t\t\t\tthis.minuteMaxOriginal = o.minuteMax;\r\n\t\t\t\t\tthis.secondMaxOriginal = o.secondMax;\r\n\t\t\t\t\tthis.millisecMaxOriginal = o.millisecMax;\r\n\t\t\t\t\tthis.microsecMaxOriginal = o.microsecMax;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dp_inst.settings.timeOnly || maxDateTimeDate.getTime() === dp_date.getTime()) {\r\n\t\t\t\t\tthis._defaults.hourMax = maxDateTime.getHours();\r\n\t\t\t\t\tif (this.hour >= this._defaults.hourMax) {\r\n\t\t\t\t\t\tthis.hour = this._defaults.hourMax;\r\n\t\t\t\t\t\tthis._defaults.minuteMax = maxDateTime.getMinutes();\r\n\t\t\t\t\t\tif (this.minute >= this._defaults.minuteMax) {\r\n\t\t\t\t\t\t\tthis.minute = this._defaults.minuteMax;\r\n\t\t\t\t\t\t\tthis._defaults.secondMax = maxDateTime.getSeconds();\r\n\t\t\t\t\t\t\tif (this.second >= this._defaults.secondMax) {\r\n\t\t\t\t\t\t\t\tthis.second = this._defaults.secondMax;\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMax = maxDateTime.getMilliseconds();\r\n\t\t\t\t\t\t\t\tif (this.millisec >= this._defaults.millisecMax) {\r\n\t\t\t\t\t\t\t\t\tthis.millisec = this._defaults.millisecMax;\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMax = maxDateTime.getMicroseconds();\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (this.microsec > this._defaults.microsecMax) {\r\n\t\t\t\t\t\t\t\t\t\tthis.microsec = this._defaults.microsecMax;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\r\n\t\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._defaults.hourMax = this.hourMaxOriginal;\r\n\t\t\t\t\tthis._defaults.minuteMax = this.minuteMaxOriginal;\r\n\t\t\t\t\tthis._defaults.secondMax = this.secondMaxOriginal;\r\n\t\t\t\t\tthis._defaults.millisecMax = this.millisecMaxOriginal;\r\n\t\t\t\t\tthis._defaults.microsecMax = this.microsecMaxOriginal;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (dp_inst.settings.minTime!==null) {\r\n\t\t\t\tvar tempMinTime=new Date(\"01\/01\/1970 \" + dp_inst.settings.minTime);\r\n\t\t\t\tif (this.hour<tempMinTime.getHours()) {\r\n\t\t\t\t\tthis.hour=this._defaults.hourMin=tempMinTime.getHours();\r\n\t\t\t\t\tthis.minute=this._defaults.minuteMin=tempMinTime.getMinutes();\r\n\t\t\t\t} else if (this.hour===tempMinTime.getHours() && this.minute<tempMinTime.getMinutes()) {\r\n\t\t\t\t\tthis.minute=this._defaults.minuteMin=tempMinTime.getMinutes();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._defaults.hourMin<tempMinTime.getHours()) {\r\n\t\t\t\t\t\tthis._defaults.hourMin=tempMinTime.getHours();\r\n\t\t\t\t\t\tthis._defaults.minuteMin=tempMinTime.getMinutes();\r\n\t\t\t\t\t} else if (this._defaults.hourMin===tempMinTime.getHours()===this.hour && this._defaults.minuteMin<tempMinTime.getMinutes()) {\r\n\t\t\t\t\t\tthis._defaults.minuteMin=tempMinTime.getMinutes();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._defaults.minuteMin=0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (dp_inst.settings.maxTime!==null) {\r\n\t\t\t\tvar tempMaxTime=new Date(\"01\/01\/1970 \" + dp_inst.settings.maxTime);\r\n\t\t\t\tif (this.hour>tempMaxTime.getHours()) {\r\n\t\t\t\t\tthis.hour=this._defaults.hourMax=tempMaxTime.getHours();\r\n\t\t\t\t\tthis.minute=this._defaults.minuteMax=tempMaxTime.getMinutes();\r\n\t\t\t\t} else if (this.hour===tempMaxTime.getHours() && this.minute>tempMaxTime.getMinutes()) {\r\n\t\t\t\t\tthis.minute=this._defaults.minuteMax=tempMaxTime.getMinutes();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._defaults.hourMax>tempMaxTime.getHours()) {\r\n\t\t\t\t\t\tthis._defaults.hourMax=tempMaxTime.getHours();\r\n\t\t\t\t\t\tthis._defaults.minuteMax=tempMaxTime.getMinutes();\r\n\t\t\t\t\t} else if (this._defaults.hourMax===tempMaxTime.getHours()===this.hour && this._defaults.minuteMax>tempMaxTime.getMinutes()) {\r\n\t\t\t\t\t\tthis._defaults.minuteMax=tempMaxTime.getMinutes();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._defaults.minuteMax=59;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (adjustSliders !== undefined && adjustSliders === true) {\r\n\t\t\t\tvar hourMax = parseInt((this._defaults.hourMax - ((this._defaults.hourMax - this._defaults.hourMin) % this._defaults.stepHour)), 10),\r\n\t\t\t\t\tminMax = parseInt((this._defaults.minuteMax - ((this._defaults.minuteMax - this._defaults.minuteMin) % this._defaults.stepMinute)), 10),\r\n\t\t\t\t\tsecMax = parseInt((this._defaults.secondMax - ((this._defaults.secondMax - this._defaults.secondMin) % this._defaults.stepSecond)), 10),\r\n\t\t\t\t\tmillisecMax = parseInt((this._defaults.millisecMax - ((this._defaults.millisecMax - this._defaults.millisecMin) % this._defaults.stepMillisec)), 10),\r\n\t\t\t\t\tmicrosecMax = parseInt((this._defaults.microsecMax - ((this._defaults.microsecMax - this._defaults.microsecMin) % this._defaults.stepMicrosec)), 10);\r\n\r\n\t\t\t\tif (this.hour_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.hour_slider, 'hour', { min: this._defaults.hourMin, max: hourMax, step: this._defaults.stepHour });\r\n\t\t\t\t\tthis.control.value(this, this.hour_slider, 'hour', this.hour - (this.hour % this._defaults.stepHour));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.minute_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.minute_slider, 'minute', { min: this._defaults.minuteMin, max: minMax, step: this._defaults.stepMinute });\r\n\t\t\t\t\tthis.control.value(this, this.minute_slider, 'minute', this.minute - (this.minute % this._defaults.stepMinute));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.second_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.second_slider, 'second', { min: this._defaults.secondMin, max: secMax, step: this._defaults.stepSecond });\r\n\t\t\t\t\tthis.control.value(this, this.second_slider, 'second', this.second - (this.second % this._defaults.stepSecond));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.millisec_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.millisec_slider, 'millisec', { min: this._defaults.millisecMin, max: millisecMax, step: this._defaults.stepMillisec });\r\n\t\t\t\t\tthis.control.value(this, this.millisec_slider, 'millisec', this.millisec - (this.millisec % this._defaults.stepMillisec));\r\n\t\t\t\t}\r\n\t\t\t\tif (this.microsec_slider) {\r\n\t\t\t\t\tthis.control.options(this, this.microsec_slider, 'microsec', { min: this._defaults.microsecMin, max: microsecMax, step: this._defaults.stepMicrosec });\r\n\t\t\t\t\tthis.control.value(this, this.microsec_slider, 'microsec', this.microsec - (this.microsec % this._defaults.stepMicrosec));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * when a slider moves, set the internal time...\r\n\t\t * on time change is also called when the time is updated in the text field\r\n\t\t *\/\r\n\t\t_onTimeChange: function () {\r\n\t\t\tif (!this._defaults.showTimepicker) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar hour = (this.hour_slider) ? this.control.value(this, this.hour_slider, 'hour') : false,\r\n\t\t\t\tminute = (this.minute_slider) ? this.control.value(this, this.minute_slider, 'minute') : false,\r\n\t\t\t\tsecond = (this.second_slider) ? this.control.value(this, this.second_slider, 'second') : false,\r\n\t\t\t\tmillisec = (this.millisec_slider) ? this.control.value(this, this.millisec_slider, 'millisec') : false,\r\n\t\t\t\tmicrosec = (this.microsec_slider) ? this.control.value(this, this.microsec_slider, 'microsec') : false,\r\n\t\t\t\ttimezone = (this.timezone_select) ? this.timezone_select.val() : false,\r\n\t\t\t\to = this._defaults,\r\n\t\t\t\tpickerTimeFormat = o.pickerTimeFormat || o.timeFormat,\r\n\t\t\t\tpickerTimeSuffix = o.pickerTimeSuffix || o.timeSuffix;\r\n\r\n\t\t\tif (typeof(hour) === 'object') {\r\n\t\t\t\thour = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(minute) === 'object') {\r\n\t\t\t\tminute = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(second) === 'object') {\r\n\t\t\t\tsecond = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(millisec) === 'object') {\r\n\t\t\t\tmillisec = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(microsec) === 'object') {\r\n\t\t\t\tmicrosec = false;\r\n\t\t\t}\r\n\t\t\tif (typeof(timezone) === 'object') {\r\n\t\t\t\ttimezone = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (hour !== false) {\r\n\t\t\t\thour = parseInt(hour, 10);\r\n\t\t\t}\r\n\t\t\tif (minute !== false) {\r\n\t\t\t\tminute = parseInt(minute, 10);\r\n\t\t\t}\r\n\t\t\tif (second !== false) {\r\n\t\t\t\tsecond = parseInt(second, 10);\r\n\t\t\t}\r\n\t\t\tif (millisec !== false) {\r\n\t\t\t\tmillisec = parseInt(millisec, 10);\r\n\t\t\t}\r\n\t\t\tif (microsec !== false) {\r\n\t\t\t\tmicrosec = parseInt(microsec, 10);\r\n\t\t\t}\r\n\t\t\tif (timezone !== false) {\r\n\t\t\t\ttimezone = timezone.toString();\r\n\t\t\t}\r\n\r\n\t\t\tvar ampm = o[hour < 12 ? 'amNames' : 'pmNames'][0];\r\n\r\n\t\t\t\/\/ If the update was done in the input field, the input field should not be updated.\r\n\t\t\t\/\/ If the update was done using the sliders, update the input field.\r\n\t\t\tvar hasChanged = (\r\n\t\t\t\thour !== parseInt(this.hour,10) || \/\/ sliders should all be numeric\r\n\t\t\t\tminute !== parseInt(this.minute,10) ||\r\n\t\t\t\tsecond !== parseInt(this.second,10) ||\r\n\t\t\t\tmillisec !== parseInt(this.millisec,10) ||\r\n\t\t\t\tmicrosec !== parseInt(this.microsec,10) ||\r\n\t\t\t\t(this.ampm.length > 0 && (hour < 12) !== ($.inArray(this.ampm.toUpperCase(), this.amNames) !== -1)) ||\r\n\t\t\t\t(this.timezone !== null && timezone !== this.timezone.toString()) \/\/ could be numeric or \"EST\" format, so use toString()\r\n\t\t\t);\r\n\r\n\t\t\tif (hasChanged) {\r\n\r\n\t\t\t\tif (hour !== false) {\r\n\t\t\t\t\tthis.hour = hour;\r\n\t\t\t\t}\r\n\t\t\t\tif (minute !== false) {\r\n\t\t\t\t\tthis.minute = minute;\r\n\t\t\t\t}\r\n\t\t\t\tif (second !== false) {\r\n\t\t\t\t\tthis.second = second;\r\n\t\t\t\t}\r\n\t\t\t\tif (millisec !== false) {\r\n\t\t\t\t\tthis.millisec = millisec;\r\n\t\t\t\t}\r\n\t\t\t\tif (microsec !== false) {\r\n\t\t\t\t\tthis.microsec = microsec;\r\n\t\t\t\t}\r\n\t\t\t\tif (timezone !== false) {\r\n\t\t\t\t\tthis.timezone = timezone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this.inst) {\r\n\t\t\t\t\tthis.inst = $.datepicker._getInst(this.$input[0]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._limitMinMaxDateTime(this.inst, true);\r\n\t\t\t}\r\n\t\t\tif (this.support.ampm) {\r\n\t\t\t\tthis.ampm = ampm;\r\n\t\t\t}\r\n\r\n\t\t\t\/\/ Updates the time within the timepicker\r\n\t\t\tthis.formattedTime = $.datepicker.formatTime(o.timeFormat, this, o);\r\n\t\t\tif (this.$timeObj) {\r\n\t\t\t\tif (pickerTimeFormat === o.timeFormat) {\r\n\t\t\t\t\tthis.$timeObj.val(this.formattedTime + pickerTimeSuffix);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.$timeObj.val($.datepicker.formatTime(pickerTimeFormat, this, o) + pickerTimeSuffix);\r\n\t\t\t\t}\r\n\t\t\t\tif (this.$timeObj[0].setSelectionRange) {\r\n\t\t\t\t\tvar sPos = this.$timeObj[0].selectionStart;\r\n\t\t\t\t\tvar ePos = this.$timeObj[0].selectionEnd;\r\n\t\t\t\t\tthis.$timeObj[0].setSelectionRange(sPos, ePos);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.timeDefined = true;\r\n\t\t\tif (hasChanged) {\r\n\t\t\t\tthis._updateDateTime();\r\n\t\t\t\t\/\/this.$input.focus(); \/\/ may automatically open the picker on setDate\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * call custom onSelect.\r\n\t\t * bind to sliders slidestop, and grid click.\r\n\t\t *\/\r\n\t\t_onSelectHandler: function () {\r\n\t\t\tvar onSelect = this._defaults.onSelect || this.inst.settings.onSelect;\r\n\t\t\tvar inputEl = this.$input ? this.$input[0] : null;\r\n\t\t\tif (onSelect && inputEl) {\r\n\t\t\t\tonSelect.apply(inputEl, [this.formattedDateTime, this]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * update our input with the new date time..\r\n\t\t *\/\r\n\t\t_updateDateTime: function (dp_inst) {\r\n\t\t\tdp_inst = this.inst || dp_inst;\r\n\t\t\tvar dtTmp = (dp_inst.currentYear > 0?\r\n\t\t\t\t\tnew Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay) :\r\n\t\t\t\t\tnew Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\r\n\t\t\t\tdt = $.datepicker._daylightSavingAdjust(dtTmp),\r\n\t\t\t\t\/\/dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay)),\r\n\t\t\t\t\/\/dt = $.datepicker._daylightSavingAdjust(new Date(dp_inst.currentYear, dp_inst.currentMonth, dp_inst.currentDay)),\r\n\t\t\t\tdateFmt = $.datepicker._get(dp_inst, 'dateFormat'),\r\n\t\t\t\tformatCfg = $.datepicker._getFormatConfig(dp_inst),\r\n\t\t\t\ttimeAvailable = dt !== null && this.timeDefined;\r\n\t\t\tthis.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);\r\n\t\t\tvar formattedDateTime = this.formattedDate;\r\n\r\n\t\t\t\/\/ if a slider was changed but datepicker doesn't have a value yet, set it\r\n\t\t\tif (dp_inst.lastVal === \"\") {\r\n\t\t\t\tdp_inst.currentYear = dp_inst.selectedYear;\r\n\t\t\t\tdp_inst.currentMonth = dp_inst.selectedMonth;\r\n\t\t\t\tdp_inst.currentDay = dp_inst.selectedDay;\r\n\t\t\t}\r\n\r\n\t\t\t\/*\r\n\t\t\t * remove following lines to force every changes in date picker to change the input value\r\n\t\t\t * Bug descriptions: when an input field has a default value, and click on the field to pop up the date picker.\r\n\t\t\t * If the user manually empty the value in the input field, the date picker will never change selected value.\r\n\t\t\t *\/\r\n\t\t\t\/\/if (dp_inst.lastVal !== undefined && (dp_inst.lastVal.length > 0 && this.$input.val().length === 0)) {\r\n\t\t\t\/\/\treturn;\r\n\t\t\t\/\/}\r\n\r\n\t\t\tif (this._defaults.timeOnly === true && this._defaults.timeOnlyShowDate === false) {\r\n\t\t\t\tformattedDateTime = this.formattedTime;\r\n\t\t\t} else if ((this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) || (this._defaults.timeOnly === true && this._defaults.timeOnlyShowDate === true)) {\r\n\t\t\t\tformattedDateTime += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix;\r\n\t\t\t}\r\n\r\n\t\t\tthis.formattedDateTime = formattedDateTime;\r\n\r\n\t\t\tif (!this._defaults.showTimepicker) {\r\n\t\t\t\tthis.$input.val(this.formattedDate);\r\n\t\t\t} else if (this.$altInput && this._defaults.timeOnly === false && this._defaults.altFieldTimeOnly === true) {\r\n\t\t\t\tthis.$altInput.val(this.formattedTime);\r\n\t\t\t\tthis.$input.val(this.formattedDate);\r\n\t\t\t} else if (this.$altInput) {\r\n\t\t\t\tthis.$input.val(formattedDateTime);\r\n\t\t\t\tvar altFormattedDateTime = '',\r\n\t\t\t\t\taltSeparator = this._defaults.altSeparator !== null ? this._defaults.altSeparator : this._defaults.separator,\r\n\t\t\t\t\taltTimeSuffix = this._defaults.altTimeSuffix !== null ? this._defaults.altTimeSuffix : this._defaults.timeSuffix;\r\n\r\n\t\t\t\tif (!this._defaults.timeOnly) {\r\n\t\t\t\t\tif (this._defaults.altFormat) {\r\n\t\t\t\t\t\taltFormattedDateTime = $.datepicker.formatDate(this._defaults.altFormat, (dt === null ? new Date() : dt), formatCfg);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taltFormattedDateTime = this.formattedDate;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (altFormattedDateTime) {\r\n\t\t\t\t\t\taltFormattedDateTime += altSeparator;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._defaults.altTimeFormat !== null) {\r\n\t\t\t\t\taltFormattedDateTime += $.datepicker.formatTime(this._defaults.altTimeFormat, this, this._defaults) + altTimeSuffix;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\taltFormattedDateTime += this.formattedTime + altTimeSuffix;\r\n\t\t\t\t}\r\n\t\t\t\tthis.$altInput.val(altFormattedDateTime);\r\n\t\t\t} else {\r\n\t\t\t\tthis.$input.val(formattedDateTime);\r\n\t\t\t}\r\n\r\n\t\t\tthis.$input.trigger(\"change\");\r\n\t\t},\r\n\r\n\t\t_onFocus: function () {\r\n\t\t\tif (!this.$input.val() && this._defaults.defaultValue) {\r\n\t\t\t\tthis.$input.val(this._defaults.defaultValue);\r\n\t\t\t\tvar inst = $.datepicker._getInst(this.$input.get(0)),\r\n\t\t\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\r\n\t\t\t\tif (tp_inst) {\r\n\t\t\t\t\tif (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t$.datepicker._updateDatepicker(inst);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t$.timepicker.log(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * Small abstraction to control types\r\n\t\t * We can add more, just be sure to follow the pattern: create, options, value\r\n\t\t *\/\r\n\t\t_controls: {\r\n\t\t\t\/\/ slider methods\r\n\t\t\tslider: {\r\n\t\t\t\tcreate: function (tp_inst, obj, unit, val, min, max, step) {\r\n\t\t\t\t\tvar rtl = tp_inst._defaults.isRTL; \/\/ if rtl go -60->0 instead of 0->60\r\n\t\t\t\t\treturn obj.prop('slide', null).slider({\r\n\t\t\t\t\t\torientation: \"horizontal\",\r\n\t\t\t\t\t\tvalue: rtl ? val * -1 : val,\r\n\t\t\t\t\t\tmin: rtl ? max * -1 : min,\r\n\t\t\t\t\t\tmax: rtl ? min * -1 : max,\r\n\t\t\t\t\t\tstep: step,\r\n\t\t\t\t\t\tslide: function (event, ui) {\r\n\t\t\t\t\t\t\ttp_inst.control.value(tp_inst, $(this), unit, rtl ? ui.value * -1 : ui.value);\r\n\t\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tstop: function (event, ui) {\r\n\t\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\toptions: function (tp_inst, obj, unit, opts, val) {\r\n\t\t\t\t\tif (tp_inst._defaults.isRTL) {\r\n\t\t\t\t\t\tif (typeof(opts) === 'string') {\r\n\t\t\t\t\t\t\tif (opts === 'min' || opts === 'max') {\r\n\t\t\t\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\t\t\t\treturn obj.slider(opts, val * -1);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn Math.abs(obj.slider(opts));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn obj.slider(opts);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar min = opts.min,\r\n\t\t\t\t\t\t\tmax = opts.max;\r\n\t\t\t\t\t\topts.min = opts.max = null;\r\n\t\t\t\t\t\tif (min !== undefined) {\r\n\t\t\t\t\t\t\topts.max = min * -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (max !== undefined) {\r\n\t\t\t\t\t\t\topts.min = max * -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn obj.slider(opts);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof(opts) === 'string' && val !== undefined) {\r\n\t\t\t\t\t\treturn obj.slider(opts, val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn obj.slider(opts);\r\n\t\t\t\t},\r\n\t\t\t\tvalue: function (tp_inst, obj, unit, val) {\r\n\t\t\t\t\tif (tp_inst._defaults.isRTL) {\r\n\t\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\t\treturn obj.slider('value', val * -1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn Math.abs(obj.slider('value'));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\treturn obj.slider('value', val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn obj.slider('value');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\/\/ select methods\r\n\t\t\tselect: {\r\n\t\t\t\tcreate: function (tp_inst, obj, unit, val, min, max, step) {\r\n\t\t\t\t\tvar sel = '<select class=\"ui-timepicker-select ui-state-default ui-corner-all\" data-unit=\"' + unit + '\" data-min=\"' + min + '\" data-max=\"' + max + '\" data-step=\"' + step + '\">',\r\n\t\t\t\t\t\tformat = tp_inst._defaults.pickerTimeFormat || tp_inst._defaults.timeFormat;\r\n\r\n\t\t\t\t\tfor (var i = min; i <= max; i += step) {\r\n\t\t\t\t\t\tsel += '<option value=\"' + i + '\"' + (i === val ? ' selected' : '') + '>';\r\n\t\t\t\t\t\tif (unit === 'hour') {\r\n\t\t\t\t\t\t\tsel += $.datepicker.formatTime($.trim(format.replace(\/[^ht ]\/ig, '')), {hour: i}, tp_inst._defaults);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (unit === 'millisec' || unit === 'microsec' || i >= 10) { sel += i; }\r\n\t\t\t\t\t\telse {sel += '0' + i.toString(); }\r\n\t\t\t\t\t\tsel += '<\/option>';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsel += '<\/select>';\r\n\r\n\t\t\t\t\tobj.children('select').remove();\r\n\r\n\t\t\t\t\t$(sel).appendTo(obj).change(function (e) {\r\n\t\t\t\t\t\ttp_inst._onTimeChange();\r\n\t\t\t\t\t\ttp_inst._onSelectHandler();\r\n\t\t\t\t\t\ttp_inst._afterInject();\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn obj;\r\n\t\t\t\t},\r\n\t\t\t\toptions: function (tp_inst, obj, unit, opts, val) {\r\n\t\t\t\t\tvar o = {},\r\n\t\t\t\t\t\t$t = obj.children('select');\r\n\t\t\t\t\tif (typeof(opts) === 'string') {\r\n\t\t\t\t\t\tif (val === undefined) {\r\n\t\t\t\t\t\t\treturn $t.data(opts);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\to[opts] = val;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { o = opts; }\r\n\t\t\t\t\treturn tp_inst.control.create(tp_inst, obj, $t.data('unit'), $t.val(), o.min>=0 ? o.min : $t.data('min'), o.max || $t.data('max'), o.step || $t.data('step'));\r\n\t\t\t\t},\r\n\t\t\t\tvalue: function (tp_inst, obj, unit, val) {\r\n\t\t\t\t\tvar $t = obj.children('select');\r\n\t\t\t\t\tif (val !== undefined) {\r\n\t\t\t\t\t\treturn $t.val(val);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $t.val();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \/\/ end _controls\r\n\r\n\t});\r\n\r\n\t$.fn.extend({\r\n\t\t\/*\r\n\t\t * shorthand just to use timepicker.\r\n\t\t *\/\r\n\t\ttimepicker: function (o) {\r\n\t\t\to = o || {};\r\n\t\t\tvar tmp_args = Array.prototype.slice.call(arguments);\r\n\r\n\t\t\tif (typeof o === 'object') {\r\n\t\t\t\ttmp_args[0] = $.extend(o, {\r\n\t\t\t\t\ttimeOnly: true\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\treturn $(this).each(function () {\r\n\t\t\t\t$.fn.datetimepicker.apply($(this), tmp_args);\r\n\t\t\t});\r\n\t\t},\r\n\r\n\t\t\/*\r\n\t\t * extend timepicker to datepicker\r\n\t\t *\/\r\n\t\tdatetimepicker: function (o) {\r\n\t\t\to = o || {};\r\n\t\t\tvar tmp_args = arguments;\r\n\r\n\t\t\tif (typeof(o) === 'string') {\r\n\t\t\t\tif (o === 'getDate'  || (o === 'option' && tmp_args.length === 2 && typeof (tmp_args[1]) === 'string')) {\r\n\t\t\t\t\treturn $.fn.datepicker.apply($(this[0]), tmp_args);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.each(function () {\r\n\t\t\t\t\t\tvar $t = $(this);\r\n\t\t\t\t\t\t$t.datepicker.apply($t, tmp_args);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn this.each(function () {\r\n\t\t\t\t\tvar $t = $(this);\r\n\t\t\t\t\t$t.datepicker($.timepicker._newInst($t, o)._defaults);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\t\/*\r\n\t * Public Utility to parse date and time\r\n\t *\/\r\n\t$.datepicker.parseDateTime = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\r\n\t\tvar parseRes = parseDateTimeInternal(dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings);\r\n\t\tif (parseRes.timeObj) {\r\n\t\t\tvar t = parseRes.timeObj;\r\n\t\t\tparseRes.date.setHours(t.hour, t.minute, t.second, t.millisec);\r\n\t\t\tparseRes.date.setMicroseconds(t.microsec);\r\n\t\t}\r\n\r\n\t\treturn parseRes.date;\r\n\t};\r\n\r\n\t\/*\r\n\t * Public utility to parse time\r\n\t *\/\r\n\t$.datepicker.parseTime = function (timeFormat, timeString, options) {\r\n\t\tvar o = extendRemove(extendRemove({}, $.timepicker._defaults), options || {}),\r\n\t\t\tiso8601 = (timeFormat.replace(\/\\'.*?\\'\/g, '').indexOf('Z') !== -1);\r\n\r\n\t\t\/\/ Strict parse requires the timeString to match the timeFormat exactly\r\n\t\tvar strictParse = function (f, s, o) {\r\n\r\n\t\t\t\/\/ pattern for standard and localized AM\/PM markers\r\n\t\t\tvar getPatternAmpm = function (amNames, pmNames) {\r\n\t\t\t\tvar markers = [];\r\n\t\t\t\tif (amNames) {\r\n\t\t\t\t\t$.merge(markers, amNames);\r\n\t\t\t\t}\r\n\t\t\t\tif (pmNames) {\r\n\t\t\t\t\t$.merge(markers, pmNames);\r\n\t\t\t\t}\r\n\t\t\t\tmarkers = $.map(markers, function (val) {\r\n\t\t\t\t\treturn val.replace(\/[.*+?|()\\[\\]{}\\\\]\/g, '\\\\$&');\r\n\t\t\t\t});\r\n\t\t\t\treturn '(' + markers.join('|') + ')?';\r\n\t\t\t};\r\n\r\n\t\t\t\/\/ figure out position of time elements.. cause js cant do named captures\r\n\t\t\tvar getFormatPositions = function (timeFormat) {\r\n\t\t\t\tvar finds = timeFormat.toLowerCase().match(\/(h{1,2}|m{1,2}|s{1,2}|l{1}|c{1}|t{1,2}|z|'.*?')\/g),\r\n\t\t\t\t\torders = {\r\n\t\t\t\t\t\th: -1,\r\n\t\t\t\t\t\tm: -1,\r\n\t\t\t\t\t\ts: -1,\r\n\t\t\t\t\t\tl: -1,\r\n\t\t\t\t\t\tc: -1,\r\n\t\t\t\t\t\tt: -1,\r\n\t\t\t\t\t\tz: -1\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\tif (finds) {\r\n\t\t\t\t\tfor (var i = 0; i < finds.length; i++) {\r\n\t\t\t\t\t\tif (orders[finds[i].toString().charAt(0)] === -1) {\r\n\t\t\t\t\t\t\torders[finds[i].toString().charAt(0)] = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn orders;\r\n\t\t\t};\r\n\r\n\t\t\tvar regstr = '^' + f.toString()\r\n\t\t\t\t\t\t.replace(\/([hH]{1,2}|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')\/g, function (match) {\r\n\t\t\t\t\t\t\tvar ml = match.length;\r\n\t\t\t\t\t\t\tswitch (match.charAt(0).toLowerCase()) {\r\n\t\t\t\t\t\t\t\tcase 'h':\r\n\t\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\r\n\t\t\t\t\t\t\t\tcase 'm':\r\n\t\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\r\n\t\t\t\t\t\t\t\tcase 's':\r\n\t\t\t\t\t\t\t\t\treturn ml === 1 ? '(\\\\d?\\\\d)' : '(\\\\d{' + ml + '})';\r\n\t\t\t\t\t\t\t\tcase 'l':\r\n\t\t\t\t\t\t\t\t\treturn '(\\\\d?\\\\d?\\\\d)';\r\n\t\t\t\t\t\t\t\tcase 'c':\r\n\t\t\t\t\t\t\t\t\treturn '(\\\\d?\\\\d?\\\\d)';\r\n\t\t\t\t\t\t\t\tcase 'z':\r\n\t\t\t\t\t\t\t\t\treturn '(z|[-+]\\\\d\\\\d:?\\\\d\\\\d|\\\\S+)?';\r\n\t\t\t\t\t\t\t\tcase 't':\r\n\t\t\t\t\t\t\t\t\treturn getPatternAmpm(o.amNames, o.pmNames);\r\n\t\t\t\t\t\t\t\tdefault:    \/\/ literal escaped in quotes\r\n\t\t\t\t\t\t\t\t\treturn '(' + match.replace(\/\\'\/g, \"\").replace(\/(\\.|\\$|\\^|\\\\|\\\/|\\(|\\)|\\[|\\]|\\?|\\+|\\*)\/g, function (m) { return \"\\\\\" + m; }) + ')?';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.replace(\/\\s\/g, '\\\\s?') +\r\n\t\t\t\t\to.timeSuffix + '$',\r\n\t\t\t\torder = getFormatPositions(f),\r\n\t\t\t\tampm = '',\r\n\t\t\t\ttreg;\r\n\r\n\t\t\ttreg = s.match(new RegExp(regstr, 'i'));\r\n\r\n\t\t\tvar resTime = {\r\n\t\t\t\thour: 0,\r\n\t\t\t\tminute: 0,\r\n\t\t\t\tsecond: 0,\r\n\t\t\t\tmillisec: 0,\r\n\t\t\t\tmicrosec: 0\r\n\t\t\t};\r\n\r\n\t\t\tif (treg) {\r\n\t\t\t\tif (order.t !== -1) {\r\n\t\t\t\t\tif (treg[order.t] === undefined || treg[order.t].length === 0) {\r\n\t\t\t\t\t\tampm = '';\r\n\t\t\t\t\t\tresTime.ampm = '';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tampm = $.inArray(treg[order.t].toUpperCase(), $.map(o.amNames, function (x,i) { return x.toUpperCase(); })) !== -1 ? 'AM' : 'PM';\r\n\t\t\t\t\t\tresTime.ampm = o[ampm === 'AM' ? 'amNames' : 'pmNames'][0];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (order.h !== -1) {\r\n\t\t\t\t\tif (ampm === 'AM' && treg[order.h] === '12') {\r\n\t\t\t\t\t\tresTime.hour = 0; \/\/ 12am = 0 hour\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (ampm === 'PM' && treg[order.h] !== '12') {\r\n\t\t\t\t\t\t\tresTime.hour = parseInt(treg[order.h], 10) + 12; \/\/ 12pm = 12 hour, any other pm = hour + 12\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresTime.hour = Number(treg[order.h]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (order.m !== -1) {\r\n\t\t\t\t\tresTime.minute = Number(treg[order.m]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.s !== -1) {\r\n\t\t\t\t\tresTime.second = Number(treg[order.s]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.l !== -1) {\r\n\t\t\t\t\tresTime.millisec = Number(treg[order.l]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.c !== -1) {\r\n\t\t\t\t\tresTime.microsec = Number(treg[order.c]);\r\n\t\t\t\t}\r\n\t\t\t\tif (order.z !== -1 && treg[order.z] !== undefined) {\r\n\t\t\t\t\tresTime.timezone = $.timepicker.timezoneOffsetNumber(treg[order.z]);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\treturn resTime;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\/\/ end strictParse\r\n\r\n\t\t\/\/ First try JS Date, if that fails, use strictParse\r\n\t\tvar looseParse = function (f, s, o) {\r\n\t\t\ttry {\r\n\t\t\t\tvar d = new Date('2012-01-01 ' + s);\r\n\t\t\t\tif (isNaN(d.getTime())) {\r\n\t\t\t\t\td = new Date('2012-01-01T' + s);\r\n\t\t\t\t\tif (isNaN(d.getTime())) {\r\n\t\t\t\t\t\td = new Date('01\/01\/2012 ' + s);\r\n\t\t\t\t\t\tif (isNaN(d.getTime())) {\r\n\t\t\t\t\t\t\tthrow \"Unable to parse time with native Date: \" + s;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\thour: d.getHours(),\r\n\t\t\t\t\tminute: d.getMinutes(),\r\n\t\t\t\t\tsecond: d.getSeconds(),\r\n\t\t\t\t\tmillisec: d.getMilliseconds(),\r\n\t\t\t\t\tmicrosec: d.getMicroseconds(),\r\n\t\t\t\t\ttimezone: d.getTimezoneOffset() * -1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tcatch (err) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn strictParse(f, s, o);\r\n\t\t\t\t}\r\n\t\t\t\tcatch (err2) {\r\n\t\t\t\t\t$.timepicker.log(\"Unable to parse \\ntimeString: \" + s + \"\\ntimeFormat: \" + f);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}; \/\/ end looseParse\r\n\r\n\t\tif (typeof o.parse === \"function\") {\r\n\t\t\treturn o.parse(timeFormat, timeString, o);\r\n\t\t}\r\n\t\tif (o.parse === 'loose') {\r\n\t\t\treturn looseParse(timeFormat, timeString, o);\r\n\t\t}\r\n\t\treturn strictParse(timeFormat, timeString, o);\r\n\t};\r\n\r\n\t\/**\r\n\t * Public utility to format the time\r\n\t * @param {string} format format of the time\r\n\t * @param {Object} time Object not a Date for timezones\r\n\t * @param {Object} [options] essentially the regional[].. amNames, pmNames, ampm\r\n\t * @returns {string} the formatted time\r\n\t *\/\r\n\t$.datepicker.formatTime = function (format, time, options) {\r\n\t\toptions = options || {};\r\n\t\toptions = $.extend({}, $.timepicker._defaults, options);\r\n\t\ttime = $.extend({\r\n\t\t\thour: 0,\r\n\t\t\tminute: 0,\r\n\t\t\tsecond: 0,\r\n\t\t\tmillisec: 0,\r\n\t\t\tmicrosec: 0,\r\n\t\t\ttimezone: null\r\n\t\t}, time);\r\n\r\n\t\tvar tmptime = format,\r\n\t\t\tampmName = options.amNames[0],\r\n\t\t\thour = parseInt(time.hour, 10);\r\n\r\n\t\tif (hour > 11) {\r\n\t\t\tampmName = options.pmNames[0];\r\n\t\t}\r\n\r\n\t\ttmptime = tmptime.replace(\/(?:HH?|hh?|mm?|ss?|[tT]{1,2}|[zZ]|[lc]|'.*?')\/g, function (match) {\r\n\t\t\tswitch (match) {\r\n\t\t\t\tcase 'HH':\r\n\t\t\t\t\treturn ('0' + hour).slice(-2);\r\n\t\t\t\tcase 'H':\r\n\t\t\t\t\treturn hour;\r\n\t\t\t\tcase 'hh':\r\n\t\t\t\t\treturn ('0' + convert24to12(hour)).slice(-2);\r\n\t\t\t\tcase 'h':\r\n\t\t\t\t\treturn convert24to12(hour);\r\n\t\t\t\tcase 'mm':\r\n\t\t\t\t\treturn ('0' + time.minute).slice(-2);\r\n\t\t\t\tcase 'm':\r\n\t\t\t\t\treturn time.minute;\r\n\t\t\t\tcase 'ss':\r\n\t\t\t\t\treturn ('0' + time.second).slice(-2);\r\n\t\t\t\tcase 's':\r\n\t\t\t\t\treturn time.second;\r\n\t\t\t\tcase 'l':\r\n\t\t\t\t\treturn ('00' + time.millisec).slice(-3);\r\n\t\t\t\tcase 'c':\r\n\t\t\t\t\treturn ('00' + time.microsec).slice(-3);\r\n\t\t\t\tcase 'z':\r\n\t\t\t\t\treturn $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, false);\r\n\t\t\t\tcase 'Z':\r\n\t\t\t\t\treturn $.timepicker.timezoneOffsetString(time.timezone === null ? options.timezone : time.timezone, true);\r\n\t\t\t\tcase 'T':\r\n\t\t\t\t\treturn ampmName.charAt(0).toUpperCase();\r\n\t\t\t\tcase 'TT':\r\n\t\t\t\t\treturn ampmName.toUpperCase();\r\n\t\t\t\tcase 't':\r\n\t\t\t\t\treturn ampmName.charAt(0).toLowerCase();\r\n\t\t\t\tcase 'tt':\r\n\t\t\t\t\treturn ampmName.toLowerCase();\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn match.replace(\/'\/g, \"\");\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn tmptime;\r\n\t};\r\n\r\n\t\/*\r\n\t * the bad hack :\/ override datepicker so it doesn't close on select\r\n\t \/\/ inspired: http:\/\/stackoverflow.com\/questions\/1252512\/jquery-datepicker-prevent-closing-picker-when-clicking-a-date\/1762378#1762378\r\n\t *\/\r\n\t$.datepicker._base_selectDate = $.datepicker._selectDate;\r\n\t$.datepicker._selectDate = function (id, dateStr) {\r\n\t\tvar inst = this._getInst($(id)[0]),\r\n\t\t\ttp_inst = this._get(inst, 'timepicker'),\r\n\t\t\twas_inline;\r\n\r\n\t\tif (tp_inst && inst.settings.showTimepicker) {\r\n\t\t\ttp_inst._limitMinMaxDateTime(inst, true);\r\n\t\t\twas_inline = inst.inline;\r\n\t\t\tinst.inline = inst.stay_open = true;\r\n\t\t\t\/\/This way the onSelect handler called from calendarpicker get the full dateTime\r\n\t\t\tthis._base_selectDate(id, dateStr);\r\n\t\t\tinst.inline = was_inline;\r\n\t\t\tinst.stay_open = false;\r\n\t\t\tthis._notifyChange(inst);\r\n\t\t\tthis._updateDatepicker(inst);\r\n\t\t} else {\r\n\t\t\tthis._base_selectDate(id, dateStr);\r\n\t\t}\r\n\t};\r\n\r\n\t\/*\r\n\t * second bad hack :\/ override datepicker so it triggers an event when changing the input field\r\n\t * and does not redraw the datepicker on every selectDate event\r\n\t *\/\r\n\t$.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker;\r\n\t$.datepicker._updateDatepicker = function (inst) {\r\n\r\n\t\t\/\/ don't popup the datepicker if there is another instance already opened\r\n\t\tvar input = inst.input[0];\r\n\t\tif ($.datepicker._curInst && $.datepicker._curInst !== inst && $.datepicker._datepickerShowing && $.datepicker._lastInput !== input) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof(inst.stay_open) !== 'boolean' || inst.stay_open === false) {\r\n\r\n\t\t\tthis._base_updateDatepicker(inst);\r\n\r\n\t\t\t\/\/ Reload the time control when changing something in the input text field.\r\n\t\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\t\tif (tp_inst) {\r\n\t\t\t\ttp_inst._addTimePicker(inst);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t\/*\r\n\t * third bad hack :\/ override datepicker so it allows spaces and colon in the input field\r\n\t *\/\r\n\t$.datepicker._base_doKeyPress = $.datepicker._doKeyPress;\r\n\t$.datepicker._doKeyPress = function (event) {\r\n\t\tvar inst = $.datepicker._getInst(event.target),\r\n\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\tif ($.datepicker._get(inst, 'constrainInput')) {\r\n\t\t\t\tvar ampm = tp_inst.support.ampm,\r\n\t\t\t\t\ttz = tp_inst._defaults.showTimezone !== null ? tp_inst._defaults.showTimezone : tp_inst.support.timezone,\r\n\t\t\t\t\tdateChars = $.datepicker._possibleChars($.datepicker._get(inst, 'dateFormat')),\r\n\t\t\t\t\tdatetimeChars = tp_inst._defaults.timeFormat.toString()\r\n\t\t\t\t\t\t\t.replace(\/[hms]\/g, '')\r\n\t\t\t\t\t\t\t.replace(\/TT\/g, ampm ? 'APM' : '')\r\n\t\t\t\t\t\t\t.replace(\/Tt\/g, ampm ? 'AaPpMm' : '')\r\n\t\t\t\t\t\t\t.replace(\/tT\/g, ampm ? 'AaPpMm' : '')\r\n\t\t\t\t\t\t\t.replace(\/T\/g, ampm ? 'AP' : '')\r\n\t\t\t\t\t\t\t.replace(\/tt\/g, ampm ? 'apm' : '')\r\n\t\t\t\t\t\t\t.replace(\/t\/g, ampm ? 'ap' : '') +\r\n\t\t\t\t\t\t\" \" + tp_inst._defaults.separator +\r\n\t\t\t\t\t\ttp_inst._defaults.timeSuffix +\r\n\t\t\t\t\t\t(tz ? tp_inst._defaults.timezoneList.join('') : '') +\r\n\t\t\t\t\t\t(tp_inst._defaults.amNames.join('')) + (tp_inst._defaults.pmNames.join('')) +\r\n\t\t\t\t\t\tdateChars,\r\n\t\t\t\t\tchr = String.fromCharCode(event.charCode === undefined ? event.keyCode : event.charCode);\r\n\t\t\t\treturn event.ctrlKey || (chr < ' ' || !dateChars || datetimeChars.indexOf(chr) > -1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $.datepicker._base_doKeyPress(event);\r\n\t};\r\n\r\n\t\/*\r\n\t * Fourth bad hack :\/ override _updateAlternate function used in inline mode to init altField\r\n\t * Update any alternate field to synchronise with the main field.\r\n\t *\/\r\n\t$.datepicker._base_updateAlternate = $.datepicker._updateAlternate;\r\n\t$.datepicker._updateAlternate = function (inst) {\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\tvar altField = tp_inst._defaults.altField;\r\n\t\t\tif (altField) { \/\/ update alternate field too\r\n\t\t\t\tvar altFormat = tp_inst._defaults.altFormat || tp_inst._defaults.dateFormat,\r\n\t\t\t\t\tdate = this._getDate(inst),\r\n\t\t\t\t\tformatCfg = $.datepicker._getFormatConfig(inst),\r\n\t\t\t\t\taltFormattedDateTime = '',\r\n\t\t\t\t\taltSeparator = tp_inst._defaults.altSeparator ? tp_inst._defaults.altSeparator : tp_inst._defaults.separator,\r\n\t\t\t\t\taltTimeSuffix = tp_inst._defaults.altTimeSuffix ? tp_inst._defaults.altTimeSuffix : tp_inst._defaults.timeSuffix,\r\n\t\t\t\t\taltTimeFormat = tp_inst._defaults.altTimeFormat !== null ? tp_inst._defaults.altTimeFormat : tp_inst._defaults.timeFormat;\r\n\r\n\t\t\t\taltFormattedDateTime += $.datepicker.formatTime(altTimeFormat, tp_inst, tp_inst._defaults) + altTimeSuffix;\r\n\t\t\t\tif (!tp_inst._defaults.timeOnly && !tp_inst._defaults.altFieldTimeOnly && date !== null) {\r\n\t\t\t\t\tif (tp_inst._defaults.altFormat) {\r\n\t\t\t\t\t\taltFormattedDateTime = $.datepicker.formatDate(tp_inst._defaults.altFormat, date, formatCfg) + altSeparator + altFormattedDateTime;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\taltFormattedDateTime = tp_inst.formattedDate + altSeparator + altFormattedDateTime;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$(altField).val( inst.input.val() ? altFormattedDateTime : \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$.datepicker._base_updateAlternate(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t\/*\r\n\t * Override key up event to sync manual input changes.\r\n\t *\/\r\n\t$.datepicker._base_doKeyUp = $.datepicker._doKeyUp;\r\n\t$.datepicker._doKeyUp = function (event) {\r\n\t\tvar inst = $.datepicker._getInst(event.target),\r\n\t\t\ttp_inst = $.datepicker._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\tif (tp_inst._defaults.timeOnly && (inst.input.val() !== inst.lastVal)) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\t$.datepicker._updateDatepicker(inst);\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\t$.timepicker.log(err);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn $.datepicker._base_doKeyUp(event);\r\n\t};\r\n\r\n\t\/*\r\n\t * override \"Today\" button to also grab the time and set it to input field.\r\n\t *\/\r\n\t$.datepicker._base_gotoToday = $.datepicker._gotoToday;\r\n\t$.datepicker._gotoToday = function (id) {\r\n\t\tvar inst = this._getInst($(id)[0]);\r\n\t\tthis._base_gotoToday(id);\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (!tp_inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tzoffset = $.timepicker.timezoneOffsetNumber(tp_inst.timezone);\r\n\t\tvar now = new Date();\r\n\t\tnow.setMinutes(now.getMinutes() + now.getTimezoneOffset() + parseInt(tzoffset, 10));\r\n\t\tthis._setTime(inst, now);\r\n\t\tthis._setDate(inst, now);\r\n\t\ttp_inst._onSelectHandler();\r\n\t};\r\n\r\n\t\/*\r\n\t * Disable & enable the Time in the datetimepicker\r\n\t *\/\r\n\t$.datepicker._disableTimepickerDatepicker = function (target) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\t$(target).datepicker('getDate'); \/\/ Init selected[Year|Month|Day]\r\n\t\tif (tp_inst) {\r\n\t\t\tinst.settings.showTimepicker = false;\r\n\t\t\ttp_inst._defaults.showTimepicker = false;\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t$.datepicker._enableTimepickerDatepicker = function (target) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\t$(target).datepicker('getDate'); \/\/ Init selected[Year|Month|Day]\r\n\t\tif (tp_inst) {\r\n\t\t\tinst.settings.showTimepicker = true;\r\n\t\t\ttp_inst._defaults.showTimepicker = true;\r\n\t\t\ttp_inst._addTimePicker(inst); \/\/ Could be disabled on page load\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t\/*\r\n\t * Create our own set time function\r\n\t *\/\r\n\t$.datepicker._setTime = function (inst, date) {\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\tvar defaults = tp_inst._defaults;\r\n\r\n\t\t\t\/\/ calling _setTime with no date sets time to defaults\r\n\t\t\ttp_inst.hour = date ? date.getHours() : defaults.hour;\r\n\t\t\ttp_inst.minute = date ? date.getMinutes() : defaults.minute;\r\n\t\t\ttp_inst.second = date ? date.getSeconds() : defaults.second;\r\n\t\t\ttp_inst.millisec = date ? date.getMilliseconds() : defaults.millisec;\r\n\t\t\ttp_inst.microsec = date ? date.getMicroseconds() : defaults.microsec;\r\n\r\n\t\t\t\/\/check if within min\/max times..\r\n\t\t\ttp_inst._limitMinMaxDateTime(inst, true);\r\n\r\n\t\t\ttp_inst._onTimeChange();\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t}\r\n\t};\r\n\r\n\t\/*\r\n\t * Create new public method to set only time, callable as $().datepicker('setTime', date)\r\n\t *\/\r\n\t$.datepicker._setTimeDatepicker = function (target, date, withDate) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\tthis._setDateFromField(inst);\r\n\t\t\tvar tp_date;\r\n\t\t\tif (date) {\r\n\t\t\t\tif (typeof date === \"string\") {\r\n\t\t\t\t\ttp_inst._parseTime(date, withDate);\r\n\t\t\t\t\ttp_date = new Date();\r\n\t\t\t\t\ttp_date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\r\n\t\t\t\t\ttp_date.setMicroseconds(tp_inst.microsec);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttp_date = new Date(date.getTime());\r\n\t\t\t\t\ttp_date.setMicroseconds(date.getMicroseconds());\r\n\t\t\t\t}\r\n\t\t\t\tif (tp_date.toString() === 'Invalid Date') {\r\n\t\t\t\t\ttp_date = undefined;\r\n\t\t\t\t}\r\n\t\t\t\tthis._setTime(inst, tp_date);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t\/*\r\n\t * override setDate() to allow setting time too within Date object\r\n\t *\/\r\n\t$.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker;\r\n\t$.datepicker._setDateDatepicker = function (target, _date) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tvar date = _date;\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (typeof(_date) === 'string') {\r\n\t\t\tdate = new Date(_date);\r\n\t\t\tif (!date.getTime()) {\r\n\t\t\t\tthis._base_setDateDatepicker.apply(this, arguments);\r\n\t\t\t\tdate = $(target).datepicker('getDate');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tvar tp_date;\r\n\t\tif (date instanceof Date) {\r\n\t\t\ttp_date = new Date(date.getTime());\r\n\t\t\ttp_date.setMicroseconds(date.getMicroseconds());\r\n\t\t} else {\r\n\t\t\ttp_date = date;\r\n\t\t}\r\n\r\n\t\t\/\/ This is important if you are using the timezone option, javascript's Date\r\n\t\t\/\/ object will only return the timezone offset for the current locale, so we\r\n\t\t\/\/ adjust it accordingly.  If not using timezone option this won't matter..\r\n\t\t\/\/ If a timezone is different in tp, keep the timezone as is\r\n\t\tif (tp_inst && tp_date) {\r\n\t\t\t\/\/ look out for DST if tz wasn't specified\r\n\t\t\tif (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\r\n\t\t\t\ttp_inst.timezone = tp_date.getTimezoneOffset() * -1;\r\n\t\t\t}\r\n\t\t\tdate = $.timepicker.timezoneAdjust(date, $.timepicker.timezoneOffsetString(-date.getTimezoneOffset()), tp_inst.timezone);\r\n\t\t\ttp_date = $.timepicker.timezoneAdjust(tp_date, $.timepicker.timezoneOffsetString(-tp_date.getTimezoneOffset()), tp_inst.timezone);\r\n\t\t}\r\n\r\n\t\tthis._updateDatepicker(inst);\r\n\t\tthis._base_setDateDatepicker.apply(this, arguments);\r\n\t\tthis._setTimeDatepicker(target, tp_date, true);\r\n\t};\r\n\r\n\t\/*\r\n\t * override getDate() to allow getting time too within Date object\r\n\t *\/\r\n\t$.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker;\r\n\t$.datepicker._getDateDatepicker = function (target, noDefault) {\r\n\t\tvar inst = this._getInst(target);\r\n\t\tif (!inst) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\r\n\t\tif (tp_inst) {\r\n\t\t\t\/\/ if it hasn't yet been defined, grab from field\r\n\t\t\tif (inst.lastVal === undefined) {\r\n\t\t\t\tthis._setDateFromField(inst, noDefault);\r\n\t\t\t}\r\n\r\n\t\t\tvar date = this._getDate(inst);\r\n\r\n\t\t\tvar currDT = null;\r\n\r\n\t\t\tif (tp_inst.$altInput && tp_inst._defaults.altFieldTimeOnly) {\r\n\t\t\t\tcurrDT = tp_inst.$input.val() + ' ' + tp_inst.$altInput.val();\r\n\t\t\t}\r\n\t\t\telse if (tp_inst.$input.get(0).tagName !== 'INPUT' && tp_inst.$altInput) {\r\n\t\t\t\t\/**\r\n\t\t\t\t * in case the datetimepicker has been applied to a non-input tag for inline UI,\r\n\t\t\t\t * and the user has not configured the plugin to display only time in altInput,\r\n\t\t\t\t * pick current date time from the altInput (and hope for the best, for now, until \"ER1\" is applied)\r\n\t\t\t\t *\r\n\t\t\t\t * @todo ER1. Since altInput can have a totally difference format, convert it to standard format by reading input format from \"altFormat\" and \"altTimeFormat\" option values\r\n\t\t\t\t *\/\r\n\t\t\t\tcurrDT = tp_inst.$altInput.val();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcurrDT = tp_inst.$input.val();\r\n\t\t\t}\r\n\r\n\t\t\tif (date && tp_inst._parseTime(currDT, !inst.settings.timeOnly)) {\r\n\t\t\t\tdate.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second, tp_inst.millisec);\r\n\t\t\t\tdate.setMicroseconds(tp_inst.microsec);\r\n\r\n\t\t\t\t\/\/ This is important if you are using the timezone option, javascript's Date\r\n\t\t\t\t\/\/ object will only return the timezone offset for the current locale, so we\r\n\t\t\t\t\/\/ adjust it accordingly.  If not using timezone option this won't matter..\r\n\t\t\t\tif (tp_inst.timezone != null) {\r\n\t\t\t\t\t\/\/ look out for DST if tz wasn't specified\r\n\t\t\t\t\tif (!tp_inst.support.timezone && tp_inst._defaults.timezone === null) {\r\n\t\t\t\t\t\ttp_inst.timezone = date.getTimezoneOffset() * -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdate = $.timepicker.timezoneAdjust(date, tp_inst.timezone, $.timepicker.timezoneOffsetString(-date.getTimezoneOffset()));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn date;\r\n\t\t}\r\n\t\treturn this._base_getDateDatepicker(target, noDefault);\r\n\t};\r\n\r\n\t\/*\r\n\t * override parseDate() because UI 1.8.14 throws an error about \"Extra characters\"\r\n\t * An option in datapicker to ignore extra format characters would be nicer.\r\n\t *\/\r\n\t$.datepicker._base_parseDate = $.datepicker.parseDate;\r\n\t$.datepicker.parseDate = function (format, value, settings) {\r\n\t\tvar date;\r\n\t\ttry {\r\n\t\t\tdate = this._base_parseDate(format, value, settings);\r\n\t\t} catch (err) {\r\n\t\t\t\/\/ Hack!  The error message ends with a colon, a space, and\r\n\t\t\t\/\/ the \"extra\" characters.  We rely on that instead of\r\n\t\t\t\/\/ attempting to perfectly reproduce the parsing algorithm.\r\n\t\t\tif (err.indexOf(\":\") >= 0) {\r\n\t\t\t\tdate = this._base_parseDate(format, value.substring(0, value.length - (err.length - err.indexOf(':') - 2)), settings);\r\n\t\t\t\t$.timepicker.log(\"Error parsing the date string: \" + err + \"\\ndate string = \" + value + \"\\ndate format = \" + format);\r\n\t\t\t} else {\r\n\t\t\t\tthrow err;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn date;\r\n\t};\r\n\r\n\t\/*\r\n\t * override formatDate to set date with time to the input\r\n\t *\/\r\n\t$.datepicker._base_formatDate = $.datepicker._formatDate;\r\n\t$.datepicker._formatDate = function (inst, day, month, year) {\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\ttp_inst._updateDateTime(inst);\r\n\t\t\treturn tp_inst.$input.val();\r\n\t\t}\r\n\t\treturn this._base_formatDate(inst);\r\n\t};\r\n\r\n\t\/*\r\n\t * override options setter to add time to maxDate(Time) and minDate(Time). MaxDate\r\n\t *\/\r\n\t$.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker;\r\n\t$.datepicker._optionDatepicker = function (target, name, value) {\r\n\t\tvar inst = this._getInst(target),\r\n\t\t\tname_clone;\r\n\t\tif (!inst) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar tp_inst = this._get(inst, 'timepicker');\r\n\t\tif (tp_inst) {\r\n\t\t\tvar min = null,\r\n\t\t\t\tmax = null,\r\n\t\t\t\tonselect = null,\r\n\t\t\t\toverrides = tp_inst._defaults.evnts,\r\n\t\t\t\tfns = {},\r\n\t\t\t\tprop,\r\n\t\t\t\tret,\r\n\t\t\t\toldVal,\r\n\t\t\t\t$target;\r\n\t\t\tif (typeof name === 'string') { \/\/ if min\/max was set with the string\r\n\t\t\t\tif (name === 'minDate' || name === 'minDateTime') {\r\n\t\t\t\t\tmin = value;\r\n\t\t\t\t} else if (name === 'maxDate' || name === 'maxDateTime') {\r\n\t\t\t\t\tmax = value;\r\n\t\t\t\t} else if (name === 'onSelect') {\r\n\t\t\t\t\tonselect = value;\r\n\t\t\t\t} else if (overrides.hasOwnProperty(name)) {\r\n\t\t\t\t\tif (typeof (value) === 'undefined') {\r\n\t\t\t\t\t\treturn overrides[name];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfns[name] = value;\r\n\t\t\t\t\tname_clone = {}; \/\/empty results in exiting function after overrides updated\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof name === 'object') { \/\/if min\/max was set with the JSON\r\n\t\t\t\tif (name.minDate) {\r\n\t\t\t\t\tmin = name.minDate;\r\n\t\t\t\t} else if (name.minDateTime) {\r\n\t\t\t\t\tmin = name.minDateTime;\r\n\t\t\t\t} else if (name.maxDate) {\r\n\t\t\t\t\tmax = name.maxDate;\r\n\t\t\t\t} else if (name.maxDateTime) {\r\n\t\t\t\t\tmax = name.maxDateTime;\r\n\t\t\t\t}\r\n\t\t\t\tfor (prop in overrides) {\r\n\t\t\t\t\tif (overrides.hasOwnProperty(prop) && name[prop]) {\r\n\t\t\t\t\t\tfns[prop] = name[prop];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (prop in fns) {\r\n\t\t\t\tif (fns.hasOwnProperty(prop)) {\r\n\t\t\t\t\toverrides[prop] = fns[prop];\r\n\t\t\t\t\tif (!name_clone) { name_clone = $.extend({}, name); }\r\n\t\t\t\t\tdelete name_clone[prop];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (name_clone && isEmptyObject(name_clone)) { return; }\r\n\t\t\tif (min) { \/\/if min was set\r\n\t\t\t\tif (min === 0) {\r\n\t\t\t\t\tmin = new Date();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmin = new Date(min);\r\n\t\t\t\t}\r\n\t\t\t\ttp_inst._defaults.minDate = min;\r\n\t\t\t\ttp_inst._defaults.minDateTime = min;\r\n\t\t\t} else if (max) { \/\/if max was set\r\n\t\t\t\tif (max === 0) {\r\n\t\t\t\t\tmax = new Date();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmax = new Date(max);\r\n\t\t\t\t}\r\n\t\t\t\ttp_inst._defaults.maxDate = max;\r\n\t\t\t\ttp_inst._defaults.maxDateTime = max;\r\n\t\t\t} else if (onselect) {\r\n\t\t\t\ttp_inst._defaults.onSelect = onselect;\r\n\t\t\t}\r\n\r\n\t\t\t\/\/ Datepicker will override our date when we call _base_optionDatepicker when\r\n\t\t\t\/\/ calling minDate\/maxDate, so we will first grab the value, call\r\n\t\t\t\/\/ _base_optionDatepicker, then set our value back.\r\n\t\t\tif(min || max){\r\n\t\t\t\t$target = $(target);\r\n\t\t\t\toldVal = $target.datetimepicker('getDate');\r\n\t\t\t\tret = this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value);\r\n\t\t\t\t$target.datetimepicker('setDate', oldVal);\r\n\t\t\t\treturn ret;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (value === undefined) {\r\n\t\t\treturn this._base_optionDatepicker.call($.datepicker, target, name);\r\n\t\t}\r\n\t\treturn this._base_optionDatepicker.call($.datepicker, target, name_clone || name, value);\r\n\t};\r\n\r\n\t\/*\r\n\t * jQuery isEmptyObject does not check hasOwnProperty - if someone has added to the object prototype,\r\n\t * it will return false for all objects\r\n\t *\/\r\n\tvar isEmptyObject = function (obj) {\r\n\t\tvar prop;\r\n\t\tfor (prop in obj) {\r\n\t\t\tif (obj.hasOwnProperty(prop)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\r\n\t\/*\r\n\t * jQuery extend now ignores nulls!\r\n\t *\/\r\n\tvar extendRemove = function (target, props) {\r\n\t\t$.extend(target, props);\r\n\t\tfor (var name in props) {\r\n\t\t\tif (props[name] === null || props[name] === undefined) {\r\n\t\t\t\ttarget[name] = props[name];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t\/*\r\n\t * Determine by the time format which units are supported\r\n\t * Returns an object of booleans for each unit\r\n\t *\/\r\n\tvar detectSupport = function (timeFormat) {\r\n\t\tvar tf = timeFormat.replace(\/'.*?'\/g, '').toLowerCase(), \/\/ removes literals\r\n\t\t\tisIn = function (f, t) { \/\/ does the format contain the token?\r\n\t\t\t\treturn f.indexOf(t) !== -1 ? true : false;\r\n\t\t\t};\r\n\t\treturn {\r\n\t\t\thour: isIn(tf, 'h'),\r\n\t\t\tminute: isIn(tf, 'm'),\r\n\t\t\tsecond: isIn(tf, 's'),\r\n\t\t\tmillisec: isIn(tf, 'l'),\r\n\t\t\tmicrosec: isIn(tf, 'c'),\r\n\t\t\ttimezone: isIn(tf, 'z'),\r\n\t\t\tampm: isIn(tf, 't') && isIn(timeFormat, 'h'),\r\n\t\t\tiso8601: isIn(timeFormat, 'Z')\r\n\t\t};\r\n\t};\r\n\r\n\t\/*\r\n\t * Converts 24 hour format into 12 hour\r\n\t * Returns 12 hour without leading 0\r\n\t *\/\r\n\tvar convert24to12 = function (hour) {\r\n\t\thour %= 12;\r\n\r\n\t\tif (hour === 0) {\r\n\t\t\thour = 12;\r\n\t\t}\r\n\r\n\t\treturn String(hour);\r\n\t};\r\n\r\n\tvar computeEffectiveSetting = function (settings, property) {\r\n\t\treturn settings && settings[property] ? settings[property] : $.timepicker._defaults[property];\r\n\t};\r\n\r\n\t\/*\r\n\t * Splits datetime string into date and time substrings.\r\n\t * Throws exception when date can't be parsed\r\n\t * Returns {dateString: dateString, timeString: timeString}\r\n\t *\/\r\n\tvar splitDateTime = function (dateTimeString, timeSettings) {\r\n\t\t\/\/ The idea is to get the number separator occurrences in datetime and the time format requested (since time has\r\n\t\t\/\/ fewer unknowns, mostly numbers and am\/pm). We will use the time pattern to split.\r\n\t\tvar separator = computeEffectiveSetting(timeSettings, 'separator'),\r\n\t\t\tformat = computeEffectiveSetting(timeSettings, 'timeFormat'),\r\n\t\t\ttimeParts = format.split(separator), \/\/ how many occurrences of separator may be in our format?\r\n\t\t\ttimePartsLen = timeParts.length,\r\n\t\t\tallParts = dateTimeString.split(separator),\r\n\t\t\tallPartsLen = allParts.length;\r\n\r\n\t\tif (allPartsLen > 1) {\r\n\t\t\treturn {\r\n\t\t\t\tdateString: allParts.splice(0, allPartsLen - timePartsLen).join(separator),\r\n\t\t\t\ttimeString: allParts.splice(0, timePartsLen).join(separator)\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdateString: dateTimeString,\r\n\t\t\ttimeString: ''\r\n\t\t};\r\n\t};\r\n\r\n\t\/*\r\n\t * Internal function to parse datetime interval\r\n\t * Returns: {date: Date, timeObj: Object}, where\r\n\t *   date - parsed date without time (type Date)\r\n\t *   timeObj = {hour: , minute: , second: , millisec: , microsec: } - parsed time. Optional\r\n\t *\/\r\n\tvar parseDateTimeInternal = function (dateFormat, timeFormat, dateTimeString, dateSettings, timeSettings) {\r\n\t\tvar date,\r\n\t\t\tparts,\r\n\t\t\tparsedTime;\r\n\r\n\t\tparts = splitDateTime(dateTimeString, timeSettings);\r\n\t\tdate = $.datepicker._base_parseDate(dateFormat, parts.dateString, dateSettings);\r\n\r\n\t\tif (parts.timeString === '') {\r\n\t\t\treturn {\r\n\t\t\t\tdate: date\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tparsedTime = $.datepicker.parseTime(timeFormat, parts.timeString, timeSettings);\r\n\r\n\t\tif (!parsedTime) {\r\n\t\t\tthrow 'Wrong time format';\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tdate: date,\r\n\t\t\ttimeObj: parsedTime\r\n\t\t};\r\n\t};\r\n\r\n\t\/*\r\n\t * Internal function to set timezone_select to the local timezone\r\n\t *\/\r\n\tvar selectLocalTimezone = function (tp_inst, date) {\r\n\t\tif (tp_inst && tp_inst.timezone_select) {\r\n\t\t\tvar now = date || new Date();\r\n\t\t\ttp_inst.timezone_select.val(-now.getTimezoneOffset());\r\n\t\t}\r\n\t};\r\n\r\n\t\/*\r\n\t * Create a Singleton Instance\r\n\t *\/\r\n\t$.timepicker = new Timepicker();\r\n\r\n\t\/**\r\n\t * Get the timezone offset as string from a date object (eg '+0530' for UTC+5.5)\r\n\t * @param {number} tzMinutes if not a number, less than -720 (-1200), or greater than 840 (+1400) this value is returned\r\n\t * @param {boolean} iso8601 if true formats in accordance to iso8601 \"+12:45\"\r\n\t * @return {string}\r\n\t *\/\r\n\t$.timepicker.timezoneOffsetString = function (tzMinutes, iso8601) {\r\n\t\tif (isNaN(tzMinutes) || tzMinutes > 840 || tzMinutes < -720) {\r\n\t\t\treturn tzMinutes;\r\n\t\t}\r\n\r\n\t\tvar off = tzMinutes,\r\n\t\t\tminutes = off % 60,\r\n\t\t\thours = (off - minutes) \/ 60,\r\n\t\t\tiso = iso8601 ? ':' : '',\r\n\t\t\ttz = (off >= 0 ? '+' : '-') + ('0' + Math.abs(hours)).slice(-2) + iso + ('0' + Math.abs(minutes)).slice(-2);\r\n\r\n\t\tif (tz === '+00:00') {\r\n\t\t\treturn 'Z';\r\n\t\t}\r\n\t\treturn tz;\r\n\t};\r\n\r\n\t\/**\r\n\t * Get the number in minutes that represents a timezone string\r\n\t * @param  {string} tzString formatted like \"+0500\", \"-1245\", \"Z\"\r\n\t * @return {number} the offset minutes or the original string if it doesn't match expectations\r\n\t *\/\r\n\t$.timepicker.timezoneOffsetNumber = function (tzString) {\r\n\t\tvar normalized = tzString.toString().replace(':', ''); \/\/ excuse any iso8601, end up with \"+1245\"\r\n\r\n\t\tif (normalized.toUpperCase() === 'Z') { \/\/ if iso8601 with Z, its 0 minute offset\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (!\/^(\\-|\\+)\\d{4}$\/.test(normalized)) { \/\/ possibly a user defined tz, so just give it back\r\n\t\t\treturn parseInt(tzString, 10);\r\n\t\t}\r\n\r\n\t\treturn ((normalized.substr(0, 1) === '-' ? -1 : 1) * \/\/ plus or minus\r\n\t\t((parseInt(normalized.substr(1, 2), 10) * 60) + \/\/ hours (converted to minutes)\r\n\t\tparseInt(normalized.substr(3, 2), 10))); \/\/ minutes\r\n\t};\r\n\r\n\t\/**\r\n\t * No way to set timezone in js Date, so we must adjust the minutes to compensate. (think setDate, getDate)\r\n\t * @param  {Date} date\r\n\t * @param  {string} fromTimezone formatted like \"+0500\", \"-1245\"\r\n\t * @param  {string} toTimezone formatted like \"+0500\", \"-1245\"\r\n\t * @return {Date}\r\n\t *\/\r\n\t$.timepicker.timezoneAdjust = function (date, fromTimezone, toTimezone) {\r\n\t\tvar fromTz = $.timepicker.timezoneOffsetNumber(fromTimezone);\r\n\t\tvar toTz = $.timepicker.timezoneOffsetNumber(toTimezone);\r\n\t\tif (!isNaN(toTz)) {\r\n\t\t\tdate.setMinutes(date.getMinutes() + (-fromTz) - (-toTz));\r\n\t\t}\r\n\t\treturn date;\r\n\t};\r\n\r\n\t\/**\r\n\t * Calls `timepicker()` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * n.b. The input value must be correctly formatted (reformatting is not supported)\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the timepicker() call\r\n\t * @return {jQuery}\r\n\t *\/\r\n\t$.timepicker.timeRange = function (startTime, endTime, options) {\r\n\t\treturn $.timepicker.handleRange('timepicker', startTime, endTime, options);\r\n\t};\r\n\r\n\t\/**\r\n\t * Calls `datetimepicker` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\r\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\r\n\t * @param  {string} method Can be used to specify the type of picker to be added\r\n\t * @return {jQuery}\r\n\t *\/\r\n\t$.timepicker.datetimeRange = function (startTime, endTime, options) {\r\n\t\t$.timepicker.handleRange('datetimepicker', startTime, endTime, options);\r\n\t};\r\n\r\n\t\/**\r\n\t * Calls `datepicker` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\r\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\r\n\t * @return {jQuery}\r\n\t *\/\r\n\t$.timepicker.dateRange = function (startTime, endTime, options) {\r\n\t\t$.timepicker.handleRange('datepicker', startTime, endTime, options);\r\n\t};\r\n\r\n\t\/**\r\n\t * Calls `method` on the `startTime` and `endTime` elements, and configures them to\r\n\t * enforce date range limits.\r\n\t * @param  {string} method Can be used to specify the type of picker to be added\r\n\t * @param  {Element} startTime\r\n\t * @param  {Element} endTime\r\n\t * @param  {Object} options Options for the `timepicker()` call. Also supports `reformat`,\r\n\t *   a boolean value that can be used to reformat the input values to the `dateFormat`.\r\n\t * @return {jQuery}\r\n\t *\/\r\n\t$.timepicker.handleRange = function (method, startTime, endTime, options) {\r\n\t\toptions = $.extend({}, {\r\n\t\t\tminInterval: 0, \/\/ min allowed interval in milliseconds\r\n\t\t\tmaxInterval: 0, \/\/ max allowed interval in milliseconds\r\n\t\t\tstart: {},      \/\/ options for start picker\r\n\t\t\tend: {}         \/\/ options for end picker\r\n\t\t}, options);\r\n\r\n\t\t\/\/ for the mean time this fixes an issue with calling getDate with timepicker()\r\n\t\tvar timeOnly = false;\r\n\t\tif(method === 'timepicker'){\r\n\t\t\ttimeOnly = true;\r\n\t\t\tmethod = 'datetimepicker';\r\n\t\t}\r\n\r\n\t\tfunction checkDates(changed, other) {\r\n\t\t\tvar startdt = startTime[method]('getDate'),\r\n\t\t\t\tenddt = endTime[method]('getDate'),\r\n\t\t\t\tchangeddt = changed[method]('getDate');\r\n\r\n\t\t\tif (startdt !== null) {\r\n\t\t\t\tvar minDate = new Date(startdt.getTime()),\r\n\t\t\t\t\tmaxDate = new Date(startdt.getTime());\r\n\r\n\t\t\t\tminDate.setMilliseconds(minDate.getMilliseconds() + options.minInterval);\r\n\t\t\t\tmaxDate.setMilliseconds(maxDate.getMilliseconds() + options.maxInterval);\r\n\r\n\t\t\t\tif (options.minInterval > 0 && minDate > enddt) { \/\/ minInterval check\r\n\t\t\t\t\tendTime[method]('setDate', minDate);\r\n\t\t\t\t}\r\n\t\t\t\telse if (options.maxInterval > 0 && maxDate < enddt) { \/\/ max interval check\r\n\t\t\t\t\tendTime[method]('setDate', maxDate);\r\n\t\t\t\t}\r\n\t\t\t\telse if (startdt > enddt) {\r\n\t\t\t\t\tother[method]('setDate', changeddt);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction selected(changed, other, option) {\r\n\t\t\tif (!changed.val()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tvar date = changed[method].call(changed, 'getDate');\r\n\t\t\tif (date !== null && options.minInterval > 0) {\r\n\t\t\t\tif (option === 'minDate') {\r\n\t\t\t\t\tdate.setMilliseconds(date.getMilliseconds() + options.minInterval);\r\n\t\t\t\t}\r\n\t\t\t\tif (option === 'maxDate') {\r\n\t\t\t\t\tdate.setMilliseconds(date.getMilliseconds() - options.minInterval);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (date.getTime) {\r\n\t\t\t\tother[method].call(other, 'option', option, date);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$.fn[method].call(startTime, $.extend({\r\n\t\t\ttimeOnly: timeOnly,\r\n\t\t\tonClose: function (dateText, inst) {\r\n\t\t\t\tcheckDates($(this), endTime);\r\n\t\t\t},\r\n\t\t\tonSelect: function (selectedDateTime) {\r\n\t\t\t\tselected($(this), endTime, 'minDate');\r\n\t\t\t}\r\n\t\t}, options, options.start));\r\n\t\t$.fn[method].call(endTime, $.extend({\r\n\t\t\ttimeOnly: timeOnly,\r\n\t\t\tonClose: function (dateText, inst) {\r\n\t\t\t\tcheckDates($(this), startTime);\r\n\t\t\t},\r\n\t\t\tonSelect: function (selectedDateTime) {\r\n\t\t\t\tselected($(this), startTime, 'maxDate');\r\n\t\t\t}\r\n\t\t}, options, options.end));\r\n\r\n\t\tcheckDates(startTime, endTime);\r\n\r\n\t\tselected(startTime, endTime, 'minDate');\r\n\t\tselected(endTime, startTime, 'maxDate');\r\n\r\n\t\treturn $([startTime.get(0), endTime.get(0)]);\r\n\t};\r\n\r\n\t\/**\r\n\t * Log error or data to the console during error or debugging\r\n\t * @param  {Object} err pass any type object to log to the console during error or debugging\r\n\t * @return {void}\r\n\t *\/\r\n\t$.timepicker.log = function () {\r\n\t\t\/\/ Older IE (9, maybe 10) throw error on accessing `window.console.log.apply`, so check first.\r\n\t\tif (window.console && window.console.log && window.console.log.apply) {\r\n\t\t\twindow.console.log.apply(window.console, Array.prototype.slice.call(arguments));\r\n\t\t}\r\n\t};\r\n\r\n\t\/*\r\n\t * Add util object to allow access to private methods for testability.\r\n\t *\/\r\n\t$.timepicker._util = {\r\n\t\t_extendRemove: extendRemove,\r\n\t\t_isEmptyObject: isEmptyObject,\r\n\t\t_convert24to12: convert24to12,\r\n\t\t_detectSupport: detectSupport,\r\n\t\t_selectLocalTimezone: selectLocalTimezone,\r\n\t\t_computeEffectiveSetting: computeEffectiveSetting,\r\n\t\t_splitDateTime: splitDateTime,\r\n\t\t_parseDateTimeInternal: parseDateTimeInternal\r\n\t};\r\n\r\n\t\/*\r\n\t * Microsecond support\r\n\t *\/\r\n\tif (!Date.prototype.getMicroseconds) {\r\n\t\tDate.prototype.microseconds = 0;\r\n\t\tDate.prototype.getMicroseconds = function () { return this.microseconds; };\r\n\t\tDate.prototype.setMicroseconds = function (m) {\r\n\t\t\tthis.setMilliseconds(this.getMilliseconds() + Math.floor(m \/ 1000));\r\n\t\t\tthis.microseconds = m % 1000;\r\n\t\t\treturn this;\r\n\t\t};\r\n\t}\r\n\r\n\t\/*\r\n\t * Keep up with the version\r\n\t *\/\r\n\t$.timepicker.version = \"1.6.3\";\r\n\r\n}));"},{"base":"plugins","rel":"wordfence\/js\/date.1756145765.js","ext":"js","size":23344,"mtime":1757312769,"type":"text","content":"Date.getMonthNumberFromName=function(name){var n=Date.CultureInfo.monthNames,m=Date.CultureInfo.abbreviatedMonthNames,s=name.toLowerCase();for(var i=0;i<n.length;i++){if(n[i].toLowerCase()==s||m[i].toLowerCase()==s){return i;}}\nreturn-1;};Date.getDayNumberFromName=function(name){var n=Date.CultureInfo.dayNames,m=Date.CultureInfo.abbreviatedDayNames,o=Date.CultureInfo.shortestDayNames,s=name.toLowerCase();for(var i=0;i<n.length;i++){if(n[i].toLowerCase()==s||m[i].toLowerCase()==s){return i;}}\nreturn-1;};Date.isLeapYear=function(year){return(((year%4===0)&&(year%100!==0))||(year%400===0));};Date.getDaysInMonth=function(year,month){return[31,(Date.isLeapYear(year)?29:28),31,30,31,30,31,31,30,31,30,31][month];};Date.getTimezoneOffset=function(s,dst){return(dst||false)?Date.CultureInfo.abbreviatedTimeZoneDST[s.toUpperCase()]:Date.CultureInfo.abbreviatedTimeZoneStandard[s.toUpperCase()];};Date.getTimezoneAbbreviation=function(offset,dst){var n=(dst||false)?Date.CultureInfo.abbreviatedTimeZoneDST:Date.CultureInfo.abbreviatedTimeZoneStandard,p;for(p in n){if(n[p]===offset){return p;}}\nreturn null;};Date.prototype.clone=function(){return new Date(this.getTime());};Date.prototype.compareTo=function(date){if(isNaN(this)){throw new Error(this);}\nif(date instanceof Date&&!isNaN(date)){return(this>date)?1:(this<date)?-1:0;}else{throw new TypeError(date);}};Date.prototype.equals=function(date){return(this.compareTo(date)===0);};Date.prototype.between=function(start,end){var t=this.getTime();return t>=start.getTime()&&t<=end.getTime();};Date.prototype.addMilliseconds=function(value){this.setMilliseconds(this.getMilliseconds()+value);return this;};Date.prototype.addSeconds=function(value){return this.addMilliseconds(value*1000);};Date.prototype.addMinutes=function(value){return this.addMilliseconds(value*60000);};Date.prototype.addHours=function(value){return this.addMilliseconds(value*3600000);};Date.prototype.addDays=function(value){return this.addMilliseconds(value*86400000);};Date.prototype.addWeeks=function(value){return this.addMilliseconds(value*604800000);};Date.prototype.addMonths=function(value){var n=this.getDate();this.setDate(1);this.setMonth(this.getMonth()+value);this.setDate(Math.min(n,this.getDaysInMonth()));return this;};Date.prototype.addYears=function(value){return this.addMonths(value*12);};Date.prototype.add=function(config){if(typeof config==\"number\"){this._orient=config;return this;}\nvar x=config;if(x.millisecond||x.milliseconds){this.addMilliseconds(x.millisecond||x.milliseconds);}\nif(x.second||x.seconds){this.addSeconds(x.second||x.seconds);}\nif(x.minute||x.minutes){this.addMinutes(x.minute||x.minutes);}\nif(x.hour||x.hours){this.addHours(x.hour||x.hours);}\nif(x.month||x.months){this.addMonths(x.month||x.months);}\nif(x.year||x.years){this.addYears(x.year||x.years);}\nif(x.day||x.days){this.addDays(x.day||x.days);}\nreturn this;};Date._validate=function(value,min,max,name){if(typeof value!=\"number\"){throw new TypeError(value+\" is not a Number.\");}else if(value<min||value>max){throw new RangeError(value+\" is not a valid value for \"+name+\".\");}\nreturn true;};Date.validateMillisecond=function(n){return Date._validate(n,0,999,\"milliseconds\");};Date.validateSecond=function(n){return Date._validate(n,0,59,\"seconds\");};Date.validateMinute=function(n){return Date._validate(n,0,59,\"minutes\");};Date.validateHour=function(n){return Date._validate(n,0,23,\"hours\");};Date.validateDay=function(n,year,month){return Date._validate(n,1,Date.getDaysInMonth(year,month),\"days\");};Date.validateMonth=function(n){return Date._validate(n,0,11,\"months\");};Date.validateYear=function(n){return Date._validate(n,1,9999,\"seconds\");};Date.prototype.set=function(config){var x=config;if(!x.millisecond&&x.millisecond!==0){x.millisecond=-1;}\nif(!x.second&&x.second!==0){x.second=-1;}\nif(!x.minute&&x.minute!==0){x.minute=-1;}\nif(!x.hour&&x.hour!==0){x.hour=-1;}\nif(!x.day&&x.day!==0){x.day=-1;}\nif(!x.month&&x.month!==0){x.month=-1;}\nif(!x.year&&x.year!==0){x.year=-1;}\nif(x.millisecond!=-1&&Date.validateMillisecond(x.millisecond)){this.addMilliseconds(x.millisecond-this.getMilliseconds());}\nif(x.second!=-1&&Date.validateSecond(x.second)){this.addSeconds(x.second-this.getSeconds());}\nif(x.minute!=-1&&Date.validateMinute(x.minute)){this.addMinutes(x.minute-this.getMinutes());}\nif(x.hour!=-1&&Date.validateHour(x.hour)){this.addHours(x.hour-this.getHours());}\nif(x.month!==-1&&Date.validateMonth(x.month)){this.addMonths(x.month-this.getMonth());}\nif(x.year!=-1&&Date.validateYear(x.year)){this.addYears(x.year-this.getFullYear());}\nif(x.day!=-1&&Date.validateDay(x.day,this.getFullYear(),this.getMonth())){this.addDays(x.day-this.getDate());}\nif(x.timezone){this.setTimezone(x.timezone);}\nif(x.timezoneOffset){this.setTimezoneOffset(x.timezoneOffset);}\nreturn this;};Date.prototype.clearTime=function(){this.setHours(0);this.setMinutes(0);this.setSeconds(0);this.setMilliseconds(0);return this;};Date.prototype.isLeapYear=function(){var y=this.getFullYear();return(((y%4===0)&&(y%100!==0))||(y%400===0));};Date.prototype.isWeekday=function(){return!(this.is().sat()||this.is().sun());};Date.prototype.getDaysInMonth=function(){return Date.getDaysInMonth(this.getFullYear(),this.getMonth());};Date.prototype.moveToFirstDayOfMonth=function(){return this.set({day:1});};Date.prototype.moveToLastDayOfMonth=function(){return this.set({day:this.getDaysInMonth()});};Date.prototype.moveToDayOfWeek=function(day,orient){var diff=(day-this.getDay()+7*(orient||+1))%7;return this.addDays((diff===0)?diff+=7*(orient||+1):diff);};Date.prototype.moveToMonth=function(month,orient){var diff=(month-this.getMonth()+12*(orient||+1))%12;return this.addMonths((diff===0)?diff+=12*(orient||+1):diff);};Date.prototype.getDayOfYear=function(){return Math.floor((this-new Date(this.getFullYear(),0,1))\/86400000);};Date.prototype.getWeekOfYear=function(firstDayOfWeek){var y=this.getFullYear(),m=this.getMonth(),d=this.getDate();var dow=firstDayOfWeek||Date.CultureInfo.firstDayOfWeek;var offset=7+1-new Date(y,0,1).getDay();if(offset==8){offset=1;}\nvar daynum=((Date.UTC(y,m,d,0,0,0)-Date.UTC(y,0,1,0,0,0))\/86400000)+1;var w=Math.floor((daynum-offset+7)\/7);if(w===dow){y--;var prevOffset=7+1-new Date(y,0,1).getDay();if(prevOffset==2||prevOffset==8){w=53;}else{w=52;}}\nreturn w;};Date.prototype.isDST=function(){console.log('isDST');return this.toString().match(\/(E|C|M|P)(S|D)T\/)[2]==\"D\";};Date.prototype.getTimezone=function(){return Date.getTimezoneAbbreviation(this.getUTCOffset,this.isDST());};Date.prototype.setTimezoneOffset=function(s){var here=this.getTimezoneOffset(),there=Number(s)*-6\/10;this.addMinutes(there-here);return this;};Date.prototype.setTimezone=function(s){return this.setTimezoneOffset(Date.getTimezoneOffset(s));};Date.prototype.getUTCOffset=function(){var n=this.getTimezoneOffset()*-10\/6,r;if(n<0){r=(n-10000).toString();return r[0]+r.substr(2);}else{r=(n+10000).toString();return\"+\"+r.substr(1);}};Date.prototype.getDayName=function(abbrev){return abbrev?Date.CultureInfo.abbreviatedDayNames[this.getDay()]:Date.CultureInfo.dayNames[this.getDay()];};Date.prototype.getMonthName=function(abbrev){return abbrev?Date.CultureInfo.abbreviatedMonthNames[this.getMonth()]:Date.CultureInfo.monthNames[this.getMonth()];};Date.prototype._toString=Date.prototype.toString;Date.prototype.toString=function(format){var self=this;var p=function p(s){return(s.toString().length==1)?\"0\"+s:s;};return format?format.replace(\/dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?\/g,function(format){switch(format){case\"hh\":return p(self.getHours()<13?self.getHours():(self.getHours()-12));case\"h\":return self.getHours()<13?self.getHours():(self.getHours()-12);case\"HH\":return p(self.getHours());case\"H\":return self.getHours();case\"mm\":return p(self.getMinutes());case\"m\":return self.getMinutes();case\"ss\":return p(self.getSeconds());case\"s\":return self.getSeconds();case\"yyyy\":return self.getFullYear();case\"yy\":return self.getFullYear().toString().substring(2,4);case\"dddd\":return self.getDayName();case\"ddd\":return self.getDayName(true);case\"dd\":return p(self.getDate());case\"d\":return self.getDate().toString();case\"MMMM\":return self.getMonthName();case\"MMM\":return self.getMonthName(true);case\"MM\":return p((self.getMonth()+1));case\"M\":return self.getMonth()+1;case\"t\":return self.getHours()<12?Date.CultureInfo.amDesignator.substring(0,1):Date.CultureInfo.pmDesignator.substring(0,1);case\"tt\":return self.getHours()<12?Date.CultureInfo.amDesignator:Date.CultureInfo.pmDesignator;case\"zzz\":case\"zz\":case\"z\":return\"\";}}):this._toString();};\nDate.now=function(){return new Date();};Date.today=function(){return Date.now().clearTime();};Date.prototype._orient=+1;Date.prototype.next=function(){this._orient=+1;return this;};Date.prototype.last=Date.prototype.prev=Date.prototype.previous=function(){this._orient=-1;return this;};Date.prototype._is=false;Date.prototype.is=function(){this._is=true;return this;};Number.prototype._dateElement=\"day\";Number.prototype.fromNow=function(){var c={};c[this._dateElement]=this;return Date.now().add(c);};Number.prototype.ago=function(){var c={};c[this._dateElement]=this*-1;return Date.now().add(c);};(function(){var $D=Date.prototype,$N=Number.prototype;var dx=(\"sunday monday tuesday wednesday thursday friday saturday\").split(\/\\s\/),mx=(\"january february march april may june july august september october november december\").split(\/\\s\/),px=(\"Millisecond Second Minute Hour Day Week Month Year\").split(\/\\s\/),de;var df=function(n){return function(){if(this._is){this._is=false;return this.getDay()==n;}\nreturn this.moveToDayOfWeek(n,this._orient);};};for(var i=0;i<dx.length;i++){$D[dx[i]]=$D[dx[i].substring(0,3)]=df(i);}\nvar mf=function(n){return function(){if(this._is){this._is=false;return this.getMonth()===n;}\nreturn this.moveToMonth(n,this._orient);};};for(var j=0;j<mx.length;j++){$D[mx[j]]=$D[mx[j].substring(0,3)]=mf(j);}\nvar ef=function(j){return function(){if(j.substring(j.length-1)!=\"s\"){j+=\"s\";}\nreturn this[\"add\"+j](this._orient);};};var nf=function(n){return function(){this._dateElement=n;return this;};};for(var k=0;k<px.length;k++){de=px[k].toLowerCase();$D[de]=$D[de+\"s\"]=ef(px[k]);$N[de]=$N[de+\"s\"]=nf(de);}}());Date.prototype.toJSONString=function(){return this.toString(\"yyyy-MM-ddThh:mm:ssZ\");};Date.prototype.toShortDateString=function(){return this.toString(Date.CultureInfo.formatPatterns.shortDatePattern);};Date.prototype.toLongDateString=function(){return this.toString(Date.CultureInfo.formatPatterns.longDatePattern);};Date.prototype.toShortTimeString=function(){return this.toString(Date.CultureInfo.formatPatterns.shortTimePattern);};Date.prototype.toLongTimeString=function(){return this.toString(Date.CultureInfo.formatPatterns.longTimePattern);};Date.prototype.getOrdinal=function(){switch(this.getDate()){case 1:case 21:case 31:return\"st\";case 2:case 22:return\"nd\";case 3:case 23:return\"rd\";default:return\"th\";}};\n(function(){Date.Parsing={Exception:function(s){this.message=\"Parse error at '\"+s.substring(0,10)+\" ...'\";}};var $P=Date.Parsing;var _=$P.Operators={rtoken:function(r){return function(s){var mx=s.match(r);if(mx){return([mx[0],s.substring(mx[0].length)]);}else{throw new $P.Exception(s);}};},token:function(s){return function(s){return _.rtoken(new RegExp(\"^\\s*\"+s+\"\\s*\"))(s);};},stoken:function(s){return _.rtoken(new RegExp(\"^\"+s));},until:function(p){return function(s){var qx=[],rx=null;while(s.length){try{rx=p.call(this,s);}catch(e){qx.push(rx[0]);s=rx[1];continue;}\nbreak;}\nreturn[qx,s];};},many:function(p){return function(s){var rx=[],r=null;while(s.length){try{r=p.call(this,s);}catch(e){return[rx,s];}\nrx.push(r[0]);s=r[1];}\nreturn[rx,s];};},optional:function(p){return function(s){var r=null;try{r=p.call(this,s);}catch(e){return[null,s];}\nreturn[r[0],r[1]];};},not:function(p){return function(s){try{p.call(this,s);}catch(e){return[null,s];}\nthrow new $P.Exception(s);};},ignore:function(p){return p?function(s){var r=null;r=p.call(this,s);return[null,r[1]];}:null;},product:function(){var px=arguments[0],qx=Array.prototype.slice.call(arguments,1),rx=[];for(var i=0;i<px.length;i++){rx.push(_.each(px[i],qx));}\nreturn rx;},cache:function(rule){var cache={},r=null;return function(s){try{r=cache[s]=(cache[s]||rule.call(this,s));}catch(e){r=cache[s]=e;}\nif(r instanceof $P.Exception){throw r;}else{return r;}};},any:function(){var px=arguments;return function(s){var r=null;for(var i=0;i<px.length;i++){if(px[i]==null){continue;}\ntry{r=(px[i].call(this,s));}catch(e){r=null;}\nif(r){return r;}}\nthrow new $P.Exception(s);};},each:function(){var px=arguments;return function(s){var rx=[],r=null;for(var i=0;i<px.length;i++){if(px[i]==null){continue;}\ntry{r=(px[i].call(this,s));}catch(e){throw new $P.Exception(s);}\nrx.push(r[0]);s=r[1];}\nreturn[rx,s];};},all:function(){var px=arguments,_=_;return _.each(_.optional(px));},sequence:function(px,d,c){d=d||_.rtoken(\/^\\s*\/);c=c||null;if(px.length==1){return px[0];}\nreturn function(s){var r=null,q=null;var rx=[];for(var i=0;i<px.length;i++){try{r=px[i].call(this,s);}catch(e){break;}\nrx.push(r[0]);try{q=d.call(this,r[1]);}catch(ex){q=null;break;}\ns=q[1];}\nif(!r){throw new $P.Exception(s);}\nif(q){throw new $P.Exception(q[1]);}\nif(c){try{r=c.call(this,r[1]);}catch(ey){throw new $P.Exception(r[1]);}}\nreturn[rx,(r?r[1]:s)];};},between:function(d1,p,d2){d2=d2||d1;var _fn=_.each(_.ignore(d1),p,_.ignore(d2));return function(s){var rx=_fn.call(this,s);return[[rx[0][0],r[0][2]],rx[1]];};},list:function(p,d,c){d=d||_.rtoken(\/^\\s*\/);c=c||null;return(p instanceof Array?_.each(_.product(p.slice(0,-1),_.ignore(d)),p.slice(-1),_.ignore(c)):_.each(_.many(_.each(p,_.ignore(d))),px,_.ignore(c)));},set:function(px,d,c){d=d||_.rtoken(\/^\\s*\/);c=c||null;return function(s){var r=null,p=null,q=null,rx=null,best=[[],s],last=false;for(var i=0;i<px.length;i++){q=null;p=null;r=null;last=(px.length==1);try{r=px[i].call(this,s);}catch(e){continue;}\nrx=[[r[0]],r[1]];if(r[1].length>0&&!last){try{q=d.call(this,r[1]);}catch(ex){last=true;}}else{last=true;}\nif(!last&&q[1].length===0){last=true;}\nif(!last){var qx=[];for(var j=0;j<px.length;j++){if(i!=j){qx.push(px[j]);}}\np=_.set(qx,d).call(this,q[1]);if(p[0].length>0){rx[0]=rx[0].concat(p[0]);rx[1]=p[1];}}\nif(rx[1].length<best[1].length){best=rx;}\nif(best[1].length===0){break;}}\nif(best[0].length===0){return best;}\nif(c){try{q=c.call(this,best[1]);}catch(ey){throw new $P.Exception(best[1]);}\nbest[1]=q[1];}\nreturn best;};},forward:function(gr,fname){return function(s){return gr[fname].call(this,s);};},replace:function(rule,repl){return function(s){var r=rule.call(this,s);return[repl,r[1]];};},process:function(rule,fn){return function(s){var r=rule.call(this,s);return[fn.call(this,r[0]),r[1]];};},min:function(min,rule){return function(s){var rx=rule.call(this,s);if(rx[0].length<min){throw new $P.Exception(s);}\nreturn rx;};}};var _generator=function(op){return function(){var args=null,rx=[];if(arguments.length>1){args=Array.prototype.slice.call(arguments);}else if(arguments[0]instanceof Array){args=arguments[0];}\nif(args){for(var i=0,px=args.shift();i<px.length;i++){args.unshift(px[i]);rx.push(op.apply(null,args));args.shift();return rx;}}else{return op.apply(null,arguments);}};};var gx=\"optional not ignore cache\".split(\/\\s\/);for(var i=0;i<gx.length;i++){_[gx[i]]=_generator(_[gx[i]]);}\nvar _vector=function(op){return function(){if(arguments[0]instanceof Array){return op.apply(null,arguments[0]);}else{return op.apply(null,arguments);}};};var vx=\"each any all\".split(\/\\s\/);for(var j=0;j<vx.length;j++){_[vx[j]]=_vector(_[vx[j]]);}}());(function(){var flattenAndCompact=function(ax){var rx=[];for(var i=0;i<ax.length;i++){if(ax[i]instanceof Array){rx=rx.concat(flattenAndCompact(ax[i]));}else{if(ax[i]){rx.push(ax[i]);}}}\nreturn rx;};Date.Grammar={};Date.Translator={hour:function(s){return function(){this.hour=Number(s);};},minute:function(s){return function(){this.minute=Number(s);};},second:function(s){return function(){this.second=Number(s);};},meridian:function(s){return function(){this.meridian=s.slice(0,1).toLowerCase();};},timezone:function(s){return function(){var n=s.replace(\/[^\\d\\+\\-]\/g,\"\");if(n.length){this.timezoneOffset=Number(n);}else{this.timezone=s.toLowerCase();}};},day:function(x){var s=x[0];return function(){this.day=Number(s.match(\/\\d+\/)[0]);};},month:function(s){return function(){this.month=((s.length==3)?Date.getMonthNumberFromName(s):(Number(s)-1));};},year:function(s){return function(){var n=Number(s);this.year=((s.length>2)?n:(n+(((n+2000)<Date.CultureInfo.twoDigitYearMax)?2000:1900)));};},rday:function(s){return function(){switch(s){case\"yesterday\":this.days=-1;break;case\"tomorrow\":this.days=1;break;case\"today\":this.days=0;break;case\"now\":this.days=0;this.now=true;break;}};},finishExact:function(x){x=(x instanceof Array)?x:[x];var now=new Date();this.year=now.getFullYear();this.month=now.getMonth();this.day=1;this.hour=0;this.minute=0;this.second=0;for(var i=0;i<x.length;i++){if(x[i]){x[i].call(this);}}\nthis.hour=(this.meridian==\"p\"&&this.hour<13)?this.hour+12:this.hour;if(this.day>Date.getDaysInMonth(this.year,this.month)){throw new RangeError(this.day+\" is not a valid value for days.\");}\nvar r=new Date(this.year,this.month,this.day,this.hour,this.minute,this.second);if(this.timezone){r.set({timezone:this.timezone});}else if(this.timezoneOffset){r.set({timezoneOffset:this.timezoneOffset});}\nreturn r;},finish:function(x){x=(x instanceof Array)?flattenAndCompact(x):[x];if(x.length===0){return null;}\nfor(var i=0;i<x.length;i++){if(typeof x[i]==\"function\"){x[i].call(this);}}\nif(this.now){return new Date();}\nvar today=Date.today();var method=null;var expression=!!(this.days!=null||this.orient||this.operator);if(expression){var gap,mod,orient;orient=((this.orient==\"past\"||this.operator==\"subtract\")?-1:1);if(this.weekday){this.unit=\"day\";gap=(Date.getDayNumberFromName(this.weekday)-today.getDay());mod=7;this.days=gap?((gap+(orient*mod))%mod):(orient*mod);}\nif(this.month){this.unit=\"month\";gap=(this.month-today.getMonth());mod=12;this.months=gap?((gap+(orient*mod))%mod):(orient*mod);this.month=null;}\nif(!this.unit){this.unit=\"day\";}\nif(this[this.unit+\"s\"]==null||this.operator!=null){if(!this.value){this.value=1;}\nif(this.unit==\"week\"){this.unit=\"day\";this.value=this.value*7;}\nthis[this.unit+\"s\"]=this.value*orient;}\nreturn today.add(this);}else{if(this.meridian&&this.hour){this.hour=(this.hour<13&&this.meridian==\"p\")?this.hour+12:this.hour;}\nif(this.weekday&&!this.day){this.day=(today.addDays((Date.getDayNumberFromName(this.weekday)-today.getDay()))).getDate();}\nif(this.month&&!this.day){this.day=1;}\nreturn today.set(this);}}};var _=Date.Parsing.Operators,g=Date.Grammar,t=Date.Translator,_fn;g.datePartDelimiter=_.rtoken(\/^([\\s\\-\\.\\,\\\/\\x27]+)\/);g.timePartDelimiter=_.stoken(\":\");g.whiteSpace=_.rtoken(\/^\\s*\/);g.generalDelimiter=_.rtoken(\/^(([\\s\\,]|at|on)+)\/);var _C={};g.ctoken=function(keys){var fn=_C[keys];if(!fn){var c=Date.CultureInfo.regexPatterns;var kx=keys.split(\/\\s+\/),px=[];for(var i=0;i<kx.length;i++){px.push(_.replace(_.rtoken(c[kx[i]]),kx[i]));}\nfn=_C[keys]=_.any.apply(null,px);}\nreturn fn;};g.ctoken2=function(key){return _.rtoken(Date.CultureInfo.regexPatterns[key]);};g.h=_.cache(_.process(_.rtoken(\/^(0[0-9]|1[0-2]|[1-9])\/),t.hour));g.hh=_.cache(_.process(_.rtoken(\/^(0[0-9]|1[0-2])\/),t.hour));g.H=_.cache(_.process(_.rtoken(\/^([0-1][0-9]|2[0-3]|[0-9])\/),t.hour));g.HH=_.cache(_.process(_.rtoken(\/^([0-1][0-9]|2[0-3])\/),t.hour));g.m=_.cache(_.process(_.rtoken(\/^([0-5][0-9]|[0-9])\/),t.minute));g.mm=_.cache(_.process(_.rtoken(\/^[0-5][0-9]\/),t.minute));g.s=_.cache(_.process(_.rtoken(\/^([0-5][0-9]|[0-9])\/),t.second));g.ss=_.cache(_.process(_.rtoken(\/^[0-5][0-9]\/),t.second));g.hms=_.cache(_.sequence([g.H,g.mm,g.ss],g.timePartDelimiter));g.t=_.cache(_.process(g.ctoken2(\"shortMeridian\"),t.meridian));g.tt=_.cache(_.process(g.ctoken2(\"longMeridian\"),t.meridian));g.z=_.cache(_.process(_.rtoken(\/^(\\+|\\-)?\\s*\\d\\d\\d\\d?\/),t.timezone));g.zz=_.cache(_.process(_.rtoken(\/^(\\+|\\-)\\s*\\d\\d\\d\\d\/),t.timezone));g.zzz=_.cache(_.process(g.ctoken2(\"timezone\"),t.timezone));g.timeSuffix=_.each(_.ignore(g.whiteSpace),_.set([g.tt,g.zzz]));g.time=_.each(_.optional(_.ignore(_.stoken(\"T\"))),g.hms,g.timeSuffix);g.d=_.cache(_.process(_.each(_.rtoken(\/^([0-2]\\d|3[0-1]|\\d)\/),_.optional(g.ctoken2(\"ordinalSuffix\"))),t.day));g.dd=_.cache(_.process(_.each(_.rtoken(\/^([0-2]\\d|3[0-1])\/),_.optional(g.ctoken2(\"ordinalSuffix\"))),t.day));g.ddd=g.dddd=_.cache(_.process(g.ctoken(\"sun mon tue wed thu fri sat\"),function(s){return function(){this.weekday=s;};}));g.M=_.cache(_.process(_.rtoken(\/^(1[0-2]|0\\d|\\d)\/),t.month));g.MM=_.cache(_.process(_.rtoken(\/^(1[0-2]|0\\d)\/),t.month));g.MMM=g.MMMM=_.cache(_.process(g.ctoken(\"jan feb mar apr may jun jul aug sep oct nov dec\"),t.month));g.y=_.cache(_.process(_.rtoken(\/^(\\d\\d?)\/),t.year));g.yy=_.cache(_.process(_.rtoken(\/^(\\d\\d)\/),t.year));g.yyy=_.cache(_.process(_.rtoken(\/^(\\d\\d?\\d?\\d?)\/),t.year));g.yyyy=_.cache(_.process(_.rtoken(\/^(\\d\\d\\d\\d)\/),t.year));_fn=function(){return _.each(_.any.apply(null,arguments),_.not(g.ctoken2(\"timeContext\")));};g.day=_fn(g.d,g.dd);g.month=_fn(g.M,g.MMM);g.year=_fn(g.yyyy,g.yy);g.orientation=_.process(g.ctoken(\"past future\"),function(s){return function(){this.orient=s;};});g.operator=_.process(g.ctoken(\"add subtract\"),function(s){return function(){this.operator=s;};});g.rday=_.process(g.ctoken(\"yesterday tomorrow today now\"),t.rday);g.unit=_.process(g.ctoken(\"minute hour day week month year\"),function(s){return function(){this.unit=s;};});g.value=_.process(_.rtoken(\/^\\d\\d?(st|nd|rd|th)?\/),function(s){return function(){this.value=s.replace(\/\\D\/g,\"\");};});g.expression=_.set([g.rday,g.operator,g.value,g.unit,g.orientation,g.ddd,g.MMM]);_fn=function(){return _.set(arguments,g.datePartDelimiter);};g.mdy=_fn(g.ddd,g.month,g.day,g.year);g.ymd=_fn(g.ddd,g.year,g.month,g.day);g.dmy=_fn(g.ddd,g.day,g.month,g.year);g.date=function(s){return((g[Date.CultureInfo.dateElementOrder]||g.mdy).call(this,s));};g.format=_.process(_.many(_.any(_.process(_.rtoken(\/^(dd?d?d?|MM?M?M?|yy?y?y?|hh?|HH?|mm?|ss?|tt?|zz?z?)\/),function(fmt){if(g[fmt]){return g[fmt];}else{throw Date.Parsing.Exception(fmt);}}),_.process(_.rtoken(\/^[^dMyhHmstz]+\/),function(s){return _.ignore(_.stoken(s));}))),function(rules){return _.process(_.each.apply(null,rules),t.finishExact);});var _F={};var _get=function(f){return _F[f]=(_F[f]||g.format(f)[0]);};g.formats=function(fx){if(fx instanceof Array){var rx=[];for(var i=0;i<fx.length;i++){rx.push(_get(fx[i]));}\nreturn _.any.apply(null,rx);}else{return _get(fx);}};g._formats=g.formats([\"yyyy-MM-ddTHH:mm:ss\",\"ddd, MMM dd, yyyy H:mm:ss tt\",\"ddd MMM d yyyy HH:mm:ss zzz\",\"d\"]);g._start=_.process(_.set([g.date,g.time,g.expression],g.generalDelimiter,g.whiteSpace),t.finish);g.start=function(s){try{var r=g._formats.call({},s);if(r[1].length===0){return r;}}catch(e){}\nreturn g._start.call({},s);};}());Date._parse=Date.parse;Date.parse=function(s){var r=null;if(!s){return null;}\ntry{r=Date.Grammar.start.call({},s);}catch(e){return null;}\nreturn((r[1].length===0)?r[0]:null);};Date.getParseFunction=function(fx){var fn=Date.Grammar.formats(fx);return function(s){var r=null;try{r=fn.call({},s);}catch(e){return null;}\nreturn((r[1].length===0)?r[0]:null);};};Date.parseExact=function(s,fx){return Date.getParseFunction(fx)(s);};\r\n"},{"base":"plugins","rel":"wordfence\/js\/wfdropdown.1756145765.js","ext":"js","size":4689,"mtime":1757312769,"type":"text","content":"\/* ========================================================================\n * Bootstrap: dropdown.js v3.4.1 (adapted to WF prefix)\n * https:\/\/getbootstrap.com\/docs\/3.4\/javascript\/#dropdowns\n * ========================================================================\n * Copyright 2011-2019 Twitter, Inc.\n * Licensed under MIT (https:\/\/github.com\/twbs\/bootstrap\/blob\/master\/LICENSE)\n * ======================================================================== *\/\n\n\n+function ($) {\n\t'use strict';\n\n\t\/\/ DROPDOWN CLASS DEFINITION\n\t\/\/ =========================\n\n\tvar backdrop = '.wf-dropdown-backdrop'\n\tvar toggle   = '[data-toggle=\"wf-dropdown\"]'\n\tvar WFDropdown = function (element) {\n\t\t$(element).on('click.bs.wf-dropdown', this.toggle)\n\t}\n\n\tWFDropdown.VERSION = '3.4.1'\n\n\tfunction getParent($this) {\n\t\tvar selector = $this.attr('data-target')\n\n\t\tif (!selector) {\n\t\t\tselector = $this.attr('href')\n\t\t\tselector = selector && \/#[A-Za-z]\/.test(selector) && selector.replace(\/.*(?=#[^\\s]*$)\/, '') \/\/ strip for ie7\n\t\t}\n\n\t\tvar $parent = selector !== '#' ? $(document).find(selector) : null\n\n\t\treturn $parent && $parent.length ? $parent : $this.parent()\n\t}\n\n\tfunction clearMenus(e) {\n\t\tif (e && e.which === 3) return\n\t\t$(backdrop).remove()\n\t\t$(toggle).each(function () {\n\t\t\tvar $this         = $(this)\n\t\t\tvar $parent       = getParent($this)\n\t\t\tvar relatedTarget = { relatedTarget: this }\n\n\t\t\tif (!$parent.hasClass('wf-open')) return\n\n\t\t\tif (e && e.type == 'click' && \/input|textarea\/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n\t\t\t$parent.trigger(e = $.Event('hide.bs.wf-dropdown', relatedTarget))\n\n\t\t\tif (e.isDefaultPrevented()) return\n\n\t\t\t$this.attr('aria-expanded', 'false')\n\t\t\t$parent.removeClass('wf-open').trigger($.Event('hidden.bs.wf-dropdown', relatedTarget))\n\t\t})\n\t}\n\n\tWFDropdown.prototype.toggle = function (e) {\n\t\tvar $this = $(this)\n\n\t\tif ($this.is('.wf-disabled, :disabled')) return\n\n\t\tvar $parent  = getParent($this)\n\t\tvar isActive = $parent.hasClass('wf-open')\n\n\t\tclearMenus()\n\n\t\tif (!isActive) {\n\t\t\tif ('ontouchstart' in document.documentElement && !$parent.closest('.wf-navbar-nav').length) {\n\t\t\t\t\/\/ if mobile we use a backdrop because click events don't delegate\n\t\t\t\t$(document.createElement('div'))\n\t\t\t\t\t.addClass('wf-dropdown-backdrop')\n\t\t\t\t\t.insertAfter($(this))\n\t\t\t\t\t.on('click', clearMenus)\n\t\t\t}\n\n\t\t\tvar relatedTarget = { relatedTarget: this }\n\t\t\t$parent.trigger(e = $.Event('show.bs.wf-dropdown', relatedTarget))\n\n\t\t\tif (e.isDefaultPrevented()) return\n\n\t\t\t$this\n\t\t\t\t.trigger('focus')\n\t\t\t\t.attr('aria-expanded', 'true')\n\n\t\t\t$parent\n\t\t\t\t.toggleClass('wf-open')\n\t\t\t\t.trigger($.Event('shown.bs.wf-dropdown', relatedTarget))\n\t\t}\n\n\t\treturn false\n\t}\n\n\tWFDropdown.prototype.keydown = function (e) {\n\t\tif (!\/(38|40|27|32)\/.test(e.which) || \/input|textarea\/i.test(e.target.tagName)) return\n\n\t\tvar $this = $(this)\n\n\t\te.preventDefault()\n\t\te.stopPropagation()\n\n\t\tif ($this.is('.wf-disabled, :disabled')) return\n\n\t\tvar $parent  = getParent($this)\n\t\tvar isActive = $parent.hasClass('wf-open')\n\n\t\tif (!isActive && e.which != 27 || isActive && e.which == 27) {\n\t\t\tif (e.which == 27) $parent.find(toggle).trigger('focus')\n\t\t\treturn $this.trigger('click')\n\t\t}\n\n\t\tvar desc = ' li:not(.wf-disabled):visible a'\n\t\tvar $items = $parent.find('.wf-dropdown-menu' + desc)\n\n\t\tif (!$items.length) return\n\n\t\tvar index = $items.index(e.target)\n\n\t\tif (e.which == 38 && index > 0)                 index--         \/\/ up\n\t\tif (e.which == 40 && index < $items.length - 1) index++         \/\/ down\n\t\tif (!~index)                                    index = 0\n\n\t\t$items.eq(index).trigger('focus')\n\t}\n\n\n\t\/\/ DROPDOWN PLUGIN DEFINITION\n\t\/\/ ==========================\n\n\tfunction WFPlugin(option) {\n\t\treturn this.each(function () {\n\t\t\tvar $this = $(this)\n\t\t\tvar data  = $this.data('bs.wf-dropdown')\n\n\t\t\tif (!data) $this.data('bs.wf-dropdown', (data = new WFDropdown(this)))\n\t\t\tif (typeof option == 'string') data[option].call($this)\n\t\t})\n\t}\n\n\tvar old = $.fn.wfdropdown\n\n\t$.fn.wfdropdown             = WFPlugin\n\t$.fn.wfdropdown.Constructor = WFDropdown\n\n\n\t\/\/ DROPDOWN NO CONFLICT\n\t\/\/ ====================\n\n\t$.fn.wfdropdown.noConflict = function () {\n\t\t$.fn.wfdropdown = old\n\t\treturn this\n\t}\n\n\n\t\/\/ APPLY TO STANDARD DROPDOWN ELEMENTS\n\t\/\/ ===================================\n\n\t$(document)\n\t\t.on('click.bs.wf-dropdown.data-api', clearMenus)\n\t\t.on('click.bs.wf-dropdown.data-api', '.wf-dropdown form', function (e) { e.stopPropagation() })\n\t\t.on('click.bs.wf-dropdown.data-api', toggle, WFDropdown.prototype.toggle)\n\t\t.on('keydown.bs.wf-dropdown.data-api', toggle, WFDropdown.prototype.keydown)\n\t\t.on('keydown.bs.wf-dropdown.data-api', '.wf-dropdown-menu', WFDropdown.prototype.keydown)\n\n}(jQuery);\n"},{"base":"plugins","rel":"wordfence\/js\/wfpopover.1756145765.js","ext":"js","size":22985,"mtime":1757312769,"type":"text","content":"\/* ========================================================================\n * Bootstrap: tooltip.js v3.4.1 and wfpopover.js v3.4.1 (adapted to WF prefix)\n * https:\/\/getbootstrap.com\/docs\/3.4\/javascript\/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2019 Twitter, Inc.\n * Licensed under MIT (https:\/\/github.com\/twbs\/bootstrap\/blob\/master\/LICENSE)\n * ======================================================================== *\/\n\n+function ($) {\n\t'use strict';\n\n\tvar DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn']\n\n\tvar uriAttrs = [\n\t\t'background',\n\t\t'cite',\n\t\t'href',\n\t\t'itemtype',\n\t\t'longdesc',\n\t\t'poster',\n\t\t'src',\n\t\t'xlink:href'\n\t]\n\n\tvar ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\w-]*$\/i\n\n\tvar DefaultWhitelist = {\n\t\t\/\/ Global attributes allowed on any supplied element below.\n\t\t'*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n\t\ta: ['target', 'href', 'title', 'rel'],\n\t\tarea: [],\n\t\tb: [],\n\t\tbr: [],\n\t\tcol: [],\n\t\tcode: [],\n\t\tdiv: [],\n\t\tem: [],\n\t\thr: [],\n\t\th1: [],\n\t\th2: [],\n\t\th3: [],\n\t\th4: [],\n\t\th5: [],\n\t\th6: [],\n\t\ti: [],\n\t\timg: ['src', 'alt', 'title', 'width', 'height'],\n\t\tli: [],\n\t\tol: [],\n\t\tp: [],\n\t\tpre: [],\n\t\ts: [],\n\t\tsmall: [],\n\t\tspan: [],\n\t\tsub: [],\n\t\tsup: [],\n\t\tstrong: [],\n\t\tu: [],\n\t\tul: []\n\t}\n\n\t\/**\n\t * A pattern that recognizes a commonly useful subset of URLs that are safe.\n\t *\n\t * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n\t *\/\n\tvar SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi\n\n\t\/**\n\t * A pattern that matches safe data URLs. Only matches image, video and audio types.\n\t *\n\t * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n\t *\/\n\tvar DATA_URL_PATTERN = \/^data:(?:image\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\/(?:mpeg|mp4|ogg|webm)|audio\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i\n\n\tfunction allowedAttribute(attr, allowedAttributeList) {\n\t\tvar attrName = attr.nodeName.toLowerCase()\n\n\t\tif ($.inArray(attrName, allowedAttributeList) !== -1) {\n\t\t\tif ($.inArray(attrName, uriAttrs) !== -1) {\n\t\t\t\treturn Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n\t\t\t}\n\n\t\t\treturn true\n\t\t}\n\n\t\tvar regExp = $(allowedAttributeList).filter(function (index, value) {\n\t\t\treturn value instanceof RegExp\n\t\t})\n\n\t\t\/\/ Check if a regular expression validates the attribute.\n\t\tfor (var i = 0, l = regExp.length; i < l; i++) {\n\t\t\tif (attrName.match(regExp[i])) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\n\t\treturn false\n\t}\n\n\tfunction sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\n\t\tif (unsafeHtml.length === 0) {\n\t\t\treturn unsafeHtml\n\t\t}\n\n\t\tif (sanitizeFn && typeof sanitizeFn === 'function') {\n\t\t\treturn sanitizeFn(unsafeHtml)\n\t\t}\n\n\t\t\/\/ IE 8 and below don't support createHTMLDocument\n\t\tif (!document.implementation || !document.implementation.createHTMLDocument) {\n\t\t\treturn unsafeHtml\n\t\t}\n\n\t\tvar createdDocument = document.implementation.createHTMLDocument('sanitization')\n\t\tcreatedDocument.body.innerHTML = unsafeHtml\n\n\t\tvar whitelistKeys = $.map(whiteList, function (el, i) { return i })\n\t\tvar elements = $(createdDocument.body).find('*')\n\n\t\tfor (var i = 0, len = elements.length; i < len; i++) {\n\t\t\tvar el = elements[i]\n\t\t\tvar elName = el.nodeName.toLowerCase()\n\n\t\t\tif ($.inArray(elName, whitelistKeys) === -1) {\n\t\t\t\tel.parentNode.removeChild(el)\n\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\tvar attributeList = $.map(el.attributes, function (el) { return el })\n\t\t\tvar whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || [])\n\n\t\t\tfor (var j = 0, len2 = attributeList.length; j < len2; j++) {\n\t\t\t\tif (!allowedAttribute(attributeList[j], whitelistedAttributes)) {\n\t\t\t\t\tel.removeAttribute(attributeList[j].nodeName)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn createdDocument.body.innerHTML\n\t}\n\n\t\/\/ TOOLTIP PUBLIC CLASS DEFINITION\n\t\/\/ ===============================\n\n\tvar WFTooltip = function (element, options) {\n\t\tthis.type       = null\n\t\tthis.options    = null\n\t\tthis.enabled    = null\n\t\tthis.timeout    = null\n\t\tthis.hoverState = null\n\t\tthis.$element   = null\n\t\tthis.inState    = null\n\n\t\tthis.init('wftooltip', element, options)\n\t}\n\n\tWFTooltip.VERSION  = '3.4.1'\n\n\tWFTooltip.TRANSITION_DURATION = 150\n\n\tWFTooltip.DEFAULTS = {\n\t\tanimation: true,\n\t\tplacement: 'top',\n\t\tselector: false,\n\t\ttemplate: '<div class=\"wftooltip\" role=\"wftooltip\"><div class=\"wftooltip-arrow\"><\/div><div class=\"wftooltip-inner\"><\/div><\/div>',\n\t\ttrigger: 'hover focus',\n\t\ttitle: '',\n\t\tdelay: 0,\n\t\thtml: false,\n\t\tcontainer: false,\n\t\tviewport: {\n\t\t\tselector: 'body',\n\t\t\tpadding: 0\n\t\t},\n\t\tsanitize : true,\n\t\tsanitizeFn : null,\n\t\twhiteList : DefaultWhitelist\n\t}\n\n\tWFTooltip.prototype.init = function (type, element, options) {\n\t\tthis.enabled   = true\n\t\tthis.type      = type\n\t\tthis.$element  = $(element)\n\t\tthis.options   = this.getOptions(options)\n\t\tthis.$viewport = this.options.viewport && $(document).find($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n\t\tthis.inState   = { click: false, hover: false, focus: false }\n\n\t\tif (this.$element[0] instanceof document.constructor && !this.options.selector) {\n\t\t\tthrow new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n\t\t}\n\n\t\tvar triggers = this.options.trigger.split(' ')\n\n\t\tfor (var i = triggers.length; i--;) {\n\t\t\tvar trigger = triggers[i]\n\n\t\t\tif (trigger == 'click') {\n\t\t\t\tthis.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n\t\t\t} else if (trigger != 'manual') {\n\t\t\t\tvar eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n\t\t\t\tvar eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n\t\t\t\tthis.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n\t\t\t\tthis.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n\t\t\t}\n\t\t}\n\n\t\tthis.options.selector ?\n\t\t\t(this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n\t\t\tthis.fixTitle()\n\t}\n\n\tWFTooltip.prototype.getDefaults = function () {\n\t\treturn WFTooltip.DEFAULTS\n\t}\n\n\tWFTooltip.prototype.getOptions = function (options) {\n\t\tvar dataAttributes = this.$element.data()\n\n\t\tfor (var dataAttr in dataAttributes) {\n\t\t\tif (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\n\t\t\t\tdelete dataAttributes[dataAttr]\n\t\t\t}\n\t\t}\n\n\t\toptions = $.extend({}, this.getDefaults(), dataAttributes, options)\n\n\t\tif (options.delay && typeof options.delay == 'number') {\n\t\t\toptions.delay = {\n\t\t\t\tshow: options.delay,\n\t\t\t\thide: options.delay\n\t\t\t}\n\t\t}\n\n\t\tif (options.sanitize) {\n\t\t\toptions.template = sanitizeHtml(options.template, options.whiteList, options.sanitizeFn)\n\t\t}\n\n\t\treturn options\n\t}\n\n\tWFTooltip.prototype.getDelegateOptions = function () {\n\t\tvar options  = {}\n\t\tvar defaults = this.getDefaults()\n\n\t\tthis._options && $.each(this._options, function (key, value) {\n\t\t\tif (defaults[key] != value) options[key] = value\n\t\t})\n\n\t\treturn options\n\t}\n\n\tWFTooltip.prototype.enter = function (obj) {\n\t\tvar self = obj instanceof this.constructor ?\n\t\t\tobj : $(obj.currentTarget).data('bs.' + this.type)\n\n\t\tif (!self) {\n\t\t\tself = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n\t\t\t$(obj.currentTarget).data('bs.' + this.type, self)\n\t\t}\n\n\t\tif (obj instanceof $.Event) {\n\t\t\tself.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n\t\t}\n\n\t\tif (self.tip().hasClass('wf-in') || self.hoverState == 'wf-in') {\n\t\t\tself.hoverState = 'wf-in'\n\t\t\treturn\n\t\t}\n\n\t\tclearTimeout(self.timeout)\n\n\t\tself.hoverState = 'wf-in'\n\n\t\tif (!self.options.delay || !self.options.delay.show) return self.show()\n\n\t\tself.timeout = setTimeout(function () {\n\t\t\tif (self.hoverState == 'wf-in') self.show()\n\t\t}, self.options.delay.show)\n\t}\n\n\tWFTooltip.prototype.isInStateTrue = function () {\n\t\tfor (var key in this.inState) {\n\t\t\tif (this.inState[key]) return true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tWFTooltip.prototype.leave = function (obj) {\n\t\tvar self = obj instanceof this.constructor ?\n\t\t\tobj : $(obj.currentTarget).data('bs.' + this.type)\n\n\t\tif (!self) {\n\t\t\tself = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n\t\t\t$(obj.currentTarget).data('bs.' + this.type, self)\n\t\t}\n\n\t\tif (obj instanceof $.Event) {\n\t\t\tself.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n\t\t}\n\n\t\tif (self.isInStateTrue()) return\n\n\t\tclearTimeout(self.timeout)\n\n\t\tself.hoverState = 'wf-out'\n\n\t\tif (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n\t\tself.timeout = setTimeout(function () {\n\t\t\tif (self.hoverState == 'wf-out') self.hide()\n\t\t}, self.options.delay.hide)\n\t}\n\n\tWFTooltip.prototype.show = function () {\n\t\tvar e = $.Event('show.bs.' + this.type)\n\n\t\tif (this.hasContent() && this.enabled) {\n\t\t\tthis.$element.trigger(e)\n\n\t\t\tvar inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n\t\t\tif (e.isDefaultPrevented() || !inDom) return\n\t\t\tvar that = this\n\n\t\t\tvar $tip = this.tip()\n\n\t\t\tvar tipId = this.getUID(this.type)\n\n\t\t\tthis.setContent()\n\t\t\t$tip.attr('id', tipId)\n\t\t\tthis.$element.attr('aria-describedby', tipId)\n\n\t\t\tif (this.options.animation) $tip.addClass('wf-fade')\n\n\t\t\tvar placement = typeof this.options.placement == 'function' ?\n\t\t\t\tthis.options.placement.call(this, $tip[0], this.$element[0]) :\n\t\t\t\tthis.options.placement\n\n\t\t\tvar autoToken = \/\\s?auto?\\s?\/i\n\t\t\tvar autoPlace = autoToken.test(placement)\n\t\t\tif (autoPlace) placement = placement.replace(autoToken, '') || 'wf-top'\n\n\t\t\t$tip\n\t\t\t\t.detach()\n\t\t\t\t.css({ top: 0, left: 0, display: 'block' })\n\t\t\t\t.addClass(placement)\n\t\t\t\t.data('bs.' + this.type, this)\n\n\t\t\tthis.options.container ? $tip.appendTo($(document).find(this.options.container)) : $tip.insertAfter(this.$element)\n\t\t\tthis.$element.trigger('inserted.bs.' + this.type)\n\n\t\t\tvar pos          = this.getPosition()\n\t\t\tvar actualWidth  = $tip[0].offsetWidth\n\t\t\tvar actualHeight = $tip[0].offsetHeight\n\n\t\t\tif (autoPlace) {\n\t\t\t\tvar orgPlacement = placement\n\t\t\t\tvar viewportDim = this.getPosition(this.$viewport)\n\n\t\t\t\tplacement = placement == 'wf-bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'wf-top'    :\n\t\t\t\t\tplacement == 'wf-top'    && pos.top    - actualHeight < viewportDim.top    ? 'wf-bottom' :\n\t\t\t\t\t\tplacement == 'wf-right'  && pos.right  + actualWidth  > viewportDim.width  ? 'wf-left'   :\n\t\t\t\t\t\t\tplacement == 'wf-left'   && pos.left   - actualWidth  < viewportDim.left   ? 'wf-right'  :\n\t\t\t\t\t\t\t\tplacement\n\n\t\t\t\t$tip\n\t\t\t\t\t.removeClass(orgPlacement)\n\t\t\t\t\t.addClass(placement)\n\t\t\t}\n\n\t\t\tvar calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n\t\t\tthis.applyPlacement(calculatedOffset, placement)\n\n\t\t\tvar complete = function () {\n\t\t\t\tvar prevHoverState = that.hoverState\n\t\t\t\tthat.$element.trigger('shown.bs.' + that.type)\n\t\t\t\tthat.hoverState = null\n\n\t\t\t\tif (prevHoverState == 'wf-out') that.leave(that)\n\t\t\t}\n\n\t\t\t$.support.transition && this.$tip.hasClass('wf-fade') ?\n\t\t\t\t$tip\n\t\t\t\t\t.one('bsTransitionEnd', complete)\n\t\t\t\t\t.emulateTransitionEnd(WFTooltip.TRANSITION_DURATION) :\n\t\t\t\tcomplete()\n\t\t}\n\t}\n\n\tWFTooltip.prototype.applyPlacement = function (offset, placement) {\n\t\tvar $tip   = this.tip()\n\t\tvar width  = $tip[0].offsetWidth\n\t\tvar height = $tip[0].offsetHeight\n\n\t\t\/\/ manually read margins because getBoundingClientRect includes difference\n\t\tvar marginTop = parseInt($tip.css('margin-top'), 10)\n\t\tvar marginLeft = parseInt($tip.css('margin-left'), 10)\n\n\t\t\/\/ we must check for NaN for ie 8\/9\n\t\tif (isNaN(marginTop))  marginTop  = 0\n\t\tif (isNaN(marginLeft)) marginLeft = 0\n\n\t\toffset.top  += marginTop\n\t\toffset.left += marginLeft\n\n\t\t\/\/ $.fn.offset doesn't round pixel values\n\t\t\/\/ so we use setOffset directly with our own function B-0\n\t\t$.offset.setOffset($tip[0], $.extend({\n\t\t\tusing: function (props) {\n\t\t\t\t$tip.css({\n\t\t\t\t\ttop: Math.round(props.top),\n\t\t\t\t\tleft: Math.round(props.left)\n\t\t\t\t})\n\t\t\t}\n\t\t}, offset), 0)\n\n\t\t$tip.addClass('wf-in')\n\n\t\t\/\/ check to see if placing tip in new offset caused the tip to resize itself\n\t\tvar actualWidth  = $tip[0].offsetWidth\n\t\tvar actualHeight = $tip[0].offsetHeight\n\n\t\tif (placement == 'wf-top' && actualHeight != height) {\n\t\t\toffset.top = offset.top + height - actualHeight\n\t\t}\n\n\t\tvar delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n\t\tif (delta.left) offset.left += delta.left\n\t\telse offset.top += delta.top\n\n\t\tvar isVertical          = \/top|bottom\/.test(placement)\n\t\tvar arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n\t\tvar arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n\t\t$tip.offset(offset)\n\t\tthis.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n\t}\n\n\tWFTooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n\t\tthis.arrow()\n\t\t\t.css(isVertical ? 'left' : 'top', 50 * (1 - delta \/ dimension) + '%')\n\t\t\t.css(isVertical ? 'top' : 'left', '')\n\t}\n\n\tWFTooltip.prototype.setContent = function () {\n\t\tvar $tip  = this.tip()\n\t\tvar title = this.getTitle()\n\n\t\tif (this.options.html) {\n\t\t\tif (this.options.sanitize) {\n\t\t\t\ttitle = sanitizeHtml(title, this.options.whiteList, this.options.sanitizeFn)\n\t\t\t}\n\n\t\t\t$tip.find('.wftooltip-inner').html(title)\n\t\t} else {\n\t\t\t$tip.find('.wftooltip-inner').text(title)\n\t\t}\n\n\t\t$tip.removeClass('wf-fade wf-in wf-top wf-bottom wf-left wf-right')\n\t}\n\n\tWFTooltip.prototype.hide = function (callback) {\n\t\tvar that = this\n\t\tvar $tip = $(this.$tip)\n\t\tvar e    = $.Event('hide.bs.' + this.type)\n\n\t\tfunction complete() {\n\t\t\tif (that.hoverState != 'in') $tip.detach()\n\t\t\tif (that.$element) { \/\/ TODO: Check whether guarding this code with this `if` is really necessary.\n\t\t\t\tthat.$element\n\t\t\t\t\t.removeAttr('aria-describedby')\n\t\t\t\t\t.trigger('hidden.bs.' + that.type)\n\t\t\t}\n\t\t\tcallback && callback()\n\t\t}\n\n\t\tthis.$element.trigger(e)\n\n\t\tif (e.isDefaultPrevented()) return\n\n\t\t$tip.removeClass('wf-in')\n\n\t\t$.support.transition && $tip.hasClass('wf-fade') ?\n\t\t\t$tip\n\t\t\t\t.one('bsTransitionEnd', complete)\n\t\t\t\t.emulateTransitionEnd(WFTooltip.TRANSITION_DURATION) :\n\t\t\tcomplete()\n\n\t\tthis.hoverState = null\n\n\t\treturn this\n\t}\n\n\tWFTooltip.prototype.fixTitle = function () {\n\t\tvar $e = this.$element\n\t\tif ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n\t\t\t$e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n\t\t}\n\t}\n\n\tWFTooltip.prototype.hasContent = function () {\n\t\treturn this.getTitle()\n\t}\n\n\tWFTooltip.prototype.getPosition = function ($element) {\n\t\t$element   = $element || this.$element\n\n\t\tvar el     = $element[0]\n\t\tvar isBody = el.tagName == 'BODY'\n\n\t\tvar elRect    = el.getBoundingClientRect()\n\t\tif (elRect.width == null) {\n\t\t\t\/\/ width and height are missing in IE8, so compute them manually; see https:\/\/github.com\/twbs\/bootstrap\/issues\/14093\n\t\t\telRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n\t\t}\n\t\tvar isSvg = window.SVGElement && el instanceof window.SVGElement\n\t\t\/\/ Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.\n\t\t\/\/ See https:\/\/github.com\/twbs\/bootstrap\/issues\/20280\n\t\tvar elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())\n\t\tvar scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n\t\tvar outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n\t\treturn $.extend({}, elRect, scroll, outerDims, elOffset)\n\t}\n\n\tWFTooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n\t\treturn placement == 'wf-bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width \/ 2 - actualWidth \/ 2 } :\n\t\t\tplacement == 'wf-top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width \/ 2 - actualWidth \/ 2 } :\n\t\t\t\tplacement == 'wf-left'   ? { top: pos.top + pos.height \/ 2 - actualHeight \/ 2, left: pos.left - actualWidth } :\n\t\t\t\t\t\/* placement == 'wf-right' *\/ { top: pos.top + pos.height \/ 2 - actualHeight \/ 2, left: pos.left + pos.width }\n\n\t}\n\n\tWFTooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n\t\tvar delta = { top: 0, left: 0 }\n\t\tif (!this.$viewport) return delta\n\n\t\tvar viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n\t\tvar viewportDimensions = this.getPosition(this.$viewport)\n\n\t\tif (\/right|left\/.test(placement)) {\n\t\t\tvar topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n\t\t\tvar bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n\t\t\tif (topEdgeOffset < viewportDimensions.top) { \/\/ top overflow\n\t\t\t\tdelta.top = viewportDimensions.top - topEdgeOffset\n\t\t\t} else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { \/\/ bottom overflow\n\t\t\t\tdelta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n\t\t\t}\n\t\t} else {\n\t\t\tvar leftEdgeOffset  = pos.left - viewportPadding\n\t\t\tvar rightEdgeOffset = pos.left + viewportPadding + actualWidth\n\t\t\tif (leftEdgeOffset < viewportDimensions.left) { \/\/ left overflow\n\t\t\t\tdelta.left = viewportDimensions.left - leftEdgeOffset\n\t\t\t} else if (rightEdgeOffset > viewportDimensions.right) { \/\/ right overflow\n\t\t\t\tdelta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n\t\t\t}\n\t\t}\n\n\t\treturn delta\n\t}\n\n\tWFTooltip.prototype.getTitle = function () {\n\t\tvar title\n\t\tvar $e = this.$element\n\t\tvar o  = this.options\n\n\t\ttitle = $e.attr('data-original-title')\n\t\t\t|| (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n\t\treturn title\n\t}\n\n\tWFTooltip.prototype.getUID = function (prefix) {\n\t\tdo prefix += ~~(Math.random() * 1000000)\n\t\twhile (document.getElementById(prefix))\n\t\treturn prefix\n\t}\n\n\tWFTooltip.prototype.tip = function () {\n\t\tif (!this.$tip) {\n\t\t\tthis.$tip = $(this.options.template)\n\t\t\tif (this.$tip.length != 1) {\n\t\t\t\tthrow new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n\t\t\t}\n\t\t}\n\t\treturn this.$tip\n\t}\n\n\tWFTooltip.prototype.arrow = function () {\n\t\treturn (this.$arrow = this.$arrow || this.tip().find('.wftooltip-arrow'))\n\t}\n\n\tWFTooltip.prototype.enable = function () {\n\t\tthis.enabled = true\n\t}\n\n\tWFTooltip.prototype.disable = function () {\n\t\tthis.enabled = false\n\t}\n\n\tWFTooltip.prototype.toggleEnabled = function () {\n\t\tthis.enabled = !this.enabled\n\t}\n\n\tWFTooltip.prototype.toggle = function (e) {\n\t\tvar self = this\n\t\tif (e) {\n\t\t\tself = $(e.currentTarget).data('bs.' + this.type)\n\t\t\tif (!self) {\n\t\t\t\tself = new this.constructor(e.currentTarget, this.getDelegateOptions())\n\t\t\t\t$(e.currentTarget).data('bs.' + this.type, self)\n\t\t\t}\n\t\t}\n\n\t\tif (e) {\n\t\t\tself.inState.click = !self.inState.click\n\t\t\tif (self.isInStateTrue()) self.enter(self)\n\t\t\telse self.leave(self)\n\t\t} else {\n\t\t\tself.tip().hasClass('wf-in') ? self.leave(self) : self.enter(self)\n\t\t}\n\t}\n\n\tWFTooltip.prototype.destroy = function () {\n\t\tvar that = this\n\t\tclearTimeout(this.timeout)\n\t\tthis.hide(function () {\n\t\t\tthat.$element.off('.' + that.type).removeData('bs.' + that.type)\n\t\t\tif (that.$tip) {\n\t\t\t\tthat.$tip.detach()\n\t\t\t}\n\t\t\tthat.$tip = null\n\t\t\tthat.$arrow = null\n\t\t\tthat.$viewport = null\n\t\t\tthat.$element = null\n\t\t})\n\t}\n\n\tWFTooltip.prototype.sanitizeHtml = function (unsafeHtml) {\n\t\treturn sanitizeHtml(unsafeHtml, this.options.whiteList, this.options.sanitizeFn)\n\t}\n\n\t\/\/ TOOLTIP PLUGIN DEFINITION\n\t\/\/ =========================\n\n\tfunction WFPlugin(option) {\n\t\treturn this.each(function () {\n\t\t\tvar $this   = $(this)\n\t\t\tvar data    = $this.data('bs.wftooltip')\n\t\t\tvar options = typeof option == 'object' && option\n\n\t\t\tif (!data && \/destroy|hide\/.test(option)) return\n\t\t\tif (!data) $this.data('bs.wftooltip', (data = new WFTooltip(this, options)))\n\t\t\tif (typeof option == 'string') data[option]()\n\t\t})\n\t}\n\n\tvar old = $.fn.wftooltip\n\n\t$.fn.wftooltip             = WFPlugin\n\t$.fn.wftooltip.Constructor = WFTooltip\n\n\n\t\/\/ TOOLTIP NO CONFLICT\n\t\/\/ ===================\n\n\t$.fn.wftooltip.noConflict = function () {\n\t\t$.fn.wftooltip = old\n\t\treturn this\n\t}\n\n\t\/\/ POPOVER PUBLIC CLASS DEFINITION\n\t\/\/ ===============================\n\n\tvar WFPopover = function (element, options) {\n\t\tthis.init('wfpopover', element, options)\n\t}\n\n\tWFPopover.VERSION  = '3.4.1'\n\n\tWFPopover.DEFAULTS = $.extend({}, $.fn.wftooltip.Constructor.DEFAULTS, {\n\t\tplacement: 'wf-right',\n\t\ttrigger: 'click',\n\t\tcontent: '',\n\t\ttemplate: '<div class=\"wfpopover\" role=\"wftooltip\"><div class=\"wf-arrow\"><\/div><h3 class=\"wfpopover-title\"><\/h3><div class=\"wfpopover-content\"><\/div><\/div>'\n\t})\n\n\n\t\/\/ NOTE: POPOVER EXTENDS wftooltip.js\n\t\/\/ ================================\n\n\tWFPopover.prototype = $.extend({}, $.fn.wftooltip.Constructor.prototype)\n\n\tWFPopover.prototype.constructor = WFPopover\n\n\tWFPopover.prototype.getDefaults = function () {\n\t\treturn WFPopover.DEFAULTS\n\t}\n\n\tWFPopover.prototype.setContent = function () {\n\t\tvar $tip    = this.tip()\n\t\tvar title   = this.getTitle()\n\t\tvar content = this.getContent()\n\n\t\tif (this.options.html) {\n\t\t\tvar typeContent = typeof content\n\n\t\t\tif (this.options.sanitize) {\n\t\t\t\ttitle = this.sanitizeHtml(title)\n\n\t\t\t\tif (typeContent === 'string') {\n\t\t\t\t\tcontent = this.sanitizeHtml(content)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$tip.find('.wfpopover-title').html(title)\n\t\t\t$tip.find('.wfpopover-content').children().detach().end()[\n\t\t\t\ttypeContent === 'string' ? 'html' : 'append'\n\t\t\t\t](content)\n\t\t} else {\n\t\t\t$tip.find('.wfpopover-title').text(title)\n\t\t\t$tip.find('.wfpopover-content').children().detach().end().text(content)\n\t\t}\n\n\t\t$tip.removeClass('wf-fade wf-top wf-bottom wf-left wf-right wf-in')\n\n\t\t\/\/ IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n\t\t\/\/ this manually by checking the contents.\n\t\tif (!$tip.find('.wfpopover-title').html()) $tip.find('.wfpopover-title').hide()\n\t}\n\n\tWFPopover.prototype.hasContent = function () {\n\t\treturn this.getTitle() || this.getContent()\n\t}\n\n\tWFPopover.prototype.getContent = function () {\n\t\tvar $e = this.$element\n\t\tvar o  = this.options\n\n\t\treturn $e.attr('data-content')\n\t\t\t|| (typeof o.content == 'function' ?\n\t\t\t\to.content.call($e[0]) :\n\t\t\t\to.content)\n\t}\n\n\tWFPopover.prototype.arrow = function () {\n\t\treturn (this.$arrow = this.$arrow || this.tip().find('.wf-arrow'))\n\t}\n\n\n\t\/\/ POPOVER PLUGIN DEFINITION\n\t\/\/ =========================\n\n\tfunction WFPlugin(option) {\n\t\treturn this.each(function () {\n\t\t\tvar $this   = $(this)\n\t\t\tvar data    = $this.data('bs.wfpopover')\n\t\t\tvar options = typeof option == 'object' && option\n\n\t\t\tif (!data && \/destroy|hide\/.test(option)) return\n\t\t\tif (!data) $this.data('bs.wfpopover', (data = new WFPopover(this, options)))\n\t\t\tif (typeof option == 'string') data[option]()\n\t\t})\n\t}\n\n\tvar old = $.fn.wfpopover\n\n\t$.fn.wfpopover             = WFPlugin\n\t$.fn.wfpopover.Constructor = WFPopover\n\n\n\t\/\/ POPOVER NO CONFLICT\n\t\/\/ ===================\n\n\t$.fn.wfpopover.noConflict = function () {\n\t\t$.fn.wfpopover = old\n\t\treturn this\n\t}\n\n}(jQuery);\n"},{"base":"plugins","rel":"wordfence\/js\/jquery.colorbox.1756145765.js","ext":"js","size":29173,"mtime":1757312769,"type":"text","content":"\/*!\n\tColorbox 1.6.4\n\tlicense: MIT\n\thttp:\/\/www.jacklmoore.com\/colorbox\n*\/\n(function ($, document, window) {\n\tvar\n\t\/\/ Default settings object.\n\t\/\/ See http:\/\/jacklmoore.com\/colorbox for details.\n\tdefaults = {\n\t\t\/\/ data sources\n\t\thtml: false,\n\t\tphoto: false,\n\t\tiframe: false,\n\t\tinline: false,\n\n\t\t\/\/ behavior and appearance\n\t\ttransition: \"elastic\",\n\t\tspeed: 300,\n\t\tfadeOut: 300,\n\t\twidth: false,\n\t\tinitialWidth: \"600\",\n\t\tinnerWidth: false,\n\t\tmaxWidth: false,\n\t\theight: false,\n\t\tinitialHeight: \"450\",\n\t\tinnerHeight: false,\n\t\tmaxHeight: false,\n\t\tscalePhotos: true,\n\t\tscrolling: true,\n\t\topacity: 0.9,\n\t\tpreloading: true,\n\t\tclassName: false,\n\t\toverlayClose: true,\n\t\tescKey: true,\n\t\tarrowKey: true,\n\t\ttop: false,\n\t\tbottom: false,\n\t\tleft: false,\n\t\tright: false,\n\t\tfixed: false,\n\t\tdata: undefined,\n\t\tcloseButton: true,\n\t\tfastIframe: true,\n\t\topen: false,\n\t\treposition: true,\n\t\tloop: true,\n\t\tslideshow: false,\n\t\tslideshowAuto: true,\n\t\tslideshowSpeed: 2500,\n\t\tslideshowStart: \"start slideshow\",\n\t\tslideshowStop: \"stop slideshow\",\n\t\tphotoRegex: \/\\.(gif|png|jp(e|g|eg)|bmp|ico|webp|jxr|svg)((#|\\?).*)?$\/i,\n\n\t\t\/\/ alternate image paths for high-res displays\n\t\tretinaImage: false,\n\t\tretinaUrl: false,\n\t\tretinaSuffix: '@2x.$1',\n\n\t\t\/\/ internationalization\n\t\tcurrent: \"image {current} of {total}\",\n\t\tprevious: \"previous\",\n\t\tnext: \"next\",\n\t\tclose: \"close\",\n\t\txhrError: \"This content failed to load.\",\n\t\timgError: \"This image failed to load.\",\n\n\t\t\/\/ accessbility\n\t\treturnFocus: true,\n\t\ttrapFocus: true,\n\n\t\t\/\/ callbacks\n\t\tonOpen: false,\n\t\tonLoad: false,\n\t\tonComplete: false,\n\t\tonCleanup: false,\n\t\tonClosed: false,\n\n\t\trel: function() {\n\t\t\treturn this.rel;\n\t\t},\n\t\thref: function() {\n\t\t\t\/\/ using this.href would give the absolute url, when the href may have been inteded as a selector (e.g. '#container')\n\t\t\treturn $(this).attr('href');\n\t\t},\n\t\ttitle: function() {\n\t\t\treturn this.title;\n\t\t},\n\t\tcreateImg: function() {\n\t\t\tvar img = new Image();\n\t\t\tvar attrs = $(this).data('cbox-img-attrs');\n\n\t\t\tif (typeof attrs === 'object') {\n\t\t\t\t$.each(attrs, function(key, val){\n\t\t\t\t\timg[key] = val;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn img;\n\t\t},\n\t\tcreateIframe: function() {\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tvar attrs = $(this).data('cbox-iframe-attrs');\n\n\t\t\tif (typeof attrs === 'object') {\n\t\t\t\t$.each(attrs, function(key, val){\n\t\t\t\t\tiframe[key] = val;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ('frameBorder' in iframe) {\n\t\t\t\tiframe.frameBorder = 0;\n\t\t\t}\n\t\t\tif ('allowTransparency' in iframe) {\n\t\t\t\tiframe.allowTransparency = \"true\";\n\t\t\t}\n\t\t\tiframe.name = (new Date()).getTime(); \/\/ give the iframe a unique name to prevent caching\n\t\t\tiframe.allowFullscreen = true;\n\n\t\t\treturn iframe;\n\t\t}\n\t},\n\n\t\/\/ Abstracting the HTML and event identifiers for easy rebranding\n\tcolorbox = 'wfcolorbox',\n\tprefix = 'wfcbox',\n\tboxElement = prefix + 'Element',\n\n\t\/\/ Events\n\tevent_open = prefix + '_open',\n\tevent_load = prefix + '_load',\n\tevent_complete = prefix + '_complete',\n\tevent_cleanup = prefix + '_cleanup',\n\tevent_closed = prefix + '_closed',\n\tevent_purge = prefix + '_purge',\n\n\t\/\/ Cached jQuery Object Variables\n\t$overlay,\n\t$box,\n\t$wrap,\n\t$content,\n\t$topBorder,\n\t$leftBorder,\n\t$rightBorder,\n\t$bottomBorder,\n\t$related,\n\t$window,\n\t$loaded,\n\t$loadingBay,\n\t$loadingOverlay,\n\t$title,\n\t$current,\n\t$slideshow,\n\t$next,\n\t$prev,\n\t$close,\n\t$groupControls,\n\t$events = $('<a\/>'), \/\/ $({}) would be preferred, but there is an issue with jQuery 1.4.2\n\n\t\/\/ Variables for cached values or use across multiple functions\n\tsettings,\n\tinterfaceHeight,\n\tinterfaceWidth,\n\tloadedHeight,\n\tloadedWidth,\n\tindex,\n\tphoto,\n\topen,\n\tactive,\n\tclosing,\n\tloadingTimer,\n\tpublicMethod,\n\tdiv = \"div\",\n\trequests = 0,\n\tpreviousCSS = {},\n\tinit;\n\n\t\/\/ ****************\n\t\/\/ HELPER FUNCTIONS\n\t\/\/ ****************\n\n\t\/\/ Convenience function for creating new jQuery objects\n\tfunction $tag(tag, id, css) {\n\t\tvar element = document.createElement(tag);\n\n\t\tif (id) {\n\t\t\telement.id = prefix + id;\n\t\t}\n\n\t\tif (css) {\n\t\t\telement.style.cssText = css;\n\t\t}\n\n\t\treturn $(element);\n\t}\n\n\t\/\/ Get the window height using innerHeight when available to avoid an issue with iOS\n\t\/\/ http:\/\/bugs.jquery.com\/ticket\/6724\n\tfunction winheight() {\n\t\treturn window.innerHeight ? window.innerHeight : $(window).height();\n\t}\n\n\tfunction Settings(element, options) {\n\t\tif (options !== Object(options)) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.cache = {};\n\t\tthis.el = element;\n\n\t\tthis.value = function(key) {\n\t\t\tvar dataAttr;\n\n\t\t\tif (this.cache[key] === undefined) {\n\t\t\t\tdataAttr = $(this.el).attr('data-cbox-'+key);\n\n\t\t\t\tif (dataAttr !== undefined) {\n\t\t\t\t\tthis.cache[key] = dataAttr;\n\t\t\t\t} else if (options[key] !== undefined) {\n\t\t\t\t\tthis.cache[key] = options[key];\n\t\t\t\t} else if (defaults[key] !== undefined) {\n\t\t\t\t\tthis.cache[key] = defaults[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.cache[key];\n\t\t};\n\n\t\tthis.get = function(key) {\n\t\t\tvar value = this.value(key);\n\t\t\treturn $.isFunction(value) ? value.call(this.el, this) : value;\n\t\t};\n\t}\n\n\t\/\/ Determine the next and previous members in a group.\n\tfunction getIndex(increment) {\n\t\tvar\n\t\tmax = $related.length,\n\t\tnewIndex = (index + increment) % max;\n\n\t\treturn (newIndex < 0) ? max + newIndex : newIndex;\n\t}\n\n\t\/\/ Convert '%' and 'px' values to integers\n\tfunction setSize(size, dimension) {\n\t\treturn Math.round((\/%\/.test(size) ? ((dimension === 'x' ? $window.width() : winheight()) \/ 100) : 1) * parseInt(size, 10));\n\t}\n\n\t\/\/ Checks an href to see if it is a photo.\n\t\/\/ There is a force photo option (photo: true) for hrefs that cannot be matched by the regex.\n\tfunction isImage(settings, url) {\n\t\treturn settings.get('photo') || settings.get('photoRegex').test(url);\n\t}\n\n\tfunction retinaUrl(settings, url) {\n\t\treturn settings.get('retinaUrl') && window.devicePixelRatio > 1 ? url.replace(settings.get('photoRegex'), settings.get('retinaSuffix')) : url;\n\t}\n\n\tfunction trapFocus(e) {\n\t\tif ('contains' in $box[0] && !$box[0].contains(e.target) && e.target !== $overlay[0]) {\n\t\t\te.stopPropagation();\n\t\t\t$box.focus();\n\t\t}\n\t}\n\n\tfunction setClass(str) {\n\t\tif (setClass.str !== str) {\n\t\t\t$box.add($overlay).removeClass(setClass.str).addClass(str);\n\t\t\tsetClass.str = str;\n\t\t}\n\t}\n\n\tfunction getRelated(rel) {\n\t\tindex = 0;\n\n\t\tif (rel && rel !== false && rel !== 'nofollow') {\n\t\t\t$related = $('.' + boxElement).filter(function () {\n\t\t\t\tvar options = $.data(this, colorbox);\n\t\t\t\tvar settings = new Settings(this, options);\n\t\t\t\treturn (settings.get('rel') === rel);\n\t\t\t});\n\t\t\tindex = $related.index(settings.el);\n\n\t\t\t\/\/ Check direct calls to Colorbox.\n\t\t\tif (index === -1) {\n\t\t\t\t$related = $related.add(settings.el);\n\t\t\t\tindex = $related.length - 1;\n\t\t\t}\n\t\t} else {\n\t\t\t$related = $(settings.el);\n\t\t}\n\t}\n\n\tfunction trigger(event) {\n\t\t\/\/ for external use\n\t\t$(document).trigger(event);\n\t\t\/\/ for internal use\n\t\t$events.triggerHandler(event);\n\t}\n\n\tvar slideshow = (function(){\n\t\tvar active,\n\t\t\tclassName = prefix + \"Slideshow_\",\n\t\t\tclick = \"click.\" + prefix,\n\t\t\ttimeOut;\n\n\t\tfunction clear () {\n\t\t\tclearTimeout(timeOut);\n\t\t}\n\n\t\tfunction set() {\n\t\t\tif (settings.get('loop') || $related[index + 1]) {\n\t\t\t\tclear();\n\t\t\t\ttimeOut = setTimeout(publicMethod.next, settings.get('slideshowSpeed'));\n\t\t\t}\n\t\t}\n\n\t\tfunction start() {\n\t\t\t$slideshow\n\t\t\t\t.html(settings.get('slideshowStop'))\n\t\t\t\t.unbind(click)\n\t\t\t\t.one(click, stop);\n\n\t\t\t$events\n\t\t\t\t.bind(event_complete, set)\n\t\t\t\t.bind(event_load, clear);\n\n\t\t\t$box.removeClass(className + \"off\").addClass(className + \"on\");\n\t\t}\n\n\t\tfunction stop() {\n\t\t\tclear();\n\n\t\t\t$events\n\t\t\t\t.unbind(event_complete, set)\n\t\t\t\t.unbind(event_load, clear);\n\n\t\t\t$slideshow\n\t\t\t\t.html(settings.get('slideshowStart'))\n\t\t\t\t.unbind(click)\n\t\t\t\t.one(click, function () {\n\t\t\t\t\tpublicMethod.next();\n\t\t\t\t\tstart();\n\t\t\t\t});\n\n\t\t\t$box.removeClass(className + \"on\").addClass(className + \"off\");\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tactive = false;\n\t\t\t$slideshow.hide();\n\t\t\tclear();\n\t\t\t$events\n\t\t\t\t.unbind(event_complete, set)\n\t\t\t\t.unbind(event_load, clear);\n\t\t\t$box.removeClass(className + \"off \" + className + \"on\");\n\t\t}\n\n\t\treturn function(){\n\t\t\tif (active) {\n\t\t\t\tif (!settings.get('slideshow')) {\n\t\t\t\t\t$events.unbind(event_cleanup, reset);\n\t\t\t\t\treset();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (settings.get('slideshow') && $related[1]) {\n\t\t\t\t\tactive = true;\n\t\t\t\t\t$events.one(event_cleanup, reset);\n\t\t\t\t\tif (settings.get('slideshowAuto')) {\n\t\t\t\t\t\tstart();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstop();\n\t\t\t\t\t}\n\t\t\t\t\t$slideshow.show();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}());\n\n\n\tfunction launch(element) {\n\t\tvar options;\n\n\t\tif (!closing) {\n\n\t\t\toptions = $(element).data(colorbox);\n\n\t\t\tsettings = new Settings(element, options);\n\n\t\t\tgetRelated(settings.get('rel'));\n\n\t\t\tif (!open) {\n\t\t\t\topen = active = true; \/\/ Prevents the page-change action from queuing up if the visitor holds down the left or right keys.\n\n\t\t\t\tsetClass(settings.get('className'));\n\n\t\t\t\t\/\/ Show colorbox so the sizes can be calculated in older versions of jQuery\n\t\t\t\t$box.css({visibility:'hidden', display:'block', opacity:''});\n\n\t\t\t\t$loaded = $tag(div, 'LoadedContent', 'width:0; height:0; overflow:hidden; visibility:hidden');\n\t\t\t\t$content.css({width:'', height:''}).append($loaded);\n\n\t\t\t\t\/\/ Cache values needed for size calculations\n\t\t\t\tinterfaceHeight = $topBorder.height() + $bottomBorder.height() + $content.outerHeight(true) - $content.height();\n\t\t\t\tinterfaceWidth = $leftBorder.width() + $rightBorder.width() + $content.outerWidth(true) - $content.width();\n\t\t\t\tloadedHeight = $loaded.outerHeight(true);\n\t\t\t\tloadedWidth = $loaded.outerWidth(true);\n\n\t\t\t\t\/\/ Opens inital empty Colorbox prior to content being loaded.\n\t\t\t\tvar initialWidth = setSize(settings.get('initialWidth'), 'x');\n\t\t\t\tvar initialHeight = setSize(settings.get('initialHeight'), 'y');\n\t\t\t\tvar maxWidth = settings.get('maxWidth');\n\t\t\t\tvar maxHeight = settings.get('maxHeight');\n\n\t\t\t\tsettings.w = Math.max((maxWidth !== false ? Math.min(initialWidth, setSize(maxWidth, 'x')) : initialWidth) - loadedWidth - interfaceWidth, 0);\n\t\t\t\tsettings.h = Math.max((maxHeight !== false ? Math.min(initialHeight, setSize(maxHeight, 'y')) : initialHeight) - loadedHeight - interfaceHeight, 0);\n\n\t\t\t\t$loaded.css({width:'', height:settings.h});\n\t\t\t\tpublicMethod.position();\n\n\t\t\t\ttrigger(event_open);\n\t\t\t\tsettings.get('onOpen');\n\n\t\t\t\t$groupControls.add($title).hide();\n\n\t\t\t\t$box.focus();\n\n\t\t\t\tif (settings.get('trapFocus')) {\n\t\t\t\t\t\/\/ Confine focus to the modal\n\t\t\t\t\t\/\/ Uses event capturing that is not supported in IE8-\n\t\t\t\t\tif (document.addEventListener) {\n\n\t\t\t\t\t\tdocument.addEventListener('focus', trapFocus, true);\n\n\t\t\t\t\t\t$events.one(event_closed, function () {\n\t\t\t\t\t\t\tdocument.removeEventListener('focus', trapFocus, true);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t\/\/ Return focus on closing\n\t\t\t\tif (settings.get('returnFocus')) {\n\t\t\t\t\t$events.one(event_closed, function () {\n\t\t\t\t\t\t$(settings.el).focus();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar opacity = parseFloat(settings.get('opacity'));\n\t\t\t$overlay.css({\n\t\t\t\topacity: opacity === opacity ? opacity : '',\n\t\t\t\tcursor: settings.get('overlayClose') ? 'pointer' : '',\n\t\t\t\tvisibility: 'visible'\n\t\t\t}).show();\n\n\t\t\tif (settings.get('closeButton')) {\n\t\t\t\t$close.html(settings.get('close')).appendTo($content);\n\t\t\t} else {\n\t\t\t\t$close.appendTo('<div\/>'); \/\/ replace with .detach() when dropping jQuery < 1.4\n\t\t\t}\n\n\t\t\tload();\n\t\t}\n\t}\n\n\t\/\/ Colorbox's markup needs to be added to the DOM prior to being called\n\t\/\/ so that the browser will go ahead and load the CSS background images.\n\tfunction appendHTML() {\n\t\tif (!$box) {\n\t\t\tinit = false;\n\t\t\t$window = $(window);\n\t\t\t$box = $tag(div).attr({\n\t\t\t\tid: colorbox,\n\t\t\t\t'class': $.support.opacity === false ? prefix + 'IE' : '', \/\/ class for optional IE8 & lower targeted CSS.\n\t\t\t\trole: 'dialog',\n\t\t\t\ttabindex: '-1'\n\t\t\t}).hide();\n\t\t\t$overlay = $tag(div, \"Overlay\").hide();\n\t\t\t$loadingOverlay = $([$tag(div, \"LoadingOverlay\")[0],$tag(div, \"LoadingGraphic\")[0]]);\n\t\t\t$wrap = $tag(div, \"Wrapper\");\n\t\t\t$content = $tag(div, \"Content\").append(\n\t\t\t\t$title = $tag(div, \"Title\"),\n\t\t\t\t$current = $tag(div, \"Current\"),\n\t\t\t\t$prev = $('<button type=\"button\"\/>').attr({id:prefix+'Previous'}),\n\t\t\t\t$next = $('<button type=\"button\"\/>').attr({id:prefix+'Next'}),\n\t\t\t\t$slideshow = $('<button type=\"button\"\/>').attr({id:prefix+'Slideshow'}),\n\t\t\t\t$loadingOverlay\n\t\t\t);\n\n\t\t\t$close = $('<button type=\"button\"\/>').attr({id:prefix+'Close'});\n\n\t\t\t$wrap.append( \/\/ The 3x3 Grid that makes up Colorbox\n\t\t\t\t$tag(div).append(\n\t\t\t\t\t$tag(div, \"TopLeft\"),\n\t\t\t\t\t$topBorder = $tag(div, \"TopCenter\"),\n\t\t\t\t\t$tag(div, \"TopRight\")\n\t\t\t\t),\n\t\t\t\t$tag(div, false, 'clear:left').append(\n\t\t\t\t\t$leftBorder = $tag(div, \"MiddleLeft\"),\n\t\t\t\t\t$content,\n\t\t\t\t\t$rightBorder = $tag(div, \"MiddleRight\")\n\t\t\t\t),\n\t\t\t\t$tag(div, false, 'clear:left').append(\n\t\t\t\t\t$tag(div, \"BottomLeft\"),\n\t\t\t\t\t$bottomBorder = $tag(div, \"BottomCenter\"),\n\t\t\t\t\t$tag(div, \"BottomRight\")\n\t\t\t\t)\n\t\t\t).find('div div').css({'float': 'left'});\n\n\t\t\t$loadingBay = $tag(div, false, 'position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;');\n\n\t\t\t$groupControls = $next.add($prev).add($current).add($slideshow);\n\t\t}\n\t\tif (document.body && !$box.parent().length) {\n\t\t\t$(document.body).append($overlay, $box.append($wrap, $loadingBay));\n\t\t}\n\t}\n\n\t\/\/ Add Colorbox's event bindings\n\tfunction addBindings() {\n\t\tfunction clickHandler(e) {\n\t\t\t\/\/ ignore non-left-mouse-clicks and clicks modified with ctrl \/ command, shift, or alt.\n\t\t\t\/\/ See: http:\/\/jacklmoore.com\/notes\/click-events\/\n\t\t\tif (!(e.which > 1 || e.shiftKey || e.altKey || e.metaKey || e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\tlaunch(this);\n\t\t\t}\n\t\t}\n\n\t\tif ($box) {\n\t\t\tif (!init) {\n\t\t\t\tinit = true;\n\n\t\t\t\t\/\/ Anonymous functions here keep the public method from being cached, thereby allowing them to be redefined on the fly.\n\t\t\t\t$next.click(function () {\n\t\t\t\t\tpublicMethod.next();\n\t\t\t\t});\n\t\t\t\t$prev.click(function () {\n\t\t\t\t\tpublicMethod.prev();\n\t\t\t\t});\n\t\t\t\t$close.click(function () {\n\t\t\t\t\tpublicMethod.close();\n\t\t\t\t});\n\t\t\t\t$overlay.click(function () {\n\t\t\t\t\tif (settings.get('overlayClose')) {\n\t\t\t\t\t\tpublicMethod.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t\/\/ Key Bindings\n\t\t\t\t$(document).bind('keydown.' + prefix, function (e) {\n\t\t\t\t\tvar key = e.keyCode;\n\t\t\t\t\tif (open && settings.get('escKey') && key === 27) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpublicMethod.close();\n\t\t\t\t\t}\n\t\t\t\t\tif (open && settings.get('arrowKey') && $related[1] && !e.altKey) {\n\t\t\t\t\t\tif (key === 37) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t$prev.click();\n\t\t\t\t\t\t} else if (key === 39) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t$next.click();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif ($.isFunction($.fn.on)) {\n\t\t\t\t\t\/\/ For jQuery 1.7+\n\t\t\t\t\t$(document).on('click.'+prefix, '.'+boxElement, clickHandler);\n\t\t\t\t} else {\n\t\t\t\t\t\/\/ For jQuery 1.3.x -> 1.6.x\n\t\t\t\t\t\/\/ This code is never reached in jQuery 1.9, so do not contact me about 'live' being removed.\n\t\t\t\t\t\/\/ This is not here for jQuery 1.9, it's here for legacy users.\n\t\t\t\t\t$('.'+boxElement).live('click.'+prefix, clickHandler);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t\/\/ Don't do anything if Colorbox already exists.\n\tif ($[colorbox]) {\n\t\treturn;\n\t}\n\n\t\/\/ Append the HTML when the DOM loads\n\t$(appendHTML);\n\n\n\t\/\/ ****************\n\t\/\/ PUBLIC FUNCTIONS\n\t\/\/ Usage format: $.colorbox.close();\n\t\/\/ Usage from within an iframe: parent.jQuery.colorbox.close();\n\t\/\/ ****************\n\n\tpublicMethod = $.fn[colorbox] = $[colorbox] = function (options, callback) {\n\t\tvar settings;\n\t\tvar $obj = this;\n\n\t\toptions = options || {};\n\n\t\tif ($.isFunction($obj)) { \/\/ assume a call to $.colorbox\n\t\t\t$obj = $('<a\/>');\n\t\t\toptions.open = true;\n\t\t}\n\n\t\tif (!$obj[0]) { \/\/ colorbox being applied to empty collection\n\t\t\treturn $obj;\n\t\t}\n\n\t\tappendHTML();\n\n\t\tif (addBindings()) {\n\n\t\t\tif (callback) {\n\t\t\t\toptions.onComplete = callback;\n\t\t\t}\n\n\t\t\t$obj.each(function () {\n\t\t\t\tvar old = $.data(this, colorbox) || {};\n\t\t\t\t$.data(this, colorbox, $.extend(old, options));\n\t\t\t}).addClass(boxElement);\n\n\t\t\tsettings = new Settings($obj[0], options);\n\n\t\t\tif (settings.get('open')) {\n\t\t\t\tlaunch($obj[0]);\n\t\t\t}\n\t\t}\n\n\t\treturn $obj;\n\t};\n\n\tpublicMethod.position = function (speed, loadedCallback) {\n\t\tvar\n\t\tcss,\n\t\ttop = 0,\n\t\tleft = 0,\n\t\toffset = $box.offset(),\n\t\tscrollTop,\n\t\tscrollLeft;\n\n\t\t$window.unbind('resize.' + prefix);\n\n\t\t\/\/ remove the modal so that it doesn't influence the document width\/height\n\t\t$box.css({top: -9e4, left: -9e4});\n\n\t\tscrollTop = $window.scrollTop();\n\t\tscrollLeft = $window.scrollLeft();\n\n\t\tif (settings.get('fixed')) {\n\t\t\toffset.top -= scrollTop;\n\t\t\toffset.left -= scrollLeft;\n\t\t\t$box.css({position: 'fixed'});\n\t\t} else {\n\t\t\ttop = scrollTop;\n\t\t\tleft = scrollLeft;\n\t\t\t$box.css({position: 'absolute'});\n\t\t}\n\n\t\t\/\/ keeps the top and left positions within the browser's viewport.\n\t\tif (settings.get('right') !== false) {\n\t\t\tleft += Math.max($window.width() - settings.w - loadedWidth - interfaceWidth - setSize(settings.get('right'), 'x'), 0);\n\t\t} else if (settings.get('left') !== false) {\n\t\t\tleft += setSize(settings.get('left'), 'x');\n\t\t} else {\n\t\t\tleft += Math.round(Math.max($window.width() - settings.w - loadedWidth - interfaceWidth, 0) \/ 2);\n\t\t}\n\n\t\tif (settings.get('bottom') !== false) {\n\t\t\ttop += Math.max(winheight() - settings.h - loadedHeight - interfaceHeight - setSize(settings.get('bottom'), 'y'), 0);\n\t\t} else if (settings.get('top') !== false) {\n\t\t\ttop += setSize(settings.get('top'), 'y');\n\t\t} else {\n\t\t\ttop += Math.round(Math.max(winheight() - settings.h - loadedHeight - interfaceHeight, 0) \/ 2);\n\t\t}\n\n\t\t$box.css({top: offset.top, left: offset.left, visibility:'visible'});\n\n\t\t\/\/ this gives the wrapper plenty of breathing room so it's floated contents can move around smoothly,\n\t\t\/\/ but it has to be shrank down around the size of div#colorbox when it's done.  If not,\n\t\t\/\/ it can invoke an obscure IE bug when using iframes.\n\t\t$wrap[0].style.width = $wrap[0].style.height = \"9999px\";\n\n\t\tfunction modalDimensions() {\n\t\t\t$topBorder[0].style.width = $bottomBorder[0].style.width = $content[0].style.width = (parseInt($box[0].style.width,10) - interfaceWidth)+'px';\n\t\t\t$content[0].style.height = $leftBorder[0].style.height = $rightBorder[0].style.height = (parseInt($box[0].style.height,10) - interfaceHeight)+'px';\n\t\t}\n\n\t\tcss = {width: settings.w + loadedWidth + interfaceWidth, height: settings.h + loadedHeight + interfaceHeight, top: top, left: left};\n\n\t\t\/\/ setting the speed to 0 if the content hasn't changed size or position\n\t\tif (speed) {\n\t\t\tvar tempSpeed = 0;\n\t\t\t$.each(css, function(i){\n\t\t\t\tif (css[i] !== previousCSS[i]) {\n\t\t\t\t\ttempSpeed = speed;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\tspeed = tempSpeed;\n\t\t}\n\n\t\tpreviousCSS = css;\n\n\t\tif (!speed) {\n\t\t\t$box.css(css);\n\t\t}\n\n\t\t$box.dequeue().animate(css, {\n\t\t\tduration: speed || 0,\n\t\t\tcomplete: function () {\n\t\t\t\tmodalDimensions();\n\n\t\t\t\tactive = false;\n\n\t\t\t\t\/\/ shrink the wrapper down to exactly the size of colorbox to avoid a bug in IE's iframe implementation.\n\t\t\t\t$wrap[0].style.width = (settings.w + loadedWidth + interfaceWidth) + \"px\";\n\t\t\t\t$wrap[0].style.height = (settings.h + loadedHeight + interfaceHeight) + \"px\";\n\n\t\t\t\tif (settings.get('reposition')) {\n\t\t\t\t\tsetTimeout(function () {  \/\/ small delay before binding onresize due to an IE8 bug.\n\t\t\t\t\t\t$window.bind('resize.' + prefix, publicMethod.position);\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\n\t\t\t\tif ($.isFunction(loadedCallback)) {\n\t\t\t\t\tloadedCallback();\n\t\t\t\t}\n\t\t\t},\n\t\t\tstep: modalDimensions\n\t\t});\n\t};\n\n\tpublicMethod.resize = function (options) {\n\t\tvar scrolltop;\n\n\t\tif (open) {\n\t\t\toptions = options || {};\n\n\t\t\tif (options.width) {\n\t\t\t\tsettings.w = setSize(options.width, 'x') - loadedWidth - interfaceWidth;\n\t\t\t}\n\n\t\t\tif (options.innerWidth) {\n\t\t\t\tsettings.w = setSize(options.innerWidth, 'x');\n\t\t\t}\n\n\t\t\t$loaded.css({width: settings.w});\n\n\t\t\tif (options.height) {\n\t\t\t\tsettings.h = setSize(options.height, 'y') - loadedHeight - interfaceHeight;\n\t\t\t}\n\n\t\t\tif (options.innerHeight) {\n\t\t\t\tsettings.h = setSize(options.innerHeight, 'y');\n\t\t\t}\n\n\t\t\tif (!options.innerHeight && !options.height) {\n\t\t\t\tscrolltop = $loaded.scrollTop();\n\t\t\t\t$loaded.css({height: \"auto\"});\n\t\t\t\tsettings.h = $loaded.height();\n\t\t\t}\n\n\t\t\t$loaded.css({height: settings.h});\n\n\t\t\tif(scrolltop) {\n\t\t\t\t$loaded.scrollTop(scrolltop);\n\t\t\t}\n\n\t\t\tpublicMethod.position(settings.get('transition') === \"none\" ? 0 : settings.get('speed'));\n\t\t}\n\t};\n\n\tpublicMethod.prep = function (object) {\n\t\tif (!open) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar callback, speed = settings.get('transition') === \"none\" ? 0 : settings.get('speed');\n\n\t\t$loaded.remove();\n\n\t\t$loaded = $tag(div, 'LoadedContent').append(object);\n\n\t\tfunction getWidth() {\n\t\t\tsettings.w = settings.w || $loaded.width();\n\t\t\tsettings.w = settings.mw && settings.mw < settings.w ? settings.mw : settings.w;\n\t\t\treturn settings.w;\n\t\t}\n\t\tfunction getHeight() {\n\t\t\tsettings.h = settings.h || $loaded.height();\n\t\t\tsettings.h = settings.mh && settings.mh < settings.h ? settings.mh : settings.h;\n\t\t\treturn settings.h;\n\t\t}\n\n\t\t$loaded.hide()\n\t\t.appendTo($loadingBay.show())\/\/ content has to be appended to the DOM for accurate size calculations.\n\t\t.css({width: getWidth(), overflow: settings.get('scrolling') ? 'auto' : 'hidden'})\n\t\t.css({height: getHeight()})\/\/ sets the height independently from the width in case the new width influences the value of height.\n\t\t.prependTo($content);\n\n\t\t$loadingBay.hide();\n\n\t\t\/\/ floating the IMG removes the bottom line-height and fixed a problem where IE miscalculates the width of the parent element as 100% of the document width.\n\n\t\t$(photo).css({'float': 'none'});\n\n\t\tsetClass(settings.get('className'));\n\n\t\tcallback = function () {\n\t\t\tvar total = $related.length,\n\t\t\t\tiframe,\n\t\t\t\tcomplete;\n\n\t\t\tif (!open) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunction removeFilter() { \/\/ Needed for IE8 in versions of jQuery prior to 1.7.2\n\t\t\t\tif ($.support.opacity === false) {\n\t\t\t\t\t$box[0].style.removeAttribute('filter');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomplete = function () {\n\t\t\t\tclearTimeout(loadingTimer);\n\t\t\t\t$loadingOverlay.hide();\n\t\t\t\ttrigger(event_complete);\n\t\t\t\tsettings.get('onComplete');\n\t\t\t};\n\n\n\t\t\t$title.html(settings.get('title')).show();\n\t\t\t$loaded.show();\n\n\t\t\tif (total > 1) { \/\/ handle grouping\n\t\t\t\tif (typeof settings.get('current') === \"string\") {\n\t\t\t\t\t$current.html(settings.get('current').replace('{current}', index + 1).replace('{total}', total)).show();\n\t\t\t\t}\n\n\t\t\t\t$next[(settings.get('loop') || index < total - 1) ? \"show\" : \"hide\"]().html(settings.get('next'));\n\t\t\t\t$prev[(settings.get('loop') || index) ? \"show\" : \"hide\"]().html(settings.get('previous'));\n\n\t\t\t\tslideshow();\n\n\t\t\t\t\/\/ Preloads images within a rel group\n\t\t\t\tif (settings.get('preloading')) {\n\t\t\t\t\t$.each([getIndex(-1), getIndex(1)], function(){\n\t\t\t\t\t\tvar img,\n\t\t\t\t\t\t\ti = $related[this],\n\t\t\t\t\t\t\tsettings = new Settings(i, $.data(i, colorbox)),\n\t\t\t\t\t\t\tsrc = settings.get('href');\n\n\t\t\t\t\t\tif (src && isImage(settings, src)) {\n\t\t\t\t\t\t\tsrc = retinaUrl(settings, src);\n\t\t\t\t\t\t\timg = document.createElement('img');\n\t\t\t\t\t\t\timg.src = src;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$groupControls.hide();\n\t\t\t}\n\n\t\t\tif (settings.get('iframe')) {\n\n\t\t\t\tiframe = settings.get('createIframe');\n\n\t\t\t\tif (!settings.get('scrolling')) {\n\t\t\t\t\tiframe.scrolling = \"no\";\n\t\t\t\t}\n\n\t\t\t\t$(iframe)\n\t\t\t\t\t.attr({\n\t\t\t\t\t\tsrc: settings.get('href'),\n\t\t\t\t\t\t'class': prefix + 'Iframe'\n\t\t\t\t\t})\n\t\t\t\t\t.one('load', complete)\n\t\t\t\t\t.appendTo($loaded);\n\n\t\t\t\t$events.one(event_purge, function () {\n\t\t\t\t\tiframe.src = \"\/\/about:blank\";\n\t\t\t\t});\n\n\t\t\t\tif (settings.get('fastIframe')) {\n\t\t\t\t\t$(iframe).trigger('load');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcomplete();\n\t\t\t}\n\n\t\t\tif (settings.get('transition') === 'fade') {\n\t\t\t\t$box.fadeTo(speed, 1, removeFilter);\n\t\t\t} else {\n\t\t\t\tremoveFilter();\n\t\t\t}\n\t\t};\n\n\t\tif (settings.get('transition') === 'fade') {\n\t\t\t$box.fadeTo(speed, 0, function () {\n\t\t\t\tpublicMethod.position(0, callback);\n\t\t\t});\n\t\t} else {\n\t\t\tpublicMethod.position(speed, callback);\n\t\t}\n\t};\n\n\tfunction load () {\n\t\tvar href, setResize, prep = publicMethod.prep, $inline, request = ++requests;\n\n\t\tactive = true;\n\n\t\tphoto = false;\n\n\t\ttrigger(event_purge);\n\t\ttrigger(event_load);\n\t\tsettings.get('onLoad');\n\n\t\tsettings.h = settings.get('height') ?\n\t\t\t\tsetSize(settings.get('height'), 'y') - loadedHeight - interfaceHeight :\n\t\t\t\tsettings.get('innerHeight') && setSize(settings.get('innerHeight'), 'y');\n\n\t\tsettings.w = settings.get('width') ?\n\t\t\t\tsetSize(settings.get('width'), 'x') - loadedWidth - interfaceWidth :\n\t\t\t\tsettings.get('innerWidth') && setSize(settings.get('innerWidth'), 'x');\n\n\t\t\/\/ Sets the minimum dimensions for use in image scaling\n\t\tsettings.mw = settings.w;\n\t\tsettings.mh = settings.h;\n\n\t\t\/\/ Re-evaluate the minimum width and height based on maxWidth and maxHeight values.\n\t\t\/\/ If the width or height exceed the maxWidth or maxHeight, use the maximum values instead.\n\t\tif (settings.get('maxWidth')) {\n\t\t\tsettings.mw = setSize(settings.get('maxWidth'), 'x') - loadedWidth - interfaceWidth;\n\t\t\tsettings.mw = settings.w && settings.w < settings.mw ? settings.w : settings.mw;\n\t\t}\n\t\tif (settings.get('maxHeight')) {\n\t\t\tsettings.mh = setSize(settings.get('maxHeight'), 'y') - loadedHeight - interfaceHeight;\n\t\t\tsettings.mh = settings.h && settings.h < settings.mh ? settings.h : settings.mh;\n\t\t}\n\n\t\thref = settings.get('href');\n\n\t\tloadingTimer = setTimeout(function () {\n\t\t\t$loadingOverlay.show();\n\t\t}, 100);\n\n\t\tif (settings.get('inline')) {\n\t\t\tvar $target = $(href).eq(0);\n\t\t\t\/\/ Inserts an empty placeholder where inline content is being pulled from.\n\t\t\t\/\/ An event is bound to put inline content back when Colorbox closes or loads new content.\n\t\t\t$inline = $('<div>').hide().insertBefore($target);\n\n\t\t\t$events.one(event_purge, function () {\n\t\t\t\t$inline.replaceWith($target);\n\t\t\t});\n\n\t\t\tprep($target);\n\t\t} else if (settings.get('iframe')) {\n\t\t\t\/\/ IFrame element won't be added to the DOM until it is ready to be displayed,\n\t\t\t\/\/ to avoid problems with DOM-ready JS that might be trying to run in that iframe.\n\t\t\tprep(\" \");\n\t\t} else if (settings.get('html')) {\n\t\t\tprep(settings.get('html'));\n\t\t} else if (isImage(settings, href)) {\n\n\t\t\thref = retinaUrl(settings, href);\n\n\t\t\tphoto = settings.get('createImg');\n\n\t\t\t$(photo)\n\t\t\t.addClass(prefix + 'Photo')\n\t\t\t.bind('error.'+prefix,function () {\n\t\t\t\tprep($tag(div, 'Error').html(settings.get('imgError')));\n\t\t\t})\n\t\t\t.one('load', function () {\n\t\t\t\tif (request !== requests) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t\/\/ A small pause because some browsers will occasionally report a\n\t\t\t\t\/\/ img.width and img.height of zero immediately after the img.onload fires\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tvar percent;\n\n\t\t\t\t\tif (settings.get('retinaImage') && window.devicePixelRatio > 1) {\n\t\t\t\t\t\tphoto.height = photo.height \/ window.devicePixelRatio;\n\t\t\t\t\t\tphoto.width = photo.width \/ window.devicePixelRatio;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (settings.get('scalePhotos')) {\n\t\t\t\t\t\tsetResize = function () {\n\t\t\t\t\t\t\tphoto.height -= photo.height * percent;\n\t\t\t\t\t\t\tphoto.width -= photo.width * percent;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (settings.mw && photo.width > settings.mw) {\n\t\t\t\t\t\t\tpercent = (photo.width - settings.mw) \/ photo.width;\n\t\t\t\t\t\t\tsetResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (settings.mh && photo.height > settings.mh) {\n\t\t\t\t\t\t\tpercent = (photo.height - settings.mh) \/ photo.height;\n\t\t\t\t\t\t\tsetResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (settings.h) {\n\t\t\t\t\t\tphoto.style.marginTop = Math.max(settings.mh - photo.height, 0) \/ 2 + 'px';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($related[1] && (settings.get('loop') || $related[index + 1])) {\n\t\t\t\t\t\tphoto.style.cursor = 'pointer';\n\n\t\t\t\t\t\t$(photo).bind('click.'+prefix, function () {\n\t\t\t\t\t\t\tpublicMethod.next();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tphoto.style.width = photo.width + 'px';\n\t\t\t\t\tphoto.style.height = photo.height + 'px';\n\t\t\t\t\tprep(photo);\n\t\t\t\t}, 1);\n\t\t\t});\n\n\t\t\tphoto.src = href;\n\n\t\t} else if (href) {\n\t\t\t$loadingBay.load(href, settings.get('data'), function (data, status) {\n\t\t\t\tif (request === requests) {\n\t\t\t\t\tprep(status === 'error' ? $tag(div, 'Error').html(settings.get('xhrError')) : $(this).contents());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t\/\/ Navigates to the next page\/image in a set.\n\tpublicMethod.next = function () {\n\t\tif (!active && $related[1] && (settings.get('loop') || $related[index + 1])) {\n\t\t\tindex = getIndex(1);\n\t\t\tlaunch($related[index]);\n\t\t}\n\t};\n\n\tpublicMethod.prev = function () {\n\t\tif (!active && $related[1] && (settings.get('loop') || index)) {\n\t\t\tindex = getIndex(-1);\n\t\t\tlaunch($related[index]);\n\t\t}\n\t};\n\n\t\/\/ Note: to use this within an iframe use the following format: parent.jQuery.colorbox.close();\n\tpublicMethod.close = function () {\n\t\tif (open && !closing) {\n\n\t\t\tclosing = true;\n\t\t\topen = false;\n\t\t\ttrigger(event_cleanup);\n\t\t\tsettings.get('onCleanup');\n\t\t\t$window.unbind('.' + prefix);\n\t\t\t$overlay.fadeTo(settings.get('fadeOut') || 0, 0);\n\n\t\t\t$box.stop().fadeTo(settings.get('fadeOut') || 0, 0, function () {\n\t\t\t\t$box.hide();\n\t\t\t\t$overlay.hide();\n\t\t\t\ttrigger(event_purge);\n\t\t\t\t$loaded.remove();\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tclosing = false;\n\t\t\t\t\ttrigger(event_closed);\n\t\t\t\t\tsettings.get('onClosed');\n\t\t\t\t}, 1);\n\t\t\t});\n\t\t}\n\t};\n\n\t\/\/ Removes changes Colorbox made to the document, but does not remove the plugin.\n\tpublicMethod.remove = function () {\n\t\tif (!$box) { return; }\n\n\t\t$box.stop();\n\t\t$[colorbox].close();\n\t\t$box.stop(false, true).remove();\n\t\t$overlay.remove();\n\t\tclosing = false;\n\t\t$box = null;\n\t\t$('.' + boxElement)\n\t\t\t.removeData(colorbox)\n\t\t\t.removeClass(boxElement);\n\n\t\t$(document).unbind('click.'+prefix).unbind('keydown.'+prefix);\n\t};\n\n\t\/\/ A method for fetching the current element Colorbox is referencing.\n\t\/\/ returns a jQuery object.\n\tpublicMethod.element = function () {\n\t\treturn $(settings.el);\n\t};\n\n\tpublicMethod.settings = defaults;\n\n}(jQuery, document, window));\n"},{"base":"plugins","rel":"wordfence\/js\/wfi18n.1756145765.js","ext":"js","size":6491,"mtime":1757312769,"type":"text","content":"(function () {\n\n\twindow.wfi18n = {\n\t\t__: function(text) {\n\t\t\tif (window.WordfenceI18nStrings && text in window.WordfenceI18nStrings) {\n\t\t\t\treturn window.WordfenceI18nStrings[text];\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tif (typeof wp === 'object' && wp.i18n) {\n\t\twindow.wfi18n.sprintf = wp.i18n.sprintf;\n\t\treturn;\n\t}\n\n\t\/**\n\t * Code has been adapted from WordPress' i18n.js functions and is being used as a polyfill for WordPress\n\t * versions before 5.0.\n\t *\/\n\tvar re = {\n\t\tnot_string: \/[^s]\/,\n\t\tnot_bool: \/[^t]\/,\n\t\tnot_type: \/[^T]\/,\n\t\tnot_primitive: \/[^v]\/,\n\t\tnumber: \/[diefg]\/,\n\t\tnumeric_arg: \/[bcdiefguxX]\/,\n\t\tjson: \/[j]\/,\n\t\tnot_json: \/[^j]\/,\n\t\ttext: \/^[^\\x25]+\/,\n\t\tmodulo: \/^\\x25{2}\/,\n\t\tplaceholder: \/^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])\/,\n\t\tkey: \/^([a-z_][a-z_\\d]*)\/i,\n\t\tkey_access: \/^\\.([a-z_][a-z_\\d]*)\/i,\n\t\tindex_access: \/^\\[(\\d+)\\]\/,\n\t\tsign: \/^[+-]\/\n\t};\n\n\tfunction sprintf(key) {\n\t\t\/\/ `arguments` is not an array, but should be fine for this call\n\t\treturn sprintf_format(sprintf_parse(key), arguments)\n\t}\n\n\tfunction vsprintf(fmt, argv) {\n\t\treturn sprintf.apply(null, [fmt].concat(argv || []))\n\t}\n\n\tfunction sprintf_format(parse_tree, argv) {\n\t\tvar cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n\t\tfor (i = 0; i < tree_length; i++) {\n\t\t\tif (typeof parse_tree[i] === 'string') {\n\t\t\t\toutput += parse_tree[i]\n\t\t\t}\n\t\t\telse if (typeof parse_tree[i] === 'object') {\n\t\t\t\tph = parse_tree[i] \/\/ convenience purposes only\n\t\t\t\tif (ph.keys) { \/\/ keyword argument\n\t\t\t\t\targ = argv[cursor]\n\t\t\t\t\tfor (k = 0; k < ph.keys.length; k++) {\n\t\t\t\t\t\tif (arg == undefined) {\n\t\t\t\t\t\t\tthrow new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n\t\t\t\t\t\t}\n\t\t\t\t\t\targ = arg[ph.keys[k]]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (ph.param_no) { \/\/ positional argument (explicit)\n\t\t\t\t\targ = argv[ph.param_no]\n\t\t\t\t}\n\t\t\t\telse { \/\/ positional argument (implicit)\n\t\t\t\t\targ = argv[cursor++]\n\t\t\t\t}\n\n\t\t\t\tif (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n\t\t\t\t\targ = arg()\n\t\t\t\t}\n\n\t\t\t\tif (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n\t\t\t\t\tthrow new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n\t\t\t\t}\n\n\t\t\t\tif (re.number.test(ph.type)) {\n\t\t\t\t\tis_positive = arg >= 0\n\t\t\t\t}\n\n\t\t\t\tswitch (ph.type) {\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\targ = parseInt(arg, 10).toString(2)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\targ = String.fromCharCode(parseInt(arg, 10))\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'd':\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\targ = parseInt(arg, 10)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'j':\n\t\t\t\t\t\targ = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'e':\n\t\t\t\t\t\targ = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\targ = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'g':\n\t\t\t\t\t\targ = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'o':\n\t\t\t\t\t\targ = (parseInt(arg, 10) >>> 0).toString(8)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\targ = String(arg)\n\t\t\t\t\t\targ = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\targ = String(!!arg)\n\t\t\t\t\t\targ = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\targ = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n\t\t\t\t\t\targ = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'u':\n\t\t\t\t\t\targ = parseInt(arg, 10) >>> 0\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\targ = arg.valueOf()\n\t\t\t\t\t\targ = (ph.precision ? arg.substring(0, ph.precision) : arg)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'x':\n\t\t\t\t\t\targ = (parseInt(arg, 10) >>> 0).toString(16)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 'X':\n\t\t\t\t\t\targ = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tif (re.json.test(ph.type)) {\n\t\t\t\t\toutput += arg\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n\t\t\t\t\t\tsign = is_positive ? '+' : '-'\n\t\t\t\t\t\targ = arg.toString().replace(re.sign, '')\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsign = ''\n\t\t\t\t\t}\n\t\t\t\t\tpad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n\t\t\t\t\tpad_length = ph.width - (sign + arg).length\n\t\t\t\t\tpad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n\t\t\t\t\toutput += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn output\n\t}\n\n\tvar sprintf_cache = Object.create(null)\n\n\tfunction sprintf_parse(fmt) {\n\t\tif (sprintf_cache[fmt]) {\n\t\t\treturn sprintf_cache[fmt]\n\t\t}\n\n\t\tvar _fmt = fmt, match, parse_tree = [], arg_names = 0\n\t\twhile (_fmt) {\n\t\t\tif ((match = re.text.exec(_fmt)) !== null) {\n\t\t\t\tparse_tree.push(match[0])\n\t\t\t}\n\t\t\telse if ((match = re.modulo.exec(_fmt)) !== null) {\n\t\t\t\tparse_tree.push('%')\n\t\t\t}\n\t\t\telse if ((match = re.placeholder.exec(_fmt)) !== null) {\n\t\t\t\tif (match[2]) {\n\t\t\t\t\targ_names |= 1\n\t\t\t\t\tvar field_list = [], replacement_field = match[2], field_match = []\n\t\t\t\t\tif ((field_match = re.key.exec(replacement_field)) !== null) {\n\t\t\t\t\t\tfield_list.push(field_match[1])\n\t\t\t\t\t\twhile ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n\t\t\t\t\t\t\tif ((field_match = re.key_access.exec(replacement_field)) !== null) {\n\t\t\t\t\t\t\t\tfield_list.push(field_match[1])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n\t\t\t\t\t\t\t\tfield_list.push(field_match[1])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthrow new SyntaxError('[sprintf] failed to parse named argument key')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthrow new SyntaxError('[sprintf] failed to parse named argument key')\n\t\t\t\t\t}\n\t\t\t\t\tmatch[2] = field_list\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\targ_names |= 2\n\t\t\t\t}\n\t\t\t\tif (arg_names === 3) {\n\t\t\t\t\tthrow new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n\t\t\t\t}\n\n\t\t\t\tparse_tree.push(\n\t\t\t\t\t{\n\t\t\t\t\t\tplaceholder: match[0],\n\t\t\t\t\t\tparam_no:    match[1],\n\t\t\t\t\t\tkeys:        match[2],\n\t\t\t\t\t\tsign:        match[3],\n\t\t\t\t\t\tpad_char:    match[4],\n\t\t\t\t\t\talign:       match[5],\n\t\t\t\t\t\twidth:       match[6],\n\t\t\t\t\t\tprecision:   match[7],\n\t\t\t\t\t\ttype:        match[8]\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthrow new SyntaxError('[sprintf] unexpected placeholder')\n\t\t\t}\n\t\t\t_fmt = _fmt.substring(match[0].length)\n\t\t}\n\t\treturn sprintf_cache[fmt] = parse_tree\n\t}\n\n\twindow.wfi18n.sprintf = sprintf;\n})();"},{"base":"plugins","rel":"wordfence\/index.php","ext":"php","size":31,"mtime":1757312769,"type":"text","content":"<?php\n\/\/ Silence is golden.\n?>\n"},{"base":"plugins","rel":"wordfence\/images\/2fa2.svg","ext":"svg","size":12253,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" viewBox=\"0 0 338.97 377.33\"><defs><style>.a,.c,.v{fill:#9d1c1f;}.a,.u,.v{stroke:#c02026;}.a,.k,.l,.u,.v{stroke-miterlimit:10;}.a,.u{stroke-width:3.77px;}.b{isolation:isolate;}.d{clip-path:url(#a);}.e,.h{fill:#2d2d2d;}.f,.l{fill:#fff;}.g,.q{fill:#525455;}.g,.h,.j,.p{fill-rule:evenodd;}.i,.j,.p{fill:#9e9e9f;}.k{fill:#f1f2f2;stroke-width:0.19px;}.k,.l{stroke:#525355;}.l{stroke-width:0.13px;}.m{fill:#9f9fa0;}.n{fill:#525355;}.o{fill:#008cc1;}.p{opacity:0.06;}.p,.s{mix-blend-mode:multiply;}.r{fill:#008dc2;}.s{opacity:0.25;}.t{fill:#fcb316;}.u{fill:none;}.v{stroke-width:2.83px;}.w{fill:#f0f0f0;}<\/style><clipPath id=\"a\"><circle class=\"a\" cx=\"169.48\" cy=\"209.95\" r=\"165.5\"\/><\/clipPath><\/defs><title>2fa2<\/title><g class=\"b\"><circle class=\"c\" cx=\"169.48\" cy=\"209.95\" r=\"165.5\"\/><g class=\"d\"><rect class=\"e\" x=\"27.15\" y=\"98.89\" width=\"156.31\" height=\"102.73\" rx=\"5.41\" ry=\"5.41\"\/><rect class=\"f\" x=\"35.26\" y=\"109.61\" width=\"140.08\" height=\"78.01\"\/><polygon class=\"g\" points=\"27.15 201.62 183.45 201.62 210.6 213.16 0 213.16 27.15 201.62\"\/><path class=\"h\" d=\"M0,213.16H210.6v3a3.92,3.92,0,0,1-3.91,3.91H3.91A3.92,3.92,0,0,1,0,216.2Z\"\/><rect class=\"i\" x=\"83.52\" y=\"215.3\" width=\"42.54\" height=\"2.71\"\/><path class=\"j\" d=\"M30.39,202.54H45l-2.21,1.34H27.65Z\"\/><path class=\"j\" d=\"M57.18,202.54H71.79l-1.21,1.34H55.43Z\"\/><path class=\"j\" d=\"M84,202.54H98.6c-.05.45-.13.9-.2,1.34H83.23C83.48,203.44,83.74,203,84,202.54Z\"\/><path class=\"j\" d=\"M110.78,202.54h14.63c.26.45.53.9.79,1.34H111C110.95,203.44,110.87,203,110.78,202.54Z\"\/><path class=\"j\" d=\"M137.59,202.54H152.2l1.79,1.34H138.83C138.43,203.44,138,203,137.59,202.54Z\"\/><path class=\"j\" d=\"M164.4,202.54H179l2.78,1.34H166.63Z\"\/><path class=\"j\" d=\"M25.9,204.75H41.44l-2.21,1.34H23.16Z\"\/><path class=\"j\" d=\"M54.19,204.86H69.73c-.4.45-.82.9-1.21,1.34H52.44C53,205.75,53.6,205.3,54.19,204.86Z\"\/><path class=\"j\" d=\"M82.7,204.86H98.26L98,206.2H81.93Z\"\/><path class=\"j\" d=\"M111.2,204.86h15.56c.26.45.51.9.79,1.34H111.44C111.35,205.75,111.28,205.3,111.2,204.86Z\"\/><path class=\"j\" d=\"M139.73,204.86h15.54L157,206.2H141Z\"\/><path class=\"j\" d=\"M168.24,204.86h15.58l2.76,1.34H170.46Z\"\/><path class=\"j\" d=\"M21.17,207.07H37.64l-2.21,1.34h-17Z\"\/><path class=\"j\" d=\"M51.16,207.17H67.65c-.42.45-.8.9-1.21,1.34h-17Z\"\/><path class=\"j\" d=\"M81.38,207.17H97.89c-.09.45-.15.9-.22,1.34h-17C80.89,208.07,81.13,207.62,81.38,207.17Z\"\/><path class=\"j\" d=\"M111.6,207.17h16.51c.24.45.51.9.77,1.34h-17C111.77,208.07,111.68,207.62,111.6,207.17Z\"\/><path class=\"j\" d=\"M141.85,207.17h16.49c.57.45,1.17.9,1.75,1.34h-17Z\"\/><path class=\"j\" d=\"M172.07,207.17h16.51l2.76,1.34h-17Z\"\/><path class=\"j\" d=\"M16.24,209.49H193.35l2.76,1.34H13.48Z\"\/><rect class=\"k\" x=\"56.57\" y=\"114.2\" width=\"97.47\" height=\"67.28\"\/><rect class=\"l\" x=\"67.17\" y=\"147.45\" width=\"76.26\" height=\"9.52\"\/><rect class=\"m\" x=\"94.35\" y=\"162.74\" width=\"21.9\" height=\"10.62\" rx=\"2.1\" ry=\"2.1\"\/><path class=\"n\" d=\"M70.2,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M71.68,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M73.17,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M74.66,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M76.15,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M77.63,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46H77.6Z\"\/><path class=\"n\" d=\"M79.12,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M80.61,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M82.1,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M83.58,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M85.07,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46H85Z\"\/><path class=\"n\" d=\"M86.56,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M88,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46H88Z\"\/><path class=\"n\" d=\"M89.53,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46H89.5Z\"\/><path class=\"n\" d=\"M91,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46H91Z\"\/><path class=\"n\" d=\"M92.51,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><path class=\"n\" d=\"M94,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46H94Z\"\/><path class=\"n\" d=\"M95.48,151.63l-.38.27-.1-.17.43-.19-.43-.2.1-.17.38.26,0-.46h.19l0,.46.38-.26.1.17-.43.2.43.19-.1.17-.38-.27,0,.46h-.19Z\"\/><circle class=\"o\" cx=\"105.65\" cy=\"131.84\" r=\"10.06\"\/><path class=\"f\" d=\"M100.22,135.51l-1.77-5.19H97.8v-1h2.79v1H100l1,3,.94-3h-.56v-1h2.23v1H103l1,3,1-3h-.62v-1h2.48v1h-.67l-1.71,5.19H103.3l-1-2.83-.92,2.83Z\"\/><path class=\"f\" d=\"M110.42,134.42v1h-3.26v-1h.79v-4.1h-.79v-1h3.26a2.62,2.62,0,0,1,1.76.53,1.8,1.8,0,0,1,.62,1.44,2,2,0,0,1-.22.94,1.67,1.67,0,0,1-.56.65,2.1,2.1,0,0,1-.78.31,6.08,6.08,0,0,1-1.1.08h-.59v1.2Zm-.86-2.23h.24a1.47,1.47,0,0,0,1.07-.27,1,1,0,0,0,.24-.67,1,1,0,0,0-.16-.58.68.68,0,0,0-.38-.29,3.08,3.08,0,0,0-.7-.06h-.3Z\"\/><polygon class=\"p\" points=\"59.59 109.61 174.84 109.61 174.84 187.63 147.17 187.63 59.59 109.61\"\/><path class=\"q\" d=\"M315,159.71a4,4,0,1,1-4.81,2.84A4,4,0,0,1,315,159.71Z\"\/><rect class=\"q\" x=\"278.36\" y=\"134.09\" width=\"4.53\" height=\"41.49\" transform=\"translate(61.29 388.54) rotate(-75.7)\"\/><path class=\"q\" d=\"M238.87,318.72a10.37,10.37,0,1,1-12.61,7.49A10.37,10.37,0,0,1,238.87,318.72Z\"\/><rect class=\"f\" x=\"186.68\" y=\"189.32\" width=\"146.16\" height=\"97.25\" transform=\"translate(-34.97 430.9) rotate(-75.7)\"\/><path class=\"e\" d=\"M338.48,171.65,293.61,347.74a15.49,15.49,0,0,1-18.82,11.18l-86.73-22.1A15.47,15.47,0,0,1,176.91,318l44.87-176.09a15.49,15.49,0,0,1,18.8-11.2l86.73,22.1A15.5,15.5,0,0,1,338.48,171.65Zm-50,149.13,36.09-141.64-94.24-24L194.28,296.76Zm29.39-156.26a4,4,0,1,0-4.84,2.88A4,4,0,0,0,317.91,164.51Zm-17.73-2.35,1.12-4.39-40.21-10.25L260,151.91ZM246.36,331.34a10.37,10.37,0,1,0-12.61,7.49A10.37,10.37,0,0,0,246.36,331.34Z\"\/><path class=\"r\" d=\"M218.06,227.74a42.67,42.67,0,1,0,51.89-30.81A42.67,42.67,0,0,0,218.06,227.74ZM235,247l-1.83-23.16-2.69-.69,1.1-4.3L243,221.73l-1.1,4.3-2.63-.67,1,13.27,7-11.23-2.31-.59,1.1-4.3,9.15,2.33-1.1,4.3-2.36-.6,1.06,13.28,7.12-11.2-2.54-.65,1.1-4.3,10.19,2.6-1.1,4.3-2.76-.7-12.46,19.52-4.76-1.21-1-12.64-6.75,10.65Zm43,6.21-1.1,4.3L263.53,254l1.1-4.3,3.24.83,4.29-16.85-3.24-.83,1.1-4.3L283.42,232q4.68,1.19,6.68,4a7.63,7.63,0,0,1,1,6.56,8.51,8.51,0,0,1-1.88,3.62,7.1,7.1,0,0,1-3,2.07,8.9,8.9,0,0,1-3.52.45,25.8,25.8,0,0,1-4.6-.81l-2.43-.62-1.26,4.94Zm-1.21-10.09,1,.25q3.4.87,4.66,0a4.13,4.13,0,0,0,1.68-2.5,4.19,4.19,0,0,0-.07-2.54,2.87,2.87,0,0,0-1.25-1.6,13.08,13.08,0,0,0-2.81-1l-1.24-.32Z\"\/><image class=\"s\" width=\"106\" height=\"77\" transform=\"translate(146.28 134.18)\" xlink:href=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAGsAAABOCAYAAAAn3uiJAAAACXBIWXMAAAsSAAALEgHS3X78AAAKhklEQVR4Xu2dB4wUVRjHVw4sNPW8Y3dn5s3s3iGnniBwdlEvKrbYAzbsgh27CUZMNBpDYu+9xa6BaCIWIEZFIxZAY6\/YC2AvKAj4\/89775g9du\/tnnt3w+4j+We2zO7evN983\/u+730zJFauXJmwWjNk3MEqPjLuYBUfGXcwCf\/WUuoF1Sjx8Vqmz1qVJuMOHX5YQWppaemTyWTWdRynr+d56w0ePHgdvN6b75m+w6p4GXco+EEJqoaQAGdgMpkcJIRw8DwFYLUE19KS6KOtrFJlGqdyyrhD3g\/JP7SGVuS67kZBEGSx3QLPt\/b9dAu2G2ezg5J1dXUDCLO5uXntShO9SUJ6jza339XwjDus9oEIqFQqVQ8LasLjnX3fHQMdDeM6FNtd8dowvOdns9kktnWVJJ6gvu9vqDxKP31CtrbmwjONZaky7tARqCBIb+r7zmjf9yZAFwnhXY7txUK4JwPaAYSora1SFATOyEzGHY7jGgpwTfD6GXiWNAE2NDSsj9f6RufsckIz7tARKADZHToVcK6GNT3mee50bgHtBrx2IfadCHgneJ5zfCUIx3ocdKz0IOIw6ACerAC4PWANz2adJsAStL76+vr+tDZlaWUBZtzBDMq7HmCewgHMw\/Y9bOdDz+G9aTiQ+\/Ha3djnTuiOShCO6XYc0y2Ady22l+FknIRjPQWwjsR2fwDcSVmdoKukiywXMPMOHYOCBXnPQu\/iD\/8WWgx9Dy0gOOhNaC7ef6Ny5LyOY5oDzRbhsTvT8PheIU\/aSwBxopy\/nR0YaKl5LicyNo15p2AVByqEshD6A\/ob+gv6HfoZ+lEBXFRBWgh3\/wO230AL8Ph95VVewna6CD0JoXnj5XyeauacxshYucVOAysXKAJaBi2H\/lWPl0L\/VKiiJ+UvQkIkvI+gVzE2j9NNwkWeDmD7MiiBdfkMQFTw0Slg5QJFQCuglUorqkDhiQnL4olJgBwHggM07x1sZwDUbWpOOwRz2naMHAlMW5gJjhFWGUBVm6Lw6E3+FHJsYGXOiwyymM5gPI8gMFoYXaJKqkuyLguqvOJYcEyWQD8JGWjBLbqPyPzTOYQukXMYg45So8T2oHox1GSCl8k4m3CCXBWeW1BFSgODa3R+xfZL6FXAooVN4hzGoINRYqlhfQ4smiZ9KnKFRgDbBT9yEn7gOoB6RlhQpUi7RQ1sAcbwRTWHMegYzbCeeVgp81cUVi+6P5qoEKmtEIYeJcLyEcPRMI+yoEqXAha6REaKMxglqrB+B85frHQkZGnKaF1tVjV27NgafjAIklnl\/s6l6cpEMEx4OXEy8rGgild0DluoosQnoEthBAdzpYKxgQ7ni4bV2trau7a2diCoD\/a81N74wsn48qnqB5jYMrdYXsQfaJUrDYwnO0567zURVjzcs7g6QeNoaqobUIx1WcvqHnHMlqr561NoBnQFXOLhiA5H0LpUsNGhddk5q\/tEr7QE4\/kDEul50hDcc2AYuxVrXVFYNhrsWnG8lgHUbxjPz\/B4pijRunJg2TyryxVal5DF4HkY0wdECdaV+8RWMLpaBa2Li5emyHD1FyywrlZoXWqZZS7msPugMxGBtzLvYk9HokBVI79v\/P\/A8lWpK10mSNGxWSYjQ+8T6Gk8v8zz0gf5fmozVjUKFXnzwuoksGpaz4qKx8nj5XHz+IsBx\/04ZkyJXoGV3QpXOB7WtTVb+AoFGgVhdQJYtawUR8Vj+0nlT8xDefz6pO0IGt9bKj8bFh0eBazzmCSn0+lAu8KSYBUPrJp6MLTcubCI+di+DX0oZHV9EQb8tyKg8TVaIk5qBhrhSU9XeCCjcKZPrCi1d4VGWEUAq6ruJiUcj3sXdA\/0kJD1vufVyckTdaEEEbrJfwsAa3OFgP4yvvMGFiKYc3H5RFXjS4dlBlYdfYO5YuXcPRHHdwaPFY+vwXE\/iO0sBY2Wxmr7kgLAViiYi2TOxXqhcyp7EFlFyjdvGSGZgFVbR66WEGJLHNs2qk9wb0Bi3+C5PHGhR6GXoI+FnBryRsyATlf5CzukMHZT1eLkaPZq5Ju3jIBMwJwq7HWneOyM3HCcLlcquFwvT1zWVN0L6C7x1iw8B4iCKQ6f013Cda6at\/D9TfnmLSMcE7BqvYqEYrXBC69Hqx3Y2JgchBypAZa2FU7Y\/ZnoYvBvEh3npHreYhvbbNZhAWscT3Sotn2+ZQRjAlbt12cl5PH11uPAMYA2xxjsCTd3mui4iEBYf8vXvdcB63Z8ZrwQ6S0jpaf\/DysCrOqvfIyOA+canrgyAEvvEQUm56ZwDtNBh25fYz76FpdNvLD92hlF6BzL6Bga\/xCT2p1hVX1NsRqH3rkRswbm3sQ5TMheDEaJjASX6yADbvMDAEW6455fKMgw\/gFWpUkBy4mY6RI5h6krUGYD2ucqedalqpwgg5F0viDD+ONWpSsKjIEH5zAA2I9WI2QSzarOd5y\/4PqWirYgg+1q3rXY9zDPSw5tX9Q1\/rBV56RdIudxJrkySnYOh3VNgWU9qUL6H9X8BWgs03m8lOgWpkCsZDDSZtRpYXWDOMi0DKYw2Ww6wPy1kwgLBu7NtCJsv1Du8E\/2ZuiIEJZ1nLrypM7C6kYx2OKAM52RrRLuPsodPgK9SUgEpmHJZNo5npZoYXWzovMXc1DmULI05V4lo0OPrWmL5RxmYfW4tDtk0uz7yQbZiOSeI2TDDIIN92voKxE2gFpYPa6E6hyTCbMzgmUlALoSmqlyLK5rzVFVDAurJ6WjQ7abqa7n3YRsQ+OaH6\/h4lrgy7zSxMKKgbR1MfditId57AjOXSoZZu71AoDdymjQwuphaetSBd9GuMI9YUmTZKLsvSBkH+HNFlZMlIhcU4Ckd1tAmQBAN8KiuMo+XRZ9eRcbC6vHpSNDlpJ4uSoXbQHrUuhhuVoc3rnmGAsrBtJ5V+7lVWGgwcCCwcaVqtxkKxhxUNQVBoG7HXtYCAmweG+oKUyaLayYiINPCITB2+HJvhXnIsC6DtAuCQJvXL6WNOMXW5VfHHyuU3G9ire9Y72QrhCwpmB7IeERooUVE+l5i9V4uMRWFRVOhkWxjXoMG5DsEklMFJ232BXGBUfAOhvQzmA7GjucLKyYiADYWERXRzBcyhdyrYsNsvtxddnCiomi+RbXudhYw\/yKCbHnpfbC65txDczCioF0kMHSE\/MtwNoRljSGwQW2u8qFyrbbBVlYPS0GGezRYI8g8ype6CFvxOWMYkt2JrPBBrZhJiZKqCr8kCFOHVvWAG4Ul05kG3oSkf2G61tYMZFOjmlBQgxq5M1i2FQDaCPZ5MkeegsrJtJBBi2IcABphLpb2gjmXxZWjKRhEQrh8F4Yq27ob2HFShbWGiQLaw1SFFZDg+OzHsglE2753MKKkTQsdjw1NvIaPF7AwCsnxeZ8ztctrJhIVzGGDUv2C4I69mQMyWbDAu4QPufr9pKfmIgQeAdVfW02QnbBygW3fM7X+b6FFRMlwstbE32am+v7ExB7CmW1vb6\/via7bV\/Tl1l1rWg1UI1a5u\/LBUluVQE351Z2xi+z6nopYOFV\/8qa8v4XhMYvsuoeKWA5Wm0f05dYxUf\/AUEXM\/luYxtXAAAAAElFTkSuQmCC\"\/><path class=\"t\" d=\"M151.61,152l14.21-14.26v3.76h57.3c12.72,0,23,17.92,23,40v21.18c0-22.1-10.31-40-23-40h-57.3v3.58Z\"\/><\/g><circle class=\"u\" cx=\"169.48\" cy=\"209.95\" r=\"165.5\"\/><circle class=\"v\" cx=\"169.48\" cy=\"43.22\" r=\"41.81\"\/><path class=\"w\" d=\"M180.17,47.54l-.29,9.9H158a25.66,25.66,0,0,1,.72-6.91,15.81,15.81,0,0,1,2.38-4.75,34.72,34.72,0,0,1,4.62-5,44.79,44.79,0,0,0,5.13-5.26,6.22,6.22,0,0,0,1.24-3.79,3.68,3.68,0,0,0-.93-2.58,3,3,0,0,0-2.33-1,3.22,3.22,0,0,0-3,1.68,12.51,12.51,0,0,0-1.12,5.48l-6.25-.29q0-4.92,1.47-7.42a8.66,8.66,0,0,1,4-3.63,13.31,13.31,0,0,1,5.49-1.13,10.54,10.54,0,0,1,7.66,2.7,9,9,0,0,1,2.78,6.71,9.36,9.36,0,0,1-.84,4,10.07,10.07,0,0,1-2.13,3.06,44.78,44.78,0,0,1-4.55,3.57q-4.9,3.5-6.15,5.56A9.92,9.92,0,0,0,164.76,52h9.95V47.54Z\"\/><\/g><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/ratelimiting.svg","ext":"svg","size":3677,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 189.2 180.26\"><defs><style>.a{fill:none;}<\/style><\/defs><title>ratelimiting<\/title><path class=\"a\" d=\"M98.95,102.14a42.26,42.26,0,0,0,58.54,58.54c.89-.59,1.74-1.23,2.58-1.87L100.82,99.55C100.17,100.39,99.53,101.24,98.95,102.14Zm41.58,41.58a25.85,25.85,0,0,1-3.9,2.62.71.71,0,0,0-.05,1.22c5.3,3.53,2.28,9,.14,16a1.68,1.68,0,0,1-3.22-1l2.58-8.42c1-3.36-3.37-5.82-6.75-5-2.58.59-10.12,1.69-13.5.25a2,2,0,0,1-.64-3.31L129,132.2Zm-28.46-20.66a.71.71,0,0,0,1.22-.05,30.06,30.06,0,0,1,2.59-3.94l11.55,11.55-13.84,13.84c-1.69,1.69-4.56-.09-4.08-5.44a61.8,61.8,0,0,1,1-8.7c.79-3.45-1.77-7.75-5-6.75l-8.41,2.57a1.68,1.68,0,0,1-1-3.22l8.42-2.58A6.8,6.8,0,0,1,112.07,123.05Z\"\/><path class=\"a\" d=\"M134.28,83a42,42,0,0,0-21.65,6c-.92.56-1.83,1.13-2.71,1.75l58.89,58.89c.62-.88,1.2-1.79,1.75-2.71a42.22,42.22,0,0,0-36.28-64Zm-7.52,20.16c-.21-3-.94-3.28-5.46-5.46L117.53,94a1.61,1.61,0,0,1,2.24-.74c10.07,5.09,10.06,4,10.51,13.48Zm14,14-8.32-8.31.07,0C142.49,108.55,143.08,114.42,140.76,117.19Zm1.71,1.71a4.61,4.61,0,0,1,7.36,2,23,23,0,0,1,1,6.33Zm23.19,23.19-3.85-3.85L160,134.76a3.37,3.37,0,0,0-2.84-1.84l-.76,0-3.54-3.55c9.06.43,8.15-.05,13.48,10.51A1.6,1.6,0,0,1,165.65,142.09Zm7.67-23.82a1.12,1.12,0,0,1-1.59,1.59l-3.09-3.09c-4.89-4.89-12.19-4.07-12.23-2.4-.09,3.59-1.6,5.83-3.85,8.08a19.76,19.76,0,0,0-15.39-15.39c2.22-2.22,4.44-3.76,8.09-3.85a1.07,1.07,0,0,0,1-.85A12.51,12.51,0,0,0,142.86,91l-3.09-3.09a1.12,1.12,0,0,1,1.59-1.59c3,3,8.93,7.7,7.12,16.51a.83.83,0,0,0,.56,1,10.52,10.52,0,0,1,6.82,6.82.83.83,0,0,0,1,.55C165.2,109.43,169.7,114.64,173.33,118.27Z\"\/><path d=\"M7.65,9.23V85.81A9.06,9.06,0,0,0,16.71,95H81.15a96.75,96.75,0,0,1,9.12-12H21.9a2.41,2.41,0,0,1-2.26-2.61V14.64A2.44,2.44,0,0,1,21.9,12H128.33a2.49,2.49,0,0,1,2.32,2.64V64.29c1-.07,2.33-.18,3.5-.18a63.93,63.93,0,0,1,8.5.66V9.23A9.14,9.14,0,0,0,133.52,0H16.71A9.09,9.09,0,0,0,7.65,9.23Z\"\/><path d=\"M4.75,124H73.13a59.11,59.11,0,0,1,3.93-20H10.35a4.65,4.65,0,0,0-4.2,2.42L.55,117a4.8,4.8,0,0,0,4.2,7Z\"\/><path d=\"M156.81,111.15a.83.83,0,0,1-1-.55,10.52,10.52,0,0,0-6.82-6.82.83.83,0,0,1-.56-1c1.81-8.81-4.16-13.56-7.12-16.51a1.12,1.12,0,0,0-1.59,1.59L142.86,91a12.51,12.51,0,0,1,3.42,11.38,1.07,1.07,0,0,1-1,.85c-3.65.09-5.87,1.63-8.09,3.85a19.76,19.76,0,0,1,15.39,15.39c2.25-2.25,3.76-4.49,3.85-8.08,0-1.67,7.35-2.48,12.23,2.4l3.09,3.09a1.12,1.12,0,0,0,1.59-1.59C169.7,114.64,165.2,109.43,156.81,111.15Z\"\/><path d=\"M152.91,129.34l3.54,3.55.76,0a3.37,3.37,0,0,1,2.84,1.84l1.76,3.48,3.85,3.85a1.6,1.6,0,0,0,.74-2.24C161.05,129.29,162,129.77,152.91,129.34Z\"\/><path d=\"M115.81,149.35c3.37,1.44,10.91.34,13.5-.25,3.39-.78,7.78,1.68,6.75,5l-2.58,8.42a1.68,1.68,0,0,0,3.22,1c2.14-7,5.16-12.46-.14-16a.71.71,0,0,1,.05-1.22,25.85,25.85,0,0,0,3.9-2.62L129,132.2,115.17,146A2,2,0,0,0,115.81,149.35Z\"\/><path d=\"M142.46,118.9l8.34,8.34a23,23,0,0,0-1-6.33A4.61,4.61,0,0,0,142.46,118.9Z\"\/><path d=\"M119.77,93.23a1.61,1.61,0,0,0-2.24.74l3.78,3.77c4.52,2.18,5.25,2.5,5.46,5.46l3.51,3.51C129.83,97.27,129.85,98.32,119.77,93.23Z\"\/><path d=\"M97.06,126.13l8.41-2.57c3.28-1,5.83,3.31,5,6.75a61.8,61.8,0,0,0-1,8.7c-.48,5.35,2.4,7.13,4.08,5.44l13.84-13.84-11.55-11.55a30.06,30.06,0,0,0-2.59,3.94.71.71,0,0,1-1.22.05,6.8,6.8,0,0,0-7.57-2.72l-8.42,2.58A1.68,1.68,0,0,0,97.06,126.13Z\"\/><path d=\"M132.51,108.9l-.07,0,8.32,8.31C143.08,114.42,142.49,108.55,132.51,108.9Z\"\/><path d=\"M134.28,70.42a54.92,54.92,0,1,0,54.92,54.92A55,55,0,0,0,134.28,70.42Zm23.21,90.25a42.26,42.26,0,0,1-58.54-58.54c.58-.89,1.22-1.74,1.87-2.59l59.25,59.25C159.23,159.45,158.38,160.09,157.49,160.68ZM170.56,147c-.55.92-1.13,1.83-1.75,2.71L109.92,90.81c.88-.62,1.79-1.19,2.71-1.75A42.22,42.22,0,0,1,170.56,147Z\"\/><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/2fa-whole.svg","ext":"svg","size":48803,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\">\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 589 284\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" xmlns:serif=\"http:\/\/www.serif.com\/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\">\n    <use id=\"Vector_Smart_Object\" xlink:href=\"#_Image1\" x=\"0\" y=\"0\" width=\"589px\" height=\"284px\"\/>\n    <defs>\n        <image id=\"_Image1\" width=\"589px\" height=\"284px\" xlink:href=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAk0AAAEcCAYAAADawICXAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAgAElEQVR4nOydeZgjVbn\/P6cqS3enu6dn6dmZmoVicxhFRRjZIsp6FRHBjUFBBOG6C2735wJ6vV5UuMpdEBRRQbjKsChXVoFiX4Z1gEEmzJLZmJme6T3pJUmd3x9VSSfd6ektSWU5n+fpZ5JKpeqtTJ1T3\/Oe97yvQFGVWIbZAhwHrAAOAA4G5gBNwDR3twTQC3QAUeAfwBvAM8Bz4WgkWWKzFSVASum1CVWFEMJrExRFwDLMxcCxwNuAA3H60RlAIxByd4vh9KHtwHqc\/vM14NFwNLK5tBYrSoFq7VWEZZgHA+cAJwKHAdoUDtcLPAL8FfhzOBrpnLqFinJAiabCokRTdWAZpga8D\/g4cAKweIqH3Aw8APwJeDgcjdhTPJ6iDFCtvcKxDLMe+DTwOeDd2Z\/ZwIC0SQCDUpJEYgM2zkNTAAKBDvgR+IUgiCAw8iEwiCOe\/jscjVjFvB5F8VGiqbAo0VTZWIY5D\/gC8BlgYfZnKST9UpJAkpCSJCDdfhScUalA4AP8QuBHUCcE+shH6zbg9zh96FtFvSBFUVGtvUKxDDMEXAxcAsxNbx9E0mvb9GEzICWTeTxqQL3QaBAajUIb7q56AvjXcDRy7+StV3iJEk2FRYmmysQyzP2AbwAXAHXp7X3SJiYlcWmTmFQP6gxCG4RGSAjqRU4P2g\/8GvhZOBrZOnnrFV6hWnsFYhnmWcBVuKMiCXRLmx6ZYqDAD0QBhIRGs9CGN\/77gS+Go5FIQU+oKDpKNBUWJZoqC8swA8ClwHeBenA8Sl22TY+0SU5SKI2GD0GT0JimadkeqD7gX4Gfh6ORwYKeUFFUVGuvICzDXAj8BjgJnOm3bpmi07ZJFbih56NOCKYLnYYh8TQI\/Bj4cTgaSRXdAEVBUKKpsCjRVDlYhrkS+C1wEEASSYedokfaRe9BBdAkNKZrOr6hR+8\/gM+Go5Gninx6RYFQrb1CsAzzFOBGYCZAr7TZa6cKPioaD\/VCo1XT8Q\/dPo8CnwxHIztKboxiwijRVFiUaCp\/LMMUOKEMPwF8EuiUKTrsUgw3cxHAdE2nRWT8TkngO8CV4WhENc4yR7X2Msdt7D\/EcSWTQrLbThGX3i7ESDf86UJPb9oDnBmORh7xzirFeFCiqbAo0VTeuPGfNwOnAQxIyS47Oel4pULhRzBH8xEcun\/+CnwqHI3EPDRLMQaqtZcx7tz79cAqcAIUd9mpkkzFjZcGoTFb8+FKpwTw6XA08r+eGqXYJ0o0FRYlmsoXyzBbgftwUrDQJVPs9cC7NBoCmKnpTBsafL4InBSORtq8s0qxL1RrL1NcwbQa+BA4jX2PXZ5hQz4E8zRfOlWBjSOc\/uixWYpRUKKpsCjRVJ64gukhYLkE2uwkPR576EejSWi0aplIp1eB45VwKk9Uay9D3CRrN+MkWWOvnaJTlqdgSqMBczU\/9UPC6ZPhaOTP3lqlyIcSTYVFiabywzLMacDjuIJpp530PKRhLBqExtxc4XR0OBrp8tQoxQimkjFaUTx+SgUJJnBU0lt2gn7ngawBf7AM8yhvrVIoFLWGZZh+4HYqSDABxKXNTjuztGc5cLt7LYoyQommMsMyzDNxVnnQKStDMKWROMJp0BFOQeBWyzBne2uVQqGoMf4VOB6cKblKEExp4tKmzc6U\/Dwe51oUZYTyK5cRlmEuA14AmuPS5i27Muvl+hDsp\/vTivwB4GRVd6l8UNNzhUVNz5UPbmqWuwHa7RQdFTTozGa60JmhZYLDTw1HI\/d4aY9iCOVpKhPcOKZbgOYkzpLYSiWJZPeQ\/ScAX\/PQHIVCUQNYhjkL+AM4K40rVTABdMgUfUMesj+416YoA5RoKh8+DxwOsMtOUulumZi06RrqtC5z6zwpFApFsfgJMCsF7CrTlcYTwUkvA8AsnGtTlAHKr1wGuHE\/bwAt3blz2hWNBuyn+9MlA1aHo5GzPDZJgZqeKzRqes57LMM8AngKEG12ku4ixjGFFi4ktHBB5v3up58p2rma3Dx4OCGjK8PRSPFOphgXPq8NUADwL0BLCthbYMF09K+vHXOf7ffdz6bVtxX0vOCsqNtrp5jjNPozLcM8MhyNPF3wEykUilrnCkD0S1kUwRRauJAlZ32UBSeeQGjhwhGfb7\/\/ATbdurrgAqpH2jRLSZ2jzK8AwgU9gWLCqCGSx7hz1VGgYY+dyp7SKghnvPLSmPu8+h+\/ZP1vbyjoebNZoPmpc0bjfwlHI6cX7USKcaE8TYVFeZq8xTLM9wJPAGwfSntSMJac+VGWf+0r+Jubx9x30+rbePHyHxX0\/HVCsEDLZB44KhyNPFnQEygmhIpp8p5LgIYUku4KDlzcF1kBmR+2DPPtXtqiUCiqju8B9ElZcMG04MQTOOwH3xuXYIIhgVVI+qWkb+i6vlfQgysmjBJNHmIZpg\/4LECXbZdNPaRCE5d2OncTwAVe2qJQKKoHyzAN4CSg4Dnt\/M3NvPMH+TXK7qefIbZtW97PDvjsecw+8oiC2pI18DzJvWaFR6iYJm85EZgNFC1w8dX\/+GXmdWi\/hSw586NFOc9YdEubWU5Ryk9Yhvm1cDSS8MQQhUJRTZwNiCSy4EksF554wggPU2zbNh6\/4KKMYDrgs+fl9SwtOOnEgsY39UmbJBIfQuBc878V7OCKCaE8Td7yaXA8McWqu73+tzdk\/rbfd39RzjEeemXmCmcCp3pmiEKhqCbOAYpSiHf2yiNHbFt\/\/Q05Hqb1v70hr8ep0J4myLnGcwp+cMW4UaLJIyzD1IGToTgNvtxIQXayNiWaFArFlLAMcylwEECvXYwVcwtGbNt2\/wMjtsW2bc\/z3ZEr7KZK1jUe5FaPUHiAEk3ecRgwDXLERFUTH4prer+XdigUiqrgeHAqEAwWwVPfcsghOe9j27aR6O4esV8+cVUMBpEkh67zfSU5qWIESjR5x\/EAg1JSnWvmRtI3lOd8mWWYhR+KKRSKWiIMZK8sKyqjeZTyeZU6160rig1Z1xouygkUY6ICwb3jnQB9VbtmbiSDUmKTUervAvIvP1EoFIqxeTdAf5E89bcf+g5gKD5psLtnxD5HXPnTvN8tVpbwfmnTJDRwr11RepRo8o4DARI1lmhw0MluC+71KxQKxURx07UsA4oyNZfNaALosB98b8QUHkCiu5tNtxa+wgLkXOsyyzB94WikOmpuVRBqes4DLMMUwAFQ\/AZfbiSGrvcgL+1QKBQVzRLcQf+gBwPPw37wvVHTt7z6H78cNYfTVMm6Vh+wtCgnUewTJZq8YTrQAJCsMU9TlmdtPy\/tUCgUFc0icOpblnoZzb4E04uX\/6godTzTDLte1Yd6gJqe84ZMxrRi5WcqV7IafKN3VigUigqnCaDUdRRGE0yJ7m5euPxHbM+TkqDQ2Eg0p2xsU9FPphiBEk3eMC39orYkU04np0STQqGYLNMA7BJ2oKMJps5163jh8n8t2oq54dgSHM009BxRlA4lmrwhkH5Re6IpgxolKRSKyVIHpZuaG00wbVp9Gy9e\/qMSWeGQdc0NJT2xAlCiySsG0i8EtSWcsoLoRq7fVSgUivExAKUJyj3gs+flFUzFjl8ajaxr7iv5yRVKNHlEJq1s7YkmkX6pRJNCoZgsnQCaGGu3qdFyyCEjCvImurt55pJvFC0X01hkXXOnJwbUOEo0lRi35lwmR5GOKHkwo5dkjZJaLMNcHI5GNntmjEKhqFR6IWcQVhSGCyZwUgrkE0wthxxCoHko6qBj3et5y65Mlaxr7i34wRVjokRTCbAMcy5Ocd6TgROAGenP\/ELUVIJLv8g0+IOBTZZh\/gO41\/17JByN9Htlm0KhKG8sw9wfp+D3meAMwjSKE9s0+8gjMtnA02xafduoU3LLv\/aVnP0fv+DzBfdGpa\/X5QeWYR4C3B2ORt4s6IkUo6JEU5GwDHMRcJb7d8Ro+\/mLPFIqN\/Jc70Hu31eBPssw7wFuAf4WjkbUnL1CUcNYhunHqdP5TzhiadnwfQJC0F+EgeeCk04csa1Ymb7HS0Dk9J9Hu3+\/tAxzA3A38DfgoXA0kvDAvJpAiaYCYhnmfJwR0KfYh1AakBIhIIBwGkHtOJoyjb5PSgLCmZ7Moh44w\/2LWYb5f8CtOCMpJaAUihrADWEI4ww4zwBa97W\/H0F\/ETrR4V6m2LZtJUsrMBr7GGQvA77k\/rVZhnk7Tt9phaORWqkJXxJqy81RBCzDDAIfBi7EGRGN+E1tIC5t90+SQtIidGZqOoNItqaKNyg4+tfXjmj8+2L308\/w+AWfL4otQSFYqPkBiKYSJJEEhaAejQahUS9GvR17cLxP14WjkeeLYlwNIWtoOrgUiNHvW8UEsAzzCGAVjliak2+fJJK4lMTdwrUhodEtbdrswpdgO+OVl6b0\/WJMz7VqPpqFRkza9EibBqHRIAS+0R\/lu3DE003haMSbyPUqQ3maJollmAcDnwM+A8wc\/rkNxKRNr7TpkyNDvfuwAZ0AAh1RE5nB69zZ+ASSpHu9A1IyQIpOmUJHEBKCRqFRL3IWEzfhiNILLcN8Cfg1cHM4GlGrRxSKCsYyzBbgHJz2vTzfPgNSEpM2MeycOnM6EHJFQ6GZyEBzNIqxui59rXFpO7+JdKK5AkIQwhGRwdzfYw7wReCLlmG+ClwH3Kj6zsmjRNMEsAxTw3EXfwVnLjkHCfS6N3I8j1DKZkBKbJygvgYh6KmB0f9Qg89\/rSkk3VLSLW10HPHUKDTqcjuBdwD\/DfzcMsz\/Ba4KRyOvFtl0hUJRQCzDPAZHKJ2Jm6gym0Ep6XUHnYlRetI+tx\/xIfAjRt2vWvAz5FHqG9aHDkrJICk6ZAp\/Vt85LAZqOXA18FPLMFfjeO4fK5H5VYMSTePAMswQcB7wdZzq2jkMSEm3TNEr7Qmt4oi5LuYmodEjS112srToiIz3KD6Oa00h6ZIputxOoFlzfqesGKh6nP+T8yzDvA\/4eTga+XuRzFcoFFPEMkwf8DHgEuCdwz93Bk02PfboQimbBJIEMiMSOmR1h+40iiFP\/b5+nwSSDjkkoJo0jebcvrMOZxp0lWWYLwBXAn8ORyOFn+OsQtRk\/D5wUwV8CbgYmJ79mQ30yBQ90mZgkl6iBqExT3N0azrGp1qZJnRmaTopJNHU5MaEAuc3axZODFQe1gI\/A\/5XdQCjo2KaCouKado3lmE2AhfgrJBdNPzzuLTpHod3Ph8zNJ3pQieBZEsRY0PLgUW6Hz+CDpmi3Z6YQBxH37kF+AXw63A0ovI\/7QPV2vNgGeYs4NvAFxjmOk4g6bJtemSqILlBDN2PD0G7narqkVK6wXfJFHsm2ODz4UcwTdNoFnq+m3gD8K84wY9KPA1DiabCokRTfizDnAlcijPozCkumwK6ZYpu257SYNGPYJHuLC7ZYSfpq1KPfb0QzHcX0WxJJaY0FelzPffNQkcf+XEXcA2O537vpE9SxajWnoVlmNOBb+EEzoWyP+uXznRRb4Eb5XShM0PTSQFbUoMlK0BZSkJCY67rUduaSjBYQI+aDjQLnWmaNjx9AcDrwA9xXM\/V+NNOCiWaCosSTbm4wd1fdf9yxFICSafteOgLdRfO13zUC424tHmrCKvoyoF5mo8GodEnbXYU6BoF0CQ0WjQ9XyqDLhzP0y9U0HguqrWTiVn6BnkaeVzadMhUUZKngRMIbugBNGCv7awiqzYWan6CQtArbXYVqVMbowN4Hfh2OBr5a1FOXmEo0VRYlGhycKfhvojTl87I\/qxfSjplKrPaq5DUC4357qBsm52YdLhEuZKdqqVY3rSQ0GgR+vBFNwDtOCEP\/6Wm7RxqurVbhilwlrv+BJif\/VmftGkvoljKZqam0yJ0bBxvUzXJpkahMaeEHVpaPE3X9Hy5Sx4GvhqORtYW1YgyR4mmwlLrosldVXwBjld3dvZnfdIJSi72tNkCzU+dEAX1xJQLaU9av5Rst4sbt1UvNKYLPV\/OvN3A93Finmraa1+zrd0yzJXAL4HDs7eXqpFnowGL9AA60CNtdldJo3euy49Ocb1M+RA403bTR07b2Ti5Sr4fjkbaSmZQGaFEU2GpZdFkGeaxOMvY3569vd\/tR8ezUrYQZMf87LKTBQ+j8IrsQecOOzEi1UCxaHDFUx7P08vAl8PRyKMlMaQMqbnWbhnmPODnOKVOMgwi2WuXrpEPp0lozM40juoIaExnr3U8aAlPEngKoEXotGg6w9aMdAGX4bidq0OljhMlmgpLLYomyzAXAz\/Fyd6dYVBK2os0DTcWczQfjUIj5a6kq\/Qe1MtBZ5qQ0Jgh9OH5nsDJMv7NcDSyueRGeUzNtHZ3Ku4CnIaeiVuygXY7Rbf0Pid32sWcQrI1lazoLOHZI6Q2O0m3xyLQh2CGptM0crntC8DnwtHIix6Y5QlKNBWWWhJNbgHdbwH\/j6yVxSmg3eN2rrsr6TSoiqDwdPC3l4PONM1CY4bmG77arh\/4MXBFLRUIronWbhnmATilN47N3t7l5rsolxGJD8F+bqOv5Ll5P4KF7nXEpM3OMrqOoBDMEr7hbucUToK3y2qhMLASTYWlVkSTZZjvBn4LHJreJnH60Y4y6UezB2uVvLAmXZsUyme6UQOmazrTRqZ5eQU4PxyNrPHCrlJT1a3dHRV9AyeALZje3i8lbTKZU8eoXMhent8lbfaUkeAYDzqwwM3JlHSLEXvf3EfSJDRmab7hU3YbgAvC0cjDnhhVIpRoKizVLposw2wAfoSzujjTZOLSZo+dKrvyJbPcBzvATjvpyVThVCj3Z4AfwSxNH54k08ZJUfC9cDQS98ay0lC1rd31Lt1EVqB3eiquq8xHH+kst8Cksr96hQbMd9MLSGB7mS\/\/1d3G3zhyyu5q4FvhaKTfA7OKjhJNhaWaRZNlmMcBN5BVPioF7CkT70c+BE4\/VOf2QzvsRElWQReCOjegXeAM7nfY5SZJh2h0B57Dpuw2AeeFo5FHPDGqBFRla7cM83M4qjeToDIubdrsVMWUKpmt+TLxN5UgnHRgXpZg2mknPQuqnygNQqN1ZIqCV4Czw9HIKx6ZVTSUaCos1SiaXC\/95TjxS5lRRY+02Wsnyz4tSrbH2wbeqgDhVCcE8zQnrCGBZHsqURG\/88ysZ5WLDVwB\/KAaY52qqrW7aft\/A5ye3mbjjIoqsSBuejUIOJ1Vm12eks+PYJ7uw48jmHZVoEtcw2n8zbmNfwDnoXF1OBopx59+UijRVFiqTTRZhrk\/cDNZXvokkjYPVxdPBh+C+RXSL4XcWCyBI5h2pJIVM8CHUQeea4BPhaORNz0yqyhUTWt384XcQlaSyn4p2WVX1s03nNasB\/mAez3l5LANuakSNKg4D1M+QkKjdaTL+T4cr1NV1GJSoqmwVJNosgzzPOA\/yfLS97oDtkps1dnCCcrTa58djlGJgimNhvO8GhbuEAO+FI5GbvDGqsJTFa3dMsyv4aR618F5eHdUUQHc7JUUNs4Sfq\/jCTScxp4OuEwi2WknyzqGabz4ELSODHTcAnw0HI0855FZBUOJpsJSDaLJMsx6nKSvq9LbyqWvmSoaMNfNqg1OAuPdZTCY9iGYrfky2bf73JXGlf1rO7FOrSMX2dwEXFgNq5MrurW7tY5+A3w8vS2B442phod3NvXCaWBp96eXK1cahcbMLFds3M1iXh0SdYgWt5hyViMZAP45HI381jOjCoASTYWl0kWTZZhLgDvIyupdDV764WR7dCRDi4JKfYUCmDasbylHD9hU8CGYo41I7fIy8JFwNLLJI7MKQsW2dnd13O3A29LbYu7Du9KV+mjowKws96fEiXXqKFGAe4Nb1DE9MrJxPHqVmgtlPNQJp\/EPm6v\/NY7LecAjs6aEEk2FpZJFk2WYJ+GENUxPb6u2B3g2w2NvEkjabSeDebFbhcDNsJ1VVLwSY8UmQrZQdekAPhmORu7zyKQpU5Gt3W3ofyIrs3d7FU3HjUW92\/D9Wf99vdKmW9oFL7+i4TT0aUInKHLPt7eCViNOBR3BHE3PuPddngE+HI5Gdnlk1qRRoqmwVKJociskfAcn\/5IGziBodxkHSxeKfEkaE0i6bJseWfgknRrQJHSmaVqmzy63pKDFJDvu1cUGvgf8pBIX2FRca7cM8ws4eXQyDX1XhQcfTwaBk6CxZZh4SiLplTZ9UtIv7Uk1SB+CeiFoEBohoeXcJHFp0yFTZb98txjM1HRackdNW4APVlpaAiWaCkuliSbLMIM4mb0z9TcHpROTWE6LTIqNH8H0YaWVJE4fF5M2cSknXbpER9AgBCGh0TCsD03PDtTabz1X8w2vYXcz8NlK89hXTGu3DFMDrgK+kt5Wiw19OGmXb7PQhntCkDi\/0SCShJQkkdg4QlMiEQg0nGk\/vxD4EQTcf7OxcaY+u2Sq6mLFJkqjO2rK+oV6gDPD0cj9nhk1QZRoKiyVJJosw2zFiV86Kr2tklfHFQI\/gmmaRpMYUdSbBJJ+6fSfCbL6ULcJacIZvftw+k2\/ENSN0of2yBRdtl2zz6tRVtc9CZwejkbavLFq4lREa3dHRjcBZ6a3VctKg0LiQ9AoNBqEoG7Y6GaipJD0SUnMHXXVZjPPT50QzNX82WkJEjjlV37vmVETQImmwlIposkyzKXAvYCZ3lbN8UsTReDEPDW6A1B9zG\/smxTOc6pX2sRVH5phuhsEn0UEODkcjWz0yKQJUfat3TLMacCdQDi9rZwTPZYLAufhHkBzvUegC8ezpCEQDHmcUtKZ1ksgGZSSAfdfxehkJ\/TM4pvhaORnXtk0XpRoKiyVIJosw3wXcDcwGxwvdFuFJv0tFUEhqMvqP\/1CoLt9ZzYSZ5DpeKMc734\/ds175fdFk5uWIOu33A2cGo5GnvfMqHFS1q3ddSXfA7wrva2WAr4V5Y2GUzpm2LLaK4DvlHOAoxJNhaXcRZNbP+6vQDM4g6WddrLgi0ZqBcHQg1O6f4qJU+8WJs6arOsGTiv3unVl29otw1yIk4n5EFAjI0V5InDqBA6bp\/8VTj6nsuxPlWgqLOUsmizD\/CDwZ6AeHI\/yW3ZSeZIVZUFACOblpnTpAz4Wjkb+z0Oz9klZtnZXMFnAMqDs6wYpFK0j69ZdC3whHI2UnVtUiabCUq6iyTLM04DVgB8qu0SHonoZXuoGJ0b0zHA08lcPzRqVsmvt+QTTW8qVrKgA8qQk+CNwTrl5nJRoKizlKJosw\/wYzuIZPzh1K9+yE1WXtV9RHeg4oQ5ZuQATwKpwNPJn76zKT1m19uGCyQbeshM1mRNIUZnkEU5lN1WnRFNhKTfR5HqY7sDNZTcgJTvshFpprChrNGB+rnCyccqulJXHaXhaCs9wg74fQgkmRQWzd2RZmYuA\/\/LIHEWNkTUlp4FTQ04JJkUlYAM7cp\/5GrDavafLhrIYIrlpBSzgHeBURf1TUGeHVhbmKRQTJpywOTKZ86j6cTga+a5X9mSjPE2FpVw8TZZhHo+z2jgAysOkqEzyeJwGgVPC0chD3lk1hOet3TLMBpyEa8eAM5F5TYOf9XrZOMEUiklxxkCS4wdzvE6XhqORK72yJ40STYWlHESTZZiHAw8CTaAEk6KyySOceoAPhKORZ72zysHT1m4Zpg7cCnwEnAyq19X7ec2nBJOi8hHAp\/qTrEzkCKezw9HIzR6ZBCjRVGi8Fk2WYR4APAHMAie54g4V9K2ocDRggebPrle3BzgqHI2s984q70XTfwP\/nH7\/uzo\/z\/mVYFJUDxrw2b4E7xiaqkvglAzwzNWsRFNh8VI0WYY5G3gaWALQLeBOv0av986vmkUHZqRsDh5MUK\/a2pTIk45gE3BkOBrZ7ZVNnjUtyzC\/DmSmKu4M+vh7YKrVfhSK8sMPfDmeYEkqI5y6gJXhaOR1L+xRoqmweCWa3NCGR3ErJsSE4OcNftpULGhZEJSSD8f6WJBUPr+p4EewQM+p9fk8cGw4Gol7YY8nbh3LMD8EZGp0Pe7XlWBSVC0J4Np6H3uGHmbTgL9ZhjnLO6sUlYxlmAK4EVcwJYHr6n1KMJURA0JwV6iewTKIeatkEkh22onslKzvAm5020DJKblosgzzbcAt6XOv82n8uc5XajMUipLSKwT\/U+8nPtTMlwC3WYapbn7FZPgxcEb6zY31fjaoxTNlR58QbPCrJj5V+qVkt53M3nQGThsoOSVtZZZhNuMkXQsBbNMEv63zqxUeippgtya4tt6fHaB7LFkeV4ViPFiGeSbwnfT7vwZ9PK8Wz5Qt3cr7VxB6pU27nTPV+R23LZSUkrW0LHeyCc7I+9oGP\/3qflLUEBt0jVtyPatftQzzk17Zo6gsLMM8GLgh\/f5pv879KrShrLG9z+xTNXTIFD25JdVucNtEySjl8OT\/AaeBk\/nzt\/U+OtRcr6IGedqv85g\/50H3G8swD\/XKHkVlYBlmE3A70AgQ1QX\/q0IbFDVGm51kYGgxSyNwu9s2SkJJRJNlmCcBl6ff\/yXoU8krFTXN6jofm4baQANwh2WYLR6apChjXE\/9DcBB4Hjqf1PvJ7nvrykUVYcEdtrJ7DCHg3A8TiXxwhR9mGIZ5jycatsawIs+jYeUO1lR46SA6+t9fCuWoMkZNS0DrgM+5qlhinLl68BHARCCvR8\/g08aiyZ1IJVyojg88cQTrF271mszaoIkkl12kvlaRsJ8FKeNFL3iQlGVmav87gVOBNipCX7WEGBAzcopFACYKZsvxRPZLt\/PhqORG0b\/xtRRD83CUuw8TZZhvhMngaUfYMm3LmHRxZ+f9PFs2yaZVD6qQvOLX\/yCG2+8ccT2I\/sHWdk\/4IFF1U+L0JmpZZwwCZzEly8U85zFniP7Kq5gSgI31PuVYFIosojoGvcGcxy+\/2kZ5v5e2aMoL9wEln\/EFUwzP3A8iy66cErH1DQNn8\/vefkXhWKqdMoUsaHAcD\/wR7fNFI2iTc9ZhrkC+Pf0+78EfXJc1cEAACAASURBVGxXSy8VihHcG9A5KGmz1MkYHsJp+EeFoxHlDlBciRvHFGht5cCf\/htMQuxs2rSJWCyWs01KSSqVUp5Hl9mz59DaqvLNVhptdpI63Y\/uTJwdhNNmLi7W+YoimizDrANuBgIAr\/s0XmydwbcuuqgYp5sUTj+hOguF9+zevZs\/\/PYGvh0fpM65Jd8DXAZ810u7FN7iVk7IdJoH\/uwn+GfMmNSxOjo6WLb\/SAemlFJN1bls3LhJiaYKJAXstlPMG4pvusgyzLvD0chdxThfsTxNlwFvA2eVx011PkKhEKtWrSrS6SZHKpUilVJ1gRTesn79en73u9\/xp6CPz\/RnHmDftgzzjnA08ryXtim8wTLMVuD69PuBY49iRvjYgp9HCIHf7yeZTCqPk6JiiUubLplimsjEN11vGebbwtFIW6HPVfCYJsswDwMuTb+\/uc5HV5nOneu6jq6rlXyK8mCNX+eFoczOOk7+JpWIpzb5BdAK8JYm6D\/tg0U9mc\/nUzFOiopmr51icEj4t+K0oYJTUNHkdvC\/wenwecGnsbbM0\/vruo7Pp55LivLgz3U+YkMPr3eQNQBR1AaWYZ4CfAqcRMC\/r\/cjS1C\/zOfzoWnl3V8rFKMhgd0yZ6r5U25bKiiFbiFfB94JEBdwa4Vkq3VWk6iRlsJ7eoXgtmCO9\/MyyzBNr+xRlBbLMBuBX6XfPxTQ2VbCBTS6rqNryvuuqEwGpKRT5oTc\/MptUwWjYKLJXSZ9Wfr9bUEfPRUkQpRwUpQLz\/p1Xh\/y0AaBX5cq263Cc34ELALYownuDpR+4KnpWlHDFt7o6OfeaBd3bOjkmZ0xBlIqlkpRONrtFImhRV6LcNpUwShki7waqAd4Q9d4xl95oxUhBD6fb59Bka+99lqJrVLsi1AoxOLFi702o+DcEvTx3dQgAec2PA44GyezvqJKsQzz3cCX0+9vqfMx6JFU1jQNIUTBVtalpOSW9e388uU2NnfnJnps9Gt8wpzOJe+cy6wKmZ1QlC8SaLNT2dnCv2wZ5i3haOTZQhy\/IHeoO294CjgpOW+p4Bs\/vZokkUjkFU7xvn4OPPAADyxT5GPDm29WpWhq1wR\/C\/j4yEDmoXWFu5outq\/vKSoT15P4X7je\/6f9Om94XJ8zexA5FboHU1zwUJSHtvXk\/bw3YfObdXv56+Zu\/njCYt7RWtTchIoaoE\/a9EibJqGB06autgxzZTgambJbc8qt0jJMP3BV+v3fAzp7qiCJpd\/vV0GRCk95OKCza6gtzQe+7aE5iuLyKeAIcOJB7wiWh6c+LZwmS0pKLnhw86iCKZvd8QRn3buRTd2q5Ihi6uy1k9hDb4\/AXVwxVQqhCr6Am7G2Swge8GAOvlj4fD6VkkDhGTZObGAWl1qGudgbaxTFwi37cEX6\/d2BnBWUnpP2vk8m3vOPb7Tz0Pbece\/fOZDikse2Tvg8CsVwUjjxTVlcUYgSK1MSTZZhzgJ+kH5\/Z9C7OfhioXI5KbxknU\/jtaGg8Drgpx6aoygO3wQWALQLeDRQnv3NZBbKXPXS7gmf57G3YrywOz7h7ykUw+mWOUHhC3Da2pSYqlvoe0ALwGZd4zl\/dU5n6bpe0KBIhWIi3B70cVByEPdRepZlmEeGo5GnvbVKUQgsw1xIVkf+iF\/LnlIoO3w+H6lUCtse28p17X1s7x3kyvBS3t7ayB\/W7eTTh8zlvmg7+0+rZ1lLPev2xjhkZghbSt5oj\/ODJ6O09ye5Z0sX75ytYpsUU0MCe3JLrHzTMszfhKORbZM95qRFk2WYi8gqindr0FfVldzSKQkqlXjS5qm3enmtvZ9d8QS2lDQFdA5sqeO98xqZF\/J7baJiFHZpgkcCOscPZlzNPwHe56FJisJxGe6q47i02VwBOZLSnvexhNP6Tic26Q+v7eKZVfO5+O8RvvWeRfQMpIglUjyxo4v\/e3Mvj3\/qHZyy+hV+e8qB7Iwn+PHTW9jYpeKaioENbPT7eNPvY6dPp1vTSAE+CS22zdxUiv2SKfZLJgnZ1fFEj0ubuLRpcILC63Ha3Ocme7ypqIB\/AfwAa30aUb3K5uXyoGnFzV9SDDZ3D\/KLl3dxx4ZO4snRO7n3zg3xlXfM4fiFTSW0TjFe7g\/oHJ1IpVMQhC3DDIejEctbqxRTwc1td276\/V6Zwu1Sy560931ftTsH3f7m5bYYz+3s5bzlc9i\/pY6TFs9g2fQ6Tr9zHSl3hfKnl89lRp2Pf7Q703K9iXL2t1UmrwX8PFUXpCfPQq2kgD26xh5d49WAcw9Ot20WJRwBtTCZor6CaxPulam0aAI41zLMfw9HI29O5liTEk1uY\/8sOO6v\/wtWrgdmohRqGW6xkcB\/vrybn76wc1zJ457cGePJezdy4qImrj52ETMrOG1ENdIrBA\/7dU4a8jb9CDjGQ5MUU+e7uCWneqWdXTerIkivLh5NOLU2DAnA1evb+LdjFnPrG3s444CZrG2Ls7GzD2NaHQCPbO3kZ89u5bW9jmiarzzfBWNACO5tqGPjBEvxdGgaHUGNl4PO\/0VrymZhMsl+yRQLkymCFXS\/DkpJr7RpdISTjtP2zp3MsSYbhPRd3CHRiz6NHVWQYmAiTGU1SSkYtCWfe3AzP1rz1oSz7d6\/pYcT\/hJho1r2W3b8PeCjb+iWO9oyzJM9NEcxBSzDPABYlX4\/bJVPxbCvsIV3z24g4D4bbovsQReCn6\/Zytq2OHdE9gBwxTFLADhp8YyMYAJYOSdUZMtrg34hWN3YMGHBlI82XePFYIC\/huq5ZlojNzc18Fh9kM1+H4kyfRZmM6yNrXLb4ISZ8C\/peplWgePNuLuGvEzDGSt7uFd8\/bGt\/HVT16S\/v7VnkI\/evZH7P2zSWl+7\/7\/lRp+Ah\/06pw55my4D7vXOIsUU+CGul6lH2tkrfCqO0bzvTQGdDy6Zxu0bOtnaPUDwPx4H4Mg\/vpjZ5xP\/9\/qI47UEdU5ePK24Rk+QdB9frgPlfEjgb6F6dhchSaoEduk6u3Sd54KO92Vucigeal4qha\/MbukEMjvhpY7TBj8x0eNM5tf8pntCXtcFO2vMyzSccqsMfvMb7fwp0jHl42zrHeSLj2wpgEWKQvJQwEdi6O0RlmGqgPAKwzLMg4CPgfPw6ahQL1M2oyXB\/M675tE4wVXV337XXJrLJO2ClBLbtrFtG2knkQO7y26QPBovBgNs8ZXmd7SBHT6dZ+oCrG5s4H+mNXFrYwPP1AXY7tMplzu8w05lD08+5rbFCTGhu9kyzNnAOen3a3zlIxa8RNf1shBO3YMpfvDsjoId76FtPdyzefIeK0Xh6RewReR02pd6ZYti0nwdEFD5XqZs8oUtLG4OcN37jMw03Vicc+AMzj9kVrFMnBBpsZRMJhkcHIDXvondvgYpZd6\/fSFL\/DcgBE\/XBQr4a0yMFLDNp\/NkXZA\/NzbwP9Maub2xnjV1AXbpumd3fNrb5CJw2uKEmOiT\/ks4CfaIS5v22nYy5VAOSTBvemMvnQOF1fS\/eHniyekUxWWLkNmdzqmWYR7inTWKiWAZZitZA8\/OKvAyDWd4EswTFjVzxz8tY\/+W4KjfafBpXH7EPK48Zr9SmDgmtm2TSqUYHBwkHo+hvf4v+HbeSiKRIJFIkEwmSaVSOX+2becVU7aU2JT27zW\/j36vf8QskkIQ9fl4vC7IzU2OiLozVM8LwQBtulZSETWszZ3jtslxM+6AFcsw68nKy9RZQctjS0WhK4NPlD9HOgE4an4zd54+9Bx935\/W8vDHVwDwpYc28ImDZnPUfCe1wF0b2\/nQ0hmZfbsGbV7Y1cPXrI1s7xnghbY4G7oGWDZt9A5PUVoSOB6K5qEltF9nCnlHFCXlC7gDz1gVeZmGMzwJ5nvmhHjsjAO5e3MX923pZmPXAAkb5jToHLOgiTOWTWd2mcRPpsVO2sMUfPMy6ttvA0DbdRf0vg55YpuOnLWGxg+MLBmzIJliQbK04jgQgANEks6YRmSnj7Vb\/NiyfLwcg0Kwye9jk98HBKmTMrMqb1EyyYxU8VJOJJDEpE3I6T\/rcNrkZeP9\/kTu0vOAmQADUtJXIfO6pcarlAQdAylea+8D4I2OPv73H21c+PZ5XPfyW2ztHeTNrgHmN\/p5Ykc3Pk1wypLpfP+JKI9u6+TA6Q28e24j\/+\/xzZgt9Zy7fA6NAZ1Tb3sVgMff6lWiqczotFM0DwV4nmMZ5nfD0chOL21S7Bt34PmF9Htn4Fm96LqOQJByR\/Y+TXDa0hZOW9risWWjk\/YWDQwM0NcXp37jDwl13J75vK7jPui4L+93j57r\/JUD7yT3+RMbENz+bB1\/fLyBnV162QW09wtBxO8j4oqoBinZL+EIqIXJFC3jyEA\/ETplKi2aAL5gGeYV4WikbzzfHdf0nGWYAvhy9gkVozPVyuCTIdI55Izd05fgJ89uQwKzQwH6kzZmSx1zGwLU6xrzGgP0DKb4xfPbeWpHD2\/FBgF4YHMHv3h+OwDLWuozx3ujo5wcvQoYGi25BICLPDRHMT7OAWaBM\/Dsr4GBp6ZXTkJgKWVmSq6vL07wzctozBJMlUwoKDnnmD7uvLSdVUfHEWXu4YwLwRsBHw801HFDc4jfNDdyX0MdrwX89BZg8Vm\/lAwMtb9ZZE2Zj8V4Y5qOAw4ESOZ21opRKHUup719uSOLHb0DPLWjm5MXT+e0\/WfQ5K5GOfPAWXzUbOWuDe0MDHOBXn7UYm79sDOtd8\/G9sz2rgLHSSkKQ1fu4OV8yzAr4+lUu3wx\/aKWBp6VUIIqvUoumUwyMNBP\/cYf0tx1p9dmFZw6v+TSD\/by81Vd1Pkr5zneownWBfzc31DHr5sbuaE5xAMNdbwR8BGbpIga1ga\/ONp+wxnvnXx++kWPtMtco5YXpcrlpOe5cVav38N75zdz1fuWsm5vH7MbfFy4Yh7zQgF+9FR0xP62lDwU7eDq52P87rVdme1l5slVuPRJSQKJ31mItRA4Gfibt1Yp8mEZ5nuAQwFSZTjw3Lp1K\/F4fOwdp0Dak+PVA2TGzBnMmjVyZV56Si6RSBCPx6jf+MOq8TCNxvFvG+DXF3TwueumM5D0fuX3ROnUNDoDQyVfZqZsFro5ovZLpqgbx\/M2Jm1SSHSn\/zzUMsz3hKORZ8f63piiyTLMGcBZ6ffdBZ5brAUmUhl8ssxtGBmUf+sbbfz8uKXMrg9wzUtRZtcHuPgd8+gZTPH3qBM03uDX8LuC66rntvHUjp5MPag05RKgqRhJt20zc6jI6wUo0VSuXJB+0V2GA89UKsV7Dj+86OdJB1h7kevopZdeHiGastMKDPT3OVNyVehhysfy\/ZL88jOdfOGG6aTsqY+MF\/kD1E2bRqK7m67BAdrH\/krB2Ktr7NVzS76kBdSCUUq+SJy2OF3k9J9jiqbxSMxVQBCcNAPJsmvulUGxczmZLcGM+EmzO57g0W1OnqXb3tjLrW+0AeRMzV19\/P6cvGQ6AA9+bAXLZzWMOPbyGfUjtinKgx6Zk6ztg5ZhzvPOGkU+LMNsJCvzcE8NDzzLqQRV9iq5gYEBlgzcWJVTcvviiP0TfOXknoKI2LrmJpg5E\/+SJcw68CD2X7Y\/B8yYyWJ\/gFKH\/rfpGi8EA\/zFLflyS1MDj9cHifp8JLPuvWFt8ROWYY5ZsX48LoScEZJi8oynMvhkqfdprJwb4tEduUteL3ogwoLGAG90xFnfASfe+kpO0PjlT0X5zxe2Z96v78hdQKALwbELx7yPFB6RwnEzZxWiPA\/4N0+NUgzn40AjQF8VpxmYCH6\/n2QyWVTv+75ICyZnSi5O81v\/yawarUh0zjF9PPNmgMffCE5azApATp9B9rc1nw9aWwm0tjIbaE0kER17GejppSOZoLsQxo8DCezUdXbqOmuGlXxZlEwyy7ZpcPrPRpxM\/dfv63j7FE2WYb4LWA7OPHxciaYpU8xcTmcfMGOEaNrU1c+mLkckSeCRbbkZvrd2D7CV0YvznrSoiVl1anqunOkeEk0An0aJpnKjYgaeN930R5588ikAVq06m5tu+mPO5+9970qAzD759sveZ9WqszPvh5MOWyjGIHIs0vFVAwMD2J0vM6v7TyW3oZz47kd6+MiVfvqTk1tLogGprVvwNU9DtrQg8syqCL8PZs8hOHsOc4HZg4No7e3098ZoTyboLZHzMV3yZYdP5xkCbEranNuXKU51AVMRTWTFMqkA8MJRrFxOpy1t4cqXdrO+szApAjQBlx5WJolHFKPS506b+5xx3oGWYR4ajkZe8douBViGuQw4ApzOutwCwIdzwgkfYOVKR+TMmTOHSy6Zk\/N5Y2MIILNPvv2y95kzJ\/f7w0mnIyi1cJJSIt1Yph5hEGn4MvvHry77pfjFYm6LzfnHx\/iv+5om5W1KARsHBqBtN1rbbmYiaKqrw9fc7IioPMfUAgGYO5c6YD4g+\/uhvYP+eIy9ySTxEomol3waMSEIOVOUR1iGuSwcjWwYbf9xi6Zyb+yVRjGEk08TXHX0Qj78tw0jgrknw+eXz+LQWSqeqRLolTYtQwGNnwCUaCoPMn1obwUMPOfMmUO2zmlsXDrKfrnv8+03hl7KkA5bKHVCYMnQNF2b7xj2xrZzZGh1SW0oJ845pp9bnmhgb+\/Ukl\/aQBuStv4+6O\/Dt3sXM4Wgsa4ebVoLNOcXZqKuDubPox5nKbDsi0N7J\/F4jL2pFP1FElFJ4EWfxtGJjHA\/C\/j30fYfNTLZMszDgaXgJNKrhURspaYYQZFHzA3x45Xzp3yc4+Y38t3Dp34cRWkYNqj5xGj7KUpOjmhS5KfUuZyEEGiaht\/vx+8P4A8E2JR4L5vqLyyZDeVG0Cc597jCp51IArukZENfnMjOHWxe\/wbd69djb92K7O4Z9XuivgGxYD4h02TRQQdhLtyP\/UONzNc0ggWWIy\/6c6TQWaPtB\/v2NGU6XuVlKi6FzuV0\/iGzkMB3n9oxKY\/TCfs1cf37F4+7MrnCe\/qlzJ6iW2oZ5rvC0cjzXttVy7hTc+8EZ\/qir4z7UZ\/Px3PPeX+7pGONipGSYMbMoRqbadHk8\/moqwsipcTn87Gn4VQAlvRdV\/DzVwJnvmeAax4IER\/UirbCMQHslDbEYxCPEdwBM3WNhvoGxPTpiFAo7\/dEKIQIhWjEidiW3T3Irk4643H2TNGHG9E1eoWg0bnv3rmvKbq8osktm6JGSCWk0LmcPnfILA6dUc\/XHt+Ws1puX9T7NL7zrrl8fnkrSi9VHsOm6M4CvH8K1jYVE96wcOFCr03IkE4DUEzSoikQCAASXfdRX99AMFhHu\/YhhBAsjl9bVBvKkfqgzd2\/PpdHXpzJk9bDrF2\/np194yrJNmkGBOywbYj1QqyXOgkzdZ2GhhDMaEHUj0yDAyCamxDNTbRs3cqeeGxKNtg4sU3jmaIbzdP0dmA\/cKbmBtTUXElIB0UWSjgdMTfEo2ccwO0bOrh5fTtP74zn9TwtnRbkjKUtnP+2WWqlXAUzTDR9GPi2h+Yo1MBzUpSq6LkQAl3XCQbr0HUfoYYGGhsb6e\/vZy8fREpZkx6nxq67OfmTf+P0885F0zT27tnDQ3fcwRMPPsTLG95k78Doq60LQb+A7XYKeruht5sGCTN9PupDIeT06U7sUxa9Y4i6mcDMmbOgrg67s5Mtvb0M5nEKvOifmmg6Jf1CpRkoLYXO5eTTBB8zZ\/AxcwaxhM269j7a+pIkbMm0gM4B0+uYHxqZTVxReQxImV0W4CDLMBeHo5HNHptVk1iGOZ8KmZorR9LxnsXOHp49TecPBKivdx7IyWSyZqfqfPF1JHo3IINOHdJZra187MIL+diFTrzXW9u38+Dq1Tz56KO8umkTHYnEvg43ZeIC4qkkdHdBdxeNEmb4\/dSFQtjTp7N3H22rWcKMAw4ANwWC1tjI4s5O1u\/aOWLfPFN088PRyI7h+41DNCkvU6kpVi6nkF\/j8Dn554sV1UFcSpqGYhFOAa7x0Jxa5qT0i1odeO7cuZO2trYJix5N01iwYAHTp08veu3OdNxOeqouFGrE5\/OTLpDnTNXB4rgjnPYGjqZfW5D3WK++9iqRyJsjts9OpZhT5JQKEb+f\/mExSD4dZoQkBy9M8bb9UhMKuRC7\/oY9\/cDMsyibeQsWsOorX2HVV74CwOaNG3n4ttt56vHHeSUapTdVXA9hr4DeZAK6Op2\/fdDa0DAyZ1RLC9N37aRj2L428LpP4\/Ahb9NJwA3DjzlCNFmG2QysBOe2USMkbyiVi1pRXcSlTdNQosuTUKLJK05Ov6jFPrSrq4unnnxy0t\/ftHEjp556KrrPV\/TanUKIrKm6YCZMAgT9\/f20i9MQQsOI\/Yqu+jA9DUflLWL+YPSP3HXfthHbVwwmePvAYFFsBxgQgj837js1zKz6FDf95CTmiwfx2\/sWGgB6x2OkUl9F152UDPsKCl+8dCnnfeNSzvvGpQC8+frr\/H31ap55+mnWbdtO3C598tI0o9k9WtqAdbrg8CHH2cmMRzQBH0hv76uAvCLVjBJOiokyzKvxfsswA+FopHg9tmIElmHqwInp97XoaYrHphaYm0wmGRgcpMFNQ6DrOgJBqsgP4LRgCgaDJJPO09O2U7SLDxHQE\/gDfurr6zNCKxu\/35+3vqhPaARF8eqObvfvu66plJJQoo6ueRfQnfw487p\/w6z++\/d5TH\/vSwwkerF9LROumbr\/wQez\/\/e+x0XuuV976SUevuMOnn3mGV5\/aycDJWwPHfE4M4dv7Osb4WVK87pPQ0K6HMyJlmHq4Wgk56bLJ5rU1FyReMR6BGPxYhYvNsb9nVLN7SuqAxsn\/UCd06E3AkcDD3lqVO1xBDg1Sp04M0Uh0HQNRPGyhw\/3OAH4fH50XWNwMEG8+VzqA4LpdU1omgByRVNDQ0OWl2qIoJ4iVMRi7e2BQN7zppFSsmL\/ZTQ3NzE4WMdb\/kuI9S5nUdcvEaPdnTIJnc8j644f09O0L4QQLD\/sMJYfdhjgLHJ6+dlneeiOO1jz3PNE2nYzWMTn2l4k9RvepH7hIkQwgOzqZOdbO7FHuZxeIdiqCxalJDht+Aggx2WaTzQdl35RiyOkydLW1sa3vvltDjnkEEKhBtaseY7W1lYAWltbiUY3c8ghh7BmzXN85txPE4vF+cPvf09DQ4hQqIHNm6Nc+o1LWH3ras4860x+\/7s\/0NbWljlGPB5j5syZrFnzXOacX7\/ka9z4h5s45thjuP222zP7Xvj5C7nu2uuYNWsWX7\/ka6X\/MRSeEpc2dUOr6MIo0VRqhrxMqD60kBSzdieQ40FKT9Xpuk4ikUDTNILBYMajNFxIBIPBvF4Zv9AIFjGHy85Afg9XNse9\/wNMm9bC4OAAsViMHnEyG\/UZLG3\/wejCqeslUq3HFTTpqKZpHHbkkRx25JGA41Fc89hjPPLXu1jz4gts2NtOqsDzW9uSSdi8cWjDGP8Vr+kai1I5cU2jiybLMGcDJjgFelU17skRi8W59BuXcPff7gEgFGogFosTiw1lW31uzRou\/ueLWX3ramKxOJ8599OZ76ZpbW2lra2NtrY2ABoaQnzmM5\/m2WfXADBr1iwAXl\/3es7722+73dn++uvEYnFCofx5LhTVSX9uuz3KKztqmGPSL9TAs\/CUImwh7XFKCyOfz4cQjufJeZ2nDEieKbv0dm2sJ\/UkiWmCTl3f59GDts2xZ52Jv74eXdexbZtUyqaP97DZ\/jZLOn+c93taz9qixZGl8fl8rHzf+1j5vvcBMDAwwLMPP8zDf72LF15Zy6bOzpIPO\/7h0zhlMCOajh7++XAJmelg+9RU0KQJhRoyHiSANWueIxRqyBEv7z78cK75n2sy+7W2ttLa2ko8HuOa\/7mG4447jkceeQQg81ko1MDyQ5ezbt06pJQ899zzxOMxQqFFmc8BDj74YB599FEOPvhgJZhqkP7cB\/URlmH6wtGICowrAZZh+nAL9EpQOe6KRLGFU1r8pIVTOjQi7WEaTRzlPRZjOjcmzbZxeIGW1NUzbd48bNvOirsS+Hw6cXEcOxNvMjf2pxHf0\/o2kbTtkoaFBINBjjn5ZI452VlH0dfXx+P33MNj997L86++ytaenqK7crboGinA9dWP6D+H\/+LvTb9QjX1itLa28tsbrs\/ZdvE\/X+z8m3d\/+P4Pvj9ie\/a248LHjfgc4Atf\/II7Wkhxyikn593n2OOOHaflimoj\/bAOOp14CCdZrcoOXhrejvObMyBlzfrqQ42NU\/q+3+8nGAjsc59ix3tmC6f08YtVWmSybPWNHsuUZsUBB2TEXvY0nt\/v5OfbY59L0+ArhBLrcr6n9W\/BTiWwbTvvdGQpqK+v54QzzuCEM84AoLe3l0fvuotH7r2Pl9\/4B9unuOAgHwkc4bQkZUOe\/nO4aMq4ovrUXHxZU+y5fUVl049NkEyHehRKNJWKjLe+v4b70ObmZo46+mj27t074e8KIZg3bx76OGNpip3LKW1TObJtHKLpqPe\/HyBnqjEd6J5IDDIwMMj26V\/F3P3PCIaeJ0ImkH07kA0HFMHyydHY2Mipn\/wkp37ykwB0dnTw0B138sSDD\/LS+jfY3T++kmFjsVEXLBkK9crpPzN3pWWYdcC7wBmpFjOiXVEYVEoCxWj0S8m0oX7+KOBq76ypKYZEU433obNnz2b27NklOVexczmVI72aoHOMAPB6KVn5kdMz79PeJr\/fn6k8kUgk6RMmbaHTmR1bnfN92b8TKc2i2F8IWqZP54zPnscZnz0PgLbdu3nottt5\/OGHeGXDRvYOTq7kyyZdg6EA+Zz+M1vKHwr4obbdypPlmaefYe7cuZ6cu5iVwcuBru4uVqxY4bUZFcWwB\/a7vLKjBlmZflHroqnUFLp2Z7mzZZzxTPUzczMVZQe519fXZQbdHdPPZmb8HnSZNeWVaEfKsRNclguts2fz8Ysv4uMXXwTA9m3bBGpU7AAAIABJREFUeHD1ap5+9DHWbt5E1zhLvmzQc651Zfab7F8981QaqGG38mRpnT2bFSsO9dSGRCJRlcLphRde9NqEiiOJzA5mXGoZZmM4Gun11KgqxzLMGbiFzp3fv\/raYrlT6Nqd5cx44pneftBBo37mzFT4CQQCJJNJ+gPT2RM6jTm9t2T20RKjpYGsDBYsXMinv\/pVPv3VrwKwecMGHrx1NU898QSvbd06asmXHiFo1wQzbAmwn2WYM8LRSDuM9DQBamquUkkHRdbKSEuxbwalTb2TiVgAbwOe8daiqmdo4Kn6UM9IBztXu3AaTzzTMSeekHd7dpB7MBhESsnAwACdzR9hdu+tmdgmkeopnMFlwOJlyzj\/29\/ifPf9G6++ykO338EzTz\/FS1u35mSs2j4kmsBp2xbklmB5e\/rFgBohVQwPPPB3enuH3Kk+n2+f2WEVtcNgbjtW85vFZ2jgqfpQT9E0raBJGcuNbk2je4x4pgYpOfy000b9PDu+KRgMUldXh6ibTVdD7ay8PnD5ci7+\/ve4\/q67Rjw3d+QmJM207byepoQaJU2JK6+8ilWrzuZXv7qOtWvXZuJxdu3axZw5c9i1axerVp3NU089BcDSpUtZu\/YVNm7cwPe\/\/32uvfZaQqFGYrFeli5dyq5du4nFegmFGlm16mzuvPNOnnzS+e6KFStYu3Ytl1zydS6\/\/EeZc\/T29nD++efzne\/8C3PmzAHg6qt\/4c0PovCEASmzE8Qo0VR8Mr9xuXnr+\/sH2PDmm16bUXImEu9ZSSJrPFNzyxpC1LW0jLlfWmAGAn4CAT89TSfTEneKCIhU4Zf0lyOvvfYag8M8k9tzg8EzbdsHYBnmfHDq2iWQKqJpimR7flasWMGuXbsyYgZg1aqz2bhxI7t27WLDBudfRzit5c477+SSS77OAw\/8nRNO+AChUCPXXnstF110Ib\/61XXEYr309sZyAqNXrTqb3t4YjY0hLrnkisz+N954E0BmBcvu3btLtppF4T3K01RyyjbE4b3vXTn2TlWKlLLqanduGU8808GjxzOlya63FwgECQaDxJuPILWnBT3VCTXiMX303ntHbBvmacoVTUDm1y23xl6JnHDCBzJen8bGEKFQIytWrCAWc+Jw58yZw9q1a9m1axfLli3NiKfGxhCnn346V155FaFQI2vXXsWKFSvo7Y1x5ZVXsXLlSi6\/\/Ec5HeDSpUv51a+uY8WKQ+ntjfHDH\/6QUKiRK6+8is9\/\/vOZ4ypqj2FteeweVDFpLMMUwHJwHjOqBFX5kJ0Es1riPceTCfyYk\/InPh7O8Gm6ZDJFb+NxTOv6S9EymZcbTz\/22IhtuzUnssv9pd9mGaYIRyMy\/csvTu+oGvvUee97V445stu4cVnm9apVZ+d4jn760ytG\/d5HsnJuDN+W77NrrvnvqhxpKcZG4qzi8jld32zLMBvC0Uh8jK8pJsc83EzgCZWypSxJ57SrdOHUqWn0jlEAuFFKDj\/tQ+M6XjooXNM0dN2Hz6fTHzqCaV1\/mbKtlUAikWDdli0jttvALk2wwAkGD+G08R1p0bQkvWNStfaScMIJH+CEEz5QknNlJ8FUwqm2SErwDfWvi4F1o+6smAqL0y\/UwLN8SSfBrOSVdeNZNbessQn\/BEvZ6LqO3+\/H7w\/Q33wEvLXvQPNq4ZVXXiExipDeOySawGnjI0WTavDVSdpFXa25nBT5SSLJigZfjBJNxWJx+kWyCH3o9ddfz1\/+Uhsj\/0plSx5vRVHOM46pucMOOWRCx8yObfL5fGiBZhJ1JlRAQsup8tg994z6WXuuR28J8OSI6bmkeqBWNdU2t6\/YN8MGQUu9sqMGyPy2iSJ0oZs2bWLTpk2FP7Ci4tjqH0d+plNOmfBx07FNuq6jaTqJhuXUgq\/p6SeeHPWzvWKEaELFNBUIv0\/n2TVrvDZj3KRSKaRdGf\/XM2bO8NqEiiWRm3ZgsXeWVD2L0y+K4WlSKADadY34GN6fJil55z+dOqnj67qe8TalQm9Dt\/dWRPmUyTIwMMA\/tm8b9fO9uZ6mxQA+yzB9wAKAFCqAcbLst2iR1yZMmForcFmLDCsSUHk3aeWwOP1CiSZFsRhPPJPZ3IyvoWHCx86eotN1HTu0P\/S2T8bMimHtyy+T3MczsD2PaNJw8zMBpFRbrynSjUNRvQyrfzZztP0UU2ZB+oVKDqwoFuOKZ1q+fNLHT0\/RaZqGbFhS1V4mgEfvGZmfKZv23OtfAM703JBoUiOkmqNW6jTVKsMGQq0emVELzAQnzYPy3SqKxXg8Tced+k+TPn52MHiSWeBvznigqpFnnho9ngkgLsheSjMTRogmRS2iaRpCCJLJ\/BWfFZWLrTxNpWImjPi9FYqCsVfX6BtDvDRLyYqTT5rU8dPiSNNEZgZCBGdnFtD1DKZ4cXcvL+zuZWvPANt7B9kdT2C7ntW+pE1L0Me8UIB5jQHMlnrePaeRQ2Y24Bsjr5QX9Pf3s37Hjn3uI3B0kevfy4imTF0NNULynlgszj13382ZZ51Z0vNm53JSVA9pz4e7CkaJpiJgGeZM3J94qgPPxgpZnKEYP00FihvdOo6puQOnTUevq5vimZwpumTK5vWeev78RJS7t3Tz6p74pIYEdT6N98xt4sPLZnL6\/jNZOm2q9hWGF194gdQYU+lzUil3ICQANMswZ\/qAzNIkNT03edra2vjWN79Na2srra2tRKObOeXUU3nEeoTjwsfxiPUIp556CrF4nEesR2htdWZK4vEYDQ0h2traCIUaaGtrwzAWe3IN2eUGVC6n6iGFRHMafdAyzBD8\/\/bOO76t67z733svAA5wilMSSVCWIMnUnh6yLXjEjhXveMRNk9TNaOUmcZzVtEmd+TbNm\/G2dWq3aVI3SZ2ksZM4TmI78YI8JGvZGpZsCxoESVGc4iZBrPv+cQESALFIXizyfD8ffgRcnHvugXDPub\/znOc8D\/MjC2f6mBhDZ6t5lns8HM4zzrY9gizBoMISnSaiySTp3bh2TcIy8ZAkic5RN\/\/+RhuPHDlLha+XI542UBSYYVIVl9fPS20DvNQ2wGd2nWZ9lZmPb1jE3SurKTRkLqjBS3HiMwWp9\/i0Pj351ReEOYKLSc7s6e7uprHRwsjIKE1NTYyOjtDYaMFsLmS7bTuPP\/Y43d3dEyJp5707Abj9jtupqqrigS8\/kOFvoEXNnatr2PORiH4trE36o5tfaJ3Xx+Zx96wbJMg8EnDNmAuzDg9WlST9mW64YcbXcA6Oc88zJ1jyw\/1847UWzg67GfAXzLi+WBzqHuEjf3JQ94O9fPHVZgbGM7O6sW\/v3oRlGrzeKZtpDMCErUxYmmbHli2b2XnvTv7yng9jNhdy\/PhxqqqqaG520tzsZGRkFLO5kOt37NCEU1c3Dz\/0MIWFZhobLTz91FN859vfpbHRkumvMpFuQIQkyH0ifsHp5VYQJIMufqF+SaK3tASrJFNqkGkzGHDp0DhB+jGrKo0eH6VmA+fzvCwYGppVfT2KjCvBRLZMVWmaQWqu\/nEvX9nTwkOH2rV0ImmynvS5vPzj3lZ+cKSDBy5u4K\/XLcSYJt+nsbExTnV0xC0jA4t8fnxSmFitMAD6S8l5SFVV1YTV6L8e+dHE8R07rg\/798HvPxizjmywMoUSdAYUwim3UcNTqZgy2JS5ysR62kwi3blMJpzVVbRUV+M2GjAYDDQ0NNCUpG9K29mzDAwMxC2zsLaWBQuSCxLb199PewIH2aKiIixJxqbzeDyccDgSlmu68MKkLdynTp\/G5YovKRsaGihOMv9aV8D6H48FCxawsLY2qfpGRkc509o6sSvZ7HJh6eyivrsHwwx2Kiflz1S+AMU0ve79h9Pn+dhzDtqHQ6ybkhRInyLR6ytJeSqVnjEPn3zxFP95tINHrlvOpprUz+sO7t+f0J+p1uvDoKqoUlg5owHIC74TdiZBJIqiIEmSCEmQw0T06\/mQGSHdzGji2VdcRHNNDecWlKMGHkyKolBXV4fBYMCThC9MT09PQsFUWFhIcUlJUvWhqvT09CQsVlhQkFx9gGt8PLlyLhcGY3L+XGazOaFo6urqIj9J4VleVsbg4CDjcdp6\/vx5FEWhvLw8YX0mk4m6ujra2trw+XyM5Odz3NLAibo66np6aOzoxJyg\/aEkszS3af36pOsb8fj4xAuneORYZ+xCksSwPx\/SFMrvaM8IF\/\/8EN\/Y1sjnt9TN0IMqOZLyZ\/JGfeYVGAiZggrRNHP27t3LwtqFmW5GyvD7\/fj9\/ow4iPcP9LN27dq0X3eOUpLpBsxBJiaeiWyyflmifUEFzbU1DJi1qM1Go5ElS5ZgaWhIKtisz+fj5MmTNDudcftjfn4+69etw2w2J\/UlXOPj7N+\/H7c7vk9VZUUFa9Yk73CcyGoVpKCggNokLTn1dXW8\/sYb9PX1xSzjcrlwOp1s3bIFUxIWmPr6eoaGhjh85EhM8RT0R62rq2PZsmUocvw5yLKlS\/H7\/Zw9e5Yzzc148NBcU01zTTVVAwM0dnRS1T8QVyCoJOcEvv3GGxOWAWgedHHjE8d5syfafpBASyRZm15NWJnSs2zm9at84eUz7OsY4qfXr0iZo\/i+ffsSlmkITAoi+nSeAShNQZvmHVVV1axZM\/NIrLmAqqoZ2Vn3+utvpPV6cw2xuJpyEj5RXCYTzppqWqqqcBu1pRaj0UhBQQFGo5H+vj764wiAIKOjo4y73Xg8nrjl8vLyKC4upqW1Nakv4Pf7GRgYSCiYgstnb739dlL1AgwNDiZVrqW1lb7+\/qTrDcaXizcejY+Pc\/D11ykpKZkI5JuI4uLiiXNj0dbWRm9vL4WFheTl5cUsF0p5eTnDQ0O4PR68Xi\/dpaV0l5Zido1j6eyMuXTXpSi4EyyRLVBVVl51ZcI2vNE1zLt\/\/SZdo\/HvH2QZ1BABlWZ+7eihZdDFU7etpqpA392kIyMjnEmwFKsAtdFXV+SwhVIxuAriERrLSYQkyFmSMzsIpsPExDPSh\/Z8cTHNtdV0lE8uwcmyTH19PY0WC4YkfFUAvF4vJxwOhkcSR4tYtmwZK5YvT9o\/SFVV9u3bx9jYWMKy9XV107b67t+\/n6Hh4YTlzIWFbNywYVp1Hz58mNa22AlXQROaZrOZTRs3Tuv\/5J0TJzh58mTMMmNjY4yNjVFbW8uqpiYKCpJbpfX5fDQ3N3Pq9Gncbjcj+XkctzTwTn0ddd09NHZ2URTyWySzNLeysgo5wb2099wQ1\/7qKIPuBK4WUiAMthwMh52ZndQHOoe56rGjvHDHGl2F0\/69eycCcsZiodeHIVAkIuRASXI9ViAIEIzl5PF4hHDKTUQQoBSiAn5Z5mzFAppraxgMSZxqMpmorq5GAvw+H6dPn55W3QZFob6uLmG5cZeLI0eOTKvu\/Pz8pOpWVZXDhw9Pq26TyZRU3cC06waSrnu6\/yfTqfvEiRPTrrumuhoVbclvfHwcnyzjrKnGWVNN5cAgjZ2dVPf1J7U0tzmB2DzUPZKcYAoSFEoZjjzzZs8IVz12lFfuWktpnj5y5aWnEvsz1YX4M0U+5cJaISLz6MO\/\/\/t\/0NnZRU1NNZ2dXQATr6d7bLrlv\/zlf0jLdwwGwRQ763KO2e19FsSlq7yUl5ZYcEfM+isqKrA0NCCLBNmCCKqrqmhtawvbvddTWkJPaQkFLhctzuaEdcTzZ2obGuc9v3kzecGUZbzZM8KtT77FM7etxqTMXqUcOHggYZmGOJscDMDEwq0QTfpw6aWXZEw0pZPgUp0QTtlNRL\/OzZEzR+gvLp4imAB6e3vp7e3NQIsEuUyfqibssJUqWLdfEfWzcZ+fW588Hh5SIAd5sbWfz+w6zYNXLZ1VPcPDwzQn2B1qULVwA0EidZEBSLyQLZgW82mnVzAIpghJkL1EdPrcHj2zkwlPZ6m3F89oYv8dgSAZhvyJx9WV1VVIMSyYn3\/pDAc658b9+P1D7VzVUMaty2ae1OC13bsTRglY5POFRVmIiLc5GDYlEgFcBDMhGMtJJPvNCUYz3YA5yISptc\/n44xH6FJB+tiyaXPU48+19POvbyQX7iFX2PncSa6oK6Eif2aumcn5M8V9jvkNQPJ7PAWCGMiyPGF1Eg7i2YUsFt5TzYRKKoxXag6xceMmbDZbxq6\/Z88e9uzZnbHrZxO2m2+acmzc5+djzyaOwp5rdI66ue\/F0\/zP9StmdP7BN15PWCYyqGWEMckd9l4MrYLZEBROItlvdhHxa8QPHy2YCcJ6J8gI1SosueSSKce\/f6idMwNzM3Pho2918dq56e9nGRgYoPX8+bhljKoa5s8UhVEDMOGdqAjZNGN6urs5duxYppuRFaiqqqvFaWxMPJNmQ8SafOJAP4LpMhEp0DhPjKxvvnmUkyczZ8mIF3hyPrGytnaKP1P\/uJf\/szd2UNNFRSYGxn2MeHLXD\/ULL5\/Bfuf0fIdfe\/XVpPyZIt2UpHBd5A0XTRIil8oM2XrR1kw3IevQKwhmXX29Dq2Zv0S4iIotXPozMX2t8ftZ6pkHvn0eL4yIyUwqaTcojCWw2l+0dcuUY989cJY+V+x78FuXL+GuFVXsPTeEva2fF1oG2N0+yLgvd3ZB72ob4E\/OPq61JM4DGCQZf6Zo+eYix09haRKkDBE9PDsI8Wk6b3M6fOLX0J2JMbTO6+cmt7CCCGaHV4KHS4rjlpGA7TffHHbM7VP5wdFzcc+z1ZVilCUuW1zCZYtL+NJF4PL6ee3cEM+39PNiaz+72wez3n7yr2+0T0s0HTx8KGGZ+ijWtwhd1CsT0uHF7jmB3ggfp8wiE+bTJKxMqWFyDBW3ukAHOhQFb4J7qQZo2BJuafrlie64eeWWlOazuHhqrrx8g4ytvpSvb7Pwm5ubJgTTlfVlbK4pysr7+qnT52keTM5vq6+vj7MJ8hqaVJWaKKFzIr57rwxMRHoSliZBKjAYDEknyxToS+QsKVPtmMvYnI5eAmEHRLxvgR60JpGT8MKFi5AixtUfvdkR95wzAy5q\/\/01\/u6V5phldrVO7hX5v1csYf\/7N3D+3kv43S2ruG\/jYtZVmbNCKajAD4\/G\/75B9rz8csIyi72+qN8rpE+rNqcjXDRlo5oUzA0URUERKSTSTkTWASGaUsd5EOEdBPqQTJLeiy+6KOz9eZeXl9oSb47tGvXwxMmpQ8Gr7YM0D7qwB+ooMSlsqNbye5fmGbjhggX8s+0CDn1gI107L2ZxkQkAJYMrCb+J8j2isevpmfkzQVif7gUw2JyOYbvFOgKYDaLDC2bA+fPnaW1pwZtEVPDgzrpkyDOZaFyyBLPZPNsmzlsiLE3xnR0Es6EXqJTQlkRzx6VWkG14JTiXQDRJwPZbbw079vvT5\/En6YjUOzZ1Ce+hQ+f42dtdE8aTpWUFdI96qDWbppT1q3A2kJrlL1bV8I1tFl5sHeD5ln7sbf2c6k9PuIPjvaOcHnBxQWl+3HKvJ5GsuS6KaIrm3hC0ATYDqyTAgIQ3613ABNlCX18fL+3aNS1nb1VV8fv9SZ3jdDq5+ppryMubug4vSIwxXDSdyVQ75gFngRUABknCLTY\/CGZIu6IkzDe3EInFG9aHHXumOX4MolB6XR5UwmO4VRZociAovN7oGqbuB\/t4+55NLCsrCDv\/hdZJ\/6Ar60upNZu4e2UVd6+sAqBlaJwXWvqxtw7w21O99I+nbkfpU2fO8\/H1i2J+3tPTQ8fgYMzPAfJVleook3lDuBWtHSZF0xlglVYIvKK\/C5KkrbV12rvjJElCUZSkYjm53W66urqoF2EHZoQh3HjcnJlWzAsmBKkRCbeYeApmSFsS\/kxNdYshYllsf0fyOeb8qmZtqiyYTEdSVTg1Ncn9mxaHCaYnT\/XyD7udYRatqxvKppzXUJzHX6yq4S9W1bDykQP8y5VLGff5NUtU6wCdo\/qlGtrXET\/Q5e6XXkpYRyx\/pohJ52kIF00ThVyiwwuSxO2JvVMjEckKJ9UvFjtmSkSnb85QM+YDzcEXws1BMBtak\/BnuuSSS8PeD4x7Odk\/Nq3r9Lq8YaIpMp9bQ3EeX7mkIexYZYGRI93h8XFveOIYH2qq4RMbplp72obGaR4c587lleQbZD66phaAY72jvNiqCagXWvvjxpVKxMEECYlfSsKfKdrSHEzpy83asZA3UQoJkuTokSMUFU\/G1eju7mFrlMBj02VkZJSnn3qK2++4fdZ1ZSPJCifBzIgwL4vludTRHHxhFEGCBTPEK0l0JBBNMnD5rbeEHXu9K3krU5DeMQ+UT1qRKgrCLVwPXrUUszG8LRUFU61RBzuH+ca2xrBj\/\/tON5UFRs4MuLh4YTH5hvBdfqsqCllVUcjH1y\/Cr8KRnhFebOnnj84+Xmztxz2NaHJvnx\/F5fVPuUaQN958M2Ed9TGS9BqjWOqniCajJIkOPwOKiotZv27dxPvQlCrd3d387ee\/QFVVFbffcTs\/+fGPuf322\/nxj39CVVUVo6MjXL9jB7vsu6iqqsJsLmT\/\/gOYzYVcv2MHTz31NPv3H2C7bftEmePHj\/PZz32GqqoqvvbVr\/Hg9x\/kEx\/\/BBZLI93d3ey8dyeNjZZM\/FdMG0VR8Pv9+IVFSXdCLE3jNqdDOIKnjubgCzHxFMyUNoOScBPBIkli4Zo1Ycdah6a\/3NUd4Qweamm6eWkFNy2tmHJOZcHUpcP3raji3Y2TQSb3dQzxZ0+9PbGEt6Q0n6+91sI1DWVcuqhkyvmyBOurzKyvMnP\/psUMjHt55Fgn39zXGjfmVBC\/Cm3D41P8rgA6OzvpGo4vKAtUlcoY0dCjWZqC0uxU8KhRdPiUYTYX8vhjjzMyMsr+\/QdoamqiqqqKnffu5Pix4wAcP36ckUB6guDxpqYmPvu5z9Dd3T1RpqmpiaamJgAKC8385T0fprDQzPHjWj27du3KwDecObIsi1hOOmMIz5p0KnZJgQ40B1+IMVQwU5IJNbCqvmHKsfbh6Ueh744QJNUBn6Yio8KDVy2Nek5FvjEsNFF5voF\/uXKyrMev8pE\/OcJ8ns4MuPjybicfeza5XIWleQY+tXExRz+4Kaq\/VDQ6RqKLq91JPAfrYvgzQXT3huBT6i3AC2AS0ZtTwpYtm2lqamK7bTuNjRZuv+N2zOZCzOZCCgvNOJ3NmM2FNDU1YTYXUlVVRWGhGbO5kOPHj\/Odb3+XLVs2h5UJ0tho4Vv\/959obLRMfLZ9+\/YMftuZIcuyiOWkIxF9ObGNWjAbzgKjELDWCwQzIBl\/pou3bZty7NzI9C1NPTEsTV+91EJ9lKjhQUL9oL5zxQUTYgvguwfaONoTPSd4NAF0sHOYG544xvcPtdM+HP4dqguN\/OHWVWyqKUr4XdpiiMZdzzyT8NxY\/kwQ1pdHCd09Z3M63HaL9R1glYwIOzATurt7wpbkzpxpnkg0G7QmBdmx43qAsGMPfv\/BqPXuvHcnO0PeP\/DlB8I+D607tL5cJXRnnWB25IXPkhIHKhHMGJvTodot1mPAFglthuoRY6hgGngkic4Ek0aFqfGZAEY803dt6I1wvl6Qb2BdlZlPhjh0R\/MVqsg30jXqwVZfyj2rayaOn+wf46uvtcS83pX1U0XT083n+cNp7e9++2l+eK2VDzVN1pmnyDx41VIu\/fnhuN\/F5Y3+\/Q+FPJNjEdOfKdxSf8zmdPghPN3cxKCaJ2ZK02br1i3U1ddP\/F1+xeWZblLOEhROImfd7IiwNAnRlHrEGCqYMa0GJaHMXizJVF24csrxItP0LfSRlqZ8g8xP3r0CQ8j62332qav6VYVG8hSZ\/7jGOiEqVOCvnjsZU7xIwBV1pVOO20NStnj9Kp\/bNXWvyiULS6L6KyWivb2d3tHRuGUKVZWKGP5MEX34aPCFHO2gSazJC5IkzzQ1WqwehAonWSzZzQhTjE4vSBmTY6gQTYJpkow\/0+rGRt2uF83Jem3VZPaF\/32nmx8f65pSpqrAyBcvqmd5yM67\/z7WyQstsRPirq0ysyA\/3Inc7VPZ3R4edLJ7zMOIZ+oqw6qKwinHErH7xRcTlomVOgViTzqjWppEhxcki8ViSakfUlFREbW1tSmrf64iETb5GbQ5Hc2Za828YXIMFRNPwTRJKt\/cZVP9mQBMM0gc2+uKvTOtf9zLfS+eZtznZzhCxGyvK+ULWyeDDXeNevjsrtNxr3VVFH+mfR1DjEVYpiwleVPCHAC4E+ysrowSCmHXH\/8Y9xyAuhhLczClD0\/07VDpN7FoKEzLgmQpLinh6quv5uzZs\/h0DhlgNBppaGjAZDLh9XpFLKdpEMu0LEgpYuIpmBHjkkRXgsmnQYXt731v1M+i5YdLRO9YbMHwty+fmYja3THiDlse+\/iGRWFy4n77ac4nCE55VRR\/puejWKa+dmlj1POP9cRfZov2\/Q+99XbccyC+E3gsS\/2EaLI5HW12i7UNqDMiCWdwQdKYi4pYvmJFSq9hMBiEcJoG+WFGZHZnqh3zCZvT0Wu3WNuBRUYkFEiYQ0wgAM3KlGhkq1cUFiyNHgpgUdH0RVNXjFQmr5wd5AdHOibe9455WRaieUKlxDPNffzs7alLeKHIEly+eGp8ps9tqWN7XSlHekYYcvvYtqgEW\/1Uv6dD3SO0DMUPqbA44vu3tLTQ74ofId3sV1kQw59JISzcQLvN6egJvomMVPUqcBdAviQxLB5QgizCYDDg8\/lEEMwkyA+fJb2aqXbMQ14F7gDIl2RGVHGvChKTTKiB1UuWxPxsJo7Sg24fHr+KMWRpb9znnxJPKdJhPMiIx8dfP5c49tKG6iJK86YGxSw0yNjqS6MKpVC+9Gpz3M+LjAo1heGiKTl\/ptjWsXwpbNIZNn5GRhOc+DBfmJcFWYiiKCIIZhJE9F9haUofYgwVTJtkkvRefPkVMT9bU1kYtustWZoHXGHvv7W\/jbfOhy+FdcaIyv0Pu504BxMH1YwGZTuOAAAgAElEQVQWaiBZvrG3hT+cPh+3zIbqIiK\/+kt\/ejZh3fGcwONNOqNZmrSTkBHGZUE2EtxVJ2I5RUdbGpro9CdsTkd3Jtszz5gQqGIMFSSDS5LoVuJPBI2qyvbbo\/szgRbPaE2lmTemmYNuxSMHWFtl5uqGMtZWmfnHva1TykSmWwE40DnMv7x+NqlrRAtq+d2DbexpH+LqhjIuXljMmkpzmOh7s2eEb+xt5X\/fSTx0ba6dGvzy8Duz82eKcG\/YE\/omUjQdBkYAc54kIUPCPDgCQSaQZRlJkkQspyhEzJJeyVQ75ilvAGNAQZ6kBccTTg6CeCSza67BYKTUMjV9SijbFpVMWzSpwOHuEQ53R4\/iDVOX57x+lY89G54qJRaKJHFZFH+m3zh6ebV9kF8FXIWMskRDSR5FRoVzI+6kcs4FuWRheP1nzpxhcDy+BazIr1IWw81DImwjzRjweujnYaLJ5nT47BbrHuAa0Nb1RsWafBgF+fk4m52ZboYgQEVFBZIkCQfxEArC1+OFaEojNqfDa7dY9wK24ODrEvemIA4tSSzNrYnhAB7KTUsX8P1D7Xo0KYxfvtON2Shjq9OsQg8eak8ozp69fQ39Li9nBl0URYQQGPX62dcxFHbM41c51R++VJgMJkXiupBkwQCvPv98wvMa4vgzBSc7AfbanI6wwtF+rT8SEE2FksSo6O9hrF27JnEhQVpRVVXsrAuhMFw0JV7cF+jNK4ANtN\/CpYolOkFskrE0XZJELtHtdWUUmxSG3Preby1D43x1TwtfpYV8g4w\/wThbnm\/gqvqyKX5GQQ50DOFJxkyVBLa6MkoioqG\/8lxi0RRvaa4wwaQz2kLqRESoiJMFgqxEkiSMRqNwEEebJYUMIW\/anI62zLVm3vKn4IuCqEOsQKAxJkn0JvBnMqkqV8TxZ5oop0jcuqxCr6ZFxeX14\/bFFzxXLC6NKZhAS6fS+tGtPHLdcuriJAZOhtuXV4a9V1WVw44TCc+L5wQe0Wf\/FPn5lF\/L5nQcRcvYjREpNFaBQJDVGAyGeS+cCsO7dOKQuIJUsAcYAM2\/TCQBEsQimVADFlMeRYsWJSwHsHNdcuVSyetdw3zKfponTvbSPx59GayuOI8PNFVHTZmSLCUmhT9bWRV27NSpUwy7o8efmjjP76ckhj+TQphP6AARTuAQ3dIE8EzwhbA2CXIJg8GQ0rQu2U5Ef30qU+2YzwR8IJ4Lvi8QY6ggBq3GxP5Ma5PwZwpy8cJi1ofkj8sErUPj\/MvrZ7n1yeNUPLSHzY++wWd3neGZ5r6wlCxvdI3QlyCSeDzuWV07JeXKK88+F6P0JA3xrEzhffW5SH8miO7TBNpg+2HQ\/JoGhKuIIIcIiqb5FpJAJmyWNIxwAs8kTwHvBU3IDosNNYIoJGNp2nb1VdOq8wtb63nfHxJvuU8HfhUOdg5zsHOY7x5sQ5EkttYWc1VDacz4T8mgSBKfWD\/Vqvbqiy8kPHca\/kxPRysTSzQ9B3gBQ4Eki9ADgpwjGMvJG2eXxFyjKLzDP29zOuLbqQWpZMIXolCExRBEYUSW6EvgTpCvqlx6223TqvfOFVX8075WDsUJI5ApfKrKnnOD7Dk3OKt6\/mptLUvL8sOO+f1+jpw8mfDceJHAI\/pqVPeGqL+YzekYDJ4gAWZhXhbkILIsYzAY500sp4h++qtMtUOg5fIkkMBXQRLRwQVTSCYKeGNePubq6mnVKwHfuiJ2ypVcx2xUeOCSqTGrTpw4wagnvvWqzO+nKMbOPc3\/cKKfHom1iSaeGvrf4IsiIZoEOYosSxgMhjkvnGTC1uNdwG8z1xpBgMeDL8QYKoikJYmlubVW64zqvtZSzh0RO8vmCl++pGFKrjmAV56dXeqUiD76eKxy8aTuk4AbMOmxRNfZ2cl11103ixoEgrmJHkuIRZIcus\/1qYC1WJBZHgO+Btrv0yNSqghCSCY+07Zrrplx\/f929TJebB2ImXA3F9lcU8T9GxdH\/WyP3Z7w\/HhLcxGi6bFY5WKKJpvTMWC3WP8I3CgFKhychTOjz+ejvV3\/aKUCgSD5Di9IHzan4227xXoYWKcgUSDJjAmHcAEwLEv0J+HPdPEtN8\/4GlUFRv7jmmW893dvzbiObMJsVHh0x8qoiYn9fj9HTp9OWEcsJ\/ACSY5cmovpSZ\/IZvyz4AthXhYIspPgAzmAC\/h9BpsjCOcXwRdiDBUEaU3Cn+mC\/AIKK2e3xHabtZL7N0W3zOQa\/33dcpaXF0T97K233sKVwGJf7vdjjuHPFNE3fx6vnkS9+PfAKGhKTAS6FAiyj5LwDv+EzemYXtZOQSqZsPqZw5dQBfOYZPyZ1q1Yocu1vn3FEq5fUp64YBbz1UstU6J\/h\/Lyn6YE7p5CQ4xAmlE2u8W11McVTYHBd8IhvHieR1sWCLKRiH75X5lqh2AqNqfjFHAAtGjDYieyAJLzZ7rs2mt1uZYiSTx+YxMXLyzWpb50s3PdQh64eOpuuVD27HopYT2x\/JnMkhwatf9AoM\/GJJke\/MPgixIxUxIIsooIC\/AZIHG2SkG6+c\/gixIhmuY9g7LMYAIDRIGqsvXmm3S7ZqFB5pnbVrO1NreE01+vXci\/Xb0sbhmfz8ex5jMJ64rlz1Qc3if\/M2qhEBL2YJvTsRt4EzTfCZFWRSDIHiIewj+yOR3C0zj7+AUhbg4GMfWc1yQTBXxZoZn8sjJdr1uaZ+DFO9fyngsW6Fpvqnjg4gYevmZZwt5y7NgxxhNkf6jw+SlQp\/ozGcI1zSghPoixSFYB\/Sj4QsyUBILsIGK5xwc8krnWCGIRCP8wMRiXCDeHeU0yomndhStTcu1Cg8xvb27iM5vqUlK\/HhQaZB7dsYKvXmpJqvzLzzyTsEyspbmIvviLZEK1JNt7fwKMg5abRTiECwSZp0RSQnvi721Oh4jpkb1MTDyLxcRzXpPMzrnLr01dTENFkvjO9iU8cXMTC\/ITtyWdbKopYv\/7N\/BnK5OPgr7n5cQpNmMl6Y3oiz+KWiiCpHqvzek4T8hMqVTMlASCjCIxpR\/+e4aaIkiCgJvDMdCWBET4gflJvywzHCXOUChmVWWLjv5Msbh5aQXHPrSJu1ZUpfxaiTApEt\/Y1shrd6+nqaIw6fM8Hg9vtTgTllscRTQVhS+VHw\/00YRMp+d+N\/iiRFJIbGAUCASpoig8GNubxEguKcgqHg6+KJXECDofSWbX3LKiYoxFRWloDdSaTfziPSt5+a51GdldJwF\/trKa4x\/azBcvqo8auDIeR48exe2P78ZZ5fOTH8WfKaIPPpTsNZMWTTan4yiBzN0SmnASCASZoSy8\/33H5nREj9omyCYeAc6DlhxUJPGdfyTjz7ShqSkNLQnnssUl7L57Pb+9uYkr6\/V1QI+GUZZ434oqXv\/ARh7dsYKlZfkzqicZf6a6KP5MEf3vPNPwB53uguZ3gGtBWxqIpt4EAkFqqVYlTJMd\/hwJItgKsgOb0zFqt1gfBr4ImvDtUGefd1CQO7QYk\/BnendmcrRKwE1LK7hpaQXHekf5wZFz\/OZkL61D47pdY02lmbtWVPHRNbVUFxpnXd9rr76asEw0f6aISefDNqdjNNlrTnuqE8iltBZgj0Hi0YKp2YYFAkHq+MchFyWTXffvbE7HP03nfFVMdnRFmobFyG6x1gJOwATQ4vPgQfwe84HzisyPi81xyxSpKi\/v24ehMHm\/nlTzetcwvz99nr3nhjjYOUznqDvpc5eU5rOppohti0q4eWkFS0pnZlGKxvj4OJds3YonzvKcBOwcGCYvZMwzItGgTAg2N2CxOR0dyV53Jq7z3wZ+CrDBq\/ILELm7BYI0scrrCxVMIwgH8JzC5nR02C3W\/wH+EqBMVuj2C2vTfCAZf6blJSVZJZgANlYXsbF60seqfdiNc8jF2SE3XWMe3L5J0ZJvkFlkNrHQbGJZWQHlKdydd+Tw4biCCaDa5wsTTKD1uRD+ZzqCCWYmmn4BfAVYmg\/Y3D6eNwn\/JoEgHdzqCnvAPmhzOvoz1RbBjPkecA8gFUsyfUh4hbVpzpNMqIENq1enoSWzY1GRiUVFJliY2Xa89HQy\/kzhJh0DUmiYARX4f9O97rT3vdqcDi\/wQPD9jnEvs1+ZFAgEiVjv9VE7+WwdAL6VudYIZorN6TgG\/BK05YNyWUw65wPJOIFfcf2ONLRkbrBvz56EZSL9mcrlsNh2v7Q5HW9O97ozDRbyC+AtgDzg7mmscQoEguljUOGuMU\/ooX8WVqac5mtoM11KRMDgOU+vIjOWwPetRFVZd\/2709Si3GZ8fJwT7WfjlpEIj89kRArNaKKi9cFpMyPRFMhv9eXg+00+P9eMjWMUDqYCge4s8PnZOTxK8eSDtRdtiUeQo9icjuPA\/wbfC2vT3CaZpbnlpWUo+fo5Ss9lXj94EG8CvVHj84Vpkog+9stAH5w2s\/HSehw4BKxXkLjUD4vcXt4xGjirKAzJMl4xeRIIZkS+qlLmV7nA4+UCj5dGSSHE7eU7yeRIEmQ9\/wDcAShB3yaxk25ukowT+Ka1a9PQkrnBS08\/nbBMfYSVqTg8T+eXZnrtGYsmm9Oh2i3WvweeAqhA4qkVKxjMM1EIZJf\/v0CQmziB8s5u8lon0sq1Aw9mrkUCvbA5HScDO+k+BFAhK3SInXRzDpUk\/Zl2CH+mZNm3d2\/CMvWeSdFUMXXH3MmZXntW+wFtTsfTdov1aeB6xa+yvbObtpveQ3GxfuHYXS4Xb739NkNDQzOuQ5Ikli9fTk118kkAk+GdEyfo7OycVR0VFRWs0jkCbG9vL8eOz8jyGMZl27Yh65hn0Of3s2\/fPjweT+LCcVi5ciXVVfrlS1JVFcfJk3R0TGvn6RRqamqwLlum6\/9Zf9tZLjoU5qv4BZvTMaLbBQSZ5ivAXUC+WZIpkGTG1PjbqAW5RY8i40rgz1Smqqy67to0tSi3cblcnEowVsvAYp8mmgokGfOklcmF1udmjB5BFO4H3gUYlnT1kOf14SopmXWlqqpyprmZEydO4I0SBj1Z8vLy2LhhAxUVFbNuUyhnzpyZtWCSJIlVTU2U6PD\/FUpvb68u9ciyrHvbli9fzrFjx2ZVh8PhoGLBAsrLy3VqFWzetIkzZ87w1ttv408Q+yMWnZ2dDA0NsXrVKqp1EugXnNlN3qSZeS\/wP7pULMgKbE5Hs91i\/R7w9wCVkkKb6heLdHOIpPyZyhegmESg6GQ4sG8fvgT+TLVeHwZVRULrUyF8z+Z0NM\/m+rMWTTan4x27xfp94FMA+b96gmc3b0CdpT+Tx+NhbGxsts1DkiRdrC6RDA7O3qVEkiQOHT6sQ2vCGXe5dKnnwMGDGJLo8NNBj2jUPp+Pvfv2UZiCIHCKosxYNAGMjo6yb\/9+ioqKZm1xKh8e4aaDb4Qeuk\/kmJuTfBMtbtNCk6T5XgwKa9OcIRl\/ps3r16ehJXOD6fgzFUtyZMqpb872+no9Eb8K\/DlQuWBomCs8Xs6tnv6Sk9frxeFwMDIy+9WHurq6lDxU+\/r66O7unnU9iqKw9IILIAVJO1taWnSpx2g0UlNTo0tdoVRVVnL6zJlZ1eH1ehkcHMza33l4eBgAk8lEQ0PDtAWUpKpsPWpHmhSZP7U5HYkX8gU5h83pGA74hz4CsEA2MOxzI2RT7qOSnGjafsMNqW\/MHGH\/vv0Jy9R7vchofSmEv7c5HcOzvb4uosnmdPTbLdYvEUjpYNl3EGXzJrylyS\/ttLe389ZbbzE+PrvkgAaDgXVr17Jwof7hSoeGhjh9+rQudS294AKWL1+uS12ROJ1OXeoxGo0st1p1qSuSsbExzs3Shwg0cdN04YWYUmDaPnXqFG+\/886srGNut5tz586xetUqqqbhh1Wy\/yDl3T3Bt0PA3824EYJc4CfAx4FNClAhG0R6lTlAl6IwnmBivEBVWXnVlWlqUW4zOjrK6e6uuGUUYKHPR4VsIESuHkTrY7NGNzOH3WKVgF3A5QDnqit5eeumpM51uVz09+sTp6+6qgpzUVHigjPg3LlzuHRa+mpoaEBR9I\/Noqoqzc3NutRlNBqpq6vTpa5IxsbGZu14HaS4uJjKykpd6oqkr69Pv3uzuhqzOX7CToCC0TFsf3wew6Qv39\/YnI6HdGkEImGv3kwnYW887BbrJcCrBMbldr+HMfFb5TQH80y8VJAXt0wpcOP27Vx5441sfte7dN1IMtewv\/ACn7jvvrhl6rw+PjgyxiJ5IleJCmyzOR2JQ4gnga5rQ3aLdQVwGC1QOAc2b6C1blHUsj6fj3MdHboN4GVlZSkRIaD5V+nhwxREtFXD7XbPaldkJOVlZci50tby8piDo+31IyyetDK9ClwRCCirC0I06YteognAbrH+G3AvgAeVVp+I3JTLPGEu4Iwx+QWdfGB5RSVbNm7EdvNNrLviCl3vr1zna5\/9HI\/9MX7OuW0uN7d7\/KFR9h+yOR1\/o1cbdP81Amvz\/wfAV1hI2998DF+Ez0lnVxfHjh1jdHR01teTZZnVq1fTUF8\/67qi4fP5eG3vXvr6+nSpr7SkhMsvv1yXuqLR2trK4SNHdKvvkosv1n3nYRCfz8eLdrtu1rva2lo2bdyYskHGcfIkJ06c0EV0FBUVsXrVqikWsqI3j1P9qyeCb93AOpvT8fasLxiCEE36orNoKgGOAXUAfaqP835f\/JMEWYkfeLi0CPcs7g+zJLGiupqtm7dw9W23sXLrFv0amIPcdOVVnOmJ72v6uSEXlklp0was0jMYcCpEkxFt\/XANQJelnqPbL5v4vKe3d9Zb9YNIksSFF15Iqc7b4kM5ffo0nV3x11Cnw\/Lly6lYsEC3+iJpaW3l7Nn4OXmmw5IlS6hNgTN4kHMdHbotJwLU19dTt3ixbvVF0tPbi8Ph0K2+hQsX0mixAGAcGWH1zx\/HMCkiv2xzOmaUHykeQjTpi94i3W6x3gT8FgKOxH4PbvGb5RznDAq\/KNJ3k0qxJNO0aCEXbb2Iq25\/L0vnURTx4eFhLr3kkriW13qfyudH3aHC5mab0\/Gknu1IyZTcbrFuBl5D88ni+cZ6jlWmTigIBHOBW0+cpn5wYgnwKLDJ5nTMLhJoFIRo0pdUWDbtFutjwO0AblWlzS+W6XKN\/fkmXsmP7880W8oVhabFdVx86aW86647WbxsWUqvl0mef\/ZZPvXpT8f83AD8\/Yibav9ET3nc5nTcoXc7UrZYGthN93UAv9FIy0c+hDuFFhaBIJcpf20fVc\/bg2\/Hgc02p+PN2GfMHCGa9CVFoqkWbZluAUC\/6qNXLNPlFL8uKsCpc5y7RFQaDKyxWLj4ssu4+q67qEmR20omeOBT9\/Ob55+L+fmt416udk\/0kfNoy3L67DYKIZWiSUHbTbcNYHzRQto\/\/CFUsTNAIAjD1NnF4v98BMk30eHvszkd\/5qq6wnRpC+p8qGzW6y3Ab8Kvm\/3e0WKlRzBh+bP5MmwE\/dCk4nVjUu41GbjmrvupEznVGLp5D3bt9Ny\/nzUz1b4\/Hx81BMqaN5rczp+nYp2pPQXtVusjWi76UoADiysZvdi\/eMnCQS5isHv533HHSyY9GN6BtiRysjfQjTpSyp3N9kt1h8CHwbwBnbTCdmU\/Zw1KPxSZ3+m2SIBi\/LyWb9sGZdeeSVX3nUnxWVlmW5WUgwMDHD5ZZdFXaIuVOGLI25KJ8e1H9mcjo+kqi0pl8F2i\/XPgEeD739nXcKZaQS9FAjmMteeaWFl78TOzG5gjc3p0GenRAyEaNKXFIumIuAQsBRgRPXTIYJeZj17803sTrE\/02yRgYaCQtatWM5l77qW7be\/l4IUZFfQg2efeYZPf+5zUT\/7yJiH9d6JqcQpYL0ekb9jkRbbod1i\/QnwAQC3ovCLJiv9edl9QwkEqWZdVw\/bW8J2Or7H5nQ8lerrCtGkL6mOo2O3WLcCuwlsrOn1++hXhX9TNvOrokJakkifkk0oQKO5iA2rmrj8uuu47OabMWXJc\/qLH\/8ET+6yTzl+ldvHbeMTkwgfcKnN6diXyrakSzQVAnuAtQBdssSPCvPwiJhdgnlKg8\/PB0fdhHj4fc3mdHw5HdcWoklf0hF8MDT+nQqcE9HCsxYf8FBpMd4cf74ZgaUlpWxYvRrbDTdw8Y7rUxY8OBHvvvxyzkZkZljm8\/PJUU\/oGPpFm9Pxj6luS9p+VrvFegFa\/KYygIMGmUcKjPFPEgjmIKWqyt+OeCiZfOg9DdygZ9TveAjRpC9pEk0S8ARwE4APlVafF58IRJB1tBkUHssyfyY9yAOWlS9g8\/r1XPGeHWlL+dLX18cVV1wRdqxUVfnCiIfiybHsSeCWVPqCBkmrFrZbrDuA3wev+0SegedMuWXCFAhmgxH4xKiHC3wT+ugMWjwmfULOJ4EQTfqSrjQXdou1DNgPLANwqSrtIn5T1rEnP4\/X8vVPIJ5tFCCxorKSzRs3ctWtt7DmsssSnzQDnvn97\/nc303mK1eA+8LH0FNoIVr0SRKagLQbEO0W6wPAV0EzM\/+owMghw\/wNQ2CzXUl1Dm8DnS5dXV3Y7S9muhkZQQLuGfOwcdJpcQy4xOZ0HE5nO4Ro0pd05gazW6xr0AIHFwIMqn66hWN4VvFYUSFtOebPpAdmSeLCmlq2btnClbfeysotm3Wp92937uSpV16ZeP8+l5fLPBM+faPAxTan46guF0uC9Ebe0vg6sAG4RQI+NOZhoNDIGWV+Cqfq6mrq6uoy3QxBGrhp3BsqmAA+nG7BJMhtbE7HUbvF+jHgfwBKJBmPpAjH8CzBK2npU+YjI6rKgY5zHPjdkzz0uycpkWWaFi5i60UX8a677qSxqWlG9b4ekkv1arcvVDABfCydggkg7UolsOb4fuAN0JYr\/mrMS6VfzH4Fc5dtHh\/vcod19q\/YnI6fZ6o9gtzF5nQ8Cnwv+L5CVjBL83PSmW20KwpCvmoM+v28draNf\/31r7jxrrvYvn49995wIz\/55jdpP3UqqTp6enroGNRy7a73+rllPMyq+r1AX0grGelpNqdjFLgBOAtQpKrcO+ahUOgmwRykyevnLldYZ\/8ZoHsiXsG84vNo\/qEA1MgG8jIcfVoAZ9OcNmU2FKlQI0kslGRK0vDsPe\/z8bKzmW\/\/7Gdcd8stXL1hI5+85VZ+\/t3v0dPeHvWc115+GQCLT+VDY2ERv3+P1gfSTkZ7md1iXQ28SiBiuFOR+JcCE+551PfLysowGue+02AQj8dNf39a\/PWygkafn\/tGPYTsE30BuN7mdLgz1Sbh06Qv6fRpCsVusRYDLwPrQNtR1+bz4hWu4RnjSXMBp4zZK5wkoN5gJG\/RQqSC8B1+qsuFt6ODlnFXRqxlC00m1lxwAdtsV3LVnXdQVlXFZz\/6UQ7s3sNnR8N2yh0GLrc5HUNxqksZGZcndot1O\/As2kod7ygyDxUahYlTkPMs8qvcP+qmYPIZdgS4wuZ0DGSuVUI06U2mRBOA3WJdhOYYXg\/gQeWszyPGzwzxs+JCOjMUyygR+So01NZAWXnccuroKJ2tLQymqV3RkIC6\/HzG3W7uHXKFuu+0ojl+RzdNpYGML4TbnI5dwPtAS6m0wufnI2MesvO2EwiSo8qv8slRT6hgOgW8O9OCSTC3CDw83g0MABiRWCQbMz+wz1P8mbdDRMUANNTVJRRMAFJhITWNS0LHrrSjAj1jLj4cLpgG0MbQjAkmyAJLUxC7xXoP8F\/B9wOonFFF6DZB7pGHhFVSQpfkzqJZmE5nrFEhCEuTvmTS0hTEbrFeAjwPFACMB2I4ieS+6SVbww0sNZtR6uqndY7a04OjtydFLYpPngqfHHNj8U2MVWPA1TanY09GGhRC5nt7CHaLdSfwUPD9sOqnyy9W6AW5gxGJRYoBw2TX6gGutDkdb2awWWEI0aQv2SCaAOwW67vRIiMbAcZUP+fE+JlWni\/M54gpuzJd5KnQsGLFjO7T7nfeJm1RdwOYVPjrMQ\/LJ4NXeoCbbE7HM2luSlSyyoprczoeBiZSGRdJMjWyIbuUnUAQA5MUVTBdlU2CSTB3CTxU7iTg6lAgySwU42daWezNPm+yGqNxxsJ+QUF608FEEUx+4M5sEUyQZaIJwOZ0fAeYiJlulmRqRccXZDl5kuZLEkUwpTXwmmB+Y3M6ngA+SIRwyrqBfo5ygceLIcssuXl5eTM+11BUpGNL4pMfXTB9MHBPZw1Z2ZdsTsc\/AfcG3xdKsnBuFGQt+QHBFOLJIASTIGMEAv6FCScxfqYHk6qyxu3JdDPCkGbhY6Uq6QmfUKDCJ8bc0QRT2oNXJiJr+1Fgqe6vCHT8fElicfhMXiDIOOapD6SzwKVCMAkySaRwyguMn4oYP1PORS43BVlkbVJ9s9gO4E59OLkSVQvNEuL0nbWCCbJYNAHYnI4fAHejOYJhkiQWKyLyrSA7KJOUyKVjB1oCXkfGGiUQBAg8dG4nYvw0CuGUUgpUletGXZluxgSusbEZn+sbHdGxJVOp8at8etTDosmwAh7g9mwVTJDlognA5nT8ErgRGAYwBOKQFIpcS4IMUikrVMhhZu+DwDab09GaoSYJBFOwOR2\/AXagbdnGiESdYiRfTDxTyhKPl6vGskM4dXq9qL6ZOah3u2YuuBKx1OfnM6Pu0DhMY8COwD2bteSE8rA5HX8EtgOdoDV6oWygRAgnQZoJ3nulUphgehrYbnM6ujPTKoEgNjan4zngSjRfO2RgkWykSIyfKWXduIcbR8bIy\/BSnVsCb1vbtM\/zd3SkLCr4Rq+fT46G5ZvtRQvN8lyKLqkbOTXdsFusS4A\/ABcGjw2ofnpFLBJBGjAiUSsbMIXP0n8A3GtzOrJvr3EMRJwmfcmWOE2JsFusK4BngMbgsV6\/j341Z27dnGRYltidn8dbJmPGgo1KgLWmFsrKkjthbAyn08l4Cm7td7l93DwelsC8GS3S9zv6X01\/cnfW\/24AAAyASURBVKO3h2C3WEuBXwLXBo+5VJVOv0hUKUgdhYGYYSFzcz\/wOZvT8b2MNWqGCNGkL7kimgDsFmst8Dtgc\/DYkOqnW0w8U86ILHHSaMBpMNBmUBhP831jVKGxshKpsjJ+wf5+2jo6GNW5eUbgbpeXrZ4wkX4AuNHmdHToe7XUkTu9PQS7xaoA3wXuCx7zoQmnMfFAEOjMAlmhPHw5rh\/4c5vT8YcMNWlWCNGkL7kkmgDsFmsh8FPgtuCxcVWlQ0w804YKdCkKbQYFp1GhXVHwpOk+WigrFFdWQnlEHrqhIca6Omnz6n8XVPhVPjrmoc4fVvOvgQ\/YnI5RnS+XUnKrt0dgt1jvBn4ITIQtFeZmgV4oQLVsiNx0cBS4zeZ0nMxMq2aPEE36kmuiCcBusUrA14AvBY\/5gU6\/l1FVZKxLN36gw6DQalBoMxhoVxS8Kb6tDEARmggYUTXfp1RwodfPPa4w\/yWAbwAP2JyOnBuMcq+3R2C3WNegKdZlwWOjqp8uvw+R7lcwUwokmWpZiYwL9ijwsVybGUUiRJO+5KJoCmK3WG9CszqVBI+d9\/voExPPjOKVoENRaDUYaDEodBiUnEu+LAHXun3cMO4NHUUH0axLT2aqXbMld3t7CHaLtQz4CVpoAgB8QLffy4iYNQmmgYS2HFcWvhznBT5jczr+NTOt0hchmvQll0UTgN1iXY428VwVPDYWmHiK5brswCtJnFUUWo2aNapTUbL6lylTVT445g2N8A1wHLjV5nScyFCzdCG3e3sIAXPzp4B\/AkzB44Oqnx7h5ChIAhMS1fKU4KmngPfbnI69GWqW7gjRpC+5LpoA7BZrEfBfwB3BY36gS0w8s5JxSeKsQfOJajEY6FayJ3zEOq+f909djnscuMfmdAxnplX6kfu9PQK7xboO+BnQFDzmQaVbOIkLYiABpZLCAnlKkolHgE\/OhY4eihBN+jIXRBNMTDx3om2yyQ8eHwyEdRHSKXtxSdKEgGozKPRmQESZVHjvuJdt4bvjXMBngIdz0X8pGnOjt0dgt1jzge8AfxN6XHR+QSR5kkSVNMW61Ifmu\/R4hpqVUoRo0pe5IpqC2C3WJuDnwNrgMW3i6WNMWJ1yghFZE1GtBgOtBoV+ObUiarnPz90uL1Xhu+OOAHfbnI7jKb14mplbvT0Cu8V6PdruukXBY75A5xcm5\/lNDN8lgGeBv7Q5HdMPoZsjCNGkL3NNNAHYLdY8NFeHT4UeFxPP3GRYlmgJCKg2g8KgTiKqQIVbplqXAP4Z+ILN6RjX5UJZxNzr7RHYLdYS4FvAX4ceH1H99Pp9eIS307zDLMlUyEpk4tLzwP02p+MnGWpW2hCiSV\/momgKYrdYrwP+E6gPHhMTz9ynX5YDy3kKrUYDozO4h9d5\/dzp8lIaPp60Ah8NpD6bk8zd3h6B3WK9HK3zrwgeU4EB1Uef3ydmTvMAkyRRISnRkj3\/HLhvvuSOE6JJX+ayaIKJiec30fydJr6smHjOHc4r8oQ\/VJtBYSzOPV3hV3nvuJe13rCnpgo8DPydzelIVcq6rGBu9\/YIAibnLwF\/ixbVHdBmTr1+H0Ni5jQnkYEFsoHSqWKpBdhpczqeSn+rMocQTfoy10VTELvFehmau0PYxLNf9dEvJp5zBhXoUeQJf6g2g4JbkshT4Vq3l6vdPgzhp7wDfMTmdLySifamm\/nR2yOwW6zL0HaI3BR6fFxVOa\/6RETcOUJwV1y5rBAhl0bRlmy\/bXM6xjLQtIwiRJO+zBfRBLEnnl5UzouJ55xEBVTFQJ0kUxA+dHjQxtFvzEXfpVjMn94eBbvF+i7ge8Dq0OOugHgSO0VyEwkokRTKZZkpQQS0cBSftzkdZ9PfsuxAiCZ9mU+iKYjdYrWiTTxvDD0+rqr0irFzzlAgyVRISuTuYoDfA5+2OR2ODDQro8y\/3h6B3WI1AB8Fvg5UhH42pqqcV724xEMmJ5CAYkmmfGr6E4C9wKdsTsdr6W9ZdiFEk77MR9EUJOAo\/v+AC0OPj6kqfaqIjZerFEgS5ZKBgqn39ltoG2bmrKN3IuZvb48gEBH3frRAXKWhn42pKgOq2C2SrcholqVSWY4mlg4BXwV+O1eCq80WIZr0ZT6LJpiYeN4LfAUoD\/1sVPXTp\/rExDNHyJckyqNvlulD+30fsjkd3rQ3LIuY3709CoE8dp8CPg0Uh37mQaU\/sG4vhoDMY0CiVJYpkab4LIE2I\/oy8LgQS+EI0aQv8100BQkZO+8nJAEwaLns+lW\/8BfNUgolmTJJpmCqWBpEsyT+s83p6E9\/y7IP0dtjYLdYK4HPom2zDRsAfMCg6mPQ7xcJLTNAgSRRIikUTe3goCWF\/DrwS5vTIUboKAjRpC9CNIUTMnZ+HDCHfuZWVfpVH8Ni4plxJKBIkimTFExT7+ER4PvAd2xOR0\/aG5fFiN6eALvFWgx8DPgk0BD5+ajqZzAwgxKDQOpQkCiWZEpkOTIoZZAX0BxTnxaWpfgI0aQvQjRFx26x1qLtsvsoEeLJi8qgXxs7fWLkTCsKEiWBsTSKO8MIWjzDb9mcjo70ty77Eb09SQLr9neiLdttivzch8qQ6mfI78ctBgFdkNB2b5RIMoWSHO1m9QK\/RJsNvZHm5uUsQjTpixBN8bFbrOVoFvtPALWhn6mETzwFqaMw\/ljaATyIlli3L91tyyVEb58BgejiHwVuBwoiP3erKsOqn2HVL6LlzoACSaZYkjFLcjRfJdCCUv4X8KO5nCMuVQjRpC9CNCWH3WI1AR9Am3g2RX4etD6JcVM\/jEgUxbYqgebO8D3gpzanw53e1uUmorfPgoDj458DHwHWRSsTFFAj+HGLh1VUghYlc+BvSgpdDS\/wJJrp+E\/CX2nmCNGkL0I0TQ+7xSoB16BNPG8hJEhmkPGQiafwG50ehoBQKpLkaPGVQAtK+QTaWPqccGeYHqK364TdYt0MfAh4L7AwWhkvKmOqymjAFD2fn\/pGJAolmUJJoiC6uTjIAbTccI\/anI7OdLVvLiNEk74I0TRz7BZrNfAXwIeB5dHKuAICalRYoGISHE+LJJn82PfjCeBHwH\/bnI6u9LVubiF6u87YLVYZ2Aa8H7gNqIpV1qWquPAzpqq45riIMiKRL0nkSzIFkhTLmTvI68BjwGM2p+NUelo4fxCiSV+EaJo9AevTdrTlu1uJiPcUxENw0qkyNo833wSt84WSJpbijKd9wG+AnwK7hFVp9ojenkLsFqsC2NBSDVxPjJlUEDeqJqRUzZncrao5OSgogEmSyQsRSjGW3IJ4gVeBp9HiKgmhlEKEaNIXIZr0xW6xGoGr0SaeNxER8iWICrjUwKQTlfE5PPGUgTxJJh+JgsCYGueuG0RzZXgUeN7mdHjS08r5gejtacRusV4AXIcmoK4GChOdExRPblXFjYoHFU+WiCkFCYMEJiRMkoQJiTxJipbvLRqtaCLpabSOPZTSxgomEKJJX4RoSh2BBMHXAjejjZ118cqPB6z3rsCY6SE7xsrpIKFZ5k1SYNJJTN+kUNqAPwK\/RfP5nDcJdNON6O0ZIrCTZDNwGdpy3qVAZbLn+wBvYFDwouJTtbAHPsAf8n66My8JkJFQAFnShJFC4F9J68yGwPLaNG+et4FXgN3Aqzan48Q0mybQCSGa9EWIpvRht1hXA+8GdqCNnVOcyENRYWLCOTHxVLUxM9O9QEJz2jYGJpymkH+TuKM8aOPpU8AzNqfjzdS2VhBE9PYswm6xrkATUBuBtYG\/0rgnJUlQPKkQNlwEjbwSut4MTuBI4G8vsNvmdPTqV71gNgjRpC9CNGWGQL7QS9AmnJcFXpvjnhSCFxWvypSJp5\/ABFTVJqDTnXjKBCaegUmnzOSk04AUmHgSKwRALEaAPUxOPPfYnI7haTZNoAOit2c5dou1AU08rUHLJN4Y+FsMscIYpYVx4Ezg7zRwDDgKHLE5HYMZbJcgAUI06YsQTdlBwId0HZqICk48VwH5etQfbeIphVjcdRyMXWjj6RG0TTG7gcM2p8On3yUEM0X09hwl4CxpQRNQDWi79CoCf5WBvwq0AaMQMKH5aBdFVOUHgv5EI2hm30GgG+gN+esBOtFEUrMIsZ+7CNGkL0I0ZS8BIbUMTUytBlYAS9DGzZg7m9NEN9CMNqa+A7wJHAZOCoGUvUhiABUIBIKZI0RTbmK3WM1MCqg6JiecoRPQCrTJZimakSEfyIuoahzNOqQCA2gup6ETzm60SWcvmsN2M3DG5nSMpOq7CVLH\/wcz94Whd5rn0QAAAABJRU5ErkJggg==\"\/>\n    <\/defs>\n<\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/2fa1.svg","ext":"svg","size":17270,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" viewBox=\"0 0 397.38 376.66\"><defs><style>.a,.c,.r{fill:#9d1c1f;}.a,.q,.r{stroke:#c02026;}.a,.k,.l,.q,.r{stroke-miterlimit:10;}.a,.q{stroke-width:3.77px;}.b{isolation:isolate;}.d{clip-path:url(#a);}.e,.h{fill:#2d2d2d;}.f,.l{fill:#fff;}.g{fill:#525455;}.g,.h,.j,.p{fill-rule:evenodd;}.i,.j,.p{fill:#9e9e9f;}.k{fill:#f1f2f2;stroke-width:0.3px;}.k,.l{stroke:#525355;}.l{stroke-width:0.2px;}.m{fill:#9f9fa0;}.n{fill:#525355;}.o{fill:#008cc1;}.p{opacity:0.06;mix-blend-mode:multiply;}.q{fill:none;}.r{stroke-width:2.83px;}.s{fill:#f0f0f0;}<\/style><clipPath id=\"a\"><circle class=\"a\" cx=\"198.46\" cy=\"209.28\" r=\"165.5\"\/><\/clipPath><\/defs><title>2fa1<\/title><g class=\"b\"><circle class=\"c\" cx=\"198.46\" cy=\"209.28\" r=\"165.5\"\/><g class=\"d\"><rect class=\"e\" x=\"50.99\" y=\"94.86\" width=\"294.93\" height=\"193.84\" rx=\"10.2\" ry=\"10.2\"\/><rect class=\"f\" x=\"66.29\" y=\"115.1\" width=\"264.32\" height=\"147.2\"\/><polygon class=\"g\" points=\"51.22 288.7 346.15 288.7 397.38 310.5 0 310.5 51.22 288.7\"\/><path class=\"h\" d=\"M0,310.49H397.38v5.72a7.4,7.4,0,0,1-7.37,7.37H7.37A7.39,7.39,0,0,1,0,316.21Z\"\/><rect class=\"i\" x=\"158.55\" y=\"314.52\" width=\"80.27\" height=\"5.12\"\/><path class=\"j\" d=\"M58.3,290.45H85.87c-1.41.85-2.79,1.69-4.17,2.54H53.14Z\"\/><path class=\"j\" d=\"M108.85,290.45h27.57L134.15,293h-28.6Z\"\/><path class=\"j\" d=\"M159.4,290.45H187c-.1.85-.24,1.69-.38,2.54H158C158.47,292.14,159,291.29,159.4,290.45Z\"\/><path class=\"j\" d=\"M210,290.45h27.6c.48.85,1,1.69,1.48,2.54H210.44C210.3,292.14,210.16,291.29,210,290.45Z\"\/><path class=\"j\" d=\"M260.57,290.45h27.57c1.14.85,2.27,1.69,3.38,2.54h-28.6C262.16,292.14,261.37,291.29,260.57,290.45Z\"\/><path class=\"j\" d=\"M311.16,290.45h27.6L344,293H315.36C314,292.14,312.57,291.29,311.16,290.45Z\"\/><path class=\"j\" d=\"M49.82,294.62H79.14L75,297.16H44.65C46.34,296.31,48.1,295.46,49.82,294.62Z\"\/><path class=\"j\" d=\"M103.2,294.82h29.32c-.76.85-1.55,1.69-2.27,2.54H99.9C101,296.51,102.1,295.66,103.2,294.82Z\"\/><path class=\"j\" d=\"M157,294.82h29.36l-.41,2.54H155.55Z\"\/><path class=\"j\" d=\"M210.78,294.82h29.36c.48.85,1,1.69,1.48,2.54H211.23C211.06,296.51,210.92,295.66,210.78,294.82Z\"\/><path class=\"j\" d=\"M264.61,294.82h29.33l3.34,2.54H266.92C266.16,296.51,265.37,295.66,264.61,294.82Z\"\/><path class=\"j\" d=\"M318.4,294.82h29.39l5.2,2.54H322.6C321.22,296.51,319.81,295.66,318.4,294.82Z\"\/><path class=\"j\" d=\"M40.89,299H72c-1.41.85-2.76,1.69-4.17,2.54H35.73C37.45,300.68,39.14,299.83,40.89,299Z\"\/><path class=\"j\" d=\"M97.48,299.19H128.6c-.79.85-1.52,1.69-2.27,2.54H94.21Z\"\/><path class=\"j\" d=\"M154.51,299.19h31.15c-.17.85-.28,1.69-.41,2.54H153.1C153.58,300.88,154,300,154.51,299.19Z\"\/><path class=\"j\" d=\"M211.54,299.19h31.15c.45.85,1,1.69,1.45,2.54H212C211.85,300.88,211.68,300,211.54,299.19Z\"\/><path class=\"j\" d=\"M268.6,299.19h31.12c1.07.85,2.21,1.69,3.31,2.54H270.91C270.15,300.88,269.36,300,268.6,299.19Z\"\/><path class=\"j\" d=\"M325.63,299.19h31.15l5.2,2.54H329.84C328.46,300.88,327,300,325.63,299.19Z\"\/><path class=\"j\" d=\"M31.6,303.56H365.78c1.76.85,3.48,1.69,5.2,2.54H26.4C28.15,305.25,29.88,304.4,31.6,303.56Z\"\/><rect class=\"k\" x=\"131.65\" y=\"123.77\" width=\"133.61\" height=\"126.62\"\/><rect class=\"l\" x=\"140.16\" y=\"175.96\" width=\"115.42\" height=\"14.41\"\/><rect class=\"l\" x=\"140.16\" y=\"205.14\" width=\"115.42\" height=\"14.41\"\/><rect class=\"m\" x=\"222.53\" y=\"226.81\" width=\"33.14\" height=\"16.08\" rx=\"3.18\" ry=\"3.18\"\/><path class=\"n\" d=\"M149.94,233.32h1.67a1.53,1.53,0,0,1,1.11.39,1.07,1.07,0,0,1,.3.77h0a1.14,1.14,0,0,1-1.06,1.13l1.19,1.59h-.54l-1.13-1.51h-1.11v1.51h-.44Zm1.63,2c.58,0,1-.3,1-.8h0c0-.48-.37-.77-1-.77h-1.2v1.58Z\"\/><path class=\"n\" d=\"M155,236.91a1.19,1.19,0,0,0,.91-.41l.27.24a1.48,1.48,0,0,1-1.18.54,1.5,1.5,0,0,1-.05-3,1.37,1.37,0,0,1,1.34,1.52s0,.08,0,.15h-2.28A1,1,0,0,0,155,236.91Zm.84-1.3a.94.94,0,0,0-.92-1,1,1,0,0,0-.93,1Z\"\/><path class=\"n\" d=\"M156.84,234.34h.43v.48a1,1,0,0,1,.93-.54,1,1,0,0,1,.92.57,1.14,1.14,0,0,1,1-.57,1,1,0,0,1,1.07,1.16v1.78h-.43v-1.68c0-.55-.28-.87-.74-.87a.8.8,0,0,0-.79.89v1.66h-.42v-1.69c0-.54-.28-.86-.74-.86a.83.83,0,0,0-.8.91v1.64h-.43Z\"\/><path class=\"n\" d=\"M163.26,236.91a1.19,1.19,0,0,0,.91-.41l.27.24a1.48,1.48,0,0,1-1.18.54,1.5,1.5,0,0,1-.06-3,1.37,1.37,0,0,1,1.34,1.52s0,.08,0,.15h-2.28A1,1,0,0,0,163.26,236.91Zm.84-1.3a.94.94,0,0,0-.92-1,1,1,0,0,0-.93,1Z\"\/><path class=\"n\" d=\"M165.14,234.34h.43v.48a1.05,1.05,0,0,1,.93-.54,1,1,0,0,1,.92.57,1.15,1.15,0,0,1,1-.57,1,1,0,0,1,1.07,1.16v1.78h-.43v-1.68c0-.55-.28-.87-.74-.87a.8.8,0,0,0-.79.89v1.66h-.42v-1.69c0-.54-.28-.86-.74-.86a.83.83,0,0,0-.8.91v1.64h-.43Z\"\/><path class=\"n\" d=\"M170.71,236.66v.55h-.43v-4.05h.43v1.76a1.29,1.29,0,0,1,1.1-.64,1.4,1.4,0,0,1,1.37,1.49h0a1.41,1.41,0,0,1-1.37,1.49A1.3,1.3,0,0,1,170.71,236.66Zm2-.88h0a1,1,0,0,0-1-1.11,1.07,1.07,0,0,0-1,1.11h0a1.07,1.07,0,0,0,1,1.11A1,1,0,0,0,172.75,235.78Z\"\/><path class=\"n\" d=\"M175.11,236.91a1.19,1.19,0,0,0,.9-.41l.27.24a1.48,1.48,0,0,1-1.18.54,1.5,1.5,0,0,1-.06-3,1.37,1.37,0,0,1,1.34,1.52s0,.08,0,.15h-2.28A1,1,0,0,0,175.11,236.91Zm.84-1.3a.94.94,0,0,0-.92-1,1,1,0,0,0-.93,1Z\"\/><path class=\"n\" d=\"M177,234.34h.43v.75a1.23,1.23,0,0,1,1.17-.8v.46h0a1.16,1.16,0,0,0-1.14,1.32v1.14H177Z\"\/><path class=\"n\" d=\"M180.7,233.32h.45l1.42,2.12,1.42-2.12h.44v3.89H184v-3.15l-1.42,2.08h0l-1.42-2.08v3.14h-.43Z\"\/><path class=\"n\" d=\"M186.58,236.91a1.19,1.19,0,0,0,.91-.41l.27.24a1.48,1.48,0,0,1-1.18.54,1.5,1.5,0,0,1-.06-3,1.37,1.37,0,0,1,1.34,1.52s0,.08,0,.15h-2.28A1,1,0,0,0,186.58,236.91Zm.84-1.3a.94.94,0,0,0-.92-1,1,1,0,0,0-.93,1Z\"\/><path class=\"n\" d=\"M140.71,168.07h2.81v.4h-2.37v1.33h2.12v.4h-2.12v1.36h2.4v.4h-2.84Z\"\/><path class=\"n\" d=\"M144.22,169.09h.43v.48a1,1,0,0,1,.93-.54,1,1,0,0,1,.92.57,1.15,1.15,0,0,1,1-.57,1,1,0,0,1,1.07,1.16V172h-.43v-1.68c0-.55-.28-.87-.74-.87a.8.8,0,0,0-.79.89V172h-.42v-1.69c0-.54-.28-.86-.74-.86a.83.83,0,0,0-.8.91V172h-.43Z\"\/><path class=\"n\" d=\"M149.15,171.13h0c0-.62.5-.94,1.23-.94a3,3,0,0,1,.88.12v-.09c0-.51-.31-.78-.85-.78a2,2,0,0,0-.87.21l-.13-.35a2.35,2.35,0,0,1,1-.24,1.27,1.27,0,0,1,.93.32,1.14,1.14,0,0,1,.3.84V172h-.42v-.43a1.26,1.26,0,0,1-1,.49A1,1,0,0,1,149.15,171.13Zm2.11-.22v-.27a3,3,0,0,0-.84-.12c-.53,0-.84.23-.84.58h0c0,.36.33.57.72.57A.86.86,0,0,0,151.26,170.91Z\"\/><path class=\"n\" d=\"M152.46,168h.49v.47h-.49Zm0,1.1h.43V172h-.43Z\"\/><path class=\"n\" d=\"M153.81,167.91h.43V172h-.43Z\"\/><path class=\"n\" d=\"M156.44,170.54h0a1.5,1.5,0,0,1,3,0h0a1.49,1.49,0,0,1-1.5,1.5A1.47,1.47,0,0,1,156.44,170.54Zm2.56,0h0a1.09,1.09,0,0,0-1.07-1.12,1.06,1.06,0,0,0-1.05,1.11h0a1.08,1.08,0,0,0,1.06,1.12A1.06,1.06,0,0,0,159,170.54Z\"\/><path class=\"n\" d=\"M160.07,169.09h.43v.75a1.23,1.23,0,0,1,1.17-.8v.46h0a1.16,1.16,0,0,0-1.14,1.32V172h-.43Z\"\/><path class=\"n\" d=\"M163.72,170.34v-2.26h.44v2.23c0,.84.45,1.31,1.19,1.31s1.17-.43,1.17-1.28v-2.26H167v2.23a1.62,1.62,0,1,1-3.24,0Z\"\/><path class=\"n\" d=\"M167.55,171.6l.22-.31a1.68,1.68,0,0,0,1,.37c.34,0,.59-.18.59-.46h0c0-.29-.34-.4-.72-.5s-1-.28-1-.81h0a.87.87,0,0,1,1-.82,2,2,0,0,1,1,.32l-.19.32a1.63,1.63,0,0,0-.85-.28c-.34,0-.56.18-.56.42h0c0,.27.36.38.74.49s.92.31.92.82h0a.9.9,0,0,1-1,.86A2,2,0,0,1,167.55,171.6Z\"\/><path class=\"n\" d=\"M171.69,171.66a1.19,1.19,0,0,0,.91-.41l.27.24a1.48,1.48,0,0,1-1.18.54,1.5,1.5,0,0,1-.06-3,1.37,1.37,0,0,1,1.34,1.52s0,.08,0,.15h-2.28A1,1,0,0,0,171.69,171.66Zm.84-1.3a.94.94,0,0,0-.92-1,1,1,0,0,0-.93,1Z\"\/><path class=\"n\" d=\"M173.57,169.09H174v.75a1.23,1.23,0,0,1,1.17-.8v.46h0a1.16,1.16,0,0,0-1.14,1.32V172h-.43Z\"\/><path class=\"n\" d=\"M175.68,169.09h.43v.5a1.09,1.09,0,0,1,1-.56,1,1,0,0,1,1.1,1.15V172h-.43v-1.68a.77.77,0,0,0-.79-.87.84.84,0,0,0-.86.9V172h-.43Z\"\/><path class=\"n\" d=\"M178.75,171.13h0c0-.62.5-.94,1.23-.94a3,3,0,0,1,.88.12v-.09c0-.51-.31-.78-.85-.78a2,2,0,0,0-.87.21l-.13-.35a2.36,2.36,0,0,1,1-.24,1.28,1.28,0,0,1,.93.32,1.14,1.14,0,0,1,.3.84V172h-.42v-.43a1.26,1.26,0,0,1-1,.49A1,1,0,0,1,178.75,171.13Zm2.11-.22v-.27a3,3,0,0,0-.84-.12c-.53,0-.84.23-.84.58h0c0,.36.33.57.72.57A.86.86,0,0,0,180.86,170.91Z\"\/><path class=\"n\" d=\"M182,169.09h.43v.48a1,1,0,0,1,.93-.54,1,1,0,0,1,.92.57,1.14,1.14,0,0,1,1-.57,1,1,0,0,1,1.07,1.16V172H186v-1.68c0-.55-.28-.87-.74-.87a.8.8,0,0,0-.79.89V172H184v-1.69c0-.54-.28-.86-.74-.86a.83.83,0,0,0-.8.91V172H182Z\"\/><path class=\"n\" d=\"M188.46,171.66a1.19,1.19,0,0,0,.91-.41l.27.24a1.48,1.48,0,0,1-1.18.54,1.5,1.5,0,0,1-.05-3,1.37,1.37,0,0,1,1.34,1.52s0,.08,0,.15h-2.28A1,1,0,0,0,188.46,171.66Zm.84-1.3a.94.94,0,0,0-.92-1,1,1,0,0,0-.93,1Z\"\/><path class=\"n\" d=\"M140.71,197.77h1.46c.88,0,1.46.47,1.46,1.23h0c0,.84-.7,1.27-1.53,1.27h-.94v1.37h-.44Zm1.4,2.12c.64,0,1.07-.34,1.07-.86h0c0-.55-.42-.84-1-.84h-1v1.71Z\"\/><path class=\"n\" d=\"M143.94,200.83h0c0-.62.5-.94,1.23-.94a3,3,0,0,1,.88.12v-.09c0-.51-.31-.78-.85-.78a2,2,0,0,0-.87.21l-.13-.35a2.36,2.36,0,0,1,1-.24,1.28,1.28,0,0,1,.93.32,1.14,1.14,0,0,1,.3.84v1.75H146v-.43a1.26,1.26,0,0,1-1,.49A1,1,0,0,1,143.94,200.83Zm2.11-.22v-.27a3,3,0,0,0-.84-.12c-.53,0-.84.23-.84.58h0c0,.36.33.57.72.57A.86.86,0,0,0,146.05,200.6Z\"\/><path class=\"n\" d=\"M147,201.29l.22-.31a1.68,1.68,0,0,0,1,.37c.34,0,.59-.18.59-.46h0c0-.29-.34-.4-.72-.5s-1-.28-1-.81h0a.87.87,0,0,1,1-.82,2,2,0,0,1,1,.32l-.19.32a1.63,1.63,0,0,0-.85-.28c-.34,0-.56.18-.56.42h0c0,.27.36.38.74.49s.92.31.92.82h0a.9.9,0,0,1-1,.86A2,2,0,0,1,147,201.29Z\"\/><path class=\"n\" d=\"M149.57,201.29l.22-.31a1.67,1.67,0,0,0,1,.37c.34,0,.59-.18.59-.46h0c0-.29-.34-.4-.72-.5s-.95-.28-.95-.81h0a.87.87,0,0,1,1-.82,2,2,0,0,1,1,.32l-.19.32a1.63,1.63,0,0,0-.85-.28c-.34,0-.56.18-.56.42h0c0,.27.36.38.74.49s.92.31.92.82h0a.9.9,0,0,1-1,.86A2,2,0,0,1,149.57,201.29Z\"\/><path class=\"n\" d=\"M152.11,198.79h.46l.76,2.3.77-2.32h.36l.78,2.32.75-2.3h.44l-1,2.89H155l-.77-2.27-.78,2.27h-.38Z\"\/><path class=\"n\" d=\"M156.68,200.24h0a1.5,1.5,0,0,1,3,0h0a1.49,1.49,0,0,1-1.5,1.5A1.47,1.47,0,0,1,156.68,200.24Zm2.55,0h0a1.09,1.09,0,0,0-1.07-1.12,1.06,1.06,0,0,0-1,1.11h0a1.08,1.08,0,0,0,1.06,1.12A1.06,1.06,0,0,0,159.24,200.24Z\"\/><path class=\"n\" d=\"M160.31,198.79h.43v.75a1.23,1.23,0,0,1,1.17-.8v.46h0a1.16,1.16,0,0,0-1.14,1.32v1.14h-.43Z\"\/><path class=\"n\" d=\"M162.14,200.23h0a1.41,1.41,0,0,1,1.37-1.49,1.29,1.29,0,0,1,1.1.61V197.6H165v4.05h-.43v-.58a1.29,1.29,0,0,1-1.1.64A1.4,1.4,0,0,1,162.14,200.23Zm2.49,0h0a1.07,1.07,0,0,0-1-1.11,1,1,0,0,0-1,1.11h0a1,1,0,0,0,1,1.11A1.07,1.07,0,0,0,164.63,200.23Z\"\/><path class=\"n\" d=\"M144.65,183.59v-1.78h.43v1.68a.77.77,0,0,0,.79.87.85.85,0,0,0,.86-.9v-1.64h.42v2.87h-.42v-.5a1.09,1.09,0,0,1-1,.56A1,1,0,0,1,144.65,183.59Z\"\/><path class=\"n\" d=\"M147.74,184.31,148,184a1.68,1.68,0,0,0,1,.37c.34,0,.59-.18.59-.46h0c0-.29-.34-.4-.72-.5s-1-.28-1-.81h0a.87.87,0,0,1,1-.82,2,2,0,0,1,1,.32l-.19.32a1.63,1.63,0,0,0-.85-.28c-.34,0-.56.18-.56.42h0c0,.27.36.38.74.49s.92.31.92.82h0a.9.9,0,0,1-1,.86A2,2,0,0,1,147.74,184.31Z\"\/><path class=\"n\" d=\"M151.88,184.37a1.19,1.19,0,0,0,.91-.41l.27.24a1.48,1.48,0,0,1-1.18.54,1.5,1.5,0,0,1-.06-3,1.37,1.37,0,0,1,1.34,1.52s0,.08,0,.15h-2.28A1,1,0,0,0,151.88,184.37Zm.84-1.3a.94.94,0,0,0-.92-1,1,1,0,0,0-.93,1Z\"\/><path class=\"n\" d=\"M153.76,181.81h.43v.75a1.23,1.23,0,0,1,1.17-.8v.46h0a1.16,1.16,0,0,0-1.14,1.32v1.14h-.43Z\"\/><path class=\"n\" d=\"M155.69,183.16a2.43,2.43,0,0,1,2.43-2.43,2.34,2.34,0,0,1,2.42,2.2c0,.94-.53,1.36-1,1.36a.77.77,0,0,1-.78-.47,1.16,1.16,0,0,1-.92.47,1,1,0,0,1-1-1,1.37,1.37,0,0,1,1.28-1.38.88.88,0,0,1,.81.46L159,182l.37,0-.22,1.26a2.13,2.13,0,0,0,0,.34.42.42,0,0,0,.47.45c.39,0,.78-.36.78-1.14a2.15,2.15,0,0,0-2.22-2,2.24,2.24,0,1,0,0,4.48,2.54,2.54,0,0,0,1.38-.38l.09.15a2.72,2.72,0,0,1-1.47.42A2.42,2.42,0,0,1,155.69,183.16Zm3.12-.22a.67.67,0,0,0-.68-.71,1,1,0,0,0-.91,1,.64.64,0,0,0,.68.69A1,1,0,0,0,158.81,182.94Z\"\/><path class=\"n\" d=\"M161,183.85h0c0-.62.5-.94,1.23-.94a3,3,0,0,1,.88.12v-.09c0-.51-.31-.78-.85-.78a2,2,0,0,0-.87.21l-.13-.35a2.35,2.35,0,0,1,1-.24,1.27,1.27,0,0,1,.93.32,1.14,1.14,0,0,1,.3.84v1.75h-.42v-.43a1.26,1.26,0,0,1-1,.49A1,1,0,0,1,161,183.85Zm2.11-.22v-.27a3,3,0,0,0-.84-.12c-.53,0-.84.23-.84.58h0c0,.36.33.57.72.57A.86.86,0,0,0,163.07,183.62Z\"\/><path class=\"n\" d=\"M164.08,183.26h0a1.5,1.5,0,0,1,2.62-1l-.28.3a1.16,1.16,0,0,0-.87-.43,1.06,1.06,0,0,0-1,1.11h0a1.07,1.07,0,0,0,1.05,1.12,1.19,1.19,0,0,0,.88-.43l.27.25a1.49,1.49,0,0,1-2.64-.93Z\"\/><path class=\"n\" d=\"M167,183.26h0a1.5,1.5,0,0,1,2.62-1l-.28.3a1.16,1.16,0,0,0-.87-.43,1.06,1.06,0,0,0-1,1.11h0a1.07,1.07,0,0,0,1.05,1.12,1.18,1.18,0,0,0,.88-.43l.27.25a1.49,1.49,0,0,1-2.64-.93Z\"\/><path class=\"n\" d=\"M170,183.26h0a1.5,1.5,0,0,1,3,0h0a1.49,1.49,0,0,1-1.5,1.5A1.47,1.47,0,0,1,170,183.26Zm2.56,0h0a1.09,1.09,0,0,0-1.07-1.12,1.06,1.06,0,0,0-1,1.11h0a1.08,1.08,0,0,0,1.06,1.12A1.06,1.06,0,0,0,172.54,183.26Z\"\/><path class=\"n\" d=\"M173.57,183.59v-1.78H174v1.68a.77.77,0,0,0,.79.87.85.85,0,0,0,.86-.9v-1.64h.42v2.87h-.42v-.5a1.1,1.1,0,0,1-1,.56A1,1,0,0,1,173.57,183.59Z\"\/><path class=\"n\" d=\"M176.9,181.81h.43v.5a1.09,1.09,0,0,1,1-.56,1,1,0,0,1,1.1,1.15v1.78H179V183a.77.77,0,0,0-.79-.87.84.84,0,0,0-.86.9v1.64h-.43Z\"\/><path class=\"n\" d=\"M180.33,183.92v-1.73h-.4v-.38h.4v-.87h.43v.87h.91v.38h-.91v1.68a.42.42,0,0,0,.48.48.9.9,0,0,0,.42-.1v.37a1.08,1.08,0,0,1-.52.12A.73.73,0,0,1,180.33,183.92Z\"\/><path class=\"n\" d=\"M182.24,184.1h.51v.58h-.51Z\"\/><path class=\"n\" d=\"M183.22,183.26h0a1.5,1.5,0,0,1,2.62-1l-.28.3a1.16,1.16,0,0,0-.87-.43,1.06,1.06,0,0,0-1,1.11h0a1.07,1.07,0,0,0,1.06,1.12,1.19,1.19,0,0,0,.88-.43l.27.25a1.49,1.49,0,0,1-2.64-.93Z\"\/><path class=\"n\" d=\"M186.17,183.26h0a1.5,1.5,0,0,1,3,0h0a1.49,1.49,0,0,1-1.5,1.5A1.47,1.47,0,0,1,186.17,183.26Zm2.56,0h0a1.09,1.09,0,0,0-1.07-1.12,1.06,1.06,0,0,0-1,1.11h0a1.08,1.08,0,0,0,1.06,1.12A1.06,1.06,0,0,0,188.73,183.26Z\"\/><path class=\"n\" d=\"M189.8,181.81h.43v.48a1.05,1.05,0,0,1,.93-.54,1,1,0,0,1,.92.57,1.15,1.15,0,0,1,1-.57,1,1,0,0,1,1.07,1.16v1.78h-.43V183c0-.55-.28-.87-.74-.87a.8.8,0,0,0-.79.89v1.66h-.42V183c0-.54-.28-.86-.74-.86a.83.83,0,0,0-.8.91v1.64h-.43Z\"\/><path class=\"n\" d=\"M145.33,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><path class=\"n\" d=\"M147.58,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><path class=\"n\" d=\"M149.83,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69h-.29Z\"\/><path class=\"n\" d=\"M152.08,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69H152Z\"\/><path class=\"n\" d=\"M154.33,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.05-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69h-.29Z\"\/><path class=\"n\" d=\"M156.58,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69h-.29Z\"\/><path class=\"n\" d=\"M158.83,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><path class=\"n\" d=\"M161.08,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.05-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69H161Z\"\/><path class=\"n\" d=\"M163.33,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><path class=\"n\" d=\"M165.58,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><path class=\"n\" d=\"M167.83,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69h-.29Z\"\/><path class=\"n\" d=\"M170.08,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69H170Z\"\/><path class=\"n\" d=\"M172.33,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><path class=\"n\" d=\"M174.58,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69h-.29Z\"\/><path class=\"n\" d=\"M176.84,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><path class=\"n\" d=\"M179.09,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.05-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69H179Z\"\/><path class=\"n\" d=\"M181.34,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.06.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.06.69h-.29Z\"\/><path class=\"n\" d=\"M183.59,211.48l-.57.41-.15-.26.64-.29-.64-.3.15-.25.57.4-.06-.69h.29l-.05.69.57-.4.15.25-.64.3.64.29-.15.26-.57-.41.05.69h-.29Z\"\/><circle class=\"o\" cx=\"198.25\" cy=\"146.24\" r=\"15.23\"\/><path class=\"f\" d=\"M190.77,150.66l-2.67-7.85h-1v-1.58h4.22v1.58h-1l1.52,4.5,1.43-4.5h-.85v-1.58h3.37v1.58H195l1.54,4.5,1.48-4.5H197v-1.58h3.75v1.58h-1l-2.59,7.85h-1.75L194,146.38l-1.39,4.28Z\"\/><path class=\"f\" d=\"M206.2,149v1.58h-4.94V149h1.19v-6.2h-1.19v-1.58h4.94a4,4,0,0,1,2.66.81,2.72,2.72,0,0,1,.94,2.18,3,3,0,0,1-.33,1.42,2.53,2.53,0,0,1-.85,1,3.17,3.17,0,0,1-1.18.46,9.21,9.21,0,0,1-1.66.12h-.9V149Zm-1.31-3.38h.36a2.22,2.22,0,0,0,1.61-.41,1.47,1.47,0,0,0,.36-1,1.5,1.5,0,0,0-.25-.87,1,1,0,0,0-.57-.44,4.67,4.67,0,0,0-1.06-.08h-.46Z\"\/><rect class=\"l\" x=\"140.07\" y=\"232.16\" width=\"6.04\" height=\"6.04\"\/><polygon class=\"p\" points=\"113.39 115.11 330.85 115.11 330.85 262.31 278.65 262.31 113.39 115.11\"\/><\/g><circle class=\"q\" cx=\"198.46\" cy=\"209.28\" r=\"165.5\"\/><circle class=\"r\" cx=\"198.46\" cy=\"43.22\" r=\"41.81\"\/><path class=\"s\" d=\"M190.32,57.44V52H195V28.82h-5V23.35h12.5V52H207v5.46Z\"\/><\/g><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/options.svg","ext":"svg","size":1511,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 100.11 100.11\"><title>options<\/title><path d=\"M99.59,41.42a2.06,2.06,0,0,0-1.37-.82L86.3,38.78a39.34,39.34,0,0,0-2.67-6.39q1.17-1.63,3.52-4.6t3.32-4.33A2.52,2.52,0,0,0,91,22a2.1,2.1,0,0,0-.46-1.43Q88.18,17.2,79.78,9.45a2.52,2.52,0,0,0-1.63-.65,2.12,2.12,0,0,0-1.57.59l-9.25,7a40.09,40.09,0,0,0-5.87-2.41L59.64,2a1.92,1.92,0,0,0-.75-1.4A2.46,2.46,0,0,0,57.29,0H42.82a2.19,2.19,0,0,0-2.34,1.82,106,106,0,0,0-1.89,12.12,37.62,37.62,0,0,0-5.93,2.48l-9-7A2.78,2.78,0,0,0,22,8.8q-1.44,0-6.16,4.66a64.88,64.88,0,0,0-6.42,7A2.75,2.75,0,0,0,8.8,22a2.44,2.44,0,0,0,.65,1.56q4.37,5.28,7,9a32.38,32.38,0,0,0-2.54,6L1.76,40.34a2,2,0,0,0-1.24.85A2.5,2.5,0,0,0,0,42.69V57.16a2.44,2.44,0,0,0,.52,1.53,2,2,0,0,0,1.37.82l11.93,1.76a31.91,31.91,0,0,0,2.67,6.45Q15.31,69.35,13,72.31T9.65,76.65a2.54,2.54,0,0,0-.07,3q2.54,3.52,10.75,11a2.25,2.25,0,0,0,1.63.71,2.35,2.35,0,0,0,1.63-.59l9.19-7a40.54,40.54,0,0,0,5.87,2.41l1.82,12a1.92,1.92,0,0,0,.75,1.4,2.45,2.45,0,0,0,1.6.55H57.29a2.2,2.2,0,0,0,2.35-1.82,107.41,107.41,0,0,0,1.89-12.12,37.19,37.19,0,0,0,5.93-2.48l9,7a3.18,3.18,0,0,0,1.69.59q1.43,0,6.13-4.62a65.86,65.86,0,0,0,6.45-7,2.16,2.16,0,0,0,.59-1.5,2.51,2.51,0,0,0-.65-1.63q-4.69-5.74-7-9a41.57,41.57,0,0,0,2.54-5.93l12.06-1.82a2,2,0,0,0,1.3-.85,2.52,2.52,0,0,0,.52-1.5V43a2.46,2.46,0,0,0-.52-1.53ZM61.85,61.86a16.08,16.08,0,0,1-11.8,4.89A16.69,16.69,0,0,1,33.37,50.06,16.69,16.69,0,0,1,50.06,33.37,16.69,16.69,0,0,1,66.74,50.06a16.08,16.08,0,0,1-4.89,11.8Zm0,0\"\/><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/tools.svg","ext":"svg","size":1458,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 59.68 63.68\"><title>tools<\/title><path d=\"M58,53.63,37.43,33.11a5.22,5.22,0,0,0-.61-.53l3.64-3.82c.18-.19.36-.39.52-.59A13.53,13.53,0,0,0,59.25,14.35a1.17,1.17,0,0,0-2-.72L50.69,20.2,44,18.52l-1.89-6.87,6.57-6.57a1.17,1.17,0,0,0-.73-2A13.53,13.53,0,0,0,34.17,21.36c-.19.17-.39.34-.59.54L28.24,27,18.41,17.2a3.82,3.82,0,0,0-.39-.33c.12-.2.23-.41.33-.62,2.08.4,5.87-3.64,9.09-6.86L18.06,0C13.87,4.2,10.8,7,11.2,9.09a9.08,9.08,0,0,0-2.42,1.65L7.45,12.06a5.59,5.59,0,0,0-1.56,3l-.39.46-.5.62-.07.09-.44.63c-.28.38-.52.78-.76,1.17l-.26.44,0,.07-.2.37c-.24.45-.49.92-.7,1.43l0,.08a14.94,14.94,0,0,0-.69,1.87l-.09.28c-.07.23-.15.47-.21.75l-.18.9a10.74,10.74,0,0,0-.22,1.61l0,.32a8.41,8.41,0,0,0,0,1.42c0,.14,0,.28,0,.47s0,.15,0,.23a4.74,4.74,0,0,0,0,.63l.12.73c0,.15,0,.28.06.41a6.37,6.37,0,0,0,.18.9L2,32.66a1.13,1.13,0,0,0,1.15.8,1.14,1.14,0,0,0,1-1l.25-1.69a4.92,4.92,0,0,1,.14-.54c0-.14.09-.29.12-.42l.17-.63a1.79,1.79,0,0,1,.1-.25l.1-.24.17-.41a4.73,4.73,0,0,1,.37-.77l.19-.35a6,6,0,0,1,.5-.8l0,0,.42-.58L7,25.47l.21-.24A7.89,7.89,0,0,1,8,24.42l.15-.14c.21-.19.44-.37.7-.56l.31-.23.37-.25a6.65,6.65,0,0,1,.65-.4l.5-.28.5-.25a5.21,5.21,0,0,1,.51-.22L12,22l.25-.09.33-.11.13,0a3.72,3.72,0,0,0,.53.67l9.72,9.72L2.18,52.05l0,0c-2.58,2.58-3,6.36-.42,8.94s6.12,1.92,8.7-.66l0,0,18.3-19.27c.11.13.21.25.33.37L49.63,62A5.89,5.89,0,0,0,58,53.63ZM7.76,58.23a2.43,2.43,0,1,1,0-3.44,2.43,2.43,0,0,1,0,3.44Zm0,0\"\/><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/wordfence-logo.svg","ext":"svg","size":3070,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\">\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" xmlns:serif=\"http:\/\/www.serif.com\/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\">\n    <g>\n        <path d=\"M16,8.59L17.59,12.08L17.6,12.11L17.06,12.11L17.06,12.12C17.07,12.17 17.08,12.22 17.08,12.28C17.08,12.45 17.04,12.61 16.96,12.75C16.93,12.82 16.88,12.88 16.84,12.93C16.84,12.93 16.77,13.69 16.78,15.11C16.78,15.96 16.83,17.21 16.93,18.58C18.59,18.67 20.13,18.86 21.55,19.11L21.55,13.19L21.14,13.19L22.2,10.87L23.22,13.2L22.81,13.2L22.81,19.35C24.32,19.66 25.66,20.04 26.82,20.42L26.82,15.27L26.41,15.27L27.47,12.95L28.49,15.28L28.08,15.28L28.08,20.86C29.45,21.37 30.48,21.85 31.11,22.17C31.9,14.72 30.28,8.26 30.28,8.26C22.71,8.01 16,4 16,4L16,8.59Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M28.04,22.18L28.04,28L29.81,28C30.06,27.19 30.27,26.36 30.45,25.55C30.68,24.74 30.81,24.07 30.9,23.59C30.9,23.59 30.9,23.57 30.9,23.56C30.91,23.53 30.91,23.5 30.91,23.47C30.47,23.23 29.49,22.73 28.04,22.18Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M22.79,20.61L22.79,28L26.8,28L26.8,21.72C25.66,21.33 24.31,20.94 22.79,20.61Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M21.54,28L21.54,20.36C20.16,20.11 18.64,19.91 17.02,19.81C17.02,19.82 17.02,19.82 17.02,19.83C17.02,19.86 17.13,20.68 17.14,20.81C17.39,22.7 17.9,25.67 18.43,27.99L18.4,27.99L21.54,27.99L21.54,28Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M13.57,28C14.09,25.68 14.6,22.71 14.86,20.82L14.85,20.82L14.86,20.82C14.88,20.68 14.98,19.87 14.98,19.84C14.98,19.83 14.98,19.83 14.98,19.82C13.35,19.92 11.83,20.12 10.46,20.37L10.46,28L13.59,28L13.57,28Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M3.96,20.86L3.96,15.28L3.55,15.28L4.57,12.95L5.63,15.27L5.22,15.27L5.22,20.42C6.38,20.04 7.72,19.67 9.23,19.35L9.23,13.2L8.82,13.2L9.84,10.87L10.9,13.19L10.49,13.19L10.49,19.11C11.91,18.86 13.45,18.67 15.11,18.58C15.21,17.21 15.26,15.96 15.26,15.11C15.27,13.7 15.2,12.93 15.2,12.93C15.15,12.87 15.11,12.81 15.08,12.75C15,12.61 14.96,12.45 14.96,12.28C14.96,12.23 14.97,12.17 14.98,12.12L14.98,12.11L14.44,12.11L14.45,12.08L16,8.59L16,4C16,4 9.29,8.01 1.75,8.26C1.75,8.26 0.13,14.72 0.92,22.17C1.56,21.85 2.58,21.36 3.96,20.86Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M5.2,21.72L5.2,28L9.21,28L9.21,20.61C7.64,20.95 6.28,21.35 5.2,21.72Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M1.09,23.47C1.08,23.47 1.08,23.47 1.09,23.47C1.09,23.5 1.1,23.53 1.1,23.56C1.1,23.57 1.1,23.58 1.1,23.59C1.18,24.07 1.32,24.74 1.55,25.55C1.73,26.36 1.95,27.19 2.19,28L3.95,28L3.95,22.17C2.51,22.73 1.53,23.23 1.09,23.47Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n    <\/g>\n<\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/blocking.svg","ext":"svg","size":3493,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 210.49 180\"><title>Firewall<\/title><path d=\"M71.78,14.23c3.79-.59,7.61-1.09,11.42-1.53a2.09,2.09,0,0,1,1.57.67c2.51,3.17,6,4.72,9.73,5.82,3.11.92,3.55.49,4-2.78,4-.93,8-2.79,12.06-.25a37.89,37.89,0,0,1,6.15,5c.46.45.18,1.88,0,2.8-.29,1.24-1,2.37-1.3,3.6a3.24,3.24,0,0,0,3.4,4.22c.78,0,1.56-.18,2.35-.21,2.28-.11,3.09.76,2.88,3.06-.29,3.26.25,3.65,3.55,3.09a6.56,6.56,0,0,1,3,.61,6.4,6.4,0,0,1,1.53,1.14c3.06,2.32,5.4,1.45,6.3-2.35.1-.41.09-.85.17-1.28.36-1.7,1.32-2.15,2.47-.93,2.43,2.58,4.71,5.3,7.18,8.11-2.65,2.43-2.75,5.39-2.16,8.29.65,3.22-.2,6-1.47,8.87a64,64,0,0,0-3.37,8.27c-1.21,4.27.17,6.22,4.5,7.18a16.69,16.69,0,0,1,1.89.51l25-4A82.21,82.21,0,0,0,157.39,36c-14-19.15-32.75-30.63-56.15-34.71A82.86,82.86,0,0,0,87.08,0h-.94A87.3,87.3,0,0,0,72.91,1.25C27.92,8.15-4.61,50.53.54,95.86c2.45,21.63,11.52,40.09,27.6,54.79,19.08,17.45,41.74,25,67.42,22.57a13.49,13.49,0,0,1-2.86-6.09,15.67,15.67,0,0,1-.3-5.13,74.53,74.53,0,0,1-71.14-40.38c-15.12-29-7.76-61.86,7.61-79.94.41,3.25.82,6.17,1.15,9.11a74.29,74.29,0,0,1-1.41,23.78,11.67,11.67,0,0,0,.22,5.23,3.59,3.59,0,0,0,2.55,2.06c.74.06,2-1.1,2.32-2a22.32,22.32,0,0,0,.73-5c.12-1.19.12-2.4.2-4.27a34.87,34.87,0,0,1,2.85,2.33c1.89,1.89,3.79,3.78,5.52,5.82A5.64,5.64,0,0,1,44.52,82c-.05,2.33,1,3.92,2.23,5.75,1.38,2,2,4.6,2.9,7,.37,1,.45,2.1.9,3.05a5.47,5.47,0,0,0,4.86,3.58c2.61.17,3.58,1.17,4,3.84-.67.07-1.33.17-2,.23-3.18.29-4.75,1.75-4.63,5A22.81,22.81,0,0,0,60,126.7c1.3,1.21,2.68,2.35,3.95,3.6,2.89,2.85,3.89,6.2,2.5,10.13a31.88,31.88,0,0,0-1.87,5.65,16.13,16.13,0,0,0,.16,6c.48,2,.27,6.4,2.34,6,3.68-.65,5.78.07,6.06-4a3.29,3.29,0,0,0-.21-1.6c-1.09-3.86,3.86-14.79,6.82-16.79a73.67,73.67,0,0,0,7.39-5.45c3.32-2.89,4.81-6.61,3.41-10.95-1.31-4.07.22-7.08,3.08-9.7s4.82-5.77,4.62-9.88-2.89-7.1-6.41-6.68a25.73,25.73,0,0,0-5,1.6c-2.45.82-4.85,2-7.37,2.44-3.54.62-5.7-1.68-7.29-4.48-1.27-2.26-1.68-2.43-3.89-1-1.85,1.18-3.71,2.38-5.63,3.45s-3.08.7-4.62-1a15.29,15.29,0,0,0-3.35-2.39c-.85-.52-2-.65-2.65-1.3-.91-.88-2.16-2.18-2-3.13a4.57,4.57,0,0,1,2.57-3c1.93-.78,4.14-.91,6.21-1.36A21.79,21.79,0,0,0,62,82.07c1.43-.57,1.37-1.51.27-2.39a7.39,7.39,0,0,0-1.86-1c-3.17-1.28-6.36-2.5-9.53-3.78a13.71,13.71,0,0,1-2.27-1.16c-2-1.31-2.23-2.76-.42-4.34,7.13-6.3,15.47-8.13,22.85.22,2.28,2.59,3.84,5.82,6,8.54A33.26,33.26,0,0,0,82.9,84a4.31,4.31,0,0,0,3.89.25c1.48-.81,1.53-2.66.78-4.21a21.93,21.93,0,0,0-2.31-3.84c-4.2-5.4-3.9-15.93,4.31-20.33,2.75-1.47,5.53-3,6.84-7-1.57.43-2.72.71-3.84,1-6.23,1.93-1.89-2.73,1-3.53,1.74-.5-1.56-1.84-1.56-1.84s2.2-.74,4.56-1.73a19.41,19.41,0,0,0,4.62-2.57c.87-.71,1.2-2.07,1.77-3.15l-.43-.5c-1.65.21-3.3.47-4.95.65-2.8.32-3.45-.23-3.72-3.05a2.6,2.6,0,0,0-4-2c-1.24.68-2.32,1.65-3.51,2.42-2.76,1.8-4.82,1.08-5.91-2-.64-1.83-1.54-2.18-3.22-1.15-.85.52-1.56,1.27-2.42,1.75a28.85,28.85,0,0,1-4.37,2.13c-1.48.52-3.26.9-4.27-.72s-.14-3.44,1.23-4.54a39.08,39.08,0,0,1,5.56-3.49c2.72-1.53,5.6-2.8,8.22-4.47a4.82,4.82,0,0,0,2.15-5.6c-.53-2-1.86-2.68-3.71-1.76-1.52.76-2.86,1.94-4.43,2.56a7.42,7.42,0,0,1-3.8.22c-.45-.07-.94-1.33-1-2.07C70.39,15,71.24,14.31,71.78,14.23Z\"\/><rect x=\"110.49\" y=\"87\" width=\"16\" height=\"25\"\/><rect x=\"110.49\" y=\"156\" width=\"16\" height=\"24\"\/><rect x=\"110.49\" y=\"122\" width=\"45\" height=\"24\"\/><rect x=\"164.49\" y=\"122\" width=\"46\" height=\"24\"\/><rect x=\"137.49\" y=\"156\" width=\"45\" height=\"24\"\/><rect x=\"194.49\" y=\"156\" width=\"16\" height=\"24\"\/><rect x=\"137.49\" y=\"87\" width=\"45\" height=\"25\"\/><rect x=\"194.49\" y=\"87\" width=\"16\" height=\"25\"\/><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/wf-central-logo.svg","ext":"svg","size":1998,"mtime":1757312769,"type":"text","content":"<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 150 150\"><defs><style>.cls-1{fill:#3f5a6b;}.cls-2{fill:#00719e;}<\/style><\/defs><title>wordfence-central-icon<\/title><path class=\"cls-1\" d=\"M133.11,60.11A14.89,14.89,0,1,0,148,75,14.91,14.91,0,0,0,133.11,60.11Z\"\/><path class=\"cls-1\" d=\"M16.89,60.11A14.89,14.89,0,1,0,31.78,75,14.91,14.91,0,0,0,16.89,60.11Z\"\/><path class=\"cls-1\" d=\"M89.89,16.89A14.89,14.89,0,1,0,75,31.78,14.91,14.91,0,0,0,89.89,16.89Z\"\/><path class=\"cls-1\" d=\"M60.11,133.11A14.89,14.89,0,1,0,75,118.22,14.91,14.91,0,0,0,60.11,133.11Z\"\/><path class=\"cls-2\" d=\"M109.71,87.3c.33-.92.62-1.86.87-2.81s.47-1.92.65-2.88l-4.49-5.2c0-1,0-1.94,0-2.9l4.49-5.22a36.63,36.63,0,0,0-1.54-5.68l-6.5-2.26c-.32-.61-.68-1.2-1-1.79-.14-.24-.26-.48-.41-.71L103,51.09a37.14,37.14,0,0,0-4.16-4.16l-6.76,1.29c-.2-.13-.43-.24-.64-.37-.61-.37-1.23-.74-1.88-1.08L87.3,40.29c-.92-.33-1.86-.62-2.81-.87s-1.92-.47-2.88-.65l-5.2,4.49c-1,0-1.94,0-2.9,0l-5.22-4.49a36.63,36.63,0,0,0-5.68,1.54l-2.26,6.5c-.61.32-1.2.68-1.79,1-.24.14-.48.26-.71.41L51.09,47a37.14,37.14,0,0,0-4.16,4.16l1.29,6.76c-.13.2-.24.43-.37.64-.37.61-.74,1.23-1.08,1.88L40.29,62.7c-.32.92-.62,1.86-.87,2.81s-.47,1.92-.65,2.88l4.49,5.2c0,1,0,1.94,0,2.9l-4.49,5.22a37.78,37.78,0,0,0,1.54,5.68l6.5,2.26c.32.61.68,1.2,1,1.79.14.23.26.48.41.71L47,98.91a37.14,37.14,0,0,0,4.16,4.16l6.76-1.29c.2.13.43.24.64.37.61.37,1.23.74,1.88,1.08l2.27,6.48c.92.32,1.86.62,2.81.87s1.92.47,2.88.65l5.2-4.49c1,0,1.94,0,2.9,0l5.22,4.49a36.63,36.63,0,0,0,5.68-1.54l2.26-6.5c.61-.32,1.2-.68,1.79-1,.23-.14.48-.26.71-.41L98.91,103a37.14,37.14,0,0,0,4.16-4.16l-1.29-6.76c.13-.2.24-.43.37-.64.37-.61.74-1.23,1.08-1.88Zm-7.46-5a28.27,28.27,0,1,1-1.93-19.62A28,28,0,0,1,102.25,82.26Z\"\/><path class=\"cls-2\" d=\"M81.07,52.25c-.77-.2-1.54-.37-2.3-.49A23.61,23.61,0,0,0,52.25,68.94c-.2.76-.36,1.53-.49,2.29A23.61,23.61,0,0,0,68.94,97.75c.76.2,1.53.36,2.29.49a23.55,23.55,0,0,0,27-19.47,23,23,0,0,0,0-7.5A23.52,23.52,0,0,0,81.07,52.25Z\"\/><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/wf-error-badge.svg","ext":"svg","size":9704,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 24.1.0, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 772.86 772.86\"><circle class=\"st0\" cx=\"386.24\" cy=\"383.35\" r=\"367.07\"\/><path class=\"st1\" d=\"M135.67 270.42l19.89 10.06 -2.09 4.12 -48.83-24.7 8.42-16.63c2.57-5.07 5.89-8.43 9.97-10.05 4.08-1.63 8.39-1.29 12.93 1 4.58 2.32 7.4 5.52 8.47 9.61 1.06 4.09 0.24 8.82-2.48 14.18L135.67 270.42zM132.18 268.65l6.33-12.51c2.03-4 2.62-7.53 1.78-10.6 -0.84-3.06-2.96-5.46-6.37-7.18 -3.38-1.71-6.6-2.03-9.66-0.95 -3.06 1.08-5.59 3.53-7.58 7.35l-6.46 12.78L132.18 268.65z\"\/><path class=\"st1\" d=\"M173.84 208.59l-9.98 12.38 17.76 14.32 -2.92 3.63 -42.6-34.34 11.16-13.84c3.66-4.54 7.63-7.21 11.89-7.99 4.26-0.78 8.37 0.42 12.32 3.61 2.73 2.2 4.49 4.94 5.28 8.22 0.8 3.28 0.51 6.59-0.86 9.92l26.73 3.97 0.38 0.31 -3.09 3.83L173.84 208.59zM160.82 218.51l8.89-11.03c2.44-3.02 3.53-6.14 3.29-9.36 -0.24-3.22-1.73-5.93-4.46-8.14 -3.01-2.42-6.11-3.35-9.32-2.78 -3.2 0.57-6.19 2.59-8.98 6.04l-8.18 10.15L160.82 218.51z\"\/><path class=\"st1\" d=\"M230.22 153.92c3.15 3.93 5.23 7.93 6.25 11.99 1.02 4.06 0.91 7.9-0.33 11.53 -1.24 3.62-3.51 6.76-6.82 9.4 -4.99 3.99-10.45 5.43-16.38 4.32 -5.93-1.11-11.32-4.7-16.17-10.77l-3.52-4.4c-3.11-3.89-5.18-7.89-6.21-12 -1.02-4.11-0.92-7.98 0.31-11.61 1.23-3.63 3.49-6.76 6.78-9.39 3.29-2.63 6.82-4.16 10.6-4.58 3.78-0.43 7.52 0.26 11.2 2.06 3.69 1.8 7.08 4.58 10.2 8.35L230.22 153.92zM222.9 152.17c-4.12-5.15-8.5-8.24-13.16-9.3 -4.66-1.05-9.02 0.04-13.07 3.28 -3.97 3.18-5.97 7.17-5.99 11.98 -0.02 4.81 2.07 9.84 6.26 15.08l3.57 4.46c4.05 5.07 8.44 8.14 13.16 9.23 4.72 1.09 9.09 0.02 13.12-3.21 4.09-3.27 6.11-7.28 6.06-12.04 -0.05-4.76-2.16-9.75-6.34-14.97L222.9 152.17z\"\/><path class=\"st1\" d=\"M269.33 102.91l-16.76 8.41 22.79 45.42 -4.13 2.07 -22.79-45.42 -16.73 8.39 -1.75-3.49 37.62-18.88L269.33 102.91z\"\/><path class=\"st1\" d=\"M327.63 110.65l-24.69 6.72 5.86 21.54 28.39-7.73 1.03 3.77 -32.85 8.95 -14.38-52.8 32.67-8.9 1.03 3.77 -28.21 7.68 5.43 19.94 24.7-6.72L327.63 110.65z\"\/><path class=\"st1\" d=\"M390.45 113.31c-0.28 5.79-2.07 10.32-5.38 13.58 -3.3 3.26-7.86 5.07-13.66 5.42 -4.05 0.24-7.69-0.55-10.93-2.39 -3.23-1.84-5.82-4.56-7.74-8.17 -1.92-3.61-3.04-7.8-3.36-12.58l-0.43-7.09c-0.29-4.85 0.3-9.21 1.77-13.06 1.47-3.85 3.74-6.9 6.81-9.13 3.07-2.23 6.67-3.47 10.83-3.72 5.85-0.35 10.57 0.94 14.15 3.89 3.58 2.95 5.81 7.19 6.7 12.74l-4.65 0.28c-1.71-9.21-7.03-13.55-15.96-13.01 -4.95 0.3-8.79 2.39-11.5 6.27 -2.72 3.88-3.88 9.09-3.48 15.62l0.4 6.68c0.38 6.31 2.11 11.25 5.2 14.83 3.09 3.58 7.07 5.23 11.95 4.93 4.83-0.29 8.4-1.67 10.71-4.13 2.31-2.46 3.62-6.02 3.91-10.68L390.45 113.31z\"\/><path class=\"st1\" d=\"M450.7 86.44l-18.56-2.68 -7.26 50.29 -4.58-0.66 7.26-50.29 -18.52-2.67 0.56-3.87 41.66 6.01L450.7 86.44z\"\/><path class=\"st1\" d=\"M494.13 126.12l-24.11-8.6 -7.5 21.03 27.72 9.88 -1.31 3.68 -32.07-11.44 18.38-51.54 31.9 11.37 -1.31 3.68 -27.54-9.82 -6.94 19.47 24.11 8.6L494.13 126.12z\"\/><path class=\"st1\" d=\"M502.25 158.58l28.59-46.66 13.04 7.99c3.82 2.34 6.72 5.31 8.69 8.92 1.97 3.6 2.8 7.54 2.51 11.83 -0.29 4.29-1.71 8.5-4.25 12.65l-2.63 4.29c-2.55 4.17-5.66 7.34-9.33 9.54 -3.67 2.19-7.57 3.22-11.71 3.1 -4.14-0.13-8.2-1.41-12.17-3.84L502.25 158.58zM532.74 117.67l-24.51 39.99 8.85 5.42c4.91 3.01 9.85 3.8 14.82 2.36 4.97-1.44 9.15-4.94 12.56-10.5l2.52-4.1c3.29-5.37 4.46-10.56 3.51-15.58 -0.95-5.02-3.81-9.01-8.58-11.96L532.74 117.67z\"\/><path class=\"st1\" d=\"M573.7 213.78l42.89-33.98 10.03 12.67c3.64 4.6 5.45 8.83 5.44 12.71 -0.01 3.88-1.87 7.28-5.56 10.21 -2.22 1.76-4.63 2.68-7.23 2.78 -2.6 0.09-5.08-0.63-7.46-2.17 1.43 2.93 1.79 5.91 1.09 8.94 -0.7 3.03-2.29 5.53-4.79 7.51 -3.79 3-7.72 4.12-11.78 3.36 -4.07-0.76-7.83-3.32-11.28-7.68L573.7 213.78zM597.17 201.09l-17.53 13.89 8.61 10.87c2.46 3.1 5.19 4.94 8.21 5.5 3.02 0.57 5.93-0.26 8.73-2.48 2.65-2.1 4.05-4.62 4.21-7.58 0.16-2.96-0.97-5.97-3.4-9.03L597.17 201.09zM600.23 198.67l7.84 9.9c2.45 2.98 5.02 4.75 7.71 5.33 2.68 0.58 5.33-0.17 7.95-2.25 2.75-2.18 4.1-4.65 4.05-7.41 -0.05-2.76-1.46-5.87-4.21-9.35l-7.16-9.04L600.23 198.67z\"\/><path class=\"st1\" d=\"M632.98 257.12l34.18 1.28 2.43 4.75 -39.39-2.04 -18.33 9.39 -2.11-4.12 18.33-9.39 21.38-33.12 2.5 4.88L632.98 257.12z\"\/><path class=\"st1\" d=\"M99.71 463.6l-9.61 5.23 9.95-1.21L159.4 463l3.16 8.57 -48.24 34.71 -8.53 5.55 10.97-2.19 57.08-7.51 3.77 10.21 -83.89 9.78 -3.42-9.25 50.25-36.59 5.42-3.38 -6.32 0.95 -62.18 4.28 -3.42-9.25 70.12-47.06 3.75 10.15L99.71 463.6z\"\/><path class=\"st1\" d=\"M196.63 597.31c-5.99 5.37-12.12 9.04-18.39 11.03 -6.27 1.98-12.24 2.18-17.9 0.59 -5.66-1.59-10.7-4.85-15.11-9.77 -4.31-4.82-6.95-10.14-7.92-15.99 -0.97-5.84-0.19-11.75 2.35-17.74 2.54-5.98 6.66-11.58 12.38-16.8l4.41-3.95c5.88-5.27 11.99-8.9 18.32-10.89 6.34-1.99 12.38-2.19 18.12-0.6 5.74 1.59 10.77 4.8 15.08 9.61 4.39 4.9 7.07 10.28 8.05 16.13 0.98 5.86 0.13 11.81-2.56 17.84 -2.69 6.04-7.01 11.73-12.98 17.07L196.63 597.31zM193.4 585.75c7.25-6.49 11.51-12.93 12.78-19.32 1.27-6.39-0.44-12.19-5.13-17.43 -4.56-5.1-10.09-7.37-16.59-6.82 -6.5 0.55-13.23 3.86-20.19 9.95l-4.49 4.02c-7.03 6.3-11.23 12.72-12.6 19.27 -1.37 6.55 0.26 12.42 4.9 17.6 4.66 5.21 10.17 7.54 16.52 7 6.35-0.54 13.11-3.94 20.26-10.2L193.4 585.75z\"\/><path class=\"st1\" d=\"M245.54 636.08l-16.7-9.63 -16.59 28.76 -9.43-5.44 41.01-71.1 23.54 13.58c8.01 4.62 13.12 10 15.33 16.13 2.21 6.13 1.31 12.68-2.71 19.65 -2.55 4.43-5.98 7.59-10.26 9.5 -4.29 1.91-9.04 2.45-14.24 1.61l-0.71 39.81 -0.34 0.59 -10.06-5.8L245.54 636.08zM233.26 618.78l14.41 8.31c4.66 2.69 9.05 3.61 13.2 2.79 4.14-0.83 7.38-3.26 9.71-7.31 2.54-4.4 3.18-8.53 1.91-12.39 -1.27-3.86-4.36-7.23-9.29-10.12l-14.36-8.28L233.26 618.78z\"\/><path class=\"st1\" d=\"M291.35 692.84l17.02-80.3 22.67 4.8c6.98 1.48 12.83 4.33 17.55 8.56 4.71 4.23 7.93 9.5 9.64 15.82 1.71 6.32 1.81 13.17 0.28 20.57l-1.09 5.13c-1.61 7.57-4.47 13.9-8.61 18.98 -4.13 5.08-9.23 8.57-15.3 10.47 -6.07 1.9-12.72 2.13-19.94 0.67L291.35 692.84zM317.12 623.45l-13.35 62.98 11.14 2.36c8.16 1.73 15.05 0.54 20.67-3.58s9.42-10.86 11.41-20.25l0.99-4.69c1.93-9.13 1.3-16.67-1.91-22.64 -3.21-5.97-8.74-9.82-16.59-11.56L317.12 623.45z\"\/><path class=\"st1\" d=\"M434.33 666.38l-34.31 3 3.16 36.11 -10.78 0.94 -7.15-81.77 50.66-4.43 0.77 8.82 -39.87 3.48 2.45 28.02 34.31-3L434.33 666.38z\"\/><path class=\"st1\" d=\"M510.32 640.43l-33.18 12.83 10.49 27.13 38.54-14.9 3.19 8.26 -48.64 18.8 -29.6-76.56 48.11-18.6 3.19 8.26 -38.02 14.7 9.53 24.66 33.18-12.83L510.32 640.43z\"\/><path class=\"st1\" d=\"M614.06 613.59l-8.44 6.87 -71.98-22.95 39.94 49.05 -8.44 6.87 -51.83-63.65 8.44-6.87 72.25 23.1 -40.12-49.26 8.35-6.8L614.06 613.59z\"\/><path class=\"st1\" d=\"M654.98 512.51c6.83 5.46 10.82 11.72 11.97 18.79 1.15 7.07-0.65 14.4-5.38 21.99 -5.13 8.23-12.19 12.98-21.18 14.26 -8.99 1.28-18.43-1.16-28.32-7.33l-6.7-4.18c-6.47-4.04-11.44-8.75-14.91-14.12 -3.47-5.37-5.2-11-5.18-16.88 0.01-5.88 1.76-11.61 5.24-17.19 4.62-7.4 10.38-12.04 17.29-13.93 6.91-1.89 14.25-0.92 22.01 2.9l-5.76 9.23c-6.06-2.67-11.17-3.46-15.33-2.35 -4.16 1.11-7.73 4.05-10.71 8.84 -3.66 5.87-4.36 11.82-2.1 17.86 2.26 6.04 7.4 11.56 15.41 16.55l6.75 4.21c7.56 4.72 14.57 6.89 21 6.52s11.43-3.39 14.97-9.07c3.18-5.1 4.47-9.74 3.86-13.91 -0.61-4.17-3.51-8.49-8.69-12.96L654.98 512.51z\"\/><path class=\"st1\" d=\"M667.34 432.9l-8.96 34.42 28.15 7.33 10.42-39.99 8.56 2.23 -13.14 50.46 -79.43-20.68 13-49.92 8.57 2.23 -10.27 39.44 25.59 6.66 8.96-34.42L667.34 432.9z\"\/><path class=\"st1\" d=\"M555.22 263.5c-89.43-2.89-168.99-50.48-168.99-50.48s-79.55 47.6-168.98 50.48c0 0-19.2 76.66-9.83 165.04 7.5-3.84 19.65-9.56 35.94-15.59l0-66.2 -4.91 0.02 12.05-27.68 12.56 27.58 -4.9 0.02v61.1c13.75-4.5 29.67-8.92 47.58-12.65v-72.93l-4.91 0.02 12.05-27.68 12.56 27.58 -4.9 0.02v70.17c16.8-2.93 35.1-5.17 54.77-6.28 1.17-16.26 1.74-31.12 1.79-41.18 0-0.02 0-0.04 0-0.06 0.08-16.78-0.76-25.82-0.76-25.82 -0.56-0.67-1.05-1.4-1.46-2.18 -0.89-1.67-1.42-3.56-1.42-5.59 0-0.64 0.08-1.26 0.18-1.87 0.01-0.05 0.01-0.11 0.02-0.16l-6.42-0.03 0.18-0.4 18.81-41.33 0.01-0.01 0.01 0.01 18.81 41.33 0.18 0.4 -6.42 0.03c0.01 0.05 0.01 0.11 0.02 0.16 0.1 0.61 0.18 1.23 0.18 1.87 0 2.03-0.53 3.92-1.42 5.59 -0.41 0.78-0.9 1.51-1.46 2.18 0 0-0.84 9.04-0.76 25.82 0 0.02 0 0.04 0 0.06 0.05 10.06 0.61 24.92 1.79 41.18 19.67 1.11 37.97 3.36 54.77 6.28v-70.17l-4.9-0.02 12.56-27.58 12.05 27.68 -4.91-0.02v72.93c17.91 3.72 33.83 8.15 47.58 12.65v-61.1l-4.9-0.02 12.56-27.58 12.05 27.68 -4.9-0.02v66.2c16.29 6.03 28.45 11.75 35.94 15.59C574.42 340.17 555.22 263.5 555.22 263.5z\"\/><path class=\"st1\" d=\"M529.11 497.7h8.75v0h2.08 5.4v0h4.67c2.95-9.58 5.5-19.42 7.64-29.05l0 0c2.67-9.65 4.3-17.58 5.28-23.31 0 0 0.04-0.22 0.05-0.32 0.06-0.36 0.12-0.72 0.18-1.06 -5.22-2.82-16.88-8.73-34.05-15.35V497.7z\"\/><path class=\"st1\" d=\"M466.74 410.08v87.62h8.74v0h16.14v0h8.44 14.25l0-74.45C500.77 418.64 484.81 414 466.74 410.08z\"\/><path class=\"st1\" d=\"M398.38 400.86c0.04 0.36 1.26 10.03 1.45 11.65 3 22.36 9.06 57.64 15.25 85.14h-0.31c0 0.02 0.01 0.03 0.01 0.05h30.53 6.63v-90.58c-16.42-2.99-34.34-5.3-53.58-6.49C398.37 400.71 398.37 400.79 398.38 400.86z\"\/><path class=\"st1\" d=\"M320.54 497.7h6.63 30.52c0-0.02 0.01-0.03 0.01-0.05h-0.31c6.19-27.49 12.25-62.77 15.25-85.14 0.19-1.63 1.41-11.29 1.45-11.65 0.01-0.08 0.01-0.15 0.02-0.23 -19.37 1.19-37.31 3.53-53.58 6.48V497.7z\"\/><path class=\"st1\" d=\"M258.16 497.7h14.25 8.44v0H297v0h8.74v-87.65c-18.72 4.04-34.75 8.75-47.58 13.11V497.7z\"\/><path class=\"st1\" d=\"M209.32 443.95c0.06 0.35 0.12 0.7 0.18 1.07 0.02 0.11 0.03 0.22 0.05 0.32 0 0 0.01 0 0.01 0 0.98 5.73 2.61 13.65 5.28 23.31l0 0c2.14 9.63 4.69 19.48 7.64 29.05h4.67v0h7.48v0h8.75v-69.17C226.25 435.15 214.56 441.11 209.32 443.95 209.32 443.95 209.32 443.95 209.32 443.95z\"\/><\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/icons\/check-premium.svg","ext":"svg","size":774,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\"><svg width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\"><path d=\"M98.287,21.025l-7.823,-7.812c-1.066,-1.092 -2.528,-1.708 -4.054,-1.708c-1.525,0 -2.988,0.616 -4.053,1.708l-46.012,46.012l-18.713,-18.712c-1.066,-1.09 -2.529,-1.704 -4.053,-1.704c-1.525,0 -2.987,0.614 -4.054,1.704l-7.812,7.834c-1.092,1.065 -1.708,2.528 -1.708,4.053c0,1.526 0.616,2.988 1.708,4.054l30.551,30.551c1.067,1.089 2.529,1.703 4.054,1.703c1.524,0 2.986,-0.614 4.053,-1.703l57.916,-57.862c1.092,-1.065 1.708,-2.528 1.708,-4.053c0,-1.526 -0.616,-2.988 -1.708,-4.054l0,-0.011l0,0Z\" fill=\"#137D8E\"\/><\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/icons\/check-response.svg","ext":"svg","size":774,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\"><svg width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\"><path d=\"M98.287,21.025l-7.823,-7.812c-1.066,-1.092 -2.528,-1.708 -4.054,-1.708c-1.525,0 -2.988,0.616 -4.053,1.708l-46.012,46.012l-18.713,-18.712c-1.066,-1.09 -2.529,-1.704 -4.053,-1.704c-1.525,0 -2.987,0.614 -4.054,1.704l-7.812,7.834c-1.092,1.065 -1.708,2.528 -1.708,4.053c0,1.526 0.616,2.988 1.708,4.054l30.551,30.551c1.067,1.089 2.529,1.703 4.054,1.703c1.524,0 2.986,-0.614 4.053,-1.703l57.916,-57.862c1.092,-1.065 1.708,-2.528 1.708,-4.053c0,-1.526 -0.616,-2.988 -1.708,-4.054l0,-0.011l0,0Z\" fill=\"#6453A3\"\/><\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/icons\/check.svg","ext":"svg","size":774,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\"><svg width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\"><path d=\"M98.287,21.025l-7.823,-7.812c-1.066,-1.092 -2.528,-1.708 -4.054,-1.708c-1.525,0 -2.988,0.616 -4.053,1.708l-46.012,46.012l-18.713,-18.712c-1.066,-1.09 -2.529,-1.704 -4.053,-1.704c-1.525,0 -2.987,0.614 -4.054,1.704l-7.812,7.834c-1.092,1.065 -1.708,2.528 -1.708,4.053c0,1.526 0.616,2.988 1.708,4.054l30.551,30.551c1.067,1.089 2.529,1.703 4.054,1.703c1.524,0 2.986,-0.614 4.053,-1.703l57.916,-57.862c1.092,-1.065 1.708,-2.528 1.708,-4.053c0,-1.526 -0.616,-2.988 -1.708,-4.054l0,-0.011l0,0Z\" fill=\"#00709e\"\/><\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/icons\/check-care.svg","ext":"svg","size":774,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\"><svg width=\"50px\" height=\"50px\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\"><path d=\"M98.287,21.025l-7.823,-7.812c-1.066,-1.092 -2.528,-1.708 -4.054,-1.708c-1.525,0 -2.988,0.616 -4.053,1.708l-46.012,46.012l-18.713,-18.712c-1.066,-1.09 -2.529,-1.704 -4.053,-1.704c-1.525,0 -2.987,0.614 -4.054,1.704l-7.812,7.834c-1.092,1.065 -1.708,2.528 -1.708,4.053c0,1.526 0.616,2.988 1.708,4.054l30.551,30.551c1.067,1.089 2.529,1.703 4.054,1.703c1.524,0 2.986,-0.614 4.053,-1.703l57.916,-57.862c1.092,-1.065 1.708,-2.528 1.708,-4.053c0,-1.526 -0.616,-2.988 -1.708,-4.054l0,-0.011l0,0Z\" fill=\"#29957C\"\/><\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/wf-horizontal.svg","ext":"svg","size":13219,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- Generator: Adobe Illustrator 23.0.4, SVG Export Plug-In . SVG Version: 6.00 Build 0)  -->\n<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" x=\"0px\" y=\"0px\"\n\t viewBox=\"0 0 2230 399\" style=\"enable-background:new 0 0 2230 399;\" xml:space=\"preserve\">\n<style type=\"text\/css\">\n\t.st0{fill:#00719E;}\n\t.st1{fill:#2E2E2E;}\n\t.st2{fill:#FFFFFF;}\n\t.st3{fill:#218DC1;}\n\t.st4{fill:#1A719D;}\n\t.st5{fill:#2B2C2B;}\n<\/style>\n<g>\n\t<path d=\"M772.6,373.8l2.6-2.9c5.8,5.3,11.1,7.8,18.8,7.8c7.9,0,13.3-4.4,13.3-10.4v-0.2c0-5.6-2.9-8.8-14.9-11.2\n\t\tc-12.6-2.6-17.7-6.8-17.7-14.8V342c0-7.8,7.1-13.8,16.9-13.8c7.7,0,12.7,2.1,18,6.4l-2.5,3.1c-5-4.3-9.9-5.9-15.7-5.9\n\t\tc-7.7,0-12.8,4.4-12.8,9.9v0.2c0,5.6,2.9,8.9,15.3,11.5c12.2,2.5,17.3,6.8,17.3,14.5v0.2c0,8.5-7.3,14.3-17.4,14.3\n\t\tC785.3,382.3,778.9,379.5,772.6,373.8\"\/>\n\t<path d=\"M853,360.6c-0.5-7.7-5-14.9-13.7-14.9c-7.6,0-13.4,6.4-14.1,14.9H853z M821.3,362.4v-0.2c0-11.1,7.8-20,18.2-20\n\t\tc10.7,0,17.6,8.7,17.6,20c0,0.7,0,0.9-0.1,1.5h-31.7c0.7,9.5,7.5,15.1,15,15.1c5.9,0,10-2.6,13.1-6l2.6,2.3\n\t\tc-3.9,4.2-8.5,7.2-15.8,7.2C830,382.4,821.3,374.4,821.3,362.4\"\/>\n\t<path d=\"M865.8,362.5v-0.2c0-10.7,8.6-20,19.5-20c7.2,0,11.7,3.3,15.3,7.1l-2.6,2.7c-3.3-3.4-7.1-6.3-12.8-6.3\n\t\tc-8.7,0-15.5,7.3-15.5,16.4v0.2c0,9.2,7,16.6,15.8,16.6c5.4,0,9.6-2.8,12.8-6.4l2.6,2.3c-3.9,4.4-8.6,7.6-15.6,7.6\n\t\tC874.3,382.4,865.8,373.2,865.8,362.5\"\/>\n\t<path d=\"M911.3,366.6v-23.4h3.7V366c0,7.9,4.4,13.1,12.2,13.1c7.5,0,13.3-5.7,13.3-13.7v-22.1h3.7v38.3h-3.7v-7.1\n\t\tc-2.6,4.5-6.8,8-13.8,8C916.9,382.4,911.3,375.8,911.3,366.6\"\/>\n\t<path d=\"M958.8,343.2h3.7v10.9c3-6.8,9.4-11.8,17-11.5v4.1h-0.4c-8.9,0-16.6,6.7-16.6,19.1v15.7h-3.7V343.2z\"\/>\n\t<path d=\"M990.1,343.2h3.7v38.3h-3.7V343.2z M989.6,328.2h4.6v5h-4.6V328.2z\"\/>\n\t<path d=\"M1009,343.2h3.7v7.1c2.6-4.5,6.8-8,13.8-8c9.7,0,15.3,6.6,15.3,15.8v23.4h-3.7v-22.7c0-7.9-4.4-13.1-12.2-13.1\n\t\tc-7.5,0-13.3,5.7-13.3,13.7v22.1h-3.7V343.2z\"\/>\n\t<path d=\"M1087.9,360.6v-0.2c0-8.9-7.9-14.6-15.8-14.6c-8,0-14.8,5.6-14.8,14.5v0.2c0,8.6,6.9,14.6,14.8,14.6\n\t\tC1080,375.1,1087.9,369.3,1087.9,360.6 M1055,387.8l2.2-3c4.6,3.5,9.8,5.4,15.5,5.4c8.8,0,15-5,15-14.9v-5.6\n\t\tc-3.3,4.7-8.4,8.9-16,8.9c-9.2,0-18.4-7.1-18.4-18v-0.1c0-11,9.2-18.2,18.4-18.2c7.7,0,12.8,4.1,16,8.6v-7.7h3.7v32.3\n\t\tc0,5.6-1.8,9.9-4.9,13c-3.3,3.3-8.3,5.1-13.9,5.1C1066.2,393.7,1060.2,391.7,1055,387.8\"\/>\n\t<path d=\"M1126.3,392.1l1.3-3.2c2,1,3.7,1.4,6.5,1.4c4,0,6.6-2.3,9.5-9l-18.4-38.1h4.3l15.9,34.2l13.8-34.2h4.1l-16.6,39.6\n\t\tc-3.4,8-7.3,10.9-12.8,10.9C1131,393.7,1128.9,393.2,1126.3,392.1\"\/>\n\t<path d=\"M1204.6,362.5v-0.2c0-9.2-6.9-16.6-15.8-16.6c-9.1,0-15.6,7.4-15.6,16.4v0.2c0,9.2,6.9,16.6,15.8,16.6\n\t\tC1198.1,379,1204.6,371.5,1204.6,362.5 M1169.3,362.5v-0.2c0-10.7,8.3-20,19.7-20c11.3,0,19.6,9.2,19.6,19.9v0.2\n\t\tc0,10.7-8.3,20-19.7,20C1177.5,382.4,1169.3,373.2,1169.3,362.5\"\/>\n\t<path d=\"M1219.9,366.6v-23.4h3.7V366c0,7.9,4.4,13.1,12.2,13.1c7.5,0,13.3-5.7,13.3-13.7v-22.1h3.7v38.3h-3.7v-7.1\n\t\tc-2.6,4.5-6.8,8-13.8,8C1225.5,382.4,1219.9,375.8,1219.9,366.6\"\/>\n\t<path d=\"M1267.4,343.2h3.7v10.9c3-6.8,9.4-11.8,17-11.5v4.1h-0.4c-8.9,0-16.6,6.7-16.6,19.1v15.7h-3.7V343.2z\"\/>\n\t<polygon class=\"st0\" points=\"1317.2,329 1327.1,329 1339.7,367.9 1352.6,328.8 1360.4,328.8 1373.3,367.9 1385.8,329 1395.5,329 \n\t\t1377.2,381.9 1369.3,381.9 1356.3,344.1 1343.4,381.9 1335.5,381.9 \t\"\/>\n\t<path class=\"st0\" d=\"M1430.8,361.9v-0.2c0-7-5-12.8-12.2-12.8c-7.3,0-11.9,5.7-11.9,12.6v0.2c0,6.9,5,12.8,12.1,12.8\n\t\tC1426.1,374.5,1430.8,368.7,1430.8,361.9 M1397.6,361.9v-0.2c0-11.3,9-20.7,21.2-20.7c12.2,0,21.1,9.2,21.1,20.6v0.2\n\t\tc0,11.3-9,20.6-21.2,20.6C1406.5,382.4,1397.6,373.2,1397.6,361.9\"\/>\n\t<path class=\"st0\" d=\"M1449.8,341.9h9.1v8.9c2.5-5.9,7.1-10,14-9.7v9.6h-0.5c-8,0-13.5,5.2-13.5,15.7v15.1h-9.1V341.9z\"\/>\n\t<path class=\"st0\" d=\"M1510.5,361.8v-0.2c0-7.7-5.4-12.7-11.5-12.7c-6.2,0-11.4,4.8-11.4,12.7v0.2c0,7.7,5.3,12.7,11.4,12.7\n\t\tC1505.1,374.4,1510.5,369.3,1510.5,361.8 M1478.4,361.8v-0.2c0-13.1,8.9-20.6,18.4-20.6c6.5,0,10.7,3.3,13.5,7v-21.3h9.1v54.8h-9.1\n\t\tv-6.6c-2.9,4.1-7.1,7.4-13.5,7.4C1487.5,382.3,1478.4,374.9,1478.4,361.8\"\/>\n\t<path class=\"st0\" d=\"M1552.5,356.3c7,0,11.3-3.9,11.3-9.4v-0.1c0-6.2-4.4-9.4-11.3-9.4h-10.7v18.9H1552.5z M1532.5,329h20.7\n\t\tc12.2,0,20,7,20,17.6v0.2c0,11.8-9.5,17.9-21,17.9h-10.4v16.9h-9.2V329z\"\/>\n\t<path class=\"st0\" d=\"M1582.3,341.9h9.1v8.9c2.5-5.9,7.1-10,14-9.7v9.6h-0.5c-8,0-13.5,5.2-13.5,15.7v15.1h-9.1V341.9z\"\/>\n\t<path class=\"st0\" d=\"M1639.9,358.9c-0.6-5.9-4.1-10.4-10.1-10.4c-5.6,0-9.5,4.3-10.3,10.4H1639.9z M1610.6,361.8v-0.2\n\t\tc0-11.3,8-20.6,19.4-20.6c12.6,0,19,9.9,19,21.3c0,0.8-0.1,1.7-0.2,2.6h-29.1c1,6.5,5.6,10.1,11.4,10.1c4.4,0,7.6-1.7,10.7-4.7\n\t\tl5.3,4.7c-3.8,4.5-8.9,7.4-16.2,7.4C1619.4,382.4,1610.6,374.1,1610.6,361.8\"\/>\n\t<path class=\"st0\" d=\"M1655.6,376.3l4.1-6.2c4.3,3.2,8.9,4.9,13,4.9c3.9,0,6.2-1.7,6.2-4.3v-0.2c0-3.1-4.2-4.1-8.9-5.6\n\t\tc-5.9-1.7-12.4-4.1-12.4-11.6v-0.2c0-7.5,6.2-12.1,14.1-12.1c5,0,10.4,1.7,14.6,4.5l-3.6,6.5c-3.8-2.3-7.9-3.8-11.2-3.8\n\t\tc-3.5,0-5.6,1.6-5.6,4v0.2c0,2.9,4.3,4.1,8.9,5.6c5.8,1.8,12.3,4.4,12.3,11.6v0.2c0,8.3-6.5,12.5-14.7,12.5\n\t\tC1666.8,382.3,1660.5,380.2,1655.6,376.3\"\/>\n\t<path class=\"st0\" d=\"M1693.1,376.3l4.1-6.2c4.3,3.2,8.9,4.9,13,4.9c3.9,0,6.2-1.7,6.2-4.3v-0.2c0-3.1-4.2-4.1-8.9-5.6\n\t\tc-5.9-1.7-12.4-4.1-12.4-11.6v-0.2c0-7.5,6.2-12.1,14.1-12.1c5,0,10.4,1.7,14.6,4.5l-3.6,6.5c-3.8-2.3-7.9-3.8-11.2-3.8\n\t\tc-3.5,0-5.6,1.6-5.6,4v0.2c0,2.9,4.3,4.1,8.9,5.6c5.8,1.8,12.3,4.4,12.3,11.6v0.2c0,8.3-6.5,12.5-14.7,12.5\n\t\tC1704.3,382.3,1698.1,380.2,1693.1,376.3\"\/>\n\t<polygon points=\"1755.8,343.2 1760,343.2 1771.5,376.9 1783.1,343.1 1786,343.1 1797.6,376.9 1809.1,343.2 1813.1,343.2 \n\t\t1799.1,381.8 1795.9,381.8 1784.5,349 1773,381.8 1769.9,381.8 \t\"\/>\n\t<path d=\"M1851.7,360.6c-0.5-7.7-5-14.9-13.7-14.9c-7.6,0-13.4,6.4-14.1,14.9H1851.7z M1820,362.4v-0.2c0-11.1,7.8-20,18.2-20\n\t\tc10.7,0,17.6,8.7,17.6,20c0,0.7,0,0.9-0.1,1.5h-31.7c0.7,9.5,7.5,15.1,15,15.1c5.9,0,10-2.6,13.1-6l2.6,2.3\n\t\tc-3.9,4.2-8.5,7.2-15.8,7.2C1828.7,382.4,1820,374.4,1820,362.4\"\/>\n\t<path d=\"M1901.3,362.5v-0.2c0-10.1-7-16.5-15-16.5c-8,0-15.6,6.7-15.6,16.4v0.2c0,9.8,7.7,16.4,15.6,16.4\n\t\tC1894.6,378.9,1901.3,372.8,1901.3,362.5 M1870.9,373.2v8.3h-3.7v-54.8h3.7v25.1c3.3-5,8.2-9.5,15.8-9.5c9.2,0,18.6,7.4,18.6,19.9\n\t\tv0.2c0,12.5-9.4,20-18.6,20C1879,382.4,1874,378.1,1870.9,373.2\"\/>\n\t<path d=\"M1914.2,376.7l2.2-2.9c4.2,3.2,8.9,5,13.7,5c5.2,0,9.2-2.9,9.2-7.3v-0.2c0-4.5-4.8-6.2-10.1-7.7\n\t\tc-6.2-1.8-13.1-3.7-13.1-10.5v-0.2c0-6.2,5.2-10.6,12.6-10.6c4.6,0,9.8,1.7,13.6,4.2l-2,3.1c-3.5-2.3-7.7-3.8-11.8-3.8\n\t\tc-5.3,0-8.7,2.9-8.7,6.7v0.2c0,4.3,5.2,5.9,10.7,7.4c6.2,1.7,12.6,4,12.6,10.7v0.2c0,6.8-5.9,11.2-13.2,11.2\n\t\tC1924.3,382.3,1918.2,380,1914.2,376.7\"\/>\n\t<path d=\"M1956,343.2h3.7v38.3h-3.7V343.2z M1955.6,328.2h4.6v5h-4.6V328.2z\"\/>\n\t<path d=\"M1977,371.7v-25.1h-5.6v-3.4h5.6V331h3.7v12.2h13.4v3.4h-13.4v24.7c0,5.5,3.2,7.4,7.7,7.4c1.9,0,3.5-0.4,5.6-1.4v3.5\n\t\tc-2,0.9-3.8,1.4-6.2,1.4C1981.8,382.2,1977,379,1977,371.7\"\/>\n\t<path d=\"M2033.7,360.6c-0.5-7.7-5-14.9-13.7-14.9c-7.6,0-13.4,6.4-14.1,14.9H2033.7z M2001.9,362.4v-0.2c0-11.1,7.8-20,18.2-20\n\t\tc10.7,0,17.6,8.7,17.6,20c0,0.7,0,0.9-0.1,1.5h-31.7c0.7,9.5,7.5,15.1,15,15.1c5.9,0,10-2.6,13.1-6l2.6,2.3\n\t\tc-3.9,4.2-8.5,7.2-15.8,7.2C2010.7,382.4,2001.9,374.4,2001.9,362.4\"\/>\n\t<path class=\"st1\" d=\"M2141.5,196.9c-1.1-8.3-4.4-15.4-9.8-21.3c-5.4-5.9-12.8-8.8-22.2-8.8c-17.5,0-27.7,10-30.6,30.1H2141.5z\n\t\t M2150.6,243.3l37.1,11.9c-15.5,24.4-39.8,36.6-72.9,36.6c-26.4,0-46.9-6.9-61.7-20.9c-14.8-13.9-22.2-32.2-22.2-54.8\n\t\tc0-23.1,7.6-42.3,22.9-57.8c15.2-15.4,34.6-23.2,58.2-23.2c17.1,0,31.9,4.3,44.3,13c12.5,8.6,21.1,19.4,25.9,32.3\n\t\tc4.8,12.9,7.3,27.2,7.3,43.1h-111.4c0.7,13.6,5,23.2,12.9,28.9c7.9,5.7,16.2,8.5,24.9,8.5C2127.4,260.9,2139,255,2150.6,243.3\n\t\t M2006.5,138.8v60.7h-34c-7.7-16.7-19.8-25-36.3-25c-10.5,0-18.9,3.5-25.1,10.4c-6.2,7-9.3,16.2-9.3,27.9c0,14.1,3.3,24.5,9.9,31.3\n\t\tc6.6,6.7,14.7,10.1,24.2,10.1c7.6,0,14.8-2.2,21.6-6.6c6.8-4.4,12.2-10.2,16.4-17.4l37.1,16.3c-13.8,30.1-38,45.2-72.6,45.2\n\t\tc-26.1,0-46.8-7.1-62.3-21.3c-15.5-14.2-23.2-33.2-23.2-57c0-23.8,7.6-42.5,22.8-56.3c15.2-13.8,32.9-20.6,53.1-20.6\n\t\tc16.2,0,31.3,4.9,45.3,14.7v-12.4H2006.5z M1654.3,173.3v-34.4h70.6v13.9c14.4-10.8,29-16.2,43.9-16.2c30.2,0,45.3,19.3,45.3,57.8\n\t\tv59.6h22.6v34.4h-70.3v-90.5c0-8.1-1.1-13.7-3.3-16.7c-2.2-3-5.8-4.5-10.9-4.5c-8.9,0-17.9,3.2-27.2,9.7v67.5h23v34.4h-93.6v-34.4\n\t\th22.9v-80.6H1654.3z M1584.4,196.9c-1.1-8.3-4.4-15.4-9.8-21.3c-5.4-5.9-12.8-8.8-22.2-8.8c-17.5,0-27.7,10-30.6,30.1H1584.4z\n\t\t M1593.5,243.3l37.1,11.9c-15.5,24.4-39.8,36.6-72.9,36.6c-26.4,0-46.9-6.9-61.7-20.9c-14.8-13.9-22.2-32.2-22.2-54.8\n\t\tc0-23.1,7.6-42.3,22.9-57.8c15.2-15.4,34.6-23.2,58.2-23.2c17.1,0,31.9,4.3,44.3,13c12.5,8.6,21.1,19.4,25.9,32.3\n\t\tc4.8,12.9,7.3,27.2,7.3,43.1H1521c0.7,13.6,5,23.2,12.9,28.9c7.9,5.7,16.2,8.5,24.9,8.5C1570.3,260.9,1581.8,255,1593.5,243.3\n\t\t M1452.5,253.9v34.4h-92.8v-34.4h21.6v-80.6h-20.1v-34.4h20.1v-13.7c0-15.8,4.9-28.9,14.6-39.5c9.7-10.6,24.2-15.8,43.5-15.8\n\t\tc23.4,0,40,7,49.9,21l-34.6,27c-3.1-10.7-7.5-16.1-13.3-16.1c-8.2,0-12.4,6.9-12.4,20.7v16.4h23.5v34.4H1429v80.6H1452.5z\"\/>\n\t<path class=\"st0\" d=\"M1287.6,213.3c0-14.3-3.1-24.5-9.2-30.6c-6.1-6.1-13.1-9.1-20.9-9.1c-9.4,0-16.6,3.6-21.7,10.9\n\t\tc-5.1,7.3-7.6,16.8-7.6,28.7c0,11.2,2.5,20.7,7.6,28.3c5,7.7,12.4,11.5,21.9,11.5c7.9,0,14.9-3.1,20.9-9.3\n\t\tC1284.6,237.4,1287.6,227.3,1287.6,213.3 M1359.4,253.9v34.4h-72.3v-17.8c-13.3,13.3-27.7,20-43.3,20c-18.6,0-34.1-7.6-46.3-22.7\n\t\tc-12.3-15.1-18.4-33.5-18.4-55c0-21.8,6.3-40.2,18.8-55.2c12.6-15,27.9-22.5,46-22.5c17.4,0,31.8,6.8,43.1,20.3v-47.5h-23.3V73.5\n\t\th71.1v180.4H1359.4z M1139.2,253.9v34.4H1034v-34.4h27.6v-80.6h-25.9v-34.4h69.7v38c2.7-10.9,8.8-20.4,18.3-28.3\n\t\tc9.5-8,20.8-12,33.8-12c2.2,0,4.7,0.1,7.7,0.2v45.1c-12,0-21.9,1.3-29.5,4c-7.6,2.7-13.9,8.6-18.8,17.6c-4.9,9.1-7.4,19.8-7.4,32.1\n\t\tv18.4H1139.2z M934.7,254.7c8.9,0,16-3.4,21.5-10.2c5.5-6.8,8.3-17.5,8.3-32c0-12.8-2.7-22.7-8-29.9c-5.3-7.2-12.6-10.7-21.8-10.7\n\t\tc-19.7,0-29.5,14.2-29.5,42.6c0,11.6,2.4,21.2,7.3,28.8C917.4,250.9,924.8,254.7,934.7,254.7 M934.8,291.7c-22,0-40.6-7-55.8-20.9\n\t\tc-15.2-14-22.8-33.1-22.8-57.4c0-24.3,7.6-43.4,22.8-57.4c15.2-14,33.8-20.9,55.8-20.9c22.1,0,40.8,7,55.9,20.9\n\t\tc15.1,14,22.7,33.1,22.7,57.4c0,24-7.5,43-22.5,57.1C976,284.7,957.3,291.7,934.8,291.7 M646.3,289.7L585,109.8h-22.7V73.5h96.8\n\t\tv36.3h-22.2L671.8,213l32.7-103.2h-19.5V73.5h77.2v36.3h-19.9L777.6,213l33.8-103.2h-21.5V73.5h86v36.3h-23.3l-59.3,179.9h-40.2\n\t\tl-33.8-98.1l-32,98.1H646.3z\"\/>\n\t<g>\n\t\t<path class=\"st2\" d=\"M238.5,280.2C238.5,280.2,238.6,280.2,238.5,280.2C238.6,280.2,238.5,280.2,238.5,280.2L238.5,280.2z\"\/>\n\t\t<path class=\"st3\" d=\"M257.4,79.6L257.4,79.6l26,57.2l0.2,0.5l-8.9,0c0,0.1,0,0.1,0,0.2c0.1,0.8,0.3,1.7,0.3,2.6\n\t\t\tc0,2.8-0.7,5.4-2,7.7c-0.6,1.1-1.2,2.1-2,3c0,0-1.2,12.5-1,35.7c0,0,0,0.1,0,0.1c0.1,13.9,0.8,34.5,2.5,56.9\n\t\t\tc27.2,1.5,52.5,4.6,75.7,8.7l0-97l-6.8,0l17.4-38.1l16.7,38.3l-6.8,0l0,100.9c24.8,5.1,46.8,11.3,65.8,17.5l0-84.5l-6.8,0\n\t\t\tl17.4-38.1l16.7,38.3l-6.8,0l0,91.5c22.5,8.3,39.3,16.2,49.7,21.6c13-122.2-13.6-228.2-13.6-228.2c-123.7-4-233.7-69.8-233.7-69.8\n\t\t\tV79.6z\"\/>\n\t\t<path class=\"st3\" d=\"M455,302.5l0,95.5h12.1v0h2.9h7.5v0h6.5c4.1-13.2,7.6-26.9,10.6-40.2l0,0c3.7-13.3,5.9-24.3,7.3-32.2\n\t\t\tc0,0,0.1-0.3,0.1-0.4c0.1-0.5,0.2-1,0.2-1.5C494.8,319.8,478.7,311.6,455,302.5z\"\/>\n\t\t<path class=\"st3\" d=\"M368.7,276.8l0,121.2h12.1v0h22.3v0h11.7h19.7l0-103C415.8,288.7,393.7,282.3,368.7,276.8z\"\/>\n\t\t<path class=\"st3\" d=\"M348.3,398V272.7c-22.7-4.1-47.5-7.3-74.1-9c0,0.1,0,0.2,0,0.3c0.1,0.5,1.7,13.9,2,16.1\n\t\t\tc4.1,30.9,12.5,79.7,21.1,117.7h-0.4c0,0,0,0,0,0.1v0h42.2v0l0,0H348.3z\"\/>\n\t\t<path class=\"st4\" d=\"M217.5,397.9c8.6-38,16.9-86.8,21.1-117.7c0,0-0.1,0-0.1,0l0,0c0,0,0.1,0,0.1,0c0.3-2.2,2-15.6,2-16.1\n\t\t\tc0-0.1,0-0.2,0-0.3c-26.8,1.7-51.6,4.9-74.1,9V398v0h9.2v0h42.2c0,0,0,0,0,0c0,0,0,0,0-0.1H217.5z\"\/>\n\t\t<path class=\"st4\" d=\"M59.8,280.8l0-91.5l-6.8,0L69.7,151l17.4,38.1l-6.8,0l0,84.5c19-6.2,41-12.3,65.8-17.5l0-100.9l-6.8,0\n\t\t\tl16.7-38.3l17.4,38.1l-6.8,0l0,97c23.2-4,48.5-7.2,75.7-8.7c1.6-22.5,2.4-43,2.5-56.9c0,0,0-0.1,0-0.1c0.1-23.2-1-35.7-1-35.7\n\t\t\tc-0.8-0.9-1.4-1.9-2-3c-1.2-2.3-2-4.9-2-7.7c0-0.9,0.1-1.7,0.3-2.6c0-0.1,0-0.1,0-0.2l-8.9,0l0.2-0.5l26-57.1l0,0V4.3\n\t\t\tc0,0-110,65.8-233.7,69.8c0,0-26.5,106-13.6,228.2C20.5,297.1,37.3,289.2,59.8,280.8z\"\/>\n\t\t<path class=\"st4\" d=\"M80.3,294.9l0,103.1H100h11.7v0H134v0v0h12.1v0l0-121.2C120.2,282.4,98,288.9,80.3,294.9z\"\/>\n\t\t<path class=\"st4\" d=\"M12.8,323.7C12.8,323.7,12.7,323.7,12.8,323.7c0.1,0.5,0.1,1,0.2,1.5c0,0.1,0,0.3,0.1,0.4c0,0,0,0,0,0\n\t\t\tc1.4,7.9,3.6,18.9,7.3,32.2l0,0c3,13.3,6.5,26.9,10.6,40.2h6.5v0h10.3v0h12.1l0-95.6C36.2,311.5,20,319.7,12.8,323.7z\"\/>\n\t<\/g>\n\t<g>\n\t\t<path class=\"st5\" d=\"M2206.7,132.5c9.4,0,16.7,7.3,16.7,16.4c0,9.3-7.3,16.5-16.8,16.5c-9.4,0-16.9-7.2-16.9-16.5\n\t\t\tc0-9.1,7.5-16.4,16.9-16.4H2206.7z M2206.5,135.8c-7.2,0-12.6,5.9-12.6,13.1c0,7.3,5.4,13.1,12.8,13.1c7.2,0.1,12.5-5.8,12.5-13.1\n\t\t\tC2219.2,141.7,2213.9,135.8,2206.5,135.8L2206.5,135.8z M2204,157.4h-3.8v-16.3c1.5-0.3,3.6-0.6,6.3-0.6c3.1,0,4.5,0.5,5.7,1.3\n\t\t\tc0.9,0.7,1.6,2,1.6,3.5c0,1.9-1.4,3.3-3.4,3.9v0.2c1.6,0.5,2.5,1.8,3,4c0.5,2.5,0.8,3.5,1.2,4h-4.1c-0.5-0.6-0.8-2-1.3-3.9\n\t\t\tc-0.3-1.8-1.3-2.6-3.4-2.6h-1.8V157.4z M2204.1,148.2h1.8c2.1,0,3.8-0.7,3.8-2.4c0-1.5-1.1-2.5-3.5-2.5c-1,0-1.7,0.1-2.1,0.2\n\t\t\tV148.2z\"\/>\n\t<\/g>\n<\/g>\n<\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/support.svg","ext":"svg","size":673,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 409.6 409.6\"><title>support<\/title><path d=\"M204.8,0C91.69,0,0,91.69,0,204.8S91.69,409.6,204.8,409.6s204.8-91.7,204.8-204.8S317.91,0,204.8,0ZM128,204.8a76.8,76.8,0,1,1,76.8,76.8A76.8,76.8,0,0,1,128,204.8Zm242.39,68.59-71-29.4a102.71,102.71,0,0,0,0-78.39l48.85-20.23,22.12-9.16a179.65,179.65,0,0,1,0,137.18Zm-97-234.18-29.39,71a102.65,102.65,0,0,0-78.39,0L151.82,76.9,136.21,39.21a179.7,179.7,0,0,1,137.18,0Zm-234.18,97L76.9,151.82l33.28,13.78a102.65,102.65,0,0,0,0,78.39l-71,29.4a179.7,179.7,0,0,1,0-137.18Zm97,234.18,9.16-22.12,20.23-48.85a102.68,102.68,0,0,0,78.39,0l29.39,71a179.65,179.65,0,0,1-137.18,0Zm0,0\"\/><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/logos\/shield-premium.svg","ext":"svg","size":1883,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 143.38 112.68\"><defs><style>.cls-1{fill:#fff;}.cls-2{fill:#51bfcf;}.cls-3{fill:#137d8e;}<\/style><\/defs><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M66.29,112.51h0Z\"\/><path class=\"cls-2\" d=\"M71.69,21.67h0L79.12,38l.07.16H76.66v.06a4.53,4.53,0,0,1,.08.74,4.71,4.71,0,0,1-.56,2.21,5.63,5.63,0,0,1-.58.86s-.33,3.57-.3,10.2v0c0,4,.24,9.84.71,16.27A189.53,189.53,0,0,1,97.65,71V43.3H95.72l5-10.9,4.76,10.94H103.5V72.15a174.7,174.7,0,0,1,18.81,5V53h-1.94l5-10.9L130.09,53h-1.94V79.18a133.1,133.1,0,0,1,14.21,6.17,209.06,209.06,0,0,0-3.89-65.23C103.13,19,71.69.17,71.69.17Z\"\/><path class=\"cls-2\" d=\"M128.15,85.37v27.31h8.26c1.17-3.79,2.18-7.68,3-11.48h0A94.27,94.27,0,0,0,141.52,92a.55.55,0,0,0,0-.12c0-.15.05-.28.07-.42A118.16,118.16,0,0,0,128.15,85.37Z\"\/><path class=\"cls-2\" d=\"M103.5,78.05v34.63h18.81V83.25A172.28,172.28,0,0,0,103.5,78.05Z\"\/><path class=\"cls-2\" d=\"M97.65,112.68V76.88a178.66,178.66,0,0,0-21.17-2.56v.08c0,.15.49,4,.57,4.61,1.18,8.84,3.58,22.78,6,33.65H83v0H97.65Z\"\/><path class=\"cls-3\" d=\"M60.29,112.49c2.45-10.86,4.84-24.81,6-33.65h0c.07-.64.55-4.46.57-4.6v-.09a182.08,182.08,0,0,0-21.18,2.56v35.8H60.41v0Z\"\/><path class=\"cls-3\" d=\"M15.22,79V52.86H13.28l4.77-10.93,5,10.9H21.07V77a174.48,174.48,0,0,1,18.8-5V43.16H37.94L42.7,32.23l5,10.9H45.72V70.87a187.14,187.14,0,0,1,21.65-2.49c.46-6.42.68-12.3.7-16.27v0c0-6.64-.29-10.21-.29-10.21A4.19,4.19,0,0,1,67.2,41a4.45,4.45,0,0,1-.49-3s0,0,0-.06H64.18l.07-.16,7.44-16.33h0V0S40.25,18.81,4.9,20A209.24,209.24,0,0,0,1,85.18,131.08,131.08,0,0,1,15.22,79Z\"\/><path class=\"cls-3\" d=\"M21.07,83.05v29.46h18.8V77.87A171.44,171.44,0,0,0,21.07,83.05Z\"\/><path class=\"cls-3\" d=\"M1.77,91.27h0c0,.14.05.28.07.42l0,.13h0A94.27,94.27,0,0,0,3.94,101h0c.85,3.8,1.86,7.7,3,11.48h8.26V85.18A118.26,118.26,0,0,0,1.77,91.27Z\"\/><\/g><\/g><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/logos\/shield-free.svg","ext":"svg","size":1815,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 143.38 112.68\"><defs><style>.cls-1{fill:#1b719e;}<\/style><\/defs><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M66.29,112.51h0Z\"\/><path class=\"cls-1\" d=\"M128.15,85.37v27.31h8.26c1.17-3.79,2.18-7.68,3-11.48h0A94.27,94.27,0,0,0,141.52,92a.55.55,0,0,0,0-.12c0-.15.05-.28.07-.42A118.16,118.16,0,0,0,128.15,85.37Z\"\/><path class=\"cls-1\" d=\"M103.5,78.05v34.63h18.81V83.25A172.28,172.28,0,0,0,103.5,78.05Z\"\/><path class=\"cls-1\" d=\"M97.65,112.68V76.88a178.66,178.66,0,0,0-21.17-2.56v.08c0,.15.49,4,.57,4.61,1.18,8.84,3.58,22.78,6,33.65H83v0H97.65Z\"\/><path class=\"cls-1\" d=\"M60.29,112.49c2.45-10.86,4.84-24.81,6-33.65h0c.07-.64.55-4.46.57-4.6v-.09a182.08,182.08,0,0,0-21.18,2.56v35.8H60.41v0Z\"\/><path class=\"cls-1\" d=\"M138.47,20.12C103.13,19,71.69.17,71.69.17V0S40.25,18.81,4.9,20A209.24,209.24,0,0,0,1,85.18,131.08,131.08,0,0,1,15.22,79V52.86H13.28l4.77-10.93,5,10.9H21.07V77a174.48,174.48,0,0,1,18.8-5V43.16H37.94L42.7,32.23l5,10.9H45.72V70.87a187.14,187.14,0,0,1,21.65-2.49c.46-6.42.68-12.3.7-16.27v0c0-6.64-.29-10.21-.29-10.21A4.19,4.19,0,0,1,67.2,41a4.45,4.45,0,0,1-.49-3s0,0,0-.06H64.18l.07-.16,7.44-16.33h0v.16h0L79.12,38l.07.16H76.66v.06a4.53,4.53,0,0,1,.08.74,4.71,4.71,0,0,1-.56,2.21,5.63,5.63,0,0,1-.58.86s-.33,3.57-.3,10.2v0c0,4,.24,9.84.71,16.27A189.53,189.53,0,0,1,97.65,71V43.3H95.72l5-10.9,4.76,10.94H103.5V72.15a174.7,174.7,0,0,1,18.81,5V53h-1.94l5-10.9L130.09,53h-1.94V79.18a133.1,133.1,0,0,1,14.21,6.17A209.06,209.06,0,0,0,138.47,20.12Z\"\/><path class=\"cls-1\" d=\"M21.07,83.05v29.46h18.8V77.87A171.44,171.44,0,0,0,21.07,83.05Z\"\/><path class=\"cls-1\" d=\"M1.77,91.27h0c0,.14.05.28.07.42l0,.13h0A94.27,94.27,0,0,0,3.94,101h0c.85,3.8,1.86,7.7,3,11.48h8.26V85.18A118.26,118.26,0,0,0,1.77,91.27Z\"\/><\/g><\/g><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/logos\/shield-response.svg","ext":"svg","size":1883,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 143.38 112.68\"><defs><style>.cls-1{fill:#fff;}.cls-2{fill:#928dc4;}.cls-3{fill:#6453a3;}<\/style><\/defs><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M66.29,112.51h0Z\"\/><path class=\"cls-2\" d=\"M71.69,21.67h0L79.12,38l.07.16H76.66v.06a4.53,4.53,0,0,1,.08.74,4.71,4.71,0,0,1-.56,2.21,5.63,5.63,0,0,1-.58.86s-.33,3.57-.3,10.2v0c0,4,.24,9.84.71,16.27A189.53,189.53,0,0,1,97.65,71V43.3H95.72l5-10.9,4.76,10.94H103.5V72.15a174.7,174.7,0,0,1,18.81,5V53h-1.94l5-10.9L130.09,53h-1.94V79.18a133.1,133.1,0,0,1,14.21,6.17,209.06,209.06,0,0,0-3.89-65.23C103.13,19,71.69.17,71.69.17Z\"\/><path class=\"cls-2\" d=\"M128.15,85.37v27.31h8.26c1.17-3.79,2.18-7.68,3-11.48h0A94.27,94.27,0,0,0,141.52,92a.55.55,0,0,0,0-.12c0-.15.05-.28.07-.42A118.16,118.16,0,0,0,128.15,85.37Z\"\/><path class=\"cls-2\" d=\"M103.5,78.05v34.63h18.81V83.25A172.28,172.28,0,0,0,103.5,78.05Z\"\/><path class=\"cls-2\" d=\"M97.65,112.68V76.88a178.66,178.66,0,0,0-21.17-2.56v.08c0,.15.49,4,.57,4.61,1.18,8.84,3.58,22.78,6,33.65H83v0H97.65Z\"\/><path class=\"cls-3\" d=\"M60.29,112.49c2.45-10.86,4.84-24.81,6-33.65h0c.07-.64.55-4.46.57-4.6v-.09a182.08,182.08,0,0,0-21.18,2.56v35.8H60.41v0Z\"\/><path class=\"cls-3\" d=\"M15.22,79V52.86H13.28l4.77-10.93,5,10.9H21.07V77a174.48,174.48,0,0,1,18.8-5V43.16H37.94L42.7,32.23l5,10.9H45.72V70.87a187.14,187.14,0,0,1,21.65-2.49c.46-6.42.68-12.3.7-16.27v0c0-6.64-.29-10.21-.29-10.21A4.19,4.19,0,0,1,67.2,41a4.45,4.45,0,0,1-.49-3s0,0,0-.06H64.18l.07-.16,7.44-16.33h0V0S40.25,18.81,4.9,20A209.24,209.24,0,0,0,1,85.18,131.08,131.08,0,0,1,15.22,79Z\"\/><path class=\"cls-3\" d=\"M21.07,83.05v29.46h18.8V77.87A171.44,171.44,0,0,0,21.07,83.05Z\"\/><path class=\"cls-3\" d=\"M1.77,91.27h0c0,.14.05.28.07.42l0,.13h0A94.27,94.27,0,0,0,3.94,101h0c.85,3.8,1.86,7.7,3,11.48h8.26V85.18A118.26,118.26,0,0,0,1.77,91.27Z\"\/><\/g><\/g><\/svg>"},{"base":"plugins","rel":"wordfence\/images\/logos\/shield-white.svg","ext":"svg","size":1816,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 143.38 112.68\"><defs><style>.cls-1{fill:#FFFFFF;}<\/style><\/defs><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M66.29,112.51h0Z\"\/><path class=\"cls-1\" d=\"M128.15,85.37v27.31h8.26c1.17-3.79,2.18-7.68,3-11.48h0A94.27,94.27,0,0,0,141.52,92a.55.55,0,0,0,0-.12c0-.15.05-.28.07-.42A118.16,118.16,0,0,0,128.15,85.37Z\"\/><path class=\"cls-1\" d=\"M103.5,78.05v34.63h18.81V83.25A172.28,172.28,0,0,0,103.5,78.05Z\"\/><path class=\"cls-1\" d=\"M97.65,112.68V76.88a178.66,178.66,0,0,0-21.17-2.56v.08c0,.15.49,4,.57,4.61,1.18,8.84,3.58,22.78,6,33.65H83v0H97.65Z\"\/><path class=\"cls-1\" d=\"M60.29,112.49c2.45-10.86,4.84-24.81,6-33.65h0c.07-.64.55-4.46.57-4.6v-.09a182.08,182.08,0,0,0-21.18,2.56v35.8H60.41v0Z\"\/><path class=\"cls-1\" d=\"M138.47,20.12C103.13,19,71.69.17,71.69.17V0S40.25,18.81,4.9,20A209.24,209.24,0,0,0,1,85.18,131.08,131.08,0,0,1,15.22,79V52.86H13.28l4.77-10.93,5,10.9H21.07V77a174.48,174.48,0,0,1,18.8-5V43.16H37.94L42.7,32.23l5,10.9H45.72V70.87a187.14,187.14,0,0,1,21.65-2.49c.46-6.42.68-12.3.7-16.27v0c0-6.64-.29-10.21-.29-10.21A4.19,4.19,0,0,1,67.2,41a4.45,4.45,0,0,1-.49-3s0,0,0-.06H64.18l.07-.16,7.44-16.33h0v.16h0L79.12,38l.07.16H76.66v.06a4.53,4.53,0,0,1,.08.74,4.71,4.71,0,0,1-.56,2.21,5.63,5.63,0,0,1-.58.86s-.33,3.57-.3,10.2v0c0,4,.24,9.84.71,16.27A189.53,189.53,0,0,1,97.65,71V43.3H95.72l5-10.9,4.76,10.94H103.5V72.15a174.7,174.7,0,0,1,18.81,5V53h-1.94l5-10.9L130.09,53h-1.94V79.18a133.1,133.1,0,0,1,14.21,6.17A209.06,209.06,0,0,0,138.47,20.12Z\"\/><path class=\"cls-1\" d=\"M21.07,83.05v29.46h18.8V77.87A171.44,171.44,0,0,0,21.07,83.05Z\"\/><path class=\"cls-1\" d=\"M1.77,91.27h0c0,.14.05.28.07.42l0,.13h0A94.27,94.27,0,0,0,3.94,101h0c.85,3.8,1.86,7.7,3,11.48h8.26V85.18A118.26,118.26,0,0,0,1.77,91.27Z\"\/><\/g><\/g><\/svg>\n"},{"base":"plugins","rel":"wordfence\/images\/logos\/shield-care.svg","ext":"svg","size":1883,"mtime":1757312769,"type":"text","content":"<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 143.38 112.68\"><defs><style>.cls-1{fill:#fff;}.cls-2{fill:#54bf9c;}.cls-3{fill:#29957c;}<\/style><\/defs><g id=\"Layer_2\" data-name=\"Layer 2\"><g id=\"Layer_1-2\" data-name=\"Layer 1\"><path class=\"cls-1\" d=\"M66.29,112.51h0Z\"\/><path class=\"cls-2\" d=\"M71.69,21.67h0L79.12,38l.07.16H76.66v.06a4.53,4.53,0,0,1,.08.74,4.71,4.71,0,0,1-.56,2.21,5.63,5.63,0,0,1-.58.86s-.33,3.57-.3,10.2v0c0,4,.24,9.84.71,16.27A189.53,189.53,0,0,1,97.65,71V43.3H95.72l5-10.9,4.76,10.94H103.5V72.15a174.7,174.7,0,0,1,18.81,5V53h-1.94l5-10.9L130.09,53h-1.94V79.18a133.1,133.1,0,0,1,14.21,6.17,209.06,209.06,0,0,0-3.89-65.23C103.13,19,71.69.17,71.69.17Z\"\/><path class=\"cls-2\" d=\"M128.15,85.37v27.31h8.26c1.17-3.79,2.18-7.68,3-11.48h0A94.27,94.27,0,0,0,141.52,92a.55.55,0,0,0,0-.12c0-.15.05-.28.07-.42A118.16,118.16,0,0,0,128.15,85.37Z\"\/><path class=\"cls-2\" d=\"M103.5,78.05v34.63h18.81V83.25A172.28,172.28,0,0,0,103.5,78.05Z\"\/><path class=\"cls-2\" d=\"M97.65,112.68V76.88a178.66,178.66,0,0,0-21.17-2.56v.08c0,.15.49,4,.57,4.61,1.18,8.84,3.58,22.78,6,33.65H83v0H97.65Z\"\/><path class=\"cls-3\" d=\"M60.29,112.49c2.45-10.86,4.84-24.81,6-33.65h0c.07-.64.55-4.46.57-4.6v-.09a182.08,182.08,0,0,0-21.18,2.56v35.8H60.41v0Z\"\/><path class=\"cls-3\" d=\"M15.22,79V52.86H13.28l4.77-10.93,5,10.9H21.07V77a174.48,174.48,0,0,1,18.8-5V43.16H37.94L42.7,32.23l5,10.9H45.72V70.87a187.14,187.14,0,0,1,21.65-2.49c.46-6.42.68-12.3.7-16.27v0c0-6.64-.29-10.21-.29-10.21A4.19,4.19,0,0,1,67.2,41a4.45,4.45,0,0,1-.49-3s0,0,0-.06H64.18l.07-.16,7.44-16.33h0V0S40.25,18.81,4.9,20A209.24,209.24,0,0,0,1,85.18,131.08,131.08,0,0,1,15.22,79Z\"\/><path class=\"cls-3\" d=\"M21.07,83.05v29.46h18.8V77.87A171.44,171.44,0,0,0,21.07,83.05Z\"\/><path class=\"cls-3\" d=\"M1.77,91.27h0c0,.14.05.28.07.42l0,.13h0A94.27,94.27,0,0,0,3.94,101h0c.85,3.8,1.86,7.7,3,11.48h8.26V85.18A118.26,118.26,0,0,0,1.77,91.27Z\"\/><\/g><\/g><\/svg>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/admin.1756145765.js","ext":"js","size":31642,"mtime":1757312769,"type":"text","content":"(function($) {\n\tfunction __(string) {\n\t\treturn WFLS_ADMIN_TRANSLATIONS[string] || string;\n\t}\n\twindow['WFLS'] = {\n\t\tpanelIsOpen: false,\n\t\tbasePageName: '',\n\t\tpanelQueue: [],\n\t\tpendingChanges: {},\n\t\tuserIsActivating: false,\n\t\t\n\t\t\/\/Screen sizes\n\t\tSCREEN_XS: 'xs',\n\t\tSCREEN_SM: 'sm',\n\t\tSCREEN_MD: 'md',\n\t\tSCREEN_LG: 'lg',\n\n\t\tinit: function() {\n\t\t\tthis.basePageName = document.title;\n\n\t\t\tvar tabs = $('.wfls-page-tabs').find('.wfls-tab a');\n\t\t\tif (tabs.length > 0) {\n\t\t\t\ttabs.click(function() {\n\t\t\t\t\t$('.wfls-page-tabs').find('.wfls-tab').removeClass('wfls-active');\n\t\t\t\t\t$('.wfls-tab-content').removeClass('wfls-active');\n\n\t\t\t\t\tvar tab = $(this).closest('.wfls-tab');\n\t\t\t\t\ttab.addClass('wfls-active');\n\t\t\t\t\tvar content = $('#' + tab.data('target'));\n\t\t\t\t\tcontent.addClass('wfls-active');\n\t\t\t\t\tdocument.title = tab.data('pageTitle') + \" \\u2039 \" + WFLS.basePageName;\n\t\t\t\t\t$(window).trigger('wfls-tab-change', [tab.data('target')]);\n\t\t\t\t});\n\t\t\t\tif (window.location.hash) {\n\t\t\t\t\tvar hashes = WFLS.parseHashes();\n\t\t\t\t\tvar hash = hashes[hashes.length - 1];\n\t\t\t\t\tfor (var i = 0; i < tabs.length; i++) {\n\t\t\t\t\t\tif (hash == $(tabs[i]).closest('.wfls-tab').data('target')) {\n\t\t\t\t\t\t\t$(tabs[i]).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(tabs[0]).trigger('click');\n\t\t\t\t}\n\t\t\t\t$(window).on('hashchange', function () {\n\t\t\t\t\tvar hashes = WFLS.parseHashes();\n\t\t\t\t\tvar hash = hashes[hashes.length - 1];\n\t\t\t\t\tfor (var i = 0; i < tabs.length; i++) {\n\t\t\t\t\t\tif (hash == $(tabs[i]).closest('.wfls-tab').data('target')) {\n\t\t\t\t\t\t\t$(tabs[i]).trigger('click');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t\/\/On\/Off Option\n\t\t\t$('.wfls-option.wfls-option-toggled .wfls-option-checkbox').each(function() {\n\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tvar optionElement = $(this).closest('.wfls-option');\n\t\t\t\t\tif (optionElement.hasClass('wfls-option-premium') || optionElement.hasClass('wfls-disabled')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\t\tvar value = false;\n\t\t\t\t\tvar isActive = $(this).hasClass('wfls-checked');\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t$(this).removeClass('wfls-checked').attr('aria-checked', 'false');\n\t\t\t\t\t\tvalue = optionElement.data('disabledValue');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).addClass('wfls-checked').attr('aria-checked', 'true');\n\t\t\t\t\t\tvalue = optionElement.data('enabledValue');\n\t\t\t\t\t}\n\n\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t});\n\n\t\t\t\t$(this).parent().find('.wfls-option-title').on('click', function(e) {\n\t\t\t\t\tvar links = $(this).find('a');\n\t\t\t\t\tvar buffer = 10;\n\t\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\t\tvar r = l + $(links[i]).width();\n\n\t\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$(this).parent().find('.wfls-option-checkbox').trigger('click');\n\t\t\t\t}).css('cursor', 'pointer');\n\t\t\t});\n\n\t\t\t\/\/On\/Off Boolean Switch Option\n\t\t\t$('.wfls-option.wfls-option-toggled-boolean-switch .wfls-boolean-switch').each(function() {\n\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t$(this).find('.wfls-boolean-switch-handle').trigger('click');\n\t\t\t\t});\n\n\t\t\t\t$(this).find('.wfls-boolean-switch-handle').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tvar optionElement = $(this).closest('.wfls-option');\n\t\t\t\t\tif (optionElement.hasClass('wfls-option-premium') || optionElement.hasClass('wfls-disabled')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar switchElement = $(this).closest('.wfls-boolean-switch');\n\t\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\t\tvar value = false;\n\t\t\t\t\tvar isActive = switchElement.hasClass('wfls-active');\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\tswitchElement.removeClass('wfls-active').attr('aria-checked', 'false');\n\t\t\t\t\t\tvalue = optionElement.data('disabledValue');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tswitchElement.addClass('wfls-active').attr('aria-checked', 'true');\n\t\t\t\t\t\tvalue = optionElement.data('enabledValue');\n\t\t\t\t\t}\n\n\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t});\n\n\t\t\t\t$(this).parent().find('.wfls-option-title').on('click', function(e) {\n\t\t\t\t\tvar links = $(this).find('a');\n\t\t\t\t\tvar buffer = 10;\n\t\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\t\tvar r = l + $(links[i]).width();\n\n\t\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$(this).parent().find('.wfls-boolean-switch-handle').trigger('click');\n\t\t\t\t}).css('cursor', 'pointer');\n\t\t\t});\n\n\t\t\t\/\/On\/Off Segmented Option\n\t\t\t$('.wfls-option.wfls-option-toggled-segmented [type=radio]').each(function() {\n\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\tvar optionElement = $(this).closest('.wfls-option');\n\t\t\t\t\tif (optionElement.hasClass('wfls-option-premium') || optionElement.hasClass('wfls-disabled')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\t\tvar value = this.value;\n\n\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t\/\/On\/Off Multiple Option\n\t\t\t$('.wfls-option.wfls-option-toggled-multiple .wfls-option-checkbox').each(function() {\n\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tvar optionElement = $(this).closest('.wfls-option');\n\t\t\t\t\tif (optionElement.hasClass('wfls-option-premium') || optionElement.hasClass('wfls-disabled') || $(this).hasClass('wfls-disabled')) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar checkboxElement = $(this).closest('ul');\n\t\t\t\t\tvar option = checkboxElement.data('option');\n\t\t\t\t\tvar value = false;\n\t\t\t\t\tvar isActive = $(this).hasClass('wfls-checked');\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t$(this).removeClass('wfls-checked').attr('aria-checked', 'false');\n\t\t\t\t\t\tvalue = checkboxElement.data('disabledValue');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).addClass('wfls-checked').attr('aria-checked', 'true');\n\t\t\t\t\t\tvalue = checkboxElement.data('enabledValue');\n\t\t\t\t\t}\n\n\t\t\t\t\tvar originalValue = checkboxElement.data('originalValue');\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t});\n\n\t\t\t\t$(this).parent().find('.wfls-option-title').on('click', function(e) {\n\t\t\t\t\tvar links = $(this).find('a');\n\t\t\t\t\tvar buffer = 10;\n\t\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\t\tvar r = l + $(links[i]).width();\n\n\t\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$(this).parent().find('.wfls-option-checkbox').trigger('click');\n\t\t\t\t}).css('cursor', 'pointer');\n\t\t\t});\n\n\t\t\t\/\/Text field option\n\t\t\t$('.wfls-option.wfls-option-text > .wfls-option-content > ul > li.wfls-option-text input').on('change paste keyup', function() {\n\t\t\t\tvar e = this;\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar optionElement = $(e).closest('.wfls-option');\n\t\t\t\t\tvar option = optionElement.data('textOption');\n\n\t\t\t\t\tif (typeof option !== 'undefined') {\n\t\t\t\t\t\tvar value = $(e).val();\n\n\t\t\t\t\t\tvar originalValue = optionElement.data('originalTextValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t\t}\n\t\t\t\t}, 4);\n\t\t\t});\n\t\t\t\n\t\t\t\/\/Menu option\n\t\t\t$('.wfls-option.wfls-option-toggled-select > .wfls-option-content > ul > li.wfls-option-select select, .wfls-option.wfls-option-select > .wfls-option-content > ul > li.wfls-option-select select, .wf-option.wfls-option-select > li.wfls-option-select select').each(function() {\n\t\t\t\tif (!$.fn.wfselect2) { return; }\n\n\t\t\t\tvar width = (WFLS.screenSize(500) ? '200px' : 'resolve');\n\t\t\t\tif ($(this).data('preferredWidth')) {\n\t\t\t\t\twidth = $(this).data('preferredWidth');\n\t\t\t\t}\n\n\t\t\t\t$(this).wfselect2({\n\t\t\t\t\tminimumResultsForSearch: -1,\n\t\t\t\t\twidth: width\n\t\t\t\t}).on('change', function () {\n\t\t\t\t\tvar optionElement = $(this).closest('.wfls-option');\n\t\t\t\t\tvar option = optionElement.data('selectOption');\n\t\t\t\t\tvar value = $(this).val();\n\n\t\t\t\t\tvar originalValue = optionElement.data('originalSelectValue');\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t});\n\t\t\t}).triggerHandler('change');\n\n\t\t\t\/\/Text area option\n\t\t\t$('.wfls-option.wfls-option-textarea > .wfls-option-content > ul > li.wfls-option-textarea textarea').on('change paste keyup', function() {\n\t\t\t\tvar e = this;\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar optionElement = $(e).closest('.wfls-option');\n\t\t\t\t\tvar option = optionElement.data('textOption');\n\t\t\t\t\tvar value = $(e).val();\n\n\t\t\t\t\tvar originalValue = optionElement.data('originalTextValue');\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t}, 4);\n\t\t\t});\n\n\t\t\t\/\/Switch Option\n\t\t\t$('.wfls-option.wfls-option-switch .wfls-switch > li').each(function(index, element) {\n\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$(element).on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tvar optionElement = $(this).closest('ul.wfls-option-switch, div.wfls-option-switch');\n\t\t\t\t\tvar optionName = optionElement.data('optionName');\n\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\t\tvar value = $(this).data('optionValue');\n\n\t\t\t\t\tvar control = $(this).closest('.wfls-switch');\n\t\t\t\t\tcontrol.find('li').each(function() {\n\t\t\t\t\t\t$(this).toggleClass('wfls-active', value == $(this).data('optionValue')).attr('aria-checked', value == $(this).data('optionValue') ? 'true' : 'false');\n\t\t\t\t\t});\n\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[optionName];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[optionName] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t\/\/Dropdown\/Text Options\n\t\t\t$('select.wfls-option-select, input.wfls-option-input').each(function() {\n\t\t\t\t$(this).data('original', $(this).val());\n\t\t\t}).on('change input', function(e) {\n\t\t\t\tvar input = $(this);\n\t\t\t\tvar name = input.attr('name');\n\t\t\t\tvar value = input.val();\n\t\t\t\tvar original = input.data('original');\n\t\t\t\tif (value === original || (input.hasClass('wfls-option-input-required') && value === '')) {\n\t\t\t\t\tdelete WFLS.pendingChanges[name];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tWFLS.pendingChanges[name] = value;\n\t\t\t\t}\n\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t});\n\n\t\t\t$('#wfls-save-changes').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tWFLS.saveOptions(function(res) {\n\t\t\t\t\tWFLS.pendingChanges = {};\n\t\t\t\t\tWFLS.updatePendingChanges();\n\n\t\t\t\t\tif (res.redirect) {\n\t\t\t\t\t\twindow.location.href = res.redirect;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t$('#wfls-cancel-changes').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\t\/\/On\/Off options\n\t\t\t\t$('.wfls-option.wfls-option-toggled').each(function() {\n\t\t\t\t\tvar enabledValue = $(this).data('enabledValue');\n\t\t\t\t\tvar disabledValue = $(this).data('disabledValue');\n\t\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t\tif (enabledValue == originalValue) {\n\t\t\t\t\t\t$(this).find('.wfls-option-checkbox').addClass('wfls-checked').attr('aria-checked', 'true');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).find('.wfls-option-checkbox').removeClass('wfls-checked').attr('aria-checked', 'false');\n\t\t\t\t\t}\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t$('.wfls-option-toggled-boolean-switch').each(function() {\n\t\t\t\t\tvar enabledValue = $(this).data('enabledValue');\n\t\t\t\t\tvar disabledValue = $(this).data('disabledValue');\n\t\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t\tif (enabledValue == originalValue) {\n\t\t\t\t\t\t$(this).find('.wfls-boolean-switch').addClass('wfls-active').attr('aria-checked', 'true');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).find('.wfls-boolean-switch').removeClass('wfls-active').attr('aria-checked', 'false');\n\t\t\t\t\t}\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t$('.wfls-option.wfls-option-toggled-segmented').each(function() {\n\t\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t\t$(this).find('[type=radio]').each(function() {\n\t\t\t\t\t\tif (this.value == originalValue) {\n\t\t\t\t\t\t\tthis.checked = true;\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/On\/Off multiple options\n\t\t\t\t$('.wfls-option.wfls-option-toggled-multiple').each(function() {\n\t\t\t\t\t$(this).find('.wfls-option-checkboxes > ul').each(function() {\n\t\t\t\t\t\tvar enabledValue = $(this).data('enabledValue');\n\t\t\t\t\t\tvar disabledValue = $(this).data('disabledValue');\n\t\t\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t\t\tif (enabledValue == originalValue) {\n\t\t\t\t\t\t\t$(this).find('.wfls-option-checkbox').addClass('wfls-checked').attr('aria-checked', 'true');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t$(this).find('.wfls-option-checkbox').removeClass('wfls-checked').attr('aria-checked', 'false');\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/On\/Off options with menu\n\t\t\t\t$('.wfls-option.wfls-option-toggled-select').each(function() {\n\t\t\t\t\tvar selectElement = $(this).find('.wfls-option-select select');\n\t\t\t\t\tvar enabledToggleValue = $(this).data('enabledToggleValue');\n\t\t\t\t\tvar disabledToggleValue = $(this).data('disabledToggleValue');\n\t\t\t\t\tvar originalToggleValue = $(this).data('originalToggleValue');\n\t\t\t\t\tif (enabledToggleValue == originalToggleValue) {\n\t\t\t\t\t\t$(this).find('.wfls-option-checkbox').addClass('wfls-checked').attr('aria-checked', 'true');\n\t\t\t\t\t\tselectElement.attr('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).find('.wfls-option-checkbox').removeClass('wfls-checked').attr('aria-checked', 'false');\n\t\t\t\t\t\tselectElement.attr('disabled', true);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar originalSelectValue = $(this).data('originalSelectValue');\n\t\t\t\t\t$(this).find('.wfls-option-select select').val(originalSelectValue).trigger('change');\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/Menu options\n\t\t\t\t$('.wfls-option.wfls-option-select').each(function() {\n\t\t\t\t\tvar originalSelectValue = $(this).data('originalSelectValue');\n\t\t\t\t\t$(this).find('.wfls-option-select select').val(originalSelectValue).trigger('change');\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/Text options\n\t\t\t\t$('.wfls-option.wfls-option-text').each(function() {\n\t\t\t\t\tvar originalTextValue = $(this).data('originalTextValue');\n\t\t\t\t\tif (typeof originalTextValue !== 'undefined') {\n\t\t\t\t\t\t$(this).find('.wfls-option-text input').val(originalTextValue);\n\t\t\t\t\t}\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/Text area options\n\t\t\t\t$('.wfls-option.wfls-option-textarea').each(function() {\n\t\t\t\t\tvar originalTextValue = $(this).data('originalTextValue');\n\t\t\t\t\t$(this).find('.wfls-option-textarea textarea').val(originalTextValue);\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/Token options\n\t\t\t\t$('.wfls-option.wfls-option-token').each(function() {\n\t\t\t\t\tvar originalTokenValue = $(this).data('originalTokenValue');\n\t\t\t\t\t$(this).find('select').val(originalTokenValue).trigger('change');\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/Switch options\n\t\t\t\t$('.wfls-option.wfls-option-switch').each(function() {\n\t\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t\t$(this).find('.wfls-switch > li').each(function() {\n\t\t\t\t\t\t$(this).toggleClass('wfls-active', originalValue == $(this).data('optionValue')).attr('aria-checked', originalValue == $(this).data('optionValue') ? 'true' : 'false');\n\t\t\t\t\t});\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\n\t\t\t\t\/\/Other options\n\t\t\t\t$(window).trigger('wflsOptionsReset');\n\t\t\t\t\n\t\t\t\tWFLS.pendingChanges = {};\n\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t});\n\t\t},\n\n\t\tupdatePendingChanges: function() {\n\t\t\t$(window).off('beforeunload', WFLS._unsavedOptionsHandler);\n\t\t\tif (Object.keys(WFLS.pendingChanges).length) {\n\t\t\t\t$('#wfls-cancel-changes').removeClass('wfls-disabled');\n\t\t\t\t$('#wfls-save-changes').removeClass('wfls-disabled');\n\t\t\t\t$(window).on('beforeunload', WFLS._unsavedOptionsHandler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('#wfls-cancel-changes').addClass('wfls-disabled');\n\t\t\t\t$('#wfls-save-changes').addClass('wfls-disabled');\n\t\t\t}\n\t\t},\n\n\t\t_unsavedOptionsHandler: function(e) {\n\t\t\tvar message = __(\"You have unsaved changes to your options. If you leave this page, those changes will be lost.\"); \/\/Only shows on older browsers, newer browsers don't allow message customization \n\t\t\te = e || window.event;\n\t\t\tif (e) {\n\t\t\t\te.returnValue = message; \/\/IE and Firefox\n\t\t\t}\n\t\t\treturn message; \/\/Others\n\t\t},\n\t\t\n\t\tsetOptions: function(options, successCallback, failureCallback) {\n\t\t\tif (!Object.keys(options).length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.ajax('wordfence_ls_save_options', {changes: JSON.stringify(options)}, function(res) {\n\t\t\t\tif (res.success) {\n\t\t\t\t\ttypeof successCallback == 'function' && successCallback(res);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (res.hasOwnProperty('html') && res.html) {\n\t\t\t\t\t\tWFLS.panelModalHTML((WFLS.screenSize(500) ? '300px' : '400px'), 'Error Saving Options', res.error);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), 'Error Saving Options', res.error);\n\t\t\t\t\t}\n\n\t\t\t\t\ttypeof failureCallback == 'function' && failureCallback\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tsaveOptions: function(successCallback, failureCallback) {\n\t\t\tthis.setOptions(WFLS.pendingChanges, successCallback, failureCallback);\n\t\t},\n\n\t\tupdateIPPreview: function(value, successCallback) {\n\t\t\tthis.ajax('wordfence_ls_update_ip_preview', value, function(response) {\n\t\t\t\tif (successCallback) {\n\t\t\t\t\tsuccessCallback(response);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t\/**\n\t\t * Sends a WP AJAX call, automatically adding our nonce.\n\t\t * \n\t\t * @param string action\n\t\t * @param string|array|object payload\n\t\t * @param function successCallback\n\t\t * @param function failureCallback\n\t\t *\/\n\t\tajax: function(action, payload, successCallback, failureCallback) {\n\t\t\tif (typeof(payload) == 'string') {\n\t\t\t\tif (payload.length > 0) {\n\t\t\t\t\tpayload += '&';\n\t\t\t\t}\n\t\t\t\tpayload += 'action=' + action + '&nonce=' + WFLSVars.nonce;\n\t\t\t}\n\t\t\telse if (typeof(payload) == 'object' && payload instanceof Array) {\n\t\t\t\t\/\/ jQuery serialized form data\n\t\t\t\tpayload.push({\n\t\t\t\t\tname: 'action',\n\t\t\t\t\tvalue: action\n\t\t\t\t});\n\t\t\t\tpayload.push({\n\t\t\t\t\tname: 'nonce',\n\t\t\t\t\tvalue: WFLSVars.nonce\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (typeof(payload) == 'object') {\n\t\t\t\tpayload['action'] = action;\n\t\t\t\tpayload['nonce'] = WFLSVars.nonce;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: WFLSVars.ajaxurl,\n\t\t\t\tdataType: \"json\",\n\t\t\t\tdata: payload,\n\t\t\t\tsuccess: function(json) {\n\t\t\t\t\ttypeof successCallback == 'function' && successCallback(json);\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\ttypeof failureCallback == 'function' && failureCallback();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t\/**\n\t\t * Displays a generic panel.\n\t\t * \n\t\t * @param @param string width A width string in the format '100px'\n\t\t * @param string heading\n\t\t * @param string body\n\t\t * @param object settings\n\t\t *\/\n\t\tpanel: function(width, heading, body, settings) {\n\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\tsettings = {};\n\t\t\t}\n\t\t\tWFLS.panelQueue.push([width, \"<h3>\" + heading + \"<\/h3><p>\" + body + \"<\/p>\", settings]);\n\t\t\tWFLS._panelServiceQueue();\n\t\t},\n\n\t\t\/**\n\t\t * Displays a modal panel with fixed HTML content.\n\t\t * \n\t\t * @param @param string width A width string in the format '100px'\n\t\t * @param string heading\n\t\t * @param string body\n\t\t * @param object settings\n\t\t *\/\n\t\tpanelModalHTML: function(width, heading, body, settings) {\n\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\tsettings = {};\n\t\t\t}\n\n\t\t\tvar prompt = $.tmpl(WFLSVars.modalHTMLTemplate, {title: heading, message: body});\n\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\tvar callback = settings.onComplete;\n\t\t\tsettings.overlayClose = false;\n\t\t\tsettings.closeButton = false;\n\t\t\tsettings.className = 'wfls-modal';\n\t\t\tsettings.onComplete = function() {\n\t\t\t\t$('#wfls-generic-modal-close').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t});\n\n\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t};\n\t\t\tWFLS.panelHTML(width, promptHTML, settings)\n\t\t},\n\n\t\t\/**\n\t\t * Displays a modal panel, automatically escaping the content.\n\t\t *\n\t\t * @param @param string width A width string in the format '100px'\n\t\t * @param string heading\n\t\t * @param string body\n\t\t * @param object settings\n\t\t *\/\n\t\tpanelModal: function(width, heading, body, settings) {\n\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\tsettings = {};\n\t\t\t}\n\n\t\t\tif (width === null)\n\t\t\t\twidth = WFLS.screenSize(500) ? '300px' : '400px';\n\n\t\t\tvar includeDefaultButtons = typeof settings.includeDefaultButtons === 'undefined' ? false : settings.includeDefaultButtons;\n\t\t\tvar prompt = $.tmpl(WFLSVars[includeDefaultButtons ? 'modalTemplate' : 'modalNoButtonsTemplate'], {title: heading, message: body});\n\n\t\t\tif (typeof settings.additional_buttons !== 'undefined') {\n\t\t\t\tvar buttonSection = prompt.find('.wfls-modal-footer > ul');\n\t\t\t\tfor(index in settings.additional_buttons) {\n\t\t\t\t\tvar buttonSettings = settings.additional_buttons[index];\n\t\t\t\t\tvar button = $('<button>').text(buttonSettings.label)\n\t\t\t\t\t\t.addClass('wfls-btn wfls-btn-callout-subtle wfls-additional-button')\n\t\t\t\t\t\t.attr('id', buttonSettings.id);\n\t\t\t\t\tvar buttonType = typeof buttonSettings.type === 'undefined' ? 'default' : buttonSettings.type;\n\t\t\t\t\tbutton.addClass('wfls-btn-' + buttonType);\n\t\t\t\t\tbuttonSection.prepend($(\"<li>\").addClass('wfls-padding-add-left-small').append(button));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\tvar callback = settings.onComplete;\n\t\t\tsettings.overlayClose = false;\n\t\t\tsettings.closeButton = false;\n\t\t\tsettings.className = 'wfls-modal';\n\t\t\tsettings.onComplete = function() {\n\t\t\t\t$('#wfls-generic-modal-close').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t});\n\n\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t};\n\t\t\tWFLS.panelHTML(width, promptHTML, settings)\n\t\t},\n\n\t\t\/**\n\t\t * Displays a modal with the given title and message text.\n\t\t *\n\t\t * @param string title the modal title\n\t\t * @param string message the message (this will be treated as text, not HTML)\n\t\t * @param array buttons the buttons to include in the modal footer\n\t\t *\tEach item in the array should be an object with the following properties:\n\t\t *\t\t- label: The button text\n\t\t *\t\t- id: An ID for the button\n\t\t *\t\t- type: The type of button for styling purposes - i.e. default, primary (default: 'default')\n\t\t * @param object settings\n\t\t *\n\t\t * @see WFLS.panelModal\n\t\t *\/\n\t\tdisplayModalMessage: function(title, message, buttons, settings) {\n\t\t\tif (typeof settings !== 'object')\n\t\t\t\tsettings = {};\n\t\t\tvar width = typeof settings.width === 'undefined' ? null : settings.width;\n\t\t\tsettings.includeDefaultButtons = false;\n\t\t\tsettings.additional_buttons = buttons;\n\t\t\tWFLS.panelModal(width, title, message, settings);\n\t\t},\n\n\t\t\/**\n\t\t * Displays a modal panel with the error formatting.\n\t\t *\n\t\t * @param string errorMsg\n\t\t * @param bool isTokenError Whether or not this error is an expired nonce error.\n\t\t *\/\n\t\tpanelError: function(errorMsg, isTokenError) {\n\t\t\tvar callback = false;\n\t\t\tif (isTokenError) {\n\t\t\t\tif (WFLS.tokenErrorShowing) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tcallback = function() {\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tWFLS.tokenErrorShowing = false;\n\t\t\t\t\t}, 30000);\n\t\t\t\t};\n\n\t\t\t\tWFLS.tokenErrorShowing = true;\n\t\t\t}\n\n\t\t\tvar prompt = $.tmpl(WFLSVars.tokenInvalidTemplate, {title: 'An error occurred', message: errorMsg});\n\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\tvar settings = {};\n\t\t\tsettings.overlayClose = false;\n\t\t\tsettings.closeButton = false;\n\t\t\tsettings.className = 'wfls-modal';\n\t\t\tsettings.onComplete = function() {\n\t\t\t\t$('#wfls-token-invalid-modal-reload').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t});\n\n\t\t\t\ttypeof callback === 'function' && callback();\n\t\t\t};\n\t\t\tWFLS.panelHTML((WFLS.screenSize(500) ? '300px' : '400px'), promptHTML, settings);\n\t\t},\n\n\t\t\/**\n\t\t * Displays a panel with fixed HTML content.\n\t\t *\n\t\t * @param string width A width string in the format '100px'\n\t\t * @param string html\n\t\t * @param object settings\n\t\t *\/\n\t\tpanelHTML: function(width, html, settings) {\n\t\t\tif (typeof settings === 'undefined') {\n\t\t\t\tsettings = {};\n\t\t\t}\n\t\t\tWFLS.panelQueue.push([width, html, settings]);\n\t\t\tWFLS._panelServiceQueue();\n\t\t},\n\n\t\t\/**\n\t\t * Displays the next panel in the queue.\n\t\t *\/\n\t\t_panelServiceQueue: function() {\n\t\t\tif (WFLS.panelIsOpen) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (WFLS.panelQueue.length < 1) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar elem = WFLS.panelQueue.shift();\n\t\t\tWFLS._panelOpen(elem[0], elem[1], elem[2]);\n\t\t},\n\n\t\t\/**\n\t\t * Does the actual function call to display the panel.\n\t\t *\n\t\t * @param string width A width string in the format '100px'\n\t\t * @param string html\n\t\t * @param object settings\n\t\t *\/\n\t\t_panelOpen: function(width, html, settings) {\n\t\t\tthis.panelIsOpen = true;\n\t\t\t$.extend(settings, {\n\t\t\t\twidth: width,\n\t\t\t\thtml: html,\n\t\t\t\tonClosed: function() {\n\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t}\n\t\t\t});\n\t\t\t$.wflscolorbox(settings);\n\t\t},\n\n\t\t\/**\n\t\t * Closes the current panel.\n\t\t *\/\n\t\tpanelClose: function() {\n\t\t\tWFLS.panelIsOpen = false;\n\t\t\tif (WFLS.panelQueue.length < 1) {\n\t\t\t\t$.wflscolorbox.close();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tWFLS._panelServiceQueue();\n\t\t\t}\n\t\t},\n\n\t\t\/**\n\t\t * Parses and returns the hash portion of a URL, working around user agents that URL-encode the # character.\n\t\t * \n\t\t * @returns {Array}\n\t\t *\/\n\t\tparseHashes: function() {\n\t\t\tvar hashes = window.location.hash.replace('%23', '#');\n\t\t\tvar splitHashes = hashes.split('#');\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < splitHashes.length; i++) {\n\t\t\t\tif (splitHashes[i].length > 0) {\n\t\t\t\t\tresult.push(splitHashes[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t\/**\n\t\t * Returns whether or not the screen size is within the size given. This may be a numerical value\n\t\t * or one of the WFLS_SCREEN_ constants.\n\t\t * \n\t\t * @param size\n\t\t * @returns {boolean}\n\t\t *\/\n\t\tscreenSize: function(size) {\n\t\t\tswitch (size) {\n\t\t\t\tcase WFLS.SCREEN_XS:\n\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 767px)\").matches;\n\t\t\t\tcase WFLS.SCREEN_SM:\n\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 991px)\").matches;\n\t\t\t\tcase WFLS.SCREEN_MD:\n\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 1199px)\").matches;\n\t\t\t\tcase WFLS.SCREEN_LG:\n\t\t\t\t\treturn window.matchMedia(\"only screen and (max-width: 32767px)\").matches;\n\t\t\t}\n\t\t\t\n\t\t\tvar parsed = parseInt(size);\n\t\t\tif (isNaN(parsed)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn window.matchMedia(\"only screen and (max-width: \" + parsed + \"px)\").matches;\n\t\t},\n\t};\n\t\n\t$(function() {\n\t\tWFLS.init();\n\t});\n\n\t$.fn.crossfade = function(incoming, duration, complete) {\n\t\tduration = duration || 400;\n\t\tcomplete = complete || function() { };\n\t\t\n\t\treturn this.each(function() {\n\t\t\t$(this).fadeOut(duration, function() {\n\t\t\t\t$(incoming).fadeIn(duration, complete);\n\t\t\t});\n\t\t});\n\t};\n})(jQuery);\n\n\/*! @source https:\/\/github.com\/eligrey\/FileSaver.js\/blob\/master\/dist\/FileSaver.min.js *\/\n(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&\/^\\s*(?:text\\\/\\S*|application\\\/xml|\\S*\\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8\/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=\/Macintosh\/.test(navigator.userAgent)&&\/AppleWebKit\/.test(navigator.userAgent)&&!\/Safari\/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application\/octet-stream\"===b.type,i=\/constructor\/i.test(f.HTMLElement)||f.safari,j=\/CriOS\\\/[\\d]+\/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(\/^data:[^;]*;\/,\"data:attachment\/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/jquery.tmpl.min.1756145765.js","ext":"js","size":6115,"mtime":1757312769,"type":"text","content":"\/*\n * jQuery Templates Plugin 1.0.0pre\n * http:\/\/github.com\/jquery\/jquery-tmpl\n * Requires jQuery 1.4.2\n *\n * Copyright Software Freedom Conservancy, Inc.\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http:\/\/jquery.org\/license\n *\/\n(function(a){var r=a.fn.domManip,d=\"_tmplitem\",q=\/^[^<]*(<[\\w\\W]+>)[^>]*$|\\{\\{\\! \/,b={},f={},e,p={key:0,data:{}},i=0,c=0,l=[];function g(g,d,h,e){var c={data:e||(e===0||e===false)?e:d?d.data:{},_wrap:d?d._wrap:null,tmpl:null,parent:d||null,nodes:[],calls:u,nest:w,wrap:x,html:v,update:t};g&&a.extend(c,g,{nodes:[],parent:d});if(h){c.tmpl=h;c._ctnt=c._ctnt||c.tmpl(a,c);c.key=++i;(l.length?f:b)[i]=c}return c}a.each({appendTo:\"append\",prependTo:\"prepend\",insertBefore:\"before\",insertAfter:\"after\",replaceAll:\"replaceWith\"},function(f,d){a.fn[f]=function(n){var g=[],i=a(n),k,h,m,l,j=this.length===1&&this[0].parentNode;e=b||{};if(j&&j.nodeType===11&&j.childNodes.length===1&&i.length===1){i[d](this[0]);g=this}else{for(h=0,m=i.length;h<m;h++){c=h;k=(h>0?this.clone(true):this).get();a(i[h])[d](k);g=g.concat(k)}c=0;g=this.pushStack(g,f,i.selector)}l=e;e=null;a.tmpl.complete(l);return g}});a.fn.extend({tmpl:function(d,c,b){return a.tmpl(this[0],d,c,b)},tmplItem:function(){return a.tmplItem(this[0])},template:function(b){return a.template(b,this[0])},domManip:function(d,m,k){if(d[0]&&a.isArray(d[0])){var g=a.makeArray(arguments),h=d[0],j=h.length,i=0,f;while(i<j&&!(f=a.data(h[i++],\"tmplItem\")));if(f&&c)g[2]=function(b){a.tmpl.afterManip(this,b,k)};r.apply(this,g)}else r.apply(this,arguments);c=0;!e&&a.tmpl.complete(b);return this}});a.extend({tmpl:function(d,h,e,c){var i,k=!c;if(k){c=p;d=a.template[d]||a.template(null,d);f={}}else if(!d){d=c.tmpl;b[c.key]=c;c.nodes=[];c.wrapped&&n(c,c.wrapped);return a(j(c,null,c.tmpl(a,c)))}if(!d)return[];if(typeof h===\"function\")h=h.call(c||{});e&&e.wrapped&&n(e,e.wrapped);i=a.isArray(h)?a.map(h,function(a){return a?g(e,c,d,a):null}):[g(e,c,d,h)];return k?a(j(c,null,i)):i},tmplItem:function(b){var c;if(b instanceof a)b=b[0];while(b&&b.nodeType===1&&!(c=a.data(b,\"tmplItem\"))&&(b=b.parentNode));return c||p},template:function(c,b){if(b){if(typeof b===\"string\")b=o(b);else if(b instanceof a)b=b[0]||{};if(b.nodeType)b=a.data(b,\"tmpl\")||a.data(b,\"tmpl\",o(b.innerHTML));return typeof c===\"string\"?(a.template[c]=b):b}return c?typeof c!==\"string\"?a.template(null,c):a.template[c]||a.template(null,q.test(c)?c:a(c)):null},encode:function(a){return(\"\"+a).split(\"<\").join(\"&lt;\").split(\">\").join(\"&gt;\").split('\"').join(\"&#34;\").split(\"'\").join(\"&#39;\")}});a.extend(a.tmpl,{tag:{tmpl:{_default:{$2:\"null\"},open:\"if($notnull_1){__=__.concat($item.nest($1,$2));}\"},wrap:{_default:{$2:\"null\"},open:\"$item.calls(__,$1,$2);__=[];\",close:\"call=$item.calls();__=call._.concat($item.wrap(call,__));\"},each:{_default:{$2:\"$index, $value\"},open:\"if($notnull_1){$.each($1a,function($2){with(this){\",close:\"}});}\"},\"if\":{open:\"if(($notnull_1) && $1a){\",close:\"}\"},\"else\":{_default:{$1:\"true\"},open:\"}else if(($notnull_1) && $1a){\"},html:{open:\"if($notnull_1){__.push($1a);}\"},\"=\":{_default:{$1:\"$data\"},open:\"if($notnull_1){__.push($.encode($1a));}\"},\"!\":{open:\"\"}},complete:function(){b={}},afterManip:function(f,b,d){var e=b.nodeType===11?a.makeArray(b.childNodes):b.nodeType===1?[b]:[];d.call(f,b);m(e);c++}});function j(e,g,f){var b,c=f?a.map(f,function(a){return typeof a===\"string\"?e.key?a.replace(\/(<\\w+)(?=[\\s>])(?![^>]*_tmplitem)([^>]*)\/g,\"$1 \"+d+'=\"'+e.key+'\" $2'):a:j(a,e,a._ctnt)}):e;if(g)return c;c=c.join(\"\");c.replace(\/^\\s*([^<\\s][^<]*)?(<[\\w\\W]+>)([^>]*[^>\\s])?\\s*$\/,function(f,c,e,d){b=a(e).get();m(b);if(c)b=k(c).concat(b);if(d)b=b.concat(k(d))});return b?b:k(c)}function k(c){var b=document.createElement(\"div\");b.innerHTML=c;return a.makeArray(b.childNodes)}function o(b){return new Function(\"jQuery\",\"$item\",\"var $=jQuery,call,__=[],$data=$item.data;with($data){__.push('\"+a.trim(b).replace(\/([\\\\'])\/g,\"\\\\$1\").replace(\/[\\r\\t\\n]\/g,\" \").replace(\/\\$\\{([^\\}]*)\\}\/g,\"{{= $1}}\").replace(\/\\{\\{(\\\/?)(\\w+|.)(?:\\(((?:[^\\}]|\\}(?!\\}))*?)?\\))?(?:\\s+(.*?)?)?(\\(((?:[^\\}]|\\}(?!\\}))*?)\\))?\\s*\\}\\}\/g,function(m,l,k,g,b,c,d){var j=a.tmpl.tag[k],i,e,f;if(!j)throw\"Unknown template tag: \"+k;i=j._default||[];if(c&&!\/\\w$\/.test(b)){b+=c;c=\"\"}if(b){b=h(b);d=d?\",\"+h(d)+\")\":c?\")\":\"\";e=c?b.indexOf(\".\")>-1?b+h(c):\"(\"+b+\").call($item\"+d:b;f=c?e:\"(typeof(\"+b+\")==='function'?(\"+b+\").call($item):(\"+b+\"))\"}else f=e=i.$1||\"null\";g=h(g);return\"');\"+j[l?\"close\":\"open\"].split(\"$notnull_1\").join(b?\"typeof(\"+b+\")!=='undefined' && (\"+b+\")!=null\":\"true\").split(\"$1a\").join(f).split(\"$1\").join(e).split(\"$2\").join(g||i.$2||\"\")+\"__.push('\"})+\"');}return __;\")}function n(c,b){c._wrap=j(c,true,a.isArray(b)?b:[q.test(b)?b:a(b).html()]).join(\"\")}function h(a){return a?a.replace(\/\\\\'\/g,\"'\").replace(\/\\\\\\\\\/g,\"\\\\\"):null}function s(b){var a=document.createElement(\"div\");a.appendChild(b.cloneNode(true));return a.innerHTML}function m(o){var n=\"_\"+c,k,j,l={},e,p,h;for(e=0,p=o.length;e<p;e++){if((k=o[e]).nodeType!==1)continue;j=k.getElementsByTagName(\"*\");for(h=j.length-1;h>=0;h--)m(j[h]);m(k)}function m(j){var p,h=j,k,e,m;if(m=j.getAttribute(d)){while(h.parentNode&&(h=h.parentNode).nodeType===1&&!(p=h.getAttribute(d)));if(p!==m){h=h.parentNode?h.nodeType===11?0:h.getAttribute(d)||0:0;if(!(e=b[m])){e=f[m];e=g(e,b[h]||f[h]);e.key=++i;b[i]=e}c&&o(m)}j.removeAttribute(d)}else if(c&&(e=a.data(j,\"tmplItem\"))){o(e.key);b[e.key]=e;h=a.data(j.parentNode,\"tmplItem\");h=h?h.key:0}if(e){k=e;while(k&&k.key!=h){k.nodes.push(j);k=k.parent}delete e._ctnt;delete e._wrap;a.data(j,\"tmplItem\",e)}function o(a){a=a+n;e=l[a]=l[a]||g(e,b[e.parent.key+n]||e.parent)}}}function u(a,d,c,b){if(!a)return l.pop();l.push({_:a,tmpl:d,item:this,data:c,options:b})}function w(d,c,b){return a.tmpl(a.template(d),c,b,this)}function x(b,d){var c=b.options||{};c.wrapped=d;return a.tmpl(a.template(b.tmpl),b.data,c,b.item)}function v(d,c){var b=this._wrap;return a.map(a(a.isArray(b)?b.join(\"\"):b).filter(d||\"*\"),function(a){return c?a.innerText||a.textContent:a.outerHTML||s(a)})}function t(){var b=this.nodes;a.tmpl(null,null,null,this).insertBefore(b[0]);a(b).remove()}})(jQuery);"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/jquery.qrcode.min.1756145765.js","ext":"js","size":13995,"mtime":1757312769,"type":"text","content":"(function(r){r.fn.qrcode=function(h){var s;function u(a){this.mode=s;this.data=a}function o(a,c){this.typeNumber=a;this.errorCorrectLevel=c;this.modules=null;this.moduleCount=0;this.dataCache=null;this.dataList=[]}function q(a,c){if(void 0==a.length)throw Error(a.length+\"\/\"+c);for(var d=0;d<a.length&&0==a[d];)d++;this.num=Array(a.length-d+c);for(var b=0;b<a.length-d;b++)this.num[b]=a[b+d]}function p(a,c){this.totalCount=a;this.dataCount=c}function t(){this.buffer=[];this.length=0}u.prototype={getLength:function(){return this.data.length},\nwrite:function(a){for(var c=0;c<this.data.length;c++)a.put(this.data.charCodeAt(c),8)}};o.prototype={addData:function(a){this.dataList.push(new u(a));this.dataCache=null},isDark:function(a,c){if(0>a||this.moduleCount<=a||0>c||this.moduleCount<=c)throw Error(a+\",\"+c);return this.modules[a][c]},getModuleCount:function(){return this.moduleCount},make:function(){if(1>this.typeNumber){for(var a=1,a=1;40>a;a++){for(var c=p.getRSBlocks(a,this.errorCorrectLevel),d=new t,b=0,e=0;e<c.length;e++)b+=c[e].dataCount;\nfor(e=0;e<this.dataList.length;e++)c=this.dataList[e],d.put(c.mode,4),d.put(c.getLength(),j.getLengthInBits(c.mode,a)),c.write(d);if(d.getLengthInBits()<=8*b)break}this.typeNumber=a}this.makeImpl(!1,this.getBestMaskPattern())},makeImpl:function(a,c){this.moduleCount=4*this.typeNumber+17;this.modules=Array(this.moduleCount);for(var d=0;d<this.moduleCount;d++){this.modules[d]=Array(this.moduleCount);for(var b=0;b<this.moduleCount;b++)this.modules[d][b]=null}this.setupPositionProbePattern(0,0);this.setupPositionProbePattern(this.moduleCount-\n7,0);this.setupPositionProbePattern(0,this.moduleCount-7);this.setupPositionAdjustPattern();this.setupTimingPattern();this.setupTypeInfo(a,c);7<=this.typeNumber&&this.setupTypeNumber(a);null==this.dataCache&&(this.dataCache=o.createData(this.typeNumber,this.errorCorrectLevel,this.dataList));this.mapData(this.dataCache,c)},setupPositionProbePattern:function(a,c){for(var d=-1;7>=d;d++)if(!(-1>=a+d||this.moduleCount<=a+d))for(var b=-1;7>=b;b++)-1>=c+b||this.moduleCount<=c+b||(this.modules[a+d][c+b]=\n0<=d&&6>=d&&(0==b||6==b)||0<=b&&6>=b&&(0==d||6==d)||2<=d&&4>=d&&2<=b&&4>=b?!0:!1)},getBestMaskPattern:function(){for(var a=0,c=0,d=0;8>d;d++){this.makeImpl(!0,d);var b=j.getLostPoint(this);if(0==d||a>b)a=b,c=d}return c},createMovieClip:function(a,c,d){a=a.createEmptyMovieClip(c,d);this.make();for(c=0;c<this.modules.length;c++)for(var d=1*c,b=0;b<this.modules[c].length;b++){var e=1*b;this.modules[c][b]&&(a.beginFill(0,100),a.moveTo(e,d),a.lineTo(e+1,d),a.lineTo(e+1,d+1),a.lineTo(e,d+1),a.endFill())}return a},\nsetupTimingPattern:function(){for(var a=8;a<this.moduleCount-8;a++)null==this.modules[a][6]&&(this.modules[a][6]=0==a%2);for(a=8;a<this.moduleCount-8;a++)null==this.modules[6][a]&&(this.modules[6][a]=0==a%2)},setupPositionAdjustPattern:function(){for(var a=j.getPatternPosition(this.typeNumber),c=0;c<a.length;c++)for(var d=0;d<a.length;d++){var b=a[c],e=a[d];if(null==this.modules[b][e])for(var f=-2;2>=f;f++)for(var i=-2;2>=i;i++)this.modules[b+f][e+i]=-2==f||2==f||-2==i||2==i||0==f&&0==i?!0:!1}},setupTypeNumber:function(a){for(var c=\nj.getBCHTypeNumber(this.typeNumber),d=0;18>d;d++){var b=!a&&1==(c>>d&1);this.modules[Math.floor(d\/3)][d%3+this.moduleCount-8-3]=b}for(d=0;18>d;d++)b=!a&&1==(c>>d&1),this.modules[d%3+this.moduleCount-8-3][Math.floor(d\/3)]=b},setupTypeInfo:function(a,c){for(var d=j.getBCHTypeInfo(this.errorCorrectLevel<<3|c),b=0;15>b;b++){var e=!a&&1==(d>>b&1);6>b?this.modules[b][8]=e:8>b?this.modules[b+1][8]=e:this.modules[this.moduleCount-15+b][8]=e}for(b=0;15>b;b++)e=!a&&1==(d>>b&1),8>b?this.modules[8][this.moduleCount-\nb-1]=e:9>b?this.modules[8][15-b-1+1]=e:this.modules[8][15-b-1]=e;this.modules[this.moduleCount-8][8]=!a},mapData:function(a,c){for(var d=-1,b=this.moduleCount-1,e=7,f=0,i=this.moduleCount-1;0<i;i-=2)for(6==i&&i--;;){for(var g=0;2>g;g++)if(null==this.modules[b][i-g]){var n=!1;f<a.length&&(n=1==(a[f]>>>e&1));j.getMask(c,b,i-g)&&(n=!n);this.modules[b][i-g]=n;e--; -1==e&&(f++,e=7)}b+=d;if(0>b||this.moduleCount<=b){b-=d;d=-d;break}}}};o.PAD0=236;o.PAD1=17;o.createData=function(a,c,d){for(var c=p.getRSBlocks(a,\nc),b=new t,e=0;e<d.length;e++){var f=d[e];b.put(f.mode,4);b.put(f.getLength(),j.getLengthInBits(f.mode,a));f.write(b)}for(e=a=0;e<c.length;e++)a+=c[e].dataCount;if(b.getLengthInBits()>8*a)throw Error(\"code length overflow. (\"+b.getLengthInBits()+\">\"+8*a+\")\");for(b.getLengthInBits()+4<=8*a&&b.put(0,4);0!=b.getLengthInBits()%8;)b.putBit(!1);for(;!(b.getLengthInBits()>=8*a);){b.put(o.PAD0,8);if(b.getLengthInBits()>=8*a)break;b.put(o.PAD1,8)}return o.createBytes(b,c)};o.createBytes=function(a,c){for(var d=\n0,b=0,e=0,f=Array(c.length),i=Array(c.length),g=0;g<c.length;g++){var n=c[g].dataCount,h=c[g].totalCount-n,b=Math.max(b,n),e=Math.max(e,h);f[g]=Array(n);for(var k=0;k<f[g].length;k++)f[g][k]=255&a.buffer[k+d];d+=n;k=j.getErrorCorrectPolynomial(h);n=(new q(f[g],k.getLength()-1)).mod(k);i[g]=Array(k.getLength()-1);for(k=0;k<i[g].length;k++)h=k+n.getLength()-i[g].length,i[g][k]=0<=h?n.get(h):0}for(k=g=0;k<c.length;k++)g+=c[k].totalCount;d=Array(g);for(k=n=0;k<b;k++)for(g=0;g<c.length;g++)k<f[g].length&&\n(d[n++]=f[g][k]);for(k=0;k<e;k++)for(g=0;g<c.length;g++)k<i[g].length&&(d[n++]=i[g][k]);return d};s=4;for(var j={PATTERN_POSITION_TABLE:[[],[6,18],[6,22],[6,26],[6,30],[6,34],[6,22,38],[6,24,42],[6,26,46],[6,28,50],[6,30,54],[6,32,58],[6,34,62],[6,26,46,66],[6,26,48,70],[6,26,50,74],[6,30,54,78],[6,30,56,82],[6,30,58,86],[6,34,62,90],[6,28,50,72,94],[6,26,50,74,98],[6,30,54,78,102],[6,28,54,80,106],[6,32,58,84,110],[6,30,58,86,114],[6,34,62,90,118],[6,26,50,74,98,122],[6,30,54,78,102,126],[6,26,52,\n78,104,130],[6,30,56,82,108,134],[6,34,60,86,112,138],[6,30,58,86,114,142],[6,34,62,90,118,146],[6,30,54,78,102,126,150],[6,24,50,76,102,128,154],[6,28,54,80,106,132,158],[6,32,58,84,110,136,162],[6,26,54,82,110,138,166],[6,30,58,86,114,142,170]],G15:1335,G18:7973,G15_MASK:21522,getBCHTypeInfo:function(a){for(var c=a<<10;0<=j.getBCHDigit(c)-j.getBCHDigit(j.G15);)c^=j.G15<<j.getBCHDigit(c)-j.getBCHDigit(j.G15);return(a<<10|c)^j.G15_MASK},getBCHTypeNumber:function(a){for(var c=a<<12;0<=j.getBCHDigit(c)-\nj.getBCHDigit(j.G18);)c^=j.G18<<j.getBCHDigit(c)-j.getBCHDigit(j.G18);return a<<12|c},getBCHDigit:function(a){for(var c=0;0!=a;)c++,a>>>=1;return c},getPatternPosition:function(a){return j.PATTERN_POSITION_TABLE[a-1]},getMask:function(a,c,d){switch(a){case 0:return 0==(c+d)%2;case 1:return 0==c%2;case 2:return 0==d%3;case 3:return 0==(c+d)%3;case 4:return 0==(Math.floor(c\/2)+Math.floor(d\/3))%2;case 5:return 0==c*d%2+c*d%3;case 6:return 0==(c*d%2+c*d%3)%2;case 7:return 0==(c*d%3+(c+d)%2)%2;default:throw Error(\"bad maskPattern:\"+\na);}},getErrorCorrectPolynomial:function(a){for(var c=new q([1],0),d=0;d<a;d++)c=c.multiply(new q([1,l.gexp(d)],0));return c},getLengthInBits:function(a,c){if(1<=c&&10>c)switch(a){case 1:return 10;case 2:return 9;case s:return 8;case 8:return 8;default:throw Error(\"mode:\"+a);}else if(27>c)switch(a){case 1:return 12;case 2:return 11;case s:return 16;case 8:return 10;default:throw Error(\"mode:\"+a);}else if(41>c)switch(a){case 1:return 14;case 2:return 13;case s:return 16;case 8:return 12;default:throw Error(\"mode:\"+\na);}else throw Error(\"type:\"+c);},getLostPoint:function(a){for(var c=a.getModuleCount(),d=0,b=0;b<c;b++)for(var e=0;e<c;e++){for(var f=0,i=a.isDark(b,e),g=-1;1>=g;g++)if(!(0>b+g||c<=b+g))for(var h=-1;1>=h;h++)0>e+h||c<=e+h||0==g&&0==h||i==a.isDark(b+g,e+h)&&f++;5<f&&(d+=3+f-5)}for(b=0;b<c-1;b++)for(e=0;e<c-1;e++)if(f=0,a.isDark(b,e)&&f++,a.isDark(b+1,e)&&f++,a.isDark(b,e+1)&&f++,a.isDark(b+1,e+1)&&f++,0==f||4==f)d+=3;for(b=0;b<c;b++)for(e=0;e<c-6;e++)a.isDark(b,e)&&!a.isDark(b,e+1)&&a.isDark(b,e+\n2)&&a.isDark(b,e+3)&&a.isDark(b,e+4)&&!a.isDark(b,e+5)&&a.isDark(b,e+6)&&(d+=40);for(e=0;e<c;e++)for(b=0;b<c-6;b++)a.isDark(b,e)&&!a.isDark(b+1,e)&&a.isDark(b+2,e)&&a.isDark(b+3,e)&&a.isDark(b+4,e)&&!a.isDark(b+5,e)&&a.isDark(b+6,e)&&(d+=40);for(e=f=0;e<c;e++)for(b=0;b<c;b++)a.isDark(b,e)&&f++;a=Math.abs(100*f\/c\/c-50)\/5;return d+10*a}},l={glog:function(a){if(1>a)throw Error(\"glog(\"+a+\")\");return l.LOG_TABLE[a]},gexp:function(a){for(;0>a;)a+=255;for(;256<=a;)a-=255;return l.EXP_TABLE[a]},EXP_TABLE:Array(256),\nLOG_TABLE:Array(256)},m=0;8>m;m++)l.EXP_TABLE[m]=1<<m;for(m=8;256>m;m++)l.EXP_TABLE[m]=l.EXP_TABLE[m-4]^l.EXP_TABLE[m-5]^l.EXP_TABLE[m-6]^l.EXP_TABLE[m-8];for(m=0;255>m;m++)l.LOG_TABLE[l.EXP_TABLE[m]]=m;q.prototype={get:function(a){return this.num[a]},getLength:function(){return this.num.length},multiply:function(a){for(var c=Array(this.getLength()+a.getLength()-1),d=0;d<this.getLength();d++)for(var b=0;b<a.getLength();b++)c[d+b]^=l.gexp(l.glog(this.get(d))+l.glog(a.get(b)));return new q(c,0)},mod:function(a){if(0>\nthis.getLength()-a.getLength())return this;for(var c=l.glog(this.get(0))-l.glog(a.get(0)),d=Array(this.getLength()),b=0;b<this.getLength();b++)d[b]=this.get(b);for(b=0;b<a.getLength();b++)d[b]^=l.gexp(l.glog(a.get(b))+c);return(new q(d,0)).mod(a)}};p.RS_BLOCK_TABLE=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],\n[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,\n116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,\n43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,\n3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,\n55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,\n45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];p.getRSBlocks=function(a,c){var d=p.getRsBlockTable(a,c);if(void 0==d)throw Error(\"bad rs block @ typeNumber:\"+a+\"\/errorCorrectLevel:\"+c);for(var b=d.length\/3,e=[],f=0;f<b;f++)for(var h=d[3*f+0],g=d[3*f+1],j=d[3*f+2],l=0;l<h;l++)e.push(new p(g,j));return e};p.getRsBlockTable=function(a,c){switch(c){case 1:return p.RS_BLOCK_TABLE[4*(a-1)+0];case 0:return p.RS_BLOCK_TABLE[4*(a-1)+1];case 3:return p.RS_BLOCK_TABLE[4*\n(a-1)+2];case 2:return p.RS_BLOCK_TABLE[4*(a-1)+3]}};t.prototype={get:function(a){return 1==(this.buffer[Math.floor(a\/8)]>>>7-a%8&1)},put:function(a,c){for(var d=0;d<c;d++)this.putBit(1==(a>>>c-d-1&1))},getLengthInBits:function(){return this.length},putBit:function(a){var c=Math.floor(this.length\/8);this.buffer.length<=c&&this.buffer.push(0);a&&(this.buffer[c]|=128>>>this.length%8);this.length++}};\"string\"===typeof h&&(h={text:h});h=r.extend({},{render:\"canvas\",width:256,height:256,typeNumber:-1,\ncorrectLevel:2,background:\"#ffffff\",foreground:\"#000000\"},h);return this.each(function(){var a;if(\"canvas\"==h.render){a=new o(h.typeNumber,h.correctLevel);a.addData(h.text);a.make();var c=document.createElement(\"canvas\");c.width=h.width;c.height=h.height;for(var d=c.getContext(\"2d\"),b=h.width\/a.getModuleCount(),e=h.height\/a.getModuleCount(),f=0;f<a.getModuleCount();f++)for(var i=0;i<a.getModuleCount();i++){d.fillStyle=a.isDark(f,i)?h.foreground:h.background;var g=Math.ceil((i+1)*b)-Math.floor(i*b),\nj=Math.ceil((f+1)*b)-Math.floor(f*b);d.fillRect(Math.round(i*b),Math.round(f*e),g,j)}}else{a=new o(h.typeNumber,h.correctLevel);a.addData(h.text);a.make();c=r(\"<table><\/table>\").css(\"width\",h.width+\"px\").css(\"height\",h.height+\"px\").css(\"border\",\"0px\").css(\"border-collapse\",\"collapse\").css(\"background-color\",h.background);d=h.width\/a.getModuleCount();b=h.height\/a.getModuleCount();for(e=0;e<a.getModuleCount();e++){f=r(\"<tr><\/tr>\").css(\"height\",b+\"px\").appendTo(c);for(i=0;i<a.getModuleCount();i++)r(\"<td><\/td>\").css(\"width\",\nd+\"px\").css(\"background-color\",a.isDark(e,i)?h.foreground:h.background).appendTo(f)}}a=c;jQuery(a).appendTo(this)})}})(jQuery);\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/chart.umd.1756145765.js","ext":"js","size":203190,"mtime":1757312769},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/login.1756145765.js","ext":"js","size":19792,"mtime":1757312769,"type":"text","content":"(function($) {\n\tfunction __(string) {\n\t\treturn WFLS_LOGIN_TRANSLATIONS[string] || string;\n\t}\n\t!function(Z){\"use strict\";Z.Zebra_Tooltips=function(t,l){var u,T,b,v,n={animation_speed:250,animation_offset:20,close_on_click:!0,content:!(this.version=\"2.1.0\"),hide_delay:100,keep_visible:!0,max_width:250,opacity:\".95\",position:\"center\",prerender:!1,show_delay:100,vertical_alignment:\"above\",vertical_offset:0,onBeforeHide:null,onHide:null,onBeforeShow:null,onShow:null},r=this,_=function(e){var t,o,i,a,l,n,r,_,s,p,d,h,c,f,w=e.data(\"Zebra_Tooltip\"),m=Z(window);return w.tooltip||(t=Z(\"<div>\",{\"class\":\"Zebra_Tooltip\",css:{opacity:0,display:\"block\"}}),o=Z(\"<div>\",{\"class\":\"Zebra_Tooltip_Message\",css:{maxWidth:w.max_width}}).html(w.content).appendTo(t),i=Z(\"<div>\",{\"class\":\"Zebra_Tooltip_Arrow\"}).appendTo(t),a=Z(\"<div>\").addClass(\"Zebra_Tooltip_Arrow_Border\").appendTo(i),Z(\"<div>\").appendTo(i),w.keep_visible&&(t.on(\"mouseleave\"+(w.close_on_click?\" click\":\"\"),function(){y(e)}),t.on(\"mouseenter\",function(){g(e)})),t.appendTo(\"body\"),w.sticky&&o.addClass(\"Zebra_Tooltip_Has_Close\"),l=t.outerWidth(),n=t.outerHeight(),r=a.outerWidth(),_=a.outerHeight(),s=o.outerWidth(),p=o.outerHeight(),w={tooltip:t,tooltip_width:l,tooltip_height:n+_\/2,message:o,arrow_container:i,arrow_width:r,arrow_height:_,arrow:a},t.css({width:w.tooltip_width,height:w.tooltip_height}),w.tooltip_width=w.tooltip_width+(o.outerWidth()-s),w.tooltip_height=w.tooltip_height+(o.outerHeight()-p),t.css({width:w.tooltip_width,height:w.tooltip_height,display:\"none\"}),w=Z.extend(e.data(\"Zebra_Tooltip\"),w),e.data(\"Zebra_Tooltip\",w)),w.sticky&&!w.close&&(Z(\"<a>\",{\"class\":\"Zebra_Tooltip_Close\",href:\"javascript:void(0)\"}).html(\"&times;\").on(\"click\",function(t){t.preventDefault();var o=e.data(\"Zebra_Tooltip\");o.sticky=!1,e.data(\"Zebra_Tooltip\",o),y(e)}).appendTo(w.message),w.close=!0,w=Z.extend(e.data(\"Zebra_Tooltip\"),w),e.data(\"Zebra_Tooltip\",w)),u=m.width(),T=m.height(),d=e.offset(),Z.extend(w,{element_left:d.left,element_top:d.top,element_width:e.outerWidth(),element_height:e.outerHeight()}),v=m.scrollTop(),b=m.scrollLeft(),h=\"left\"===w.position?w.element_left-w.tooltip_width+w.arrow_width:\"right\"===w.position?w.element_left+w.element_width-w.arrow_width:w.element_left+(w.element_width-w.tooltip_width)\/2,c=w.element_top-w.tooltip_height,f=\"left\"===w.position?w.tooltip_width-w.arrow_width-w.arrow_width\/2:\"right\"===w.position?w.arrow_width\/2:(w.tooltip_width-w.arrow_width)\/2,h+w.tooltip_width>u+b&&(f-=u+b-(h+w.tooltip_width)-6,h=u+b-w.tooltip_width-6,f+w.arrow_width>w.tooltip_width-6&&(f=w.tooltip_width-6-w.arrow_width),h+f+w.arrow_width\/2<w.element_left&&(f=-1e4)),h<b&&(f-=b-h,h=b+2,f<0&&(f=w.arrow_width\/2),h+f+w.arrow_width\/2>w.element_left+w.element_width&&(f=-1e4)),w.message.css(\"margin-top\",\"\"),w.arrow_container.removeClass(\"Zebra_Tooltip_Arrow_Top\").addClass(\"Zebra_Tooltip_Arrow_Bottom\"),c<v||\"below\"===w.vertical_alignment&&w.element_top+w.element_height+w.vertical_offset+w.tooltip_height+w.animation_offset<T+v?(c=w.element_top+w.element_height-w.vertical_offset,w.animation_offset=Math.abs(w.animation_offset),w.message.css(\"margin-top\",w.arrow_height\/2),w.arrow_container.removeClass(\"Zebra_Tooltip_Arrow_Bottom\").addClass(\"Zebra_Tooltip_Arrow_Top\")):(w.animation_offset=-Math.abs(w.animation_offset),c+=w.vertical_offset),w.arrow_container.css(\"left\",f),w.tooltip.css({left:h,top:c}),Z.extend(w,{tooltip_left:h,tooltip_top:c,arrow_left:f}),w=Z.extend(e.data(\"Zebra_Tooltip\"),w),e.data(\"Zebra_Tooltip\",w),w},g=function(t){var o=t.data(\"Zebra_Tooltip\");clearTimeout(o.show_timeout),o.muted||(clearTimeout(o.hide_timeout),o.show_timeout=setTimeout(function(){(o=_(t)).onBeforeShow&&\"function\"==typeof o.onBeforeShow&&!1===o.onBeforeShow(t,o.tooltip)||(\"block\"!==o.tooltip.css(\"display\")&&o.tooltip.css({top:o.tooltip_top+o.animation_offset}),o.tooltip.css(\"display\",\"block\"),o.tooltip.stop(),o.tooltip.animate({top:o.tooltip_top,opacity:o.opacity},o.animation_speed,function(){o.onShow&&\"function\"==typeof o.onShow&&o.onShow(t,o.tooltip)}))},o.show_delay))},y=function(t){var o=t.data(\"Zebra_Tooltip\");clearTimeout(o.hide_timeout),o.sticky||(clearTimeout(o.show_timeout),o.hide_timeout=setTimeout(function(){if(o.tooltip){if(o.onBeforeHide&&\"function\"==typeof o.onBeforeHide&&!1===o.onBeforeHide(t,o.tooltip))return;o.close=!1,o.destroy&&(o.muted=!0),t.data(\"Zebra_Tooltip\",o),Z(\"a.Zebra_Tooltip_Close\",o.tooltip).remove(),o.tooltip.stop(),o.tooltip.animate({opacity:0,top:o.tooltip_top+o.animation_offset},o.animation_speed,function(){Z(this).css(\"display\",\"none\"),o.onHide&&\"function\"==typeof o.onHide&&o.onHide(t,o.tooltip)})}},o.hide_delay))};r.hide=function(t,e){t.each(function(){var t=Z(this),o=t.data(\"Zebra_Tooltip\");o&&(o.sticky=!1,e&&(o.destroy=!0),t.data(\"Zebra_Tooltip\",o),y(t))})},r.show=function(t,e){t.each(function(){var t=Z(this),o=t.data(\"Zebra_Tooltip\");o&&(o.sticky=!0,o.muted=!1,e&&(o.destroy=!0),t.data(\"Zebra_Tooltip\",o),g(t))})},t.each(function(){var t,o=Z(this),e=o.attr(\"title\"),i=o.data(),a={};for(t in i)0===t.indexOf(\"ztt_\")&&(t=t.replace(\/^ztt\\_\/,\"\"),void 0!==n[t]&&(a[t]=i[\"ztt_\"+t]));a=Z.extend(n,r.settings,l,a),e&&(a.content=o.attr(\"title\")),void 0!==a.content&&\"\"!==a.content.trim()&&(o.on({mouseenter:function(){e&&Z(this).attr(\"title\",\"\"),g(o)},mouseleave:function(){y(o),e&&Z(this).attr(\"title\",e)}}),o.data(\"Zebra_Tooltip\",Z.extend({tooltip:null,show_timeout:null,hide_timeout:null,sticky:!1,destroy:!1,muted:!1},a)),a.prerender&&_(o))})}}($);\n\n\tfunction selectorSearch(selectors) {\n\t\tvar input = null;\n\t\treturn function() {\n\t\t\tif (input !== null)\n\t\t\t\treturn input;\n\t\t\tfor (var i = 0; i < selectors.length; i++) {\n\t\t\t\tinput = $(selectors[i]);\n\t\t\t\tif (input.length === 1)\n\t\t\t\t\treturn input;\n\t\t\t}\n\t\t\tinput = null;\n\t\t\treturn input;\n\t\t}\n\t};\n\tfunction FormElementLocator(inputSelectors, extraSelectors) {\n\t\tvar self = this;\n\n\t\tif (typeof extraSelectors == 'undefined')\n\t\t\textraSelectors = {};\n\n\t\tvar found = false;\n\t\tvar input = null, form = null, extra = {};\n\n\t\tvar findInput = selectorSearch(inputSelectors);\n\t\tvar search = function() {\n\t\t\tinput = findInput();\n\t\t\tif (input === null)\n\t\t\t\treturn false;\n\t\t\tform = input.closest('form');\n\t\t\tif (form.length !== 1) {\n\t\t\t\tform = null;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var key in extraSelectors) {\n\t\t\t\tvar match = form.find(extraSelectors[key]);\n\t\t\t\tif (match.length === 1) {\n\t\t\t\t\textra[key] = match;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tthis.locate = function() {\n\t\t\tif (!found)\n\t\t\t\tfound = search();\n\t\t\treturn found;\n\t\t};\n\t\tthis.getInput = function() {\n\t\t\treturn found ? input : null;\n\t\t};\n\t\tthis.getForm = function() {\n\t\t\treturn found ? form : null;\n\t\t};\n\t\tthis.getExtra = function(key) {\n\t\t\tif (key in extra)\n\t\t\t\treturn extra[key];\n\t\t\treturn null;\n\t\t}\n\t}\n\tvar loginLocator = new FormElementLocator(\n\t\t[\n\t\t\t'input[name=log]',\n\t\t\t'input[name=username]',\n\t\t\t'input#username[name=username]',\n\t\t\t'.woocommerce-form-login input[name=username]',\n\t\t\t'.login input[name=username]'\n\t\t],\n\t\t{\n\t\t\tpassword: 'input[name=\"pwd\"],input[name=password]'\n\t\t}\n\t);\n\tvar registrationLocator = new FormElementLocator([\n\t\t'input[name=user_login]',\n\t\t'#reg_email',\n\t\t'.woocommerce-form-register input[name=email]',\n\t\t'.register input[name=email]'\n\t]);\n\tvar locators = [\n\t\tloginLocator,\n\t\tregistrationLocator\n\t];\n\tfunction getRelevantInputs() {\n\t\tvar inputs = $();\n\t\tfor (var i = 0; i < locators.length; i++) {\n\t\t\tif (locators[i].locate())\n\t\t\t\tinputs = inputs.add(locators[i].getInput());\n\t\t}\n\t\treturn inputs;\n\t}\n\t\n\tvar wfls_init_captcha = function(actionCallback, log) {\n\t\tif (typeof log === 'undefined')\n\t\t\tlog = getRelevantInputs();\n\t\tif (typeof grecaptcha === 'object') {\n\t\t\tgrecaptcha.ready(function() {\n\t\t\t\tgrecaptcha.execute(WFLSVars.recaptchasitekey, {action: 'login'}).then(function(token) {\n\t\t\t\t\tvar tokenField = $('#wfls-captcha-token');\n\t\t\t\t\tif (tokenField.length) {\n\t\t\t\t\t\ttokenField.val(token);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (log.length) {\n\t\t\t\t\t\t\ttokenField = $('<input type=\"hidden\" name=\"wfls-captcha-token\" id=\"wfls-captcha-token\" \/>');\n\t\t\t\t\t\t\ttokenField.val(token);\n\t\t\t\t\t\t\tlog.parent().append(tokenField);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\ttypeof actionCallback === 'function' && actionCallback(true);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tvar tokenField = $('#wfls-captcha-token');\n\t\t\tif (tokenField.length) {\n\t\t\t\ttokenField.val('grecaptcha-missing');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (log.length) {\n\t\t\t\t\ttokenField = $('<input type=\"hidden\" name=\"wfls-captcha-token\" id=\"wfls-captcha-token\" \/>');\n\t\t\t\t\ttokenField.val('grecaptcha-missing');\n\t\t\t\t\tlog.parent().append(tokenField);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttypeof actionCallback === 'function' && actionCallback(true);\n\t\t}\n\t};\n\n\tfunction showLoginMessage(messageHtml, type) {\n\t\tvar heading = $('#login > h1');\n\t\tif (heading.length > 0) {\n\t\t\tvar dom = (type === 'error' ? $('<div id=\"login_error\">') : $('<p class=\"message\">'));\n\t\t\tdom.addClass('wfls-login-message');\n\t\t\tdom.addClass('notice');\n\t\t\tif (type === 'error') {\n\t\t\t\tdom.addClass('notice-error');\n\t\t\t}\n\t\t\tdom.html(messageHtml);\n\t\t\theading.after(dom);\n\t\t\tdom.get(0).scrollIntoView();\n\t\t\treturn;\n\t\t}\n\t\telse if ($('.woocommerce').length > 0){\n\t\t\tvar content = $('<div class=\"woocommerce wfls-login-message\">');\n\t\t\tvar errorList = $('<ul role=\"alert\">')\n\t\t\t\t.addClass(type === 'error' ? 'woocommerce-error' : 'woocommerce-info');\n\t\t\tcontent.append(errorList);\n\t\t\terrorList.append($('<li>').html(messageHtml));\n\t\t\tvar containerSearch = selectorSearch([\n\t\t\t\t'#primary',\n\t\t\t\t'.content-area',\n\t\t\t\t'#main',\n\t\t\t\t'.site-main',\n\t\t\t\t'main'\n\t\t\t]);\n\t\t\tvar container = containerSearch();\n\t\t\tif (container === null) {\n\t\t\t\tcontainer = loginLocator.getForm();\n\t\t\t}\n\t\t\tif (container !== null) {\n\t\t\t\tcontainer.before(content);\n\t\t\t\tcontent.get(0).scrollIntoView();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tvar messageModal = $('<div>')\n\t\t\t.attr('id', 'wfls-login-modal')\n\t\t\t.css({\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tright: 0,\n\t\t\t\tbottom: 0,\n\t\t\t\tleft: 0,\n\t\t\t\t'background-color': 'rgba(0,0,0,0.5)',\n\t\t\t\t'z-index': 9999,\n\t\t\t\tdisplay: 'flex',\n\t\t\t\t'align-items': 'center',\n\t\t\t\t'justify-content': 'center',\n\t\t\t\tpadding: '16px'\n\t\t\t})\n\t\t\t.appendTo($('body'));\n\t\tmessageModal.append(\n\t\t\t$('<div>')\n\t\t\t\t.css({\n\t\t\t\t\t'background-color': '#FFF',\n\t\t\t\t\t'border-radius': '4px',\n\t\t\t\t\tpadding: '16px',\n\t\t\t\t\t'text-align': 'center'\n\t\t\t\t})\n\t\t\t\t.append(\n\t\t\t\t\t$('<p>').html(messageHtml)\n\t\t\t\t)\n\t\t\t\t.append(\n\t\t\t\t\t$('<button>').text('Dismiss')\n\t\t\t\t\t\t.on('click', function() {\n\t\t\t\t\t\t\tmessageModal.remove();\n\t\t\t\t\t\t})\n\t\t\t\t)\n\t\t);\n\t}\n\t\t\n\t\n\tvar wfls_init_captcha_contact = function() {\n\t\t$('.wfls-registration-captcha-contact').on('click', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tif (registrationLocator.locate()) {\n\t\t\t\t$('#wfls-prompt-overlay').remove();\n\t\t\t\tvar overlay = $('<div id=\"wfls-prompt-overlay\"><\/div>');\n\t\t\t\tvar wrapper = $('<div id=\"wfls-prompt-wrapper\"><\/div>');\n\t\t\t\tvar field = $('<p><label for=\"wfls-message\"><\/label><br\/><textarea name=\"wfls-message\" id=\"wfls-message\" class=\"wfls-textarea\"><\/textarea><\/p>');\n\t\t\t\tfield.find('label[for=wfls-message]').text(__('Message to Support'));\n\t\t\t\tvar nonce = $('<input type=\"hidden\" name=\"wfls-message-nonce\" id=\"wfls-message-nonce\"\/>');\n\t\t\t\tvar button = $('<p class=\"submit\"><input type=\"submit\" name=\"wfls-support-submit\" id=\"wfls-support-submit\" class=\"button button-primary button-large\"\/><\/p>');\n\t\t\t\tbutton.find('input[type=submit]').val(__('Send'));\n\t\t\t\twrapper.append(field).append(nonce).append(button);\n\t\t\t\toverlay.append(wrapper);\n\t\t\t\tregistrationLocator.getForm().css('position', 'relative').append(overlay);\n\t\t\t\t\n\t\t\t\t$('#wfls-message-nonce').val($(this).data('token'));\n\t\n\t\t\t\t$('#wfls-support-submit').on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t$('#login_error, p.message').remove();\n\t\n\t\t\t\t\tvar data = registrationLocator.getForm().serialize();\n\t\t\t\t\tdata += '&action=wordfence_ls_register_support';\n\n\t\t\t\t\t$.ajax({\n\t\t\t\t\t\ttype: 'POST',\n\t\t\t\t\t\turl: WFLSVars.ajaxurl,\n\t\t\t\t\t\tdataType: 'json',\n\t\t\t\t\t\tdata: data,\n\t\t\t\t\t\tsuccess: function(json) {\n\t\t\t\t\t\t\tif (json.hasOwnProperty('error')) {\n\t\t\t\t\t\t\t\tshowLoginMessage(json.error, 'error');\n\t\t\t\t\t\t\t\tvar dom = $('<div id=\"login_error\">' + json.error + '<\/div>');\n\t\t\t\t\t\t\t\t$('#login > h1').after(dom);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if (json.hasOwnProperty('message')) { \/\/Success\n\t\t\t\t\t\t\t\tshowLoginMessage(json.message, 'message');\n\t\t\t\t\t\t\t\tvar dom = $('<p class=\"message\">' + json.message + '<\/p>');\n\t\t\t\t\t\t\t\t$('#login > h1').after(dom);\n\t\t\t\t\t\t\t\t$('#wfls-support-submit, #wfls-message').attr('disabled', true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\terror: function(err) {\n\t\t\t\t\t\t\tshowLoginMessage(__('An error was encountered while trying to send the message. Please try again.'), 'error');\n\t\t\t\t\t\t\tvar dom = $('<div id=\"login_error\"><\/div>');\n\t\t\t\t\t\t\tdom.html(__('<strong>ERROR<\/strong>: An error was encountered while trying to send the message. Please try again.'));\n\t\t\t\t\t\t\t$('#login > h1').after(dom);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfield.find(\"#wfls-message\").focus();\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction FormBlocker(form, buttonSelector, clickOnSubmit) {\n\n\t\tvar self = this;\n\t\tvar blocked = false;\n\t\tvar released = false;\n\t\tclickOnSubmit = clickOnSubmit || false;\n\t\tvar clickSubmitInProgress = false;\n\n\t\tthis.getButtons = function() {\n\t\t\treturn form.find(buttonSelector);\n\t\t}\n\n\t\tthis.block = function() {\n\t\t\tif (blocked)\n\t\t\t\treturn false;\n\t\t\tblocked = true;\n\t\t\tthis.getButtons().addClass('disabled').prop('disabled', true);\n\t\t\treturn true;\n\t\t}\n\n\t\tthis.unblock = function() {\n\t\t\tthis.getButtons().removeClass('disabled').prop('disabled', false);\n\t\t\tblocked = false;\n\t\t}\n\n\t\tthis.release = function() {\n\t\t\treleased = true;\n\t\t}\n\n\t\tthis.clickSubmit = function() {\n\t\t\tthis.unblock();\n\t\t\tvar submitButton = this.getButtons().first();\n\t\t\tsetTimeout(function() {\n\t\t\t\tsubmitButton.trigger('click');\n\t\t\t}, 1);\n\t\t}\n\n\t\tthis.initialize = function(callback) {\n\t\t\tform.on('submit', function(event) {\n\t\t\t\tif (released && (!clickOnSubmit || clickSubmitInProgress)) {\n\t\t\t\t\tif (clickSubmitInProgress)\n\t\t\t\t\t\tclickSubmitInProgress = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tif (released) {\n\t\t\t\t\tclickSubmitInProgress = true;\n\t\t\t\t\tself.clickSubmit();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (self.block()) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\tvar wfls_query_ajax = function(blocker) {\n\t\t$('.wfls-login-message').remove();\n\n\t\tif (!loginLocator.locate()) {\n\t\t\tconsole.error('Required login elements not found');\n\t\t\treturn;\n\t\t}\n\t\tvar form = loginLocator.getForm();\n\t\tvar log = loginLocator.getInput();\n\t\tvar pwd = loginLocator.getExtra('password');\n\t\t\n\t\tvar data = $(form).serialize();\n\t\tdata += '&action=wordfence_ls_authenticate';\n\n\t\t$.ajax({\n\t\t\ttype: 'POST',\n\t\t\turl: WFLSVars.ajaxurl,\n\t\t\tdataType: 'json',\n\t\t\tdata: data,\n\t\t\tsuccess: function(json) {\n\t\t\t\tif (json.hasOwnProperty('reset') && json.reset) {\n\t\t\t\t\t$('#wfls-prompt-overlay').remove();\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (json.hasOwnProperty('error')) {\n\t\t\t\t\tshowLoginMessage(json.error, 'error');\n\t\t\t\t\t$('#wfls-token').val('');\n\n\t\t\t\t\tif (parseInt(WFLSVars.useCAPTCHA)) {\n\t\t\t\t\t\twfls_init_captcha();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (json.hasOwnProperty('message')) {\n\t\t\t\t\tshowLoginMessage(json.message, 'message');\n\t\t\t\t\t$('#wfls-token').val('');\n\n\t\t\t\t\tif (parseInt(WFLSVars.useCAPTCHA)) {\n\t\t\t\t\t\twfls_init_captcha();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (json.hasOwnProperty('login')) {\n\t\t\t\t\tif (json.hasOwnProperty('captcha')) {\n\t\t\t\t\t\tvar captchaField = $('#wfls-captcha-jwt');\n\t\t\t\t\t\tif (!captchaField.length) {\n\t\t\t\t\t\t\tcaptchaField = $('<input type=\"hidden\" name=\"wfls-captcha-jwt\" id=\"wfls-captcha-jwt\" value=\"\"\/>');\n\t\t\t\t\t\t\tform.append(captchaField);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t$('#wfls-captcha-jwt').val(json.captcha);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tblocker.release();\n\t\t\t\t\tif (json.hasOwnProperty('two_factor_required') && json.two_factor_required) {\n\t\t\t\t\t\tif ($('#wfls-prompt-overlay').length === 0) {\n\t\t\t\t\t\t\tvar overlay = $('<div id=\"wfls-prompt-overlay\"><\/div>');\n\t\t\t\t\t\t\tvar wrapper = $('<div id=\"wfls-prompt-wrapper\"><\/div>');\n\t\t\t\t\t\t\tvar label = $('<label for=\"wfls-token\">');\n\t\t\t\t\t\t\tlabel.text(__('Wordfence 2FA Code') + ' ');\n\t\t\t\t\t\t\tlabel.append($('<a href=\"javascript:void(0)\" class=\"wfls-2fa-code-help wfls-tooltip-trigger\"><i class=\"dashicons dashicons-editor-help\"><\/i><\/a>').attr('title', __('The Wordfence 2FA Code can be found within the authenticator app you used when first activating two-factor authentication. You may also use one of your recovery codes.')));\n\t\t\t\t\t\t\tlabel = $('<p>').append(label);\n\t\t\t\t\t\t\tvar field = $('<p><input type=\"text\" name=\"wfls-token\" id=\"wfls-token\" aria-describedby=\"wfls-token-error\" class=\"input\" value=\"\" size=\"6\" autocomplete=\"one-time-code\"\/><\/p>');\n\t\t\t\t\t\t\tvar remember = $('<p class=\"wfls-remember-device-wrapper\"><label for=\"wfls-remember-device\"><input name=\"wfls-remember-device\" type=\"checkbox\" id=\"wfls-remember-device\" value=\"1\" \/> <\/label><\/p>');\n\t\t\t\t\t\t\tremember.find('label').append(__('Remember for 30 days'));\n\t\t\t\t\t\t\tvar button = $('<p class=\"submit\"><input type=\"submit\" name=\"wfls-token-submit\" id=\"wfls-token-submit\" class=\"button button-primary button-large\"\/><\/p>');\n\t\t\t\t\t\t\tbutton.find('input[type=submit]').val(__('Log In'));\n\t\t\t\t\t\t\twrapper.append(label);\n\t\t\t\t\t\t\twrapper.append(field);\n\t\t\t\t\t\t\tif (parseInt(WFLSVars.allowremember)) {\n\t\t\t\t\t\t\t\twrapper.append(remember);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twrapper.append(button);\n\t\t\t\t\t\t\toverlay.append(wrapper);\n\t\t\t\t\t\t\tform.css('position', 'relative').append(overlay);\n\t\t\t\t\t\t\tform.on('submit', function() {\n\t\t\t\t\t\t\t\t$('#wfls-token-submit').prop('disabled', true).addClass('disabled');\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t$('#wfls-token').focus();\n\n\t\t\t\t\t\t\tnew $.Zebra_Tooltips($('.wfls-tooltip-trigger'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse { \/\/Unexpected response, skip AJAX and process via the regular login flow\n\t\t\t\t\t\tblocker.clickSubmit();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tblocker.unblock();\n\t\t\t},\n\t\t\terror: function(err) {\n\t\t\t\tif (err.status == 503 || err.status == 403) {\n\t\t\t\t\tif ($('.woocommerce').length > 0) {\n\t\t\t\t\t\tif (err.status == 503) {\n\t\t\t\t\t\t\tshowLoginMessage(__('<strong>ERROR<\/strong>: Login failed with status code 503. Please contact the site administrator.'), 'error');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (err.status == 403) {\n\t\t\t\t\t\t\tshowLoginMessage(__('<strong>ERROR<\/strong>: Login failed with status code 403. Please contact the site administrator.'), 'error');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tblocker.unblock();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tshowLoginMessage(__('<strong>ERROR<\/strong>: An error was encountered while trying to authenticate. Please try again.'), 'error');\n\t\t\t\tblocker.unblock();\n\t\t\t}\n\t\t});\n\t};\n\t\n\t$(function() {\n\t\t\/\/Login\n\t\tif (loginLocator.locate()) {\n\t\t\tvar loginBlocker = new FormBlocker(loginLocator.getForm(), '#wp-submit,[type=submit][name=login]', true);\n\t\t\tloginBlocker.initialize(function() {\n\t\t\t\tif (parseInt(WFLSVars.useCAPTCHA)) {\n\t\t\t\t\twfls_init_captcha(function() { wfls_query_ajax(loginBlocker); });\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\twfls_query_ajax(loginBlocker);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t\/\/Registration\n\t\tif (registrationLocator.locate() && parseInt(WFLSVars.useCAPTCHA)) {\n\t\t\tvar registrationBlocker = new FormBlocker(registrationLocator.getForm(), '[type=submit]');\n\t\t\tregistrationBlocker.initialize(function() {\n\t\t\t\twfls_init_captcha(\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tregistrationBlocker.release();\n\t\t\t\t\t\tregistrationBlocker.clickSubmit();\n\t\t\t\t\t},\n\t\t\t\t\tregistrationLocator.getInput()\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tvar verificationField = $('#wfls-email-verification');\n\t\tif (verificationField.length) {\n\t\t\tverificationField.val(WFLSVars.verification || '');\n\t\t}\n\t\telse {\n\t\t\tvar log = getRelevantInputs();\n\t\t\tif (log.length) {\n\t\t\t\tverificationField = $('<input type=\"hidden\" name=\"wfls-email-verification\" id=\"wfls-email-verification\" \/>');\n\t\t\t\tverificationField.val(WFLSVars.verification);\n\t\t\t\tlog.parent().append(verificationField);\n\t\t\t}\n\t\t}\n\n\t\tif (parseInt(WFLSVars.useCAPTCHA)) {\n\t\t\twfls_init_captcha_contact();\n\t\t}\n\t});\n})(jQuery);\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/admin-global.1756145765.js","ext":"js","size":2259,"mtime":1757312769,"type":"text","content":"(function($) {\n\twindow['GWFLS'] = {\n\t\tinit: function() {\n\t\t\tthis.register_create_user_events();\n\n\t\t\t$('.wfls-persistent-notice').on('click', 'button', function() {\n\t\t\t\tGWFLS.ajax(\n\t\t\t\t\t'wordfence_ls_dismiss_persistent_notice',\n\t\t\t\t\t{notice_id: $(this).parent('.notice').attr('id')},\n\t\t\t\t);\n\t\t\t});\n\t\t},\n\n\t\t\/**\n\t\t * Sends a WP AJAX call, automatically adding our nonce.\n\t\t *\n\t\t * @param string action\n\t\t * @param string|array|object payload\n\t\t * @param function successCallback\n\t\t * @param function failureCallback\n\t\t *\/\n\t\tajax: function(action, payload, successCallback, failureCallback) {\n\t\t\tif (typeof(payload) == 'string') {\n\t\t\t\tif (payload.length > 0) {\n\t\t\t\t\tpayload += '&';\n\t\t\t\t}\n\t\t\t\tpayload += 'action=' + action + '&nonce=' + GWFLSVars.nonce;\n\t\t\t}\n\t\t\telse if (typeof(payload) == 'object' && payload instanceof Array) {\n\t\t\t\t\/\/ jQuery serialized form data\n\t\t\t\tpayload.push({\n\t\t\t\t\tname: 'action',\n\t\t\t\t\tvalue: action\n\t\t\t\t});\n\t\t\t\tpayload.push({\n\t\t\t\t\tname: 'nonce',\n\t\t\t\t\tvalue: GWFLSVars.nonce\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (typeof(payload) == 'object') {\n\t\t\t\tpayload['action'] = action;\n\t\t\t\tpayload['nonce'] = GWFLSVars.nonce;\n\t\t\t}\n\n\n\t\t\t$.ajax({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: GWFLSVars.ajaxurl,\n\t\t\t\tdataType: \"json\",\n\t\t\t\tdata: payload,\n\t\t\t\tsuccess: function(json) {\n\t\t\t\t\ttypeof successCallback == 'function' && successCallback(json);\n\t\t\t\t},\n\t\t\t\terror: function() {\n\t\t\t\t\ttypeof failureCallback == 'function' && failureCallback();\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tdismiss_notice: function(nid) {\n\t\t\tthis.ajax('wordfence_ls_dismiss_notice', {\n\t\t\t\t\tid: nid\n\t\t\t\t},\n\t\t\t\tfunction(res) { $('.wfls-notice[data-notice-id=\"' + nid + '\"]').fadeOut(); },\n\t\t\t\tfunction() { $('.wfls-notice[data-notice-id=\"' + nid + '\"]').fadeOut(); }\n\t\t\t);\n\t\t},\n\n\t\tregister_create_user_events: function() {\n\t\t\tvar container = $('#wfls-grace-period-toggle-container');\n\t\t\tif (container.length) {\n\t\t\t\tvar gracePeriodToggle = container.detach().find('tr');\n\t\t\t\t$('#createuser #role').on('change', function() {\n\t\t\t\t\tvar select = $(this);\n\t\t\t\t\tgracePeriodToggle.detach();\n\t\t\t\t\tvar role = select.val();\n\t\t\t\t\tvar row = select.closest('tr');\n\t\t\t\t\tif (role === 'administrator') {\n\t\t\t\t\t\tgracePeriodToggle.insertAfter(row);\n\t\t\t\t\t}\n\t\t\t\t}).trigger('change');\n\t\t\t}\n\t\t}\n\t};\n\n\t$(function() {\n\t\tGWFLS.init();\n\t});\n})(jQuery);\n\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/jquery.colorbox.min.1756145765.js","ext":"js","size":11781,"mtime":1757312769,"type":"text","content":"!function(d,s,l){var c,g,u,f,p,m,w,v,x,y,b,T,C,H,h,k,r,a,W,E,I,M,L,F,R,S,K,P,B,O,_,j,n,o={html:!1,photo:!1,iframe:!1,inline:!1,transition:\"elastic\",speed:300,fadeOut:300,width:!1,initialWidth:\"600\",innerWidth:!1,maxWidth:!1,height:!1,initialHeight:\"450\",innerHeight:!1,maxHeight:!1,scalePhotos:!0,scrolling:!0,opacity:.9,preloading:!0,className:!1,overlayClose:!0,escKey:!0,arrowKey:!0,top:!1,bottom:!1,left:!1,right:!1,fixed:!1,data:void 0,closeButton:!0,fastIframe:!0,open:!1,reposition:!0,loop:!0,slideshow:!1,slideshowAuto:!0,slideshowSpeed:2500,slideshowStart:\"start slideshow\",slideshowStop:\"stop slideshow\",photoRegex:\/\\.(gif|png|jp(e|g|eg)|bmp|ico|webp|jxr|svg)((#|\\?).*)?$\/i,retinaImage:!1,retinaUrl:!1,retinaSuffix:\"@2x.$1\",current:\"image {current} of {total}\",previous:\"previous\",next:\"next\",close:\"close\",xhrError:\"This content failed to load.\",imgError:\"This image failed to load.\",returnFocus:!0,trapFocus:!0,onOpen:!1,onLoad:!1,onComplete:!1,onCleanup:!1,onClosed:!1,rel:function(){return this.rel},href:function(){return d(this).attr(\"href\")},title:function(){return this.title},createImg:function(){var i=new Image,t=d(this).data(\"cbox-img-attrs\");return\"object\"==typeof t&&d.each(t,function(t,e){i[t]=e}),i},createIframe:function(){var i=s.createElement(\"iframe\"),t=d(this).data(\"cbox-iframe-attrs\");return\"object\"==typeof t&&d.each(t,function(t,e){i[t]=e}),\"frameBorder\"in i&&(i.frameBorder=0),\"allowTransparency\"in i&&(i.allowTransparency=\"true\"),i.name=(new Date).getTime(),i.allowFullscreen=!0,i}},D=\"wflscolorbox\",N=\"wflscbox\",z=N+\"Element\",A=N+\"_open\",q=N+\"_load\",U=N+\"_complete\",$=N+\"_cleanup\",G=N+\"_closed\",Q=N+\"_purge\",J=d(\"<a\/>\"),V=\"div\",X=0,Y={};function Z(t,e,i){var n=s.createElement(t);return e&&(n.id=N+e),i&&(n.style.cssText=i),d(n)}function tt(){return l.innerHeight?l.innerHeight:d(l).height()}function et(t,i){i!==Object(i)&&(i={}),this.cache={},this.el=t,this.value=function(t){var e;return void 0===this.cache[t]&&(void 0!==(e=d(this.el).attr(\"data-cbox-\"+t))?this.cache[t]=e:void 0!==i[t]?this.cache[t]=i[t]:void 0!==o[t]&&(this.cache[t]=o[t])),this.cache[t]},this.get=function(t){var e=this.value(t);return d.isFunction(e)?e.call(this.el,this):e}}function it(t){var e=x.length,i=(S+t)%e;return i<0?e+i:i}function nt(t,e){return Math.round((\/%\/.test(t)?(\"x\"===e?y.width():tt())\/100:1)*parseInt(t,10))}function ot(t,e){return t.get(\"photo\")||t.get(\"photoRegex\").test(e)}function ht(t,e){return t.get(\"retinaUrl\")&&1<l.devicePixelRatio?e.replace(t.get(\"photoRegex\"),t.get(\"retinaSuffix\")):e}function rt(t){\"contains\"in g[0]&&!g[0].contains(t.target)&&t.target!==c[0]&&(t.stopPropagation(),g.focus())}function at(t){at.str!==t&&(g.add(c).removeClass(at.str).addClass(t),at.str=t)}function st(t){d(s).trigger(t),J.triggerHandler(t)}var lt=function(){var t,e,i=N+\"Slideshow_\",n=\"click.\"+N;function o(){clearTimeout(e)}function h(){(I.get(\"loop\")||x[S+1])&&(o(),e=setTimeout(j.next,I.get(\"slideshowSpeed\")))}function r(){k.html(I.get(\"slideshowStop\")).unbind(n).one(n,a),J.bind(U,h).bind(q,o),g.removeClass(i+\"off\").addClass(i+\"on\")}function a(){o(),J.unbind(U,h).unbind(q,o),k.html(I.get(\"slideshowStart\")).unbind(n).one(n,function(){j.next(),r()}),g.removeClass(i+\"on\").addClass(i+\"off\")}function s(){t=!1,k.hide(),o(),J.unbind(U,h).unbind(q,o),g.removeClass(i+\"off \"+i+\"on\")}return function(){t?I.get(\"slideshow\")||(J.unbind($,s),s()):I.get(\"slideshow\")&&x[1]&&(t=!0,J.one($,s),I.get(\"slideshowAuto\")?r():a(),k.show())}}();function dt(t){var e,i;if(!O){if(e=d(t).data(D),I=new et(t,e),i=I.get(\"rel\"),S=0,i&&!1!==i&&\"nofollow\"!==i?(x=d(\".\"+z).filter(function(){return new et(this,d.data(this,D)).get(\"rel\")===i}),-1===(S=x.index(I.el))&&(x=x.add(I.el),S=x.length-1)):x=d(I.el),!P){P=B=!0,at(I.get(\"className\")),g.css({visibility:\"hidden\",display:\"block\",opacity:\"\"}),b=Z(V,\"LoadedContent\",\"width:0; height:0; overflow:hidden; visibility:hidden\"),f.css({width:\"\",height:\"\"}).append(b),M=p.height()+v.height()+f.outerHeight(!0)-f.height(),L=m.width()+w.width()+f.outerWidth(!0)-f.width(),F=b.outerHeight(!0),R=b.outerWidth(!0);var n=nt(I.get(\"initialWidth\"),\"x\"),o=nt(I.get(\"initialHeight\"),\"y\"),h=I.get(\"maxWidth\"),r=I.get(\"maxHeight\");I.w=Math.max((!1!==h?Math.min(n,nt(h,\"x\")):n)-R-L,0),I.h=Math.max((!1!==r?Math.min(o,nt(r,\"y\")):o)-F-M,0),b.css({width:\"\",height:I.h}),j.position(),st(A),I.get(\"onOpen\"),E.add(H).hide(),g.focus(),I.get(\"trapFocus\")&&s.addEventListener&&(s.addEventListener(\"focus\",rt,!0),J.one(G,function(){s.removeEventListener(\"focus\",rt,!0)})),I.get(\"returnFocus\")&&J.one(G,function(){d(I.el).focus()})}var a=parseFloat(I.get(\"opacity\"));c.css({opacity:a==a?a:\"\",cursor:I.get(\"overlayClose\")?\"pointer\":\"\",visibility:\"visible\"}).show(),I.get(\"closeButton\")?W.html(I.get(\"close\")).appendTo(f):W.appendTo(\"<div\/>\"),function(){var t,e,i,n=j.prep,o=++X;K=!(B=!0),st(Q),st(q),I.get(\"onLoad\"),I.h=I.get(\"height\")?nt(I.get(\"height\"),\"y\")-F-M:I.get(\"innerHeight\")&&nt(I.get(\"innerHeight\"),\"y\"),I.w=I.get(\"width\")?nt(I.get(\"width\"),\"x\")-R-L:I.get(\"innerWidth\")&&nt(I.get(\"innerWidth\"),\"x\"),I.mw=I.w,I.mh=I.h,I.get(\"maxWidth\")&&(I.mw=nt(I.get(\"maxWidth\"),\"x\")-R-L,I.mw=I.w&&I.w<I.mw?I.w:I.mw);I.get(\"maxHeight\")&&(I.mh=nt(I.get(\"maxHeight\"),\"y\")-F-M,I.mh=I.h&&I.h<I.mh?I.h:I.mh);if(t=I.get(\"href\"),_=setTimeout(function(){C.show()},100),I.get(\"inline\")){var h=d(t).eq(0);i=d(\"<div>\").hide().insertBefore(h),J.one(Q,function(){i.replaceWith(h)}),n(h)}else I.get(\"iframe\")?n(\" \"):I.get(\"html\")?n(I.get(\"html\")):ot(I,t)?(t=ht(I,t),K=I.get(\"createImg\"),d(K).addClass(N+\"Photo\").bind(\"error.\"+N,function(){n(Z(V,\"Error\").html(I.get(\"imgError\")))}).one(\"load\",function(){o===X&&setTimeout(function(){var t;I.get(\"retinaImage\")&&1<l.devicePixelRatio&&(K.height=K.height\/l.devicePixelRatio,K.width=K.width\/l.devicePixelRatio),I.get(\"scalePhotos\")&&(e=function(){K.height-=K.height*t,K.width-=K.width*t},I.mw&&K.width>I.mw&&(t=(K.width-I.mw)\/K.width,e()),I.mh&&K.height>I.mh&&(t=(K.height-I.mh)\/K.height,e())),I.h&&(K.style.marginTop=Math.max(I.mh-K.height,0)\/2+\"px\"),x[1]&&(I.get(\"loop\")||x[S+1])&&(K.style.cursor=\"pointer\",d(K).bind(\"click.\"+N,function(){j.next()})),K.style.width=K.width+\"px\",K.style.height=K.height+\"px\",n(K)},1)}),K.src=t):t&&T.load(t,I.get(\"data\"),function(t,e){o===X&&n(\"error\"===e?Z(V,\"Error\").html(I.get(\"xhrError\")):d(this).contents())})}()}}function ct(){g||(n=!1,y=d(l),g=Z(V).attr({id:D,class:!1===d.support.opacity?N+\"IE\":\"\",role:\"dialog\",tabindex:\"-1\"}).hide(),c=Z(V,\"Overlay\").hide(),C=d([Z(V,\"LoadingOverlay\")[0],Z(V,\"LoadingGraphic\")[0]]),u=Z(V,\"Wrapper\"),f=Z(V,\"Content\").append(H=Z(V,\"Title\"),h=Z(V,\"Current\"),a=d('<button type=\"button\"\/>').attr({id:N+\"Previous\"}),r=d('<button type=\"button\"\/>').attr({id:N+\"Next\"}),k=d('<button type=\"button\"\/>').attr({id:N+\"Slideshow\"}),C),W=d('<button type=\"button\"\/>').attr({id:N+\"Close\"}),u.append(Z(V).append(Z(V,\"TopLeft\"),p=Z(V,\"TopCenter\"),Z(V,\"TopRight\")),Z(V,!1,\"clear:left\").append(m=Z(V,\"MiddleLeft\"),f,w=Z(V,\"MiddleRight\")),Z(V,!1,\"clear:left\").append(Z(V,\"BottomLeft\"),v=Z(V,\"BottomCenter\"),Z(V,\"BottomRight\"))).find(\"div div\").css({float:\"left\"}),T=Z(V,!1,\"position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;\"),E=r.add(a).add(h).add(k)),s.body&&!g.parent().length&&d(s.body).append(c,g.append(u,T))}d[D]||(d(ct),(j=d.fn[D]=d[D]=function(e,t){var i=this;return e=e||{},d.isFunction(i)&&(i=d(\"<a\/>\"),e.open=!0),i[0]&&(ct(),function(){function t(t){1<t.which||t.shiftKey||t.altKey||t.metaKey||t.ctrlKey||(t.preventDefault(),dt(this))}return!!g&&(n||(n=!0,r.click(function(){j.next()}),a.click(function(){j.prev()}),W.click(function(){j.close()}),c.click(function(){I.get(\"overlayClose\")&&j.close()}),d(s).bind(\"keydown.\"+N,function(t){var e=t.keyCode;P&&I.get(\"escKey\")&&27===e&&(t.preventDefault(),j.close()),P&&I.get(\"arrowKey\")&&x[1]&&!t.altKey&&(37===e?(t.preventDefault(),a.click()):39===e&&(t.preventDefault(),r.click()))}),d.isFunction(d.fn.on)?d(s).on(\"click.\"+N,\".\"+z,t):d(\".\"+z).live(\"click.\"+N,t)),!0)}()&&(t&&(e.onComplete=t),i.each(function(){var t=d.data(this,D)||{};d.data(this,D,d.extend(t,e))}).addClass(z),new et(i[0],e).get(\"open\")&&dt(i[0]))),i}).position=function(e,t){var i,n,o,h=0,r=0,a=g.offset();function s(){p[0].style.width=v[0].style.width=f[0].style.width=parseInt(g[0].style.width,10)-L+\"px\",f[0].style.height=m[0].style.height=w[0].style.height=parseInt(g[0].style.height,10)-M+\"px\"}if(y.unbind(\"resize.\"+N),g.css({top:-9e4,left:-9e4}),n=y.scrollTop(),o=y.scrollLeft(),I.get(\"fixed\")?(a.top-=n,a.left-=o,g.css({position:\"fixed\"})):(h=n,r=o,g.css({position:\"absolute\"})),!1!==I.get(\"right\")?r+=Math.max(y.width()-I.w-R-L-nt(I.get(\"right\"),\"x\"),0):!1!==I.get(\"left\")?r+=nt(I.get(\"left\"),\"x\"):r+=Math.round(Math.max(y.width()-I.w-R-L,0)\/2),!1!==I.get(\"bottom\")?h+=Math.max(tt()-I.h-F-M-nt(I.get(\"bottom\"),\"y\"),0):!1!==I.get(\"top\")?h+=nt(I.get(\"top\"),\"y\"):h+=Math.round(Math.max(tt()-I.h-F-M,0)\/2),g.css({top:a.top,left:a.left,visibility:\"visible\"}),u[0].style.width=u[0].style.height=\"9999px\",i={width:I.w+R+L,height:I.h+F+M,top:h,left:r},e){var l=0;d.each(i,function(t){i[t]===Y[t]||(l=e)}),e=l}Y=i,e||g.css(i),g.dequeue().animate(i,{duration:e||0,complete:function(){s(),B=!1,u[0].style.width=I.w+R+L+\"px\",u[0].style.height=I.h+F+M+\"px\",I.get(\"reposition\")&&setTimeout(function(){y.bind(\"resize.\"+N,j.position)},1),d.isFunction(t)&&t()},step:s})},j.resize=function(t){var e;P&&((t=t||{}).width&&(I.w=nt(t.width,\"x\")-R-L),t.innerWidth&&(I.w=nt(t.innerWidth,\"x\")),b.css({width:I.w}),t.height&&(I.h=nt(t.height,\"y\")-F-M),t.innerHeight&&(I.h=nt(t.innerHeight,\"y\")),t.innerHeight||t.height||(e=b.scrollTop(),b.css({height:\"auto\"}),I.h=b.height()),b.css({height:I.h}),e&&b.scrollTop(e),j.position(\"none\"===I.get(\"transition\")?0:I.get(\"speed\")))},j.prep=function(t){if(P){var e,o=\"none\"===I.get(\"transition\")?0:I.get(\"speed\");b.remove(),(b=Z(V,\"LoadedContent\").append(t)).hide().appendTo(T.show()).css({width:(I.w=I.w||b.width(),I.w=I.mw&&I.mw<I.w?I.mw:I.w,I.w),overflow:I.get(\"scrolling\")?\"auto\":\"hidden\"}).css({height:(I.h=I.h||b.height(),I.h=I.mh&&I.mh<I.h?I.mh:I.h,I.h)}).prependTo(f),T.hide(),d(K).css({float:\"none\"}),at(I.get(\"className\")),e=function(){var t,e,i=x.length;function n(){!1===d.support.opacity&&g[0].style.removeAttribute(\"filter\")}P&&(e=function(){clearTimeout(_),C.hide(),st(U),I.get(\"onComplete\")},H.html(I.get(\"title\")).show(),b.show(),1<i?(\"string\"==typeof I.get(\"current\")&&h.html(I.get(\"current\").replace(\"{current}\",S+1).replace(\"{total}\",i)).show(),r[I.get(\"loop\")||S<i-1?\"show\":\"hide\"]().html(I.get(\"next\")),a[I.get(\"loop\")||S?\"show\":\"hide\"]().html(I.get(\"previous\")),lt(),I.get(\"preloading\")&&d.each([it(-1),it(1)],function(){var t=x[this],e=new et(t,d.data(t,D)),i=e.get(\"href\");i&&ot(e,i)&&(i=ht(e,i),s.createElement(\"img\").src=i)})):E.hide(),I.get(\"iframe\")?(t=I.get(\"createIframe\"),I.get(\"scrolling\")||(t.scrolling=\"no\"),d(t).attr({src:I.get(\"href\"),class:N+\"Iframe\"}).one(\"load\",e).appendTo(b),J.one(Q,function(){t.src=\"\/\/about:blank\"}),I.get(\"fastIframe\")&&d(t).trigger(\"load\")):e(),\"fade\"===I.get(\"transition\")?g.fadeTo(o,1,n):n())},\"fade\"===I.get(\"transition\")?g.fadeTo(o,0,function(){j.position(0,e)}):j.position(o,e)}},j.next=function(){!B&&x[1]&&(I.get(\"loop\")||x[S+1])&&(S=it(1),dt(x[S]))},j.prev=function(){!B&&x[1]&&(I.get(\"loop\")||S)&&(S=it(-1),dt(x[S]))},j.close=function(){P&&!O&&(P=!(O=!0),st($),I.get(\"onCleanup\"),y.unbind(\".\"+N),c.fadeTo(I.get(\"fadeOut\")||0,0),g.stop().fadeTo(I.get(\"fadeOut\")||0,0,function(){g.hide(),c.hide(),st(Q),b.remove(),setTimeout(function(){O=!1,st(G),I.get(\"onClosed\")},1)}))},j.remove=function(){g&&(g.stop(),d[D].close(),g.stop(!1,!0).remove(),c.remove(),O=!1,g=null,d(\".\"+z).removeData(D).removeClass(z),d(s).unbind(\"click.\"+N).unbind(\"keydown.\"+N))},j.element=function(){return d(I.el)},j.settings=o)}(jQuery,document,window);"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/js\/jquery.colorbox.1756145765.js","ext":"js","size":29177,"mtime":1757312769,"type":"text","content":"\/*!\n\tColorbox 1.6.4\n\tlicense: MIT\n\thttp:\/\/www.jacklmoore.com\/colorbox\n*\/\n(function ($, document, window) {\n\tvar\n\t\/\/ Default settings object.\n\t\/\/ See http:\/\/jacklmoore.com\/colorbox for details.\n\tdefaults = {\n\t\t\/\/ data sources\n\t\thtml: false,\n\t\tphoto: false,\n\t\tiframe: false,\n\t\tinline: false,\n\n\t\t\/\/ behavior and appearance\n\t\ttransition: \"elastic\",\n\t\tspeed: 300,\n\t\tfadeOut: 300,\n\t\twidth: false,\n\t\tinitialWidth: \"600\",\n\t\tinnerWidth: false,\n\t\tmaxWidth: false,\n\t\theight: false,\n\t\tinitialHeight: \"450\",\n\t\tinnerHeight: false,\n\t\tmaxHeight: false,\n\t\tscalePhotos: true,\n\t\tscrolling: true,\n\t\topacity: 0.9,\n\t\tpreloading: true,\n\t\tclassName: false,\n\t\toverlayClose: true,\n\t\tescKey: true,\n\t\tarrowKey: true,\n\t\ttop: false,\n\t\tbottom: false,\n\t\tleft: false,\n\t\tright: false,\n\t\tfixed: false,\n\t\tdata: undefined,\n\t\tcloseButton: true,\n\t\tfastIframe: true,\n\t\topen: false,\n\t\treposition: true,\n\t\tloop: true,\n\t\tslideshow: false,\n\t\tslideshowAuto: true,\n\t\tslideshowSpeed: 2500,\n\t\tslideshowStart: \"start slideshow\",\n\t\tslideshowStop: \"stop slideshow\",\n\t\tphotoRegex: \/\\.(gif|png|jp(e|g|eg)|bmp|ico|webp|jxr|svg)((#|\\?).*)?$\/i,\n\n\t\t\/\/ alternate image paths for high-res displays\n\t\tretinaImage: false,\n\t\tretinaUrl: false,\n\t\tretinaSuffix: '@2x.$1',\n\n\t\t\/\/ internationalization\n\t\tcurrent: \"image {current} of {total}\",\n\t\tprevious: \"previous\",\n\t\tnext: \"next\",\n\t\tclose: \"close\",\n\t\txhrError: \"This content failed to load.\",\n\t\timgError: \"This image failed to load.\",\n\n\t\t\/\/ accessbility\n\t\treturnFocus: true,\n\t\ttrapFocus: true,\n\n\t\t\/\/ callbacks\n\t\tonOpen: false,\n\t\tonLoad: false,\n\t\tonComplete: false,\n\t\tonCleanup: false,\n\t\tonClosed: false,\n\n\t\trel: function() {\n\t\t\treturn this.rel;\n\t\t},\n\t\thref: function() {\n\t\t\t\/\/ using this.href would give the absolute url, when the href may have been inteded as a selector (e.g. '#container')\n\t\t\treturn $(this).attr('href');\n\t\t},\n\t\ttitle: function() {\n\t\t\treturn this.title;\n\t\t},\n\t\tcreateImg: function() {\n\t\t\tvar img = new Image();\n\t\t\tvar attrs = $(this).data('cbox-img-attrs');\n\n\t\t\tif (typeof attrs === 'object') {\n\t\t\t\t$.each(attrs, function(key, val){\n\t\t\t\t\timg[key] = val;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn img;\n\t\t},\n\t\tcreateIframe: function() {\n\t\t\tvar iframe = document.createElement('iframe');\n\t\t\tvar attrs = $(this).data('cbox-iframe-attrs');\n\n\t\t\tif (typeof attrs === 'object') {\n\t\t\t\t$.each(attrs, function(key, val){\n\t\t\t\t\tiframe[key] = val;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif ('frameBorder' in iframe) {\n\t\t\t\tiframe.frameBorder = 0;\n\t\t\t}\n\t\t\tif ('allowTransparency' in iframe) {\n\t\t\t\tiframe.allowTransparency = \"true\";\n\t\t\t}\n\t\t\tiframe.name = (new Date()).getTime(); \/\/ give the iframe a unique name to prevent caching\n\t\t\tiframe.allowFullscreen = true;\n\n\t\t\treturn iframe;\n\t\t}\n\t},\n\n\t\/\/ Abstracting the HTML and event identifiers for easy rebranding\n\tcolorbox = 'wflscolorbox',\n\tprefix = 'wflscbox',\n\tboxElement = prefix + 'Element',\n\n\t\/\/ Events\n\tevent_open = prefix + '_open',\n\tevent_load = prefix + '_load',\n\tevent_complete = prefix + '_complete',\n\tevent_cleanup = prefix + '_cleanup',\n\tevent_closed = prefix + '_closed',\n\tevent_purge = prefix + '_purge',\n\n\t\/\/ Cached jQuery Object Variables\n\t$overlay,\n\t$box,\n\t$wrap,\n\t$content,\n\t$topBorder,\n\t$leftBorder,\n\t$rightBorder,\n\t$bottomBorder,\n\t$related,\n\t$window,\n\t$loaded,\n\t$loadingBay,\n\t$loadingOverlay,\n\t$title,\n\t$current,\n\t$slideshow,\n\t$next,\n\t$prev,\n\t$close,\n\t$groupControls,\n\t$events = $('<a\/>'), \/\/ $({}) would be preferred, but there is an issue with jQuery 1.4.2\n\n\t\/\/ Variables for cached values or use across multiple functions\n\tsettings,\n\tinterfaceHeight,\n\tinterfaceWidth,\n\tloadedHeight,\n\tloadedWidth,\n\tindex,\n\tphoto,\n\topen,\n\tactive,\n\tclosing,\n\tloadingTimer,\n\tpublicMethod,\n\tdiv = \"div\",\n\trequests = 0,\n\tpreviousCSS = {},\n\tinit;\n\n\t\/\/ ****************\n\t\/\/ HELPER FUNCTIONS\n\t\/\/ ****************\n\n\t\/\/ Convenience function for creating new jQuery objects\n\tfunction $tag(tag, id, css) {\n\t\tvar element = document.createElement(tag);\n\n\t\tif (id) {\n\t\t\telement.id = prefix + id;\n\t\t}\n\n\t\tif (css) {\n\t\t\telement.style.cssText = css;\n\t\t}\n\n\t\treturn $(element);\n\t}\n\n\t\/\/ Get the window height using innerHeight when available to avoid an issue with iOS\n\t\/\/ http:\/\/bugs.jquery.com\/ticket\/6724\n\tfunction winheight() {\n\t\treturn window.innerHeight ? window.innerHeight : $(window).height();\n\t}\n\n\tfunction Settings(element, options) {\n\t\tif (options !== Object(options)) {\n\t\t\toptions = {};\n\t\t}\n\n\t\tthis.cache = {};\n\t\tthis.el = element;\n\n\t\tthis.value = function(key) {\n\t\t\tvar dataAttr;\n\n\t\t\tif (this.cache[key] === undefined) {\n\t\t\t\tdataAttr = $(this.el).attr('data-cbox-'+key);\n\n\t\t\t\tif (dataAttr !== undefined) {\n\t\t\t\t\tthis.cache[key] = dataAttr;\n\t\t\t\t} else if (options[key] !== undefined) {\n\t\t\t\t\tthis.cache[key] = options[key];\n\t\t\t\t} else if (defaults[key] !== undefined) {\n\t\t\t\t\tthis.cache[key] = defaults[key];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.cache[key];\n\t\t};\n\n\t\tthis.get = function(key) {\n\t\t\tvar value = this.value(key);\n\t\t\treturn $.isFunction(value) ? value.call(this.el, this) : value;\n\t\t};\n\t}\n\n\t\/\/ Determine the next and previous members in a group.\n\tfunction getIndex(increment) {\n\t\tvar\n\t\tmax = $related.length,\n\t\tnewIndex = (index + increment) % max;\n\n\t\treturn (newIndex < 0) ? max + newIndex : newIndex;\n\t}\n\n\t\/\/ Convert '%' and 'px' values to integers\n\tfunction setSize(size, dimension) {\n\t\treturn Math.round((\/%\/.test(size) ? ((dimension === 'x' ? $window.width() : winheight()) \/ 100) : 1) * parseInt(size, 10));\n\t}\n\n\t\/\/ Checks an href to see if it is a photo.\n\t\/\/ There is a force photo option (photo: true) for hrefs that cannot be matched by the regex.\n\tfunction isImage(settings, url) {\n\t\treturn settings.get('photo') || settings.get('photoRegex').test(url);\n\t}\n\n\tfunction retinaUrl(settings, url) {\n\t\treturn settings.get('retinaUrl') && window.devicePixelRatio > 1 ? url.replace(settings.get('photoRegex'), settings.get('retinaSuffix')) : url;\n\t}\n\n\tfunction trapFocus(e) {\n\t\tif ('contains' in $box[0] && !$box[0].contains(e.target) && e.target !== $overlay[0]) {\n\t\t\te.stopPropagation();\n\t\t\t$box.focus();\n\t\t}\n\t}\n\n\tfunction setClass(str) {\n\t\tif (setClass.str !== str) {\n\t\t\t$box.add($overlay).removeClass(setClass.str).addClass(str);\n\t\t\tsetClass.str = str;\n\t\t}\n\t}\n\n\tfunction getRelated(rel) {\n\t\tindex = 0;\n\n\t\tif (rel && rel !== false && rel !== 'nofollow') {\n\t\t\t$related = $('.' + boxElement).filter(function () {\n\t\t\t\tvar options = $.data(this, colorbox);\n\t\t\t\tvar settings = new Settings(this, options);\n\t\t\t\treturn (settings.get('rel') === rel);\n\t\t\t});\n\t\t\tindex = $related.index(settings.el);\n\n\t\t\t\/\/ Check direct calls to Colorbox.\n\t\t\tif (index === -1) {\n\t\t\t\t$related = $related.add(settings.el);\n\t\t\t\tindex = $related.length - 1;\n\t\t\t}\n\t\t} else {\n\t\t\t$related = $(settings.el);\n\t\t}\n\t}\n\n\tfunction trigger(event) {\n\t\t\/\/ for external use\n\t\t$(document).trigger(event);\n\t\t\/\/ for internal use\n\t\t$events.triggerHandler(event);\n\t}\n\n\tvar slideshow = (function(){\n\t\tvar active,\n\t\t\tclassName = prefix + \"Slideshow_\",\n\t\t\tclick = \"click.\" + prefix,\n\t\t\ttimeOut;\n\n\t\tfunction clear () {\n\t\t\tclearTimeout(timeOut);\n\t\t}\n\n\t\tfunction set() {\n\t\t\tif (settings.get('loop') || $related[index + 1]) {\n\t\t\t\tclear();\n\t\t\t\ttimeOut = setTimeout(publicMethod.next, settings.get('slideshowSpeed'));\n\t\t\t}\n\t\t}\n\n\t\tfunction start() {\n\t\t\t$slideshow\n\t\t\t\t.html(settings.get('slideshowStop'))\n\t\t\t\t.unbind(click)\n\t\t\t\t.one(click, stop);\n\n\t\t\t$events\n\t\t\t\t.bind(event_complete, set)\n\t\t\t\t.bind(event_load, clear);\n\n\t\t\t$box.removeClass(className + \"off\").addClass(className + \"on\");\n\t\t}\n\n\t\tfunction stop() {\n\t\t\tclear();\n\n\t\t\t$events\n\t\t\t\t.unbind(event_complete, set)\n\t\t\t\t.unbind(event_load, clear);\n\n\t\t\t$slideshow\n\t\t\t\t.html(settings.get('slideshowStart'))\n\t\t\t\t.unbind(click)\n\t\t\t\t.one(click, function () {\n\t\t\t\t\tpublicMethod.next();\n\t\t\t\t\tstart();\n\t\t\t\t});\n\n\t\t\t$box.removeClass(className + \"on\").addClass(className + \"off\");\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tactive = false;\n\t\t\t$slideshow.hide();\n\t\t\tclear();\n\t\t\t$events\n\t\t\t\t.unbind(event_complete, set)\n\t\t\t\t.unbind(event_load, clear);\n\t\t\t$box.removeClass(className + \"off \" + className + \"on\");\n\t\t}\n\n\t\treturn function(){\n\t\t\tif (active) {\n\t\t\t\tif (!settings.get('slideshow')) {\n\t\t\t\t\t$events.unbind(event_cleanup, reset);\n\t\t\t\t\treset();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (settings.get('slideshow') && $related[1]) {\n\t\t\t\t\tactive = true;\n\t\t\t\t\t$events.one(event_cleanup, reset);\n\t\t\t\t\tif (settings.get('slideshowAuto')) {\n\t\t\t\t\t\tstart();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstop();\n\t\t\t\t\t}\n\t\t\t\t\t$slideshow.show();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t}());\n\n\n\tfunction launch(element) {\n\t\tvar options;\n\n\t\tif (!closing) {\n\n\t\t\toptions = $(element).data(colorbox);\n\n\t\t\tsettings = new Settings(element, options);\n\n\t\t\tgetRelated(settings.get('rel'));\n\n\t\t\tif (!open) {\n\t\t\t\topen = active = true; \/\/ Prevents the page-change action from queuing up if the visitor holds down the left or right keys.\n\n\t\t\t\tsetClass(settings.get('className'));\n\n\t\t\t\t\/\/ Show colorbox so the sizes can be calculated in older versions of jQuery\n\t\t\t\t$box.css({visibility:'hidden', display:'block', opacity:''});\n\n\t\t\t\t$loaded = $tag(div, 'LoadedContent', 'width:0; height:0; overflow:hidden; visibility:hidden');\n\t\t\t\t$content.css({width:'', height:''}).append($loaded);\n\n\t\t\t\t\/\/ Cache values needed for size calculations\n\t\t\t\tinterfaceHeight = $topBorder.height() + $bottomBorder.height() + $content.outerHeight(true) - $content.height();\n\t\t\t\tinterfaceWidth = $leftBorder.width() + $rightBorder.width() + $content.outerWidth(true) - $content.width();\n\t\t\t\tloadedHeight = $loaded.outerHeight(true);\n\t\t\t\tloadedWidth = $loaded.outerWidth(true);\n\n\t\t\t\t\/\/ Opens inital empty Colorbox prior to content being loaded.\n\t\t\t\tvar initialWidth = setSize(settings.get('initialWidth'), 'x');\n\t\t\t\tvar initialHeight = setSize(settings.get('initialHeight'), 'y');\n\t\t\t\tvar maxWidth = settings.get('maxWidth');\n\t\t\t\tvar maxHeight = settings.get('maxHeight');\n\n\t\t\t\tsettings.w = Math.max((maxWidth !== false ? Math.min(initialWidth, setSize(maxWidth, 'x')) : initialWidth) - loadedWidth - interfaceWidth, 0);\n\t\t\t\tsettings.h = Math.max((maxHeight !== false ? Math.min(initialHeight, setSize(maxHeight, 'y')) : initialHeight) - loadedHeight - interfaceHeight, 0);\n\n\t\t\t\t$loaded.css({width:'', height:settings.h});\n\t\t\t\tpublicMethod.position();\n\n\t\t\t\ttrigger(event_open);\n\t\t\t\tsettings.get('onOpen');\n\n\t\t\t\t$groupControls.add($title).hide();\n\n\t\t\t\t$box.focus();\n\n\t\t\t\tif (settings.get('trapFocus')) {\n\t\t\t\t\t\/\/ Confine focus to the modal\n\t\t\t\t\t\/\/ Uses event capturing that is not supported in IE8-\n\t\t\t\t\tif (document.addEventListener) {\n\n\t\t\t\t\t\tdocument.addEventListener('focus', trapFocus, true);\n\n\t\t\t\t\t\t$events.one(event_closed, function () {\n\t\t\t\t\t\t\tdocument.removeEventListener('focus', trapFocus, true);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t\/\/ Return focus on closing\n\t\t\t\tif (settings.get('returnFocus')) {\n\t\t\t\t\t$events.one(event_closed, function () {\n\t\t\t\t\t\t$(settings.el).focus();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar opacity = parseFloat(settings.get('opacity'));\n\t\t\t$overlay.css({\n\t\t\t\topacity: opacity === opacity ? opacity : '',\n\t\t\t\tcursor: settings.get('overlayClose') ? 'pointer' : '',\n\t\t\t\tvisibility: 'visible'\n\t\t\t}).show();\n\n\t\t\tif (settings.get('closeButton')) {\n\t\t\t\t$close.html(settings.get('close')).appendTo($content);\n\t\t\t} else {\n\t\t\t\t$close.appendTo('<div\/>'); \/\/ replace with .detach() when dropping jQuery < 1.4\n\t\t\t}\n\n\t\t\tload();\n\t\t}\n\t}\n\n\t\/\/ Colorbox's markup needs to be added to the DOM prior to being called\n\t\/\/ so that the browser will go ahead and load the CSS background images.\n\tfunction appendHTML() {\n\t\tif (!$box) {\n\t\t\tinit = false;\n\t\t\t$window = $(window);\n\t\t\t$box = $tag(div).attr({\n\t\t\t\tid: colorbox,\n\t\t\t\t'class': $.support.opacity === false ? prefix + 'IE' : '', \/\/ class for optional IE8 & lower targeted CSS.\n\t\t\t\trole: 'dialog',\n\t\t\t\ttabindex: '-1'\n\t\t\t}).hide();\n\t\t\t$overlay = $tag(div, \"Overlay\").hide();\n\t\t\t$loadingOverlay = $([$tag(div, \"LoadingOverlay\")[0],$tag(div, \"LoadingGraphic\")[0]]);\n\t\t\t$wrap = $tag(div, \"Wrapper\");\n\t\t\t$content = $tag(div, \"Content\").append(\n\t\t\t\t$title = $tag(div, \"Title\"),\n\t\t\t\t$current = $tag(div, \"Current\"),\n\t\t\t\t$prev = $('<button type=\"button\"\/>').attr({id:prefix+'Previous'}),\n\t\t\t\t$next = $('<button type=\"button\"\/>').attr({id:prefix+'Next'}),\n\t\t\t\t$slideshow = $('<button type=\"button\"\/>').attr({id:prefix+'Slideshow'}),\n\t\t\t\t$loadingOverlay\n\t\t\t);\n\n\t\t\t$close = $('<button type=\"button\"\/>').attr({id:prefix+'Close'});\n\n\t\t\t$wrap.append( \/\/ The 3x3 Grid that makes up Colorbox\n\t\t\t\t$tag(div).append(\n\t\t\t\t\t$tag(div, \"TopLeft\"),\n\t\t\t\t\t$topBorder = $tag(div, \"TopCenter\"),\n\t\t\t\t\t$tag(div, \"TopRight\")\n\t\t\t\t),\n\t\t\t\t$tag(div, false, 'clear:left').append(\n\t\t\t\t\t$leftBorder = $tag(div, \"MiddleLeft\"),\n\t\t\t\t\t$content,\n\t\t\t\t\t$rightBorder = $tag(div, \"MiddleRight\")\n\t\t\t\t),\n\t\t\t\t$tag(div, false, 'clear:left').append(\n\t\t\t\t\t$tag(div, \"BottomLeft\"),\n\t\t\t\t\t$bottomBorder = $tag(div, \"BottomCenter\"),\n\t\t\t\t\t$tag(div, \"BottomRight\")\n\t\t\t\t)\n\t\t\t).find('div div').css({'float': 'left'});\n\n\t\t\t$loadingBay = $tag(div, false, 'position:absolute; width:9999px; visibility:hidden; display:none; max-width:none;');\n\n\t\t\t$groupControls = $next.add($prev).add($current).add($slideshow);\n\t\t}\n\t\tif (document.body && !$box.parent().length) {\n\t\t\t$(document.body).append($overlay, $box.append($wrap, $loadingBay));\n\t\t}\n\t}\n\n\t\/\/ Add Colorbox's event bindings\n\tfunction addBindings() {\n\t\tfunction clickHandler(e) {\n\t\t\t\/\/ ignore non-left-mouse-clicks and clicks modified with ctrl \/ command, shift, or alt.\n\t\t\t\/\/ See: http:\/\/jacklmoore.com\/notes\/click-events\/\n\t\t\tif (!(e.which > 1 || e.shiftKey || e.altKey || e.metaKey || e.ctrlKey)) {\n\t\t\t\te.preventDefault();\n\t\t\t\tlaunch(this);\n\t\t\t}\n\t\t}\n\n\t\tif ($box) {\n\t\t\tif (!init) {\n\t\t\t\tinit = true;\n\n\t\t\t\t\/\/ Anonymous functions here keep the public method from being cached, thereby allowing them to be redefined on the fly.\n\t\t\t\t$next.click(function () {\n\t\t\t\t\tpublicMethod.next();\n\t\t\t\t});\n\t\t\t\t$prev.click(function () {\n\t\t\t\t\tpublicMethod.prev();\n\t\t\t\t});\n\t\t\t\t$close.click(function () {\n\t\t\t\t\tpublicMethod.close();\n\t\t\t\t});\n\t\t\t\t$overlay.click(function () {\n\t\t\t\t\tif (settings.get('overlayClose')) {\n\t\t\t\t\t\tpublicMethod.close();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t\/\/ Key Bindings\n\t\t\t\t$(document).bind('keydown.' + prefix, function (e) {\n\t\t\t\t\tvar key = e.keyCode;\n\t\t\t\t\tif (open && settings.get('escKey') && key === 27) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\tpublicMethod.close();\n\t\t\t\t\t}\n\t\t\t\t\tif (open && settings.get('arrowKey') && $related[1] && !e.altKey) {\n\t\t\t\t\t\tif (key === 37) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t$prev.click();\n\t\t\t\t\t\t} else if (key === 39) {\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t$next.click();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif ($.isFunction($.fn.on)) {\n\t\t\t\t\t\/\/ For jQuery 1.7+\n\t\t\t\t\t$(document).on('click.'+prefix, '.'+boxElement, clickHandler);\n\t\t\t\t} else {\n\t\t\t\t\t\/\/ For jQuery 1.3.x -> 1.6.x\n\t\t\t\t\t\/\/ This code is never reached in jQuery 1.9, so do not contact me about 'live' being removed.\n\t\t\t\t\t\/\/ This is not here for jQuery 1.9, it's here for legacy users.\n\t\t\t\t\t$('.'+boxElement).live('click.'+prefix, clickHandler);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t\/\/ Don't do anything if Colorbox already exists.\n\tif ($[colorbox]) {\n\t\treturn;\n\t}\n\n\t\/\/ Append the HTML when the DOM loads\n\t$(appendHTML);\n\n\n\t\/\/ ****************\n\t\/\/ PUBLIC FUNCTIONS\n\t\/\/ Usage format: $.colorbox.close();\n\t\/\/ Usage from within an iframe: parent.jQuery.colorbox.close();\n\t\/\/ ****************\n\n\tpublicMethod = $.fn[colorbox] = $[colorbox] = function (options, callback) {\n\t\tvar settings;\n\t\tvar $obj = this;\n\n\t\toptions = options || {};\n\n\t\tif ($.isFunction($obj)) { \/\/ assume a call to $.colorbox\n\t\t\t$obj = $('<a\/>');\n\t\t\toptions.open = true;\n\t\t}\n\n\t\tif (!$obj[0]) { \/\/ colorbox being applied to empty collection\n\t\t\treturn $obj;\n\t\t}\n\n\t\tappendHTML();\n\n\t\tif (addBindings()) {\n\n\t\t\tif (callback) {\n\t\t\t\toptions.onComplete = callback;\n\t\t\t}\n\n\t\t\t$obj.each(function () {\n\t\t\t\tvar old = $.data(this, colorbox) || {};\n\t\t\t\t$.data(this, colorbox, $.extend(old, options));\n\t\t\t}).addClass(boxElement);\n\n\t\t\tsettings = new Settings($obj[0], options);\n\n\t\t\tif (settings.get('open')) {\n\t\t\t\tlaunch($obj[0]);\n\t\t\t}\n\t\t}\n\n\t\treturn $obj;\n\t};\n\n\tpublicMethod.position = function (speed, loadedCallback) {\n\t\tvar\n\t\tcss,\n\t\ttop = 0,\n\t\tleft = 0,\n\t\toffset = $box.offset(),\n\t\tscrollTop,\n\t\tscrollLeft;\n\n\t\t$window.unbind('resize.' + prefix);\n\n\t\t\/\/ remove the modal so that it doesn't influence the document width\/height\n\t\t$box.css({top: -9e4, left: -9e4});\n\n\t\tscrollTop = $window.scrollTop();\n\t\tscrollLeft = $window.scrollLeft();\n\n\t\tif (settings.get('fixed')) {\n\t\t\toffset.top -= scrollTop;\n\t\t\toffset.left -= scrollLeft;\n\t\t\t$box.css({position: 'fixed'});\n\t\t} else {\n\t\t\ttop = scrollTop;\n\t\t\tleft = scrollLeft;\n\t\t\t$box.css({position: 'absolute'});\n\t\t}\n\n\t\t\/\/ keeps the top and left positions within the browser's viewport.\n\t\tif (settings.get('right') !== false) {\n\t\t\tleft += Math.max($window.width() - settings.w - loadedWidth - interfaceWidth - setSize(settings.get('right'), 'x'), 0);\n\t\t} else if (settings.get('left') !== false) {\n\t\t\tleft += setSize(settings.get('left'), 'x');\n\t\t} else {\n\t\t\tleft += Math.round(Math.max($window.width() - settings.w - loadedWidth - interfaceWidth, 0) \/ 2);\n\t\t}\n\n\t\tif (settings.get('bottom') !== false) {\n\t\t\ttop += Math.max(winheight() - settings.h - loadedHeight - interfaceHeight - setSize(settings.get('bottom'), 'y'), 0);\n\t\t} else if (settings.get('top') !== false) {\n\t\t\ttop += setSize(settings.get('top'), 'y');\n\t\t} else {\n\t\t\ttop += Math.round(Math.max(winheight() - settings.h - loadedHeight - interfaceHeight, 0) \/ 2);\n\t\t}\n\n\t\t$box.css({top: offset.top, left: offset.left, visibility:'visible'});\n\n\t\t\/\/ this gives the wrapper plenty of breathing room so it's floated contents can move around smoothly,\n\t\t\/\/ but it has to be shrank down around the size of div#colorbox when it's done.  If not,\n\t\t\/\/ it can invoke an obscure IE bug when using iframes.\n\t\t$wrap[0].style.width = $wrap[0].style.height = \"9999px\";\n\n\t\tfunction modalDimensions() {\n\t\t\t$topBorder[0].style.width = $bottomBorder[0].style.width = $content[0].style.width = (parseInt($box[0].style.width,10) - interfaceWidth)+'px';\n\t\t\t$content[0].style.height = $leftBorder[0].style.height = $rightBorder[0].style.height = (parseInt($box[0].style.height,10) - interfaceHeight)+'px';\n\t\t}\n\n\t\tcss = {width: settings.w + loadedWidth + interfaceWidth, height: settings.h + loadedHeight + interfaceHeight, top: top, left: left};\n\n\t\t\/\/ setting the speed to 0 if the content hasn't changed size or position\n\t\tif (speed) {\n\t\t\tvar tempSpeed = 0;\n\t\t\t$.each(css, function(i){\n\t\t\t\tif (css[i] !== previousCSS[i]) {\n\t\t\t\t\ttempSpeed = speed;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t});\n\t\t\tspeed = tempSpeed;\n\t\t}\n\n\t\tpreviousCSS = css;\n\n\t\tif (!speed) {\n\t\t\t$box.css(css);\n\t\t}\n\n\t\t$box.dequeue().animate(css, {\n\t\t\tduration: speed || 0,\n\t\t\tcomplete: function () {\n\t\t\t\tmodalDimensions();\n\n\t\t\t\tactive = false;\n\n\t\t\t\t\/\/ shrink the wrapper down to exactly the size of colorbox to avoid a bug in IE's iframe implementation.\n\t\t\t\t$wrap[0].style.width = (settings.w + loadedWidth + interfaceWidth) + \"px\";\n\t\t\t\t$wrap[0].style.height = (settings.h + loadedHeight + interfaceHeight) + \"px\";\n\n\t\t\t\tif (settings.get('reposition')) {\n\t\t\t\t\tsetTimeout(function () {  \/\/ small delay before binding onresize due to an IE8 bug.\n\t\t\t\t\t\t$window.bind('resize.' + prefix, publicMethod.position);\n\t\t\t\t\t}, 1);\n\t\t\t\t}\n\n\t\t\t\tif ($.isFunction(loadedCallback)) {\n\t\t\t\t\tloadedCallback();\n\t\t\t\t}\n\t\t\t},\n\t\t\tstep: modalDimensions\n\t\t});\n\t};\n\n\tpublicMethod.resize = function (options) {\n\t\tvar scrolltop;\n\n\t\tif (open) {\n\t\t\toptions = options || {};\n\n\t\t\tif (options.width) {\n\t\t\t\tsettings.w = setSize(options.width, 'x') - loadedWidth - interfaceWidth;\n\t\t\t}\n\n\t\t\tif (options.innerWidth) {\n\t\t\t\tsettings.w = setSize(options.innerWidth, 'x');\n\t\t\t}\n\n\t\t\t$loaded.css({width: settings.w});\n\n\t\t\tif (options.height) {\n\t\t\t\tsettings.h = setSize(options.height, 'y') - loadedHeight - interfaceHeight;\n\t\t\t}\n\n\t\t\tif (options.innerHeight) {\n\t\t\t\tsettings.h = setSize(options.innerHeight, 'y');\n\t\t\t}\n\n\t\t\tif (!options.innerHeight && !options.height) {\n\t\t\t\tscrolltop = $loaded.scrollTop();\n\t\t\t\t$loaded.css({height: \"auto\"});\n\t\t\t\tsettings.h = $loaded.height();\n\t\t\t}\n\n\t\t\t$loaded.css({height: settings.h});\n\n\t\t\tif(scrolltop) {\n\t\t\t\t$loaded.scrollTop(scrolltop);\n\t\t\t}\n\n\t\t\tpublicMethod.position(settings.get('transition') === \"none\" ? 0 : settings.get('speed'));\n\t\t}\n\t};\n\n\tpublicMethod.prep = function (object) {\n\t\tif (!open) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar callback, speed = settings.get('transition') === \"none\" ? 0 : settings.get('speed');\n\n\t\t$loaded.remove();\n\n\t\t$loaded = $tag(div, 'LoadedContent').append(object);\n\n\t\tfunction getWidth() {\n\t\t\tsettings.w = settings.w || $loaded.width();\n\t\t\tsettings.w = settings.mw && settings.mw < settings.w ? settings.mw : settings.w;\n\t\t\treturn settings.w;\n\t\t}\n\t\tfunction getHeight() {\n\t\t\tsettings.h = settings.h || $loaded.height();\n\t\t\tsettings.h = settings.mh && settings.mh < settings.h ? settings.mh : settings.h;\n\t\t\treturn settings.h;\n\t\t}\n\n\t\t$loaded.hide()\n\t\t.appendTo($loadingBay.show())\/\/ content has to be appended to the DOM for accurate size calculations.\n\t\t.css({width: getWidth(), overflow: settings.get('scrolling') ? 'auto' : 'hidden'})\n\t\t.css({height: getHeight()})\/\/ sets the height independently from the width in case the new width influences the value of height.\n\t\t.prependTo($content);\n\n\t\t$loadingBay.hide();\n\n\t\t\/\/ floating the IMG removes the bottom line-height and fixed a problem where IE miscalculates the width of the parent element as 100% of the document width.\n\n\t\t$(photo).css({'float': 'none'});\n\n\t\tsetClass(settings.get('className'));\n\n\t\tcallback = function () {\n\t\t\tvar total = $related.length,\n\t\t\t\tiframe,\n\t\t\t\tcomplete;\n\n\t\t\tif (!open) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfunction removeFilter() { \/\/ Needed for IE8 in versions of jQuery prior to 1.7.2\n\t\t\t\tif ($.support.opacity === false) {\n\t\t\t\t\t$box[0].style.removeAttribute('filter');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcomplete = function () {\n\t\t\t\tclearTimeout(loadingTimer);\n\t\t\t\t$loadingOverlay.hide();\n\t\t\t\ttrigger(event_complete);\n\t\t\t\tsettings.get('onComplete');\n\t\t\t};\n\n\n\t\t\t$title.html(settings.get('title')).show();\n\t\t\t$loaded.show();\n\n\t\t\tif (total > 1) { \/\/ handle grouping\n\t\t\t\tif (typeof settings.get('current') === \"string\") {\n\t\t\t\t\t$current.html(settings.get('current').replace('{current}', index + 1).replace('{total}', total)).show();\n\t\t\t\t}\n\n\t\t\t\t$next[(settings.get('loop') || index < total - 1) ? \"show\" : \"hide\"]().html(settings.get('next'));\n\t\t\t\t$prev[(settings.get('loop') || index) ? \"show\" : \"hide\"]().html(settings.get('previous'));\n\n\t\t\t\tslideshow();\n\n\t\t\t\t\/\/ Preloads images within a rel group\n\t\t\t\tif (settings.get('preloading')) {\n\t\t\t\t\t$.each([getIndex(-1), getIndex(1)], function(){\n\t\t\t\t\t\tvar img,\n\t\t\t\t\t\t\ti = $related[this],\n\t\t\t\t\t\t\tsettings = new Settings(i, $.data(i, colorbox)),\n\t\t\t\t\t\t\tsrc = settings.get('href');\n\n\t\t\t\t\t\tif (src && isImage(settings, src)) {\n\t\t\t\t\t\t\tsrc = retinaUrl(settings, src);\n\t\t\t\t\t\t\timg = document.createElement('img');\n\t\t\t\t\t\t\timg.src = src;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$groupControls.hide();\n\t\t\t}\n\n\t\t\tif (settings.get('iframe')) {\n\n\t\t\t\tiframe = settings.get('createIframe');\n\n\t\t\t\tif (!settings.get('scrolling')) {\n\t\t\t\t\tiframe.scrolling = \"no\";\n\t\t\t\t}\n\n\t\t\t\t$(iframe)\n\t\t\t\t\t.attr({\n\t\t\t\t\t\tsrc: settings.get('href'),\n\t\t\t\t\t\t'class': prefix + 'Iframe'\n\t\t\t\t\t})\n\t\t\t\t\t.one('load', complete)\n\t\t\t\t\t.appendTo($loaded);\n\n\t\t\t\t$events.one(event_purge, function () {\n\t\t\t\t\tiframe.src = \"\/\/about:blank\";\n\t\t\t\t});\n\n\t\t\t\tif (settings.get('fastIframe')) {\n\t\t\t\t\t$(iframe).trigger('load');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcomplete();\n\t\t\t}\n\n\t\t\tif (settings.get('transition') === 'fade') {\n\t\t\t\t$box.fadeTo(speed, 1, removeFilter);\n\t\t\t} else {\n\t\t\t\tremoveFilter();\n\t\t\t}\n\t\t};\n\n\t\tif (settings.get('transition') === 'fade') {\n\t\t\t$box.fadeTo(speed, 0, function () {\n\t\t\t\tpublicMethod.position(0, callback);\n\t\t\t});\n\t\t} else {\n\t\t\tpublicMethod.position(speed, callback);\n\t\t}\n\t};\n\n\tfunction load () {\n\t\tvar href, setResize, prep = publicMethod.prep, $inline, request = ++requests;\n\n\t\tactive = true;\n\n\t\tphoto = false;\n\n\t\ttrigger(event_purge);\n\t\ttrigger(event_load);\n\t\tsettings.get('onLoad');\n\n\t\tsettings.h = settings.get('height') ?\n\t\t\t\tsetSize(settings.get('height'), 'y') - loadedHeight - interfaceHeight :\n\t\t\t\tsettings.get('innerHeight') && setSize(settings.get('innerHeight'), 'y');\n\n\t\tsettings.w = settings.get('width') ?\n\t\t\t\tsetSize(settings.get('width'), 'x') - loadedWidth - interfaceWidth :\n\t\t\t\tsettings.get('innerWidth') && setSize(settings.get('innerWidth'), 'x');\n\n\t\t\/\/ Sets the minimum dimensions for use in image scaling\n\t\tsettings.mw = settings.w;\n\t\tsettings.mh = settings.h;\n\n\t\t\/\/ Re-evaluate the minimum width and height based on maxWidth and maxHeight values.\n\t\t\/\/ If the width or height exceed the maxWidth or maxHeight, use the maximum values instead.\n\t\tif (settings.get('maxWidth')) {\n\t\t\tsettings.mw = setSize(settings.get('maxWidth'), 'x') - loadedWidth - interfaceWidth;\n\t\t\tsettings.mw = settings.w && settings.w < settings.mw ? settings.w : settings.mw;\n\t\t}\n\t\tif (settings.get('maxHeight')) {\n\t\t\tsettings.mh = setSize(settings.get('maxHeight'), 'y') - loadedHeight - interfaceHeight;\n\t\t\tsettings.mh = settings.h && settings.h < settings.mh ? settings.h : settings.mh;\n\t\t}\n\n\t\thref = settings.get('href');\n\n\t\tloadingTimer = setTimeout(function () {\n\t\t\t$loadingOverlay.show();\n\t\t}, 100);\n\n\t\tif (settings.get('inline')) {\n\t\t\tvar $target = $(href).eq(0);\n\t\t\t\/\/ Inserts an empty placeholder where inline content is being pulled from.\n\t\t\t\/\/ An event is bound to put inline content back when Colorbox closes or loads new content.\n\t\t\t$inline = $('<div>').hide().insertBefore($target);\n\n\t\t\t$events.one(event_purge, function () {\n\t\t\t\t$inline.replaceWith($target);\n\t\t\t});\n\n\t\t\tprep($target);\n\t\t} else if (settings.get('iframe')) {\n\t\t\t\/\/ IFrame element won't be added to the DOM until it is ready to be displayed,\n\t\t\t\/\/ to avoid problems with DOM-ready JS that might be trying to run in that iframe.\n\t\t\tprep(\" \");\n\t\t} else if (settings.get('html')) {\n\t\t\tprep(settings.get('html'));\n\t\t} else if (isImage(settings, href)) {\n\n\t\t\thref = retinaUrl(settings, href);\n\n\t\t\tphoto = settings.get('createImg');\n\n\t\t\t$(photo)\n\t\t\t.addClass(prefix + 'Photo')\n\t\t\t.bind('error.'+prefix,function () {\n\t\t\t\tprep($tag(div, 'Error').html(settings.get('imgError')));\n\t\t\t})\n\t\t\t.one('load', function () {\n\t\t\t\tif (request !== requests) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t\/\/ A small pause because some browsers will occasionally report a\n\t\t\t\t\/\/ img.width and img.height of zero immediately after the img.onload fires\n\t\t\t\tsetTimeout(function(){\n\t\t\t\t\tvar percent;\n\n\t\t\t\t\tif (settings.get('retinaImage') && window.devicePixelRatio > 1) {\n\t\t\t\t\t\tphoto.height = photo.height \/ window.devicePixelRatio;\n\t\t\t\t\t\tphoto.width = photo.width \/ window.devicePixelRatio;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (settings.get('scalePhotos')) {\n\t\t\t\t\t\tsetResize = function () {\n\t\t\t\t\t\t\tphoto.height -= photo.height * percent;\n\t\t\t\t\t\t\tphoto.width -= photo.width * percent;\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (settings.mw && photo.width > settings.mw) {\n\t\t\t\t\t\t\tpercent = (photo.width - settings.mw) \/ photo.width;\n\t\t\t\t\t\t\tsetResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (settings.mh && photo.height > settings.mh) {\n\t\t\t\t\t\t\tpercent = (photo.height - settings.mh) \/ photo.height;\n\t\t\t\t\t\t\tsetResize();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (settings.h) {\n\t\t\t\t\t\tphoto.style.marginTop = Math.max(settings.mh - photo.height, 0) \/ 2 + 'px';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($related[1] && (settings.get('loop') || $related[index + 1])) {\n\t\t\t\t\t\tphoto.style.cursor = 'pointer';\n\n\t\t\t\t\t\t$(photo).bind('click.'+prefix, function () {\n\t\t\t\t\t\t\tpublicMethod.next();\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tphoto.style.width = photo.width + 'px';\n\t\t\t\t\tphoto.style.height = photo.height + 'px';\n\t\t\t\t\tprep(photo);\n\t\t\t\t}, 1);\n\t\t\t});\n\n\t\t\tphoto.src = href;\n\n\t\t} else if (href) {\n\t\t\t$loadingBay.load(href, settings.get('data'), function (data, status) {\n\t\t\t\tif (request === requests) {\n\t\t\t\t\tprep(status === 'error' ? $tag(div, 'Error').html(settings.get('xhrError')) : $(this).contents());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t\/\/ Navigates to the next page\/image in a set.\n\tpublicMethod.next = function () {\n\t\tif (!active && $related[1] && (settings.get('loop') || $related[index + 1])) {\n\t\t\tindex = getIndex(1);\n\t\t\tlaunch($related[index]);\n\t\t}\n\t};\n\n\tpublicMethod.prev = function () {\n\t\tif (!active && $related[1] && (settings.get('loop') || index)) {\n\t\t\tindex = getIndex(-1);\n\t\t\tlaunch($related[index]);\n\t\t}\n\t};\n\n\t\/\/ Note: to use this within an iframe use the following format: parent.jQuery.colorbox.close();\n\tpublicMethod.close = function () {\n\t\tif (open && !closing) {\n\n\t\t\tclosing = true;\n\t\t\topen = false;\n\t\t\ttrigger(event_cleanup);\n\t\t\tsettings.get('onCleanup');\n\t\t\t$window.unbind('.' + prefix);\n\t\t\t$overlay.fadeTo(settings.get('fadeOut') || 0, 0);\n\n\t\t\t$box.stop().fadeTo(settings.get('fadeOut') || 0, 0, function () {\n\t\t\t\t$box.hide();\n\t\t\t\t$overlay.hide();\n\t\t\t\ttrigger(event_purge);\n\t\t\t\t$loaded.remove();\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tclosing = false;\n\t\t\t\t\ttrigger(event_closed);\n\t\t\t\t\tsettings.get('onClosed');\n\t\t\t\t}, 1);\n\t\t\t});\n\t\t}\n\t};\n\n\t\/\/ Removes changes Colorbox made to the document, but does not remove the plugin.\n\tpublicMethod.remove = function () {\n\t\tif (!$box) { return; }\n\n\t\t$box.stop();\n\t\t$[colorbox].close();\n\t\t$box.stop(false, true).remove();\n\t\t$overlay.remove();\n\t\tclosing = false;\n\t\t$box = null;\n\t\t$('.' + boxElement)\n\t\t\t.removeData(colorbox)\n\t\t\t.removeClass(boxElement);\n\n\t\t$(document).unbind('click.'+prefix).unbind('keydown.'+prefix);\n\t};\n\n\t\/\/ A method for fetching the current element Colorbox is referencing.\n\t\/\/ returns a jQuery object.\n\tpublicMethod.element = function () {\n\t\treturn $(settings.el);\n\t};\n\n\tpublicMethod.settings = defaults;\n\n}(jQuery, document, window));\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/wordfence-login-security.php","ext":"php","size":3169,"mtime":1757312769,"type":"text","content":"<?php\n\nif (defined('WP_INSTALLING') && WP_INSTALLING) { return; }\nif (!defined('ABSPATH')) { exit; }\n\n$wfCoreActive = false;\n$plugins = (array) get_option('active_plugins', array()); \/\/Used in lieu of is_plugin_active since that's not loaded until admin_init\nif (is_multisite()) {\n\t$sitePlugins = array_keys((array) get_site_option('active_sitewide_plugins', array()));\n\t$plugins = array_merge($plugins, $sitePlugins);\n}\n\n$wfVersion = ((is_multisite() && function_exists('get_network_option')) ? get_network_option(null, 'wordfence_version', false) : get_option('wordfence_version', false));\nif (version_compare($wfVersion, '7.3.1', '>=')) {\n\tforeach ($plugins as $p) {\n\t\tif (preg_match('~^wordfence[^\/]*\/wordfence\\.php$~i', $p)) {\n\t\t\t$wfCoreActive = true;\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nif ($wfCoreActive && !(isset($wfCoreLoading) && $wfCoreLoading)) {\n\treturn; \/\/Wordfence core will load this, prevent the standalone one from also loading if active\n}\nelse {\n\tdefine('WORDFENCE_LS_FROM_CORE', ($wfCoreActive && isset($wfCoreLoading) && $wfCoreLoading));\n\t\n\tdefine('WORDFENCE_LS_VERSION', '1.1.15');\n\tdefine('WORDFENCE_LS_BUILD_NUMBER', '1756145765');\n\n\tdefine('WORDFENCE_LS_PLUGIN_BASENAME', plugin_basename(__FILE__));\n\t\n\tif (!defined('WORDFENCE_LS_EMAIL_VALIDITY_DURATION_MINUTES')) { define('WORDFENCE_LS_EMAIL_VALIDITY_DURATION_MINUTES', 15); }\n\t\n\tif (!WORDFENCE_LS_FROM_CORE) {\n\t\tglobal $wp_plugin_paths;\n\t\tforeach ($wp_plugin_paths as $dir => $realdir) {\n\t\t\tif (strpos(__FILE__, $realdir) === 0) {\n\t\t\t\tdefine('WORDFENCE_LS_FCPATH', $dir . '\/' . basename(__FILE__));\n\t\t\t\tdefine('WORDFENCE_LS_PATH', trailingslashit($dir));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tif (!defined('WORDFENCE_LS_FCPATH')) {\n\t\t\/** @noinspection PhpConstantReassignmentInspection *\/\n\t\tdefine('WORDFENCE_LS_FCPATH', __FILE__);\n\t\t\/** @noinspection PhpConstantReassignmentInspection *\/\n\t\tdefine('WORDFENCE_LS_PATH', trailingslashit(dirname(WORDFENCE_LS_FCPATH)));\n\t}\n\t\n\tif (!function_exists('wordfence_ls_autoload')) {\n\t\tfunction wordfence_ls_autoload($class) {\n\t\t\t$class = str_replace('\\\\', '\/', $class);\n\t\t\t$class = str_replace('\\\\\\\\', '\/', $class);\n\t\t\t$components = explode('\/', $class);\n\t\t\tif (count($components) < 2) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tif ($components[0] != 'WordfenceLS') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t$path = '';\n\t\t\tfor ($i = 1; $i < count($components) - 1; $i++) {\n\t\t\t\t$path .= '\/' . strtolower($components[$i]);\n\t\t\t}\n\t\t\t\n\t\t\tif (preg_match('\/^(Controller|Model|Utility)_([a-z0-9]+)$\/i', $components[count($components) - 1], $matches)) {\n\t\t\t\t$path = dirname(__FILE__) . '\/classes\/' . strtolower($matches[1]) . $path . '\/' . strtolower($matches[2]) . '.php';\n\t\t\t\tif (file_exists($path)) {\n\t\t\t\t\trequire_once($path);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tif (!defined('WORDFENCE_LS_AUTOLOADER_REGISTERED')) {\n\t\tdefine('WORDFENCE_LS_AUTOLOADER_REGISTERED', true);\n\t\tspl_autoload_register('wordfence_ls_autoload');\n\t}\n\t\n\tif (!defined('WORDFENCE_LS_VERSIONONLY_MODE') && (!defined('WORDFENCE_USE_LEGACY_2FA') || (defined('WORDFENCE_USE_LEGACY_2FA') && !WORDFENCE_USE_LEGACY_2FA))) { \/\/Used to get version from file\n\t\t\\WordfenceLS\\Controller_WordfenceLS::shared()->init();\n\t}\n}"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/img\/menu.svg","ext":"svg","size":3070,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\">\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" xmlns:serif=\"http:\/\/www.serif.com\/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\">\n    <g>\n        <path d=\"M16,8.59L17.59,12.08L17.6,12.11L17.06,12.11L17.06,12.12C17.07,12.17 17.08,12.22 17.08,12.28C17.08,12.45 17.04,12.61 16.96,12.75C16.93,12.82 16.88,12.88 16.84,12.93C16.84,12.93 16.77,13.69 16.78,15.11C16.78,15.96 16.83,17.21 16.93,18.58C18.59,18.67 20.13,18.86 21.55,19.11L21.55,13.19L21.14,13.19L22.2,10.87L23.22,13.2L22.81,13.2L22.81,19.35C24.32,19.66 25.66,20.04 26.82,20.42L26.82,15.27L26.41,15.27L27.47,12.95L28.49,15.28L28.08,15.28L28.08,20.86C29.45,21.37 30.48,21.85 31.11,22.17C31.9,14.72 30.28,8.26 30.28,8.26C22.71,8.01 16,4 16,4L16,8.59Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M28.04,22.18L28.04,28L29.81,28C30.06,27.19 30.27,26.36 30.45,25.55C30.68,24.74 30.81,24.07 30.9,23.59C30.9,23.59 30.9,23.57 30.9,23.56C30.91,23.53 30.91,23.5 30.91,23.47C30.47,23.23 29.49,22.73 28.04,22.18Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M22.79,20.61L22.79,28L26.8,28L26.8,21.72C25.66,21.33 24.31,20.94 22.79,20.61Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M21.54,28L21.54,20.36C20.16,20.11 18.64,19.91 17.02,19.81C17.02,19.82 17.02,19.82 17.02,19.83C17.02,19.86 17.13,20.68 17.14,20.81C17.39,22.7 17.9,25.67 18.43,27.99L18.4,27.99L21.54,27.99L21.54,28Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M13.57,28C14.09,25.68 14.6,22.71 14.86,20.82L14.85,20.82L14.86,20.82C14.88,20.68 14.98,19.87 14.98,19.84C14.98,19.83 14.98,19.83 14.98,19.82C13.35,19.92 11.83,20.12 10.46,20.37L10.46,28L13.59,28L13.57,28Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M3.96,20.86L3.96,15.28L3.55,15.28L4.57,12.95L5.63,15.27L5.22,15.27L5.22,20.42C6.38,20.04 7.72,19.67 9.23,19.35L9.23,13.2L8.82,13.2L9.84,10.87L10.9,13.19L10.49,13.19L10.49,19.11C11.91,18.86 13.45,18.67 15.11,18.58C15.21,17.21 15.26,15.96 15.26,15.11C15.27,13.7 15.2,12.93 15.2,12.93C15.15,12.87 15.11,12.81 15.08,12.75C15,12.61 14.96,12.45 14.96,12.28C14.96,12.23 14.97,12.17 14.98,12.12L14.98,12.11L14.44,12.11L14.45,12.08L16,8.59L16,4C16,4 9.29,8.01 1.75,8.26C1.75,8.26 0.13,14.72 0.92,22.17C1.56,21.85 2.58,21.36 3.96,20.86Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M5.2,21.72L5.2,28L9.21,28L9.21,20.61C7.64,20.95 6.28,21.35 5.2,21.72Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M1.09,23.47C1.08,23.47 1.08,23.47 1.09,23.47C1.09,23.5 1.1,23.53 1.1,23.56C1.1,23.57 1.1,23.58 1.1,23.59C1.18,24.07 1.32,24.74 1.55,25.55C1.73,26.36 1.95,27.19 2.19,28L3.95,28L3.95,22.17C2.51,22.73 1.53,23.23 1.09,23.47Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n    <\/g>\n<\/svg>\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/img\/header.svg","ext":"svg","size":3070,"mtime":1757312769,"type":"text","content":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-\/\/W3C\/\/DTD SVG 1.1\/\/EN\" \"http:\/\/www.w3.org\/Graphics\/SVG\/1.1\/DTD\/svg11.dtd\">\n<svg width=\"100%\" height=\"100%\" viewBox=\"0 0 32 32\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" xml:space=\"preserve\" xmlns:serif=\"http:\/\/www.serif.com\/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.41421;\">\n    <g>\n        <path d=\"M16,8.59L17.59,12.08L17.6,12.11L17.06,12.11L17.06,12.12C17.07,12.17 17.08,12.22 17.08,12.28C17.08,12.45 17.04,12.61 16.96,12.75C16.93,12.82 16.88,12.88 16.84,12.93C16.84,12.93 16.77,13.69 16.78,15.11C16.78,15.96 16.83,17.21 16.93,18.58C18.59,18.67 20.13,18.86 21.55,19.11L21.55,13.19L21.14,13.19L22.2,10.87L23.22,13.2L22.81,13.2L22.81,19.35C24.32,19.66 25.66,20.04 26.82,20.42L26.82,15.27L26.41,15.27L27.47,12.95L28.49,15.28L28.08,15.28L28.08,20.86C29.45,21.37 30.48,21.85 31.11,22.17C31.9,14.72 30.28,8.26 30.28,8.26C22.71,8.01 16,4 16,4L16,8.59Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M28.04,22.18L28.04,28L29.81,28C30.06,27.19 30.27,26.36 30.45,25.55C30.68,24.74 30.81,24.07 30.9,23.59C30.9,23.59 30.9,23.57 30.9,23.56C30.91,23.53 30.91,23.5 30.91,23.47C30.47,23.23 29.49,22.73 28.04,22.18Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M22.79,20.61L22.79,28L26.8,28L26.8,21.72C25.66,21.33 24.31,20.94 22.79,20.61Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M21.54,28L21.54,20.36C20.16,20.11 18.64,19.91 17.02,19.81C17.02,19.82 17.02,19.82 17.02,19.83C17.02,19.86 17.13,20.68 17.14,20.81C17.39,22.7 17.9,25.67 18.43,27.99L18.4,27.99L21.54,27.99L21.54,28Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M13.57,28C14.09,25.68 14.6,22.71 14.86,20.82L14.85,20.82L14.86,20.82C14.88,20.68 14.98,19.87 14.98,19.84C14.98,19.83 14.98,19.83 14.98,19.82C13.35,19.92 11.83,20.12 10.46,20.37L10.46,28L13.59,28L13.57,28Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M3.96,20.86L3.96,15.28L3.55,15.28L4.57,12.95L5.63,15.27L5.22,15.27L5.22,20.42C6.38,20.04 7.72,19.67 9.23,19.35L9.23,13.2L8.82,13.2L9.84,10.87L10.9,13.19L10.49,13.19L10.49,19.11C11.91,18.86 13.45,18.67 15.11,18.58C15.21,17.21 15.26,15.96 15.26,15.11C15.27,13.7 15.2,12.93 15.2,12.93C15.15,12.87 15.11,12.81 15.08,12.75C15,12.61 14.96,12.45 14.96,12.28C14.96,12.23 14.97,12.17 14.98,12.12L14.98,12.11L14.44,12.11L14.45,12.08L16,8.59L16,4C16,4 9.29,8.01 1.75,8.26C1.75,8.26 0.13,14.72 0.92,22.17C1.56,21.85 2.58,21.36 3.96,20.86Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M5.2,21.72L5.2,28L9.21,28L9.21,20.61C7.64,20.95 6.28,21.35 5.2,21.72Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n        <path d=\"M1.09,23.47C1.08,23.47 1.08,23.47 1.09,23.47C1.09,23.5 1.1,23.53 1.1,23.56C1.1,23.57 1.1,23.58 1.1,23.59C1.18,24.07 1.32,24.74 1.55,25.55C1.73,26.36 1.95,27.19 2.19,28L3.95,28L3.95,22.17C2.51,22.73 1.53,23.23 1.09,23.47Z\" style=\"fill:rgb(33,141,193);fill-rule:nonzero;\"\/>\n    <\/g>\n<\/svg>\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/tabbar.php","ext":"php","size":757,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * @var array $tabs An array of Tab instances. Required.\n *\/\n?>\n<div class=\"wfls-row wfls-tab-container\">\n\t<div class=\"wfls-col-xs-12\">\n\t\t<div class=\"wp-header-end\"><\/div>\n\t\t<ul class=\"wfls-page-tabs\">\n\t\t\t<li class=\"wfls-header-icon\"><\/li>\n\t\t\t<?php foreach ($tabs as $t): ?>\n\t\t\t\t<?php\n\t\t\t\t$a = $t->a;\n\t\t\t\tif (!preg_match('\/^https?:\\\/\\\/\/i', $a)) {\n\t\t\t\t\t$a = '#top#' . urlencode($a);\n\t\t\t\t}\n\t\t\t\t?>\n\t\t\t\t<li class=\"wfls-tab\" id=\"wfls-tab-<?php echo esc_attr($t->id); ?>\" data-target=\"<?php echo esc_attr($t->id); ?>\" data-page-title=\"<?php echo esc_attr($t->pageTitle); ?>\"><a href=\"<?php echo esc_url($a); ?>\"><?php echo esc_html($t->tabTitle); ?><\/a><\/li>\n\t\t\t<?php endforeach; ?>\n\t\t<\/ul>\n\t<\/div>\n<\/div>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/role.php","ext":"php","size":2211,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n?>\n<?php if (is_multisite()): ?>\n\t<p><em>(<?php esc_html_e('This page only shows users and roles on the main site of this network', 'wordfence') ?>)<\/em><\/p>\n<?php endif ?>\n<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width wfls-add-bottom\">\n\t<?php if ($requiredAt === false): ?>\n\t<div class=\"wfls-block-content\">\n\t\t<p><?php echo esc_html(sprintf(__('2FA is not required for the %s role', 'wordfence'), $roleTitle)) ?><\/p>\n\t<\/div>\n\t<?php elseif (empty($users)): ?>\n\t<div class=\"wfls-block-content\">\n\t\t<p>\n\t\t<?php if ($page == 1): ?>\n\t\t\t<?php echo esc_html(sprintf(__('No users found in the %s state for the %s role', 'wordfence'), $stateTitle, $roleTitle)) ?>\n\t\t<?php else: ?>\n\t\t\t<?php echo esc_html(sprintf(__('Page %d is out of range', 'wordfence'), $page)) ?>\n\t\t<?php endif ?>\n\t\t<\/p>\n\t<\/div>\n\t<?php else: ?>\n\t<table class=\"wfls-table wfls-table-striped wfls-table-header-separators wfls-table-expanded wfls-no-bottom\">\n\t\t<tr>\n\t\t\t<th>User<\/th>\n\t\t\t<th>Required Date<\/th>\n\t\t<\/tr>\n\t\t<?php foreach ($users as $user): ?>\n\t\t\t<tr>\n\t\t\t\t<th scope=\"row\"><a href=\"<?php echo esc_attr(get_edit_user_link($user->user_id)) ?>#wfls-user-settings\"><?php echo esc_html($user->user_login) ?><\/a><\/td>\n\t\t\t\t<td>\n\t\t\t\t\t<?php if ($user->required_at): ?>\n\t\t\t\t\t<?php echo esc_html(\\WordfenceLS\\Controller_Time::format_local_time('F j, Y g:i A', $user->required_at)) ?>\n\t\t\t\t\t<?php else: ?>\n\t\t\t\t\t<?php esc_html_e('N\/A', 'wordfence'); ?>\n\t\t\t\t\t<?php endif ?>\n\t\t\t\t<\/td>\n\t\t\t<\/tr>\n\t\t<?php endforeach ?>\n\t\t<?php if ($page != 1 || !$lastPage): ?>\n\t\t<tr>\n\t\t\t<td colspan=\"2\" class=\"wfls-center\">\n\t\t\t\t<?php if ($page > 1): ?>\n\t\t\t\t\t<a href=\"<?php echo esc_attr(add_query_arg($pageKey, $page-1) . \"#$stateKey\") ?>\"><span class=\"dashicons dashicons-arrow-left-alt2\"><\/span><\/a>\n\t\t\t\t<?php endif ?>\n\t\t\t\t<strong class=\"wfls-page-indicator\"><?php esc_html_e('Page ', 'wordfence') ?><?php echo (int) $page ?><\/strong>\n\t\t\t\t<?php if (!$lastPage): ?>\n\t\t\t\t\t<a href=\"<?php echo esc_attr(add_query_arg($pageKey, $page+1) . \"#$stateKey\") ?>\"><span class=\"dashicons dashicons-arrow-right-alt2\"><\/span><\/a>\n\t\t\t\t<?php endif ?>\n\t\t\t<\/td>\n\t\t<\/tr>\n\t\t<?php endif ?>\n\t<\/table>\n\t<?php endif ?>\n<\/div>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/settings.php","ext":"php","size":1507,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n?>\n<div class=\"wfls-save-banner wfls-nowrap wfls-padding-add-right-responsive\">\n\t<a href=\"#\" id=\"wfls-cancel-changes\" class=\"wfls-btn wfls-btn-sm wfls-btn-default wfls-disabled\"><?php echo wp_kses(\/* translators: word order may be reversed as long as HTML remains around \"Changes\" *\/ __('Cancel<span class=\"wfls-visible-sm-inline\"> Changes<\/span>', 'wordfence'), array('span'=>array('class'=>array()))); ?><\/a>&nbsp;&nbsp;<a href=\"#\" id=\"wfls-save-changes\" class=\"wfls-btn wfls-btn-sm wfls-btn-primary wfls-disabled\"><?php echo wp_kses(\/* translators: word order may be reversed as long as HTML remains around \"Changes\" *\/ __('Save<span class=\"wfls-visible-sm-inline\"> Changes<\/span>', 'wordfence'), array('span'=>array('class'=>array()))); ?><\/a>\n<\/div>\n<div id=\"wfls-settings\" class=\"wfls-flex-row wfls-flex-row-wrappable wfls-flex-row-equal-heights\">\n\t<!-- begin status content -->\n\t<div id=\"wfls-user-stats\" class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100\">\n\t\t<?php\n\t\t\techo \\WordfenceLS\\Model_View::create('settings\/user-stats', array(\n\t\t\t\t'counts' => \\WordfenceLS\\Controller_Users::shared()->get_detailed_user_counts_if_enabled(),\n\t\t\t))->render();\n\t\t?>\n\t<\/div>\n\t<!-- end status content -->\n\t<!-- begin options content -->\n\t<div id=\"wfls-options\">\n\t\t<?php\n\t\techo \\WordfenceLS\\Model_View::create('settings\/options', array(\n\t\t\t'hasWoocommerce' => $hasWoocommerce\n\t\t))->render();\n\t\t?>\n\t<\/div>\n\t<!-- end options content -->\n<\/div>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/page.php","ext":"php","size":1498,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\n\/**\n * @var array $sections The content tabs, each element is an array of the syntax array('tab' => Model_Tab instance, 'title' => Title instance, 'content' => HTML content). Required.\n *\/\n?>\n<?php do_action('wfls_activation_page_header'); ?>\n<div class=\"wrap wordfence-ls\">\n\t<?php\n\tif (\\WordfenceLS\\Controller_Permissions::shared()->can_manage_settings() && !\\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_DISMISSED_FRESH_INSTALL_MODAL) && !WORDFENCE_LS_FROM_CORE) {\n\t\techo \\WordfenceLS\\Model_View::create('onboarding\/standalone-header')->render();\n\t}\n\t?>\n\t<div class=\"wfls-container-fluid\">\n\t\t<?php\n\t\t$tabs = array_map(function($t) { return $t['tab']; }, $sections);\n\t\techo \\WordfenceLS\\Model_View::create('page\/tabbar', array(\n\t\t\t'tabs' => $tabs,\n\t\t))->render();\n\t\t?>\n\t\t<div class=\"wfls-row\">\n\t\t\t<div class=\"wfls-col-xs-12\">\n\t\t\t\t<?php foreach ($sections as $s): ?>\n\t\t\t\t<div id=\"<?php echo esc_attr($s['tab']->id); ?>\" class=\"wfls-tab-content\" data-title=\"<?php echo esc_attr($s['tab']->pageTitle); ?>\">\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('page\/section-title', array(\n\t\t\t\t\t\t\t'title' => $s['title'],\n\t\t\t\t\t))->render();\n\t\t\t\t\techo $s['content'];\n\t\t\t\t\t?>\n\t\t\t\t<\/div> <!-- end <?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($s['tab']->id); ?> block -->\n\t\t\t\t<?php endforeach; ?>\n\t\t\t<\/div> <!-- end content block -->\n\t\t<\/div> <!-- end row -->\n\t<\/div> <!-- end container -->\n<\/div>\n"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/section-title.php","ext":"php","size":1059,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * @var \\WordfenceLS\\Page\\Model_Title $title The page title parameters.\n * @var bool $showIcon Whether or not to show the header icon. Optional, defaults to false.\n *\/\n?>\n<div class=\"wfls-section-title\">\n\t<?php if (isset($showIcon) && $showIcon): ?>\n\t\t<div class=\"wfls-header-icon wfls-hidden-xs\"><\/div>\n\t<?php endif; ?>\n\t<h2 class=\"wfls-center-xs\" id=\"section-title-<?php echo esc_attr($title->id); ?>\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($title->title); ?><\/h2>\n\t<?php if ($title->helpURL !== null && $title->helpLink !== null): ?>\n\t\t<span class=\"wfls-hidden-xs\"><a href=\"<?php echo esc_url($title->helpURL); ?>\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-help-link\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($title->helpLink); ?> <i class=\"<?php echo (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-external-link' : 'wfls-fa wfls-fa-external-link'); ?>\" aria-hidden=\"true\"><\/i><\/a><\/span>\n\t<?php endif; ?>\n<\/div>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/permission-denied.php","ext":"php","size":246,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\n?>\n<div>\n\t<h2><?php esc_html_e('Permission Denied', 'wordfence') ?><\/h2>\n\t<p><?php esc_html_e('You do not have permission to manage 2FA settings for your account.', 'wordfence') ?><\/p>\n<\/div>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/manage-embedded.php","ext":"php","size":3905,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\n$assets = isset($assets) ? $assets : array();\n$scriptData = isset($scriptData) ? $scriptData : array();\n\n$enabled = \\WordfenceLS\\Controller_Users::shared()->has_2fa_active($user);\n$requires2fa = \\WordfenceLS\\Controller_Users::shared()->requires_2fa($user, $inGracePeriod, $requiredAt);\n$lockedOut = $requires2fa && !$enabled;\n\n$containerClasses = 'wfls-flex-row ' . ($stacked ? 'wfls-flex-row-wrapped' : 'wfls-flex-row-wrappable wfls-flex-row-equal-heights');\n$columnClasses = 'wfls-flex-row wfls-flex-item-xs-100 ' . ($stacked ? '' : 'wfls-flex-row-equal-heights');\n\n?>\n<?php if (!empty($scriptData)): ?>\n\t<script type=\"text\/javascript\">\n\t<?php foreach ($scriptData as $key => $data): ?>\n\t\tvar <?php echo $key ?> = <?php echo wp_json_encode($data); ?>;\n\t<?php endforeach ?>\n\t<\/script>\n<?php endif ?>\n<?php foreach ($assets as $asset): ?>\n\t<?php $asset->renderInlineIfNotEnqueued(); ?>\n<?php endforeach ?>\n<div id=\"wfls-management-embedded\"<?php if ($stacked): ?> class=\"stacked\" <?php endif ?>>\n\t<p><?php echo wp_kses(sprintf(__('Two-Factor Authentication, or 2FA, significantly improves login security for your account. Wordfence 2FA works with a number of TOTP-based apps like Google Authenticator, FreeOTP, and Authy. For a full list of tested TOTP-based apps, <a href=\"%s\" target=\"_blank\" rel=\"noopener noreferrer\">click here<\/a>.', 'wordfence'), \\WordfenceLS\\Controller_Support::esc_supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_2FA)), array('a'=>array('href'=>array(), 'target'=>array(), 'rel'=>array()))); ?><\/p>\n\t<div id=\"wfls-deactivation-controls\" class=\"<?php echo $containerClasses ?>\"<?php if (!$enabled) { echo ' style=\"display: none;\"'; } ?>>\n\t\t<!-- begin status content -->\n\t\t<div class=\"<?php echo $columnClasses ?>\">\n\t\t\t<?php\n\t\t\techo \\WordfenceLS\\Model_View::create('manage\/deactivate', array(\n\t\t\t\t'user' => $user,\n\t\t\t))->render();\n\t\t\t?>\n\t\t<\/div>\n\t\t<!-- end status content -->\n\t\t<!-- begin regenerate codes -->\n\t\t<div class=\"<?php echo $columnClasses ?>\">\n\t\t\t<?php\n\t\t\techo \\WordfenceLS\\Model_View::create('manage\/regenerate', array(\n\t\t\t\t'user' => $user,\n\t\t\t\t'remaining' => \\WordfenceLS\\Controller_Users::shared()->recovery_code_count($user),\n\t\t\t))->render();\n\t\t\t?>\n\t\t<\/div>\n\t\t<!-- end regenerate codes -->\n\t<\/div>\n\t<div id=\"wfls-activation-controls\" class=\"<?php echo $containerClasses ?><?php if (!$stacked): ?> wfls-no-bottom-column-margin<?php endif ?>\"<?php if ($enabled) { echo ' style=\"display: none;\"'; } ?>>\n\t\t<?php\n\t\t\t$initializationData = new \\WordfenceLS\\Model_2faInitializationData($user);\n\t\t?>\n\t\t<!-- begin qr code -->\n\t\t<div class=\"<?php echo $columnClasses ?><?php if (!$stacked): ?> wfls-col-sm-half-padding-right wfls-flex-item-sm-50<?php endif ?>\">\n\t\t\t<?php\n\t\t\techo \\WordfenceLS\\Model_View::create('manage\/code', array(\n\t\t\t\t'initializationData' => $initializationData\n\t\t\t))->render();\n\t\t\t?>\n\t\t<\/div>\n\t\t<!-- end qr code -->\n\t\t<!-- begin activation -->\n\t\t<div class=\"<?php echo $columnClasses ?><?php if (!$stacked): ?>  wfls-col-sm-half-padding-left wfls-flex-item-sm-50<?php endif ?>\">\n\t\t\t<?php\n\t\t\techo \\WordfenceLS\\Model_View::create('manage\/activate', array(\n\t\t\t\t'initializationData' => $initializationData\n\t\t\t))->render();\n\t\t\t?>\n\t\t<\/div>\n\t\t<!-- end activation -->\n\t<\/div>\n\t<div id=\"wfls-grace-period-controls\" class=\"<?php echo $containerClasses ?>\"<?php if ($enabled || !($lockedOut || $inGracePeriod)) { echo ' style=\"display: none;\"'; } ?>>\n\t\t<div class=\"<?php echo $columnClasses ?> wfls-add-top\">\n\t\t\t<?php\n\t\t\techo \\WordfenceLS\\Model_View::create('manage\/grace-period', array(\n\t\t\t\t'user' => $user,\n\t\t\t\t'lockedOut' => $lockedOut,\n\t\t\t\t'gracePeriod' => $inGracePeriod,\n\t\t\t\t'requiredAt' => $requiredAt\n\t\t\t))->render();\n\t\t\t?>\n\t\t<\/div>\n\t<\/div>\n\t<?php\n\t\/**\n\t * Fires after the main content of the activation page has been output.\n\t *\/\n\tdo_action('wfls_activation_page_footer');\n\t?>\n<\/div>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/page\/manage.php","ext":"php","size":5944,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\n\/**\n * @var \\WP_User $user The user being edited. Required.\n * @var bool $canEditUsers Whether or not the viewer of the page can edit other users. Optional, defaults to false.\n *\/\n\nif (!isset($canEditUsers)) {\n\t$canEditUsers = false;\n}\n\n$ownAccount = false;\n$ownUser = wp_get_current_user();\nif ($ownUser->ID == $user->ID) {\n\t$ownAccount = true;\n}\n\n$enabled = \\WordfenceLS\\Controller_Users::shared()->has_2fa_active($user);\n$requires2fa = \\WordfenceLS\\Controller_Users::shared()->requires_2fa($user, $inGracePeriod, $requiredAt);\n$lockedOut = $requires2fa && !$enabled;\n\n?>\n<p><?php echo wp_kses(sprintf(__('Two-Factor Authentication, or 2FA, significantly improves login security for your website. Wordfence 2FA works with a number of TOTP-based apps like Google Authenticator, FreeOTP, and Authy. For a full list of tested TOTP-based apps, <a href=\"%s\" target=\"_blank\" rel=\"noopener noreferrer\">click here<\/a>.', 'wordfence'), \\WordfenceLS\\Controller_Support::esc_supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_2FA)), array('a'=>array('href'=>array(), 'target'=>array(), 'rel'=>array()))); ?><\/p>\n<?php if ($canEditUsers): ?>\n<div id=\"wfls-editing-display\" class=\"wfls-flex-row wfls-flex-row-xs-wrappable wfls-flex-row-equal-heights\">\n\t<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width wfls-add-bottom\">\n\t\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t\t<div class=\"wfls-block-header-content\">\n\t\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t\t<strong><?php echo wp_kses(sprintf(__('Editing User:&nbsp;&nbsp;%s <span class=\"wfls-text-plain\">%s<\/span>', 'wordfence'), get_avatar($user->ID, 16, '', $user->user_login), \\WordfenceLS\\Text\\Model_HTML::esc_html($user->user_login) . ($ownAccount ? ' ' . __('(you)', 'wordfence') : '')), array('span'=>array('class'=>array()))); ?><\/strong>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n<?php endif; ?>\n<div id=\"wfls-deactivation-controls\" class=\"wfls-flex-row wfls-flex-row-wrappable wfls-flex-row-equal-heights\"<?php if (!$enabled) { echo ' style=\"display: none;\"'; } ?>>\n\t<!-- begin status content -->\n\t<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100\">\n\t\t<?php\n\t\techo \\WordfenceLS\\Model_View::create('manage\/deactivate', array(\n\t\t\t'user' => $user,\n\t\t))->render();\n\t\t?>\n\t<\/div>\n\t<!-- end status content -->\n\t<!-- begin regenerate codes -->\n\t<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100\">\n\t\t<?php\n\t\techo \\WordfenceLS\\Model_View::create('manage\/regenerate', array(\n\t\t\t'user' => $user,\n\t\t\t'remaining' => \\WordfenceLS\\Controller_Users::shared()->recovery_code_count($user),\n\t\t))->render();\n\t\t?>\n\t<\/div>\n\t<!-- end regenerate codes -->\n<\/div>\n<div id=\"wfls-activation-controls\" class=\"wfls-flex-row wfls-flex-row-xs-wrappable wfls-flex-row-equal-heights\"<?php if ($enabled) { echo ' style=\"display: none;\"'; } ?>>\n\t<?php\n\t\t$initializationData = new \\WordfenceLS\\Model_2faInitializationData($user);\n\t?>\n\t<!-- begin qr code -->\n\t<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-col-sm-half-padding-right wfls-flex-item-xs-100 wfls-flex-item-sm-50\">\n\t\t<?php\n\t\techo \\WordfenceLS\\Model_View::create('manage\/code', array(\n\t\t\t'initializationData' => $initializationData\n\t\t))->render();\n\t\t?>\n\t<\/div>\n\t<!-- end qr code -->\n\t<!-- begin activation -->\n\t<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-col-sm-half-padding-left wfls-flex-item-xs-100 wfls-flex-item-sm-50\">\n\t\t<?php\n\t\techo \\WordfenceLS\\Model_View::create('manage\/activate', array(\n\t\t\t'initializationData' => $initializationData\n\t\t))->render();\n\t\t?>\n\t<\/div>\n\t<!-- end activation -->\n<\/div>\n<div id=\"wfls-grace-period-controls\" class=\"wfls-flex-row wfls-flex-row-xs-wrappable wfls-flex-row-equal-heights\"<?php if ($enabled || !($lockedOut || $inGracePeriod)) { echo ' style=\"display: none;\"'; } ?>>\n\t<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100 wfls-add-top\">\n\t\t<?php\n\t\techo \\WordfenceLS\\Model_View::create('manage\/grace-period', array(\n\t\t\t'user' => $user,\n\t\t\t'lockedOut' => $lockedOut,\n\t\t\t'gracePeriod' => $inGracePeriod,\n\t\t\t'requiredAt' => $requiredAt\n\t\t))->render();\n\t\t?>\n\t<\/div>\n<\/div>\n<?php\n\/**\n * Fires after the main content of the activation page has been output.\n *\/\ndo_action('wfls_activation_page_footer');\n$time = time();\n$correctedTime = \\WordfenceLS\\Controller_Time::time($time);\n$tz = get_option('timezone_string');\nif (empty($tz)) {\n\t$offset = get_option('gmt_offset');\n\t$tz = 'UTC' . ($offset >= 0 ? '+' . $offset : $offset);\n}\n?>\n<?php if (\\WordfenceLS\\Controller_Permissions::shared()->can_manage_settings()): ?>\n<p><?php esc_html_e('Server Time:', 'wordfence'); ?> <?php echo date('Y-m-d H:i:s', $time); ?> UTC (<?php echo \\WordfenceLS\\Controller_Time::format_local_time('Y-m-d H:i:s', $time) . ' ' . $tz; ?>)<br>\n\t<?php esc_html_e('Browser Time:', 'wordfence'); ?> <script type=\"application\/javascript\">var date = new Date(); document.write(date.toUTCString() + ' (' + date.toString() + ')');<\/script><br>\n<?php\nif (\\WordfenceLS\\Controller_Settings::shared()->is_ntp_enabled()) {\n\techo esc_html__('Corrected Time (NTP):', 'wordfence') . ' ' . date('Y-m-d H:i:s', $correctedTime) . ' UTC (' . \\WordfenceLS\\Controller_Time::format_local_time('Y-m-d H:i:s', $correctedTime) . ' ' . $tz . ')<br>';\n}\nelse if (WORDFENCE_LS_FROM_CORE && $correctedTime != $time) {\n\techo esc_html__('Corrected Time (WF):', 'wordfence') . ' ' . date('Y-m-d H:i:s', $correctedTime) . ' UTC (' . \\WordfenceLS\\Controller_Time::format_local_time('Y-m-d H:i:s', $correctedTime) . ' ' . $tz . ')<br>';\n}\n?>\n<?php esc_html_e('Detected IP:', 'wordfence'); ?> <?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html(\\WordfenceLS\\Model_Request::current()->ip()); if (\\WordfenceLS\\Controller_Whitelist::shared()->is_whitelisted(\\WordfenceLS\\Model_Request::current()->ip())) { echo ' (' . esc_html__('allowlisted', 'wordfence') . ')'; } ?><\/p>\n<?php endif; ?>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-switch.php","ext":"php","size":2542,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents a switch option.\n *\n * @var string $optionName The option name for the switch. Required.\n * @var string $value The current value of $optionName. Required.\n * @var string|\\WordfenceLS\\Text\\Model_HTML $title The title shown for the option. Required.\n * @var array $states An array of the possible states for the switch. The array matches the format array('value' => <value>, 'label' => <label>) Required.\n * @var string $helpLink If defined, the link to the corresponding external help page. Optional.\n * @var string $alignment If defined, controls the alignment of the switch control. Optional.\n *\/\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $optionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-switch\" data-option-name=\"<?php echo esc_attr($optionName); ?>\" data-original-value=\"<?php echo esc_attr($value); ?>\">\n\t<?php if (!isset($noSpacer) || !$noSpacer): ?>\n\t<li class=\"wfls-option-spacer\"><\/li>\n\t<?php endif; ?>\n\t<li class=\"wfls-option-content wfls-no-right\">\n\t\t<ul>\n\t\t\t<li class=\"wfls-option-title\">\n\t\t\t<?php if (isset($subtitle)): ?>\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t<li>\n\t\t\t<?php endif; ?>\n\t\t\t\t\t\t<span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($title); ?><\/span><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t\t<?php if (isset($subtitle)): ?>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($subtitle); ?><\/li>\n\t\t\t\t<\/ul>\n\t\t\t<?php endif; ?>\n\t\t\t<\/li>\n\t\t\t<li class=\"wfls-option-switch<?php if (isset($alignment)) { echo ' ' . $alignment; } ?> wfls-padding-add-top-xs-small\">\n\t\t\t\t<ul class=\"wfls-switch\" role=\"radiogroup\" aria-labelledby=\"<?php echo esc_attr($id); ?>-label\">\n\t\t\t\t<?php foreach ($states as $s): ?>\n\t\t\t\t\t<li<?php if ($s['value'] == $value) { echo ' class=\"wfls-active\"'; } ?> data-option-value=\"<?php echo esc_attr($s['value']); ?>\" role=\"radio\" aria-checked=\"<?php echo ($s['value'] == $value ? 'true' : 'false'); ?>\" tabindex=\"0\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($s['label']); ?><\/li>\n\t\t\t\t<?php endforeach; ?>\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-label.php","ext":"php","size":1404,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents an option-styled text value.\n *\n * Expects $title (or $titleHTML) to be defined. $helpLink may also be defined.\n *\n * @var string $title The title shown for the option.\n * @var string $titleHTML The raw HTML title shown for the option. This supersedes $title.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n *\/\n\nif (!isset($titleHTML)) {\n\t$titleHTML = esc_html($title);\n}\n?>\n<ul class=\"wfls-option wfls-option-label\">\n\t<?php if (!isset($noSpacer) || !$noSpacer): ?>\n\t\t<li class=\"wfls-option-spacer\"><\/li>\n\t<?php endif; ?>\n\t<li class=\"wfls-option-content\">\n\t\t<ul>\n\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t<?php if (isset($subtitle)): ?>\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<?php endif; ?>\n\t\t\t\t\t\t<?php echo $titleHTML; ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t\t\t\t\t<?php if (isset($subtitle)): ?>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php echo esc_html($subtitle); ?><\/li>\n\t\t\t\t<\/ul>\n\t\t\t<?php endif; ?>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-toggled-boolean-switch.php","ext":"php","size":3045,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents a boolean option with a switch toggle control.\n *\n * Expects $optionName, $enabledValue, $disabledValue, $value, and $title to be defined. $helpLink may also be defined.\n *\n * @var string $optionName The option name.\n * @var string $enabledValue The value to save in $option if the toggle is enabled.\n * @var string $disabledValue The value to save in $option if the toggle is disabled.\n * @var string $value The current value of $optionName.\n * @var string $title The title shown for the option.\n * @var string $htmlTitle The unescaped title shown for the option.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n * @var bool $disabled If defined and truthy, the option will start out disabled.\n *\/\n\nif (isset($subtitle) && !isset($subtitleHTML)) {\n\t$subtitleHTML = esc_html($subtitle);\n}\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $optionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-toggled-boolean-switch<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?><?php if (isset($disabled) && $disabled) { echo ' wfls-disabled'; } ?>\" data-option=\"<?php echo esc_attr($optionName); ?>\" data-enabled-value=\"<?php echo esc_attr($enabledValue); ?>\" data-disabled-value=\"<?php echo esc_attr($disabledValue); ?>\" data-original-value=\"<?php echo esc_attr($value == $enabledValue ? $enabledValue : $disabledValue); ?>\">\n\t<li class=\"wfls-boolean-switch<?php echo ($value == $enabledValue ? ' wfls-active' : ''); ?>\" role=\"checkbox\" aria-checked=\"<?php echo ($value == $enabledValue ? 'true' : 'false'); ?>\" tabindex=\"0\" aria-labelledby=\"<?php echo esc_attr($id); ?>-label\"><a href=\"#\" class=\"wfls-boolean-switch-handle\"><\/a><\/li>\n\t<li class=\"wfls-option-title\">\n\t\t<?php if (isset($subtitleHTML)): ?>\n\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t<li>\n\t\t<?php endif; ?>\n\t\t\t\t<span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo (!empty($title)) ? esc_html($title) : ''; echo (!empty($htmlTitle)) ? wp_kses($htmlTitle, 'post') : ''; ?><\/span><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t\t\t<?php if (isset($subtitleHTML)): ?>\n\t\t\t<\/li>\n\t\t\t<li class=\"wfls-option-subtitle\"><?php echo $subtitleHTML; ?><\/li>\n\t\t<\/ul>\n\t<?php endif; ?>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-toggled-segmented.php","ext":"php","size":3100,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents a boolean option with a checkbox toggle control.\n *\n * Expects $optionName, $enabledValue, $disabledValue, $value, and $title to be defined. $helpLink may also be defined.\n *\n * @var string $optionName The option name.\n * @var string $enabledValue The value to save in $option if the toggle is enabled.\n * @var string $disabledValue The value to save in $option if the toggle is disabled.\n * @var string $value The current value of $optionName.\n * @var string $title The title shown for the option.\n * @var string $htmlTitle The unescaped title shown for the option.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n *\/\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $optionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-toggled-segmented<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?>\" data-option=\"<?php echo esc_attr($optionName); ?>\" data-enabled-value=\"<?php echo esc_attr($enabledValue); ?>\" data-disabled-value=\"<?php echo esc_attr($disabledValue); ?>\" data-original-value=\"<?php echo esc_attr($value == $enabledValue ? $enabledValue : $disabledValue); ?>\">\n\t<li class=\"wfls-option-title\"><?php echo (!empty($title)) ? esc_html($title) : ''; echo (!empty($htmlTitle)) ? wp_kses($htmlTitle, 'post') : ''; ?><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?><\/li>\n\t<li class=\"wfls-option-segments\">\n\t\t<?php\n\t\t$onId = sanitize_key('wfls-segment-' . $optionName . '-on');\n\t\t$offId = sanitize_key('wfls-segment-' . $optionName . '-off');\n\t\t?>\n\t\t<input id=\"<?php echo esc_attr($onId) ?>\" type=\"radio\" name=\"<?php echo esc_attr($optionName) ?>\" value=\"<?php echo esc_attr($enabledValue) ?>\"<?php echo ($value == $enabledValue ? ' checked' : ''); ?><?php echo (!(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?>>\n\t\t<label class=\"wfls-segment-first\" for=\"<?php echo esc_attr($onId) ?>\">On<\/label>\n\n\t\t<input id=\"<?php echo esc_attr($offId) ?>\" type=\"radio\" name=\"<?php echo esc_attr($optionName) ?>\" value=\"<?php echo esc_attr($disabledValue) ?>\"<?php echo ($value == $disabledValue ? ' checked' : ''); ?><?php echo (!(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?>>\n\t\t<label class=\"wfls-segment-last\" for=\"<?php echo esc_attr($offId) ?>\">Off<\/label>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-select.php","ext":"php","size":2593,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents an option with a popup menu for detailed value selection.\n *\n * Expects $selectOptionName, $selectOptions, $selectValue, and $title to be defined. $helpLink may also be defined.\n *\n * @var string $selectOptionName The option name for the select portion.\n * @var array $selectOptions An array of the possible values for $selectOptionName. The array is of the format array(array('value' => <the internal value>, 'label' => <a display label>), ...)\n * @var string $selectValue The current value of $selectOptionName.\n * @var string $title The title shown for the option.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n *\/\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $selectOptionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-select<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?>\" data-select-option=\"<?php echo esc_attr($selectOptionName); ?>\" data-original-select-value=\"<?php echo esc_attr($selectValue); ?>\">\n\t<li class=\"wfls-option-spacer\"><\/li>\n\t<li class=\"wfls-option-content\">\n\t\t<ul>\n\t\t\t<li class=\"wfls-option-title\"><span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo esc_html($title); ?><\/span><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?><\/li>\n\t\t\t<li class=\"wfls-option-select wfls-padding-add-top-xs-small\">\n\t\t\t\t<select<?php echo (!(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?> aria-labelledby=\"<?php echo esc_attr($id); ?>-label\">\n\t\t\t\t\t<?php foreach ($selectOptions as $o): ?>\n\t\t\t\t\t\t<option class=\"wfls-option-select-option\" value=\"<?php echo esc_attr($o['value']); ?>\"<?php if ($o['value'] == $selectValue) { echo ' selected'; } ?>><?php echo esc_html($o['label']); ?><\/option>\n\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t<\/select>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-captcha-threshold.php","ext":"php","size":5281,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\n$optionName = \\WordfenceLS\\Controller_Settings::OPTION_RECAPTCHA_THRESHOLD;\n$currentValue = \\WordfenceLS\\Controller_Settings::shared()->get_float($optionName, 0.5);\n$selectOptions = array(\n\tarray('label' => __('1.0 (definitely a human)', 'wordfence'), 'value' => 1.0, 'selected' => ((int) ($currentValue * 10)) == 10),\n\tarray('label' => __('0.9', 'wordfence'), 'value' => 0.9, 'selected' => ((int) ($currentValue * 10)) == 9),\n\tarray('label' => __('0.8', 'wordfence'), 'value' => 0.8, 'selected' => ((int) ($currentValue * 10)) == 8),\n\tarray('label' => __('0.7', 'wordfence'), 'value' => 0.7, 'selected' => ((int) ($currentValue * 10)) == 7),\n\tarray('label' => __('0.6', 'wordfence'), 'value' => 0.6, 'selected' => ((int) ($currentValue * 10)) == 6),\n\tarray('label' => __('0.5 (probably a human)', 'wordfence'), 'value' => 0.5, 'selected' => ((int) ($currentValue * 10)) == 5),\n\tarray('label' => __('0.4', 'wordfence'), 'value' => 0.4, 'selected' => ((int) ($currentValue * 10)) == 4),\n\tarray('label' => __('0.3', 'wordfence'), 'value' => 0.3, 'selected' => ((int) ($currentValue * 10)) == 3),\n\tarray('label' => __('0.2', 'wordfence'), 'value' => 0.2, 'selected' => ((int) ($currentValue * 10)) == 2),\n\tarray('label' => __('0.1 (probably a bot)', 'wordfence'), 'value' => 0.1, 'selected' => ((int) ($currentValue * 10)) <= 1),\n);\n?>\n<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t<li>\n\t\t<ul id=\"wfls-option-recaptcha-threshold\" class=\"wfls-option wfls-option-select\" data-select-option=\"<?php echo esc_attr($optionName); ?>\" data-original-select-value=\"<?php echo esc_attr($currentValue); ?>\">\n\t\t\t<li class=\"wfls-option-spacer\"><\/li>\n\t\t\t<li class=\"wfls-option-content\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t\t\t<li><span id=\"wfls-option-recaptcha-threshold-label\"><strong><?php esc_html_e('reCAPTCHA human\/bot threshold score', 'wordfence'); ?><\/strong><\/span><\/li>\n\t\t\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php esc_html_e('A reCAPTCHA score equal to or higher than this value will be considered human. Anything lower will be treated as a bot and require additional verification for login and registration.', 'wordfence'); ?><\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-select wfls-padding-add-top-xs-small\">\n\t\t\t\t\t\t<select aria-labelledby=\"wfls-option-recaptcha-threshold-label\">\n\t\t\t\t\t\t\t<?php foreach ($selectOptions as $o): ?>\n\t\t\t\t\t\t\t\t<option class=\"wfls-option-select-option\" value=\"<?php echo esc_attr($o['value']); ?>\"<?php if ($o['selected']) { echo ' selected'; } ?>><?php echo esc_html($o['label']); ?><\/option>\n\t\t\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t\t\t<\/select>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>\n\t\t<ul class=\"wfls-option\">\n\t\t\t<li class=\"wfls-option-spacer\"><\/li>\n\t\t\t<li class=\"wfls-recaptcha-score-history\">\n\t\t\t\t<div class=\"wfls-recaptcha-chart-container\">\n\t\t\t\t\t<canvas id=\"wfls-recaptcha-score-history\"><\/canvas>\n\t\t\t\t<\/div>\n\t\t\t\t<div class=\"wfls-center\">\n\t\t\t\t\t<a href=\"#\" id=\"wfls-reset-recaptcha-score-stats\" class=\"wfls-text-small\"><?php esc_html_e('Reset Score Statistics', 'wordfence'); ?><\/a>\n\t\t\t\t<\/div>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>\n<script type=\"application\/javascript\">\n\t<?php\n\t\t$stats = \\WordfenceLS\\Controller_Settings::shared()->get_array(\\WordfenceLS\\Controller_Settings::OPTION_CAPTCHA_STATS);\n\t?>\n\t(function($) {\n\t\t$(function() {\n\t\t\t$('#wfls-reset-recaptcha-score-stats').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tWFLS.ajax('wordfence_ls_reset_recaptcha_stats', {}, function(res) {\n\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\twindow.location.reload(true);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (res.hasOwnProperty('html') && res.html) {\n\t\t\t\t\t\t\tWFLS.panelModalHTML((WFLS.screenSize(500) ? '300px' : '400px'), 'Error Resetting reCAPTCHA Statistics', res.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), 'Error Resetting reCAPTCHA Statistics', res.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\t\n\t\t$(window).on('wfls-tab-change.recaptcha-score-history', function(e, target) {\n\t\t\tif (target == 'settings') {\n\t\t\t\tvar barChartData = {\n\t\t\t\t\tlabels: ['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'],\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tlabel: '<?php esc_attr_e('Requests', 'wordfence'); ?>',\n\t\t\t\t\t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n\t\t\t\t\t\tborderColor: 'rgba(75,192,192,1.0)',\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\tdata: <?php echo json_encode($stats['counts']) ?>\n\t\t\t\t\t}]\n\t\t\t\t};\n\n\t\t\t\tnew Chart($('#wfls-recaptcha-score-history'), {\n\t\t\t\t\ttype: 'bar',\n\t\t\t\t\tdata: barChartData,\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tresponsive: true,\n\t\t\t\t\t\tlegend: {\n\t\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\ttext: '<?php esc_attr_e('reCAPTCHA Score History', 'wordfence'); ?>'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tscales: {\n\t\t\t\t\t\t\ty: {\n\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\t\t\t\ttext: '<?php esc_attr_e('Count', 'wordfence'); ?>'\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tticks: {\n\t\t\t\t\t\t\t\t\tmin: 0,\n\t\t\t\t\t\t\t\t\tprecision: 0,\n\t\t\t\t\t\t\t\t\tstepSize: <?php echo max(10, pow(10, floor(log10(array_sum($stats['counts']) \/ 5)))); ?>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t$(window).off('wfls-tab-change.recaptcha-score-history');\n\t\t\t}\n\t\t});\n\t})(jQuery);\n<\/script>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-toggled.php","ext":"php","size":2589,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents a boolean option with a checkbox toggle control.\n * \n * @var string $optionName The option name. Required.\n * @var string $enabledValue The value to save in $option if the toggle is enabled. Required.\n * @var string $disabledValue The value to save in $option if the toggle is disabled. Required.\n * @var string $value The current value of $optionName. Required.\n * @var string|\\WordfenceLS\\Text\\Model_HTML $title The title shown for the option. Required.\n * @var string|\\WordfenceLS\\Text\\Model_HTML $subtitle The title shown for the option. Optional.\n * @var string $helpLink If defined, the link to the corresponding external help page. Optional.\n * @var bool $disabled If defined and truthy, the option will start out disabled. Optional.\n * @var bool $child If true, this option will be rendered ar a child option. Optional.\n *\/\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $optionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-toggled<?php if (isset($disabled) && $disabled) { echo ' wfls-disabled'; } if (isset($child) && $child) { echo ' wfls-child-option'; }?>\" data-option=\"<?php echo esc_attr($optionName); ?>\" data-enabled-value=\"<?php echo esc_attr($enabledValue); ?>\" data-disabled-value=\"<?php echo esc_attr($disabledValue); ?>\" data-original-value=\"<?php echo esc_attr($value == $enabledValue ? $enabledValue : $disabledValue); ?>\">\n\t<li class=\"wfls-option-checkbox<?php echo ($value == $enabledValue ? ' wfls-checked' : ''); ?>\" role=\"checkbox\" aria-checked=\"<?php echo ($value == $enabledValue ? 'true' : 'false'); ?>\" tabindex=\"0\" aria-labelledby=\"<?php echo esc_attr($id); ?>-label\"><i class=\"wfls-ion-ios-checkmark-empty\" aria-hidden=\"true\"><\/i><\/li>\n\t<li class=\"wfls-option-title\">\n\t<?php if (isset($subtitle)): ?>\n\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t<li>\n\t<?php endif; ?>\n\t\t\t\t<span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($title); ?><\/span><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t<?php if (isset($subtitle)): ?>\n\t\t\t<\/li>\n\t\t\t<li class=\"wfls-option-subtitle\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($subtitle); ?><\/li>\n\t\t<\/ul>\n\t<?php endif; ?>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-ip-source.php","ext":"php","size":7936,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents the global option OPTION_IP_SOURCE with a value select menu and text area (hidden by default) for trusted proxies.\n *\/\n\n$selectOptions = array(\n\tarray('value' => \\WordfenceLS\\Model_Request::IP_SOURCE_AUTOMATIC, 'label' => esc_html__('Use the most secure method to get visitor IP addresses. Prevents spoofing and works with most sites.', 'wordfence') . ' <strong>' . esc_html__('(Recommended)', 'wordfence') . '<\/strong>'),\n\tarray('value' => \\WordfenceLS\\Model_Request::IP_SOURCE_REMOTE_ADDR, 'label' => esc_html__('Use PHP\\'s built in REMOTE_ADDR and don\\'t use anything else. Very secure if this is compatible with your site.', 'wordfence')),\n\tarray('value' => \\WordfenceLS\\Model_Request::IP_SOURCE_X_FORWARDED_FOR, 'label' => esc_html__('Use the X-Forwarded-For HTTP header. Only use if you have a front-end proxy or spoofing may result.', 'wordfence')),\n\tarray('value' => \\WordfenceLS\\Model_Request::IP_SOURCE_X_REAL_IP, 'label' => esc_html__('Use the X-Real-IP HTTP header. Only use if you have a front-end proxy or spoofing may result.', 'wordfence')),\n);\n?>\n<ul class=\"wfls-flex-vertical wfls-flex-full-width\">\n\t<li>\n\t\t<ul id=\"wfls-option-ip-source\" class=\"wfls-option wfls-option-ip-source\" data-option=\"<?php echo esc_attr(\\WordfenceLS\\Controller_Settings::OPTION_IP_SOURCE); ?>\" data-original-value=\"<?php echo esc_attr(\\WordfenceLS\\Controller_Settings::shared()->get(\\WordfenceLS\\Controller_Settings::OPTION_IP_SOURCE)); ?>\" data-text-area-option=\"<?php echo esc_attr(\\WordfenceLS\\Controller_Settings::OPTION_IP_TRUSTED_PROXIES); ?>\" data-original-text-area-value=\"<?php echo esc_attr(\\WordfenceLS\\Controller_Settings::shared()->get(\\WordfenceLS\\Controller_Settings::OPTION_IP_TRUSTED_PROXIES)); ?>\">\n\t\t\t<li class=\"wfls-option-content wfls-no-right\">\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t<li class=\"wfls-option-title\"><strong><?php esc_html_e('How to get IPs', 'wordfence'); ?><\/strong><\/li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t\t\t<li class=\"wfls-padding-add-left\">\n\t\t\t\t\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\" role=\"radiogroup\">\n\t\t\t\t\t\t\t\t\t<?php foreach ($selectOptions as $o): ?>\n\t\t\t\t\t\t\t\t\t\t<li class=\"wfls-padding-add-top-small\"><input type=\"radio\" class=\"wfls-option-radio\" name=\"wfls-ip-source\" value=\"<?php echo esc_attr($o['value']); ?>\" id=\"wfls-ip-source-<?php echo esc_attr(preg_replace('\/[^a-z0-9]\/i', '-', $o['value'])); ?>\"<?php if ($o['value'] == \\WordfenceLS\\Controller_Settings::shared()->get(\\WordfenceLS\\Controller_Settings::OPTION_IP_SOURCE)) { echo ' checked'; } ?>><label for=\"wfls-ip-source-<?php echo esc_attr(preg_replace('\/[^a-z0-9]\/i', '-', $o['value'])); ?>\">&nbsp;&nbsp;<\/label><?php echo $o['label']; ?><\/li>\n\t\t\t\t\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t\t<li class=\"wfls-option-ip-source-details wfls-padding-add-top\">\n\t\t\t\t\t\t\t\t<div class=\"wfls-left\">Detected IP(s): <span id=\"wfls-ip-source-preview-all\"><?php echo \\WordfenceLS\\Model_Request::current()->detected_ip_preview(); ?><\/span><\/div>\n\t\t\t\t\t\t\t\t<div class=\"wfls-left\">Your IP with this setting: <span id=\"wfls-ip-source-preview-single\"><?php echo esc_html(\\WordfenceLS\\Model_Request::current()->ip()); ?><\/span><\/div>\n\t\t\t\t\t\t\t\t<div class=\"wfls-left\"><a href=\"#\" id=\"wfls-ip-source-trusted-proxies-show\">+ Edit trusted proxies<\/a><\/div>\n\t\t\t\t\t\t\t<\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li id=\"wfls-ip-source-trusted-proxies\">\n\t\t<ul id=\"wfls-option-ip-source-trusted-proxies\" class=\"wfls-option wfls-option-textarea\" data-text-option=\"<?php echo esc_attr(\\WordfenceLS\\Controller_Settings::OPTION_IP_TRUSTED_PROXIES); ?>\" data-original-text-value=\"<?php echo esc_attr(\\WordfenceLS\\Controller_Settings::shared()->get(\\WordfenceLS\\Controller_Settings::OPTION_IP_TRUSTED_PROXIES)); ?>\">\n\t\t\t<li class=\"wfls-option-spacer\"><\/li>\n\t\t\t<li class=\"wfls-option-content wfls-no-right\">\n\t\t\t\t<ul>\n\t\t\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t\t\t<li><?php esc_html_e('Trusted Proxies', 'wordfence'); ?><\/li>\n\t\t\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php esc_html_e('These IPs (or CIDR ranges) will be ignored when determining the requesting IP via the X-Forwarded-For HTTP header. Enter one IP or CIDR range per line.', 'wordfence'); ?><\/li>\n\t\t\t\t\t\t<\/ul>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-textarea\">\n\t\t\t\t\t\t<textarea spellcheck=\"false\" autocapitalize=\"none\" autocomplete=\"off\" name=\"howGetIPs_trusted_proxies\"><?php echo esc_html(\\WordfenceLS\\Controller_Settings::shared()->get(\\WordfenceLS\\Controller_Settings::OPTION_IP_TRUSTED_PROXIES)); ?><\/textarea>\n\t\t\t\t\t<\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>\n<script type=\"application\/javascript\">\n\t(function($) {\n\t\t$(function() {\n\t\t\tvar updateIPPreview = function() {\n\t\t\t\tWFLS.updateIPPreview({ip_source: $('input[name=\"wfls-ip-source\"]:checked').val(), ip_source_trusted_proxies: $('#wfls-ip-source-trusted-proxies textarea').val()}, function(ret) {\n\t\t\t\t\tif (ret && ret.ip) {\n\t\t\t\t\t\t$('#wfls-ip-source-preview-all').html(ret.preview);\n\t\t\t\t\t\t$('#wfls-ip-source-preview-single').html(ret.ip);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\t$('input[name=\"wfls-ip-source\"]').on('change', function() {\n\t\t\t\tvar optionElement = $(this).closest('.wfls-option.wfls-option-ip-source');\n\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\tvar value = $('input[name=\"wfls-ip-source\"]:checked').val();\n\n\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\tif (originalValue == value) {\n\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t}\n\n\t\t\t\tWFLS.updatePendingChanges();\n\n\t\t\t\tupdateIPPreview();\n\t\t\t});\n\n\t\t\tvar coalescingUpdateTimer;\n\t\t\t$('#wfls-ip-source-trusted-proxies textarea').on('change paste keyup', function() {\n\t\t\t\tvar e = this;\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tclearTimeout(coalescingUpdateTimer);\n\t\t\t\t\tcoalescingUpdateTimer = setTimeout(updateIPPreview, 1000);\n\n\t\t\t\t\tvar optionElement = $(e).closest('.wfls-option.wfls-option-textarea');\n\t\t\t\t\tvar option = optionElement.data('textOption');\n\t\t\t\t\tvar value = $(e).val();\n\n\t\t\t\t\tvar originalValue = optionElement.data('originalTextValue');\n\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t}, 4);\n\t\t\t});\n\n\t\t\t$(window).on('wflsOptionsReset', function() {\n\t\t\t\t$('input[name=\"wfls-ip-source\"]').each(function() {\n\t\t\t\t\tvar optionElement = $(this).closest('.wfls-option.wfls-option-ip-source');\n\t\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\n\t\t\t\t\t$(this).prop('checked', originalValue == $(this).attr('value'));\n\t\t\t\t});\n\n\t\t\t\t$('#wfls-ip-source-trusted-proxies textarea').each(function() {\n\t\t\t\t\tvar optionElement = $(this).closest('.wfls-option.wfls-option-textarea');\n\t\t\t\t\tvar originalValue = optionElement.data('originalTextAreaValue');\n\t\t\t\t\t$(this).val(originalValue);\n\t\t\t\t});\n\n\t\t\t\tupdateIPPreview();\n\t\t\t});\n\n\t\t\t$('#wfls-ip-source-trusted-proxies-show').each(function() {\n\t\t\t\t$(this).on('keydown', function(e) {\n\t\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t$(this).on('click', function(e) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\tvar isActive = $('#wfls-ip-source-trusted-proxies').hasClass('wfls-active');\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\t$('#wfls-ip-source-trusted-proxies').slideUp({\n\t\t\t\t\t\t\talways: function() {\n\t\t\t\t\t\t\t\t$('#wfls-ip-source-trusted-proxies').removeClass('wfls-active');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).parent().slideUp();\n\t\t\t\t\t\t$('#wfls-ip-source-trusted-proxies').slideDown({\n\t\t\t\t\t\t\talways: function() {\n\t\t\t\t\t\t\t\t$('#wfls-ip-source-trusted-proxies').addClass('wfls-active');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t})(jQuery);\n<\/script> "},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-toggled-textarea.php","ext":"php","size":3493,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents an option with a boolean on\/off toggle checkbox and text area for detailed value entry.\n *\n * Expects $toggleOptionName, $enabledToggleValue, $disabledToggleValue, $toggleValue, $textAreaOptionName, $textAreaValue, and $title to be defined. $helpLink may also be defined.\n *\n * @var string $toggleOptionName The option name for the toggle portion.\n * @var string $enabledToggleValue The value to save in $toggleOption if the toggle is enabled.\n * @var string $disabledToggleValue The value to save in $toggleOption if the toggle is disabled.\n * @var string $toggleValue The current value of $toggleOptionName.\n * @var string $textAreaOptionName The option name for the text area portion.\n * @var string $textAreaValue The current value of $textAreaOptionName.\n * @var string $title The title shown for the option.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n *\/\n\n$toggleID = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $toggleOptionName);\n$textAreaID = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $textAreaOptionName);\n?>\n<ul class=\"wfls-option wfls-option-toggled-textarea<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?>\" data-toggle-option=\"<?php echo esc_attr($toggleOptionName); ?>\" data-enabled-toggle-value=\"<?php echo esc_attr($enabledToggleValue); ?>\" data-disabled-toggle-value=\"<?php echo esc_attr($disabledToggleValue); ?>\" data-original-toggle-value=\"<?php echo esc_attr($toggleValue == $enabledToggleValue ? $enabledToggleValue : $disabledToggleValue); ?>\" data-text-area-option=\"<?php echo esc_attr($textAreaOptionName); ?>\" data-original-text-area-value=\"<?php echo esc_attr($textAreaValue); ?>\">\n\t<li id=\"<?php echo esc_attr($toggleID); ?>\" class=\"wfls-option-checkbox<?php echo ($toggleValue == $enabledToggleValue ? ' wfls-checked' : ''); ?>\" role=\"checkbox\" aria-checked=\"<?php echo ($toggleValue == $enabledToggleValue ? 'true' : 'false'); ?>\" tabindex=\"0\"><i class=\"wfls-ion-ios-checkmark-empty\" aria-hidden=\"true\" aria-labelledby=\"<?php echo esc_attr($toggleID); ?>-label\"><\/i><\/li>\n\t<li class=\"wfls-option-title\"><span id=\"<?php echo esc_attr($toggleID); ?>-label\"><?php echo esc_html($title); ?><\/span><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?><\/li>\n\t<li id=\"<?php echo esc_attr($textAreaID); ?>\" class=\"wfls-option-textarea\">\n\t\t<select<?php echo ($toggleValue == $enabledToggleValue && !(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?> aria-labelledby=\"<?php echo esc_attr($toggleID); ?>-label\">\n\t\t\t<textarea<?php echo (!(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?>><?php echo esc_html($textAreaValue); ?><\/textarea>\n\t\t<\/select>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-roles.php","ext":"php","size":9850,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\nuse WordfenceLS\\Controller_Settings;\nuse WordfenceLS\\Text\\Model_JavaScript;\n\n$states = array(\n\tController_Settings::STATE_2FA_DISABLED => __('Disabled', 'wordfence'),\n\tController_Settings::STATE_2FA_OPTIONAL => __('Optional', 'wordfence'),\n\tController_Settings::STATE_2FA_REQUIRED => __('Required', 'wordfence')\n);\n\n$gracePeriod = Controller_Settings::shared()->get_int(Controller_Settings::OPTION_REQUIRE_2FA_USER_GRACE_PERIOD, Controller_Settings::DEFAULT_REQUIRE_2FA_USER_GRACE_PERIOD);\n$woocommerceIntegrationEnabled = Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_ENABLE_WOOCOMMERCE_INTEGRATION);\n\n$requiredRoles = array();\nforeach ($options as $option) {\n\tif ($option['state'] === Controller_Settings::STATE_2FA_REQUIRED) {\n\t\t$requiredRoles[$option['role']] = $option['title'];\n\t}\n}\n\n$customerRoleWarning = __('Requiring 2FA for customers is not recommended as some customers may experience difficulties setting up or using two-factor authentication. Instead, using the \"Optional\" mode for users with the customer role is recommended which will allow customers to enable 2FA, but will not require them to do so.', 'wordfence');\n\n?>\n<ul class=\"wfls-option wfls-option-2fa-roles\">\n\t<li class=\"wfls-option-title\">\n\t\t<label><?php esc_html_e('2FA Roles', 'wordfence') ?><\/label>\n\t<\/li>\n\t<li class=\"wfls-option-content\">\n\t\t<ul>\n\t\t<?php foreach ($options as $option): ?>\n\t\t<?php $selectId = 'wfls-2fa-role-' . $option['name']; ?>\n\t\t<li>\n\t\t\t<label for=\"<?php echo esc_attr($selectId) ?>\"><?php echo esc_html($option['title']) ?><\/label>\n\t\t\t<select id=\"<?php echo esc_attr($selectId) ?>\" name=\"<?php echo esc_attr($option['name']) ?>\" class=\"wfls-option-select\">\n\t\t\t\t<?php foreach ($states as $key => $label): ?>\n\t\t\t\t<?php if (!$option['allow_disabling'] && $key === Controller_Settings::STATE_2FA_DISABLED) continue; ?>\n\t\t\t\t<option\n\t\t\t\t\tvalue=\"<?php echo esc_attr($key); ?>\"\n\t\t\t\t\t<?php if($option['state'] === $key): ?> selected<?php endif ?>\n\t\t\t\t\t<?php if(!$option['editable']): ?> disabled<?php endif ?>\n\t\t\t\t>\n\t\t\t\t\t<?php echo esc_html($label) ?>\n\t\t\t\t<\/option>\n\t\t\t\t<?php endforeach ?>\n\t\t\t<\/select>\n\t\t<\/li>\n\t\t<?php endforeach ?>\n\t\t<\/ul>\n\t\t<p id=\"wfls-customer-2fa-required-warning\" class=\"wfls-notice\" style=\"display: none;\"><?php echo esc_html($customerRoleWarning) ?><\/p>\n\t\t<?php if ($hasWoocommerce && !$woocommerceIntegrationEnabled): ?>\n\t\t\t<p class=\"wfls-woocommerce-customer-integration-message\"><small><?php esc_html_e('In order to use 2FA with the WooCommerce customer role, you must either enable the \"WooCommerce integration\" option or use the \"wordfence_2fa_management\" shortcode to provide customers with access to the 2FA management interface. The default interface is only available through WordPress admin pages which are not accessible to users in the customer role.', 'wordfence') ?><\/small><\/p>\n\t\t<?php endif ?>\n\t<\/li>\n\t<li class=\"wfls-2fa-grace-period-container\">\n\t\t<label for=\"wfls-2fa-grace-period\" class=\"wfls-primary-label\"><?php esc_html_e('Grace Period', 'wordfence') ?><\/label>\n\t\t<input id=\"wfls-2fa-grace-period\" type=\"text\" pattern=\"[0-9]+\" value=\"<?php echo (int)$gracePeriod; ?>\" class=\"wfls-option-input wfls-option-input-required\" name=\"<?php echo esc_html(Controller_Settings::OPTION_REQUIRE_2FA_USER_GRACE_PERIOD) ?>\" maxlength=\"2\">\n\t\t<label for=\"wfls-2fa-grace-period\"><?php esc_html_e('days', 'wordfence') ?><\/label>\n\t\t<div id=\"wfls-grace-period-zero-warning\" style=\"display: none;\">\n\t\t\t<strong><?php esc_html_e('Setting the grace period to 0 will prevent users in roles where 2FA is required, including newly created users, from logging in if they have not already enabled two-factor authentication.', 'wordfence') ?><\/strong>\n\t\t\t<a href=\"<?php echo esc_attr(\\WordfenceLS\\Controller_Support::esc_supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_ROLES)) ?>\" target=\"_blank\" rel=\"noopener noreferrer\"><?php esc_html_e('Learn More', 'wordfence') ?><\/a>\n\t\t<\/div>\n\t\t<small><?php esc_html_e('For roles that require 2FA, users will have this many days to set up 2FA. Failure to set up 2FA during this period will result in the user losing account access. This grace period will apply to new users from the time of account creation. For existing users, this grace period will apply relative to the time at which the requirement is implemented. This grace period will not automatically apply to admins and must be manually enabled for each admin user.', 'wordfence') ?><\/small>\n\t<\/li>\n\t<?php if (!empty($requiredRoles)): ?>\n\t<li class=\"wfls-2fa-notification-action\">\n\t\t<h4><?php esc_html_e('2FA Notifications', 'wordfence') ?><\/h4>\n\t\t<p>\n\t\t\t<small><?php esc_html_e('Send an email to users with the selected role to notify them of the grace period for enabling 2FA. Select the desired role and optionally specify the URL to be sent in the email to setup 2FA. If left blank, the URL defaults to the standard wordpress login and Wordfence\u2019s Two-Factor Authentication plugin page. For example, if using WooCommerce, input the relative URL of the account page.', 'wordfence') ?><\/small>\n\t\t\t<a href=\"<?php echo \\WordfenceLS\\Controller_Support::esc_supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_2FA_NOTIFICATIONS) ?>\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"<?php echo \\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o'; ?>\" aria-hidden=\"true\"><\/i><\/a>\n\t\t<\/p>\n\t\t<div>\n\t\t\t<label><?php esc_html_e('2FA Role', 'wordfence') ?><\/label>\n\t\t\t<select id=\"wfls-grace-period-notification-role\">\n\t\t\t\t<?php foreach ($requiredRoles as $role => $label): ?>\n\t\t\t\t<option value=\"<?php echo esc_attr($role) ?>\"><?php echo esc_html($label) ?><\/option>\n\t\t\t\t<?php endforeach ?>\n\t\t\t<\/select>\n\t\t<\/div>\n\t\t<div>\n\t\t\t<label><?php esc_html_e('2FA Relative URL (optional)', 'wordfence') ?><\/label>\n\t\t\t<input id=\"wfls-grace-period-notification-url\" type=\"text\" placeholder=\"ex: \/my-account\/\">\n\t\t<\/div>\n\t\t<button class=\"wfls-btn wfls-btn-default wfls-btn-sm\" id=\"wfls-send-grace-period-notification\"><?php esc_html_e('Notify', 'wordfence') ?><\/button>\n\t<\/li>\n\t<?php endif ?>\n<\/ul>\n<script>\n\t(function($) {\n\t\tfunction sendGracePeriodNotification(notifyAll) {\n\t\t\tvar request = {\n\t\t\t\trole: $('#wfls-grace-period-notification-role').val(),\n\t\t\t\turl: $('#wfls-grace-period-notification-url').val(),\n\t\t\t};\n\t\t\tif (typeof notifyAll !== \"undefined\" && notifyAll)\n\t\t\t\trequest.notify_all = true;\n\t\t\tWFLS.ajax('wordfence_ls_send_grace_period_notification', request, \n\t\t\t\tfunction(response) {\n\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\tvar settings = {\n\t\t\t\t\t\t\tadditional_buttons: []\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (response.limit_exceeded) {\n\t\t\t\t\t\t\tsettings.additional_buttons.push({\n\t\t\t\t\t\t\t\tlabel: '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Send Anyway', 'wordfence')); ?>',\n\t\t\t\t\t\t\t\tid: 'wfls-send-grace-period-notification-over-limit'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Sending Notification', 'wordfence')); ?>', response.error, settings);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Notification Sent', 'wordfence')); ?>', response.confirmation);\n\t\t\t\t\t}\n\t\t\t\t\tif (request.notify_all) {\n\t\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Sending Notification', 'wordfence')); ?>', '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('An error was encountered while trying to send the notification. Please try again.', 'wordfence')); ?>');\n\t\t\t\t\tif (request.notify_all) {\n\t\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\t$('#wfls-send-grace-period-notification').on('click', function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tsendGracePeriodNotification();\t\n\t\t});\n\t\t$(document).on('click', '#wfls-send-grace-period-notification-over-limit', function() {\n\t\t\tsendGracePeriodNotification(true);\n\t\t\t$(this).prop(\"disabled\", true);\n\t\t});\n\t\t$('#wfls-2fa-grace-period').on('input', function(e) {\n\t\t\tvar value = $(this).val();\n\t\t\tvalue = value.replace(\/[^0-9]\/g, '');\n\t\t\tvalue = parseInt(value);\n\t\t\tif (isNaN(value))\n\t\t\t\tvalue = '';\n\t\t\tif (value === 0) {\n\t\t\t\t$(\"#wfls-grace-period-zero-warning\").show();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$(\"#wfls-grace-period-zero-warning\").hide();\n\t\t\t}\n\t\t\t$(this).val(value);\n\t\t}).trigger('input');\n\t\tvar customerRoleInput = $('#wfls-2fa-role-enabled-roles\\\\.customer');\n\t\tfunction isCustomerRoleRequired() {\n\t\t\treturn customerRoleInput.val() === 'required';\n\t\t}\n\t\tfunction toggleCustomerRoleWarning() {\n\t\t\t$(\"#wfls-customer-2fa-required-warning\").toggle(isCustomerRoleRequired());\n\t\t}\n\t\ttoggleCustomerRoleWarning();\n\t\tcustomerRoleInput.on('change', function(e) {\n\t\t\ttoggleCustomerRoleWarning();\n\t\t\tif (isCustomerRoleRequired()) {\n\t\t\t\tWFLS.displayModalMessage(\n\t\t\t\t\t<?php Model_JavaScript::echo_string_literal(__('Not Recommended', 'wordfence')) ?>,\n\t\t\t\t\t<?php Model_JavaScript::echo_string_literal($customerRoleWarning) ?>,\n\t\t\t\t\t[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: <?php Model_JavaScript::echo_string_literal(__('Make Optional', 'wordfence')) ?>,\n\t\t\t\t\t\t\tid: 'wfls-customer-role-warning-revert',\n\t\t\t\t\t\t\ttype: 'primary'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: <?php Model_JavaScript::echo_string_literal(__('Proceed', 'wordfence')) ?>,\n\t\t\t\t\t\t\tid: 'wfls-generic-modal-close',\n\t\t\t\t\t\t\ttype: 'danger'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t\t$('body').on('click', '#wfls-customer-role-warning-revert', function() {\n\t\t\tcustomerRoleInput.val('optional').trigger('change');\n\t\t\t$('#wfls-generic-modal-close').trigger('click');\n\t\t});\n\t})(jQuery);\n<\/script>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-toggled-multiple.php","ext":"php","size":2665,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents multiple boolean options under a single heading with a checkbox toggle control for each.\n *\n * @var array $options The options shown. The structure is defined below. Required.\n * @var string|\\WordfenceLS\\Text\\Model_HTML $title The overall title shown for the options. Required.\n * @var string $helpLink The link to the corresponding external help page. Optional.\n * @var bool $wrap Whether or not the options should be allowed to wrap. Optional, defaults to false.\n * \n * $options is an array of\n * \tarray(\n * \t\t'name' => string <option name>,\n * \t\t'enabledValue' => string <value saved if the toggle is enabled>,\n * \t\t'disabledValue' => string <value saved if the toggle is disabled>,\n * \t\t'value' => string <current value of the option>,\n * \t\t'title' => string|\\Wordfence2FA\\Text\\Model_HTML <title displayed to label the checkbox>,\n * \t\t'editable' => bool Whether or not the option can be edited, defaults to true.\n * \t)\n *\/\n?>\n<ul class=\"wfls-option wfls-option-toggled-multiple\">\n\t<li class=\"wfls-option-title\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($title); ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?><\/li>\n\t<li class=\"wfls-option-checkboxes<?php if (isset($wrap) && $wrap) { echo ' wfls-option-checkboxes-wrap'; } ?>\">\n\t\t<?php\n\t\tforeach ($options as $o):\n\t\t\t$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $o['name']);\n\t\t?>\n\t\t<ul id=\"<?php echo esc_attr($id); ?>\" data-option=\"<?php echo esc_attr($o['name']); ?>\" data-enabled-value=\"<?php echo esc_attr($o['enabledValue']); ?>\" data-disabled-value=\"<?php echo esc_attr($o['disabledValue']); ?>\" data-original-value=\"<?php echo esc_attr($o['value'] == $o['enabledValue'] ? $o['enabledValue'] : $o['disabledValue']); ?>\">\n\t\t\t<li class=\"wfls-option-checkbox<?php echo ($o['value'] == $o['enabledValue'] ? ' wfls-checked' : ''); ?><?php echo (isset($o['editable']) && !$o['editable'] ? ' wfls-disabled' : ''); ?>\" role=\"checkbox\" aria-checked=\"<?php echo ($o['value'] == $o['enabledValue'] ? 'true' : 'false'); ?>\" tabindex=\"0\" aria-labelledby=\"<?php echo esc_attr($id); ?>-label\"><i class=\"wfls-ion-ios-checkmark-empty\" aria-hidden=\"true\"><\/i><\/li>\n\t\t\t<li id=\"<?php echo esc_attr($id); ?>-label\" class=\"wfls-option-title\"><?php echo esc_html($o['title']); ?><\/li>\n\t\t<\/ul>\n\t\t<?php endforeach; ?>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-textarea.php","ext":"php","size":3081,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents a text area option.\n *\n * Expects $textOptionName, $textValue, and $title to be defined. $helpLink, $premium, and $noSpacer may also be defined.\n *\n * @var string $textOptionName The option name for the text field. Required.\n * @var string $textValue The current value of $textOptionName. Required.\n * @var string|\\WordfenceLS\\Text\\Model_HTML $title The title shown for the option. Required.\n * @var string|\\WordfenceLS\\Text\\Model_HTML $subtitle The title shown for the option. Optional.\n * @var string $subtitlePosition The position for the subtitle: 'value' for below the value, 'title' for below the title. Optional.\n * @var string $helpLink If defined, the link to the corresponding external help page. Optional.\n * @var bool $noSpacer If defined and truthy, the spacer will be omitted. Optional.\n *\/\n\nif (!isset($subtitlePosition)) { \/\/May be 'title' to appear below the title or 'value' to appear below the field\n\t$subtitlePosition = 'title';\n}\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $textOptionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-textarea\" data-text-option=\"<?php echo esc_attr($textOptionName); ?>\" data-original-text-value=\"<?php echo esc_attr($textValue); ?>\">\n\t<?php if (!isset($noSpacer) || !$noSpacer): ?>\n\t<li class=\"wfls-option-spacer\"><\/li>\n\t<?php endif; ?>\n\t<li class=\"wfls-option-content wfls-no-right\">\n\t\t<ul>\n\t\t\t<li class=\"wfls-option-title<?php if (isset($alignTitle)) { echo $alignTitle == 'top' ? ' wfls-option-title-top' : ($alignTitle == 'bottom' ? 'wfls-option-title-bottom' : ''); } ?>\">\n\t\t\t\t<?php if (isset($subtitleHTML) && $subtitlePosition == 'title'): ?>\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t<li>\n\t\t\t\t<?php endif; ?>\n\t\t\t\t\t\t<span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($title); ?><\/span><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t\t\t<?php if (isset($subtitle) && $subtitlePosition == 'title'): ?>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($subtitle); ?><\/li>\n\t\t\t\t<\/ul>\n\t\t\t\t<?php endif; ?>\n\t\t\t<\/li>\n\t\t\t<li class=\"wfls-option-textarea\">\n\t\t\t\t<?php if (isset($subtitle) && $subtitlePosition == 'value'): ?>\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left wfls-flex-full-width\">\n\t\t\t\t\t<li>\n\t\t\t\t<?php endif; ?>\n\t\t\t\t<textarea aria-labelledby=\"<?php echo esc_attr($id); ?>-label\"><?php echo esc_html($textValue); ?><\/textarea>\n\t\t\t\t<?php if (isset($subtitle) && $subtitlePosition == 'value'): ?>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html($subtitle); ?><\/li>\n\t\t\t\t<\/ul>\n\t\t\t\t<?php endif; ?>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-ntp.php","ext":"php","size":3945,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n$maxFailures = (int) \\WordfenceLS\\Controller_Time::FAILURE_LIMIT;\n$cronDisabled = \\WordfenceLS\\Controller_Settings::shared()->is_ntp_cron_disabled($failureCount);\n$id = 'wfls-option-ntp';\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-flex-vertical wfls-flex-align-left\">\n\t<li class=\"wfls-option-title\"><strong><?php esc_html_e('NTP', 'wordfence') ?><\/strong><\/li>\n\t<li class=\"wfls-option-content\">\n\t\t<p><?php esc_html_e('NTP is a protocol that allows for remote time synchronization. Wordfence Login Security uses this protocol to ensure that it has the most accurate time which is necessary for TOTP-based two-factor authentication.', 'wordfence') ?><\/p>\n\t<?php if (\\WordfenceLS\\Controller_Settings::shared()->is_ntp_disabled_via_constant()): ?>\n\t\t<p><?php esc_html_e('The constant WORDFENCE_LS_DISABLE_NTP is defined which disables NTP entirely. Remove this constant or set it to a falsy value to enable NTP.', 'wordfence') ?><\/p>\n\t<?php elseif ($cronDisabled): ?>\n\t\t<?php if ($failureCount > 0): ?>\n\t\t\t<p><strong><?php echo sprintf(esc_html__('NTP is currently disabled as %d subsequent attempts have failed.', 'wordfence'), $maxFailures) ?><\/strong><\/p>\n\t\t<?php else: ?>\n\t\t\t<p><?php esc_html_e('NTP was manually disabled.', 'wordfence') ?><\/p>\n\t\t<?php endif ?>\n\t\t<button id=\"wfls-reset-ntp-failure-count\" class=\"wfls-btn wfls-btn-sm wfls-btn-default\"><?php esc_html_e('Reset', 'wordfence') ?><\/button>\n\t<?php else: ?>\n\t\t<p><?php echo wp_kses(__('NTP is currently <strong>enabled<\/strong>.', 'wordfence'), array('strong'=>array())); ?><\/p>\n\t\t<?php if ($failureCount > 0): ?>\n\t\t\t<?php $remainingAttempts = $maxFailures - $failureCount; ?>\n\t\t\t<p>\n\t\t\t\t<strong><?php esc_html_e('NTP updates are currently failing.', 'wordfence') ?><\/strong> \n\t\t\t\t<?php echo $remainingAttempts > 0 ? sprintf(esc_html__('NTP will be automatically disabled after %d more attempts.', 'wordfence'), $remainingAttempts) : esc_html__('NTP will be automatically disabled after 1 more attempt.', 'wordfence') ?>\n\t\t\t<\/p>\n\t\t<?php endif ?>\n\t\t<button id=\"wfls-disable-ntp\" class=\"wfls-btn wfls-btn-sm wfls-btn-default\"><?php esc_html_e('Disable', 'wordfence') ?><\/button>\n\t<?php endif ?>\n\t<\/li>\n<\/ul>\n<script>\n\t(function($) {\n\t\t$(function() {\n\t\t\t$('#wfls-reset-ntp-failure-count').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tfunction handleError(message) {\n\t\t\t\t\tWFLS.panelModal(\n\t\t\t\t\t\t(WFLS.screenSize(500) ? '300px' : '400px'),\n\t\t\t\t\t\t'<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Resetting NTP', 'wordfence')); ?>',\n\t\t\t\t\t\ttypeof message === 'undefined' ? '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('An error was encountered while trying to reset the NTP state. Please try again.', 'wordfence')); ?>' : message\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tWFLS.ajax('wordfence_ls_reset_ntp_failure_count', [],\n\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\t\thandleError(response.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (error) {\n\t\t\t\t\t\thandleError();\n\t\t\t\t\t});\n\t\t\t});\n\t\t\t$('#wfls-disable-ntp').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tfunction handleError(message) {\n\t\t\t\t\tWFLS.panelModal(\n\t\t\t\t\t\t(WFLS.screenSize(500) ? '300px' : '400px'),\n\t\t\t\t\t\t'<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Disabling NTP', 'wordfence')); ?>',\n\t\t\t\t\t\ttypeof message === 'undefined' ? '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('An error was encountered while trying to disable NTP. Please try again.', 'wordfence')); ?>' : message\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tWFLS.ajax('wordfence_ls_disable_ntp', [],\n\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\t\thandleError(response.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction (error) {\n\t\t\t\t\t\thandleError();\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t})(jQuery);\n<\/script>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-toggled-sub.php","ext":"php","size":5304,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents a boolean option with a checkbox toggle control and a sub-option toggle.\n *\n * Expects $optionName, $enabledValue, $disabledValue, $value, and $title to be defined for the primary option. $helpLink may also be defined.\n * Expects $subOptionName, $subEnabledValue, $subDisabledValue, $subValue, and $subTitle to be defined for the sub-option. $subHelpLink may also be defined.\n *\n * @var string $optionName The option name.\n * @var string $enabledValue The value to save in $optionName if the toggle is enabled.\n * @var string $disabledValue The value to save in $optionName if the toggle is disabled.\n * @var string $value The current value of $optionName.\n * @var string $title The title shown for the option.\n * @var string $htmlTitle The unescaped title shown for the option.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n * \n * @var string $subOptionName The sub-option name.\n * @var string $subEnabledValue The value to save in $subOptionName if the toggle is enabled.\n * @var string $subDisabledValue The value to save in $subOptionName if the toggle is disabled.\n * @var string $subValue The current value of $subOptionName.\n * @var string $subTitle The title shown for the sub-option.\n * @var string $subHtmlTitle The unescaped title shown for the sub-option.\n * @var string $subHelpLink If defined, the link to the corresponding external help page for the sub-option.\n * @var bool $subPremium If defined, the sub-option will be tagged as premium only and not allow its value to change for free users.\n *\/\n\nif (isset($title) && !isset($htmlTitle)) {\n\t$htmlTitle = esc_html($title);\n}\n\nif (isset($subTitle) && !isset($subHtmlTitle)) {\n\t$subHtmlTitle = esc_html($subTitle);\n}\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $optionName);\n$subID = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $subOptionName);\n?>\n<ul class=\"wfls-flex-vertical wfls-flex-full-width\">\n\t<li>\n\t\t<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-toggled<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?>\" data-option=\"<?php echo esc_attr($optionName); ?>\" data-enabled-value=\"<?php echo esc_attr($enabledValue); ?>\" data-disabled-value=\"<?php echo esc_attr($disabledValue); ?>\" data-original-value=\"<?php echo esc_attr($value == $enabledValue ? $enabledValue : $disabledValue); ?>\">\n\t\t\t<li class=\"wfls-option-checkbox<?php echo ($value == $enabledValue ? ' wfls-checked' : ''); ?>\" role=\"checkbox\" aria-checked=\"<?php echo ($value == $enabledValue ? 'true' : 'false'); ?>\" tabindex=\"0\" aria-labelledby=\"<?php echo esc_attr($id); ?>-label\"><i class=\"wfls-ion-ios-checkmark-empty\" aria-hidden=\"true\"><\/i><\/li>\n\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t<span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo $htmlTitle; ?><\/span><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li class=\"wfls-option-sub\">\n\t\t<ul id=\"<?php echo esc_attr($subID); ?>\" class=\"wfls-option wfls-option-toggled<?php if (!wfConfig::p() && isset($subPremium) && $subPremium) { echo ' wfls-option-premium'; } ?>\" data-option=\"<?php echo esc_attr($subOptionName); ?>\" data-enabled-value=\"<?php echo esc_attr($subEnabledValue); ?>\" data-disabled-value=\"<?php echo esc_attr($subDisabledValue); ?>\" data-original-value=\"<?php echo esc_attr($subValue == $subEnabledValue ? $subEnabledValue : $subDisabledValue); ?>\">\n\t\t\t<li class=\"wfls-option-checkbox<?php echo ($subValue == $subEnabledValue ? ' wfls-checked' : ''); ?>\" role=\"checkbox\" aria-checked=\"<?php echo ($subValue == $subEnabledValue ? 'true' : 'false'); ?>\" tabindex=\"0\" aria-labelledby=\"<?php echo esc_attr($subID); ?>-label\"><i class=\"wfls-ion-ios-checkmark-empty\" aria-hidden=\"true\"><\/i><\/li>\n\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t<span id=\"<?php echo esc_attr($subID); ?>-label\"><?php echo $subHtmlTitle; ?><\/span><?php if (!wfConfig::p() && isset($subPremium) && $subPremium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($subHelpLink)) { echo ' <a href=\"' . esc_attr($subHelpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-token.php","ext":"php","size":2537,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents an option with a token field for value entry.\n *\n * Expects $tokenOptionName, $tokenValue, and $title to be defined. $helpLink may also be defined.\n *\n * @var string $tokenOptionName The option name.\n * @var array $tokenValue The current value of $tokenOptionName. It will be JSON-encoded as an array of strings.\n * @var string $title The title shown for the option.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n *\/\n\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $tokenOptionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-token<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?>\" data-token-option=\"<?php echo esc_attr($tokenOptionName); ?>\" data-original-token-value=\"<?php echo esc_attr(json_encode($tokenValue)); ?>\">\n\t<li class=\"wfls-option-spacer\"><\/li>\n\t<li class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t<div class=\"wfls-option-title\">\n\t\t<?php if (isset($subtitle)): ?>\n\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t<li>\n\t\t<?php endif; ?>\n\t\t\t\t\t<span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo esc_html($title); ?><\/span><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t<?php if (isset($subtitle)): ?>\n\t\t\t\t<\/li>\n\t\t\t\t<li class=\"wfls-option-subtitle\"><?php echo esc_html($subtitle); ?><\/li>\n\t\t\t<\/ul>\n\t\t<?php endif; ?>\n\t\t<\/div>\n\t\t<select multiple<?php echo (!(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?> aria-labelledby=\"<?php echo esc_attr($id); ?>-label\">\n\t\t<?php foreach ($tokenValue as $o): ?>\n\t\t\t<option value=\"<?php echo esc_attr($o); ?>\" selected><?php echo esc_html($o); ?><\/option>\n\t\t<?php endforeach; ?>\n\t\t<\/select>\n\t\t<div class=\"wfls-option-token-tags\"><\/div>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-captcha.php","ext":"php","size":7619,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\n$enableOptionName = \\WordfenceLS\\Controller_Settings::OPTION_ENABLE_AUTH_CAPTCHA;\n$currentEnableValue = \\WordfenceLS\\Controller_Settings::shared()->get_bool($enableOptionName);\n\n$siteKeyOptionName = \\WordfenceLS\\Controller_Settings::OPTION_RECAPTCHA_SITE_KEY;\n$siteKeyValue = \\WordfenceLS\\Controller_Settings::shared()->get($siteKeyOptionName);\n\n$secretOptionName = \\WordfenceLS\\Controller_Settings::OPTION_RECAPTCHA_SECRET;\n$secretValue = \\WordfenceLS\\Controller_Settings::shared()->get($secretOptionName);\n?>\n<ul id=\"wfls-option-enable-auth-captcha\" data-option=\"<?php echo esc_attr($enableOptionName); ?>\" data-enabled-value=\"1\" data-disabled-value=\"0\" data-original-value=\"<?php echo $currentEnableValue ? '1' : '0'; ?>\">\n\t<li>\n\t\t<ul class=\"wfls-option wfls-padding-add-bottom-small\">\n\t\t\t<li id=\"wfls-enable-auth-captcha\" class=\"wfls-option-checkbox<?php echo ($currentEnableValue ? ' wfls-checked' : ''); ?>\" role=\"checkbox\" aria-checked=\"<?php echo ($currentEnableValue ? 'true' : 'false'); ?>\" tabindex=\"0\"><i class=\"wfls-ion-ios-checkmark-empty\" aria-hidden=\"true\" aria-labelledby=\"wfls-enable-auth-captcha-label\"><\/i><\/li>\n\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<strong id=\"wfls-enable-auth-captcha-label\"><?php esc_html_e('Enable reCAPTCHA on the login and user registration pages', 'wordfence'); ?><\/strong>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php printf(__('reCAPTCHA v3 does not make users solve puzzles or click a checkbox like previous versions. The only visible part is the reCAPTCHA logo. If a visitor\\'s browser fails the CAPTCHA, Wordfence will send an email to the user\\'s address with a link they can click to verify that they are a user of your site. You can read further details <a href=\"%s\" target=\"_blank\" rel=\"noopener noreferrer\">in our documentation<\/a>.', 'wordfence'), \\WordfenceLS\\Controller_Support::esc_supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_CAPTCHA)); ?><\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n\t<li>\n\t\t<ul class=\"wfls-option wfls-padding-no-top\">\n\t\t\t<li class=\"wfls-option-spacer\"><\/li>\n\t\t\t<li>\n\t\t\t\t<table>\n\t\t\t\t\t<tr class=\"wfls-option wfls-option-text\" data-original-value=\"<?php echo esc_attr($siteKeyValue); ?>\" data-text-option=\"<?php echo esc_attr($siteKeyOptionName); ?>\">\n\t\t\t\t\t\t<th id=\"wfls-enable-captcha-site-key-label\" class=\"wfls-padding-add-bottom\"><?php esc_html_e('reCAPTCHA v3 Site Key', 'wordfence'); ?><\/th>\n\t\t\t\t\t\t<td class=\"wfls-option-text wfls-padding-add-bottom\"><input type=\"text\" name=\"recaptchaSiteKey\" id=\"input-recaptchaSiteKey\" class=\"wfls-form-control\" value=\"<?php echo esc_attr($siteKeyValue); ?>\"<?php if (!$currentEnableValue) { echo ' disabled'; } ?>><\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t\t<tr class=\"wfls-option wfls-option-text\" data-original-value=\"<?php echo esc_attr($secretValue); ?>\" data-text-option=\"<?php echo esc_attr($secretOptionName); ?>\">\n\t\t\t\t\t\t<th id=\"wfls-enable-captcha-secret-label\"><?php esc_html_e('reCAPTCHA v3 Secret', 'wordfence'); ?><\/th>\n\t\t\t\t\t\t<td class=\"wfls-option-text\"><input type=\"text\" name=\"recaptchaSecret\" id=\"input-recaptchaSecret\" class=\"wfls-form-control\" value=\"<?php echo esc_attr($secretValue); ?>\"<?php if (!$currentEnableValue) { echo ' disabled'; } ?>><\/td>\n\t\t\t\t\t<\/tr>\n\t\t\t\t<\/table>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t\t<ul class=\"wfls-option wfls-padding-no-top\">\n\t\t\t<li class=\"wfls-option-spacer\"><\/li>\n\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php echo wp_kses(__('Note: This feature requires a free site key and secret for the <a href=\"https:\/\/www.google.com\/recaptcha\/about\/\" target=\"_blank\" rel=\"noopener noreferrer\">Google reCAPTCHA v3 Service<\/a>. To set up new reCAPTCHA keys, log into your Google account and go to the <a href=\"https:\/\/www.google.com\/recaptcha\/admin\" target=\"_blank\" rel=\"noopener noreferrer\">reCAPTCHA admin page<\/a>.', 'wordfence'), array('a'=>array('href'=>array(), 'target'=>array(), 'rel'=>array()))); ?><\/li>\n\t\t\t\t<\/ul>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>\n<script type=\"application\/javascript\">\n\t(function($) {\n\t\t$(function() {\n\t\t\t$('#wfls-enable-auth-captcha').on('keydown', function(e) {\n\t\t\t\tif (e.keyCode == 32) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t$(this).trigger('click');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t$('#wfls-enable-auth-captcha').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tvar optionElement = $('#wfls-option-enable-auth-captcha');\n\t\t\t\tif (optionElement.hasClass('wfls-disabled')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar option = optionElement.data('option');\n\t\t\t\tvar value = false;\n\t\t\t\tvar isActive = $(this).hasClass('wfls-checked');\n\t\t\t\tif (isActive) {\n\t\t\t\t\t$(this).removeClass('wfls-checked').attr('aria-checked', 'false');\n\t\t\t\t\t$('#input-recaptchaSiteKey, #input-recaptchaSecret').attr('disabled', true);\n\t\t\t\t\tvalue = optionElement.data('disabledValue');\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t$(this).addClass('wfls-checked').attr('aria-checked', 'true');\n\t\t\t\t\t$('#input-recaptchaSiteKey, #input-recaptchaSecret').attr('disabled', false);\n\t\t\t\t\tvalue = optionElement.data('enabledValue');\n\t\t\t\t}\n\n\t\t\t\tvar originalValue = optionElement.data('originalValue');\n\t\t\t\tif (originalValue == value) {\n\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t}\n\n\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t});\n\n\t\t\t$('#wfls-enable-auth-captcha-label').on('click', function(e) {\n\t\t\t\tvar links = $(this).find('a');\n\t\t\t\tvar buffer = 10;\n\t\t\t\tfor (var i = 0; i < links.length; i++) {\n\t\t\t\t\tvar t = $(links[i]).offset().top;\n\t\t\t\t\tvar l = $(links[i]).offset().left;\n\t\t\t\t\tvar b = t + $(links[i]).height();\n\t\t\t\t\tvar r = l + $(links[i]).width();\n\n\t\t\t\t\tif (e.pageX > l - buffer && e.pageX < r + buffer && e.pageY > t - buffer && e.pageY < b + buffer) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$(this).closest('.wfls-option').find('.wfls-option-checkbox').trigger('click');\n\t\t\t}).css('cursor', 'pointer');\n\n\t\t\t$('#input-recaptchaSiteKey, #input-recaptchaSecret').on('change paste keyup', function() {\n\t\t\t\tvar e = this;\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tvar optionElement = $(e).closest('.wfls-option');\n\t\t\t\t\tvar option = optionElement.data('textOption');\n\n\t\t\t\t\tif (typeof option !== 'undefined') {\n\t\t\t\t\t\tvar value = $(e).val();\n\n\t\t\t\t\t\tvar originalValue = $(optionElement).data('originalValue');\n\t\t\t\t\t\tif (originalValue == value) {\n\t\t\t\t\t\t\tdelete WFLS.pendingChanges[option];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tWFLS.pendingChanges[option] = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$(optionElement).trigger('change', [false]);\n\t\t\t\t\t\tWFLS.updatePendingChanges();\n\t\t\t\t\t}\n\t\t\t\t}, 4);\n\t\t\t});\n\n\t\t\t$(window).on('wflsOptionsReset', function() {\n\t\t\t\t$('#wfls-enable-auth-captcha').each(function() {\n\t\t\t\t\tvar enabledValue = $(this).data('enabledValue');\n\t\t\t\t\tvar disabledValue = $(this).data('disabledValue');\n\t\t\t\t\tvar originalValue = $(this).data('originalValue');\n\t\t\t\t\tif (enabledValue == originalValue) {\n\t\t\t\t\t\t$(this).find('#wfls-enable-auth-captcha.wfls-option-checkbox').addClass('wfls-checked').attr('aria-checked', 'true');\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t$(this).find('#wfls-enable-auth-captcha.wfls-option-checkbox').removeClass('wfls-checked').attr('aria-checked', 'false');\n\t\t\t\t\t}\n\t\t\t\t\t$(this).trigger('change', [true]);\n\t\t\t\t});\n\t\t\t\t$('#input-recaptchaSiteKey, #input-recaptchaSecret').each(function() {\n\t\t\t\t\t$(this).val($(this).data('originalValue'));\n\t\t\t\t\t$(this).attr('disabled', !$('#wfls-enable-auth-captcha.wfls-option-checkbox').hasClass('wfls-checked'));\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t})(jQuery);\n<\/script>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-text.php","ext":"php","size":2544,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents a text field option.\n *\n * Expects $textOptionName, $textValue, and $title to be defined. $placeholder and $helpLink may also be defined.\n *\n * @var string $textOptionName The option name for the text field.\n * @var string $textValue The current value of $textOptionName.\n * @var string $title The title shown for the option.\n * @var string $placeholder If defined, the placeholder for the text field.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n *\/\n\nif (!isset($placeholder)) {\n\t$placeholder = '';\n}\n$id = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $textOptionName);\n?>\n<ul id=\"<?php echo esc_attr($id); ?>\" class=\"wfls-option wfls-option-text<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?>\" data-text-option=\"<?php echo esc_attr($textOptionName); ?>\" data-original-text-value=\"<?php echo esc_attr($textValue); ?>\">\n\t<li class=\"wfls-option-spacer\"><\/li>\n\t<li class=\"wfls-option-content\">\n\t\t<ul>\n\t\t\t<li class=\"wfls-option-title\">\n\t\t\t\t<?php if (isset($subtitle)): ?>\n\t\t\t\t<ul class=\"wfls-flex-vertical wfls-flex-align-left\">\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<?php endif; ?>\n\t\t\t\t\t\t<span id=\"<?php echo esc_attr($id); ?>-label\"><?php echo esc_html($title); ?><\/span><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?>\n\t\t\t\t\t\t<?php if (isset($subtitle)): ?>\n\t\t\t\t\t<\/li>\n\t\t\t\t\t<li class=\"wfls-option-subtitle\"><?php echo esc_html($subtitle); ?><\/li>\n\t\t\t\t<\/ul>\n\t\t\t<?php endif; ?>\n\t\t\t<\/li>\n\t\t\t<li class=\"wfls-option-text\">\n\t\t\t\t<input type=\"text\" value=\"<?php echo esc_attr($textValue); ?>\" placeholder=\"<?php echo esc_attr($placeholder); ?>\"<?php echo (!(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?> aria-labelledby=\"<?php echo esc_attr($id); ?>-label\">\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/options\/option-toggled-select.php","ext":"php","size":3836,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * Presents an option with a boolean on\/off toggle checkbox and popup menu for detailed value selection.\n * \n * Expects $toggleOptionName, $enabledToggleValue, $disabledToggleValue, $toggleValue, $selectOptionName, $selectOptions, $selectValue, and $title to be defined. $helpLink may also be defined.\n * \n * @var string $toggleOptionName The option name for the toggle portion.\n * @var string $enabledToggleValue The value to save in $toggleOption if the toggle is enabled.\n * @var string $disabledToggleValue The value to save in $toggleOption if the toggle is disabled.\n * @var string $toggleValue The current value of $toggleOptionName.\n * @var string $selectOptionName The option name for the select portion.\n * @var array $selectOptions An array of the possible values for $selectOptionName. The array is of the format array(array('value' => <the internal value>, 'label' => <a display label>), ...)\n * @var string $selectValue The current value of $selectOptionName.\n * @var string $title The title shown for the option.\n * @var string $helpLink If defined, the link to the corresponding external help page.\n * @var bool $premium If defined, the option will be tagged as premium only and not allow its value to change for free users.\n *\/\n\n$toggleID = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $toggleOptionName);\n$selectID = 'wfls-option-' . preg_replace('\/[^a-z0-9]\/i', '-', $selectOptionName);\n?>\n<ul class=\"wfls-option wfls-option-toggled-select<?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' wfls-option-premium'; } ?>\" data-toggle-option=\"<?php echo esc_attr($toggleOptionName); ?>\" data-enabled-toggle-value=\"<?php echo esc_attr($enabledToggleValue); ?>\" data-disabled-toggle-value=\"<?php echo esc_attr($disabledToggleValue); ?>\" data-original-toggle-value=\"<?php echo esc_attr($toggleValue == $enabledToggleValue ? $enabledToggleValue : $disabledToggleValue); ?>\" data-select-option=\"<?php echo esc_attr($selectOptionName); ?>\" data-original-select-value=\"<?php echo esc_attr($selectValue); ?>\">\n\t<li id=\"<?php echo esc_attr($toggleID); ?>\" class=\"wfls-option-checkbox<?php echo ($toggleValue == $enabledToggleValue ? ' wfls-checked' : ''); ?>\"  role=\"checkbox\" aria-checked=\"<?php echo ($toggleValue == $enabledToggleValue ? 'true' : 'false'); ?>\" tabindex=\"0\"><i class=\"wfls-ion-ios-checkmark-empty\" aria-hidden=\"true\"><\/i><\/li>\n\t<li class=\"wfls-option-content\">\n\t\t<ul id=\"<?php echo esc_attr($selectID); ?>\">\n\t\t\t<li class=\"wfls-option-title\"><span id=\"<?php echo esc_attr($selectID); ?>-label\"><?php echo esc_html($title); ?><\/span><?php if (!wfConfig::p() && isset($premium) && $premium) { echo ' <a href=\"https:\/\/www.wordfence.com\/gnl1optionUpgrade\/wordfence-signup\/\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-premium-link\">' . esc_html__('Premium Feature', 'wordfence') . '<\/a>'; } ?><?php if (isset($helpLink)) { echo ' <a href=\"' . esc_attr($helpLink) . '\"  target=\"_blank\" rel=\"noopener noreferrer\" class=\"wfls-inline-help\"><i class=\"' . (\\WordfenceLS\\Controller_WordfenceLS::shared()->should_use_core_font_awesome_styles() ? 'wf-fa wf-fa-question-circle-o' : 'wfls-fa wfls-fa-question-circle-o') . '\" aria-hidden=\"true\"><\/i><\/a>'; } ?><\/li>\n\t\t\t<li class=\"wfls-option-select wfls-padding-add-top-xs-small\">\n\t\t\t\t<select<?php echo ($toggleValue == $enabledToggleValue && !(!wfConfig::p() && isset($premium) && $premium) ? '' : ' disabled'); ?> aria-labelledby=\"<?php echo esc_attr($selectID); ?>-label\">\n\t\t\t\t<?php foreach ($selectOptions as $o): ?>\n\t\t\t\t\t<option class=\"wfls-option-select-option\" value=\"<?php echo esc_attr($o['value']); ?>\"<?php if ($o['value'] == $selectValue) { echo ' selected'; } ?>><?php echo esc_html($o['label']); ?><\/option>\n\t\t\t\t<?php endforeach; ?>\n\t\t\t\t<\/select>\n\t\t\t<\/li>\n\t\t<\/ul>\n\t<\/li>\n<\/ul>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/settings\/user-stats.php","ext":"php","size":4198,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * @var ?array $counts The counts to display or null to hide user counts.\n *\/\n?>\n<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t<div class=\"wfls-block-header-content\">\n\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t<h3><?php esc_html_e('User Summary', 'wordfence'); ?><\/h3>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"wfls-block-header-action wfls-block-header-action-text wfls-nowrap wfls-padding-add-right-responsive\">\n\t\t\t<a href=\"users.php\"><?php esc_html_e('Manage Users', 'wordfence'); ?><\/a>\n\t\t<\/div>\n\t<\/div>\n\t<?php if (is_array($counts)) : ?>\n\t<div class=\"wfls-block-content wfls-padding-no-left wfls-padding-no-right\">\n\t\t<table class=\"wfls-table wfls-table-striped wfls-table-header-separators wfls-table-expanded wfls-no-bottom\">\n\t\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th><?php esc_html_e('Role', 'wordfence'); ?><\/th>\n\t\t\t\t<th class=\"wfls-center\"><?php esc_html_e('Total Users', 'wordfence'); ?><\/th>\n\t\t\t\t<th class=\"wfls-center\"><?php esc_html_e('2FA Active', 'wordfence'); ?><\/th>\n\t\t\t\t<th class=\"wfls-center\"><?php esc_html_e('2FA Inactive', 'wordfence'); ?><\/th>\n\t\t\t<\/tr>\n\t\t\t<\/thead>\n\t\t\t<tbody>\n\t\t\t<?php\n\t\t\t$roles = new WP_Roles();\n\t\t\t$roleNames = $roles->get_names();\n\t\t\t$roleNames['super-admin'] = __('Super Administrator', 'wordfence');\n\t\t\t$roleNames[\\WordfenceLS\\Controller_Users::TRUNCATED_ROLE_KEY] = __('Custom Capabilities \/ Multiple Roles', 'wordfence');\n\t\t\tforeach ($counts['avail_roles'] as $roleTag => $count):\n\t\t\t\t$activeCount = (isset($counts['active_avail_roles'][$roleTag]) ? $counts['active_avail_roles'][$roleTag] : 0);\n\t\t\t\t$inactiveCount = $count - $activeCount;\n\t\t\t\tif ($activeCount === 0 && $inactiveCount === 0)\n\t\t\t\t\tcontinue;\n\t\t\t\t$roleName = $roleNames[$roleTag];\n\t\t\t\t$requiredAt = \\WordfenceLS\\Controller_Settings::shared()->get_required_2fa_role_activation_time($roleTag);\n\t\t\t\t$inactive = $inactiveCount > 0 && $requiredAt !== false;\n\t\t\t\t$viewUsersBaseUrl = 'admin.php?' . http_build_query(array('page' => 'WFLS', 'role'=> $roleTag));\n\t\t\t?>\n\t\t\t\t<tr>\n\t\t\t\t\t<td><?php echo \\WordfenceLS\\Text\\Model_HTML::esc_html(translate_user_role($roleName)); ?><\/td>\n\t\t\t\t\t<td class=\"wfls-center\"><?php echo number_format($count); ?><\/td>\n\t\t\t\t\t<td class=\"wfls-center\"><?php echo number_format($activeCount); ?><\/td>\n\t\t\t\t\t<td class=\"wfls-center\">\n\t\t\t\t\t\t<?php if ($inactive): ?><a href=\"<?php echo esc_attr(is_multisite() ? network_admin_url($viewUsersBaseUrl) : admin_url($viewUsersBaseUrl)); ?>\"><?php endif ?>\n\t\t\t\t\t\t<?php echo number_format($inactiveCount); ?>\n\t\t\t\t\t\t<?php if ($inactive): ?> (<?php esc_html_e('View users', 'wordfence') ?>)<\/a><?php endif ?>\n\t\t\t\t\t<\/td>\n\t\t\t\t<\/tr>\n\t\t\t<?php endforeach; ?>\n\t\t\t<\/tbody>\n\t\t\t<tfoot>\n\t\t\t<tr>\n\t\t\t\t<th><?php esc_html_e('Total', 'wordfence'); ?><\/th>\n\t\t\t\t<th class=\"wfls-center\"><?php echo number_format($counts['total_users']); ?><\/th>\n\t\t\t\t<th class=\"wfls-center\"><?php echo number_format($counts['active_total_users']); ?><\/th>\n\t\t\t\t<th class=\"wfls-center\"><?php echo number_format($counts['total_users'] - $counts['active_total_users']); ?><\/th>\n\t\t\t<\/tr>\n\t\t\t<?php if (is_multisite()): ?>\n\t\t\t<tr>\n\t\t\t\t<td colspan=\"4\" class=\"wfls-text-small\"><?php esc_html_e('* User counts currently only reflect the main site on multisite installations.', 'wordfence'); ?><\/td>\n\t\t\t<\/tr>\n\t\t\t<?php endif; ?>\n\t\t\t<\/tfoot>\n\t\t<\/table>\n\t<\/div>\n\t<?php else: ?>\n\t<div class=\"wfls-block-content wfls-padding-add-bottom\">\n\t\t<p><?php $counts === null ? esc_html_e('User counts are hidden by default on sites with large numbers of users in order to improve performance.', 'wordfence') : esc_html_e('User counts are currently disabled as the most recent attempt to count users failed to complete successfully.', 'wordfence') ?><\/p>\n\t\t<a href=\"<?php echo esc_attr(add_query_arg('wfls-show-user-counts', 'true') . '#top#settings') ?>\" class=\"wfls-btn wfls-btn-sm wfls-btn-primary\"<?php if (\\WordfenceLS\\Controller_Users::shared()->should_force_user_counts()): ?> onclick=\"window.location.reload()\"<?php endif ?>><?php $counts === null ? esc_html_e('Show User Counts', 'wordfence') : esc_html_e('Try Again', 'wordfence') ?><\/a>\n\t<\/div>\n\t<?php endif ?>\n<\/div>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/settings\/options.php","ext":"php","size":13763,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n?>\n<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100\">\n\t<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t\t<div class=\"wfls-block-header-content\">\n\t\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t\t<h3><?php esc_html_e('2FA', 'wordfence'); ?><\/h3>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"wfls-block-content\">\n\t\t\t<ul class=\"wfls-block-list\">\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\t$roles = new \\WP_Roles();\n\t\t\t\t\t$options = array();\n\t\t\t\t\tif (is_multisite()) {\n\t\t\t\t\t\t$options[] = array(\n\t\t\t\t\t\t\t'role' => 'super-admin',\n\t\t\t\t\t\t\t'name' => 'enabled-roles.super-admin',\n\t\t\t\t\t\t\t'title' => __('Super Administrator', 'wordfence'),\n\t\t\t\t\t\t\t'editable' => true,\n\t\t\t\t\t\t\t'allow_disabling' => false,\n\t\t\t\t\t\t\t'state' => \\WordfenceLS\\Controller_Settings::shared()->get_required_2fa_role_activation_time('super-admin') !== false ? 'required' : 'optional'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tforeach ($roles->role_objects as $name => $r) {\n\t\t\t\t\t\t\/** @var \\WP_Role $r *\/\n\t\t\t\t\t\t$options[] = array(\n\t\t\t\t\t\t\t'role' => $name,\n\t\t\t\t\t\t\t'name' => 'enabled-roles.' . $name,\n\t\t\t\t\t\t\t'title' => $roles->role_names[$name],\n\t\t\t\t\t\t\t'editable' => true,\n\t\t\t\t\t\t\t'allow_disabling' => (!is_multisite() && $name == 'administrator' ? false : true),\n\t\t\t\t\t\t\t'state' => \\WordfenceLS\\Controller_Settings::shared()->get_required_2fa_role_activation_time($name) !== false ? 'required' : ($r->has_cap(\\WordfenceLS\\Controller_Permissions::CAP_ACTIVATE_2FA_SELF) ? 'optional' : 'disabled')\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-roles', array('options' => $options, 'hasWoocommerce' => $hasWoocommerce))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_REMEMBER_DEVICE_ENABLED,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_REMEMBER_DEVICE_ENABLED) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Allow remembering device for 30 days', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('If enabled, users with 2FA enabled may choose to be prompted for a code only once every 30 days per device.', 'wordfence'),\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-switch', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_XMLRPC_ENABLED,\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_XMLRPC_ENABLED) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Require 2FA for XML-RPC call authentication', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('If enabled, XML-RPC calls that require authentication will also require a valid 2FA code to be appended to the password. You must choose the \"Skipped\" option if you use the WordPress app, the Jetpack plugin, or other services that require XML-RPC.', 'wordfence'),\n\t\t\t\t\t\t'states' => array(\n\t\t\t\t\t\t\tarray('value' => '0', 'label' => __('Skipped', 'wordfence')),\n\t\t\t\t\t\t\tarray('value' => '1', 'label' => __('Required', 'wordfence')),\n\t\t\t\t\t\t),\n\t\t\t\t\t\t'noSpacer' => true,\n\t\t\t\t\t\t'alignment' => 'wfls-right',\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_ALLOW_XML_RPC,\n\t\t\t\t\t\t'enabledValue' => '0',\n\t\t\t\t\t\t'disabledValue' => '1',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_ALLOW_XML_RPC) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Disable XML-RPC authentication', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('If disabled, XML-RPC requests that attempt authentication will be rejected, whether the user has 2FA enabled or not.', 'wordfence'),\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100\">\n\t<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t\t<div class=\"wfls-block-header-content\">\n\t\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t\t<h3><?php esc_html_e('WooCommerce & Custom Integrations', 'wordfence'); ?><\/h3>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"wfls-block-content\">\n\t\t\t<ul class=\"wfls-block-list\">\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_ENABLE_WOOCOMMERCE_INTEGRATION,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_ENABLE_WOOCOMMERCE_INTEGRATION) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('WooCommerce integration', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('When enabled, reCAPTCHA and 2FA prompt support will be added to WooCommerce login and registration forms in addition to the default WordPress forms. Testing WooCommerce forms after enabling this feature is recommended to ensure plugin compatibility.', 'wordfence'),\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_ENABLE_WOOCOMMERCE_ACCOUNT_INTEGRATION,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_ENABLE_WOOCOMMERCE_ACCOUNT_INTEGRATION) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Show Wordfence 2FA menu on WooCommerce Account page', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('When enabled, a Wordfence 2FA tab will be added to the WooCommerce account menu which will provide access for users to manage 2FA settings outside of the WordPress admin area. Testing the WooCommerce account interface after enabling this feature is recommended to ensure theme compatibility.', 'wordfence'),\n\t\t\t\t\t\t'helpLink' => \\WordfenceLS\\Controller_Support::supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_OPTION_WOOCOMMERCE_ACCOUNT_INTEGRATION),\n\t\t\t\t\t\t'disabled' => !\\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_ENABLE_WOOCOMMERCE_INTEGRATION),\n\t\t\t\t\t\t'child' => true\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_ENABLE_SHORTCODE,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_ENABLE_SHORTCODE) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('2FA management shortcode', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('When enabled, the \"wordfence_2fa_management\" shortcode may be used to provide access for users to manage 2FA settings on custom pages.', 'wordfence'),\n\t\t\t\t\t\t'helpLink' => \\WordfenceLS\\Controller_Support::supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_OPTION_SHORTCODE)\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_STACK_UI_COLUMNS,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->should_stack_ui_columns() ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Use single-column layout for WooCommerce\/shortcode 2FA management interface', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('When enabled, the 2FA management interface embedded through the WooCommerce integration or via a shortcode will use a vertical stacked layout as opposed to horizontal columns. Adjust this setting as appropriate to match your theme. This may be overridden using the \"stacked\" attribute for individual shortcodes.', 'wordfence'),\n\t\t\t\t\t\t'helpLink' => \\WordfenceLS\\Controller_Support::supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_OPTION_STACK_UI_COLUMNS)\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100\">\n\t<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t\t<div class=\"wfls-block-header-content\">\n\t\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t\t<h3><?php esc_html_e('reCAPTCHA', 'wordfence'); ?><\/h3>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"wfls-block-content\">\n\t\t\t<ul class=\"wfls-block-list\">\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-captcha', array(\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-captcha-threshold', array(\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_CAPTCHA_TEST_MODE,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_CAPTCHA_TEST_MODE) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Run reCAPTCHA in test mode', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('While in test mode, reCAPTCHA will score login and registration requests but not actually block them. The scores will be recorded and can be used to select a human\/bot threshold value.', 'wordfence'),\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n<div class=\"wfls-flex-row wfls-flex-row-equal-heights wfls-flex-item-xs-100\">\n\t<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t\t<div class=\"wfls-block-header-content\">\n\t\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t\t<h3><?php esc_html_e('General', 'wordfence'); ?><\/h3>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t<\/div>\n\t\t<div class=\"wfls-block-content\">\n\t\t\t<ul class=\"wfls-block-list\">\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-textarea', array(\n\t\t\t\t\t\t'textOptionName' => \\WordfenceLS\\Controller_Settings::OPTION_2FA_WHITELISTED,\n\t\t\t\t\t\t'textValue' => implode(\"\\n\", \\WordfenceLS\\Controller_Settings::shared()->whitelisted_ips()),\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Allowlisted IP addresses that bypass 2FA and reCAPTCHA', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'alignTitle' => 'top',\n\t\t\t\t\t\t'subtitle' => __('Allowlisted IPs must be placed on separate lines. You can specify ranges using the following formats: 127.0.0.1\/24, 127.0.0.[1-100], or 127.0.0.1-127.0.1.100.', 'wordfence'),\n\t\t\t\t\t\t'subtitlePosition' => 'value',\n\t\t\t\t\t\t'noSpacer' => true,\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<?php if (!WORDFENCE_LS_FROM_CORE): ?>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-ip-source', array())->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<?php endif; ?>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-ntp', array(\n\t\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_ENABLE_LOGIN_HISTORY_COLUMNS,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->are_login_history_columns_enabled() ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Show last login column on WP Users page', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('When enabled, the last login timestamp will be displayed for each user on the WP Users page. When used in conjunction with reCAPTCHA, the most recent score will also be displayed for each user.', 'wordfence'),\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t\t<li>\n\t\t\t\t\t<?php\n\t\t\t\t\techo \\WordfenceLS\\Model_View::create('options\/option-toggled', array(\n\t\t\t\t\t\t'optionName' => \\WordfenceLS\\Controller_Settings::OPTION_DELETE_ON_DEACTIVATION,\n\t\t\t\t\t\t'enabledValue' => '1',\n\t\t\t\t\t\t'disabledValue' => '0',\n\t\t\t\t\t\t'value' => \\WordfenceLS\\Controller_Settings::shared()->get_bool(\\WordfenceLS\\Controller_Settings::OPTION_DELETE_ON_DEACTIVATION) ? '1': '0',\n\t\t\t\t\t\t'title' => new \\WordfenceLS\\Text\\Model_HTML('<strong>' . esc_html__('Delete Login Security tables and data on deactivation', 'wordfence') . '<\/strong>'),\n\t\t\t\t\t\t'subtitle' => __('If enabled, all settings and 2FA records will be deleted on deactivation. If later reactivated, all users that previously had 2FA active will need to set it up again.', 'wordfence'),\n\t\t\t\t\t))->render();\n\t\t\t\t\t?>\n\t\t\t\t<\/li>\n\t\t\t<\/ul>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n<script type=\"text\/javascript\">\n\t(function($) {\n\t\t$('#wfls-option-enable-woocommerce-integration').on('change', function() {\n\t\t\t$('#wfls-option-enable-woocommerce-account-integration').toggleClass('wfls-disabled', !$(this).find('.wfls-option-checkbox').hasClass('wfls-checked'));\n\t\t});\n\t})(jQuery);\n<\/script>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/manage\/activate.php","ext":"php","size":7862,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * @var \\WordfenceLS\\Model_2faInitializationData $initializationData The initialization data for setting up 2FA for a specific user. Required.\n *\/\n$user = $initializationData->get_user();\n$recovery = $initializationData->get_recovery_codes();\n?>\n<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t<div class=\"wfls-block-header-content\">\n\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t<strong><?php esc_html_e('2. Enter Code from Authenticator App', 'wordfence'); ?><\/strong>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"wfls-block-content wfls-padding-add-bottom\">\n\t\t<p><?php esc_html_e('Download Recovery Codes', 'wordfence'); ?> <em class=\"wfls-text-small\"><?php esc_html_e('Optional', 'wordfence'); ?><\/em><\/p>\n\t\t<p><?php echo esc_html(sprintf(__('Use one of these %d codes to log in if you lose access to your authenticator device. Codes are %d characters long plus optional spaces. Each one may be used only once.', 'wordfence'), count($recovery), \\WordfenceLS\\Model_Crypto::strlen($recovery[0]) * 2)); ?><\/p>\n\t\t<ul class=\"wfls-recovery-codes\">\n\t\t\t<?php\n\t\t\t$recoveryCodeFileContents = sprintf(__('Two-Factor Authentication Recovery Codes - %s (%s)', 'wordfence'), home_url(), $user->user_login) . \"\\r\\n\";\n\t\t\t$recoveryCodeFileContents .= \"\\r\\n\" . sprintf(__('Each line of %d letters and numbers is a single recovery code, with optional spaces for readability. To use a recovery code, after entering your username and password, enter the code like \"1234 5678 90AB CDEF\" at the 2FA prompt. If your site has a custom login prompt and does not show a 2FA prompt, you can use the single-step method by entering your password and the code together in the Password field, like \"mypassword1234 5678 90AB CDEF\". Your recovery codes are:', 'wordfence'), \\WordfenceLS\\Model_Crypto::strlen($recovery[0]) * 2) . \"\\r\\n\\r\\n\";\n\t\t\tforeach ($recovery as $c) {\n\t\t\t\t$hex = bin2hex($c);\n\t\t\t\t$blocks = str_split($hex, 4);\n\t\t\t\techo '<li>' . implode(' ', $blocks) . '<\/li>';\n\t\t\t\t$recoveryCodeFileContents .= implode(' ', $blocks) . \"\\r\\n\";\n\t\t\t}\n\t\t\t?>\n\t\t<\/ul>\n\t\t<p class=\"wfls-center\"><a href=\"#\" class=\"wfls-btn wfls-btn-default\" id=\"wfls-recovery-download\" target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"dashicons dashicons-download\"><\/i> <?php esc_html_e('Download', 'wordfence'); ?><\/a><\/p>\n\t\t\n\t\t<hr class=\"wfls-half\">\n\t\t\n\t\t<p><?php esc_html_e('Enter the code from your authenticator app below to verify and activate two-factor authentication for this account.', 'wordfence'); ?><\/p>\n\t\t<p><input type=\"text\" id=\"wfls-activate-field\" value=\"\" size=\"6\" maxlength=\"6\" placeholder=\"123456\" autocomplete=\"off\"><\/p>\n\t<\/div>\n\t<div class=\"wfls-block-footer\">\n\t\t<div class=\"wfls-block-footer-content\">\n\t\t\t<div class=\"wfls-block-title\" id=\"wfls-activation-help-link-container\">\n\t\t\t\t<a href=\"<?php echo \\WordfenceLS\\Controller_Support::esc_supportURL(\\WordfenceLS\\Controller_Support::ITEM_MODULE_LOGIN_SECURITY_2FA); ?>\" target=\"_blank\" rel=\"noopener noreferrer\"><?php esc_html_e('For help on setting up an app, visit our help article.', 'wordfence'); ?><\/a>\n\t\t\t<\/div>\n\t\t\t<div class=\"wfls-block-footer-action\"><a href=\"#\" id=\"wfls-activate\" class=\"wfls-btn wfls-btn-default wfls-disabled\"><?php esc_html_e('Activate', 'wordfence'); ?><\/a><\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n<script type=\"application\/javascript\">\n\t(function($) {\n\t\t$(function() {\n\t\t\t$('#wfls-activate-field').on('keyup', function(e) {\n\t\t\t\t$('#wfls-activate').toggleClass('wfls-disabled', $('#wfls-activate-field').val().length != 6);\n\t\t\t\t\n\t\t\t\tif (e.keyCode == 13) {\n\t\t\t\t\t$('#wfls-activate').trigger('click');\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t$('#wfls-recovery-download').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\tsaveAs(new Blob([\"<?php echo str_replace(\"\\n\", \"\\\\n\", str_replace(\"\\r\", \"\\\\r\", addslashes($recoveryCodeFileContents))); ?>\"], {type: \"text\/plain;charset=\" + document.characterSet}), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(preg_replace('~^https?:\/\/~i', '', home_url())) . '_' . \\WordfenceLS\\Text\\Model_JavaScript::esc_js($user->user_login) . '_recoverycodes.txt'; ?>');\n\t\t\t\tWFLS.savedRecoveryCodes = true;\n\t\t\t});\n\t\t\t\n\t\t\t$('#wfls-activate').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\t\t\t\n\t\t\t\tif (WFLS.userIsActivating) { \/\/Likely a double-click\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tWFLS.userIsActivating = true;\n\t\t\t\t\n\t\t\t\tvar payload = {\n\t\t\t\t\tsecret: '<?php echo bin2hex($initializationData->get_raw_secret()); ?>',\n\t\t\t\t\trecovery: ['<?php echo implode('\\', \\'', array_map(function($c) { return bin2hex($c); }, $recovery)); ?>'],\n\t\t\t\t\tcode: $('#wfls-activate-field').val(),\n\t\t\t\t\tuser: <?php echo $user->ID; ?>,\n\t\t\t\t};\n\n\t\t\t\tWFLS.ajax(\n\t\t\t\t\t'wordfence_ls_activate', \n\t\t\t\t\tpayload,\n\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\t\tWFLS.userIsActivating = false;\n\t\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Activating 2FA', 'wordfence')); ?>', response.error, {includeDefaultButtons: true});\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t$('#wfls-activation-controls').crossfade($('#wfls-deactivation-controls'));\n\t\t\t\t\t\t\t$('#wfls-recovery-code-count').text(response.text);\n\t\t\t\t\t\t\t$('#wfls-activate-field').val('');\n\n\t\t\t\t\t\t\t$('.wfls-notice[data-notice-type=\"wfls-will-be-required\"]').find('.wfls-dismiss-link').trigger('click');\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (!WFLS.savedRecoveryCodes) {\n\t\t\t\t\t\t\t\tvar prompt = $('#wfls-tmpl-recovery-skipped-prompt').tmpl({});\n\t\t\t\t\t\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\t\t\t\t\t\tWFLS.panelHTML((WFLS.screenSize(500) ? '300px' : '400px'), promptHTML, { fixed: true, overlayClose: false, closeButton: false, className: 'wfls-modal', onComplete: function() {\n\t\t\t\t\t\t\t\t\t$('#wfls-recovery-skipped-download').on('click', function(e) {\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\tsaveAs(new Blob([\"<?php echo str_replace(\"\\n\", \"\\\\n\", str_replace(\"\\r\", \"\\\\r\", addslashes($recoveryCodeFileContents))); ?>\"], {type: \"text\/plain;charset=\" + document.characterSet}), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(preg_replace('~^https?:\/\/~i', '', home_url())) . '_' . \\WordfenceLS\\Text\\Model_JavaScript::esc_js($user->user_login) . '_recoverycodes.txt'; ?>');\n\t\t\t\t\t\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t$('#wfls-recovery-skipped-skip').on('click', function(e) {\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tWFLS.savedRecoveryCodes = false;\n\t\t\t\t\t\t\tWFLS.userIsActivating = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tfunction(error) {\n\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Activating 2FA', 'wordfence')); ?>', '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('An error was encountered while trying to activate two-factor authentication. Please try again.', 'wordfence')); ?>', {includeDefaultButtons: true});\n\t\t\t\t\t\tWFLS.userIsActivating = false;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t})(jQuery);\n<\/script>\n<script type=\"text\/x-jquery-template\" id=\"wfls-tmpl-recovery-skipped-prompt\">\n\t<?php\n\techo \\WordfenceLS\\Model_View::create('common\/modal-prompt', array(\n\t\t'title' => __('Download Recovery Codes', 'wordfence'),\n\t\t'message' => __('Reminder: If you lose access to your authenticator device, you can use recovery codes to log in. If you have not saved a copy of your recovery codes, we recommend downloading them now.', 'wordfence'),\n\t\t'primaryButton' => array('id' => 'wfls-recovery-skipped-download', 'label' => __('Download', 'wordfence'), 'link' => '#'),\n\t\t'secondaryButtons' => array(array('id' => 'wfls-recovery-skipped-skip', 'label' => __('Skip', 'wordfence'), 'link' => '#')),\n\t))->render();\n\t?>\n<\/script>"},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/manage\/deactivate.php","ext":"php","size":3637,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * @var \\WP_User $user The user being edited. Required.\n *\/\n\n$ownAccount = false;\n$ownUser = wp_get_current_user();\nif ($ownUser->ID == $user->ID) {\n\t$ownAccount = true;\n}\n?>\n<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t<div class=\"wfls-block-header-content\">\n\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t<strong><?php esc_html_e('Wordfence 2FA Active', 'wordfence'); ?><\/strong>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"wfls-block-content wfls-padding-add-bottom\">\n\t\t<p><?php if ($ownAccount) { esc_html_e('Wordfence two-factor authentication is currently active on your account. You may deactivate it by clicking the button below.', 'wordfence'); } else { echo wp_kses(sprintf(__('Wordfence two-factor authentication is currently active on the account <strong>%s<\/strong>. You may deactivate it by clicking the button below.', 'wordfence'), esc_html($user->user_login)), array('strong'=>array())); } ?><\/p>\n\t\t<p class=\"wfls-center wfls-add-top\"><a href=\"#\" class=\"wfls-btn wfls-btn-default\" id=\"wfls-deactivate\" target=\"_blank\" rel=\"noopener noreferrer\"><?php esc_html_e('Deactivate', 'wordfence'); ?><\/a><\/p>\n\t<\/div>\n<\/div>\n<script type=\"text\/x-jquery-template\" id=\"wfls-tmpl-deactivate-prompt\">\n\t<?php\n\techo \\WordfenceLS\\Model_View::create('common\/modal-prompt', array(\n\t\t'title' => __('Deactivate 2FA', 'wordfence'),\n\t\t'message' => __('Are you sure you want to deactivate two-factor authentication?', 'wordfence'),\n\t\t'primaryButton' => array('id' => 'wfls-deactivate-prompt-cancel', 'label' => __('Cancel', 'wordfence'), 'link' => '#'),\n\t\t'secondaryButtons' => array(array('id' => 'wfls-deactivate-prompt-confirm', 'label' => __('Deactivate', 'wordfence'), 'link' => '#')),\n\t))->render();\n\t?>\n<\/script>\n<script type=\"application\/javascript\">\n\t(function($) {\n\t\t$(function() {\n\t\t\t$('#wfls-deactivate').on('click', function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\n\t\t\t\tvar prompt = $('#wfls-tmpl-deactivate-prompt').tmpl({});\n\t\t\t\tvar promptHTML = $(\"<div \/>\").append(prompt).html();\n\t\t\t\tWFLS.panelHTML((WFLS.screenSize(500) ? '300px' : '400px'), promptHTML, {overlayClose: false, closeButton: false, className: 'wfls-modal', onComplete: function() {\n\t\t\t\t\t$('#wfls-deactivate-prompt-cancel').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tWFLS.panelClose();\n\t\t\t\t\t});\n\n\t\t\t\t\t$('#wfls-deactivate-prompt-confirm').on('click', function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\n\t\t\t\t\t\tvar payload = {\n\t\t\t\t\t\t\tuser: <?php echo (int) $user->ID; ?>,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tWFLS.ajax(\n\t\t\t\t\t\t\t'wordfence_ls_deactivate',\n\t\t\t\t\t\t\tpayload,\n\t\t\t\t\t\t\tfunction(response) {\n\t\t\t\t\t\t\t\tif (response.error) {\n\t\t\t\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Deactivating 2FA', 'wordfence')); ?>', response.error);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t$('#wfls-deactivation-controls').crossfade($('#wfls-activation-controls'));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tWFLS.panelClose(); \/\/The prompt\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tfunction(error) {\n\t\t\t\t\t\t\t\tWFLS.panelModal((WFLS.screenSize(500) ? '300px' : '400px'), '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('Error Deactivating 2FA', 'wordfence')); ?>', '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js(__('An error was encountered while trying to deactivate two-factor authentication. Please try again.', 'wordfence')); ?>');\n\t\t\t\t\t\t\t\tWFLS.panelClose(); \/\/The prompt\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}});\n\t\t\t});\n\t\t});\n\t})(jQuery);\n<\/script> "},{"base":"plugins","rel":"wordfence\/modules\/login-security\/views\/manage\/code.php","ext":"php","size":1672,"mtime":1757312769,"type":"text","content":"<?php\nif (!defined('WORDFENCE_LS_VERSION')) { exit; }\n\/**\n * @var \\WordfenceLS\\Model_2faInitializationData $initializationData The initialization data for setting up 2FA for a specific user. Required.\n *\/\n?>\n<div class=\"wfls-block wfls-always-active wfls-flex-item-full-width\">\n\t<div class=\"wfls-block-header wfls-block-header-border-bottom\">\n\t\t<div class=\"wfls-block-header-content\">\n\t\t\t<div class=\"wfls-block-title\">\n\t\t\t\t<strong><?php esc_html_e('1. Scan Code or Enter Key', 'wordfence'); ?><\/strong>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n\t<div class=\"wfls-block-content wfls-padding-add-bottom\">\n\t\t<p><?php esc_html_e('Scan the code below with your authenticator app to add this account. Some authenticator apps also allow you to type in the text version instead.', 'wordfence') ?><\/p>\n\t\t<div id=\"wfls-qr-code\"><\/div>\n\t\t<p class=\"wfls-center wfls-no-bottom\"><input id=\"wfls-qr-code-text\" class=\"wfls-center\" type=\"text\" value=\"<?php echo esc_attr($initializationData->get_base32_secret()); ?>\" onclick=\"this.select();\" size=\"32\" readonly><\/p>\n\t<\/div>\n<\/div>\n<script type=\"application\/javascript\">\n\t(function($) {\n\t\t$(function() {\n\t\t\tvar narrowPreviously = null;\n\t\t\tfunction renderQrCode() {\n\t\t\t\tvar narrow = WFLS.screenSize(500);\n\t\t\t\tif (narrow !== narrowPreviously) {\n\t\t\t\t\t$('#wfls-qr-code').empty().qrcode({text: '<?php echo \\WordfenceLS\\Text\\Model_JavaScript::esc_js($initializationData->get_otp_url()); ?>', width: (narrow ? 175 : 256), height: (narrow ? 175 : 256)});\n\t\t\t\t\t$('#wfls-qr-code-text').css('font-family', narrow ? '' : 'monospace');\n\t\t\t\t}\n\t\t\t\tnarrowPreviously = narrow;\n\t\t\t}\n\t\t\t$(window).on('resize', renderQrCode);\n\t\t\trenderQrCode();\n\t\t});\n\t})(jQuery);\n<\/script> "}]