<?php /**  * WTP PATCH #2 (surgical, idempotent)  * - usuwa BOM i top-level echo/print przed bootstrapem motywu  * - usuwa zamykający "?>" na końcu  * - jeśli brak, dodaje lekki sanity hook do wp_head  * - działa idempotentnie: wielokrotne uruchomienie nic nie psuje  */ $__FILE = __FILE__; $fn = realpath($__FILE); if (!$fn || !is_readable($fn)) { throw new RuntimeException("WTP: cannot read functions.php"); } $src = file_get_contents($fn);  // 1) remove UTF-8 BOM na początku $src = preg_replace('/^\xEF\xBB\xBF/u', '', $src);  // 2) wytnij „prefix” do pierwszego add_action()/function/class — tam często leżą echa $pos = null; foreach (['add_action(', 'function ', 'class '] as $needle) {   $p = stripos($src, $needle);   if ($p !== false) { $pos = is_null($pos) ? $p : min($pos, $p); } } $pos = is_null($pos) ? 0 : $pos; $pref = substr($src, 0, $pos); $rest = substr($src, $pos);  // 3) usuń top-level echo/print w prefixie $pref = preg_replace('/(^|\n)\s*(echo|print)\s+[^;]*;(\s*\n)?/i', "\n", $pref);  // 4) usuń zamykające znaczniki PHP na końcu prefiksu i całego pliku $pref = preg_replace('/\?>\s*$/s', '', $pref); $src  = rtrim($pref) . "\n\n" . $rest; $src  = preg_replace('/\?>\s*$/s', '', $src) . "\n";  // 5) jeśli brak hooka do wp_head — dopisz lekki marker (0 = najwcześniej) if (stripos($src, "add_action('wp_head'") === false && stripos($src, 'add_action("wp_head"') === false) {   $src .= "\n// WTP safety: ensure wp_head marker\nadd_action('wp_head', function(){ echo '<!-- WTP head hook alive -->'; }, 0);\n"; }  // 6) sanity log zamiast echa if (strpos($src, 'WTP: functions.php loaded') === false) {   $src = "<?php if (defined('WP_DEBUG') && WP_DEBUG) { error_log('WTP: functions.php loaded '.microtime(true)); } ?>\n".$src;   $src = preg_replace('/\?>\s*\n<\?php\s*/', '', $src); // scalenie jeśli powstały dwa otwarcia/zamykania   $src = preg_replace('/^\s*<\?php\s*/', '<?php ', $src, 1); }  // 7) gotowe — zwróć nową treść echo $src;