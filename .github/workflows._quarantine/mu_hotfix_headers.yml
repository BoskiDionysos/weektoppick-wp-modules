name: mu_hotfix_headers

on:
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: mu-hotfix-headers
  cancel-in-progress: true

jobs:
  fix:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Hotfix on server (init cookie hook + strip TRAIL + mute early echoes)
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.DEPLOY_HOST }}
          port:     ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASS }}
          command_timeout: 15m
          script: |
            set -eu

            ROOT="${HOME}/domains/weektoppick.com/public_html"
            if [ ! -f "${ROOT}/wp-config.php" ]; then
              echo "::error::Brak wp-config.php w ${ROOT}"
              exit 1
            fi
            cd "${ROOT}"
            echo "[INFO] WP_ROOT=${ROOT}"

            THEME_DIR="wp-content/themes/wtp-core-theme"
            MU_DIR="wp-content/mu-plugins"
            THEME_FN="${THEME_DIR}/functions.php"

            echo "== 1) Ensure INIT hook in functions.php (cookies before output) =="
            if [ -f "${THEME_FN}" ]; then
              if ! grep -q "wtp_boot_lang_cookie" "${THEME_FN}"; then
                TMPFN="$(mktemp)"
                {
                  echo "<?php"
                  echo "// WTP safeguard: move language cookie to early 'init' (prio 0) to avoid 'headers already sent'"
                  echo "add_action('init', function(){"
                  echo "    if (function_exists('wtp_detect_lang')) {"
                  echo "        if (!headers_sent()) { wtp_detect_lang(); }"
                  echo "    }"
                  echo "}, 0);"
                  echo "?>"
                } > "${TMPFN}"
                # sklej nasz blok + istniejący plik (bez niszczenia)
                cat "${TMPFN}" "${THEME_FN}" > "${THEME_FN}.wtp.tmp" && mv "${THEME_FN}.wtp.tmp" "${THEME_FN}"
                rm -f "${TMPFN}"
                echo "Injected init hook into ${THEME_FN}"
              else
                echo "Init hook already present in ${THEME_FN}"
              fi
            else
              echo "::warning::Theme functions.php not found: ${THEME_FN}"
            fi

            echo "== 2) Build file list (PHP files in mu-plugins and theme) =="
            LIST="/tmp/wtp_php_files.txt"
            : > "${LIST}"
            if [ -d "${MU_DIR}" ]; then
              find "${MU_DIR}" -type f -name '*.php' >> "${LIST}" 2>/dev/null || true
            fi
            if [ -d "${THEME_DIR}" ]; then
              find "${THEME_DIR}" -type f -name '*.php' >> "${LIST}" 2>/dev/null || true
            fi
            sort -u "${LIST}" -o "${LIST}" || true
            echo "Files to scan: $(wc -l < "${LIST}")"

            echo "== 3) Strip trailing '?>' + whitespace at EOF (TRAIL fix) =="
            while IFS= read -r f; do
              [ -f "$f" ] || continue
              php -r '
                $f=$argv[1];
                $s=@file_get_contents($f);
                if($s===false){exit(0);}
                $orig=$s;
                // usuń białe znaki na końcu
                $s=rtrim($s);
                // usuń końcowe "?>" + białe znaki (tylko na samym końcu)
                if(preg_match("/\\?>\\s*\\z/s",$s)){
                  $s=preg_replace("/\\?>\\s*\\z/s","",$s);
                }
                if($s!==$orig){
                  @copy($f,$f.".wtp.bak");
                  file_put_contents($f,$s);
                  echo "TRAIL fixed: $f\n";
                }
              ' "$f"
            done < "${LIST}"

            echo "== 4) Mute early echoes in TOP 40 lines (echo/print/var_dump/printf) =="
            while IFS= read -r f; do
              [ -f "$f" ] || continue
              php -r '
                $f=$argv[1];
                $src=@file($f, FILE_IGNORE_NEW_LINES);
                if($src===false){exit(0);}
                $changed=false;
                $max=min(40,count($src));
                for($i=0;$i<$max;$i++){
                  if(preg_match("/^\\s*(echo|print|var_dump|printf)\\b/",$src[$i])){
                    if(strpos($src[$i],"/*WTP-MUTE*/")===false){
                      $src[$i]="/*WTP-MUTE*/ // ".$src[$i];
                      $changed=true;
                    }
                  }
                }
                if($changed){
                  @copy($f,$f.".wtp.bak2");
                  file_put_contents($f,implode("\n",$src));
                  echo "ECHO_TOP muted: $f\n";
                }
              ' "$f"
            done < "${LIST}"

            echo "== 5) Quick sanity (functions.php head) =="
            head -n 20 "${THEME_FN}" | nl -ba || true

            echo "== DONE =="
