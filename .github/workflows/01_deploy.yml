name: 01_deploy (single-run, password auth, strict host key, rsync, sanity)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - 'mu-plugins/**'
      - 'plugins/**'
      - 'themes/**'
      - 'wp-content/**'
      - '.wtp/**'
      - '.github/workflows/01_deploy.yml'

permissions:
  contents: read

concurrency:
  group: deploy
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup tools
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y rsync sshpass curl
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          ssh-keyscan -p "$PORT" "$HOST" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts

      - name: Sanity (SSH, read-only)
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" \
            -o StrictHostKeyChecking=yes -o UserKnownHostsFile=~/.ssh/known_hosts \
            "$USER@$HOST" "bash -lc '
              whoami; hostname; pwd;
              cd \"$TARGET\" || { echo \"ERR: cannot cd TARGET\"; exit 2; }
              test -f wp-config.php && echo OK:wp-config || { echo ERR:no-wp-config; exit 3; }
              ls -la | head -n 20
            '"

      - name: Prepare remote dirs + backup themes (safe timestamp)
        run: |
          set -euo pipefail
          # lokalny katalog logÃ³w
          mkdir -p "_ci_logs/${{ github.run_id }}/deploy"

          # SAFE timestamp (no colons) for filenames
          SAFE_TS="$(date -u +'%Y%m%dT%H%M%SZ')"
          echo "SAFE_TS=${SAFE_TS}" > "_ci_logs/${{ github.run_id }}/deploy/safe_ts.env"

          # katalogi docelowe na serwerze
          sshpass -p "$PASS" ssh -p "$PORT" \
            -o StrictHostKeyChecking=yes -o UserKnownHostsFile=~/.ssh/known_hosts \
            "$USER@$HOST" "bash -lc '
              mkdir -p \"$TARGET/wp-content/mu-plugins\" \"$TARGET/wp-content/plugins\" \"$TARGET/wp-content/themes\" \"$TARGET/.wtp/backups\"
            '"

          # backup themes z SAFE_TS
          sshpass -p "$PASS" ssh -p "$PORT" \
            -o StrictHostKeyChecking=yes -o UserKnownHostsFile=~/.ssh/known_hosts \
            "$USER@$HOST" "bash -lc '
              TS=\"${SAFE_TS}\"
              tar -czf \"$TARGET/.wtp/backups/themes-\$TS-${{ github.run_id }}.tar.gz\" -C \"$TARGET/wp-content\" themes || true
            '"

      - name: Build rsync exclude (protected-plugins.txt)
        run: |
          set -euo pipefail
          EXCL="_ci_logs/${{ github.run_id }}/deploy/rsync-exclude.txt"
          : > "$EXCL"
          if [ -f ".wtp/protected-plugins.txt" ]; then
            sed -e 's/\r$//' ".wtp/protected-plugins.txt" \
              | sed 's/#.*$//' | awk 'NF{print "wp-content/plugins/" $0 "/***"}' >> "$EXCL"
          fi
          echo "---- EXCLUDES ----"; cat "$EXCL" || true

      - name: RSYNC mu-plugins
        run: |
          set -euo pipefail
          if [ -d "mu-plugins" ]; then
            sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
              -e "ssh -p ${PORT} -o StrictHostKeyChecking=yes -o UserKnownHostsFile=~/.ssh/known_hosts" \
              "mu-plugins/" "${USER}@${HOST}:${TARGET}/wp-content/mu-plugins/" \
              | tee "_ci_logs/${{ github.run_id }}/deploy/rsync_mu-plugins.txt"
          else
            echo "Skip mu-plugins" | tee "_ci_logs/${{ github.run_id }}/deploy/rsync_mu-plugins.txt"
          fi

      - name: RSYNC plugins (with protect)
        run: |
          set -euo pipefail
          if [ -d "plugins" ] || [ -d "wp-content/plugins" ]; then
            SRC="plugins"; [ -d "wp-content/plugins" ] && SRC="wp-content/plugins"
            sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
              --exclude-from="_ci_logs/${{ github.run_id }}/deploy/rsync-exclude.txt" \
              -e "ssh -p ${PORT} -o StrictHostKeyChecking=yes -o UserKnownHostsFile=~/.ssh/known_hosts" \
              "${SRC}/" "${USER}@${HOST}:${TARGET}/wp-content/plugins/" \
              | tee "_ci_logs/${{ github.run_id }}/deploy/rsync_plugins.txt"
          else
            echo "Skip plugins" | tee "_ci_logs/${{ github.run_id }}/deploy/rsync_plugins.txt"
          fi

      - name: RSYNC themes
        run: |
          set -euo pipefail
          SRC=""
          [ -d "themes" ] && SRC="themes"
          [ -d "wp-content/themes" ] && SRC="wp-content/themes"
          if [ -n "$SRC" ]; then
            sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
              -e "ssh -p ${PORT} -o StrictHostKeyChecking=yes -o UserKnownHostsFile=~/.ssh/known_hosts" \
              "${SRC}/" "${USER}@${HOST}:${TARGET}/wp-content/themes/" \
              | tee "_ci_logs/${{ github.run_id }}/deploy/rsync_themes.txt"
          else
            echo "Skip themes" | tee "_ci_logs/${{ github.run_id }}/deploy/rsync_themes.txt"
          fi

      - name: Remote listing AFTER
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" \
            -o StrictHostKeyChecking=yes -o UserKnownHostsFile=~/.ssh/known_hosts \
            "$USER@$HOST" "ls -1 '${TARGET}/wp-content/plugins' || true" \
            | tee "_ci_logs/${{ github.run_id }}/deploy/remote_plugins_after.txt"

      - name: Upload artifact (deploy logs)
        uses: actions/upload-artifact@v4
        with:
          name: deploy-logs-${{ github.run_id }}
          path: _ci_logs/${{ github.run_id }}/deploy/**
          retention-days: 14
