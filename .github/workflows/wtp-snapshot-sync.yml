name: WTP Snapshot Sync

on:
  schedule:
    - cron: "*/30 * * * *"   # co 30 min (UTC)
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/wtp-snapshot-sync.yml"

concurrency:
  group: wtp-snapshot-sync
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      BASE: https://weektoppick.com
      NS: wtp-ro/v1
      SITE_KEY: 5Depft8Y9LU0t6Sv
      OUTDIR: snapshots/5Depft8Y9LU0t6Sv
      OPS: ops-snapshot-sync
      UA: WTP-SnapshotSync/1.0 (+https://weektoppick.com)

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Prepare folders
        run: |
          mkdir -p "$OUTDIR/logs" "$OPS/headers" "$OPS/bodies"

      - name: Build candidate list
        id: list
        shell: bash
        run: |
          set -euo pipefail
          # priorytety: index (meta), główny shard, kilka kolejnych, meta + digest
          {
            echo index.json
            for i in $(seq -w 000 010); do echo "files_${i}.json"; done
            echo manifest.json
            echo bundle.json
            echo options.json
            echo selftest.json
            echo gh-digest.json
          } > "$OPS/candidates.txt"

          echo "Candidates:"
          sed 's/^/ - /' "$OPS/candidates.txt"

      - name: Fetch candidates via SNAP (best-effort)
        id: fetch
        shell: bash
        run: |
          set -euo pipefail
          OK=0
          TOTAL=0

          fetch_one () {
            local f="$1"
            local url="${BASE}/wp-json/${NS}/snap?file=${f}"
            local h="${OPS}/headers/${f}.hdr"
            local b="${OPS}/bodies/${f}.out"
            local dst="${OUTDIR}/${f}"

            TOTAL=$((TOTAL+1))
            echo "GET $url"

            if curl -A "$UA" -sS --show-error \
                 --retry 2 --retry-delay 2 --retry-connrefused \
                 --connect-timeout 10 --max-time 30 \
                 -D "$h" "$url" -o "$b"; then
              # sprawdź JSON (dla *.json)
              if [[ "$f" == *.json ]]; then
                if jq -e type "$b" >/dev/null 2>&1; then
                  mv "$b" "$dst"
                  OK=$((OK+1))
                  echo "OK  $f"
                else
                  echo "::warning::invalid JSON for $f (saved body for diagnostics)"
                fi
              else
                # txt itp.
                mv "$b" "$dst"
                OK=$((OK+1))
                echo "OK  $f"
              fi
            else
              # curl error → spróbuj wyciągnąć kod HTTP z nagłówka jeśli jest
              if [ -s "$h" ]; then
                CODE=$(awk 'NR==1{print $2}' "$h")
                echo "::warning::HTTP ${CODE:-?} for $f (kept headers/body in ops/)"
              else
                echo "::warning::Fetch failed for $f (no headers)"
              fi
            fi
          }

          while read -r f; do
            [ -z "$f" ] && continue
            fetch_one "$f"
          done < "$OPS/candidates.txt"

          echo "ok_count=$OK" >> "$GITHUB_OUTPUT"
          echo "total=$TOTAL" >> "$GITHUB_OUTPUT"
          echo "Fetched OK: $OK / $TOTAL"

      - name: Upload diagnostics
        uses: actions/upload-artifact@v4
        with:
          name: wtp-snapshot-sync-diag-${{ github.run_id }}
          path: |
            ops-snapshot-sync/**
          retention-days: 7

      - name: Commit snapshot (if changed)
        shell: bash
        run: |
          set -e
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git config user.name  "wtp-bot"
            git config user.email "wtp-bot@users.noreply.github.com"
            git commit -m "snapshot: ${SITE_KEY} $(date -u +%Y-%m-%dT%H:%M:%SZ)"
            git push origin HEAD:main
          fi

      - name: Final note (never fail on missing pieces)
        run: |
          echo "Snapshot Sync finished. Download diagnostics artifact if some files returned 4xx/5xx."
