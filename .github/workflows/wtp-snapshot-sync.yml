name: WTP Snapshot Sync

on:
  workflow_dispatch:
    inputs:
      site_key:
        description: "WTP site_key (folder w uploads/wtp-ro/public)"
        required: false
        default: "5Depft8Y9LU0t6Sv"
      base_url:
        description: "REST base URL"
        required: false
        default: "https://weektoppick.com/wp-json/wtp-ro-open/v1"
      fetch_logs:
        description: "Pobierz wp-debug/php_errors (latest)"
        required: false
        default: "true"
  schedule:
    - cron: "*/30 * * * *"

jobs:
  sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure jq & curl
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Set vars
        id: vars
        shell: bash
        run: |
          set -euo pipefail
          SITE_KEY="${{ github.event.inputs.site_key || '' }}"
          BASE_URL="${{ github.event.inputs.base_url || '' }}"
          [ -z "$SITE_KEY" ] && SITE_KEY="5Depft8Y9LU0t6Sv"
          [ -z "$BASE_URL" ] && BASE_URL="https://weektoppick.com/wp-json/wtp-ro-open/v1"
          OUT_DIR="snapshots/$SITE_KEY"
          echo "SITE_KEY=$SITE_KEY"   >> "$GITHUB_OUTPUT"
          echo "BASE_URL=$BASE_URL"   >> "$GITHUB_OUTPUT"
          echo "OUT_DIR=$OUT_DIR"     >> "$GITHUB_OUTPUT"
          echo "FETCH_LOGS=${{ github.event.inputs.fetch_logs || 'true' }}" >> "$GITHUB_OUTPUT"

      - name: Create output dir (safe)
        shell: bash
        run: |
          set -euo pipefail
          BASE_DIR="${{ steps.vars.outputs.OUT_DIR }}"
          if [ -e "$BASE_DIR/logs" ] && [ ! -d "$BASE_DIR/logs" ]; then
            echo "Found FILE at $BASE_DIR/logs -> renaming to logs.old"
            mv -f "$BASE_DIR/logs" "$BASE_DIR/logs.old"
          fi
          mkdir -p "$BASE_DIR/logs"

      - name: Curl flags
        id: dl
        shell: bash
        run: |
          FLAGS='-fsSL --retry 5 --retry-delay 2 --connect-timeout 15 -A "Mozilla/5.0" -H "Accept: application/json,text/plain,/"'
          echo "CURL_FLAGS=$FLAGS" >> "$GITHUB_OUTPUT"

      - name: Probe /ls
        id: ls
        shell: bash
        run: |
          set -euo pipefail
          url="${{ steps.vars.outputs.BASE_URL }}/ls?site_key=${{ steps.vars.outputs.SITE_KEY }}"
          echo "GET $url"
          resp="$(curl ${{ steps.dl.outputs.CURL_FLAGS }} "$url" || true)"
          if [ -n "$resp" ]; then
            echo "$resp" | jq . > "${{ steps.vars.outputs.OUT_DIR }}/ls.json" || echo "$resp" > "${{ steps.vars.outputs.OUT_DIR }}/ls.raw"
          fi
          FILES=$(echo "$resp" | jq -r '.list.dirA // .list.dirB // [] | .[]' 2>/dev/null || true)
          {
            echo "FILES<<_EOF_"
            echo "$FILES"
            echo "_EOF_"
          } >> "$GITHUB_OUTPUT"

      - name: Download listed files via /get
        shell: bash
        run: |
          set -euo pipefail
          while read -r fname; do
            [ -z "${fname:-}" ] && continue
            url="${{ steps.vars.outputs.BASE_URL }}/get?site_key=${{ steps.vars.outputs.SITE_KEY }}&file=${fname}&_b=$(date +%s)"
            echo "GET $url"
            curl ${{ steps.dl.outputs.CURL_FLAGS }} "$url" -o "${{ steps.vars.outputs.OUT_DIR }}/${fname}"
          done <<'_EOF_'
          ${{ steps.ls.outputs.FILES }}
          _EOF_

      - name: Try manifest fallback (if any)
        shell: bash
        run: |
          set -euo pipefail
          M="${{ steps.vars.outputs.OUT_DIR }}/manifest.json"
          if [ -f "$M" ] && jq -e '.files? | length > 0' "$M" >/dev/null 2>&1; then
            jq -r '.files[]' "$M" | while read -r f; do
              [ -z "$f" ] && continue
              url="${{ steps.vars.outputs.BASE_URL }}/get?site_key=${{ steps.vars.outputs.SITE_KEY }}&file=${f}&_b=$(date +%s)"
              echo "GET $url"
              curl ${{ steps.dl.outputs.CURL_FLAGS }} "$url" -o "${{ steps.vars.outputs.OUT_DIR }}/${f}"
            done
          fi

      - name: Fetch logs (optional)
        if: ${{ steps.vars.outputs.FETCH_LOGS == 'true' }}
        shell: bash
        run: |
          set -euo pipefail
          for f in wp-debug-latest.txt php_errors-latest.txt wp-debug-meta.json; do
            url="${{ steps.vars.outputs.BASE_URL }}/get?site_key=${{ steps.vars.outputs.SITE_KEY }}&file=${f}&_b=$(date +%s)"
            echo "GET $url"
            curl ${{ steps.dl.outputs.CURL_FLAGS }} "$url" -o "${{ steps.vars.outputs.OUT_DIR }}/logs/${f}" || true
          done

      - name: Runner metadata
        shell: bash
        run: |
          set -euo pipefail
          NOW=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          mkdir -p runner
          printf '{"status":"ok","started_at":"%s","finished_at":"%s","commit_sha":"%s","summary":"Mirror %s via REST"}\n' \
            "$NOW" "$NOW" "$GITHUB_SHA" "${{ steps.vars.outputs.SITE_KEY }}" > runner/runner_response.json
          printf '{"logs":[{"ts":"%s","level":"info","step":"mirror","msg":"Synced %s (REST)"}]}\n' \
            "$NOW" "${{ steps.vars.outputs.SITE_KEY }}" > runner/runner_logs.json
          if [ -f runner/runner_health.json ]; then
            jq --arg now "$NOW" '.last_snapshot_at=$now' runner/runner_health.json > runner/_tmp.json || cp runner/runner_health.json runner/_tmp.json
            mv runner/_tmp.json runner/runner_health.json
          else
            printf '{"php_version":"","wp_version":"","wp_cli":"","server":"","memory_limit":"","last_snapshot_at":"%s"}\n' "$NOW" > runner/runner_health.json
          fi

      - name: Commit & push
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "wtp-snapshot-bot"
          git config user.email "wtp-snapshot-bot@users.noreply.github.com"
          git add snapshots runner/*.json
          git commit -m "mirror: sync ${{ steps.vars.outputs.SITE_KEY }} via REST" || echo "No changes"
          git push || true
