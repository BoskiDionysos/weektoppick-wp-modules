name: WTP Snapshot Sync

on:
  schedule:
    - cron: "*/30 * * * *"     # co 30 min (UTC)
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - ".github/workflows/wtp-snapshot-sync.yml"

concurrency:
  group: wtp-snapshot-sync
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      BASE: https://weektoppick.com
      SITE_KEY: 5Depft8Y9LU0t6Sv
      OUTDIR: snapshots/5Depft8Y9LU0t6Sv
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Create output dir
        run: |
          mkdir -p "$OUTDIR/logs" || true

      - name: Fetch ls.json (health + URLs)
        id: ls
        run: |
          set -euo pipefail
          URL="$BASE/wp-json/wtp-ro-open/v1/ls?site_key=$SITE_KEY"
          echo "GET $URL"
          curl -fsS "$URL" -o "$OUTDIR/ls.json"
          # pokaż skrót
          jq '{version, urls, exists}' "$OUTDIR/ls.json" || true

      - name: Resolve files list & download chunks (robust)
        run: |
          set -euo pipefail

          LS="$OUTDIR/ls.json"
          OUT="$OUTDIR"

          # 1) publiczny base URL do paczki
          PUB=$(jq -r '.urls.public_url? // empty' "$LS")
          if [ -z "$PUB" ]; then
            PUB="$BASE/wp-content/uploads/wtp-ro/public/$SITE_KEY/"
          fi
          PUB="${PUB%/}/"

          # 2) Spróbuj z list.dirA (typowa ścieżka)
          FILES=$(jq -r '.list.dirA? // [] | .[] | select(test("^files_\\d{3}\\.json$"))' "$LS")

          # 3) Fallback: weź index.json z publicznego katalogu i czytaj jego "files"
          if [ -z "$FILES" ]; then
            echo "No files from .list.dirA – trying public index.json"
            curl -fsS "${PUB}index.json" -o "$OUT/index.json" || true
            FILES=$(jq -r '.files[]? | select(test("^files_\\d{3}\\.json$"))' "$OUT/index.json" 2>/dev/null || echo "")
          fi

          if [ -z "$FILES" ]; then
            echo "::warning::No snapshot files discovered (both ls.json and index.json empty). Skipping download without failing."
            exit 0
          fi

          echo "Will download:"
          echo "$FILES" | sed 's/^/ - /'

          # Pobieraj preferencyjnie przez REST /get (autoryzuje nazwy), z fallbackiem na publiczny URL
          while IFS= read -r f; do
            [ -z "$f" ] && continue
            echo "→ $f"
            if ! curl -fsS "$BASE/wp-json/wtp-ro-open/v1/get?site_key=$SITE_KEY&file=$f" -o "$OUT/$f"; then
              echo "REST get failed for $f – trying direct public URL"
              curl -fsS "${PUB}${f}" -o "$OUT/$f"
            fi
          done <<< "$FILES"

          # Pliki pomocnicze (best-effort)
          for f in index.json bundle.json options.json selftest.json; do
            curl -fsS "$BASE/wp-json/wtp-ro-open/v1/get?site_key=$SITE_KEY&file=$f" -o "$OUT/$f" || \
            curl -fsS "${PUB}${f}" -o "$OUT/$f" || true
          done
          # pobierz pliki główne, o ile istnieją
          for f in index.json bundle.json options.json selftest.json; do
            curl -fsS "$BASE/wp-json/wtp-ro-open/v1/get?site_key=$SITE_KEY&file=$f" -o "$OUTDIR/$f" || true
          done

      # =============== TU: EMIT-LOGS ===============
      - name: Request fresh logs (/emit-logs)
        run: |
          set -euo pipefail
          curl -fsS -X POST "$BASE/wp-json/wtp-ro-open/v1/emit-logs?site_key=$SITE_KEY" -o /dev/null || true

      - name: Fetch wp-debug + php_errors (best-effort)
        run: |
          set -euo pipefail
          for f in wp-debug-latest.txt php_errors-latest.txt; do
            curl -fsS "$BASE/wp-json/wtp-ro-open/v1/get?site_key=$SITE_KEY&file=$f" -o "$OUTDIR/logs/$f" || true
          done
          # meta (np. rozmiary + mtime wg API)
          curl -fsS "$BASE/wp-json/wtp-ro-open/v1/get?site_key=$SITE_KEY&file=wp-debug-meta.json" -o "$OUTDIR/logs/wp-debug-meta.json" || true

      - name: Commit snapshot (if changed)
        run: |
          set -e
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git config user.name  "wtp-bot"
            git config user.email "wtp-bot@users.noreply.github.com"
            git commit -m "snapshot: ${SITE_KEY} $(date -u +%Y-%m-%dT%H:%M:%SZ)"
            git push origin HEAD:main
          fi

      - name: Upload artifact (for quick download)
        uses: actions/upload-artifact@v4
        with:
          name: wtp-snapshot-${{ env.SITE_KEY }}
          path: |
            ${{ env.OUTDIR }}/**
          if-no-files-found: warn
          retention-days: 7
