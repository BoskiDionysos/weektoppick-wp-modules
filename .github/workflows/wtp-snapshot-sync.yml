name: WTP Snapshot Sync

on:
  schedule:
    - cron: "*/30 * * * *"   # co 30 min (UTC)
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/wtp-snapshot-sync.yml"

concurrency:
  group: wtp-snapshot-sync
  cancel-in-progress: true

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      BASE: https://weektoppick.com
      NS: wtp-ro/v1
      SITE_KEY: 5Depft8Y9LU0t6Sv
      OUTDIR: snapshots/5Depft8Y9LU0t6Sv

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Prepare folders
        run: |
          mkdir -p "$OUTDIR/logs"

      # --- Kluczowa zmiana: żadnego /open/ls. Zaczynamy od index.json przez SNAP proxy. ---
      - name: Fetch index.json via SNAP
        id: idx
        run: |
          set -euo pipefail
          URL="$BASE/wp-json/$NS/snap?file=index.json"
          echo "GET $URL"
          if ! curl -fsS "$URL" -o "$OUTDIR/index.json"; then
            echo "::error::Cannot fetch index.json via SNAP proxy"
            exit 1
          fi
          # szybki podgląd
          jq '{generated_at, files: (.files|length)}' "$OUTDIR/index.json" || true

      - name: Resolve files list from index.json
        id: list
        run: |
          set -euo pipefail
          FILES=$(jq -r '.files[]? | select(test("^files_\\d{3}\\.json$"))' "$OUTDIR/index.json")
          if [ -z "$FILES" ]; then
            echo "::warning::No files_XXX.json listed in index.json; falling back to first shard guess"
            FILES="files_000.json"
          fi
          printf '%s\n' "$FILES" > "$OUTDIR/_files.list"
          echo "Planned downloads:"
          sed 's/^/ - /' "$OUTDIR/_files.list"

      - name: Download shards via SNAP
        run: |
          set -euo pipefail
          while IFS= read -r f; do
            [ -z "$f" ] && continue
            URL="$BASE/wp-json/$NS/snap?file=${f}"
            echo "GET $URL"
            curl -fsS "$URL" -o "$OUTDIR/$f"
            # sanity: musi być poprawny JSON
            jq -e type "$OUTDIR/$f" >/dev/null
          done < "$OUTDIR/_files.list"

      - name: Download core metas via SNAP (best-effort)
        run: |
          set -euo pipefail
          for f in manifest.json bundle.json options.json selftest.json; do
            URL="$BASE/wp-json/$NS/snap?file=${f}"
            echo "GET $URL"
            curl -fsS "$URL" -o "$OUTDIR/$f" || true
          done

      # --- Logi: zostawiamy jak było, ale tolerujemy błędy (best-effort) ---
      - name: Request fresh logs (/emit-logs)
        run: |
          set -euo pipefail
          curl -fsS -X POST "$BASE/wp-json/wtp-ro-open/v1/emit-logs?site_key=$SITE_KEY" -o /dev/null || true

      - name: Fetch wp-debug + php_errors (best-effort)
        run: |
          set -euo pipefail
          for f in wp-debug-latest.txt php_errors-latest.txt wp-debug-meta.json; do
            curl -fsS "$BASE/wp-json/wtp-ro-open/v1/get?site_key=$SITE_KEY&file=$f" -o "$OUTDIR/logs/$f" || true
          done

      - name: Commit snapshot (if changed)
        run: |
          set -e
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git config user.name  "wtp-bot"
            git config user.email "wtp-bot@users.noreply.github.com"
            git commit -m "snapshot: ${SITE_KEY} $(date -u +%Y-%m-%dT%H:%M:%SZ)"
            git push origin HEAD:main
          fi

      - name: Upload artifact (for quick download)
        uses: actions/upload-artifact@v4
        with:
          name: wtp-snapshot-${{ env.SITE_KEY }}
          path: ${{ env.OUTDIR }}/**
          if-no-files-found: warn
          retention-days: 7
