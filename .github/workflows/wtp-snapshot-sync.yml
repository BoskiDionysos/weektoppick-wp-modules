name: WTP Snapshot Sync (manifest-driven)

on:
  workflow_dispatch:
    inputs:
      site_key:
        description: "WTP site_key (uploads/wtp-ro/public/{site_key})"
        required: false
        default: "5Depft8Y9LU0t6Sv"
      rest_base:
        description: "Base REST URL"
        required: false
        default: "https://weektoppick.com/wp-json/wtp-ro-open/v1"
  schedule:
    - cron: "*/30 * * * *"

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Vars
        id: v
        shell: bash
        run: |
          SITE_KEY="${{ github.event.inputs.site_key }}"
          REST_BASE="${{ github.event.inputs.rest_base }}"
          [ -z "$SITE_KEY" ] && SITE_KEY="5Depft8Y9LU0t6Sv"
          [ -z "$REST_BASE" ] && REST_BASE="https://weektoppick.com/wp-json/wtp-ro-open/v1"
          OUT_DIR="snapshots/$SITE_KEY"
          echo "SITE_KEY=$SITE_KEY"   >> $GITHUB_OUTPUT
          echo "REST_BASE=$REST_BASE" >> $GITHUB_OUTPUT
          echo "OUT_DIR=$OUT_DIR"     >> $GITHUB_OUTPUT

      - name: Create output dir
        run: mkdir -p "${{ steps.v.outputs.OUT_DIR }}"

      - name: Fetch manifest.json (single source of truth)
        id: mani
        shell: bash
        run: |
          set -euo pipefail
          FLAGS='-fL --retry 5 --retry-delay 2 --connect-timeout 20 -A "curl/manifest" -H "Accept: application/json"'
          URL="${{ steps.v.outputs.REST_BASE }}/get?site_key=${{ steps.v.outputs.SITE_KEY }}&file=manifest.json&_b=$(date +%s)"
          echo "GET $URL"
          curl $FLAGS "$URL" -o "${{ steps.v.outputs.OUT_DIR }}/manifest.json"
          FILES=$(jq -r '.files[]?' "${{ steps.v.outputs.OUT_DIR }}/manifest.json")
          # dorzuć standardowe meta-jeśli istnieją
          META="options.json selftest.json"
          {
            echo "FILES<<EOF"
            echo "$FILES"
            echo "$META"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Download all files from manifest
        shell: bash
        run: |
          set -euo pipefail
          FLAGS='-fL --retry 5 --retry-delay 2 --connect-timeout 20 -A "curl/files" -H "Accept: application/json"'
          while read -r f; do
            [ -z "$f" ] && continue
            URL="${{ steps.v.outputs.REST_BASE }}/get?site_key=${{ steps.v.outputs.SITE_KEY }}&file=${f}&_b=$(date +%s)"
            OUT="${{ steps.v.outputs.OUT_DIR }}/${f}"
            echo "GET $URL"
            mkdir -p "$(dirname "$OUT")"
            curl $FLAGS "$URL" -o "$OUT" || echo "::warning::failed $f"
          done << 'EOF'
          ${{ steps.mani.outputs.FILES }}
          EOF

      - name: Commit & push
        shell: bash
        run: |
          set -e
          git config user.name  "wtp-snapshot-bot"
          git config user.email "wtp-snapshot-bot@users.noreply.github.com"
          git add "${{ steps.v.outputs.OUT_DIR }}/"
          git commit -m "mirror: ${{
            steps.v.outputs.SITE_KEY
          }} (manifest-driven)" || echo "No changes"
          git push
