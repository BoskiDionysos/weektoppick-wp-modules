name: 98_try_wtp_theme_safely
on: { workflow_dispatch: {} }
permissions: { contents: write }
concurrency: { group: try-wtp-theme, cancel-in-progress: true }

jobs:
  try_theme:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}
      RUN_ID: ${{ github.run_id }}

    steps:
      - uses: actions/checkout@v4

      - name: Activate wtp-core-theme (safe) → curl check → rollback if broken
        id: remote
        uses: appleboy/ssh-action@v1.0.3
        env: { RUN_ID: ${{ github.run_id }} }
        with:
          host:     ${{ env.HOST }}
          username: ${{ env.USER }}
          password: ${{ env.PASS }}
          port:     ${{ env.PORT }}
          request_pty: true
          envs: TARGET,RUN_ID
          script: |
            set -euo pipefail
            TARGET="${TARGET:-$HOME/domains/weektoppick.com/public_html}"
            cd "$TARGET"
            OUT="$TARGET/.wtp/state/ci_logs/try_theme_${RUN_ID}"
            mkdir -p "$OUT"

            HOMEURL="$(php -r 'include "wp-config.php"; include "wp-load.php"; echo get_option("home");' 2>/dev/null || true)"
            HOMEURL="${HOMEURL:-https://weektoppick.com}"
            echo "$HOMEURL" > "$OUT/home_url.txt"

            (command -v wp >/dev/null 2>&1 && wp theme list --status=active --field=name 2>/dev/null | head -n1) > "$OUT/theme_before.txt" || true

            if ! grep -q "WP_DEBUG_LOG" wp-config.php 2>/dev/null; then
              printf "\n/* WTP TEMP DEBUG */ define('WP_DEBUG', true); define('WP_DEBUG_LOG', true); define('WP_DEBUG_DISPLAY', false);\n" >> wp-config.php
              echo "added_debug_flags" > "$OUT/wp_debug_temp.txt"
            fi

            if command -v wp >/dev/null 2>&1; then
              wp theme is-installed wtp-core-theme || wp theme install wtp-core-theme --force || true
              ACT_RES=0
              wp theme activate wtp-core-theme || ACT_RES=$?
              echo "$ACT_RES" > "$OUT/activate_rc.txt"
            fi

            STATUS=$(curl -ks -o /dev/null -w "%{http_code}" "$HOMEURL" || echo 000)
            BODY="$(curl -ks "$HOMEURL" || true)"
            echo "$STATUS" > "$OUT/http_status_after.txt"
            printf "%s" "$BODY" > "$OUT/home_after.html"
            echo "$(printf "%s" "$BODY" | wc -c)" > "$OUT/home_after_size.txt"

            for LOG in error_log logs/error_log wp-content/debug.log; do
              [ -f "$LOG" ] && tail -n 200 "$LOG" > "$OUT/$(echo "$LOG" | tr '/' '_')"
            done

            SIZE=$(cat "$OUT/home_after_size.txt" || echo 0)
            if [ "$STATUS" != "200" ] || [ "${SIZE:-0}" -lt 400 ]; then
              echo "[WARN] broken after activate (status=$STATUS size=$SIZE) → rollback" | tee "$OUT/action.txt"
              wp theme install twentytwentyfive --activate --force || wp theme activate twentytwentyfive || true
              wp plugin is-active litespeed-cache && wp litespeed-purge all || true
            else
              echo "[OK] wtp-core-theme healthy (status=$STATUS size=$SIZE)" | tee "$OUT/action.txt"
            fi

            (command -v wp >/dev/null 2>&1 && wp theme list --status=active --field=name 2>/dev/null | head -n1) > "$OUT/theme_after.txt" || true

      - name: Pull logs
        run: |
          set -euo pipefail
          mkdir -p "_ci_logs/${RUN_ID}/try_theme"
          # ✅ poprawka: fallback po STRONIE SERWERA, nie runnera:
          SVRTGT="${TARGET:-/home/${USER}/domains/weektoppick.com/public_html}"
          echo "[INFO] pulling from ${SVRTGT}"
          sshpass -p "${PASS}" scp -P "${PORT}" -o StrictHostKeyChecking=no -r \
            "${USER}@${HOST}:${SVRTGT}/.wtp/state/ci_logs/try_theme_${RUN_ID}" \
            "_ci_logs/${RUN_ID}/try_theme/" || { echo "[WARN] scp failed"; exit 1; }
          ls -la "_ci_logs/${RUN_ID}/try_theme" || true
          test -s "_ci_logs/${RUN_ID}/try_theme/http_status_after.txt" || { echo "::error::no logs pulled"; exit 2; }

      - name: Publish report (RO + latest/try-theme) — rebase-safe push
        run: |
          set -euo pipefail
          RO_DIR=".wtp/state/ro/public/${RUN_ID}/try-theme"
          RO_LATEST=".wtp/state/ro/public/latest/try-theme"
          mkdir -p "${RO_DIR}"
          cp -a "_ci_logs/${RUN_ID}/try_theme/." "${RO_DIR}/"
          rm -rf "${RO_LATEST}"; mkdir -p "${RO_LATEST}"
          cp -a "${RO_DIR}/." "${RO_LATEST}/"

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          if git diff --staged --quiet; then
            echo "::notice::Nothing to commit."; exit 0
          fi
          git commit -m "try wtp-core-theme ${RUN_ID}"
          BRANCH="${GITHUB_REF_NAME:-main}"
          git branch --show-current >/dev/null 2>&1 || git checkout -B "$BRANCH"
          for i in 1 2 3; do
            git fetch origin "$BRANCH"
            git pull --rebase origin "$BRANCH" || { git rebase --continue || true; }
            if git push origin "HEAD:$BRANCH"; then echo "::notice::Pushed (attempt $i)"; exit 0; fi
            sleep 2
          done
          echo "::error::Push failed after 3 attempts"; exit 1
