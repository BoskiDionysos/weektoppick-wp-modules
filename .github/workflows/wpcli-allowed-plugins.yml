name: WP-CLI: install/update allowed plugins
on:
  workflow_dispatch: {}
permissions:
  contents: read

jobs:
  wpcli:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tools
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y sshpass

      - name: Verify inputs
        shell: bash
        run: |
          set -euo pipefail
          test -n "${HOST:-}"   || { echo "::error::Missing DEPLOY_HOST"; exit 1; }
          test -n "${PORT:-}"   || { echo "::error::Missing DEPLOY_PORT"; exit 1; }
          test -n "${USER:-}"   || { echo "::error::Missing DEPLOY_USER"; exit 1; }
          test -n "${PASS:-}"   || { echo "::error::Missing DEPLOY_PASS"; exit 1; }
          test -n "${TARGET:-}" || { echo "::error::Missing DEPLOY_TARGET"; exit 1; }
          test -f ".wtp/allowed-plugins.txt" || { echo "::error::.wtp/allowed-plugins.txt not found in repo"; exit 1; }

      - name: Upload allowlist
        shell: bash
        run: |
          set -euo pipefail
          sshpass -p "$PASS" scp -P "$PORT" -o StrictHostKeyChecking=no \
            ".wtp/allowed-plugins.txt" "$USER@$HOST:$TARGET/.wtp-allowed-plugins.txt"

      - name: Ensure WP-CLI on remote
        shell: bash
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" bash -s <<'REMOTE'
          set -e
          cd "$TARGET"
          php -v >/dev/null 2>&1 || { echo "::error::php cli not available on server"; exit 1; }
          if [ ! -f ./wp ]; then
            echo "[remote] installing wp-cli (phar saved as ./wp)"
            curl -sS -o wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          fi
          REMOTE

      - name: Install/Update allowed plugins (wp.org or zip:)
        shell: bash
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" bash -s <<'REMOTE'
          set -e
          cd "$TARGET"

          WP='php ./wp'
          $WP --info >/dev/null 2>&1 || { echo "::error::wp-cli not working (php ./wp)"; exit 1; }

          LIST=".wtp-allowed-plugins.txt"
          [ -f "$LIST" ] || { echo "::warning::$LIST missing on server"; exit 0; }

          # normalize CRLF + strip BOM to temp
          TMP=".wtp-allowed-plugins.norm"
          sed -e 's/\r$//' "$LIST" | sed 's/^\xEF\xBB\xBF//' > "$TMP"

          while IFS= read -r raw; do
            # strip comment + trim
            clean="$(printf '%s' "$raw" | sed -e 's/#.*$//' | xargs)"
            [ -z "$clean" ] && continue

            # local ZIP (line starts with zip:)
            case "$clean" in
              zip:*)
                src="${clean#zip:}"
                [ -f "$src" ] || src=".wtp-vendor/$(basename "$src")"
                if [ ! -f "$src" ]; then
                  echo "::warning::ZIP not found: $src"
                  continue
                fi
                echo ">> wp plugin install $src --force --activate"
                $WP plugin install "$src" --force --activate || true
                continue
                ;;
            esac

            # slug[@version]
            slug="$(printf '%s' "$clean" | cut -d'@' -f1)"
            ver="$( printf '%s' "$clean" | awk -F'@' 'NF>1{print $2}' )"

            if [ -n "$ver" ]; then
              echo ">> wp plugin install $slug --version=$ver --force --activate"
              $WP plugin install "$slug" --version="$ver" --force --activate || true
            else
              echo ">> wp plugin install/update $slug (latest) --activate"
              if $WP plugin is-installed "$slug" >/dev/null 2>&1; then
                $WP plugin update "$slug" --activate || true
              else
                $WP plugin install "$slug" --activate || true
              fi
            fi
          done < "$TMP"
          REMOTE

      - name: Post-deploy health (non-fatal)
        shell: bash
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "curl -fsS 'http://127.0.0.1/wp-json/wtp-ro-open/v1/health' && echo ' Health OK' || echo '::warning::health endpoint not available'"
