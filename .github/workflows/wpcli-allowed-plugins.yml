name: WP-CLI: install/update allowed plugins

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  wpcli:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Verify inputs
        run: |
          set -euo pipefail
          test -n "${HOST:-}" && test -n "${PORT:-}" && test -n "${USER:-}" && test -n "${PASS:-}" && test -n "${TARGET:-}" \
            || { echo "::error::Missing deploy secrets"; exit 1; }
          test -f ".wtp/allowed-plugins.txt" || { echo "::error::.wtp/allowed-plugins.txt not found"; exit 1; }

      - name: Install WP-CLI on remote (if missing)
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" <<'SH'
          set -e
          cd "$TARGET"
          if ! php -v >/dev/null 2>&1; then echo "::error::php not available"; exit 1; fi
          if ! [ -x ./wp ]; then
            curl -sS -o wp.phar https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            php wp.phar --info >/dev/null
            chmod +x wp.phar
            mv wp.phar wp
          fi
          mkdir -p .wtp-vendor
          SH

      - name: Upload allowlist + vendor ZIPs (if any)
        run: |
          set -euo pipefail
          sshpass -p "$PASS" scp -P "$PORT" -o StrictHostKeyChecking=no ".wtp/allowed-plugins.txt" "$USER@$HOST:$TARGET/.wtp-allowed-plugins.txt"
          if [ -d ".wtp/vendor-plugins" ]; then
            sshpass -p "$PASS" rsync -az -v \
              -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
              ".wtp/vendor-plugins/" "$USER@$HOST:$TARGET/.wtp-vendor/"
          fi

      - name: Install/Update allowed plugins
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" <<'SH'
          set -e
          cd "$TARGET"
          WP="./wp"
          test -x "$WP" || { echo "::error::wp-cli not executable"; exit 1; }
          while IFS= read -r line; do
            line="${line%%#*}"; line="$(echo "$line" | xargs)"
            [ -z "$line" ] && continue
            if echo "$line" | grep -q "^zip:"; then
              zip_path="${line#zip:}"
              if [ -f "$zip_path" ]; then SRC="$zip_path"
              elif [ -f ".wtp-vendor/$(basename "$zip_path")" ]; then SRC=".wtp-vendor/$(basename "$zip_path")"
              else echo "::warning::ZIP not found: $zip_path (skipping)"; continue
              fi
              php "$WP" plugin install "$SRC" --force --activate
              continue
            fi
            slug="${line%@*}"; ver=""
            if echo "$line" | grep -q "@"; then ver="${line#*@}"; fi
            if [ -n "$ver" ]; then
              php "$WP" plugin install "$slug" --version="$ver" --force --activate
            else
              if php "$WP" plugin is-installed "$slug" >/dev/null 2>&1; then
                php "$WP" plugin update "$slug" --activate
              else
                php "$WP" plugin install "$slug" --activate
              fi
            fi
          done < ".wtp-allowed-plugins.txt"
          SH

      - name: Post-deploy health
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            'curl -fsS "http://127.0.0.1/wp-json/wtp-ro-open/v1/health" && echo " Health OK"'
