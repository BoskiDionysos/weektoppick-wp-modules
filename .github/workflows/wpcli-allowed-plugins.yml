name: "WP-CLI install/update allowed plugins"

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  wpcli:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sshpass jq

      - name: Verify inputs
        run: |
          set -euo pipefail
          test -n "${HOST:-}" && test -n "${PORT:-}" && test -n "${USER:-}" && test -n "${PASS:-}" && test -n "${TARGET:-}" \
            || { echo "::error::Missing deploy secrets"; exit 1; }
          test -f ".wtp/allowed-plugins.txt" || { echo "::error::.wtp/allowed-plugins.txt not found in repo"; exit 1; }

      - name: Upload allowlist
        run: |
          set -euo pipefail
          sshpass -p "$PASS" scp -P "$PORT" -o StrictHostKeyChecking=no \
            ".wtp/allowed-plugins.txt" "$USER@$HOST:$TARGET/.wtp-allowed-plugins.txt"

      - name: Install/Update allowed plugins (remote WP-CLI)
        env:
          WP_ALLOW_ROOT: "1"
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" /bin/bash <<'EOF'
            set -euo pipefail
            cd "$TARGET"

            # 0) sanity: gdzie jesteśmy?
            test -f "wp-config.php" || { echo "::error::TARGET does not contain wp-config.php ($TARGET)"; exit 1; }

            # 1) WP-CLI local bootstrap (./wp)
            if ! php -v >/dev/null 2>&1; then
              echo "::error::PHP CLI not available on remote host"; exit 1;
            fi
            if [ ! -x "./wp" ]; then
              curl -sS -o wp.phar https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
              php wp.phar --info >/dev/null
              chmod +x wp.phar
              mv wp.phar wp
            fi
            WP="php ./wp --skip-plugins"   # omijamy MU/LOCKS

            # 2) lista do instalacji
            LIST=".wtp-allowed-plugins.txt"
            [ -f "$LIST" ] || { echo "::error::Allowlist not found on remote: $LIST"; exit 1; }

            # 3) normalizacja (BOM/CRLF/komentarze/puste)
            mkdir -p .wtp/state/ci_logs
            TMP=".wtp-allowed-plugins.norm"
            sed -e 's/\r$//' "$LIST" | sed 's/^\xEF\xBB\xBF//' \
              | sed 's/#.*$//' | sed 's/^[[:space:]]*//; s/[[:space:]]*$//' \
              | awk 'NF>0' > "$TMP"

            # 4) logi
            INSTALLED=".wtp/state/ci_logs/plugins_installed.txt"
            UPDATED=".wtp/state/ci_logs/plugins_updated.txt"
            EXISTING=".wtp/state/ci_logs/plugins_existing.txt"
            : > "$INSTALLED"; : > "$UPDATED"; : > "$EXISTING"

            # 5) pętla po wpisach
            while IFS= read -r line; do
              # zip:ścieżka/do/pliku.zip  (dla premium)
              if [[ "$line" =~ ^zip:(.+)$ ]]; then
                src="${BASH_REMATCH[1]}"
                [ -f "$src" ] || src=".wtp-vendor/$(basename "$src")"
                if [ ! -f "$src" ]; then
                  echo "::warning::ZIP not found: $src"; continue
                fi
                echo ">> plugin install $src --force --activate"
                $WP plugin install "$src" --force --activate && echo "$src" >> "$INSTALLED"
                continue
              fi

              # slug[@ver]
              slug="${line%@*}"
              ver="${line#*@}"
              [ "$slug" = "$ver" ] && ver=""

              if $WP plugin is-installed "$slug" >/dev/null 2>&1; then
                if [ -n "$ver" ]; then
                  echo ">> plugin update $slug --version=$ver --activate"
                  $WP plugin update "$slug" --version="$ver" --activate && echo "$slug@$ver" >> "$UPDATED"
                else
                  echo ">> plugin update $slug --activate"
                  $WP plugin update "$slug" --activate && echo "$slug" >> "$UPDATED"
                fi
              else
                if [ -n "$ver" ]; then
                  echo ">> plugin install $slug --version=$ver --activate"
                  $WP plugin install "$slug" --version="$ver" --activate && echo "$slug@$ver" >> "$INSTALLED"
                else
                  echo ">> plugin install $slug --activate"
                  $WP plugin install "$slug" --activate && echo "$slug" >> "$INSTALLED"
                fi
              fi

              $WP plugin is-installed "$slug" && echo "$slug" >> "$EXISTING"
            done < "$TMP"

            echo "=== Active plugins (after) ==="
            $WP plugin list --status=active --field=name || true

            # fallback motywu (gdy brak wtp-core-theme)
            if ! $WP theme is-installed wtp-core-theme >/dev/null 2>&1; then
              $WP theme install twentytwentyfive --activate || true
            fi
          EOF
