name: 97_theme_fix_functions

on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: theme-fix-functions
  cancel-in-progress: true

jobs:
  fix:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}
      RUN_ID: ${{ github.run_id }}

    steps:
      - uses: actions/checkout@v4

      - name: Patch functions.php safely
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ env.HOST }}
          username: ${{ env.USER }}
          password: ${{ env.PASS }}
          port:     ${{ env.PORT }}
          envs: TARGET,RUN_ID
          script: |
            set -euo pipefail
            TARGET="${TARGET:-$HOME/domains/weektoppick.com/public_html}"
            cd "$TARGET"

            THEME_DIR="wp-content/themes/wtp-core-theme"
            FILE="${THEME_DIR}/functions.php"
            OUT="$TARGET/.wtp/state/ci_logs/theme_fix_${RUN_ID}"
            mkdir -p "$OUT"

            if [ ! -d "$THEME_DIR" ]; then
              echo "[ERR] Theme dir not found: $THEME_DIR" | tee "$OUT/action.txt"
              exit 2
            fi

            if [ -f "$FILE" ]; then
              cp -f "$FILE" "${FILE}.bak.$(date -u +%Y%m%d%H%M%S)"
            fi

            cat > "$FILE" <<'PHP'
<?php
/**
 * WTP Core Theme — safe bootstrap
 * (no closing PHP tag on purpose)
 */
if ( ! defined( 'ABSPATH' ) ) { exit; }

add_action( 'after_setup_theme', function () {
    add_theme_support( 'title-tag' );
    add_theme_support( 'post-thumbnails' );
    add_theme_support( 'html5', array(
        'search-form','comment-form','comment-list','gallery','caption','style','script'
    ) );
} );

add_action( 'wp_enqueue_scripts', function () {
    // Minimal enqueue placeholder — nothing critical to avoid fatals.
}, 20 );
PHP

            php -l "$FILE" > "$OUT/functions_php_lint.txt" 2>&1 || true
            echo "[OK] functions.php replaced with safe stub" | tee "$OUT/action.txt"

      - name: Install sshpass (for pulling logs)
        run: |
          sudo apt-get update -y
          sudo apt-get install -y sshpass

      - name: Pull proof & publish logs
        run: |
          set -euo pipefail
          mkdir -p "_ci_logs/${RUN_ID}"
          sshpass -p "${PASS}" scp -P "${PORT}" -o StrictHostKeyChecking=no \
            "${USER}@${HOST}:${TARGET:-$HOME/domains/weektoppick.com/public_html}/.wtp/state/ci_logs/theme_fix_${RUN_ID}/"* \
            "_ci_logs/${RUN_ID}/" || true

          RO_DIR=".wtp/state/ro/public/${RUN_ID}/theme-fix"
          RO_LATEST=".wtp/state/ro/public/latest/theme-fix"
          mkdir -p "${RO_DIR}" "${RO_LATEST}"
          cp -a "_ci_logs/${RUN_ID}/." "${RO_DIR}/" || true
          rm -rf "${RO_LATEST}"; mkdir -p "${RO_LATEST}"; cp -a "${RO_DIR}/." "${RO_LATEST}/" || true

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "theme_fix_functions: ${RUN_ID}" || true
          git push || true
