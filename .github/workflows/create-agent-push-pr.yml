name: Create PR – agent-push.yml enhancements (one-time)

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare patch for agent-push.yml
        shell: bash
        run: |
          set -euo pipefail
          FILE=".github/workflows/agent-push.yml"
          if [ ! -f "$FILE" ]; then
            echo "::error::${FILE} not found"; exit 1
          fi

          # jeśli już wstawione – nic nie rób
          if grep -q "WTP – post summary to WP" "$FILE" || grep -q "WTP – fail on excessive install errors" "$FILE"; then
            echo "Enhancements already present; skipping change." > pr-note.txt
            exit 0
          fi

          ADD=$'      - name: WTP – post summary to WP\n\
        if: ${{ secrets.WTP_BRIDGE_KEY != \'\' && secrets.WTP_BRIDGE_HMAC != \'\' }}\n\
        env:\n\
          BRIDGE_KEY: ${{ secrets.WTP_BRIDGE_KEY }}\n\
          BRIDGE_HMAC: ${{ secrets.WTP_BRIDGE_HMAC }}\n\
        run: |\n\
          set -euo pipefail\n\
          SUMMARY=\"ops/runner/summary.json\"\n\
          if [ -f \"$SUMMARY\" ]; then\n\
            TS=$(date +%s)\n\
            PATHONLY=\"/wp-json/wtp/v1/runner/ingest\"\n\
            BODY=$(cat \"$SUMMARY\")\n\
            SIG=$(printf \"%s\\n%s\\n%s\\n%s\" \"$TS\" \"POST\" \"$PATHONLY\" \"$BODY\" | openssl dgst -sha256 -hmac \"$BRIDGE_HMAC\" -binary | xxd -p -c 256)\n\
            curl -sS -X POST \"https://weektoppick.com${PATHONLY}\" \\\n\
              -H \"Content-Type: application/json\" \\\n\
              -H \"X-WTP-Key: ${BRIDGE_KEY}\" \\\n\
              -H \"X-WTP-Timestamp: ${TS}\" \\\n\
              -H \"X-WTP-Signature: ${SIG}\" \\\n\
              --data-binary @\"$SUMMARY\" || true\n\
          else\n\
            echo \"runner summary not found; skipping send\"; fi\n\
\n\
      - name: WTP – fail on excessive install errors\n\
        if: ${{ always() }}\n\
        run: |\n\
          set -euo pipefail\n\
          F=\"ops/runner/summary.json\"\n\
          if [ ! -f \"$F\" ]; then echo \"no summary; skipping guards\"; exit 0; fi\n\
          ERRORS=$(jq -r \".errors // 0\" \"$F\" 2>/dev/null || echo 0)\n\
          SENT=$(jq -r \".sent // 0\" \"$F\" 2>/dev/null || echo 0)\n\
          SKIP=$(jq -r \".skipped // 0\" \"$F\" 2>/dev/null || echo 0)\n\
          TOTAL=$((SENT + SKIP + ERRORS))\n\
          PCT=0; if [ \"$TOTAL\" -gt 0 ]; then PCT=$(( 100 * ERRORS / TOTAL )); fi\n\
          echo \"install errors=${ERRORS} (${PCT}%) total=${TOTAL}\"\n\
          if [ \"$ERRORS\" -ge 2 ] || [ \"$PCT\" -gt 20 ]; then\n\
            echo \"::error::excessive install errors – failing job\"; exit 1; fi'

          # wstawiamy przed krokiem "Job summary" (jeśli istnieje), inaczej na koniec joba
          awk -v add="$ADD" '
            /- name: Job summary/ && !p { print add; p=1 }
            { print }
            END { if (!p) print add }
          ' "$FILE" > "$FILE.tmp"

          mv "$FILE.tmp" "$FILE"
          echo "Agent push patched." > pr-note.txt

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "chore(actions): add WP summary + install-error guards to agent-push.yml"
          branch: autopilot/agent-push-enhancements
          title: "Agent Push: WP summary hook + install-error guards"
          body-path: pr-note.txt
          labels: autopilot, actions
