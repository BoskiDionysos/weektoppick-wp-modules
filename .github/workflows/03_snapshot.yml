name: 03_snapshot (WordPress → SSOT, pełny stan)

on:
  workflow_run:
    workflows: ["02_wpcli (install/update/activate from SSOT, secure SSH)"]
    types: [completed]
  workflow_dispatch:
    inputs:
      commit_snapshot:
        description: "Commit snapshot.json + logi do repo (.wtp/snapshots/)"
        type: boolean
        default: true

permissions:
  contents: write

concurrency:
  group: snapshot
  cancel-in-progress: true

jobs:
  snapshot:
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success')
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      WTP_CI: "1"
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - name: 1) Checkout repo
        uses: actions/checkout@v4

      - name: 2) Setup tools + known_hosts
        shell: bash
        run: |
          set -euo pipefail
          for v in HOST PORT USER PASS TARGET; do
            [ -n "${!v:-}" ] || { echo "::error::Missing $v"; exit 1; }
          done
          sudo apt-get update -y
          sudo apt-get install -y curl sshpass jq
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          ssh-keyscan -p "${PORT}" "${HOST}" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          echo "::add-mask::$HOST"
          echo "::add-mask::$USER"

      - name: 3) Prepare local dirs
        shell: bash
        run: mkdir -p "_ci_logs/${{ github.run_id }}/snapshot"

      - name: 4) Upload snapshot script
        shell: bash
        run: |
          set -euo pipefail
          sshpass -p "${PASS}" scp -P "${PORT}" -o StrictHostKeyChecking=yes \
            "scripts/wtp_snapshot.sh" "${USER}@${HOST}:/tmp/"
          sshpass -p "${PASS}" ssh -p "${PORT}" -o StrictHostKeyChecking=yes \
            "${USER}@${HOST}" "chmod +x /tmp/wtp_snapshot.sh"

      - name: 5) Run remote snapshot script
        shell: bash
        run: |
          set -euo pipefail
          sshpass -p "${PASS}" ssh -p "${PORT}" -o StrictHostKeyChecking=yes \
            "${USER}@${HOST}" \
            "RUN_ID='${{ github.run_id }}' TARGET='${TARGET}' /tmp/wtp_snapshot.sh"
          sshpass -p "${PASS}" ssh -p "${PORT}" -o StrictHostKeyChecking=yes \
            "${USER}@${HOST}" "rm -f /tmp/wtp_snapshot.sh"

      - name: 6) Pull logs back
        shell: bash
        run: |
          set -euo pipefail
          sshpass -p "${PASS}" scp -P "${PORT}" -o StrictHostKeyChecking=yes -r \
            "${USER}@${HOST}:${TARGET}/.wtp/state/ci_logs/snapshot" \
            "_ci_logs/${{ github.run_id }}/"

      - name: 7) Upload artifact (opcjonalnie)
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-logs-${{ github.run_id }}
          path: _ci_logs/${{ github.run_id }}/snapshot/**

      - name: 8) Validate snapshot.json
        shell: bash
        run: |
          set -euo pipefail
          SNAP="_ci_logs/${{ github.run_id }}/snapshot/snapshot.json"
          if [[ -s "$SNAP" ]]; then
            echo "::notice::Snapshot JSON created ($(wc -c < "$SNAP") bytes)"
            jq empty "$SNAP" || echo "::warning::JSON may be malformed"
          else
            echo "::error::No snapshot.json generated"; exit 1
          fi

      - name: 9) Commit snapshot + logs to repo
        if: ${{ inputs.commit_snapshot == true }}
        shell: bash
        run: |
          set -euo pipefail
          DEST_DIR=".wtp/snapshots"
          mkdir -p "$DEST_DIR"

          for f in snapshot.json errors.txt summary.txt wpcli_summary.txt; do
            SRC="_ci_logs/${{ github.run_id }}/snapshot/$f"
            if [[ -s "$SRC" ]]; then
              cp "$SRC" "$DEST_DIR/snapshot-${{ github.run_id }}-$f"
              ln -sf "snapshot-${{ github.run_id }}-$f" "$DEST_DIR/snapshot-latest-$f"
            fi
          done

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$DEST_DIR"/*
          if git diff --staged --quiet; then
            echo "::notice::No changes to commit."
          else
            git commit -m "Add snapshot + logs for run ${{ github.run_id }}"
            git push
          fi
