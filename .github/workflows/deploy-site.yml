name: Deploy Site (MU, plugins, themes, wp-config)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - 'mu-plugins/**'
      - 'plugins/**'
      - 'themes/**'
      - 'wp-content/**'
      - 'wtp/**'
      - '.wtp/**'
      - '.github/workflows/deploy-site.yml'

concurrency:
  group: deploy-site
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y rsync sshpass jq dos2unix

      - name: Verify secrets
        run: |
          set -euo pipefail
          test -n "${HOST:-}" && test -n "${PORT:-}" && test -n "${USER:-}" && test -n "${PASS:-}" && test -n "${TARGET:-}" \
            || { echo "::error::Missing deploy secrets"; exit 1; }

      # ===== Build EXCLUDES from .wtp/protected-plugins.txt (robust) =====
      - name: Build excludes list (plugins)
        id: lists
        shell: bash
        run: |
          set -euo pipefail
          SRC=""
          if   [ -f ".wtp/protected-plugins.txt" ]; then SRC=".wtp/protected-plugins.txt"
          elif [ -f "wtp/protected-plugins.txt"  ]; then SRC="wtp/protected-plugins.txt"
          fi

          EXCLUDE_FILE="$(mktemp)"
          : > "$EXCLUDE_FILE"

          if [ -n "$SRC" ]; then
            # usuń BOM/CRLF, komentarze, puste; każdy wpis -> "<folder>/***"
            cp "$SRC" _tmp_protected.txt
            dos2unix -q _tmp_protected.txt || true
            sed 's/^\xEF\xBB\xBF//' _tmp_protected.txt | while IFS= read -r line; do
              name="${line%%#*}"
              name="$(echo "$name" | xargs)"
              [ -z "$name" ] && continue
              echo "${name}/***" >> "$EXCLUDE_FILE"
            done
            rm -f _tmp_protected.txt
          fi

          echo "exclude=$EXCLUDE_FILE" >> "$GITHUB_OUTPUT"
          echo "---- EXCLUDES (effective) ----"
          if [ -s "$EXCLUDE_FILE" ]; then cat "$EXCLUDE_FILE"; else echo "(empty)"; fi

      # ===== Pre-create remote paths (eliminuje rsync 'no such file or directory') =====
      - name: Ensure remote directories
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" "
            set -e
            mkdir -p '$TARGET/wp-content/plugins' \
                     '$TARGET/wp-content/themes' \
                     '$TARGET/wp-content/mu-plugins'
          "

      - name: Remote plugins BEFORE
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "echo '--- REMOTE PLUGINS BEFORE ---'; ls -1 '$TARGET/wp-content/plugins' || true"

      # ===== Detect sources in repo =====
      - name: Detect mu-plugins
        id: mu
        shell: bash
        run: |
          if   [ -d "mu-plugins" ]; then echo "src=mu-plugins" >> "$GITHUB_OUTPUT"
          elif [ -d "wp-content/mu-plugins" ]; then echo "src=wp-content/mu-plugins" >> "$GITHUB_OUTPUT"
          else echo "src=" >> "$GITHUB_OUTPUT"; fi

      - name: Detect plugins
        id: plg
        shell: bash
        run: |
          if   [ -d "plugins" ]; then echo "src=plugins" >> "$GITHUB_OUTPUT"
          elif [ -d "wp-content/plugins" ]; then echo "src=wp-content/plugins" >> "$GITHUB_OUTPUT"
          else echo "src=" >> "$GITHUB_OUTPUT"; fi

      - name: Detect themes
        id: thm
        shell: bash
        run: |
          if   [ -d "themes" ]; then echo "src=themes" >> "$GITHUB_OUTPUT"
          elif [ -d "wp-content/themes" ]; then echo "src=wp-content/themes" >> "$GITHUB_OUTPUT"
          else echo "src=" >> "$GITHUB_OUTPUT"; fi

      # ===== Sync MU-plugins =====
      - name: Sync MU plugins
        if: ${{ steps.mu.outputs.src != '' }}
        shell: bash
        run: |
          set -euo pipefail
          SRC="${{ steps.mu.outputs.src }}"
          echo "Sync: $SRC -> $TARGET/wp-content/mu-plugins/"
          set +e
          sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
            -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
            "$SRC/" "$USER@$HOST:$TARGET/wp-content/mu-plugins/"
          RC=$?
          set -e
          if [ $RC -ne 0 ] && [ $RC -ne 23 ] && [ $RC -ne 24 ]; then
            echo "::error::rsync MU failed (rc=$RC)"; exit $RC
          fi

      # ===== Sync plugins with EXCLUDES (provider plugins never vanish) =====
      - name: Sync plugins (with excludes + tolerant rc 23/24)
        if: ${{ steps.plg.outputs.src != '' }}
        shell: bash
        run: |
          set -euo pipefail
          SRC="${{ steps.plg.outputs.src }}"
          declare -a EX_OPT=()
          if [ -s "${{ steps.lists.outputs.exclude }}" ]; then
            echo "Use excludes:"
            cat "${{ steps.lists.outputs.exclude }}"
            EX_OPT=( --exclude-from="${{ steps.lists.outputs.exclude }}" )
          else
            echo "No excludes file."
          fi
          echo "Sync: $SRC -> $TARGET/wp-content/plugins/ (with --delete)"
          set +e
          sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
            "${EX_OPT[@]}" \
            -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
            "$SRC/" "$USER@$HOST:$TARGET/wp-content/plugins/"
          RC=$?
          set -e
          if [ $RC -ne 0 ] && [ $RC -ne 23 ] && [ $RC -ne 24 ]; then
            echo "::error::rsync PLUGINS failed (rc=$RC)"; exit $RC
          fi

      # ===== Sync themes =====
      - name: Sync themes
        if: ${{ steps.thm.outputs.src != '' }}
        shell: bash
        run: |
          set -euo pipefail
          SRC="${{ steps.thm.outputs.src }}"
          echo "Sync: $SRC -> $TARGET/wp-content/themes/"
          set +e
          sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
            -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
            "$SRC/" "$USER@$HOST:$TARGET/wp-content/themes/"
          RC=$?
          set -e
          if [ $RC -ne 0 ] && [ $RC -ne 23 ] && [ $RC -ne 24 ]; then
            echo "::error::rsync THEMES failed (rc=$RC)"; exit $RC
          fi

      - name: Remote plugins AFTER
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "echo '--- REMOTE PLUGINS AFTER ---'; ls -1 '$TARGET/wp-content/plugins' || true"

      - name: Done
        run: echo "Deploy finished."
