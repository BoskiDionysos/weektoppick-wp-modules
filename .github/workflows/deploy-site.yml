name: Deploy Site (MU, plugins, themes, wp-config)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - 'mu-plugins/**'
      - 'plugins/**'
      - 'themes/**'
      - 'wp-content/themes/**'
      - 'wtp/**'
      - '.wtp/**'
      - '.github/workflows/deploy-site.yml'

concurrency:
  group: deploy-site
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Tools
        run: |
          set -euo pipefail
          sudo apt-get update -y
          sudo apt-get install -y rsync sshpass jq

      - name: Verify deploy secrets
        run: |
          set -euo pipefail
          test -n "${HOST:-}"   && \
          test -n "${PORT:-}"   && \
          test -n "${USER:-}"   && \
          test -n "${PASS:-}"   && \
          test -n "${TARGET:-}" || { echo "::error::Missing deploy secrets"; exit 1; }

      # >>> TO JEST TEN KROK: generujemy listę exclude dla rsync z protected-plugins.txt
      - name: Build rsync excludes from .wtp/protected-plugins.txt
        id: excl
        shell: bash
        run: |
          set -euo pipefail
          OUT=".wtp/rsync-exclude.txt"
          > "$OUT"

          # akceptujemy listę z .wtp/ lub wtp/ (fallback)
          SRC=""
          if   [ -f ".wtp/protected-plugins.txt" ]; then SRC=".wtp/protected-plugins.txt"
          elif [ -f "wtp/protected-plugins.txt"  ]; then SRC="wtp/protected-plugins.txt"
          fi

          if [ -n "$SRC" ]; then
            echo "Using protect list: $SRC"
            # normalizacja CRLF/BOM, obcięcie komentarzy i pustych linii
            sed -e 's/\r$//' "$SRC" | sed 's/^\xEF\xBB\xBF//' | while IFS= read -r name; do
              name="${name%%#*}"; name="$(echo "$name" | xargs)"
              [ -z "$name" ] && continue
              echo "wp-content/plugins/$name/***" >> "$OUT"
            done
          else
            echo "No protected list found; rsync will fully manage plugins (with --delete)."
          fi

          echo "exclude_file=$OUT" >> "$GITHUB_OUTPUT"
          echo "---- RSYNC EXCLUDES ----"
          if [ -s "$OUT" ]; then cat "$OUT"; else echo "(empty)"; fi
          echo "------------------------"

      - name: Remote plugins BEFORE
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "ls -1 '$TARGET/wp-content/plugins' || true"

      - name: Sync MU plugins (if present)
        shell: bash
        run: |
          set -euo pipefail
          SRC="mu-plugins"
          if [ -d "$SRC" ]; then
            echo "Sync: $SRC -> $TARGET/wp-content/mu-plugins/"
            sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
              -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
              "$SRC/" "$USER@$HOST:$TARGET/wp-content/mu-plugins/"
          else
            echo "Skip: $SRC does not exist in repo."
          fi

      - name: Detect themes directory in repo
        id: thm
        shell: bash
        run: |
          set -euo pipefail
          if   [ -d "themes" ]; then echo "src=themes" >> "$GITHUB_OUTPUT"
          elif [ -d "wp-content/themes" ]; then echo "src=wp-content/themes" >> "$GITHUB_OUTPUT"
          else echo "src=" >> "$GITHUB_OUTPUT"
          fi

      - name: Sync themes (if present)
        if: ${{ steps.thm.outputs.src != '' }}
        shell: bash
        run: |
          set -euo pipefail
          SRC="${{ steps.thm.outputs.src }}"
          echo "Sync: $SRC -> $TARGET/wp-content/themes/"
          sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
            -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
            "$SRC/" "$USER@$HOST:$TARGET/wp-content/themes/"

      - name: Sync plugins (respect protected list via --exclude-from)
        shell: bash
        run: |
          set -euo pipefail
          SRC="plugins"
          if [ -d "$SRC" ]; then
            echo "Sync: $SRC -> $TARGET/wp-content/plugins/"
            sshpass -p "$PASS" rsync -az --delete -v --itemize-changes \
              --exclude-from="${{ steps.excl.outputs.exclude_file }}" \
              -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
              "$SRC/" "$USER@$HOST:$TARGET/wp-content/plugins/"
          else
            echo "Skip: $SRC does not exist in repo."
          fi

      - name: Remote plugins AFTER
        run: |
          set -euo pipefail
          echo "---- REMOTE PLUGINS AFTER ----"
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "ls -1 '$TARGET/wp-content/plugins' || true"
          echo "--------------------------------"

      - name: Post-deploy health (non-fatal)
        run: |
          set -euo pipefail
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            'curl -fsS "http://127.0.0.1/wp-json/wtp-ro-open/v1/health" && echo "Health OK" || echo "::warning::health endpoint missing or failed"'

      - name: Done
        run: echo "Deploy finished."
