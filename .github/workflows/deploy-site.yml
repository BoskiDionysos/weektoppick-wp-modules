name: Deploy Site (MU, plugins, themes, wp-config)

on:
  workflow_dispatch: {}
  push:
    branches: [ main ]
    paths:
      - "mu-plugins/**"
      - "plugins/**"
      - "themes/**"
      - "wp-content/themes/**"
      - ".wtp/**"
      - "wtp/**"
      - ".github/workflows/deploy-site.yml"

concurrency:
  group: deploy-site
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      HOST:   ${{ secrets.DEPLOY_HOST }}
      PORT:   ${{ secrets.DEPLOY_PORT }}
      USER:   ${{ secrets.DEPLOY_USER }}
      PASS:   ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y rsync sshpass jq

      - name: Build exclude list for server-managed plugins
        id: ex
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p .wtp
          EX=".wtp/rsync-protected-plugins.txt"
          : > "$EX"

          SRC=""
          if   [ -f ".wtp/protected-plugins.txt" ]; then SRC=".wtp/protected-plugins.txt"
          elif [ -f "wtp/protected-plugins.txt"  ]; then SRC="wtp/protected-plugins.txt"
          fi

          if [ -n "$SRC" ]; then
            echo "Using protect list: $SRC"
            # KaÅ¼da nazwa katalogu wtyczki -> linia 'katalog/' w exclude-from
            # Puste linie i komentarze (#) pomijamy
            while IFS= read -r line; do
              line="${line%%#*}"; line="${line//[$'\t\r\n ']/}"
              [ -z "$line" ] && continue
              echo "${line}/" >> "$EX"
            done < "$SRC"
          else
            echo "No protected-plugins list found."
          fi

          echo "--- BUILT EXCLUDE FILE (.wtp/rsync-protected-plugins.txt) ---"
          if [ -s "$EX" ]; then cat "$EX"; else echo "(empty)"; fi
          echo "exclude_file=$EX" >> "$GITHUB_OUTPUT"

      - name: Pre-deploy: list remote plugin dirs
        continue-on-error: true
        env:
          EX: ${{ steps.ex.outputs.exclude_file }}
        run: |
          set -e
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "ls -1 '${TARGET%/}/wp-content/plugins' || true"

      - name: Sync MU plugins
        run: |
          set -euo pipefail
          sshpass -p "$PASS" rsync -az --delete -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
            "mu-plugins/" "$USER@$HOST:${TARGET%/}/wp-content/mu-plugins/"

      - name: Sync themes (repo-managed)
        run: |
          set -euo pipefail
          sshpass -p "$PASS" rsync -az --delete -e "ssh -p $PORT -o StrictHostKeyChecking=no" \
            "wp-content/themes/" "$USER@$HOST:${TARGET%/}/wp-content/themes/"

      - name: Sync plugins (respect protected list)
        env:
          EX: ${{ steps.ex.outputs.exclude_file }}
        run: |
          set -euo pipefail
          RSYNC="sshpass -p \"$PASS\" rsync -az --delete -e \"ssh -p $PORT -o StrictHostKeyChecking=no\""
          if [ -s "$EX" ]; then
            echo "Using --exclude-from=$EX"
            eval $RSYNC --exclude-from=\"$EX\" \"plugins/\" \"$USER@$HOST:${TARGET%/}/wp-content/plugins/\"
          else
            echo "No protected plugins. Full sync with --delete."
            eval $RSYNC \"plugins/\" \"$USER@$HOST:${TARGET%/}/wp-content/plugins/\"
          fi

      - name: Post-deploy: list remote plugin dirs
        continue-on-error: true
        run: |
          set -e
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "ls -1 '${TARGET%/}/wp-content/plugins' || true"
