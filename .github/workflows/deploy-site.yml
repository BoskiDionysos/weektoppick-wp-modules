name: Deploy Site (MU, plugins, themes, wp-config)

on:
  push:
    branches: [ main ]
    paths:
      - 'mu-plugins/'
      - 'plugins/'
      - 'themes/'
      - 'wp-content/themes/'
      - '.wtp/wp-config.tpl.php'
      - '.github/workflows/deploy-site.yml'
  workflow_dispatch: {}

concurrency:
  group: deploy-site
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      HOST:  ${{ secrets.DEPLOY_HOST }}
      PORT:  ${{ secrets.DEPLOY_PORT }}
      USER:  ${{ secrets.DEPLOY_USER }}
      PASS:  ${{ secrets.DEPLOY_PASS }}
      TARGET: ${{ secrets.DEPLOY_TARGET }}
      # Ustaw w Secrets na "true" jeśli chcesz generować i wysyłać wp-config.php z szablonu
      ALLOW_WPCONFIG_DEPLOY: ${{ secrets.ALLOW_WPCONFIG_DEPLOY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y rsync sshpass

      - name: Create target folders (first connect)
        run: |
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" \
            "mkdir -p '$TARGET/wp-content/mu-plugins' \
                      '$TARGET/wp-content/plugins' \
                      '$TARGET/wp-content/themes' \
                      '$TARGET/.wtp-bot'"

      - name: Deploy MU plugins
        if: ${{ hashFiles('mu-plugins/') != '' }}
        run: |
          rsync -avz --delete \
            -e "sshpass -p '$PASS' ssh -p $PORT -o StrictHostKeyChecking=no" \
            mu-plugins/ "$USER@$HOST:$TARGET/wp-content/mu-plugins/"

      - name: Deploy standard plugins
        if: ${{ hashFiles('plugins/') != '' }}
        run: |
          rsync -avz --delete \
            -e "sshpass -p '$PASS' ssh -p $PORT -o StrictHostKeyChecking=no" \
            plugins/ "$USER@$HOST:$TARGET/wp-content/plugins/"

      - name: Deploy themes
        if: ${{ hashFiles('themes/') != '' || hashFiles('wp-content/themes/') != '' }}
        run: |
          if [ -d "themes" ]; then SRC="themes/"; else SRC="wp-content/themes/"; fi
          rsync -avz --delete \
            -e "sshpass -p '$PASS' ssh -p $PORT -o StrictHostKeyChecking=no" \
            "$SRC" "$USER@$HOST:$TARGET/wp-content/themes/"

      - name: Generate & deploy wp-config.php (optional)
        if: ${{ env.ALLOW_WPCONFIG_DEPLOY == 'true' && hashFiles('.wtp/wp-config.tpl.php') != '' }}
        env:
          # te sekrety mogą być użyte w szablonie {{NAZWA}}
          WTP_AGENT_TOKEN:  ${{ secrets.WTP_AGENT_TOKEN }}
          WTP_GH_SYNC_PAT:  ${{ secrets.WTP_GH_SYNC_PAT }}
          WTP_GH_SECRET:    ${{ secrets.WTP_GH_SECRET }}
          WTP_BRIDGE_KEY:   ${{ secrets.WTP_BRIDGE_KEY }}
          WTP_BRIDGE_HMAC:  ${{ secrets.WTP_BRIDGE_HMAC }}
          RUNNER_URL:       ${{ secrets.RUNNER_URL }}
        run: |
          python3 - <<'PY'
import os, re, io
tpl = ".wtp/wp-config.tpl.php"
out = "wp-config.php"
s = io.open(tpl, "r", encoding="utf-8").read()
def repl(m):
    return os.environ.get(m.group(1), "")
s = re.sub(r"\{\{(\w+)\}\}", repl, s)
io.open(out, "w", encoding="utf-8").write(s)
print("Generated", out)
PY
          rsync -avz \
            -e "sshpass -p '$PASS' ssh -p $PORT -o StrictHostKeyChecking=no" \
            wp-config.php "$USER@$HOST:$TARGET/wp-config.php"

      - name: Write deploy marker
        run: |
          echo "deploy $(date -u +%FT%TZ)" > .deploy.txt
          rsync -avz -e "sshpass -p '$PASS' ssh -p $PORT -o StrictHostKeyChecking=no" \
            .deploy.txt "$USER@$HOST:$TARGET/.wtp-bot/deploy.txt"
