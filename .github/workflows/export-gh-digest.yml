name: Export GH Digest (for Chat analysis)

on:
  push:
    branches:
      - main
    paths:
      - 'mu-plugins/**'
      - 'plugins/**'
      - 'themes/**'
      - 'wp-content/themes/**'
      - '.github/workflows/**'
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:

concurrency:
  group: export-gh-digest
  cancel-in-progress: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      HOST:     ${{ secrets.DEPLOY_HOST }}
      PORT:     ${{ secrets.DEPLOY_PORT }}
      USER:     ${{ secrets.DEPLOY_USER }}
      PASS:     ${{ secrets.DEPLOY_PASS }}
      TARGET:   ${{ secrets.DEPLOY_TARGET }}
      SITE_KEY: ${{ secrets.WTP_SITE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq sshpass

      - name: Build digest JSON
        id: digest
        shell: bash
        run: |
          set -euo pipefail

          make_list () {
            local glob="$1"
            if ! compgen -G "$glob" >/dev/null; then
              echo "[]"; return
            fi
            arr="[]"
            while IFS= read -r -d '' f; do
              size=$(stat -c%s "$f" 2>/dev/null || echo 0)
              sha=$(sha256sum "$f" 2>/dev/null | awk '{print $1}')
              last="$(git log -1 --format='%h %ct' -- "$f" 2>/dev/null || true)"
              last_hash=$(echo "$last" | awk '{print $1}')
              last_ts=$(echo "$last" | awk '{print $2}')
              item=$(jq -n \
                --arg p "$f" \
                --argjson s "${size:-0}" \
                --arg sh "${sha:-}" \
                --arg lh "${last_hash:-}" \
                --argjson lt "${last_ts:-0}" \
                '{path:$p,size:$s,sha256:$sh,last_commit:{hash:$lh,ts:$lt}}')
              arr=$(jq -c --argjson it "$item" '. + [$it]' <<<"$arr")
            done < <(find $glob -type f -print0 2>/dev/null || true)
            echo "$arr"
          }

          mu_plugins=$(make_list "mu-plugins")
          plugins=$(make_list "plugins")
          themes=$(make_list "themes")
          wp_themes=$(make_list "wp-content/themes")
          workflows=$(make_list ".github/workflows")

          head_hash="$(git rev-parse HEAD)"
          head_ts="$(git log -1 --format='%ct' || echo 0)"

          jq -n \
            --arg repo "${{ github.repository }}" \
            --arg ref  "${{ github.ref_name }}" \
            --arg head "$head_hash" \
            --argjson hts "${head_ts:-0}" \
            --arg site_key "${SITE_KEY:-}" \
            --arg target   "${TARGET:-}" \
            --arg host     "${HOST:-}" \
            --arg port     "${PORT:-}" \
            --arg user     "${USER:-}" \
            --arg time     "$(date -u +%FT%TZ)" \
            --argjson mu   "$mu_plugins" \
            --argjson plg  "$plugins" \
            --argjson thm  "$themes" \
            --argjson wpt  "$wp_themes" \
            --argjson wfs  "$workflows" \
            '{
              meta:{ repo:$repo, branch:$ref, head:$head, head_ts:$hts, generated_at:$time },
              deploy:{ host:$host, port:$port, target:$target, user:$user },
              site_key:$site_key,
              trees:{
                mu_plugins:$mu, plugins:$plg, themes:$thm, wp_content_themes:$wpt, workflows:$wfs
              }
            }' > gh-digest.json

          echo "Built gh-digest.json:"
          jq -C '.meta, .site_key, {mu: .trees.mu_plugins|length, plg:.trees.plugins|length, thm:.trees.themes|length, wpt:.trees.wp_content_themes|length, wfs:.trees.workflows|length}' gh-digest.json

      - name: Upload digest to snapshot folder (SFTP)
        if: ${{ env.HOST != '' && env.USER != '' && env.PASS != '' && env.TARGET != '' && env.SITE_KEY != '' }}
        run: |
          set -euo pipefail
          REMOTE_DIR="$TARGET/wp-content/uploads/wtp-ro/public/$SITE_KEY"
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" "mkdir -p '$REMOTE_DIR'"
          sshpass -p "$PASS" scp -P "$PORT" -o StrictHostKeyChecking=no gh-digest.json "$USER@$HOST:$REMOTE_DIR/gh-digest.json"

      - name: Upload artifact (fallback)
        uses: actions/upload-artifact@v4
        with:
          name: gh-digest
          path: gh-digest.json
          if-no-files-found: error
          retention-days: 7
