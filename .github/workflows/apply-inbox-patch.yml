name: Apply Inbox Patch

on:
  push:
    paths:
      - '.wtp/inbox//*.patch'
      - '.wtp/inbox//*.diff'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # pobierz pełną historię do poprawnego nakładania łat
          fetch-depth: 0

      - name: Find newest patch in inbox
        id: pick
        run: |
          set -euo pipefail
          f=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
                | grep -E '^\.wtp/inbox/.*\.(patch|diff)$' \
                | tail -n1 || true)
          if [ -z "$f" ]; then
            echo "No patch in this push"; exit 1
          fi
          echo "PATCH=$f" >> $GITHUB_OUTPUT
          bname="wtp/apply/$(basename "$f" | sed 's/\.[^.]*$//')"
          echo "BRANCH=$bname" >> $GITHUB_OUTPUT
          echo "Picked: $f -> $bname"

      - name: Create branch
        run: |
          git checkout -b "${{ steps.pick.outputs.BRANCH }}"

      - name: Try apply patch
        id: apply
        run: |
          set -euo pipefail
          file="${{ steps.pick.outputs.PATCH }}"
          echo "Applying $file"
          # spróbuj 'git apply' (diff), jeśli się nie uda, spróbuj 'git am' (mbox)
          if git apply --index "$file"; then
            echo "method=apply" >> $GITHUB_OUTPUT
          else
            echo "git apply failed, trying git am…"
            if git am "$file"; then
              echo "method=am" >> $GITHUB_OUTPUT
            else
              echo "::error::Patch failed to apply"
              git checkout -
              exit 2
            fi
          fi

      - name: Commit (if needed)
        run: |
          set -e
          if ! git diff --cached --quiet; then
            msg="apply: $(basename "${{ steps.pick.outputs.PATCH }}")"
            git commit -m "$msg"
          fi

      - name: Push branch
        run: |
          git push -u origin "${{ steps.pick.outputs.BRANCH }}"

      - name: Open PR
        uses: actions/github-script@v7
        with:
          script: |
            const { BRANCH, PATCH } = process.env;
            const title = Apply patch: ${PATCH.split('/').pop()};
            const body = [
              This PR was created automatically by workflow **Apply Inbox Patch**.,
              ``,
              - Branch: \${BRANCH}\``,
              - Patch: \${PATCH}\``,
            ].join('\n');
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: BRANCH,
              base: "main",
              title,
              body
            });
            core.notice(PR opened: #${pr.data.number});
        env:
          BRANCH: ${{ steps.pick.outputs.BRANCH }}
          PATCH:  ${{ steps.pick.outputs.PATCH }}
