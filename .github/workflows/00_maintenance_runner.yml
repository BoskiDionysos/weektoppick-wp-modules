name: 00_maintenance_runner

on:
  workflow_dispatch:
    inputs:
      workflow_file:
        description: "Plik z .github/workflows._maintenance/, np. 03_repo_audit.yml"
        required: true
      keep_active:
        description: "Zostawić plik aktywny po odpaleniu? (yes/no)"
        required: false
        default: "no"

permissions:
  contents: write
  actions: write

concurrency:
  group: maintenance-runner
  cancel-in-progress: true

jobs:
  run_maintenance:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate & paths
        id: val
        shell: bash
        run: |
          set -euo pipefail
          WF_M_DIR=".github/workflows._maintenance"
          WF_DIR=".github/workflows"
          NAME="${{ github.event.inputs.workflow_file }}"
          test -n "$NAME" || { echo "::error::Empty workflow_file"; exit 1; }
          test -f "${WF_M_DIR}/${NAME}" || { echo "::error::Brak ${WF_M_DIR}/${NAME}"; exit 1; }
          echo "src=${WF_M_DIR}/${NAME}"   >> "$GITHUB_OUTPUT"
          echo "dst=${WF_DIR}/${NAME}"     >> "$GITHUB_OUTPUT"
          echo "src_dir=${WF_M_DIR}"       >> "$GITHUB_OUTPUT"
          echo "dst_dir=${WF_DIR}"         >> "$GITHUB_OUTPUT"

      - name: Move to active
        shell: bash
        run: |
          set -euo pipefail
          src="${{ steps.val.outputs.src }}"
          dst="${{ steps.val.outputs.dst }}"
          mkdir -p "$(dirname "$dst")"
          cp -f "$src" /tmp/original.yml             # zachowaj oryginał
          mv -f "$src" "$dst"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$dst"
          git commit -m "maintenance-runner: activate $(basename "$dst") temporarily" || true
          git push || true

      - name: Ensure workflow_dispatch (temporary patch)
        shell: bash
        run: |
          set -euo pipefail
          dst="${{ steps.val.outputs.dst }}"
          NEED_PATCH=0
          if ! grep -q 'workflow_dispatch' "$dst"; then
            NEED_PATCH=1
            # przypadek 1: jest linia 'on:' solo -> wstrzykuj pod nią
            if grep -qE '^on:\s*$' "$dst"; then
              awk '{
                print;
                if ($0 ~ /^on:[[:space:]]*$/ && !ins){ print "  workflow_dispatch: {}"; ins=1 }
              }' "$dst" > "$dst.tmp" && mv "$dst.tmp" "$dst"
            # przypadek 2: inline 'on: { ... }' -> zamień na blok z workflow_dispatch
            elif grep -qE '^on:[[:space:]]*{.*}$' "$dst"; then
              awk 'BEGIN{repl=0}{
                if (!repl && $0 ~ /^on:[[:space:]]*{.*}$/) {
                  print "on:"
                  print "  workflow_dispatch: {}"
                  repl=1
                } else { print }
              }' "$dst" > "$dst.tmp" && mv "$dst.tmp" "$dst"
            # przypadek 3: brak 'on:' -> dolej cały blok na początek
            else
              { echo -e "on:\n  workflow_dispatch: {}\n"; cat "$dst"; } > "$dst.tmp" && mv "$dst.tmp" "$dst"
            fi
          fi

          if [[ $NEED_PATCH -eq 1 ]]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "$dst"
            git commit -m "maintenance-runner: temp add workflow_dispatch" || true
            git push || true
            sleep 3
          fi

      - name: Trigger via GitHub API
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          WF_FILE: ${{ github.event.inputs.workflow_file }}
        shell: bash
        run: |
          set -euo pipefail
          RESP=$(mktemp)
          CODE=$(curl -sS -w "%{http_code}" -o "$RESP" -X POST \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${REPO}/actions/workflows/${WF_FILE}/dispatches" \
            -d "{\"ref\":\"${BRANCH}\"}")
          echo "HTTP $CODE"; cat "$RESP" || true
          if [ "$CODE" -ne 204 ]; then
            echo "::error::Workflow dispatch failed (HTTP $CODE)"; exit 1
          fi
          echo "::notice::Triggered ${WF_FILE} on ${BRANCH}"

      - name: Move back to _maintenance
        if: ${{ github.event.inputs.keep_active != 'yes' }}
        shell: bash
        run: |
          set -euo pipefail
          WF_DIR="${{ steps.val.outputs.dst_dir }}"
          WF_M_DIR="${{ steps.val.outputs.src_dir }}"
          NAME="${{ github.event.inputs.workflow_file }}"
          if [ -f "${WF_DIR}/${NAME}" ]; then
            mv -f "${WF_DIR}/${NAME}" "${WF_M_DIR}/${NAME}"
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "${WF_M_DIR}/${NAME}" "${WF_DIR}" || true
            git commit -m "maintenance-runner: move back ${NAME} to _maintenance" || true
            git push || true
          fi

      - name: Restore original content in _maintenance
        shell: bash
        run: |
          set -euo pipefail
          NAME="${{ github.event.inputs.workflow_file }}"
          M_PATH=".github/workflows._maintenance/${NAME}"
          if [ -f /tmp/original.yml ] && [ -f "$M_PATH" ]; then
            cp -f /tmp/original.yml "$M_PATH"
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "$M_PATH"
            git commit -m "maintenance-runner: restore original ${NAME}" || true
            git push || true
          fi

      - name: Done
        run: echo "::notice::Launched ${{ github.event.inputs.workflow_file }} (check Actions list)"
