name: 00_maintenance_runner

on:
  workflow_dispatch:
    inputs:
      workflow_file:
        description: "Plik z .github/workflows._maintenance/, np. 03_repo_audit.yml"
        required: true
      keep_active:
        description: "Zostawić plik aktywny po odpaleniu? (yes/no)"
        required: false
        default: "no"

permissions:
  contents: write
  actions: write

concurrency:
  group: maintenance-runner
  cancel-in-progress: true

jobs:
  run_maintenance:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate & paths
        id: val
        shell: bash
        run: |
          set -euo pipefail
          WF_M_DIR=".github/workflows._maintenance"
          WF_DIR=".github/workflows"
          NAME="${{ github.event.inputs.workflow_file }}"
          test -n "$NAME" || { echo "::error::Empty workflow_file"; exit 1; }
          test -f "${WF_M_DIR}/${NAME}" || { echo "::error::Brak ${WF_M_DIR}/${NAME}"; exit 1; }
          echo "src=${WF_M_DIR}/${NAME}"   >> "$GITHUB_OUTPUT"
          echo "dst=${WF_DIR}/${NAME}"     >> "$GITHUB_OUTPUT"
          echo "src_dir=${WF_M_DIR}"       >> "$GITHUB_OUTPUT"
          echo "dst_dir=${WF_DIR}"         >> "$GITHUB_OUTPUT"

      - name: Move to active + backup original
        shell: bash
        run: |
          set -euo pipefail
          src="${{ steps.val.outputs.src }}"
          dst="${{ steps.val.outputs.dst }}"
          mkdir -p "$(dirname "$dst")"
          cp -f "$src" /tmp/original.yml
          mv -f "$src" "$dst"
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$dst"
          git commit -m "maintenance-runner: activate $(basename "$dst") temporarily" || true
          git push || true

      - name: Force-add workflow_dispatch (robust patch)
        shell: bash
        run: |
          set -euo pipefail
          dst="${{ steps.val.outputs.dst }}"
          # jeżeli jest 'on:' inline — zamień na blok
          if grep -qE '^on:[[:space:]]*{.*}$' "$dst"; then
            awk 'BEGIN{done=0}{
              if(!done && $0 ~ /^on:[[:space:]]*{.*}$/){
                print "on:"; print "  workflow_dispatch: {}"; done=1
              } else { print }
            }' "$dst" > "$dst.tmp" && mv "$dst.tmp" "$dst"
          fi
          # jeżeli brak 'on:' bloku — dolej na górę
          if ! grep -qE '^on:[[:space:]]*$' "$dst"; then
            { echo "on:"; echo "  workflow_dispatch: {}"; echo ""; cat "$dst"; } > "$dst.tmp" && mv "$dst.tmp" "$dst"
          else
            # jest 'on:' w bloku, dolej 'workflow_dispatch' jeśli brak
            if ! grep -qE '^[[:space:]]+workflow_dispatch:' "$dst"; then
              awk '{
                print;
                if ($0 ~ /^on:[[:space:]]*$/ && !ins){ print "  workflow_dispatch: {}"; ins=1 }
              }' "$dst" > "$dst.tmp" && mv "$dst.tmp" "$dst"
            fi
          fi

          echo "===== PATCHED FILE BEGIN ====="
          sed -n '1,120p' "$dst"
          echo "===== PATCHED FILE END ====="

          if ! grep -qE '^[[:space:]]+workflow_dispatch:' "$dst"; then
            echo "::error::Patch failed – brak workflow_dispatch w ${dst}"; exit 1
          fi

          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "$dst"
          git commit -m "maintenance-runner: ensure workflow_dispatch" || true
          git push || true

      - name: Trigger via API with retries
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          WF_FILE: ${{ github.event.inputs.workflow_file }}
        shell: bash
        run: |
          set -euo pipefail
          # poczekaj dłużej aż GitHub zindeksuje workflowa
          for i in {1..10}; do
            echo "[INFO] Attempt $i: checking workflow visibility..."
            # GET workflow meta (powinno zwrócić 200 i id)
            curl -sS -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${REPO}/actions/workflows/${WF_FILE}" | tee /tmp/wf.json
            if jq -e '.id' /tmp/wf.json >/dev/null 2>&1; then
              echo "[OK] workflow is indexed (id=$(jq -r .id /tmp/wf.json))"
            else
              echo "[WAIT] not indexed yet, sleeping 5s"; sleep 5; continue
            fi

            echo "[INFO] Dispatching..."
            RESP=$(mktemp)
            CODE=$(curl -sS -w "%{http_code}" -o "$RESP" -X POST \
              -H "Authorization: Bearer $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/${REPO}/actions/workflows/${WF_FILE}/dispatches" \
              -d "{\"ref\":\"${BRANCH}\"}")
            echo "HTTP $CODE"; cat "$RESP" || true
            if [ "$CODE" -eq 204 ]; then
              echo "::notice::Triggered ${WF_FILE}"
              exit 0
            fi

            echo "[WARN] dispatch failed (HTTP $CODE) – retry in 8s"
            sleep 8
          done
          echo "::error::Giving up after 10 attempts"; exit 1

      - name: Move back to _maintenance
        if: ${{ github.event.inputs.keep_active != 'yes' }}
        shell: bash
        run: |
          set -euo pipefail
          WF_DIR="${{ steps.val.outputs.dst_dir }}"
          WF_M_DIR="${{ steps.val.outputs.src_dir }}"
          NAME="${{ github.event.inputs.workflow_file }}"
          if [ -f "${WF_DIR}/${NAME}" ]; then
            mv -f "${WF_DIR}/${NAME}" "${WF_M_DIR}/${NAME}"
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "${WF_M_DIR}/${NAME}" "${WF_DIR}" || true
            git commit -m "maintenance-runner: move back ${NAME} to _maintenance" || true
            git push || true
          fi

      - name: Restore original content
        shell: bash
        run: |
          set -euo pipefail
          NAME="${{ github.event.inputs.workflow_file }}"
          M_PATH=".github/workflows._maintenance/${NAME}"
          if [ -f /tmp/original.yml ] && [ -f "$M_PATH" ]; then
            cp -f /tmp/original.yml "$M_PATH"
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "$M_PATH"
            git commit -m "maintenance-runner: restore original ${NAME}" || true
            git push || true
          fi

      - name: Done
        run: echo "::notice::Launched ${{ github.event.inputs.workflow_file }} (check Actions list)"
