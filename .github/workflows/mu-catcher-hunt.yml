name: mu_catcher_hunt

on:
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: mu-catcher-hunt
  cancel-in-progress: true

jobs:
  hunt:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: SSH — auto-detect WP root, nuke catcher, safe loader, OPcache reset
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.DEPLOY_HOST }}
          port:     ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASS }}
          command_timeout: 4m
          # Opcjonalnie możesz przekazać TARGET, ale NIE jest wymagany:
          envs: TARGET
          script: |
            set -eu

            echo "[INFO] whoami=$(whoami) host=$(hostname)"
            echo "[INFO] HOME=${HOME}  TARGET=${TARGET:-"(unset)"}"

            find_wp_root() {
              # 1) jeżeli podano TARGET i jest wp-config.php — użyj
              if [ -n "${TARGET:-}" ] && [ -f "${TARGET}/wp-config.php" ]; then
                printf '%s\n' "${TARGET}"; return 0
              fi

              # 2) typowe miejsca (Hostinger / cPanel / DirectAdmin itp.)
              CANDS="
              ${HOME}/public_html
              ${HOME}/www
              ${HOME}/htdocs
              ${HOME}/httpdocs
              ${HOME}/site/wwwroot
              "
              for d in $CANDS; do
                if [ -f "$d/wp-config.php" ]; then
                  printf '%s\n' "$d"; return 0
                fi
              done

              # 3) Hostinger domains/…/public_html
              if [ -d "${HOME}/domains" ]; then
                for d in "${HOME}"/domains/*/public_html; do
                  [ -d "$d" ] || continue
                  if [ -f "$d/wp-config.php" ]; then
                    printf '%s\n' "$d"; return 0
                  fi
                done
              fi

              # 4) Ostatecznie: znajdź względnie szybko wp-config.php w HOME (max 5 poziomów)
              WP=$(find "${HOME}" -maxdepth 5 -type f -name wp-config.php -printf '%h\n' 2>/dev/null | head -n 1 || true)
              if [ -n "${WP:-}" ] && [ -f "${WP}/wp-config.php" ]; then
                printf '%s\n' "$WP"; return 0
              fi

              return 1
            }

            ROOT="$(find_wp_root)" || { echo "::error::Nie mogę znaleźć katalogu WordPress (wp-config.php)"; exit 1; }
            cd "$ROOT"
            echo "[INFO] WP_ROOT=$ROOT"
            test -f wp-config.php || { echo "::error::Brak wp-config.php w $ROOT"; exit 1; }

            echo "== BEFORE (mu-plugins) =="
            ls -la wp-content/mu-plugins | head -n 200 || true

            # Pokaż hex/head catchera, jeśli istnieje
            if [ -f wp-content/mu-plugins/wtp-fatal-catcher.php ]; then
              echo "== CATCHER HEX HEAD =="
              (command -v xxd >/dev/null && xxd -g 1 -l 32 wp-content/mu-plugins/wtp-fatal-catcher.php) \
                || (head -c 64 wp-content/mu-plugins/wtp-fatal-catcher.php | od -An -tx1)
              echo "== CATCHER first lines =="
              sed -n '1,40p' wp-content/mu-plugins/wtp-fatal-catcher.php | nl -ba || true
            else
              echo "No direct wp-content/mu-plugins/wtp-fatal-catcher.php"
            fi

            echo "== Removing any wtp-fatal-catcher.php =="
            find wp-content/mu-plugins -type f -name 'wtp-fatal-catcher.php' -print -delete 2>/dev/null || true

            # Dodatkowe nazwy pasujące do "catcher"
            for f in $(find wp-content/mu-plugins -maxdepth 1 -type f -printf '%f\n' 2>/dev/null \
                       | grep -Ei '^wtp.*catcher.*\.php(\.off)?$' || true); do
              echo "Removing suspicious: $f"
              rm -f "wp-content/mu-plugins/$f" || true
            done

            # Wymuś sterylny 00-mu-safe-loader.php (ZERO BOM/wyjścia)
            mkdir -p wp-content/mu-plugins
            printf '%s\n' \
              '<?php' \
              'if (!defined("ABSPATH")) { exit; }' \
              'add_action("muplugins_loaded", static function () {' \
              '    // silence is golden' \
              '}, 0);' \
              > wp-content/mu-plugins/00-mu-safe-loader.php

            # Reset OPcache (jeśli aktywny)
            php -r 'if(function_exists("opcache_reset")){opcache_reset();echo "OPCACHE_RESET_OK\n";}else{echo "NO_OPCACHE\n";}'

            echo "== AFTER (mu-plugins) =="
            ls -la wp-content/mu-plugins | head -n 200 || true

            echo "== Grep includes referencing catcher (mu-plugins) =="
            (grep -RIn --color=never -E "wtp-.*fatal.*catcher.*\.php" wp-content/mu-plugins || true)

  scan:
    runs-on: ubuntu-latest
    needs: hunt
    timeout-minutes: 10
    steps:
      - name: SSH — scan mu-plugins heads for BOM/garbage
        uses: appleboy/ssh-action@v1.0.3
        with:
          host:     ${{ secrets.DEPLOY_HOST }}
          port:     ${{ secrets.DEPLOY_PORT }}
          username: ${{ secrets.DEPLOY_USER }}
          password: ${{ secrets.DEPLOY_PASS }}
          command_timeout: 3m
          envs: TARGET
          script: |
            set -eu

            # Lokalizacja WP (jak wyżej)
            find_wp_root() {
              if [ -n "${TARGET:-}" ] && [ -f "${TARGET}/wp-config.php" ]; then
                printf '%s\n' "${TARGET}"; return 0
              fi
              CANDS="
              ${HOME}/public_html
              ${HOME}/www
              ${HOME}/htdocs
              ${HOME}/httpdocs
              ${HOME}/site/wwwroot
              "
              for d in $CANDS; do
                if [ -f "$d/wp-config.php" ]; then printf '%s\n' "$d"; return 0; fi
              done
              if [ -d "${HOME}/domains" ]; then
                for d in "${HOME}"/domains/*/public_html; do
                  [ -d "$d" ] || continue
                  if [ -f "$d/wp-config.php" ]; then printf '%s\n' "$d"; return 0; fi
                done
              fi
              WP=$(find "${HOME}" -maxdepth 5 -type f -name wp-config.php -printf '%h\n' 2>/dev/null | head -n 1 || true)
              if [ -n "${WP:-}" ] && [ -f "${WP}/wp-config.php" ]; then printf '%s\n' "$WP"; return 0; fi
              return 1
            }

            ROOT="$(find_wp_root)" || { echo "::error::Nie mogę znaleźć katalogu WordPress (wp-config.php)"; exit 1; }
            cd "$ROOT"
            echo "[INFO] WP_ROOT=$ROOT"

            dir='wp-content/mu-plugins'
            [ -d "$dir" ] || { echo "No mu-plugins dir"; exit 0; }

            echo "== SCAN HEADS =="
            find "$dir" -maxdepth 1 -type f -name '*.php*' -print | while read -r f; do
              head3=$(head -c 3 "$f" | od -An -tx1 | tr -d ' \n')
              size=$(wc -c < "$f" 2>/dev/null || echo 0)
              if [ "$head3" != "3c3f70" ]; then
                echo "WARN: $f head=$(head -c 16 "$f" | od -An -tx1) size=$size"
                sed -n '1,5p' "$f" | nl -ba || true
              fi
            done
