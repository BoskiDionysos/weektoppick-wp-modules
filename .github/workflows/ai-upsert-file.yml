name: AI Upsert File

on:
  workflow_dispatch:
    inputs:
      path:
        description: 'Ścieżka pliku do utworzenia/aktualizacji'
        required: true
        type: string
      content_b64:
        description: 'Treść pliku w base64'
        required: true
        type: string
      message:
        description: 'Wiadomość commita'
        required: true
        type: string
      branch:
        description: 'Gałąź docelowa'
        required: true
        type: string
  repository_dispatch:
    types: [ai-upsert-file]

jobs:
  upsert:
    runs-on: ubuntu-latest
    steps:
      - name: Ustal dane wejściowe
        id: inputs
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "path=${{ github.event.inputs.path }}" >> $GITHUB_OUTPUT
            echo "content_b64=${{ github.event.inputs.content_b64 }}" >> $GITHUB_OUTPUT
            echo "message=${{ github.event.inputs.message }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.inputs.branch }}" >> $GITHUB_OUTPUT
          else
            echo "path=${{ github.event.client_payload.path }}" >> $GITHUB_OUTPUT
            echo "content_b64=${{ github.event.client_payload.content_b64 }}" >> $GITHUB_OUTPUT
            echo "message=${{ github.event.client_payload.message }}" >> $GITHUB_OUTPUT
            echo "branch=${{ github.event.client_payload.branch }}" >> $GITHUB_OUTPUT
          fi

      - name: Pobierz SHA (jeśli istnieje)
        id: sha
        run: |
          set -e
          API="https://api.github.com/repos/${{ github.repository }}/contents/${{ steps.inputs.outputs.path }}?ref=${{ steps.inputs.outputs.branch }}"
          SHA=$(curl -s -H "Authorization: token ${{ secrets.WTP_GITHUB_PAT || secrets.GITHUB_TOKEN }}" "$API" | jq -r '.sha // empty')
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Utwórz/aktualizuj plik
        run: |
          API="https://api.github.com/repos/${{ github.repository }}/contents/${{ steps.inputs.outputs.path }}"
          BODY=$(jq -n \
            --arg msg "${{ steps.inputs.outputs.message }}" \
            --arg b64 "${{ steps.inputs.outputs.content_b64 }}" \
            --arg branch "${{ steps.inputs.outputs.branch }}" \
            --arg sha "${{ steps.sha.outputs.sha }}" \
            '{
              message: $msg,
              content: $b64,
              branch: $branch
            } + (if $sha != "" then {sha: $sha} else {} end)')
          echo "Upsert file: ${{ steps.inputs.outputs.path }}"
          curl -s -X PUT -H "Authorization: token ${{ secrets.WTP_GITHUB_PAT || secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$BODY" \
            "$API" | tee response.json
          cat response.json | jq -r '.commit.sha'
