name: Export GH Digest (full repo snapshot for diagnostics)

on:
  push:
    branches: [ main ]
    paths:
      - 'mu-plugins/**'
      - 'plugins/**'
      - 'themes/**'
      - 'wp-content/themes/**'
      - '.github/workflows/**'
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    env:
      HOST:     ${{ secrets.DEPLOY_HOST }}
      PORT:     ${{ secrets.DEPLOY_PORT }}
      USER:     ${{ secrets.DEPLOY_USER }}
      PASS:     ${{ secrets.DEPLOY_PASS }}
      TARGET:   ${{ secrets.DEPLOY_TARGET }}
      SITE_KEY: ${{ secrets.WTP_SITE_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure tools
        shell: bash
        run: |
          set -e
          for i in {1..3}; do
            sudo apt-get update -y && sudo apt-get install -y jq sshpass && break || sleep 5
          done

      - name: Build digest JSON
        id: digest
        shell: bash
        run: |
          set -euo pipefail

          make_list () {
            local root="$1"
            [ -d "$root" ] || { echo "[]"; return; }
            mapfile -d '' files < <(cd "$root" && find . -type f -print0 | LC_ALL=C sort -z)
            local arr="[]"
            for rel in "${files[@]}"; do
              rel="${rel#./}"
              local fpath="${root%/}/$rel"
              local size sha last last_hash last_ts
              size=$(stat -c%s "$fpath" 2>/dev/null || echo 0)
              sha=$(sha256sum "$fpath" 2>/dev/null | awk '{print $1}')
              last="$(git log -1 --format='%h %ct' -- "$fpath" 2>/dev/null || true)"
              last_hash=$(echo "$last" | awk '{print $1}')
              last_ts=$(echo "$last"  | awk '{print $2}')
              item=$(jq -n \
                --arg path "$rel" \
                --argjson size "${size:-0}" \
                --arg sha256 "${sha:-}" \
                --arg last_hash "${last_hash:-}" \
                --argjson last_ts "${last_ts:-0}" \
                '{path:$path,size:$size,sha256:$sha256,last_commit:{hash:$last_hash,ts:$last_ts}}')
              arr=$(jq -c --argjson it "$item" '. + [$it]' <<<"$arr")
            done
            echo "$arr"
          }

          mu_plugins=$(make_list "mu-plugins")
          plugins=$(make_list "plugins")
          themes=$(make_list "themes")
          wp_themes=$(make_list "wp-content/themes")
          workflows=$(make_list ".github/workflows")

          head_hash="$(git rev-parse HEAD)"
          head_ts="$(git log -1 --format='%ct' || echo 0)"
          repo="${{ github.repository }}"
          branch="${{ github.ref_name }}"
          gen_time="$(date -u +%FT%TZ)"

          jq -n \
            --arg repo "$repo" \
            --arg branch "$branch" \
            --arg head "$head_hash" \
            --argjson head_ts "${head_ts:-0}" \
            --arg site_key "${SITE_KEY:-}" \
            --arg target "${TARGET:-}" \
            --arg host   "${HOST:-}" \
            --arg port   "${PORT:-}" \
            --arg user   "${USER:-}" \
            --arg time   "$gen_time" \
            --argjson mu   "$mu_plugins" \
            --argjson plg  "$plugins" \
            --argjson thm  "$themes" \
            --argjson wpt  "$wp_themes" \
            --argjson wfs  "$workflows" \
            '{
              meta:{ repo:$repo, branch:$branch, head:$head, head_ts:$head_ts, generated_at:$time },
              deploy:{ host:$host, port:$port, target:$target, user:$user },
              site_key:$site_key,
              trees:{ mu_plugins:$mu, plugins:$plg, themes:$thm, wp_content_themes:$wpt, workflows:$wfs }
            }' > gh-digest.json

          echo "Built gh-digest.json:"
          jq -C '.meta, {counts:{
              mu: .trees.mu_plugins|length,
              plg:.trees.plugins|length,
              thm:.trees.themes|length,
              wpt:.trees.wp_content_themes|length,
              wfs:.trees.workflows|length
          }}' gh-digest.json || true

      - name: Upload digest to snapshot folder (SFTP)
        if: ${{ env.HOST != '' && env.USER != '' && env.PASS != '' && env.TARGET != '' && env.SITE_KEY != '' }}
        shell: bash
        run: |
          set -euo pipefail
          REMOTE_DIR="$TARGET/wp-content/uploads/wtp-ro/public/$SITE_KEY"
          echo "Remote dir: $REMOTE_DIR"
          sshpass -p "$PASS" ssh -p "$PORT" -o StrictHostKeyChecking=no "$USER@$HOST" "mkdir -p '$REMOTE_DIR'"
          sshpass -p "$PASS" scp -P "$PORT" -o StrictHostKeyChecking=no gh-digest.json "$USER@$HOST:$REMOTE_DIR/gh-digest.json"

      - name: Upload artifact (for inspection)
        uses: actions/upload-artifact@v4
        with:
          name: gh-digest
          path: gh-digest.json
          retention-days: 7
