name: Generate/Update manifest.json

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup jq
        run: sudo apt-get install -y jq

      - name: Prepare manifest.json
        run: |
          # jeśli brak pliku - stwórz pusty szkielet
          if [ ! -f manifest.json ]; then
            echo '{ "plugins": [] }' > manifest.json
          fi

          # kopia obecnego
          cp manifest.json old_manifest.json

          # generuj nową listę
          tmpfile=$(mktemp)
          cp old_manifest.json $tmpfile

          for f in *.zip; do
            name="${f%.zip}"
            url="https://raw.githubusercontent.com/${{ github.repository }}/main/$f"
            version="1.0.0"

            # sprawdź czy plugin już istnieje
            exists=$(jq --arg n "$name" '.plugins[] | select(.name==$n)' $tmpfile)

            if [ -z "$exists" ]; then
              # dodaj nowy plugin
              jq --arg n "$name" --arg u "$url" --arg v "$version" \
                 '.plugins += [{"name":$n,"url":$u,"version":$v}]' $tmpfile > tmp.json && mv tmp.json $tmpfile
            else
              # zaktualizuj istniejący (url, version)
              jq --arg n "$name" --arg u "$url" --arg v "$version" \
                 '(.plugins[] | select(.name==$n)) |= . + {"url":$u,"version":$v}' $tmpfile > tmp.json && mv tmp.json $tmpfile
            fi
          done

          mv $tmpfile manifest.json
          cat manifest.json

      - name: Commit manifest.json
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add manifest.json
          git commit -m "Update manifest.json [auto]" || echo "No changes"
          git push
