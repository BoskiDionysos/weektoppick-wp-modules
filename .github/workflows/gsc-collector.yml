name: collect

on:
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install tools (jq, curl)
        run: sudo apt-get update && sudo apt-get install -y jq curl

      - name: Authenticate to Google (service account JSON)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.WTP_GSC_KEY }}
          access_token_scopes: https://www.googleapis.com/auth/webmasters.readonly
          create_credentials_file: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Get access token
        id: gcloud-auth
        run: |
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo "token=$ACCESS_TOKEN" >> $GITHUB_OUTPUT

      - name: Define property (site)
        id: gsc-site
        run: echo "site=${{ secrets.WTP_GSC_SITE }}" >> $GITHUB_OUTPUT

      - name: Query GSC Search Analytics (last 7 days)
        id: gsc-query
        run: |
          set -euo pipefail
          END_DATE=$(date -u +"%Y-%m-%d")
          START_DATE=$(date -u -d "$END_DATE - 7 days" +"%Y-%m-%d")

          RESPONSE=$(curl -s -X POST \
            -H "Authorization: Bearer ${{ steps.gcloud-auth.outputs.token }}" \
            -H "Content-Type: application/json" \
            "https://searchconsole.googleapis.com/v1/sites/${{ steps.gsc-site.outputs.site }}/searchAnalytics/query" \
            -d "{
              \"startDate\": \"$START_DATE\",
              \"endDate\": \"$END_DATE\",
              \"dimensions\": [\"query\"],
              \"rowLimit\": 20
            }")

          echo "$RESPONSE" | jq . > gsc-output.json

          if echo "$RESPONSE" | jq -e '.error' > /dev/null; then
            echo "Error: GSC API returned an error"
            cat gsc-output.json
            exit 1
          fi

      - name: Build GSC summary
        if: success()
        run: |
          echo "### Google Search Console Report" > summary.md
          jq -r '.rows[] | "- \(.keys[0]): Clicks=\(.clicks), Impressions=\(.impressions)"' gsc-output.json >> summary.md
          cat summary.md

      - name: Flag Bridge availability (safe check)
        if: success()
        run: |
          if [ -n "${{ secrets.WTP_BRIDGE_KEY || '' }}" ] && [ -n "${{ secrets.WTP_BRIDGE_HMAC || '' }}" ]; then
            echo "bridge=ok" >> $GITHUB_ENV
          else
            echo "bridge=skip" >> $GITHUB_ENV
          fi

      - name: POST summary to WP (only when Bridge secrets present)
        if: env.bridge == 'ok'
        run: |
          BODY=$(jq -Rs . < summary.md)
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          SIGNATURE=$(echo -n "$TIMESTAMP$BODY" | openssl dgst -sha256 -hmac "${{ secrets.WTP_BRIDGE_HMAC }}" | sed 's/^.* //')
          curl -X POST "${{ secrets.WTP_BRIDGE_URL }}" \
            -H "X-WTP-Key: ${{ secrets.WTP_BRIDGE_KEY }}" \
            -H "X-WTP-Signature: $SIGNATURE" \
            -H "X-WTP-Timestamp: $TIMESTAMP" \
            -H "Content-Type: application/json" \
            -d "{\"report\": $BODY}"

      - name: Upload artifacts (GSC raw + summary)
        uses: actions/upload-artifact@v4
        with:
          name: gsc-report
          path: |
            gsc-output.json
            summary.md
