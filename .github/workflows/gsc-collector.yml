name: collect

on:
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq curl

      - name: Auth to Google (service account)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.WTP_GSC_KEY }}
          access_token_scopes: https://www.googleapis.com/auth/webmasters.readonly
          create_credentials_file: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Get access token
        id: token
        run: |
          echo "token=$(gcloud auth print-access-token)" >> $GITHUB_OUTPUT

      - name: Define site (property)
        id: site
        run: |
          SITE="${{ secrets.WTP_GSC_SITE }}"
          if [ -z "$SITE" ]; then
            SITE="sc-domain:weektoppick.com"
          fi
          echo "site=$SITE" >> $GITHUB_OUTPUT
          # URL-encode (np. sc-domain:weektoppick.com -> sc-domain%3Aweektoppick.com)
          SITE_ENC=$(printf '%s' "$SITE" | jq -sRr @uri)
          echo "site_enc=$SITE_ENC" >> $GITHUB_OUTPUT

      - name: Query GSC Search Analytics (last 7 days)
        id: gsc
        env:
          TOKEN: ${{ steps.token.outputs.token }}
          SITE_ENC: ${{ steps.site.outputs.site_enc }}
        run: |
          set -euo pipefail

          END=$(date -u +%Y-%m-%d)
          START=$(date -u -d "$END -7 days" +%Y-%m-%d)

          jq -n --arg s "$START" --arg e "$END" \
                '{startDate:$s, endDate:$e, dimensions:["query","page"], rowLimit:2500}' > body.json

          CODE=$(curl -sS -o gsc-raw.json -w "%{http_code}" \
            -H "Authorization: Bearer $TOKEN" \
            -H "Content-Type: application/json" \
            -X POST "https://searchconsole.googleapis.com/webmasters/v3/sites/${SITE_ENC}/searchAnalytics/query" \
            --data-binary @body.json)

          echo "HTTP=$CODE"
          if [ "$CODE" -lt 200 ] || [ "$CODE" -ge 300 ]; then
            echo "==== GSC ERROR BODY ===="
            # pokaż do logu (przytnij, gdyby to był HTML)
            head -c 5000 gsc-raw.json || true
            echo "========================"
            exit 1
          fi

          # walidacja JSON
          jq . gsc-raw.json > /dev/null

      - name: Build summary
        run: |
          ROWS=$(jq '.rows|length // 0' gsc-raw.json)
          echo "Wierszy: $ROWS"
          {
            echo "### Google Search Console – top queries (7d)"
            jq -r '.rows[0:20][]? | "- \(.keys[0]) | page=\(.keys[1]) | clicks=\(.clicks) | imp=\(.impressions)"' gsc-raw.json
          } > summary.md
          cat summary.md

      - name: Flag Bridge availability
        run: |
          if [ -n "${{ secrets.WTP_BRIDGE_KEY }}" ] && [ -n "${{ secrets.WTP_BRIDGE_HMAC }}" ] && [ -n "${{ secrets.RUNNER_URL }}" ]; then
            echo "BRIDGE=ok" >> $GITHUB_ENV
          else
            echo "BRIDGE=skip" >> $GITHUB_ENV
          fi

      - name: POST summary to WP (only when Bridge secrets present)
        if: env.BRIDGE == 'ok'
        env:
          BRIDGE_KEY:  ${{ secrets.WTP_BRIDGE_KEY }}
          BRIDGE_HMAC: ${{ secrets.WTP_BRIDGE_HMAC }}
          BASE:        ${{ secrets.RUNNER_URL }}
        run: |
          set -euo pipefail
          BASE="${BASE%%/}"
          PATHONLY="/wp-json/wtp/v1/runner/ingest"
          BODY=$(jq -Rs . < summary.md)
          TS=$(date -u +%s)
          # podpis: (TS \n POST \n PATH \n BODY)
          SIG=$(printf "%s\nPOST\n%s\n%s" "$TS" "$PATHONLY" "$(cat summary.md)" \
              | openssl dgst -sha256 -hmac "$BRIDGE_HMAC" -binary | xxd -p -c 256)

          curl -sS -X POST "${BASE}${PATHONLY}" \
            -H "Content-Type: application/json" \
            -H "X-WTP-Key: ${BRIDGE_KEY}" \
            -H "X-WTP-Timestamp: ${TS}" \
            -H "X-WTP-Signature: ${SIG}" \
            --data-binary "{\"report\": $(cat summary.md | jq -Rs .)}"

      - name: Upload artifacts (raw + summary)
        uses: actions/upload-artifact@v4
        with:
          name: gsc-data
          path: |
            body.json
            gsc-raw.json
            summary.md
          retention-days: 7
