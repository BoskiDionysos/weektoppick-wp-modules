name: GSC collector

on:
  workflow_dispatch:
  schedule:
    - cron: "12 6 * * *"  # ustaw po swojemu (UTC)

permissions:
  id-token: write
  contents: read

env:
  # ðŸ”§ ZMIEÅƒ, jeÅ›li u Ciebie majÄ… inne identyfikatory:
  GCP_WIP_PROVIDER: projects/760942758973/locations/global/workloadIdentityPools/github-pool/providers/github-actions
  GCP_SERVICE_ACCOUNT: wtp-gsc-collector@weektoppick.iam.gserviceaccount.com

  # z repo secret
  GSC_SITE: ${{ secrets.WTP_GSC_SITE }}

jobs:
  gsc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google (OIDC)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.GCP_WIP_PROVIDER }}
          service_account: ${{ env.GCP_SERVICE_ACCOUNT }}
          create_credentials_file: true
          export_environment_variables: true

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Query GSC Search Analytics (last 7 days)
        shell: bash
        run: |
          set -euo pipefail
          sudo apt-get update -y >/dev/null
          sudo apt-get install -y jq curl >/dev/null

          START=$(date -u -d '7 days ago' +%Y-%m-%d)
          END=$(date -u -d '1 day ago' +%Y-%m-%d)

          BODY=$(jq -n --arg start "$START" --arg end "$END" \
                 '{startDate:$start, endDate:$end, dimensions:["query","page"], rowLimit:2500}')

          ACCESS_TOKEN=$(gcloud auth application-default print-access-token \
                           --scopes=https://www.googleapis.com/auth/webmasters.readonly)

          URL="https://searchconsole.googleapis.com/webmasters/v3/sites/${GSC_SITE}/searchAnalytics/query"

          echo "SITE: ${GSC_SITE}"
          HTTP=$(curl -sS -o gsc-raw.json -w "%{http_code}" \
                   -X POST "$URL" \
                   -H "Authorization: Bearer ${ACCESS_TOKEN}" \
                   -H "Content-Type: application/json" \
                   --data-binary "$BODY")
          echo "HTTP=${HTTP}"
          if [ "$HTTP" -ge 400 ]; then
            echo "==== GSC error body (trimmed) ===="
            sed -n '1,200p' gsc-raw.json || true
            exit 1
          fi

          jq . gsc-raw.json > gsc-raw.pretty.json
          echo "OK â€“ zapisano gsc-raw.json i gsc-raw.pretty.json"

      - name: Upload artifacts (raw + pretty)
        uses: actions/upload-artifact@v4
        with:
          name: gsc-response
          path: |
            gsc-raw.json
            gsc-raw.pretty.json
