name: GSC Collector

on:
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest

    # potrzebne do OIDC
    permissions:
      contents: read
      id-token: write

    env:
      # ðŸ‘‰ sekret z GSC: np. sc-domain:weektoppick.com
      GSC_SITE: ${{ secrets.WTP_GSC_SITE }}
      # ðŸ‘‰ nazwa Twojego serwisowego konta w GCP
      GCP_SA_EMAIL: wtp-gsc-collector@weektoppick.iam.gserviceaccount.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google (OIDC)
        id: google-auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.GCP_SA_EMAIL }}
          # KLUCZOWE: chcemy access token z odpowiednim scope
          token_format: access_token
          access_token_scopes: https://www.googleapis.com/auth/webmasters.readonly

      - name: Setup gcloud (dla wygody narzÄ™dzi)
        uses: google-github-actions/setup-gcloud@v2

      - name: Query GSC Search Analytics (last 7 days)
        env:
          ACCESS_TOKEN: ${{ steps.google-auth.outputs.access_token }}
        shell: bash
        run: |
          set -euo pipefail

          # Daty
          START=$(date -u -d '7 days ago' +%Y-%m-%d)
          END=$(date -u -d '1 day ago' +%Y-%m-%d)

          # URL-encode property (np. "sc-domain:weektoppick.com")
          SITE_ENC=$(jq -rn --arg s "$GSC_SITE" '$s|@uri')

          # Body zapytania
          BODY=$(jq -n --arg start "$START" --arg end "$END" '{
            startDate: $start,
            endDate:   $end,
            dimensions: ["query","page"],
            rowLimit: 2500
          }')

          URL="https://searchconsole.googleapis.com/webmasters/v3/sites/${SITE_ENC}/searchAnalytics/query"

          echo "SITE: $GSC_SITE"
          echo "URL:  $URL"

          code=$(curl -sS -o gsc-raw.json -w "%{http_code}" \
            -H "Authorization: Bearer ${ACCESS_TOKEN}" \
            -H "Content-Type: application/json" \
            -X POST "$URL" \
            --data-binary "$BODY")

          echo "HTTP=$code"
          if [ "$code" -ge 400 ]; then
            echo "==== GSC error body (trimmed) ===="
            sed -n '1,120p' gsc-raw.json
            exit 1
          fi

          # Prosty podglÄ…d liczby rekordÃ³w
          jq '.rows | length' gsc-raw.json || true

      - name: Upload artifacts (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gsc-raw
          path: gsc-raw.json
