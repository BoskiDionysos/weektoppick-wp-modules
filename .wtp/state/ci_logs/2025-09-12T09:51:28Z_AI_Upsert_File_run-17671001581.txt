Workflow: AI Upsert File
Run ID:   17671001581
Event:    workflow_dispatch
Status:   failure
Commit:   df416e4e5672e1fb0e493c783af29fd8f3a391ef
----- CONCATENATED JOB LOGS -----

==== .wtp/state/ci_logs/2025-09-12T09:51:28Z_AI_Upsert_File_run-17671001581/0_upsert.txt ====
﻿2025-09-12T09:51:22.8219129Z Current runner version: '2.328.0'
2025-09-12T09:51:22.8243111Z ##[group]Runner Image Provisioner
2025-09-12T09:51:22.8244024Z Hosted Compute Agent
2025-09-12T09:51:22.8244595Z Version: 20250829.383
2025-09-12T09:51:22.8245177Z Commit: 27cb235aab5b0e52e153a26cd86b4742e89dac5d
2025-09-12T09:51:22.8246145Z Build Date: 2025-08-29T13:48:48Z
2025-09-12T09:51:22.8246772Z ##[endgroup]
2025-09-12T09:51:22.8247309Z ##[group]Operating System
2025-09-12T09:51:22.8247946Z Ubuntu
2025-09-12T09:51:22.8248429Z 24.04.3
2025-09-12T09:51:22.8248861Z LTS
2025-09-12T09:51:22.8249387Z ##[endgroup]
2025-09-12T09:51:22.8249868Z ##[group]Runner Image
2025-09-12T09:51:22.8250464Z Image: ubuntu-24.04
2025-09-12T09:51:22.8251042Z Version: 20250907.24.1
2025-09-12T09:51:22.8252054Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250907.24/images/ubuntu/Ubuntu2404-Readme.md
2025-09-12T09:51:22.8253697Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250907.24
2025-09-12T09:51:22.8254753Z ##[endgroup]
2025-09-12T09:51:22.8255914Z ##[group]GITHUB_TOKEN Permissions
2025-09-12T09:51:22.8257741Z Contents: write
2025-09-12T09:51:22.8258313Z Metadata: read
2025-09-12T09:51:22.8258861Z ##[endgroup]
2025-09-12T09:51:22.8261307Z Secret source: Actions
2025-09-12T09:51:22.8261990Z Prepare workflow directory
2025-09-12T09:51:22.8581611Z Prepare all required actions
2025-09-12T09:51:22.8638247Z Getting action download info
2025-09-12T09:51:23.2934581Z Download action repository 'actions/github-script@v7' (SHA:f28e40c7f34bde8b3046d885e986cb6290c5673b)
2025-09-12T09:51:24.0232359Z Complete job name: upsert
2025-09-12T09:51:24.1013152Z ##[group]Run actions/github-script@v7
2025-09-12T09:51:24.1014089Z with:
2025-09-12T09:51:24.1014783Z   github-token: ***
2025-09-12T09:51:24.1029207Z   script: const crypto = require('crypto');
const ev = context.eventName;

let path = '', message = '', branch = 'main', content_b64 = '', content_plain = '', sha256 = '';

if (ev === 'workflow_dispatch') {
  const inp = context.payload?.inputs || {};
  path          = (inp.path || '').trim();
  message       = (inp.message || '').trim();
  branch        = (inp.branch || 'main').trim();
  content_b64   = (inp.content_b64 || '').trim();
  content_plain = (inp.content_plain || '').trim();
  sha256        = (inp.sha256 || '').trim().toLowerCase();
} else if (ev === 'repository_dispatch') {
  const p = context.payload?.client_payload || {};
  path          = (p.path || '').trim();
  message       = (p.message || '').trim();
  branch        = (p.branch || 'main').trim();
  content_b64   = (p.content_b64 || '').trim();
  content_plain = (p.content_plain || '').trim();
  sha256        = (p.sha256 || '').trim().toLowerCase();
} else {
  core.setFailed(`Unsupported event: ${ev}`); return;
}

core.info(`event=${ev}`);
core.info(`path="${path}", branch="${branch}"`);
core.info(`has_plain=${content_plain !== ''}, has_b64=${content_b64 !== ''}`);

if (!path)    return core.setFailed('Input "path" is required.');
if (!message) return core.setFailed('Input "message" is required.');
if (path.startsWith('/')) return core.setFailed('Path musi być repo-relative (bez wiodącego "/").');

const both = (content_plain !== '' && content_b64 !== '');
const none = (content_plain === '' && content_b64 === '');
if (both || none) return core.setFailed('Podaj dokładnie jedno: content_plain ALBO content_b64.');

let buf;
if (content_b64) {
  try { buf = Buffer.from(content_b64, 'base64'); if (buf.toString('base64') !== content_b64) throw 0; }
  catch { return core.setFailed('content_b64 nie jest prawidłowym Base64.'); }
} else {
  buf = Buffer.from(content_plain, 'utf8');
  content_b64 = buf.toString('base64');
}

if (sha256) {
  const calc = crypto.createHash('sha256').update(buf).digest('hex');
  core.info(`sha256(user)=${sha256}`);
  core.info(`sha256(calc)=${calc}`);
  if (calc !== sha256) return core.setFailed('SHA-256 mismatch treści.');
}

const { owner, repo } = context.repo;

// read existing sha if any
let sha;
try {
  const { data } = await github.request('GET /repos/{owner}/{repo}/contents/{path}', {
    owner, repo, path, ref: branch,
  });
  sha = data?.sha || undefined;
  core.info(`Existing sha=${sha || '(new file)'}`);
} catch (e) {
  if (e.status !== 404) return core.setFailed(`getContent failed: ${e.message}`);
  core.info('File does not exist (creating).');
}

try {
  const res = await github.request('PUT /repos/{owner}/{repo}/contents/{path}', {
    owner, repo, path, message, branch, content: content_b64, sha
  });
  const commitSha = res.data.commit?.sha || '';
  await core.summary
    .addHeading('AI Upsert File')
    .addTable([
      [{data:'Field',header:true},{data:'Value',header:true}],
      ['path', path],
      ['branch', branch],
      ['commit', commitSha],
      ['verified_sha256', sha256 ? 'yes' : 'no']
    ])
    .write();
  core.info(`OK: commit ${commitSha}`);
} catch (e) {
  core.setFailed(`PUT failed: ${e.message}`);
}

2025-09-12T09:51:24.1043966Z   debug: false
2025-09-12T09:51:24.1044419Z   user-agent: actions/github-script
2025-09-12T09:51:24.1044964Z   result-encoding: json
2025-09-12T09:51:24.1045415Z   retries: 0
2025-09-12T09:51:24.1046007Z   retry-exempt-status-codes: 400,401,403,404,422
2025-09-12T09:51:24.1046981Z ##[endgroup]
2025-09-12T09:51:24.1976505Z event=workflow_dispatch
2025-09-12T09:51:24.1977375Z path=".github/workflows/wpcli-allowed-plugins.yml", branch="main"
2025-09-12T09:51:24.1978116Z has_plain=true, has_b64=false
2025-09-12T09:51:24.4839619Z Existing sha=46553719e89eb08d8d17dd1add016831a1df2618
2025-09-12T09:51:24.9173308Z ##[error]PUT failed: refusing to allow a Personal Access Token to create or update workflow `.github/workflows/wpcli-allowed-plugins.yml` without `workflow` scope
2025-09-12T09:51:24.9340257Z Cleaning up orphan processes

==== .wtp/state/ci_logs/2025-09-12T09:51:28Z_AI_Upsert_File_run-17671001581/upsert/1_Set up job.txt ====
﻿2025-09-12T09:51:22.8218189Z Current runner version: '2.328.0'
2025-09-12T09:51:22.8243086Z ##[group]Runner Image Provisioner
2025-09-12T09:51:22.8244019Z Hosted Compute Agent
2025-09-12T09:51:22.8244592Z Version: 20250829.383
2025-09-12T09:51:22.8245173Z Commit: 27cb235aab5b0e52e153a26cd86b4742e89dac5d
2025-09-12T09:51:22.8246140Z Build Date: 2025-08-29T13:48:48Z
2025-09-12T09:51:22.8246770Z ##[endgroup]
2025-09-12T09:51:22.8247306Z ##[group]Operating System
2025-09-12T09:51:22.8247942Z Ubuntu
2025-09-12T09:51:22.8248426Z 24.04.3
2025-09-12T09:51:22.8248859Z LTS
2025-09-12T09:51:22.8249384Z ##[endgroup]
2025-09-12T09:51:22.8249865Z ##[group]Runner Image
2025-09-12T09:51:22.8250461Z Image: ubuntu-24.04
2025-09-12T09:51:22.8251040Z Version: 20250907.24.1
2025-09-12T09:51:22.8252051Z Included Software: https://github.com/actions/runner-images/blob/ubuntu24/20250907.24/images/ubuntu/Ubuntu2404-Readme.md
2025-09-12T09:51:22.8253487Z Image Release: https://github.com/actions/runner-images/releases/tag/ubuntu24%2F20250907.24
2025-09-12T09:51:22.8254750Z ##[endgroup]
2025-09-12T09:51:22.8255910Z ##[group]GITHUB_TOKEN Permissions
2025-09-12T09:51:22.8257722Z Contents: write
2025-09-12T09:51:22.8258310Z Metadata: read
2025-09-12T09:51:22.8258858Z ##[endgroup]
2025-09-12T09:51:22.8261287Z Secret source: Actions
2025-09-12T09:51:22.8261986Z Prepare workflow directory
2025-09-12T09:51:22.8581580Z Prepare all required actions
2025-09-12T09:51:22.8638218Z Getting action download info
2025-09-12T09:51:23.2934547Z Download action repository 'actions/github-script@v7' (SHA:f28e40c7f34bde8b3046d885e986cb6290c5673b)
2025-09-12T09:51:24.0232315Z Complete job name: upsert

==== .wtp/state/ci_logs/2025-09-12T09:51:28Z_AI_Upsert_File_run-17671001581/upsert/2_Upsert file (UI or repository_dispatch).txt ====
﻿2025-09-12T09:51:24.1013115Z ##[group]Run actions/github-script@v7
2025-09-12T09:51:24.1014077Z with:
2025-09-12T09:51:24.1014779Z   github-token: ***
2025-09-12T09:51:24.1028914Z   script: const crypto = require('crypto');
const ev = context.eventName;

let path = '', message = '', branch = 'main', content_b64 = '', content_plain = '', sha256 = '';

if (ev === 'workflow_dispatch') {
  const inp = context.payload?.inputs || {};
  path          = (inp.path || '').trim();
  message       = (inp.message || '').trim();
  branch        = (inp.branch || 'main').trim();
  content_b64   = (inp.content_b64 || '').trim();
  content_plain = (inp.content_plain || '').trim();
  sha256        = (inp.sha256 || '').trim().toLowerCase();
} else if (ev === 'repository_dispatch') {
  const p = context.payload?.client_payload || {};
  path          = (p.path || '').trim();
  message       = (p.message || '').trim();
  branch        = (p.branch || 'main').trim();
  content_b64   = (p.content_b64 || '').trim();
  content_plain = (p.content_plain || '').trim();
  sha256        = (p.sha256 || '').trim().toLowerCase();
} else {
  core.setFailed(`Unsupported event: ${ev}`); return;
}

core.info(`event=${ev}`);
core.info(`path="${path}", branch="${branch}"`);
core.info(`has_plain=${content_plain !== ''}, has_b64=${content_b64 !== ''}`);

if (!path)    return core.setFailed('Input "path" is required.');
if (!message) return core.setFailed('Input "message" is required.');
if (path.startsWith('/')) return core.setFailed('Path musi być repo-relative (bez wiodącego "/").');

const both = (content_plain !== '' && content_b64 !== '');
const none = (content_plain === '' && content_b64 === '');
if (both || none) return core.setFailed('Podaj dokładnie jedno: content_plain ALBO content_b64.');

let buf;
if (content_b64) {
  try { buf = Buffer.from(content_b64, 'base64'); if (buf.toString('base64') !== content_b64) throw 0; }
  catch { return core.setFailed('content_b64 nie jest prawidłowym Base64.'); }
} else {
  buf = Buffer.from(content_plain, 'utf8');
  content_b64 = buf.toString('base64');
}

if (sha256) {
  const calc = crypto.createHash('sha256').update(buf).digest('hex');
  core.info(`sha256(user)=${sha256}`);
  core.info(`sha256(calc)=${calc}`);
  if (calc !== sha256) return core.setFailed('SHA-256 mismatch treści.');
}

const { owner, repo } = context.repo;

// read existing sha if any
let sha;
try {
  const { data } = await github.request('GET /repos/{owner}/{repo}/contents/{path}', {
    owner, repo, path, ref: branch,
  });
  sha = data?.sha || undefined;
  core.info(`Existing sha=${sha || '(new file)'}`);
} catch (e) {
  if (e.status !== 404) return core.setFailed(`getContent failed: ${e.message}`);
  core.info('File does not exist (creating).');
}

try {
  const res = await github.request('PUT /repos/{owner}/{repo}/contents/{path}', {
    owner, repo, path, message, branch, content: content_b64, sha
  });
  const commitSha = res.data.commit?.sha || '';
  await core.summary
    .addHeading('AI Upsert File')
    .addTable([
      [{data:'Field',header:true},{data:'Value',header:true}],
      ['path', path],
      ['branch', branch],
      ['commit', commitSha],
      ['verified_sha256', sha256 ? 'yes' : 'no']
    ])
    .write();
  core.info(`OK: commit ${commitSha}`);
} catch (e) {
  core.setFailed(`PUT failed: ${e.message}`);
}

2025-09-12T09:51:24.1043953Z   debug: false
2025-09-12T09:51:24.1044414Z   user-agent: actions/github-script
2025-09-12T09:51:24.1044960Z   result-encoding: json
2025-09-12T09:51:24.1045411Z   retries: 0
2025-09-12T09:51:24.1046002Z   retry-exempt-status-codes: 400,401,403,404,422
2025-09-12T09:51:24.1046963Z ##[endgroup]
2025-09-12T09:51:24.1976442Z event=workflow_dispatch
2025-09-12T09:51:24.1977367Z path=".github/workflows/wpcli-allowed-plugins.yml", branch="main"
2025-09-12T09:51:24.1978111Z has_plain=true, has_b64=false
2025-09-12T09:51:24.4839520Z Existing sha=46553719e89eb08d8d17dd1add016831a1df2618
2025-09-12T09:51:24.9172962Z ##[error]PUT failed: refusing to allow a Personal Access Token to create or update workflow `.github/workflows/wpcli-allowed-plugins.yml` without `workflow` scope

==== .wtp/state/ci_logs/2025-09-12T09:51:28Z_AI_Upsert_File_run-17671001581/upsert/3_Complete job.txt ====
﻿2025-09-12T09:51:24.9340238Z Cleaning up orphan processes

==== .wtp/state/ci_logs/2025-09-12T09:51:28Z_AI_Upsert_File_run-17671001581/upsert/system.txt ====
2025-09-12T09:51:16.8790000Z Job is about to start running on the hosted runner: GitHub Actions 1000002068
2025-09-12T09:51:16.8630000Z Requested labels: ubuntu-latest
2025-09-12T09:51:16.8630000Z Job defined at: BoskiDionysos/weektoppick-wp-modules/.github/workflows/ai-upsert-file.yml@refs/heads/main
2025-09-12T09:51:16.8630000Z Waiting for a runner to pick up this job...
2025-09-12T09:51:16.8780000Z Job is waiting for a hosted runner to come online.